<Type Name="Utf8JsonWriter" FullName="System.Text.Json.Utf8JsonWriter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="034cf5e0f42e28ed370f3808a6f6cc66720c30a5" /><Meta Name="ms.sourcegitcommit" Value="ef1f0c8985003a14413f66c3de381b8f3b6e4436" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="05/30/2019" /><Meta Name="ms.locfileid" Value="66381209" /></Metadata><TypeSignature Language="C#" Value="public sealed class Utf8JsonWriter : IAsyncDisposable, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit Utf8JsonWriter extends System.Object implements class System.IAsyncDisposable, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Text.Json.Utf8JsonWriter" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class Utf8JsonWriter&#xA;Implements IAsyncDisposable, IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class Utf8JsonWriter sealed : IAsyncDisposable, IDisposable" />
  <TypeSignature Language="F#" Value="type Utf8JsonWriter = class&#xA;    interface IDisposable&#xA;    interface IAsyncDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Text.Json</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
    <BaseTypeName FrameworkAlternate="netcore-3.0">System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IAsyncDisposable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="4e42c-101">Bietet eine leistungsstarke API für das Schreiben von UTF-8-codiertem JSON-Text in Vorwärtsrichtung ohne Zwischenspeicherung.</span><span class="sxs-lookup"><span data-stu-id="4e42c-101">Provides a high-performance API for forward-only, non-cached writing of UTF-8 encoded JSON text.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  

## Remarks

<span data-ttu-id="4e42c-102">`Utf8JsonWriter` schreibt der Text nacheinander mit kein Zwischenspeichern und in der Standardeinstellung entspricht die [JSON RFC](https://tools.ietf.org/html/rfc8259), mit Ausnahme von das Schreiben von Kommentaren.</span><span class="sxs-lookup"><span data-stu-id="4e42c-102">`Utf8JsonWriter` writes the text sequentially with no caching and by default adheres to the [JSON RFC](https://tools.ietf.org/html/rfc8259), with the exception of writing comments.</span></span>

<span data-ttu-id="4e42c-103">Eine Methode, die versucht, ungültiges JSON-Format zu schreiben, wenn die Validierung ist aktiviert, löst eine <xref:System.InvalidOperationException> mit einer kontextspezifischen Fehlermeldung angezeigt.</span><span class="sxs-lookup"><span data-stu-id="4e42c-103">A method that attempts to write invalid JSON when validation is enabled throws a <xref:System.InvalidOperationException> with a context-specific error message.</span></span>

<span data-ttu-id="4e42c-104">Da dieser Typ einer Referenzstruktur handelt, unterstützt es Async nicht direkt.</span><span class="sxs-lookup"><span data-stu-id="4e42c-104">Since this type is a ref struct, it does not directly support async.</span></span> <span data-ttu-id="4e42c-105">Es bietet jedoch Unterstützung für erneutes eintreten, Teil der Daten geschrieben und mit dem Schreiben in kleinen Blöcken fortzufahren.</span><span class="sxs-lookup"><span data-stu-id="4e42c-105">However, it does provide support for reentrancy to write partial data and to continue writing in chunks.</span></span>

<span data-ttu-id="4e42c-106">Um zum Formatieren der Ausgabe mit Einzug und Leerzeichen oder zum Überspringen der Überprüfung können, erstellen Sie eine Instanz des <xref:System.Text.Json.JsonWriterOptions> und in dem Writer übergeben.</span><span class="sxs-lookup"><span data-stu-id="4e42c-106">To be able to format the output with indentation and white space OR to skip validation, create an instance of <xref:System.Text.Json.JsonWriterOptions> and pass it in to the writer.</span></span>

 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Utf8JsonWriter (System.Buffers.IBufferWriter&lt;byte&gt; bufferWriter, System.Text.Json.JsonWriterOptions options = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Buffers.IBufferWriter`1&lt;unsigned int8&gt; bufferWriter, valuetype System.Text.Json.JsonWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.#ctor(System.Buffers.IBufferWriter{System.Byte},System.Text.Json.JsonWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (bufferWriter As IBufferWriter(Of Byte), Optional options As JsonWriterOptions = null)" />
      <MemberSignature Language="F#" Value="new System.Text.Json.Utf8JsonWriter : System.Buffers.IBufferWriter&lt;byte&gt; * System.Text.Json.JsonWriterOptions -&gt; System.Text.Json.Utf8JsonWriter" Usage="new System.Text.Json.Utf8JsonWriter (bufferWriter, options)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="bufferWriter" Type="System.Buffers.IBufferWriter&lt;System.Byte&gt;" />
        <Parameter Name="options" Type="System.Text.Json.JsonWriterOptions" />
      </Parameters>
      <Docs>
        <param name="bufferWriter"><span data-ttu-id="4e42c-107">Das Ziel für das Schreiben von JSON-Text.</span><span class="sxs-lookup"><span data-stu-id="4e42c-107">The destination for writing JSON text.</span></span></param>
        <param name="options"><span data-ttu-id="4e42c-108">Definiert das benutzerdefinierte Verhalten von <see cref="T:System.Text.Json.Utf8JsonWriter" /> Standardmäßig wird minimierter JSON-Text (ohne zusätzliche Leerzeichen) geschrieben und überprüft, ob der geschriebene JSON-Code gemäß JSON RFC strukturell gültig ist.</span><span class="sxs-lookup"><span data-stu-id="4e42c-108">Defines the customized behavior of the <see cref="T:System.Text.Json.Utf8JsonWriter" /> By default, it writes minimized JSON (with no extra whitespace) and validates that the JSON being written is structurally valid according to the JSON RFC.</span></span></param>
        <summary><span data-ttu-id="4e42c-109">Erstellt eine neue <see cref="T:System.Text.Json.Utf8JsonWriter" />-Instanz mit dem angegebenen <see cref="T:System.Buffers.IBufferWriter&lt;System.Byte&gt;" />.</span><span class="sxs-lookup"><span data-stu-id="4e42c-109">Constructs a new <see cref="T:System.Text.Json.Utf8JsonWriter" /> instance with a specified <see cref="T:System.Buffers.IBufferWriter&lt;System.Byte&gt;" />.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="4e42c-110"><paramref name="bufferWriter" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="4e42c-110"><paramref name="bufferWriter" />  is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Utf8JsonWriter (System.IO.Stream utf8Json, System.Text.Json.JsonWriterOptions options = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream utf8Json, valuetype System.Text.Json.JsonWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.#ctor(System.IO.Stream,System.Text.Json.JsonWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (utf8Json As Stream, Optional options As JsonWriterOptions = null)" />
      <MemberSignature Language="F#" Value="new System.Text.Json.Utf8JsonWriter : System.IO.Stream * System.Text.Json.JsonWriterOptions -&gt; System.Text.Json.Utf8JsonWriter" Usage="new System.Text.Json.Utf8JsonWriter (utf8Json, options)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="utf8Json" Type="System.IO.Stream" />
        <Parameter Name="options" Type="System.Text.Json.JsonWriterOptions" />
      </Parameters>
      <Docs>
        <param name="utf8Json"><span data-ttu-id="4e42c-111">Das Ziel für das Schreiben von JSON-Text.</span><span class="sxs-lookup"><span data-stu-id="4e42c-111">The destination for writing JSON text.</span></span></param>
        <param name="options"><span data-ttu-id="4e42c-112">Definiert das benutzerdefinierte Verhalten von <see cref="T:System.Text.Json.Utf8JsonWriter" /> Standardmäßig wird minimierter JSON-Text (ohne zusätzliche Leerzeichen) geschrieben und überprüft, ob der geschriebene JSON-Code gemäß JSON RFC strukturell gültig ist.</span><span class="sxs-lookup"><span data-stu-id="4e42c-112">Defines the customized behavior of the <see cref="T:System.Text.Json.Utf8JsonWriter" /> By default, it writes minimized JSON (with no extra whitespace) and validates that the JSON being written is structurally valid according to the JSON RFC.</span></span></param>
        <summary><span data-ttu-id="4e42c-113">Erstellt eine neue <see cref="T:System.Text.Json.Utf8JsonWriter" />-Instanz mit einem angegebenen <paramref name="utf8Json" />.</span><span class="sxs-lookup"><span data-stu-id="4e42c-113">Constructs a new <see cref="T:System.Text.Json.Utf8JsonWriter" /> instance with a specified <paramref name="utf8Json" />.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="4e42c-114"><paramref name="utf8Json" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="4e42c-114"><paramref name="utf8Json" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BytesCommitted">
      <MemberSignature Language="C#" Value="public long BytesCommitted { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 BytesCommitted" />
      <MemberSignature Language="DocId" Value="P:System.Text.Json.Utf8JsonWriter.BytesCommitted" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BytesCommitted As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long BytesCommitted { long get(); };" />
      <MemberSignature Language="F#" Value="member this.BytesCommitted : int64" Usage="System.Text.Json.Utf8JsonWriter.BytesCommitted" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4e42c-115">Ruft die Gesamtzahl der Bytes ab, die bisher durch die aktuelle Instanz an die Ausgabe committet wurden.</span><span class="sxs-lookup"><span data-stu-id="4e42c-115">Gets the total number of bytes committed to the output by the current instance so far.</span></span></summary>
        <value><span data-ttu-id="4e42c-116">Die Gesamtzahl der Bytes, die ein Commit ausgeführt, die Ausgabe von der <see cref="T:System.Text.Json.Utf8JsonWriter" /> bisher.</span><span class="sxs-lookup"><span data-stu-id="4e42c-116">The total number of bytes committed to the output by the <see cref="T:System.Text.Json.Utf8JsonWriter" /> so far.</span></span></value>
        <remarks>
          <format><![CDATA[
          
<span data-ttu-id="4e42c-117">Im Fall von einem <xref:System.Buffers.IBufferWriter%601>, diese Eigenschaft gibt an, wie viel die IBufferWriter gesetzt wurde.</span><span class="sxs-lookup"><span data-stu-id="4e42c-117">In the case of an <xref:System.Buffers.IBufferWriter%601>, this property indicates how much the IBufferWriter has advanced.</span></span>

<span data-ttu-id="4e42c-118">Im Fall von einem <xref:System.IO.Stream>, diese Eigenschaft gibt an, wie viele Daten in den Stream geschrieben wurde.</span><span class="sxs-lookup"><span data-stu-id="4e42c-118">In the case of a <xref:System.IO.Stream>, this property indicates how much data has been written to the stream.</span></span>

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BytesPending">
      <MemberSignature Language="C#" Value="public int BytesPending { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 BytesPending" />
      <MemberSignature Language="DocId" Value="P:System.Text.Json.Utf8JsonWriter.BytesPending" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BytesPending As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int BytesPending { int get(); };" />
      <MemberSignature Language="F#" Value="member this.BytesPending : int" Usage="System.Text.Json.Utf8JsonWriter.BytesPending" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4e42c-119">Ruft die Anzahl der bisher vom <see cref="T:System.Text.Json.Utf8JsonWriter" /> geschriebenen Bytes ab, die noch nicht in die Ausgabe geleert und committet wurden.</span><span class="sxs-lookup"><span data-stu-id="4e42c-119">Gets the number of bytes written by the <see cref="T:System.Text.Json.Utf8JsonWriter" /> so far that have not yet been flushed to the output and committed.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentDepth">
      <MemberSignature Language="C#" Value="public int CurrentDepth { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CurrentDepth" />
      <MemberSignature Language="DocId" Value="P:System.Text.Json.Utf8JsonWriter.CurrentDepth" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CurrentDepth As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int CurrentDepth { int get(); };" />
      <MemberSignature Language="F#" Value="member this.CurrentDepth : int" Usage="System.Text.Json.Utf8JsonWriter.CurrentDepth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4e42c-120">Ruft die Tiefe des aktuellen Tokens ab.</span><span class="sxs-lookup"><span data-stu-id="4e42c-120">Gets the depth of the current token.</span></span></summary>
        <value><span data-ttu-id="4e42c-121">Die Tiefe des aktuellen Tokens.</span><span class="sxs-lookup"><span data-stu-id="4e42c-121">The depth of the current token.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  

## Remarks

<span data-ttu-id="4e42c-122">Die `CurrentDepth` Eigenschaft verfolgt die rekursive Tiefe der geschachtelten Objekte / arrays in der JSON-Text, die bisher geschrieben.</span><span class="sxs-lookup"><span data-stu-id="4e42c-122">The `CurrentDepth` property tracks the recursive depth of the nested objects / arrays within the JSON text written so far.</span></span>

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="utf8JsonWriter.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4e42c-123">Committet übrig gebliebenen JSON-Text, der noch nicht geleert wurde, und gibt alle Ressourcen frei, die von der aktuellen Instanz verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="4e42c-123">Commits any leftover JSON text that has not yet been flushed and releases all resources used by the current instance.</span></span></summary>
        <remarks>
          <format><![CDATA[
          
<span data-ttu-id="4e42c-124">Im Fall von IBufferWriter, dies erhöht die zugrunde liegende <xref:System.Buffers.IBufferWriter`1> basierend auf was bisher geschrieben wurde.</span><span class="sxs-lookup"><span data-stu-id="4e42c-124">In the case of IBufferWriter, this advances the underlying <xref:System.Buffers.IBufferWriter`1> based on what has been written so far.</span></span>

<span data-ttu-id="4e42c-125">Im Fall von Stream dies schreibt die Daten in den Stream und schreibt diesen Weg.</span><span class="sxs-lookup"><span data-stu-id="4e42c-125">In the case of Stream, this writes the data to the stream and flushes it.</span></span>

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DisposeAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.ValueTask DisposeAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Threading.Tasks.ValueTask DisposeAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.DisposeAsync" />
      <MemberSignature Language="VB.NET" Value="Public Function DisposeAsync () As ValueTask" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::ValueTask DisposeAsync();" />
      <MemberSignature Language="F#" Value="abstract member DisposeAsync : unit -&gt; System.Threading.Tasks.ValueTask&#xA;override this.DisposeAsync : unit -&gt; System.Threading.Tasks.ValueTask" Usage="utf8JsonWriter.DisposeAsync " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IAsyncDisposable.DisposeAsync</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ValueTask</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4e42c-126">Committet asynchron übrig gebliebenen JSON-Text, der noch nicht geleert wurde, und gibt alle Ressourcen frei, die von der aktuellen Instanz verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="4e42c-126">Asynchronously commits any leftover JSON text that has not yet been flushed and releases all resources used by the current instance.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>
          <format><![CDATA[
          
<span data-ttu-id="4e42c-127">Im Fall von IBufferWriter, dies erhöht die zugrunde liegende <xref:System.Buffers.IBufferWriter`1> basierend auf was bisher geschrieben wurde.</span><span class="sxs-lookup"><span data-stu-id="4e42c-127">In the case of IBufferWriter, this advances the underlying <xref:System.Buffers.IBufferWriter`1> based on what has been written so far.</span></span>
          
<span data-ttu-id="4e42c-128">Im Fall von Stream dies schreibt die Daten in den Stream und schreibt diesen Weg.</span><span class="sxs-lookup"><span data-stu-id="4e42c-128">In the case of Stream, this writes the data to the stream and flushes it.</span></span>
            
            ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public void Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Flush() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.Flush" />
      <MemberSignature Language="VB.NET" Value="Public Sub Flush ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Flush();" />
      <MemberSignature Language="F#" Value="member this.Flush : unit -&gt; unit" Usage="utf8JsonWriter.Flush " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4e42c-129">Committet den bisher geschriebenen JSON-Text, sodass er für das Ausgabeziel sichtbar ist.</span><span class="sxs-lookup"><span data-stu-id="4e42c-129">Commits the JSON text written so far, which makes it visible to the output destination.</span></span></summary>
        <remarks>
          <format><![CDATA[
          
<span data-ttu-id="4e42c-130">Im Fall von IBufferWriter, dies erhöht die zugrunde liegende <xref:System.Buffers.IBufferWriter`1> basierend auf was bisher geschrieben wurde.</span><span class="sxs-lookup"><span data-stu-id="4e42c-130">In the case of IBufferWriter, this advances the underlying <xref:System.Buffers.IBufferWriter`1> based on what has been written so far.</span></span>

<span data-ttu-id="4e42c-131">Im Fall von <xref:System.IO.Stream>, dies schreibt die Daten in den Stream und schreibt diesen Weg.</span><span class="sxs-lookup"><span data-stu-id="4e42c-131">In the case of <xref:System.IO.Stream>, this writes the data to the stream and flushes it.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="4e42c-132">Die Instanz wurde verworfen.</span><span class="sxs-lookup"><span data-stu-id="4e42c-132">This instance has been disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="FlushAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task FlushAsync (System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task FlushAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.FlushAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="member this.FlushAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="utf8JsonWriter.FlushAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">To be added.</param>
        <summary><span data-ttu-id="4e42c-133">Committet asynchron den bisher geschriebenen JSON-Text, sodass er für das Ausgabeziel sichtbar ist.</span><span class="sxs-lookup"><span data-stu-id="4e42c-133">Asynchronously commits the JSON text written so far, which makes it visible to the output destination.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>
          <format><![CDATA[
          
<span data-ttu-id="4e42c-134">Im Fall von IBufferWriter, dies erhöht die zugrunde liegende <xref:System.Buffers.IBufferWriter`1> basierend auf was bisher geschrieben wurde.</span><span class="sxs-lookup"><span data-stu-id="4e42c-134">In the case of IBufferWriter, this advances the underlying <xref:System.Buffers.IBufferWriter`1> based on what has been written so far.</span></span>

<span data-ttu-id="4e42c-135">Im Fall von <xref:System.IO.Stream>, dies schreibt die Daten in den Stream und leert sie asynchron, während der Überwachung von abbruchanforderungen.</span><span class="sxs-lookup"><span data-stu-id="4e42c-135">In the case of <xref:System.IO.Stream>, this writes the data to the stream and flushes it asynchronously, while monitoring cancellation requests.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="4e42c-136">Die Instanz wurde verworfen.</span><span class="sxs-lookup"><span data-stu-id="4e42c-136">This instance has been disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Options">
      <MemberSignature Language="C#" Value="public System.Text.Json.JsonWriterOptions Options { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Text.Json.JsonWriterOptions Options" />
      <MemberSignature Language="DocId" Value="P:System.Text.Json.Utf8JsonWriter.Options" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Options As JsonWriterOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Text::Json::JsonWriterOptions Options { System::Text::Json::JsonWriterOptions get(); };" />
      <MemberSignature Language="F#" Value="member this.Options : System.Text.Json.JsonWriterOptions" Usage="System.Text.Json.Utf8JsonWriter.Options" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Json.JsonWriterOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4e42c-137">Ruft das benutzerdefinierte Verhalten auf, wenn JSON-Daten mithilfe dieser Instanz geschrieben werden, die angibt, ob die Ausgabe beim Schreiben formatiert und die strukturelle JSON-Überprüfung übersprungen werden soll.</span><span class="sxs-lookup"><span data-stu-id="4e42c-137">Gets the custom behavior when writing JSON using this instance, which indicates whether to format the output while writing and whether to skip structural JSON validation.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.Reset" />
      <MemberSignature Language="VB.NET" Value="Public Sub Reset ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Reset();" />
      <MemberSignature Language="F#" Value="member this.Reset : unit -&gt; unit" Usage="utf8JsonWriter.Reset " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4e42c-138">Setzt den internen Zustand dieser Instanz zurück, sodass sie wiederverwendet werden kann.</span><span class="sxs-lookup"><span data-stu-id="4e42c-138">Resets the internal state of this instance so that it can be reused.</span></span></summary>
        <remarks>
          <format><![CDATA[
          
<span data-ttu-id="4e42c-139">Die <xref:System.Text.Json.Utf8JsonWriter> verwendet weiterhin die ursprünglichen Optionen der Writer und die ursprüngliche Ausgabe (entweder <xref:System.Buffers.IBufferWriter`1> oder <xref:System.IO.Stream>) als Ziel.</span><span class="sxs-lookup"><span data-stu-id="4e42c-139">The <xref:System.Text.Json.Utf8JsonWriter> will continue to use the original writer options and the original output (either <xref:System.Buffers.IBufferWriter`1> or <xref:System.IO.Stream>) as the destination.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="4e42c-140">Die Instanz wurde verworfen.</span><span class="sxs-lookup"><span data-stu-id="4e42c-140">This instance has been disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public void Reset (System.Buffers.IBufferWriter&lt;byte&gt; bufferWriter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Reset(class System.Buffers.IBufferWriter`1&lt;unsigned int8&gt; bufferWriter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.Reset(System.Buffers.IBufferWriter{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Sub Reset (bufferWriter As IBufferWriter(Of Byte))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Reset(System::Buffers::IBufferWriter&lt;System::Byte&gt; ^ bufferWriter);" />
      <MemberSignature Language="F#" Value="member this.Reset : System.Buffers.IBufferWriter&lt;byte&gt; -&gt; unit" Usage="utf8JsonWriter.Reset bufferWriter" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bufferWriter" Type="System.Buffers.IBufferWriter&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="bufferWriter"><span data-ttu-id="4e42c-141">Das Ziel für das Schreiben von JSON-Text.</span><span class="sxs-lookup"><span data-stu-id="4e42c-141">The destination for writing JSON text.</span></span></param>
        <summary><span data-ttu-id="4e42c-142">Setzt den internen Zustand dieser Instanz zurück, sodass sie mit einer neuen Instanz von <see cref="T:System.Buffers.IBufferWriter`1" /> wiederverwendet werden kann.</span><span class="sxs-lookup"><span data-stu-id="4e42c-142">Resets the internal state of this instance so that it can be reused with a new instance of <see cref="T:System.Buffers.IBufferWriter`1" />.</span></span></summary>
        <remarks>
          <format><![CDATA[
          
<span data-ttu-id="4e42c-143">Die <xref:System.Text.Json.Utf8JsonWriter> verwendet weiterhin die ursprünglichen Optionen der Writer, aber jetzt schreibt in `bufferWriter` als neues Ziel.</span><span class="sxs-lookup"><span data-stu-id="4e42c-143">The <xref:System.Text.Json.Utf8JsonWriter> will continue to use the original writer options but now writes to `bufferWriter` as the new destination.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="4e42c-144"><paramref name="bufferWriter" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="4e42c-144"><paramref name="bufferWriter" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="4e42c-145">Die Instanz wurde verworfen.</span><span class="sxs-lookup"><span data-stu-id="4e42c-145">This instance has been disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public void Reset (System.IO.Stream utf8Json);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Reset(class System.IO.Stream utf8Json) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.Reset(System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Reset (utf8Json As Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Reset(System::IO::Stream ^ utf8Json);" />
      <MemberSignature Language="F#" Value="member this.Reset : System.IO.Stream -&gt; unit" Usage="utf8JsonWriter.Reset utf8Json" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="utf8Json" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="utf8Json"><span data-ttu-id="4e42c-146">Das Ziel für das Schreiben von JSON-Text.</span><span class="sxs-lookup"><span data-stu-id="4e42c-146">The destination for writing JSON text.</span></span></param>
        <summary><span data-ttu-id="4e42c-147">Setzt den internen Zustand dieser Instanz zurück, sodass sie mit einer neuen Instanz von <see cref="T:System.IO.Stream" /> wiederverwendet werden kann.</span><span class="sxs-lookup"><span data-stu-id="4e42c-147">Resets the internal state of this instance so that it can be reused with a new instance of <see cref="T:System.IO.Stream" />.</span></span></summary>
        <remarks>
          <format><![CDATA[
          
<span data-ttu-id="4e42c-148">Die <xref:System.Text.Json.Utf8JsonWriter> weiterhin die ursprünglichen Optionen der Writer verwenden, aber jetzt in schreiben `utf8Json` als neues Ziel.</span><span class="sxs-lookup"><span data-stu-id="4e42c-148">The <xref:System.Text.Json.Utf8JsonWriter> will continue to use the original writer options but now write to `utf8Json` as the new destination.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="4e42c-149"><paramref name="utf8Json" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="4e42c-149"><paramref name="utf8Json" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="4e42c-150">Die Instanz wurde verworfen.</span><span class="sxs-lookup"><span data-stu-id="4e42c-150">This instance has been disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteBoolean">
      <MemberSignature Language="C#" Value="public void WriteBoolean (ReadOnlySpan&lt;byte&gt; utf8PropertyName, bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteBoolean(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; utf8PropertyName, bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteBoolean(System.ReadOnlySpan{System.Byte},System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteBoolean (utf8PropertyName As ReadOnlySpan(Of Byte), value As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteBoolean(ReadOnlySpan&lt;System::Byte&gt; utf8PropertyName, bool value);" />
      <MemberSignature Language="F#" Value="member this.WriteBoolean : ReadOnlySpan&lt;byte&gt; * bool -&gt; unit" Usage="utf8JsonWriter.WriteBoolean (utf8PropertyName, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="utf8PropertyName" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="utf8PropertyName"><span data-ttu-id="4e42c-151">Der UTF-8-codierte Eigenschaftenname des zu schreibenden JSON-Objekts.</span><span class="sxs-lookup"><span data-stu-id="4e42c-151">The UTF-8 encoded property name of the JSON object to be written.</span></span></param>
        <param name="value"><span data-ttu-id="4e42c-152">Der Wert, der als JSON-Literal „true“ oder „false“ als Teil des Name-Wert-Paars geschrieben werden soll.</span><span class="sxs-lookup"><span data-stu-id="4e42c-152">The value to be written as a JSON literal "true" or "false" as part of the name/value pair.</span></span></param>
        <summary><span data-ttu-id="4e42c-153">Schreibt einen als schreibgeschützte Spanne von Bytes angegebenen Eigenschaftennamen und einen <see cref="T:System.Boolean" />-Wert (als JSON-Literal „true“ oder „false“) als Teil eines Name-Wert-Paars eines JSON-Objekts.</span><span class="sxs-lookup"><span data-stu-id="4e42c-153">Writes a property name specified as a read-only span of bytes and a <see cref="T:System.Boolean" /> value (as a JSON literal "true" or "false") as part of a name/value pair of a JSON object.</span></span></summary>
        <remarks>
          <format><![CDATA[
          
<span data-ttu-id="4e42c-154">Der Eigenschaftsname wird vor dem Schreiben mit Escapezeichen versehen.</span><span class="sxs-lookup"><span data-stu-id="4e42c-154">The property name is escaped before writing.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="4e42c-155">Der angegebene Eigenschaftenname ist zu lang.</span><span class="sxs-lookup"><span data-stu-id="4e42c-155">The specified property name is too large.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="4e42c-156">Validierung ist aktiviert, und der Vorgang würde im Schreiben ungültiger JSON-Daten resultieren.</span><span class="sxs-lookup"><span data-stu-id="4e42c-156">Validation is enabled, and the operation would result in writing invalid JSON.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteBoolean">
      <MemberSignature Language="C#" Value="public void WriteBoolean (ReadOnlySpan&lt;char&gt; propertyName, bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteBoolean(valuetype System.ReadOnlySpan`1&lt;char&gt; propertyName, bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteBoolean(System.ReadOnlySpan{System.Char},System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteBoolean (propertyName As ReadOnlySpan(Of Char), value As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteBoolean(ReadOnlySpan&lt;char&gt; propertyName, bool value);" />
      <MemberSignature Language="F#" Value="member this.WriteBoolean : ReadOnlySpan&lt;char&gt; * bool -&gt; unit" Usage="utf8JsonWriter.WriteBoolean (propertyName, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="propertyName"><span data-ttu-id="4e42c-157">Der UTF-16-codierte Eigenschaftenname des JSON-Objekts, das zu transcodieren und als UTF-8 zu schreiben ist.</span><span class="sxs-lookup"><span data-stu-id="4e42c-157">The UTF-16 encoded property name of the JSON object to be transcoded and written as UTF-8.</span></span></param>
        <param name="value"><span data-ttu-id="4e42c-158">Der Wert, der als JSON-Literal „true“ oder „false“ als Teil des Name-Wert-Paars geschrieben werden soll.</span><span class="sxs-lookup"><span data-stu-id="4e42c-158">The value to be written as a JSON literal "true" or "false" as part of the name/value pair.</span></span></param>
        <summary><span data-ttu-id="4e42c-159">Schreibt einen als schreibgeschützte Zeichenspanne angegebenen Eigenschaftennamen und einen <see cref="T:System.Boolean" />-Wert (als JSON-Literal „true“ oder „false“) als Teil eines Name-Wert-Paars eines JSON-Objekts.</span><span class="sxs-lookup"><span data-stu-id="4e42c-159">Writes a property name specified as a read-only character span and a <see cref="T:System.Boolean" /> value (as a JSON literal "true" or "false") as part of a name/value pair of a JSON object.</span></span></summary>
        <remarks>
          <format><![CDATA[
          
<span data-ttu-id="4e42c-160">Der Eigenschaftsname wird vor dem Schreiben mit Escapezeichen versehen.</span><span class="sxs-lookup"><span data-stu-id="4e42c-160">The property name is escaped before writing.</span></span>
          
          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="4e42c-161">Der angegebene Eigenschaftenname ist zu lang.</span><span class="sxs-lookup"><span data-stu-id="4e42c-161">The specified property name is too large.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="4e42c-162">Validierung ist aktiviert, und der Vorgang würde im Schreiben ungültiger JSON-Daten resultieren.</span><span class="sxs-lookup"><span data-stu-id="4e42c-162">Validation is enabled, and the operation would result in writing invalid JSON.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteBoolean">
      <MemberSignature Language="C#" Value="public void WriteBoolean (string propertyName, bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteBoolean(string propertyName, bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteBoolean(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteBoolean (propertyName As String, value As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteBoolean(System::String ^ propertyName, bool value);" />
      <MemberSignature Language="F#" Value="member this.WriteBoolean : string * bool -&gt; unit" Usage="utf8JsonWriter.WriteBoolean (propertyName, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="propertyName"><span data-ttu-id="4e42c-163">Der UTF-16-codierte Eigenschaftenname des JSON-Objekts, das zu transcodieren und als UTF-8 zu schreiben ist.</span><span class="sxs-lookup"><span data-stu-id="4e42c-163">The UTF-16 encoded property name of the JSON object to be transcoded and written as UTF-8.</span></span></param>
        <param name="value"><span data-ttu-id="4e42c-164">Der Wert, der als JSON-Literal „true“ oder „false“ als Teil des Name-Wert-Paars geschrieben werden soll.</span><span class="sxs-lookup"><span data-stu-id="4e42c-164">The value to be written as a JSON literal "true" or "false" as part of the name/value pair.</span></span></param>
        <summary><span data-ttu-id="4e42c-165">Schreibt einen als Zeichenfolge angegebenen Eigenschaftennamen und einen <see cref="T:System.Boolean" />-Wert (als JSON-Literal „true“ oder „false“) als Teil eines Name-Wert-Paars eines JSON-Objekts.</span><span class="sxs-lookup"><span data-stu-id="4e42c-165">Writes a property name specified as a string and a <see cref="T:System.Boolean" /> value (as a JSON literal "true" or "false") as part of a name/value pair of a JSON object.</span></span></summary>
        <remarks>
          <format><![CDATA[
          
<span data-ttu-id="4e42c-166">Der Eigenschaftsname wird vor dem Schreiben mit Escapezeichen versehen.</span><span class="sxs-lookup"><span data-stu-id="4e42c-166">The property name is escaped before writing.</span></span>
          
          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="4e42c-167">Der angegebene Eigenschaftenname ist zu lang.</span><span class="sxs-lookup"><span data-stu-id="4e42c-167">The specified property name is too large.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="4e42c-168">Validierung ist aktiviert, und der Vorgang würde im Schreiben ungültiger JSON-Daten resultieren.</span><span class="sxs-lookup"><span data-stu-id="4e42c-168">Validation is enabled, and the operation would result in writing invalid JSON.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteBooleanValue">
      <MemberSignature Language="C#" Value="public void WriteBooleanValue (bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteBooleanValue(bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteBooleanValue(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteBooleanValue (value As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteBooleanValue(bool value);" />
      <MemberSignature Language="F#" Value="member this.WriteBooleanValue : bool -&gt; unit" Usage="utf8JsonWriter.WriteBooleanValue value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="4e42c-169">Der Wert, der als JSON-Literal „true“ oder „false“ als ein Element eines JSON-Arrays geschrieben werden soll.</span><span class="sxs-lookup"><span data-stu-id="4e42c-169">The value to be written as a JSON literal "true" or "false" as an element of a JSON array.</span></span></param>
        <summary><span data-ttu-id="4e42c-170">Schreibt einen <see cref="T:System.Boolean" />-Wert (als JSON-Literal „true“ oder „false“) als ein Element eines JSON-Arrays.</span><span class="sxs-lookup"><span data-stu-id="4e42c-170">Writes a <see cref="T:System.Boolean" /> value (as a JSON literal "true" or "false") as an element of a JSON array.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="4e42c-171">Validierung ist aktiviert, und der Vorgang würde im Schreiben ungültiger JSON-Daten resultieren.</span><span class="sxs-lookup"><span data-stu-id="4e42c-171">Validation is enabled, and the operation would result in writing invalid JSON.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteCommentValue">
      <MemberSignature Language="C#" Value="public void WriteCommentValue (ReadOnlySpan&lt;byte&gt; utf8Value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteCommentValue(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; utf8Value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteCommentValue(System.ReadOnlySpan{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteCommentValue (utf8Value As ReadOnlySpan(Of Byte))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteCommentValue(ReadOnlySpan&lt;System::Byte&gt; utf8Value);" />
      <MemberSignature Language="F#" Value="member this.WriteCommentValue : ReadOnlySpan&lt;byte&gt; -&gt; unit" Usage="utf8JsonWriter.WriteCommentValue utf8Value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="utf8Value" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="utf8Value"><span data-ttu-id="4e42c-172">Der UTF-8-codierte Wert, der als JSON-Kommentar in /*..*/ geschrieben werden soll.</span><span class="sxs-lookup"><span data-stu-id="4e42c-172">The UTF-8 encoded value to be written as a JSON comment within /*..*/.</span></span></param>
        <summary><span data-ttu-id="4e42c-173">Schreibt einen UTF-8-Textwert als JSON-Kommentar.</span><span class="sxs-lookup"><span data-stu-id="4e42c-173">Writes a UTF-8 text value as a JSON comment.</span></span></summary>
        <remarks>
          <format><![CDATA[
          
<span data-ttu-id="4e42c-174">Der kommentarwert ist nicht vor dem Schreiben in Escapezeichen eingeschlossen.</span><span class="sxs-lookup"><span data-stu-id="4e42c-174">The comment value is not escaped before writing.</span></span>
          
          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="4e42c-175">Der angegebene Wert ist zu groß.</span><span class="sxs-lookup"><span data-stu-id="4e42c-175">The specified value is too large.</span></span>
        
<span data-ttu-id="4e42c-176">- oder -</span><span class="sxs-lookup"><span data-stu-id="4e42c-176">-or-</span></span>

<span data-ttu-id="4e42c-177"><paramref name="utf8Value" /> enthält ein Kommentartrennzeichen (d.h. \*/).</span><span class="sxs-lookup"><span data-stu-id="4e42c-177"><paramref name="utf8Value" /> contains a comment delimiter (i.e. \*/).</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteCommentValue">
      <MemberSignature Language="C#" Value="public void WriteCommentValue (ReadOnlySpan&lt;char&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteCommentValue(valuetype System.ReadOnlySpan`1&lt;char&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteCommentValue(System.ReadOnlySpan{System.Char})" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteCommentValue (value As ReadOnlySpan(Of Char))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteCommentValue(ReadOnlySpan&lt;char&gt; value);" />
      <MemberSignature Language="F#" Value="member this.WriteCommentValue : ReadOnlySpan&lt;char&gt; -&gt; unit" Usage="utf8JsonWriter.WriteCommentValue value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="4e42c-178">Der UTF-16-codierte Wert, der als UTF-8-transcodierter JSON-Kommentar in /*..*/ geschrieben werden soll.</span><span class="sxs-lookup"><span data-stu-id="4e42c-178">The UTF-16 encoded value to be written as a UTF-8 transcoded JSON comment within /*..*/.</span></span></param>
        <summary><span data-ttu-id="4e42c-179">Schreibt einen UTF-16-Textwert als JSON-Kommentar.</span><span class="sxs-lookup"><span data-stu-id="4e42c-179">Writes a UTF-16 text value as a JSON comment.</span></span></summary>
        <remarks>
          <format><![CDATA[
          
<span data-ttu-id="4e42c-180">Der kommentarwert ist nicht vor dem Schreiben in Escapezeichen eingeschlossen.</span><span class="sxs-lookup"><span data-stu-id="4e42c-180">The comment value is not escaped before writing.</span></span>
          
          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="4e42c-181">Der angegebene Wert ist zu groß</span><span class="sxs-lookup"><span data-stu-id="4e42c-181">The specified value is too large OR.</span></span>
        
<span data-ttu-id="4e42c-182">- oder -</span><span class="sxs-lookup"><span data-stu-id="4e42c-182">-or-</span></span>

<span data-ttu-id="4e42c-183"><paramref name="value" /> enthält ein Kommentartrennzeichen (d.h. \*/).</span><span class="sxs-lookup"><span data-stu-id="4e42c-183"><paramref name="value" /> contains a comment delimiter (i.e. \*/).</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteCommentValue">
      <MemberSignature Language="C#" Value="public void WriteCommentValue (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteCommentValue(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteCommentValue(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteCommentValue (value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteCommentValue(System::String ^ value);" />
      <MemberSignature Language="F#" Value="member this.WriteCommentValue : string -&gt; unit" Usage="utf8JsonWriter.WriteCommentValue value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="4e42c-184">Der UTF-16-codierte Wert, der als UTF-8-transcodierter JSON-Kommentar in /*..*/ geschrieben werden soll.</span><span class="sxs-lookup"><span data-stu-id="4e42c-184">The UTF-16 encoded value to be written as a UTF-8 transcoded JSON comment within /*..*/.</span></span></param>
        <summary><span data-ttu-id="4e42c-185">Schreibt einen Zeichenfolgentextwert als JSON-Kommentar.</span><span class="sxs-lookup"><span data-stu-id="4e42c-185">Writes a string text value as a JSON comment.</span></span></summary>
        <remarks>
          <format><![CDATA[
          
<span data-ttu-id="4e42c-186">Der kommentarwert ist nicht vor dem Schreiben in Escapezeichen eingeschlossen.</span><span class="sxs-lookup"><span data-stu-id="4e42c-186">The comment value is not escaped before writing.</span></span>
          
          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="4e42c-187">Der angegebene Wert ist zu groß.</span><span class="sxs-lookup"><span data-stu-id="4e42c-187">The specified value is too large.</span></span>
        
<span data-ttu-id="4e42c-188">- oder -</span><span class="sxs-lookup"><span data-stu-id="4e42c-188">-or-</span></span>

<span data-ttu-id="4e42c-189"><paramref name="value" /> enthält ein Kommentartrennzeichen (d.h. \*/).</span><span class="sxs-lookup"><span data-stu-id="4e42c-189"><paramref name="value" /> contains a comment delimiter (i.e. \*/).</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteEndArray">
      <MemberSignature Language="C#" Value="public void WriteEndArray ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteEndArray() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteEndArray" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteEndArray ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteEndArray();" />
      <MemberSignature Language="F#" Value="member this.WriteEndArray : unit -&gt; unit" Usage="utf8JsonWriter.WriteEndArray " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4e42c-190">Schreibt das Ende eines JSON-Arrays.</span><span class="sxs-lookup"><span data-stu-id="4e42c-190">Writes the end of a JSON array.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="4e42c-191">Validierung ist aktiviert, und der Vorgang würde im Schreiben ungültiger JSON-Daten resultieren.</span><span class="sxs-lookup"><span data-stu-id="4e42c-191">Validation is enabled, and the operation would result in writing invalid JSON.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteEndObject">
      <MemberSignature Language="C#" Value="public void WriteEndObject ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteEndObject() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteEndObject" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteEndObject ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteEndObject();" />
      <MemberSignature Language="F#" Value="member this.WriteEndObject : unit -&gt; unit" Usage="utf8JsonWriter.WriteEndObject " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4e42c-192">Schreibt das Ende eines JSON-Objekts.</span><span class="sxs-lookup"><span data-stu-id="4e42c-192">Writes the end of a JSON object.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="4e42c-193">Validierung ist aktiviert, und der Vorgang würde im Schreiben ungültiger JSON-Daten resultieren.</span><span class="sxs-lookup"><span data-stu-id="4e42c-193">Validation is enabled, and the operation would result in writing invalid JSON.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteNull">
      <MemberSignature Language="C#" Value="public void WriteNull (ReadOnlySpan&lt;byte&gt; utf8PropertyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteNull(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; utf8PropertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteNull(System.ReadOnlySpan{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteNull (utf8PropertyName As ReadOnlySpan(Of Byte))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteNull(ReadOnlySpan&lt;System::Byte&gt; utf8PropertyName);" />
      <MemberSignature Language="F#" Value="member this.WriteNull : ReadOnlySpan&lt;byte&gt; -&gt; unit" Usage="utf8JsonWriter.WriteNull utf8PropertyName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="utf8PropertyName" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="utf8PropertyName"><span data-ttu-id="4e42c-194">Der UTF-8-codierte Eigenschaftenname des zu schreibenden JSON-Objekts.</span><span class="sxs-lookup"><span data-stu-id="4e42c-194">The UTF-8 encoded property name of the JSON object to be written.</span></span></param>
        <summary><span data-ttu-id="4e42c-195">Schreibt einen als schreibgeschützte Spanne von Bytes angegebenen Eigenschaftennamen und das JSON-Literal „NULL“ als Teil eines Name-Wert-Paars eines JSON-Objekts.</span><span class="sxs-lookup"><span data-stu-id="4e42c-195">Writes a property name specified as a read-only span of bytes and the JSON literal "null" as part of a name/value pair of a JSON object.</span></span></summary>
        <remarks>
          <format><![CDATA[
          
<span data-ttu-id="4e42c-196">Der Eigenschaftsname wird vor dem Schreiben mit Escapezeichen versehen.</span><span class="sxs-lookup"><span data-stu-id="4e42c-196">The property name is escaped before writing.</span></span>
          
          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="4e42c-197">Der angegebene Eigenschaftenname ist zu lang.</span><span class="sxs-lookup"><span data-stu-id="4e42c-197">The specified property name is too large.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="4e42c-198">Validierung ist aktiviert, und der Schreibvorgang würde ungültige JSON-Daten produzieren.</span><span class="sxs-lookup"><span data-stu-id="4e42c-198">Validation is enabled, and the write operation would produce invalid JSON.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteNull">
      <MemberSignature Language="C#" Value="public void WriteNull (ReadOnlySpan&lt;char&gt; propertyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteNull(valuetype System.ReadOnlySpan`1&lt;char&gt; propertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteNull(System.ReadOnlySpan{System.Char})" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteNull (propertyName As ReadOnlySpan(Of Char))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteNull(ReadOnlySpan&lt;char&gt; propertyName);" />
      <MemberSignature Language="F#" Value="member this.WriteNull : ReadOnlySpan&lt;char&gt; -&gt; unit" Usage="utf8JsonWriter.WriteNull propertyName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
      </Parameters>
      <Docs>
        <param name="propertyName"><span data-ttu-id="4e42c-199">Der UTF-16-codierte Eigenschaftenname des JSON-Objekts, das zu transcodieren und als UTF-8 zu schreiben ist.</span><span class="sxs-lookup"><span data-stu-id="4e42c-199">The UTF-16 encoded property name of the JSON object to be transcoded and written as UTF-8.</span></span></param>
        <summary><span data-ttu-id="4e42c-200">Schreibt einen als schreibgeschützte Zeichenspanne angegebenen Eigenschaftennamen und das JSON-Literal „NULL“ als Teil eines Name-Wert-Paars eines JSON-Objekts.</span><span class="sxs-lookup"><span data-stu-id="4e42c-200">Writes a property name specified as a read-only character span and the JSON literal "null" as part of a name/value pair of a JSON object.</span></span></summary>
        <remarks>
          <format><![CDATA[
          
<span data-ttu-id="4e42c-201">Der Eigenschaftsname wird vor dem Schreiben mit Escapezeichen versehen.</span><span class="sxs-lookup"><span data-stu-id="4e42c-201">The property name is escaped before writing.</span></span>
          
          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="4e42c-202">Der angegebene Eigenschaftenname ist zu lang.</span><span class="sxs-lookup"><span data-stu-id="4e42c-202">The specified property name is too large.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="4e42c-203">Validierung ist aktiviert, und der Schreibvorgang würde ungültige JSON-Daten produzieren.</span><span class="sxs-lookup"><span data-stu-id="4e42c-203">Validation is enabled, and the write operation would produce invalid JSON.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteNull">
      <MemberSignature Language="C#" Value="public void WriteNull (string propertyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteNull(string propertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteNull(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteNull (propertyName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteNull(System::String ^ propertyName);" />
      <MemberSignature Language="F#" Value="member this.WriteNull : string -&gt; unit" Usage="utf8JsonWriter.WriteNull propertyName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="propertyName"><span data-ttu-id="4e42c-204">Der UTF-16-codierte Eigenschaftenname des JSON-Objekts, das zu transcodieren und als UTF-8 zu schreiben ist.</span><span class="sxs-lookup"><span data-stu-id="4e42c-204">The UTF-16 encoded property name of the JSON object to be transcoded and written as UTF-8.</span></span></param>
        <summary><span data-ttu-id="4e42c-205">Schreibt einen als Zeichenfolge angegebenen Eigenschaftennamen und das JSON-Literal „NULL“ als Teil eines Name-Wert-Paars eines JSON-Objekts.</span><span class="sxs-lookup"><span data-stu-id="4e42c-205">Writes a property name specified as a string and the JSON literal "null" as part of a name/value pair of a JSON object.</span></span></summary>
        <remarks>
          <format><![CDATA[
          
<span data-ttu-id="4e42c-206">Der Eigenschaftsname wird vor dem Schreiben mit Escapezeichen versehen.</span><span class="sxs-lookup"><span data-stu-id="4e42c-206">The property name is escaped before writing.</span></span>
          
          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="4e42c-207">Der angegebene Eigenschaftenname ist zu lang.</span><span class="sxs-lookup"><span data-stu-id="4e42c-207">The specified property name is too large.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="4e42c-208">Validierung ist aktiviert, und der Schreibvorgang würde ungültige JSON-Daten produzieren.</span><span class="sxs-lookup"><span data-stu-id="4e42c-208">Validation is enabled, and the write operation would produce invalid JSON.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteNullValue">
      <MemberSignature Language="C#" Value="public void WriteNullValue ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteNullValue() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteNullValue" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteNullValue ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteNullValue();" />
      <MemberSignature Language="F#" Value="member this.WriteNullValue : unit -&gt; unit" Usage="utf8JsonWriter.WriteNullValue " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4e42c-209">Schreibt das JSON-Literal „null“ als ein Element eines JSON-Arrays.</span><span class="sxs-lookup"><span data-stu-id="4e42c-209">Writes the JSON literal "null" as an element of a JSON array.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="4e42c-210">Validierung ist aktiviert, und der Vorgang würde im Schreiben ungültiger JSON-Daten resultieren.</span><span class="sxs-lookup"><span data-stu-id="4e42c-210">Validation is enabled, and the operation would result in writing invalid JSON.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteNumber">
      <MemberSignature Language="C#" Value="public void WriteNumber (ReadOnlySpan&lt;byte&gt; utf8PropertyName, decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteNumber(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; utf8PropertyName, valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteNumber(System.ReadOnlySpan{System.Byte},System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteNumber (utf8PropertyName As ReadOnlySpan(Of Byte), value As Decimal)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteNumber(ReadOnlySpan&lt;System::Byte&gt; utf8PropertyName, System::Decimal value);" />
      <MemberSignature Language="F#" Value="member this.WriteNumber : ReadOnlySpan&lt;byte&gt; * decimal -&gt; unit" Usage="utf8JsonWriter.WriteNumber (utf8PropertyName, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="utf8PropertyName" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="utf8PropertyName"><span data-ttu-id="4e42c-211">Der UTF-8-codierte Eigenschaftenname des zu schreibenden JSON-Objekts.</span><span class="sxs-lookup"><span data-stu-id="4e42c-211">The UTF-8 encoded property name of the JSON object to be written.</span></span></param>
        <param name="value"><span data-ttu-id="4e42c-212">Der Wert, der als JSON-Zahl als Teil des Name-Wert-Paars geschrieben werden soll.</span><span class="sxs-lookup"><span data-stu-id="4e42c-212">The value to be written as a JSON number as part of the name/value pair.</span></span></param>
        <summary><span data-ttu-id="4e42c-213">Schreibt einen als schreibgeschützte Spanne von Bytes angegebenen Eigenschaftennamen und einen <see cref="T:System.Decimal" />-Wert (als JSON-Zahl) als Teil eines Name-Wert-Paars eines JSON-Objekts.</span><span class="sxs-lookup"><span data-stu-id="4e42c-213">Writes a property name specified as a read-only span of bytes and a <see cref="T:System.Decimal" /> value (as a JSON number) as part of a name/value pair of a JSON object.</span></span></summary>
        <remarks>
          <format><![CDATA[
          
<span data-ttu-id="4e42c-214">Der Eigenschaftsname wird vor dem Schreiben mit Escapezeichen versehen.</span><span class="sxs-lookup"><span data-stu-id="4e42c-214">The property name is escaped before writing.</span></span>
          
          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="4e42c-215">Der angegebene Eigenschaftenname ist zu lang.</span><span class="sxs-lookup"><span data-stu-id="4e42c-215">The specified property name is too large.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="4e42c-216">Validierung ist aktiviert, und der Schreibvorgang würde ungültige JSON-Daten produzieren.</span><span class="sxs-lookup"><span data-stu-id="4e42c-216">Validation is enabled, and the write operation would produce invalid JSON.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteNumber">
      <MemberSignature Language="C#" Value="public void WriteNumber (ReadOnlySpan&lt;byte&gt; utf8PropertyName, double value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteNumber(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; utf8PropertyName, float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteNumber(System.ReadOnlySpan{System.Byte},System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteNumber (utf8PropertyName As ReadOnlySpan(Of Byte), value As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteNumber(ReadOnlySpan&lt;System::Byte&gt; utf8PropertyName, double value);" />
      <MemberSignature Language="F#" Value="member this.WriteNumber : ReadOnlySpan&lt;byte&gt; * double -&gt; unit" Usage="utf8JsonWriter.WriteNumber (utf8PropertyName, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="utf8PropertyName" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="utf8PropertyName"><span data-ttu-id="4e42c-217">Der UTF-8-codierte Eigenschaftenname des zu schreibenden JSON-Objekts.</span><span class="sxs-lookup"><span data-stu-id="4e42c-217">The UTF-8 encoded property name of the JSON object to be written.</span></span></param>
        <param name="value"><span data-ttu-id="4e42c-218">Der Wert, der als JSON-Zahl als Teil des Name-Wert-Paars geschrieben werden soll.</span><span class="sxs-lookup"><span data-stu-id="4e42c-218">The value to be written as a JSON number as part of the name/value pair.</span></span></param>
        <summary><span data-ttu-id="4e42c-219">Schreibt einen als schreibgeschützte Spanne von Bytes angegebenen Eigenschaftennamen und einen <see cref="T:System.Double" />-Wert (als JSON-Zahl) als Teil eines Name-Wert-Paars eines JSON-Objekts.</span><span class="sxs-lookup"><span data-stu-id="4e42c-219">Writes a property name specified as a read-only span of bytes and a <see cref="T:System.Double" /> value (as a JSON number) as part of a name/value pair of a JSON object.</span></span></summary>
        <remarks>
          <format><![CDATA[
          
<span data-ttu-id="4e42c-220">Der Eigenschaftsname wird vor dem Schreiben mit Escapezeichen versehen.</span><span class="sxs-lookup"><span data-stu-id="4e42c-220">The property name is escaped before writing.</span></span>
          
          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="4e42c-221">Der angegebene Eigenschaftenname ist zu lang.</span><span class="sxs-lookup"><span data-stu-id="4e42c-221">The specified property name is too large.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="4e42c-222">Validierung ist aktiviert, und der Schreibvorgang würde ungültige JSON-Daten produzieren.</span><span class="sxs-lookup"><span data-stu-id="4e42c-222">Validation is enabled, and the write operation would produce invalid JSON.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteNumber">
      <MemberSignature Language="C#" Value="public void WriteNumber (ReadOnlySpan&lt;byte&gt; utf8PropertyName, int value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteNumber(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; utf8PropertyName, int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteNumber(System.ReadOnlySpan{System.Byte},System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteNumber (utf8PropertyName As ReadOnlySpan(Of Byte), value As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteNumber(ReadOnlySpan&lt;System::Byte&gt; utf8PropertyName, int value);" />
      <MemberSignature Language="F#" Value="member this.WriteNumber : ReadOnlySpan&lt;byte&gt; * int -&gt; unit" Usage="utf8JsonWriter.WriteNumber (utf8PropertyName, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="utf8PropertyName" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="utf8PropertyName"><span data-ttu-id="4e42c-223">Der UTF-8-codierte Eigenschaftenname des zu schreibenden JSON-Objekts.</span><span class="sxs-lookup"><span data-stu-id="4e42c-223">The UTF-8 encoded property name of the JSON object to be written.</span></span></param>
        <param name="value"><span data-ttu-id="4e42c-224">Der Wert, der als JSON-Zahl als Teil des Name-Wert-Paars geschrieben werden soll.</span><span class="sxs-lookup"><span data-stu-id="4e42c-224">The value to be written as a JSON number as part of the name/value pair.</span></span></param>
        <summary><span data-ttu-id="4e42c-225">Schreibt einen als schreibgeschützte Spanne von Bytes angegebenen Eigenschaftennamen und einen <see cref="T:System.Int32" />-Wert (als JSON-Zahl) als Teil eines Name-Wert-Paars eines JSON-Objekts.</span><span class="sxs-lookup"><span data-stu-id="4e42c-225">Writes a property name specified as a read-only span of bytes and an <see cref="T:System.Int32" /> value (as a JSON number) as part of a name/value pair of a JSON object.</span></span></summary>
        <remarks>
          <format><![CDATA[
          
<span data-ttu-id="4e42c-226">Der Eigenschaftsname wird vor dem Schreiben mit Escapezeichen versehen.</span><span class="sxs-lookup"><span data-stu-id="4e42c-226">The property name is escaped before writing.</span></span>
          
          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="4e42c-227">Der angegebene Eigenschaftenname ist zu lang.</span><span class="sxs-lookup"><span data-stu-id="4e42c-227">The specified property name is too large.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="4e42c-228">Validierung ist aktiviert, und der Schreibvorgang würde ungültige JSON-Daten produzieren.</span><span class="sxs-lookup"><span data-stu-id="4e42c-228">Validation is enabled, and the write operation would produce invalid JSON.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteNumber">
      <MemberSignature Language="C#" Value="public void WriteNumber (ReadOnlySpan&lt;byte&gt; utf8PropertyName, long value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteNumber(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; utf8PropertyName, int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteNumber(System.ReadOnlySpan{System.Byte},System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteNumber (utf8PropertyName As ReadOnlySpan(Of Byte), value As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteNumber(ReadOnlySpan&lt;System::Byte&gt; utf8PropertyName, long value);" />
      <MemberSignature Language="F#" Value="member this.WriteNumber : ReadOnlySpan&lt;byte&gt; * int64 -&gt; unit" Usage="utf8JsonWriter.WriteNumber (utf8PropertyName, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="utf8PropertyName" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="utf8PropertyName"><span data-ttu-id="4e42c-229">Der UTF-8-codierte Eigenschaftenname des zu schreibenden JSON-Objekts.</span><span class="sxs-lookup"><span data-stu-id="4e42c-229">The UTF-8 encoded property name of the JSON object to be written.</span></span></param>
        <param name="value"><span data-ttu-id="4e42c-230">Der Wert, der als JSON-Zahl als Teil des Name-Wert-Paars geschrieben werden soll.</span><span class="sxs-lookup"><span data-stu-id="4e42c-230">The value to be written as a JSON number as part of the name/value pair.</span></span></param>
        <summary><span data-ttu-id="4e42c-231">Schreibt einen als schreibgeschützte Spanne von Bytes angegebenen Eigenschaftennamen und einen <see cref="T:System.Int64" />-Wert (als JSON-Zahl) als Teil eines Name-Wert-Paars eines JSON-Objekts.</span><span class="sxs-lookup"><span data-stu-id="4e42c-231">Writes a property name specified as a read-only span of bytes and an <see cref="T:System.Int64" /> value (as a JSON number) as part of a name/value pair of a JSON object.</span></span></summary>
        <remarks>
          <format><![CDATA[
          
<span data-ttu-id="4e42c-232">Der Eigenschaftsname wird vor dem Schreiben mit Escapezeichen versehen.</span><span class="sxs-lookup"><span data-stu-id="4e42c-232">The property name is escaped before writing.</span></span>
          
          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="4e42c-233">Der angegebene Eigenschaftenname ist zu lang.</span><span class="sxs-lookup"><span data-stu-id="4e42c-233">The specified property name is too large.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="4e42c-234">Validierung ist aktiviert, und der Schreibvorgang würde ungültige JSON-Daten produzieren.</span><span class="sxs-lookup"><span data-stu-id="4e42c-234">Validation is enabled, and the write operation would produce invalid JSON.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteNumber">
      <MemberSignature Language="C#" Value="public void WriteNumber (ReadOnlySpan&lt;byte&gt; utf8PropertyName, float value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteNumber(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; utf8PropertyName, float32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteNumber(System.ReadOnlySpan{System.Byte},System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteNumber (utf8PropertyName As ReadOnlySpan(Of Byte), value As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteNumber(ReadOnlySpan&lt;System::Byte&gt; utf8PropertyName, float value);" />
      <MemberSignature Language="F#" Value="member this.WriteNumber : ReadOnlySpan&lt;byte&gt; * single -&gt; unit" Usage="utf8JsonWriter.WriteNumber (utf8PropertyName, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="utf8PropertyName" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="utf8PropertyName"><span data-ttu-id="4e42c-235">Der UTF-8-codierte Eigenschaftenname des zu schreibenden JSON-Objekts.</span><span class="sxs-lookup"><span data-stu-id="4e42c-235">The UTF-8 encoded property name of the JSON object to be written.</span></span></param>
        <param name="value"><span data-ttu-id="4e42c-236">Der Wert, der als JSON-Zahl als Teil des Name-Wert-Paars geschrieben werden soll.</span><span class="sxs-lookup"><span data-stu-id="4e42c-236">The value to be written as a JSON number as part of the name/value pair.</span></span></param>
        <summary><span data-ttu-id="4e42c-237">Schreibt einen als schreibgeschützte Spanne von Bytes angegebenen Eigenschaftennamen und einen <see cref="T:System.Single" />-Wert (als JSON-Zahl) als Teil eines Name-Wert-Paars eines JSON-Objekts.</span><span class="sxs-lookup"><span data-stu-id="4e42c-237">Writes a property name specified as a read-only span of bytes and a <see cref="T:System.Single" /> value (as a JSON number) as part of a name/value pair of a JSON object.</span></span></summary>
        <remarks>
          <format><![CDATA[
          
<span data-ttu-id="4e42c-238">Der Eigenschaftsname wird vor dem Schreiben mit Escapezeichen versehen.</span><span class="sxs-lookup"><span data-stu-id="4e42c-238">The property name is escaped before writing.</span></span>
          
          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="4e42c-239">Der angegebene Eigenschaftenname ist zu lang.</span><span class="sxs-lookup"><span data-stu-id="4e42c-239">The specified property name is too large.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="4e42c-240">Validierung ist aktiviert, und der Schreibvorgang würde ungültige JSON-Daten produzieren.</span><span class="sxs-lookup"><span data-stu-id="4e42c-240">Validation is enabled, and the write operation would produce invalid JSON.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteNumber">
      <MemberSignature Language="C#" Value="public void WriteNumber (ReadOnlySpan&lt;byte&gt; utf8PropertyName, uint value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteNumber(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; utf8PropertyName, unsigned int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteNumber(System.ReadOnlySpan{System.Byte},System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteNumber (utf8PropertyName As ReadOnlySpan(Of Byte), value As UInteger)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteNumber(ReadOnlySpan&lt;System::Byte&gt; utf8PropertyName, System::UInt32 value);" />
      <MemberSignature Language="F#" Value="member this.WriteNumber : ReadOnlySpan&lt;byte&gt; * uint32 -&gt; unit" Usage="utf8JsonWriter.WriteNumber (utf8PropertyName, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="utf8PropertyName" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="value" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="utf8PropertyName"><span data-ttu-id="4e42c-241">Der UTF-8-codierte Eigenschaftenname des zu schreibenden JSON-Objekts.</span><span class="sxs-lookup"><span data-stu-id="4e42c-241">The UTF-8 encoded property name of the JSON object to be written.</span></span></param>
        <param name="value"><span data-ttu-id="4e42c-242">Der Wert, der als JSON-Zahl als Teil des Name-Wert-Paars geschrieben werden soll.</span><span class="sxs-lookup"><span data-stu-id="4e42c-242">The value to be written as a JSON number as part of the name/value pair.</span></span></param>
        <summary><span data-ttu-id="4e42c-243">Schreibt einen als schreibgeschützte Spanne von Bytes angegebenen Eigenschaftennamen und einen <see cref="T:System.UInt32" />-Wert (als JSON-Zahl) als Teil eines Name-Wert-Paars eines JSON-Objekts.</span><span class="sxs-lookup"><span data-stu-id="4e42c-243">Writes a property name specified as a read-only span of bytes and a <see cref="T:System.UInt32" /> value (as a JSON number) as part of a name/value pair of a JSON object.</span></span></summary>
        <remarks>
          <format><![CDATA[
          
<span data-ttu-id="4e42c-244">Der Eigenschaftsname wird vor dem Schreiben mit Escapezeichen versehen.</span><span class="sxs-lookup"><span data-stu-id="4e42c-244">The property name is escaped before writing.</span></span>
          
          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="4e42c-245">Der angegebene Eigenschaftenname ist zu lang.</span><span class="sxs-lookup"><span data-stu-id="4e42c-245">The specified property name is too large.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="4e42c-246">Validierung ist aktiviert, und der Schreibvorgang würde ungültige JSON-Daten produzieren.</span><span class="sxs-lookup"><span data-stu-id="4e42c-246">Validation is enabled, and the write operation would produce invalid JSON.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteNumber">
      <MemberSignature Language="C#" Value="public void WriteNumber (ReadOnlySpan&lt;byte&gt; utf8PropertyName, ulong value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteNumber(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; utf8PropertyName, unsigned int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteNumber(System.ReadOnlySpan{System.Byte},System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteNumber (utf8PropertyName As ReadOnlySpan(Of Byte), value As ULong)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteNumber(ReadOnlySpan&lt;System::Byte&gt; utf8PropertyName, System::UInt64 value);" />
      <MemberSignature Language="F#" Value="member this.WriteNumber : ReadOnlySpan&lt;byte&gt; * uint64 -&gt; unit" Usage="utf8JsonWriter.WriteNumber (utf8PropertyName, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="utf8PropertyName" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="value" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="utf8PropertyName"><span data-ttu-id="4e42c-247">Der UTF-8-codierte Eigenschaftenname des zu schreibenden JSON-Objekts.</span><span class="sxs-lookup"><span data-stu-id="4e42c-247">The UTF-8 encoded property name of the JSON object to be written.</span></span></param>
        <param name="value"><span data-ttu-id="4e42c-248">Der Wert, der als JSON-Zahl als Teil des Name-Wert-Paars geschrieben werden soll.</span><span class="sxs-lookup"><span data-stu-id="4e42c-248">The value to be written as a JSON number as part of the name/value pair.</span></span></param>
        <summary><span data-ttu-id="4e42c-249">Schreibt einen als schreibgeschützte Spanne von Bytes angegebenen Eigenschaftennamen und einen <see cref="T:System.UInt64" />-Wert (als JSON-Zahl) als Teil eines Name-Wert-Paars eines JSON-Objekts.</span><span class="sxs-lookup"><span data-stu-id="4e42c-249">Writes a property name specified as a read-only span of bytes and a <see cref="T:System.UInt64" /> value (as a JSON number) as part of a name/value pair of a JSON object.</span></span></summary>
        <remarks>
          <format><![CDATA[
          
<span data-ttu-id="4e42c-250">Der Eigenschaftsname wird vor dem Schreiben mit Escapezeichen versehen.</span><span class="sxs-lookup"><span data-stu-id="4e42c-250">The property name is escaped before writing.</span></span>
          
          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="4e42c-251">Der angegebene Eigenschaftenname ist zu lang.</span><span class="sxs-lookup"><span data-stu-id="4e42c-251">The specified property name is too large.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="4e42c-252">Validierung ist aktiviert, und der Schreibvorgang würde ungültige JSON-Daten produzieren.</span><span class="sxs-lookup"><span data-stu-id="4e42c-252">Validation is enabled, and the write operation would produce invalid JSON.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteNumber">
      <MemberSignature Language="C#" Value="public void WriteNumber (ReadOnlySpan&lt;char&gt; propertyName, decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteNumber(valuetype System.ReadOnlySpan`1&lt;char&gt; propertyName, valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteNumber(System.ReadOnlySpan{System.Char},System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteNumber (propertyName As ReadOnlySpan(Of Char), value As Decimal)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteNumber(ReadOnlySpan&lt;char&gt; propertyName, System::Decimal value);" />
      <MemberSignature Language="F#" Value="member this.WriteNumber : ReadOnlySpan&lt;char&gt; * decimal -&gt; unit" Usage="utf8JsonWriter.WriteNumber (propertyName, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="propertyName"><span data-ttu-id="4e42c-253">Der UTF-16-codierte Eigenschaftenname des JSON-Objekts, das zu transcodieren und als UTF-8 zu schreiben ist.</span><span class="sxs-lookup"><span data-stu-id="4e42c-253">The UTF-16 encoded property name of the JSON object to be transcoded and written as UTF-8.</span></span></param>
        <param name="value"><span data-ttu-id="4e42c-254">Der Wert, der als JSON-Zahl als Teil des Name-Wert-Paars geschrieben werden soll.</span><span class="sxs-lookup"><span data-stu-id="4e42c-254">The value to be written as a JSON number as part of the name/value pair.</span></span></param>
        <summary><span data-ttu-id="4e42c-255">Schreibt einen als schreibgeschützte Zeichenspanne angegebenen Eigenschaftennamen und einen <see cref="T:System.Decimal" />-Wert (als JSON-Zahl) als Teil eines Name-Wert-Paars eines JSON-Objekts.</span><span class="sxs-lookup"><span data-stu-id="4e42c-255">Writes a property name specified as a read-only character span and a <see cref="T:System.Decimal" /> value (as a JSON number) as part of a name/value pair of a JSON object.</span></span></summary>
        <remarks>
          <format><![CDATA[
          
<span data-ttu-id="4e42c-256">Der Eigenschaftsname wird vor dem Schreiben mit Escapezeichen versehen.</span><span class="sxs-lookup"><span data-stu-id="4e42c-256">The property name is escaped before writing.</span></span>
          
          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="4e42c-257">Der angegebene Eigenschaftenname ist zu lang.</span><span class="sxs-lookup"><span data-stu-id="4e42c-257">The specified property name is too large.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="4e42c-258">Validierung ist aktiviert, und der Schreibvorgang würde ungültige JSON-Daten produzieren.</span><span class="sxs-lookup"><span data-stu-id="4e42c-258">Validation is enabled, and the write operation would produce invalid JSON.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteNumber">
      <MemberSignature Language="C#" Value="public void WriteNumber (ReadOnlySpan&lt;char&gt; propertyName, double value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteNumber(valuetype System.ReadOnlySpan`1&lt;char&gt; propertyName, float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteNumber(System.ReadOnlySpan{System.Char},System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteNumber (propertyName As ReadOnlySpan(Of Char), value As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteNumber(ReadOnlySpan&lt;char&gt; propertyName, double value);" />
      <MemberSignature Language="F#" Value="member this.WriteNumber : ReadOnlySpan&lt;char&gt; * double -&gt; unit" Usage="utf8JsonWriter.WriteNumber (propertyName, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="propertyName"><span data-ttu-id="4e42c-259">Der UTF-16-codierte Eigenschaftenname des JSON-Objekts, das zu transcodieren und als UTF-8 zu schreiben ist.</span><span class="sxs-lookup"><span data-stu-id="4e42c-259">The UTF-16 encoded property name of the JSON object to be transcoded and written as UTF-8.</span></span></param>
        <param name="value"><span data-ttu-id="4e42c-260">Der Wert, der als JSON-Zahl als Teil des Name-Wert-Paars geschrieben werden soll.</span><span class="sxs-lookup"><span data-stu-id="4e42c-260">The value to be written as a JSON number as part of the name/value pair.</span></span></param>
        <summary><span data-ttu-id="4e42c-261">Schreibt einen als schreibgeschützte Zeichenspanne angegebenen Eigenschaftennamen und einen <see cref="T:System.Double" />-Wert (als JSON-Zahl) als Teil eines Name-Wert-Paars eines JSON-Objekts.</span><span class="sxs-lookup"><span data-stu-id="4e42c-261">Writes a property name specified as a read-only character span and a <see cref="T:System.Double" /> value (as a JSON number) as part of a name/value pair of a JSON object.</span></span></summary>
        <remarks>
          <format><![CDATA[
          
<span data-ttu-id="4e42c-262">Der Eigenschaftsname wird vor dem Schreiben mit Escapezeichen versehen.</span><span class="sxs-lookup"><span data-stu-id="4e42c-262">The property name is escaped before writing.</span></span>
          
          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="4e42c-263">Der angegebene Eigenschaftenname ist zu lang.</span><span class="sxs-lookup"><span data-stu-id="4e42c-263">The specified property name is too large.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="4e42c-264">Validierung ist aktiviert, und der Schreibvorgang würde ungültige JSON-Daten produzieren.</span><span class="sxs-lookup"><span data-stu-id="4e42c-264">Validation is enabled, and the write operation would produce invalid JSON.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteNumber">
      <MemberSignature Language="C#" Value="public void WriteNumber (ReadOnlySpan&lt;char&gt; propertyName, int value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteNumber(valuetype System.ReadOnlySpan`1&lt;char&gt; propertyName, int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteNumber(System.ReadOnlySpan{System.Char},System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteNumber (propertyName As ReadOnlySpan(Of Char), value As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteNumber(ReadOnlySpan&lt;char&gt; propertyName, int value);" />
      <MemberSignature Language="F#" Value="member this.WriteNumber : ReadOnlySpan&lt;char&gt; * int -&gt; unit" Usage="utf8JsonWriter.WriteNumber (propertyName, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="propertyName"><span data-ttu-id="4e42c-265">Der UTF-16-codierte Eigenschaftenname des JSON-Objekts, das zu transcodieren und als UTF-8 zu schreiben ist.</span><span class="sxs-lookup"><span data-stu-id="4e42c-265">The UTF-16 encoded property name of the JSON object to be transcoded and written as UTF-8.</span></span></param>
        <param name="value"><span data-ttu-id="4e42c-266">Der Wert, der als JSON-Zahl als Teil des Name-Wert-Paars geschrieben werden soll.</span><span class="sxs-lookup"><span data-stu-id="4e42c-266">The value to be written as a JSON number as part of the name/value pair.</span></span></param>
        <summary><span data-ttu-id="4e42c-267">Schreibt einen als schreibgeschützte Zeichenspanne angegebenen Eigenschaftennamen und einen <see cref="T:System.Int32" />-Wert (als JSON-Zahl) als Teil eines Name-Wert-Paars eines JSON-Objekts.</span><span class="sxs-lookup"><span data-stu-id="4e42c-267">Writes a property name specified as a read-only character span and an <see cref="T:System.Int32" /> value (as a JSON number) as part of a name/value pair of a JSON object.</span></span></summary>
        <remarks>
          <format><![CDATA[

<span data-ttu-id="4e42c-268">Der Eigenschaftsname wird vor dem Schreiben mit Escapezeichen versehen.</span><span class="sxs-lookup"><span data-stu-id="4e42c-268">The property name is escaped before writing.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="4e42c-269">Der angegebene Eigenschaftenname ist zu lang.</span><span class="sxs-lookup"><span data-stu-id="4e42c-269">The specified property name is too large.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="4e42c-270">Validierung ist aktiviert, und der Schreibvorgang würde ungültige JSON-Daten produzieren.</span><span class="sxs-lookup"><span data-stu-id="4e42c-270">Validation is enabled, and the write operation would produce invalid JSON.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteNumber">
      <MemberSignature Language="C#" Value="public void WriteNumber (ReadOnlySpan&lt;char&gt; propertyName, long value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteNumber(valuetype System.ReadOnlySpan`1&lt;char&gt; propertyName, int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteNumber(System.ReadOnlySpan{System.Char},System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteNumber (propertyName As ReadOnlySpan(Of Char), value As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteNumber(ReadOnlySpan&lt;char&gt; propertyName, long value);" />
      <MemberSignature Language="F#" Value="member this.WriteNumber : ReadOnlySpan&lt;char&gt; * int64 -&gt; unit" Usage="utf8JsonWriter.WriteNumber (propertyName, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="propertyName"><span data-ttu-id="4e42c-271">Der UTF-16-codierte Eigenschaftenname des JSON-Objekts, das zu transcodieren und als UTF-8 zu schreiben ist.</span><span class="sxs-lookup"><span data-stu-id="4e42c-271">The UTF-16 encoded property name of the JSON object to be transcoded and written as UTF-8.</span></span></param>
        <param name="value"><span data-ttu-id="4e42c-272">Der Wert, der als JSON-Zahl als Teil des Name-Wert-Paars geschrieben werden soll.</span><span class="sxs-lookup"><span data-stu-id="4e42c-272">The value to be written as a JSON number as part of the name/value pair.</span></span></param>
        <summary><span data-ttu-id="4e42c-273">Schreibt einen als schreibgeschützte Zeichenspanne angegebenen Eigenschaftennamen und einen <see cref="T:System.Int64" />-Wert (als JSON-Zahl) als Teil eines Name-Wert-Paars eines JSON-Objekts.</span><span class="sxs-lookup"><span data-stu-id="4e42c-273">Writes a property name specified as a read-only character span and an <see cref="T:System.Int64" /> value (as a JSON number) as part of a name/value pair of a JSON object.</span></span></summary>
        <remarks>
          <format><![CDATA[

<span data-ttu-id="4e42c-274">Der Eigenschaftsname wird vor dem Schreiben mit Escapezeichen versehen.</span><span class="sxs-lookup"><span data-stu-id="4e42c-274">The property name is escaped before writing.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="4e42c-275">Der angegebene Eigenschaftenname ist zu lang.</span><span class="sxs-lookup"><span data-stu-id="4e42c-275">The specified property name is too large.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="4e42c-276">Validierung ist aktiviert, und der Schreibvorgang würde ungültige JSON-Daten produzieren.</span><span class="sxs-lookup"><span data-stu-id="4e42c-276">Validation is enabled, and the write operation would produce invalid JSON.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteNumber">
      <MemberSignature Language="C#" Value="public void WriteNumber (ReadOnlySpan&lt;char&gt; propertyName, float value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteNumber(valuetype System.ReadOnlySpan`1&lt;char&gt; propertyName, float32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteNumber(System.ReadOnlySpan{System.Char},System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteNumber (propertyName As ReadOnlySpan(Of Char), value As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteNumber(ReadOnlySpan&lt;char&gt; propertyName, float value);" />
      <MemberSignature Language="F#" Value="member this.WriteNumber : ReadOnlySpan&lt;char&gt; * single -&gt; unit" Usage="utf8JsonWriter.WriteNumber (propertyName, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="propertyName"><span data-ttu-id="4e42c-277">Der UTF-16-codierte Eigenschaftenname des JSON-Objekts, das zu transcodieren und als UTF-8 zu schreiben ist.</span><span class="sxs-lookup"><span data-stu-id="4e42c-277">The UTF-16 encoded property name of the JSON object to be transcoded and written as UTF-8.</span></span></param>
        <param name="value"><span data-ttu-id="4e42c-278">Der Wert, der als JSON-Zahl als Teil des Name-Wert-Paars geschrieben werden soll.</span><span class="sxs-lookup"><span data-stu-id="4e42c-278">The value to be written as a JSON number as part of the name/value pair.</span></span></param>
        <summary><span data-ttu-id="4e42c-279">Schreibt einen als schreibgeschützte Zeichenspanne angegebenen Eigenschaftennamen und einen <see cref="T:System.Single" />-Wert (als JSON-Zahl) als Teil eines Name-Wert-Paars eines JSON-Objekts.</span><span class="sxs-lookup"><span data-stu-id="4e42c-279">Writes a property name specified as a read-only character span and a <see cref="T:System.Single" /> value (as a JSON number) as part of a name/value pair of a JSON object.</span></span></summary>
        <remarks>
          <format><![CDATA[

<span data-ttu-id="4e42c-280">Der Eigenschaftsname wird vor dem Schreiben mit Escapezeichen versehen.</span><span class="sxs-lookup"><span data-stu-id="4e42c-280">The property name is escaped before writing.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="4e42c-281">Der angegebene Eigenschaftenname ist zu lang.</span><span class="sxs-lookup"><span data-stu-id="4e42c-281">The specified property name is too large.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="4e42c-282">Validierung ist aktiviert, und der Schreibvorgang würde ungültige JSON-Daten produzieren.</span><span class="sxs-lookup"><span data-stu-id="4e42c-282">Validation is enabled, and the write operation would produce invalid JSON.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteNumber">
      <MemberSignature Language="C#" Value="public void WriteNumber (ReadOnlySpan&lt;char&gt; propertyName, uint value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteNumber(valuetype System.ReadOnlySpan`1&lt;char&gt; propertyName, unsigned int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteNumber(System.ReadOnlySpan{System.Char},System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteNumber (propertyName As ReadOnlySpan(Of Char), value As UInteger)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteNumber(ReadOnlySpan&lt;char&gt; propertyName, System::UInt32 value);" />
      <MemberSignature Language="F#" Value="member this.WriteNumber : ReadOnlySpan&lt;char&gt; * uint32 -&gt; unit" Usage="utf8JsonWriter.WriteNumber (propertyName, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="value" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="propertyName"><span data-ttu-id="4e42c-283">Der UTF-16-codierte Eigenschaftenname des JSON-Objekts, das zu transcodieren und als UTF-8 zu schreiben ist.</span><span class="sxs-lookup"><span data-stu-id="4e42c-283">The UTF-16 encoded property name of the JSON object to be transcoded and written as UTF-8.</span></span></param>
        <param name="value"><span data-ttu-id="4e42c-284">Der Wert, der als JSON-Zahl als Teil des Name-Wert-Paars geschrieben werden soll.</span><span class="sxs-lookup"><span data-stu-id="4e42c-284">The value to be written as a JSON number as part of the name/value pair.</span></span></param>
        <summary><span data-ttu-id="4e42c-285">Schreibt einen als schreibgeschützte Zeichenspanne angegebenen Eigenschaftennamen und einen <see cref="T:System.UInt32" />-Wert (als JSON-Zahl) als Teil eines Name-Wert-Paars eines JSON-Objekts.</span><span class="sxs-lookup"><span data-stu-id="4e42c-285">Writes a property name specified as a read-only character span and a <see cref="T:System.UInt32" /> value (as a JSON number) as part of a name/value pair of a JSON object.</span></span></summary>
        <remarks>
          <format><![CDATA[

<span data-ttu-id="4e42c-286">Der Eigenschaftsname wird vor dem Schreiben mit Escapezeichen versehen.</span><span class="sxs-lookup"><span data-stu-id="4e42c-286">The property name is escaped before writing.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="4e42c-287">Der angegebene Eigenschaftenname ist zu lang.</span><span class="sxs-lookup"><span data-stu-id="4e42c-287">The specified property name is too large.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="4e42c-288">Validierung ist aktiviert, und der Schreibvorgang würde ungültige JSON-Daten produzieren.</span><span class="sxs-lookup"><span data-stu-id="4e42c-288">Validation is enabled, and the write operation would produce invalid JSON.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteNumber">
      <MemberSignature Language="C#" Value="public void WriteNumber (ReadOnlySpan&lt;char&gt; propertyName, ulong value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteNumber(valuetype System.ReadOnlySpan`1&lt;char&gt; propertyName, unsigned int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteNumber(System.ReadOnlySpan{System.Char},System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteNumber (propertyName As ReadOnlySpan(Of Char), value As ULong)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteNumber(ReadOnlySpan&lt;char&gt; propertyName, System::UInt64 value);" />
      <MemberSignature Language="F#" Value="member this.WriteNumber : ReadOnlySpan&lt;char&gt; * uint64 -&gt; unit" Usage="utf8JsonWriter.WriteNumber (propertyName, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="value" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="propertyName"><span data-ttu-id="4e42c-289">Der UTF-16-codierte Eigenschaftenname des JSON-Objekts, das zu transcodieren und als UTF-8 zu schreiben ist.</span><span class="sxs-lookup"><span data-stu-id="4e42c-289">The UTF-16 encoded property name of the JSON object to be transcoded and written as UTF-8.</span></span></param>
        <param name="value"><span data-ttu-id="4e42c-290">Der Wert, der als JSON-Zahl als Teil des Name-Wert-Paars geschrieben werden soll.</span><span class="sxs-lookup"><span data-stu-id="4e42c-290">The value to be written as a JSON number as part of the name/value pair.</span></span></param>
        <summary><span data-ttu-id="4e42c-291">Schreibt einen als schreibgeschützte Zeichenspanne angegebenen Eigenschaftennamen und einen <see cref="T:System.UInt64" />-Wert (als JSON-Zahl) als Teil eines Name-Wert-Paars eines JSON-Objekts.</span><span class="sxs-lookup"><span data-stu-id="4e42c-291">Writes a property name specified as a read-only character span and a <see cref="T:System.UInt64" /> value (as a JSON number) as part of a name/value pair of a JSON object.</span></span></summary>
        <remarks>
          <format><![CDATA[

<span data-ttu-id="4e42c-292">Der Eigenschaftsname wird vor dem Schreiben mit Escapezeichen versehen.</span><span class="sxs-lookup"><span data-stu-id="4e42c-292">The property name is escaped before writing.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="4e42c-293">Der angegebene Eigenschaftenname ist zu lang.</span><span class="sxs-lookup"><span data-stu-id="4e42c-293">The specified property name is too large.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="4e42c-294">Validierung ist aktiviert, und der Schreibvorgang würde ungültige JSON-Daten produzieren.</span><span class="sxs-lookup"><span data-stu-id="4e42c-294">Validation is enabled, and the write operation would produce invalid JSON.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteNumber">
      <MemberSignature Language="C#" Value="public void WriteNumber (string propertyName, decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteNumber(string propertyName, valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteNumber(System.String,System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteNumber (propertyName As String, value As Decimal)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteNumber(System::String ^ propertyName, System::Decimal value);" />
      <MemberSignature Language="F#" Value="member this.WriteNumber : string * decimal -&gt; unit" Usage="utf8JsonWriter.WriteNumber (propertyName, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="propertyName"><span data-ttu-id="4e42c-295">Der UTF-16-codierte Eigenschaftenname des JSON-Objekts, das zu transcodieren und als UTF-8 zu schreiben ist.</span><span class="sxs-lookup"><span data-stu-id="4e42c-295">The UTF-16 encoded property name of the JSON object to be transcoded and written as UTF-8.</span></span></param>
        <param name="value"><span data-ttu-id="4e42c-296">Der Wert, der als JSON-Zahl als Teil des Name-Wert-Paars geschrieben werden soll.</span><span class="sxs-lookup"><span data-stu-id="4e42c-296">The value to be written as a JSON number as part of the name/value pair.</span></span></param>
        <summary><span data-ttu-id="4e42c-297">Schreibt einen als Zeichenfolge angegebenen Eigenschaftennamen und einen <see cref="T:System.Decimal" />-Wert (als JSON-Zahl) als Teil eines Name-Wert-Paars eines JSON-Objekts.</span><span class="sxs-lookup"><span data-stu-id="4e42c-297">Writes a property name specified as a string and a <see cref="T:System.Decimal" /> value (as a JSON number) as part of a name/value pair of a JSON object.</span></span></summary>
        <remarks>
          <format><![CDATA[

<span data-ttu-id="4e42c-298">Der Eigenschaftsname wird vor dem Schreiben mit Escapezeichen versehen.</span><span class="sxs-lookup"><span data-stu-id="4e42c-298">The property name is escaped before writing.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="4e42c-299">Der angegebene Eigenschaftenname ist zu lang.</span><span class="sxs-lookup"><span data-stu-id="4e42c-299">The specified property name is too large.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="4e42c-300">Validierung ist aktiviert, und der Schreibvorgang würde ungültige JSON-Daten produzieren.</span><span class="sxs-lookup"><span data-stu-id="4e42c-300">Validation is enabled, and the write operation would produce invalid JSON.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteNumber">
      <MemberSignature Language="C#" Value="public void WriteNumber (string propertyName, double value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteNumber(string propertyName, float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteNumber(System.String,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteNumber (propertyName As String, value As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteNumber(System::String ^ propertyName, double value);" />
      <MemberSignature Language="F#" Value="member this.WriteNumber : string * double -&gt; unit" Usage="utf8JsonWriter.WriteNumber (propertyName, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="propertyName"><span data-ttu-id="4e42c-301">Der UTF-16-codierte Eigenschaftenname des JSON-Objekts, das zu transcodieren und als UTF-8 zu schreiben ist.</span><span class="sxs-lookup"><span data-stu-id="4e42c-301">The UTF-16 encoded property name of the JSON object to be transcoded and written as UTF-8.</span></span></param>
        <param name="value"><span data-ttu-id="4e42c-302">Der Wert, der als JSON-Zahl als Teil des Name-Wert-Paars geschrieben werden soll.</span><span class="sxs-lookup"><span data-stu-id="4e42c-302">The value to be written as a JSON number as part of the name/value pair.</span></span></param>
        <summary><span data-ttu-id="4e42c-303">Schreibt einen als Zeichenfolge angegebenen Eigenschaftennamen und einen <see cref="T:System.Double" />-Wert (als JSON-Zahl) als Teil eines Name-Wert-Paars eines JSON-Objekts.</span><span class="sxs-lookup"><span data-stu-id="4e42c-303">Writes a property name specified as a string and a <see cref="T:System.Double" /> value (as a JSON number) as part of a name/value pair of a JSON object.</span></span></summary>
        <remarks>
          <format><![CDATA[

<span data-ttu-id="4e42c-304">Der Eigenschaftsname wird vor dem Schreiben mit Escapezeichen versehen.</span><span class="sxs-lookup"><span data-stu-id="4e42c-304">The property name is escaped before writing.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="4e42c-305">Der angegebene Eigenschaftenname ist zu lang.</span><span class="sxs-lookup"><span data-stu-id="4e42c-305">The specified property name is too large.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="4e42c-306">Validierung ist aktiviert, und der Schreibvorgang würde ungültige JSON-Daten produzieren.</span><span class="sxs-lookup"><span data-stu-id="4e42c-306">Validation is enabled, and the write operation would produce invalid JSON.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteNumber">
      <MemberSignature Language="C#" Value="public void WriteNumber (string propertyName, int value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteNumber(string propertyName, int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteNumber(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteNumber (propertyName As String, value As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteNumber(System::String ^ propertyName, int value);" />
      <MemberSignature Language="F#" Value="member this.WriteNumber : string * int -&gt; unit" Usage="utf8JsonWriter.WriteNumber (propertyName, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="propertyName"><span data-ttu-id="4e42c-307">Der UTF-16-codierte Eigenschaftenname des JSON-Objekts, das zu transcodieren und als UTF-8 zu schreiben ist.</span><span class="sxs-lookup"><span data-stu-id="4e42c-307">The UTF-16 encoded property name of the JSON object to be transcoded and written as UTF-8.</span></span></param>
        <param name="value"><span data-ttu-id="4e42c-308">Der Wert, der als JSON-Zahl als Teil des Name-Wert-Paars geschrieben werden soll.</span><span class="sxs-lookup"><span data-stu-id="4e42c-308">The value to be written as a JSON number as part of the name/value pair.</span></span></param>
        <summary><span data-ttu-id="4e42c-309">Schreibt einen als Zeichenfolge angegebenen Eigenschaftennamen und einen <see cref="T:System.Int32" />-Wert (als JSON-Zahl) als Teil eines Name-Wert-Paars eines JSON-Objekts.</span><span class="sxs-lookup"><span data-stu-id="4e42c-309">Writes a property name specified as a string and an <see cref="T:System.Int32" /> value (as a JSON number) as part of a name/value pair of a JSON object.</span></span></summary>
        <remarks>
          <format><![CDATA[

<span data-ttu-id="4e42c-310">Der Eigenschaftsname wird vor dem Schreiben mit Escapezeichen versehen.</span><span class="sxs-lookup"><span data-stu-id="4e42c-310">The property name is escaped before writing.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="4e42c-311">Der angegebene Eigenschaftenname ist zu lang.</span><span class="sxs-lookup"><span data-stu-id="4e42c-311">The specified property name is too large.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="4e42c-312">Validierung ist aktiviert, und der Schreibvorgang würde ungültige JSON-Daten produzieren.</span><span class="sxs-lookup"><span data-stu-id="4e42c-312">Validation is enabled, and the write operation would produce invalid JSON.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteNumber">
      <MemberSignature Language="C#" Value="public void WriteNumber (string propertyName, long value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteNumber(string propertyName, int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteNumber(System.String,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteNumber (propertyName As String, value As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteNumber(System::String ^ propertyName, long value);" />
      <MemberSignature Language="F#" Value="member this.WriteNumber : string * int64 -&gt; unit" Usage="utf8JsonWriter.WriteNumber (propertyName, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="propertyName"><span data-ttu-id="4e42c-313">Der UTF-16-codierte Eigenschaftenname des JSON-Objekts, das zu transcodieren und als UTF-8 zu schreiben ist.</span><span class="sxs-lookup"><span data-stu-id="4e42c-313">The UTF-16 encoded property name of the JSON object to be transcoded and written as UTF-8.</span></span></param>
        <param name="value"><span data-ttu-id="4e42c-314">Der Wert, der als JSON-Zahl als Teil des Name-Wert-Paars geschrieben werden soll.</span><span class="sxs-lookup"><span data-stu-id="4e42c-314">The value to be written as a JSON number as part of the name/value pair.</span></span></param>
        <summary><span data-ttu-id="4e42c-315">Schreibt einen als Zeichenfolge angegebenen Eigenschaftennamen und einen <see cref="T:System.Int64" />-Wert (als JSON-Zahl) als Teil eines Name-Wert-Paars eines JSON-Objekts.</span><span class="sxs-lookup"><span data-stu-id="4e42c-315">Writes a property name specified as a string and an <see cref="T:System.Int64" /> value (as a JSON number) as part of a name/value pair of a JSON object.</span></span></summary>
        <remarks>
          <format><![CDATA[

<span data-ttu-id="4e42c-316">Der Eigenschaftsname wird vor dem Schreiben mit Escapezeichen versehen.</span><span class="sxs-lookup"><span data-stu-id="4e42c-316">The property name is escaped before writing.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="4e42c-317">Der angegebene Eigenschaftenname ist zu lang.</span><span class="sxs-lookup"><span data-stu-id="4e42c-317">The specified property name is too large.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="4e42c-318">Validierung ist aktiviert, und der Schreibvorgang würde ungültige JSON-Daten produzieren.</span><span class="sxs-lookup"><span data-stu-id="4e42c-318">Validation is enabled, and the write operation would produce invalid JSON.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteNumber">
      <MemberSignature Language="C#" Value="public void WriteNumber (string propertyName, float value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteNumber(string propertyName, float32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteNumber(System.String,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteNumber (propertyName As String, value As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteNumber(System::String ^ propertyName, float value);" />
      <MemberSignature Language="F#" Value="member this.WriteNumber : string * single -&gt; unit" Usage="utf8JsonWriter.WriteNumber (propertyName, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="propertyName"><span data-ttu-id="4e42c-319">Der UTF-16-codierte Eigenschaftenname des JSON-Objekts, das zu transcodieren und als UTF-8 zu schreiben ist.</span><span class="sxs-lookup"><span data-stu-id="4e42c-319">The UTF-16 encoded property name of the JSON object to be transcoded and written as UTF-8.</span></span></param>
        <param name="value"><span data-ttu-id="4e42c-320">Der Wert, der als JSON-Zahl als Teil des Name-Wert-Paars geschrieben werden soll.</span><span class="sxs-lookup"><span data-stu-id="4e42c-320">The value to be written as a JSON number as part of the name/value pair.</span></span></param>
        <summary><span data-ttu-id="4e42c-321">Schreibt einen als Zeichenfolge angegebenen Eigenschaftennamen und einen <see cref="T:System.Single" />-Wert (als JSON-Zahl) als Teil eines Name-Wert-Paars eines JSON-Objekts.</span><span class="sxs-lookup"><span data-stu-id="4e42c-321">Writes a property name specified as a string and a <see cref="T:System.Single" /> value (as a JSON number) as part of a name/value pair of a JSON object.</span></span></summary>
        <remarks>
          <format><![CDATA[

<span data-ttu-id="4e42c-322">Der Eigenschaftsname wird vor dem Schreiben mit Escapezeichen versehen.</span><span class="sxs-lookup"><span data-stu-id="4e42c-322">The property name is escaped before writing.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="4e42c-323">Der angegebene Eigenschaftenname ist zu lang.</span><span class="sxs-lookup"><span data-stu-id="4e42c-323">The specified property name is too large.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="4e42c-324">Validierung ist aktiviert, und der Schreibvorgang würde ungültige JSON-Daten produzieren.</span><span class="sxs-lookup"><span data-stu-id="4e42c-324">Validation is enabled, and the write operation would produce invalid JSON.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteNumber">
      <MemberSignature Language="C#" Value="public void WriteNumber (string propertyName, uint value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteNumber(string propertyName, unsigned int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteNumber(System.String,System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteNumber (propertyName As String, value As UInteger)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteNumber(System::String ^ propertyName, System::UInt32 value);" />
      <MemberSignature Language="F#" Value="member this.WriteNumber : string * uint32 -&gt; unit" Usage="utf8JsonWriter.WriteNumber (propertyName, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
        <Parameter Name="value" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="propertyName"><span data-ttu-id="4e42c-325">Der UTF-16-codierte Eigenschaftenname des JSON-Objekts, das zu transcodieren und als UTF-8 zu schreiben ist.</span><span class="sxs-lookup"><span data-stu-id="4e42c-325">The UTF-16 encoded property name of the JSON object to be transcoded and written as UTF-8.</span></span></param>
        <param name="value"><span data-ttu-id="4e42c-326">Der Wert, der als JSON-Zahl als Teil des Name-Wert-Paars geschrieben werden soll.</span><span class="sxs-lookup"><span data-stu-id="4e42c-326">The value to be written as a JSON number as part of the name/value pair.</span></span></param>
        <summary><span data-ttu-id="4e42c-327">Schreibt einen als Zeichenfolge angegebenen Eigenschaftennamen und einen <see cref="T:System.UInt32" />-Wert (als JSON-Zahl) als Teil eines Name-Wert-Paars eines JSON-Objekts.</span><span class="sxs-lookup"><span data-stu-id="4e42c-327">Writes a property name specified as a string and a <see cref="T:System.UInt32" /> value (as a JSON number) as part of a name/value pair of a JSON object.</span></span></summary>
        <remarks>
          <format><![CDATA[

<span data-ttu-id="4e42c-328">Der Eigenschaftsname wird vor dem Schreiben mit Escapezeichen versehen.</span><span class="sxs-lookup"><span data-stu-id="4e42c-328">The property name is escaped before writing.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="4e42c-329">Der angegebene Eigenschaftenname ist zu lang.</span><span class="sxs-lookup"><span data-stu-id="4e42c-329">The specified property name is too large.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="4e42c-330">Validierung ist aktiviert, und der Schreibvorgang würde ungültige JSON-Daten produzieren.</span><span class="sxs-lookup"><span data-stu-id="4e42c-330">Validation is enabled, and the write operation would produce invalid JSON.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteNumber">
      <MemberSignature Language="C#" Value="public void WriteNumber (string propertyName, ulong value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteNumber(string propertyName, unsigned int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteNumber(System.String,System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteNumber (propertyName As String, value As ULong)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteNumber(System::String ^ propertyName, System::UInt64 value);" />
      <MemberSignature Language="F#" Value="member this.WriteNumber : string * uint64 -&gt; unit" Usage="utf8JsonWriter.WriteNumber (propertyName, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
        <Parameter Name="value" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="propertyName"><span data-ttu-id="4e42c-331">Der UTF-16-codierte Eigenschaftenname des JSON-Objekts, das zu transcodieren und als UTF-8 zu schreiben ist.</span><span class="sxs-lookup"><span data-stu-id="4e42c-331">The UTF-16 encoded property name of the JSON object to be transcoded and written as UTF-8.</span></span></param>
        <param name="value"><span data-ttu-id="4e42c-332">Der Wert, der als JSON-Zahl als Teil des Name-Wert-Paars geschrieben werden soll.</span><span class="sxs-lookup"><span data-stu-id="4e42c-332">The value to be written as a JSON number as part of the name/value pair.</span></span></param>
        <summary><span data-ttu-id="4e42c-333">Schreibt einen als Zeichenfolge angegebenen Eigenschaftennamen und einen <see cref="T:System.UInt64" />-Wert (als JSON-Zahl) als Teil eines Name-Wert-Paars eines JSON-Objekts.</span><span class="sxs-lookup"><span data-stu-id="4e42c-333">Writes a property name specified as a string and a <see cref="T:System.UInt64" /> value (as a JSON number) as part of a name/value pair of a JSON object.</span></span></summary>
        <remarks>
          <format><![CDATA[

<span data-ttu-id="4e42c-334">Der Eigenschaftsname wird vor dem Schreiben mit Escapezeichen versehen.</span><span class="sxs-lookup"><span data-stu-id="4e42c-334">The property name is escaped before writing.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="4e42c-335">Der angegebene Eigenschaftenname ist zu lang.</span><span class="sxs-lookup"><span data-stu-id="4e42c-335">The specified property name is too large.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="4e42c-336">Validierung ist aktiviert, und der Schreibvorgang würde ungültige JSON-Daten produzieren.</span><span class="sxs-lookup"><span data-stu-id="4e42c-336">Validation is enabled, and the write operation would produce invalid JSON.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteNumberValue">
      <MemberSignature Language="C#" Value="public void WriteNumberValue (decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteNumberValue(valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteNumberValue(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteNumberValue (value As Decimal)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteNumberValue(System::Decimal value);" />
      <MemberSignature Language="F#" Value="member this.WriteNumberValue : decimal -&gt; unit" Usage="utf8JsonWriter.WriteNumberValue value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="4e42c-337">Der Wert, der als JSON-Zahl als ein Element eines JSON-Arrays geschrieben werden soll.</span><span class="sxs-lookup"><span data-stu-id="4e42c-337">The value to be written as a JSON number as an element of a JSON array.</span></span></param>
        <summary><span data-ttu-id="4e42c-338">Schreibt einen <see cref="T:System.Decimal" />-Wert (als JSON-Zahl) als ein Element eines JSON-Arrays.</span><span class="sxs-lookup"><span data-stu-id="4e42c-338">Writes a <see cref="T:System.Decimal" /> value (as a JSON number) as an element of a JSON array.</span></span></summary>
        <remarks><span data-ttu-id="4e42c-339">Diese Methode schreibt die <see cref="T:System.Decimal" /> -Wert mithilfe der standardmäßigen <see cref="T:System.Buffers.StandardFormat" /> (d.h., ' G').</span><span class="sxs-lookup"><span data-stu-id="4e42c-339">This method writes the <see cref="T:System.Decimal" /> value using the default <see cref="T:System.Buffers.StandardFormat" /> (that is, 'G').</span></span></remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="4e42c-340">Validierung ist aktiviert, und der Vorgang würde im Schreiben ungültiger JSON-Daten resultieren.</span><span class="sxs-lookup"><span data-stu-id="4e42c-340">Validation is enabled, and the operation would result in writing invalid JSON.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteNumberValue">
      <MemberSignature Language="C#" Value="public void WriteNumberValue (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteNumberValue(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteNumberValue(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteNumberValue (value As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteNumberValue(double value);" />
      <MemberSignature Language="F#" Value="member this.WriteNumberValue : double -&gt; unit" Usage="utf8JsonWriter.WriteNumberValue value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="4e42c-341">Der Wert, der als JSON-Zahl als ein Element eines JSON-Arrays geschrieben werden soll.</span><span class="sxs-lookup"><span data-stu-id="4e42c-341">The value to be written as a JSON number as an element of a JSON array.</span></span></param>
        <summary><span data-ttu-id="4e42c-342">Schreibt einen <see cref="T:System.Double" />-Wert (als JSON-Zahl) als ein Element eines JSON-Arrays.</span><span class="sxs-lookup"><span data-stu-id="4e42c-342">Writes a <see cref="T:System.Double" /> value (as a JSON number) as an element of a JSON array.</span></span></summary>
        <remarks><span data-ttu-id="4e42c-343">Diese Methode schreibt die <see cref="T:System.Double" /> -Wert mithilfe der standardmäßigen <see cref="T:System.Buffers.StandardFormat" /> (d.h., ' G').</span><span class="sxs-lookup"><span data-stu-id="4e42c-343">This method writes the <see cref="T:System.Double" /> value using the default <see cref="T:System.Buffers.StandardFormat" /> (that is, 'G').</span></span></remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="4e42c-344">Validierung ist aktiviert, und der Vorgang würde im Schreiben ungültiger JSON-Daten resultieren.</span><span class="sxs-lookup"><span data-stu-id="4e42c-344">Validation is enabled, and the operation would result in writing invalid JSON.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteNumberValue">
      <MemberSignature Language="C#" Value="public void WriteNumberValue (int value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteNumberValue(int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteNumberValue(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteNumberValue (value As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteNumberValue(int value);" />
      <MemberSignature Language="F#" Value="member this.WriteNumberValue : int -&gt; unit" Usage="utf8JsonWriter.WriteNumberValue value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="4e42c-345">Der Wert, der als JSON-Zahl als ein Element eines JSON-Arrays geschrieben werden soll.</span><span class="sxs-lookup"><span data-stu-id="4e42c-345">The value to be written as a JSON number as an element of a JSON array.</span></span></param>
        <summary><span data-ttu-id="4e42c-346">Schreibt einen <see cref="T:System.Int32" />-Wert (als JSON-Zahl) als ein Element eines JSON-Arrays.</span><span class="sxs-lookup"><span data-stu-id="4e42c-346">Writes an <see cref="T:System.Int32" /> value (as a JSON number) as an element of a JSON array.</span></span></summary>
        <remarks><span data-ttu-id="4e42c-347">Diese Methode schreibt die <see cref="T:System.Int32" /> -Wert mithilfe der standardmäßigen <see cref="T:System.Buffers.StandardFormat" /> (d.h., ' G').</span><span class="sxs-lookup"><span data-stu-id="4e42c-347">This method writes the <see cref="T:System.Int32" /> value using the default <see cref="T:System.Buffers.StandardFormat" /> (that is, 'G').</span></span> <span data-ttu-id="4e42c-348">Beispiel: 32767.</span><span class="sxs-lookup"><span data-stu-id="4e42c-348">For example, 32767.</span></span></remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="4e42c-349">Validierung ist aktiviert, und der Vorgang würde im Schreiben ungültiger JSON-Daten resultieren.</span><span class="sxs-lookup"><span data-stu-id="4e42c-349">Validation is enabled, and the operation would result in writing invalid JSON.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteNumberValue">
      <MemberSignature Language="C#" Value="public void WriteNumberValue (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteNumberValue(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteNumberValue(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteNumberValue (value As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteNumberValue(long value);" />
      <MemberSignature Language="F#" Value="member this.WriteNumberValue : int64 -&gt; unit" Usage="utf8JsonWriter.WriteNumberValue value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="4e42c-350">Der Wert, der als JSON-Zahl als ein Element eines JSON-Arrays geschrieben werden soll.</span><span class="sxs-lookup"><span data-stu-id="4e42c-350">The value to be written as a JSON number as an element of a JSON array.</span></span></param>
        <summary><span data-ttu-id="4e42c-351">Schreibt einen <see cref="T:System.Int64" />-Wert (als JSON-Zahl) als ein Element eines JSON-Arrays.</span><span class="sxs-lookup"><span data-stu-id="4e42c-351">Writes an <see cref="T:System.Int64" /> value (as a JSON number) as an element of a JSON array.</span></span></summary>
        <remarks><span data-ttu-id="4e42c-352">Diese Methode schreibt die <see cref="T:System.Int64" /> -Wert mithilfe der standardmäßigen <see cref="T:System.Buffers.StandardFormat" /> (d.h., ' G').</span><span class="sxs-lookup"><span data-stu-id="4e42c-352">This method writes the <see cref="T:System.Int64" /> value using the default <see cref="T:System.Buffers.StandardFormat" /> (that is, 'G').</span></span> <span data-ttu-id="4e42c-353">Beispiel: 32767.</span><span class="sxs-lookup"><span data-stu-id="4e42c-353">For example, 32767.</span></span></remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="4e42c-354">Validierung ist aktiviert, und der Vorgang würde im Schreiben ungültiger JSON-Daten resultieren.</span><span class="sxs-lookup"><span data-stu-id="4e42c-354">Validation is enabled, and the operation would result in writing invalid JSON.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteNumberValue">
      <MemberSignature Language="C#" Value="public void WriteNumberValue (float value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteNumberValue(float32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteNumberValue(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteNumberValue (value As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteNumberValue(float value);" />
      <MemberSignature Language="F#" Value="member this.WriteNumberValue : single -&gt; unit" Usage="utf8JsonWriter.WriteNumberValue value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="4e42c-355">Der Wert, der als JSON-Zahl als ein Element eines JSON-Arrays geschrieben werden soll.</span><span class="sxs-lookup"><span data-stu-id="4e42c-355">The value to be written as a JSON number as an element of a JSON array.</span></span></param>
        <summary><span data-ttu-id="4e42c-356">Schreibt einen <see cref="T:System.Single" />-Wert (als JSON-Zahl) als ein Element eines JSON-Arrays.</span><span class="sxs-lookup"><span data-stu-id="4e42c-356">Writes a <see cref="T:System.Single" /> value (as a JSON number) as an element of a JSON array.</span></span></summary>
        <remarks><span data-ttu-id="4e42c-357">Diese Methode schreibt die <see cref="T:System.Single" /> -Wert mithilfe der standardmäßigen <see cref="T:System.Buffers.StandardFormat" /> (d.h., ' G').</span><span class="sxs-lookup"><span data-stu-id="4e42c-357">This method writes the <see cref="T:System.Single" /> value using the default <see cref="T:System.Buffers.StandardFormat" /> (that is, 'G').</span></span></remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="4e42c-358">Validierung ist aktiviert, und der Vorgang würde im Schreiben ungültiger JSON-Daten resultieren.</span><span class="sxs-lookup"><span data-stu-id="4e42c-358">Validation is enabled, and the operation would result in writing invalid JSON.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteNumberValue">
      <MemberSignature Language="C#" Value="public void WriteNumberValue (uint value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteNumberValue(unsigned int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteNumberValue(System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteNumberValue (value As UInteger)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteNumberValue(System::UInt32 value);" />
      <MemberSignature Language="F#" Value="member this.WriteNumberValue : uint32 -&gt; unit" Usage="utf8JsonWriter.WriteNumberValue value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="4e42c-359">Der Wert, der als JSON-Zahl als ein Element eines JSON-Arrays geschrieben werden soll.</span><span class="sxs-lookup"><span data-stu-id="4e42c-359">The value to be written as a JSON number as an element of a JSON array.</span></span></param>
        <summary><span data-ttu-id="4e42c-360">Schreibt einen <see cref="T:System.UInt32" />-Wert (als JSON-Zahl) als ein Element eines JSON-Arrays.</span><span class="sxs-lookup"><span data-stu-id="4e42c-360">Writes a <see cref="T:System.UInt32" /> value (as a JSON number) as an element of a JSON array.</span></span></summary>
        <remarks><span data-ttu-id="4e42c-361">Diese Methode schreibt die <see cref="T:System.UInt32" /> -Wert mithilfe der standardmäßigen <see cref="T:System.Buffers.StandardFormat" /> (d.h., ' G').</span><span class="sxs-lookup"><span data-stu-id="4e42c-361">This method writes the <see cref="T:System.UInt32" /> value using the default <see cref="T:System.Buffers.StandardFormat" /> (that is, 'G').</span></span> <span data-ttu-id="4e42c-362">Beispiel: 32767.</span><span class="sxs-lookup"><span data-stu-id="4e42c-362">For example, 32767.</span></span></remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="4e42c-363">Validierung ist aktiviert, und der Vorgang würde im Schreiben ungültiger JSON-Daten resultieren.</span><span class="sxs-lookup"><span data-stu-id="4e42c-363">Validation is enabled, and the operation would result in writing invalid JSON.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteNumberValue">
      <MemberSignature Language="C#" Value="public void WriteNumberValue (ulong value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteNumberValue(unsigned int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteNumberValue(System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteNumberValue (value As ULong)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteNumberValue(System::UInt64 value);" />
      <MemberSignature Language="F#" Value="member this.WriteNumberValue : uint64 -&gt; unit" Usage="utf8JsonWriter.WriteNumberValue value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="4e42c-364">Der Wert, der als JSON-Zahl als ein Element eines JSON-Arrays geschrieben werden soll.</span><span class="sxs-lookup"><span data-stu-id="4e42c-364">The value to be written as a JSON number as an element of a JSON array.</span></span></param>
        <summary><span data-ttu-id="4e42c-365">Schreibt einen <see cref="T:System.UInt64" />-Wert (als JSON-Zahl) als ein Element eines JSON-Arrays.</span><span class="sxs-lookup"><span data-stu-id="4e42c-365">Writes a <see cref="T:System.UInt64" /> value (as a JSON number) as an element of a JSON array.</span></span></summary>
        <remarks><span data-ttu-id="4e42c-366">Diese Methode schreibt die <see cref="T:System.UInt64" /> -Wert mithilfe der standardmäßigen <see cref="T:System.Buffers.StandardFormat" /> (d.h., ' G').</span><span class="sxs-lookup"><span data-stu-id="4e42c-366">This method writes the <see cref="T:System.UInt64" /> value using the default <see cref="T:System.Buffers.StandardFormat" /> (that is, 'G').</span></span> <span data-ttu-id="4e42c-367">Beispiel: 32767.</span><span class="sxs-lookup"><span data-stu-id="4e42c-367">For example, 32767.</span></span></remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="4e42c-368">Validierung ist aktiviert, und der Vorgang würde im Schreiben ungültiger JSON-Daten resultieren.</span><span class="sxs-lookup"><span data-stu-id="4e42c-368">Validation is enabled, and the operation would result in writing invalid JSON.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteStartArray">
      <MemberSignature Language="C#" Value="public void WriteStartArray ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteStartArray() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteStartArray" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteStartArray ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteStartArray();" />
      <MemberSignature Language="F#" Value="member this.WriteStartArray : unit -&gt; unit" Usage="utf8JsonWriter.WriteStartArray " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4e42c-369">Schreibt den Anfang eines JSON-Arrays.</span><span class="sxs-lookup"><span data-stu-id="4e42c-369">Writes the beginning of a JSON array.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="4e42c-370">Die Tiefe des JSON-Codes überschreitet die maximale Tiefe von 1.000.</span><span class="sxs-lookup"><span data-stu-id="4e42c-370">The depth of the JSON exceeds the maximum depth of 1000.</span></span>

<span data-ttu-id="4e42c-371">- oder -</span><span class="sxs-lookup"><span data-stu-id="4e42c-371">-or-</span></span>

<span data-ttu-id="4e42c-372">Validierung ist aktiviert, und dieser Schreibvorgang würde ungültige JSON-Daten produzieren.</span><span class="sxs-lookup"><span data-stu-id="4e42c-372">Validation is enabled, and this write operation would produce invalid JSON.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteStartArray">
      <MemberSignature Language="C#" Value="public void WriteStartArray (ReadOnlySpan&lt;byte&gt; utf8PropertyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteStartArray(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; utf8PropertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteStartArray(System.ReadOnlySpan{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteStartArray (utf8PropertyName As ReadOnlySpan(Of Byte))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteStartArray(ReadOnlySpan&lt;System::Byte&gt; utf8PropertyName);" />
      <MemberSignature Language="F#" Value="member this.WriteStartArray : ReadOnlySpan&lt;byte&gt; -&gt; unit" Usage="utf8JsonWriter.WriteStartArray utf8PropertyName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="utf8PropertyName" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="utf8PropertyName"><span data-ttu-id="4e42c-373">Der UTF-8-codierte Eigenschaftenname des zu schreibenden JSON-Arrays.</span><span class="sxs-lookup"><span data-stu-id="4e42c-373">The UTF-8 encoded property name of the JSON array to be written.</span></span></param>
        <summary><span data-ttu-id="4e42c-374">Schreibt den Anfang eines JSON-Arrays mit einem als schreibgeschützte Spanne von Bytes angegebenen Eigenschaftennamen als Schlüssel.</span><span class="sxs-lookup"><span data-stu-id="4e42c-374">Writes the beginning of a JSON array with a property name specified as a read-only span of bytes as the key.</span></span></summary>
        <remarks>
          <format><![CDATA[

<span data-ttu-id="4e42c-375">Der Eigenschaftsname wird vor dem Schreiben mit Escapezeichen versehen.</span><span class="sxs-lookup"><span data-stu-id="4e42c-375">The property name is escaped before writing.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="4e42c-376">Der angegebene Eigenschaftenname ist zu lang.</span><span class="sxs-lookup"><span data-stu-id="4e42c-376">The specified property name is too large.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="4e42c-377">Die Tiefe des JSON-Codes überschreitet die maximale Tiefe von 1.000.</span><span class="sxs-lookup"><span data-stu-id="4e42c-377">The depth of the JSON exceeds the maximum depth of 1000.</span></span>

<span data-ttu-id="4e42c-378">- oder -</span><span class="sxs-lookup"><span data-stu-id="4e42c-378">-or-</span></span> 
<span data-ttu-id="4e42c-379">Validierung ist aktiviert, und dieser Schreibvorgang würde ungültige JSON-Daten produzieren.</span><span class="sxs-lookup"><span data-stu-id="4e42c-379">Validation is enabled, and this write operation would produce invalid JSON.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteStartArray">
      <MemberSignature Language="C#" Value="public void WriteStartArray (ReadOnlySpan&lt;char&gt; propertyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteStartArray(valuetype System.ReadOnlySpan`1&lt;char&gt; propertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteStartArray(System.ReadOnlySpan{System.Char})" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteStartArray (propertyName As ReadOnlySpan(Of Char))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteStartArray(ReadOnlySpan&lt;char&gt; propertyName);" />
      <MemberSignature Language="F#" Value="member this.WriteStartArray : ReadOnlySpan&lt;char&gt; -&gt; unit" Usage="utf8JsonWriter.WriteStartArray propertyName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
      </Parameters>
      <Docs>
        <param name="propertyName"><span data-ttu-id="4e42c-380">Der UTF-16-codierte Eigenschaftenname des JSON-Arrays, das zu transcodieren und als UTF-8 zu schreiben ist.</span><span class="sxs-lookup"><span data-stu-id="4e42c-380">The UTF-16 encoded property name of the JSON array to be transcoded and written as UTF-8.</span></span></param>
        <summary><span data-ttu-id="4e42c-381">Schreibt den Anfang eines JSON-Arrays mit einem als schreibgeschützte Zeichenspanne angegebenen Eigenschaftennamen als Schlüssel.</span><span class="sxs-lookup"><span data-stu-id="4e42c-381">Writes the beginning of a JSON array with a property name specified as a read-only character span as the key.</span></span></summary>
        <remarks>
          <format><![CDATA[

<span data-ttu-id="4e42c-382">Der Eigenschaftsname wird vor dem Schreiben mit Escapezeichen versehen.</span><span class="sxs-lookup"><span data-stu-id="4e42c-382">The property name is escaped before writing.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="4e42c-383">Der angegebene Eigenschaftenname ist zu lang.</span><span class="sxs-lookup"><span data-stu-id="4e42c-383">The specified property name is too large.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="4e42c-384">Die Tiefe des JSON-Codes überschreitet die maximale Tiefe von 1.000.</span><span class="sxs-lookup"><span data-stu-id="4e42c-384">The depth of the JSON exceeds the maximum depth of 1000.</span></span>

<span data-ttu-id="4e42c-385">- oder -</span><span class="sxs-lookup"><span data-stu-id="4e42c-385">-or-</span></span> 
<span data-ttu-id="4e42c-386">Validierung ist aktiviert, und dieser Schreibvorgang würde ungültige JSON-Daten produzieren.</span><span class="sxs-lookup"><span data-stu-id="4e42c-386">Validation is enabled, and this write operation would produce invalid JSON.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteStartArray">
      <MemberSignature Language="C#" Value="public void WriteStartArray (string propertyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteStartArray(string propertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteStartArray(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteStartArray (propertyName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteStartArray(System::String ^ propertyName);" />
      <MemberSignature Language="F#" Value="member this.WriteStartArray : string -&gt; unit" Usage="utf8JsonWriter.WriteStartArray propertyName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="propertyName"><span data-ttu-id="4e42c-387">Der UTF-16-codierte Eigenschaftenname des JSON-Arrays, das zu transcodieren und als UTF-8 zu schreiben ist.</span><span class="sxs-lookup"><span data-stu-id="4e42c-387">The UTF-16 encoded property name of the JSON array to be transcoded and written as UTF-8.</span></span></param>
        <summary><span data-ttu-id="4e42c-388">Schreibt den Anfang eines JSON-Arrays mit einem als Zeichenfolge angegebenen Eigenschaftennamen als Schlüssel.</span><span class="sxs-lookup"><span data-stu-id="4e42c-388">Writes the beginning of a JSON array with a property name specified as a string as the key.</span></span></summary>
        <remarks>
          <format><![CDATA[

<span data-ttu-id="4e42c-389">Der Eigenschaftsname wird vor dem Schreiben mit Escapezeichen versehen.</span><span class="sxs-lookup"><span data-stu-id="4e42c-389">The property name is escaped before writing.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="4e42c-390">Der angegebene Eigenschaftenname ist zu lang.</span><span class="sxs-lookup"><span data-stu-id="4e42c-390">The specified property name is too large.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="4e42c-391">Die Tiefe des JSON-Codes überschreitet die maximale Tiefe von 1.000.</span><span class="sxs-lookup"><span data-stu-id="4e42c-391">The depth of the JSON exceeds the maximum depth of 1000.</span></span>

<span data-ttu-id="4e42c-392">- oder -</span><span class="sxs-lookup"><span data-stu-id="4e42c-392">-or-</span></span> 
<span data-ttu-id="4e42c-393">Validierung ist aktiviert, und dieser Schreibvorgang würde ungültige JSON-Daten produzieren.</span><span class="sxs-lookup"><span data-stu-id="4e42c-393">Validation is enabled, and this write operation would produce invalid JSON.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteStartObject">
      <MemberSignature Language="C#" Value="public void WriteStartObject ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteStartObject() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteStartObject" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteStartObject ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteStartObject();" />
      <MemberSignature Language="F#" Value="member this.WriteStartObject : unit -&gt; unit" Usage="utf8JsonWriter.WriteStartObject " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4e42c-394">Schreibt den Anfang eines JSON-Objekts.</span><span class="sxs-lookup"><span data-stu-id="4e42c-394">Writes the beginning of a JSON object.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="4e42c-395">Die Tiefe des JSON-Codes überschreitet die maximale Tiefe von 1.000.</span><span class="sxs-lookup"><span data-stu-id="4e42c-395">The depth of the JSON exceeds the maximum depth of 1000.</span></span>

<span data-ttu-id="4e42c-396">- oder -</span><span class="sxs-lookup"><span data-stu-id="4e42c-396">-or-</span></span>

<span data-ttu-id="4e42c-397">Validierung ist aktiviert, und der Vorgang würde im Schreiben ungültiger JSON-Daten resultieren.</span><span class="sxs-lookup"><span data-stu-id="4e42c-397">Validation is enabled, and the operation would result in writing invalid JSON.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteStartObject">
      <MemberSignature Language="C#" Value="public void WriteStartObject (ReadOnlySpan&lt;byte&gt; utf8PropertyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteStartObject(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; utf8PropertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteStartObject(System.ReadOnlySpan{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteStartObject (utf8PropertyName As ReadOnlySpan(Of Byte))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteStartObject(ReadOnlySpan&lt;System::Byte&gt; utf8PropertyName);" />
      <MemberSignature Language="F#" Value="member this.WriteStartObject : ReadOnlySpan&lt;byte&gt; -&gt; unit" Usage="utf8JsonWriter.WriteStartObject utf8PropertyName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="utf8PropertyName" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="utf8PropertyName"><span data-ttu-id="4e42c-398">Der UTF-8-codierte Eigenschaftenname des zu schreibenden JSON-Objekts.</span><span class="sxs-lookup"><span data-stu-id="4e42c-398">The UTF-8 encoded property name of the JSON object to be written.</span></span></param>
        <summary><span data-ttu-id="4e42c-399">Schreibt den Anfang eines JSON-Objekts mit einem als schreibgeschützte Spanne von Bytes angegebenen Eigenschaftennamen als Schlüssel.</span><span class="sxs-lookup"><span data-stu-id="4e42c-399">Writes the beginning of a JSON object with a property name specified as a read-only span of bytes as the key.</span></span></summary>
        <remarks>
          <format><![CDATA[

<span data-ttu-id="4e42c-400">Der Eigenschaftsname wird vor dem Schreiben mit Escapezeichen versehen.</span><span class="sxs-lookup"><span data-stu-id="4e42c-400">The property name is escaped before writing.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="4e42c-401">Der angegebene Eigenschaftenname ist zu lang.</span><span class="sxs-lookup"><span data-stu-id="4e42c-401">The specified property name is too large.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="4e42c-402">Die Tiefe des JSON-Codes überschreitet die maximale Tiefe von 1.000.</span><span class="sxs-lookup"><span data-stu-id="4e42c-402">The depth of the JSON exceeds the maximum depth of 1000.</span></span> 

<span data-ttu-id="4e42c-403">- oder -</span><span class="sxs-lookup"><span data-stu-id="4e42c-403">-or-</span></span> 
<span data-ttu-id="4e42c-404">Validierung ist aktiviert, und dieser Schreibvorgang würde ungültige JSON-Daten produzieren.</span><span class="sxs-lookup"><span data-stu-id="4e42c-404">Validation is enabled, and this write operation would produce invalid JSON.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteStartObject">
      <MemberSignature Language="C#" Value="public void WriteStartObject (ReadOnlySpan&lt;char&gt; propertyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteStartObject(valuetype System.ReadOnlySpan`1&lt;char&gt; propertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteStartObject(System.ReadOnlySpan{System.Char})" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteStartObject (propertyName As ReadOnlySpan(Of Char))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteStartObject(ReadOnlySpan&lt;char&gt; propertyName);" />
      <MemberSignature Language="F#" Value="member this.WriteStartObject : ReadOnlySpan&lt;char&gt; -&gt; unit" Usage="utf8JsonWriter.WriteStartObject propertyName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
      </Parameters>
      <Docs>
        <param name="propertyName"><span data-ttu-id="4e42c-405">Der UTF-16-codierte Eigenschaftenname des JSON-Objekts, das zu transcodieren und als UTF-8 zu schreiben ist.</span><span class="sxs-lookup"><span data-stu-id="4e42c-405">The UTF-16 encoded property name of the JSON object to be transcoded and written as UTF-8.</span></span></param>
        <summary><span data-ttu-id="4e42c-406">Schreibt den Anfang eines JSON-Objekts mit einem als schreibgeschützte Zeichenspanne angegebenen Eigenschaftennamen als Schlüssel.</span><span class="sxs-lookup"><span data-stu-id="4e42c-406">Writes the beginning of a JSON object with a property name specififed as a read-only character span as the key.</span></span></summary>
        <remarks>
          <format><![CDATA[

<span data-ttu-id="4e42c-407">Der Eigenschaftsname wird vor dem Schreiben mit Escapezeichen versehen.</span><span class="sxs-lookup"><span data-stu-id="4e42c-407">The property name is escaped before writing.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="4e42c-408">Der angegebene Eigenschaftenname ist zu lang.</span><span class="sxs-lookup"><span data-stu-id="4e42c-408">The specified property name is too large.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="4e42c-409">Die Tiefe des JSON-Codes überschreitet die maximale Tiefe von 1.000.</span><span class="sxs-lookup"><span data-stu-id="4e42c-409">The depth of the JSON exceeds the maximum depth of 1000.</span></span> 

<span data-ttu-id="4e42c-410">- oder -</span><span class="sxs-lookup"><span data-stu-id="4e42c-410">-or-</span></span> 
<span data-ttu-id="4e42c-411">Validierung ist aktiviert, und dieser Schreibvorgang würde ungültige JSON-Daten produzieren.</span><span class="sxs-lookup"><span data-stu-id="4e42c-411">Validation is enabled, and this write operation would produce invalid JSON.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteStartObject">
      <MemberSignature Language="C#" Value="public void WriteStartObject (string propertyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteStartObject(string propertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteStartObject(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteStartObject (propertyName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteStartObject(System::String ^ propertyName);" />
      <MemberSignature Language="F#" Value="member this.WriteStartObject : string -&gt; unit" Usage="utf8JsonWriter.WriteStartObject propertyName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="propertyName"><span data-ttu-id="4e42c-412">Der UTF-16-codierte Eigenschaftenname des JSON-Objekts, das zu transcodieren und als UTF-8 zu schreiben ist.</span><span class="sxs-lookup"><span data-stu-id="4e42c-412">The UTF-16 encoded property name of the JSON object to be transcoded and written as UTF-8.</span></span></param>
        <summary><span data-ttu-id="4e42c-413">Schreibt den Anfang eines JSON-Objekts mit einem als Zeichenfolge angegebenen Eigenschaftennamen als Schlüssel.</span><span class="sxs-lookup"><span data-stu-id="4e42c-413">Writes the beginning of a JSON object with a property name specified as a string as the key.</span></span></summary>
        <remarks>
          <format><![CDATA[

<span data-ttu-id="4e42c-414">Der Eigenschaftsname wird vor dem Schreiben mit Escapezeichen versehen.</span><span class="sxs-lookup"><span data-stu-id="4e42c-414">The property name is escaped before writing.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="4e42c-415">Der angegebene Eigenschaftenname ist zu lang.</span><span class="sxs-lookup"><span data-stu-id="4e42c-415">The specified property name is too large.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="4e42c-416">Die Tiefe des JSON-Codes überschreitet die maximale Tiefe von 1.000.</span><span class="sxs-lookup"><span data-stu-id="4e42c-416">The depth of the JSON exceeds the maximum depth of 1000.</span></span> 

<span data-ttu-id="4e42c-417">- oder -</span><span class="sxs-lookup"><span data-stu-id="4e42c-417">-or-</span></span> 
<span data-ttu-id="4e42c-418">Validierung ist aktiviert, und dieser Schreibvorgang würde ungültige JSON-Daten produzieren.</span><span class="sxs-lookup"><span data-stu-id="4e42c-418">Validation is enabled, and this write operation would produce invalid JSON.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteString">
      <MemberSignature Language="C#" Value="public void WriteString (ReadOnlySpan&lt;byte&gt; utf8PropertyName, DateTime value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteString(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; utf8PropertyName, valuetype System.DateTime value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteString(System.ReadOnlySpan{System.Byte},System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteString (utf8PropertyName As ReadOnlySpan(Of Byte), value As DateTime)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteString(ReadOnlySpan&lt;System::Byte&gt; utf8PropertyName, DateTime value);" />
      <MemberSignature Language="F#" Value="member this.WriteString : ReadOnlySpan&lt;byte&gt; * DateTime -&gt; unit" Usage="utf8JsonWriter.WriteString (utf8PropertyName, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="utf8PropertyName" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="value" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="utf8PropertyName"><span data-ttu-id="4e42c-419">Der UTF-8-codierte Eigenschaftenname des zu schreibenden JSON-Objekts.</span><span class="sxs-lookup"><span data-stu-id="4e42c-419">The UTF-8 encoded property name of the JSON object to be written.</span></span></param>
        <param name="value"><span data-ttu-id="4e42c-420">Der Wert, der als JSON-Zeichenfolge als Teil des Name-Wert-Paars geschrieben werden soll.</span><span class="sxs-lookup"><span data-stu-id="4e42c-420">The value to be written as a JSON string as part of the name/value pair.</span></span></param>
        <summary><span data-ttu-id="4e42c-421">Schreibt einen UTF-8-Eigenschaftennamen und einen <see cref="T:System.DateTime" />-Wert (als JSON-Zeichenfolge) als Teil eines Name-Wert-Paars eines JSON-Objekts.</span><span class="sxs-lookup"><span data-stu-id="4e42c-421">Writes a UTF-8 property name and a <see cref="T:System.DateTime" /> value (as a JSON string) as part of a name/value pair of a JSON object.</span></span></summary>
        <remarks>
          <format><![CDATA[

<span data-ttu-id="4e42c-422">Der Eigenschaftsname wird vor dem Schreiben mit Escapezeichen versehen.</span><span class="sxs-lookup"><span data-stu-id="4e42c-422">The property name is escaped before writing.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="4e42c-423">Der angegebene Eigenschaftenname ist zu lang.</span><span class="sxs-lookup"><span data-stu-id="4e42c-423">The specified property name is too large.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="4e42c-424">Validierung ist aktiviert, und der Schreibvorgang würde ungültige JSON-Daten produzieren.</span><span class="sxs-lookup"><span data-stu-id="4e42c-424">Validation is enabled, and the write operation would produce invalid JSON.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteString">
      <MemberSignature Language="C#" Value="public void WriteString (ReadOnlySpan&lt;byte&gt; utf8PropertyName, DateTimeOffset value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteString(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; utf8PropertyName, valuetype System.DateTimeOffset value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteString(System.ReadOnlySpan{System.Byte},System.DateTimeOffset)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteString (utf8PropertyName As ReadOnlySpan(Of Byte), value As DateTimeOffset)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteString(ReadOnlySpan&lt;System::Byte&gt; utf8PropertyName, DateTimeOffset value);" />
      <MemberSignature Language="F#" Value="member this.WriteString : ReadOnlySpan&lt;byte&gt; * DateTimeOffset -&gt; unit" Usage="utf8JsonWriter.WriteString (utf8PropertyName, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="utf8PropertyName" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="value" Type="System.DateTimeOffset" />
      </Parameters>
      <Docs>
        <param name="utf8PropertyName"><span data-ttu-id="4e42c-425">Der UTF-8-codierte Eigenschaftenname des zu schreibenden JSON-Objekts.</span><span class="sxs-lookup"><span data-stu-id="4e42c-425">The UTF-8 encoded property name of the JSON object to be written.</span></span></param>
        <param name="value"><span data-ttu-id="4e42c-426">Der Wert, der als JSON-Zeichenfolge als Teil des Name-Wert-Paars geschrieben werden soll.</span><span class="sxs-lookup"><span data-stu-id="4e42c-426">The value to be written as a JSON string as part of the name/value pair.</span></span></param>
        <summary><span data-ttu-id="4e42c-427">Schreibt einen UTF-8-Eigenschaftennamen und einen <see cref="T:System.DateTimeOffset" />-Wert (als JSON-Zeichenfolge) als Teil eines Name-Wert-Paars eines JSON-Objekts.</span><span class="sxs-lookup"><span data-stu-id="4e42c-427">Writes a UTF-8 property name and a <see cref="T:System.DateTimeOffset" /> value (as a JSON string) as part of a name/value pair of a JSON object.</span></span></summary>
        <remarks>
          <format><![CDATA[

<span data-ttu-id="4e42c-428">Der Eigenschaftsname wird vor dem Schreiben mit Escapezeichen versehen.</span><span class="sxs-lookup"><span data-stu-id="4e42c-428">The property name is escaped before writing.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="4e42c-429">Der angegebene Eigenschaftenname ist zu lang.</span><span class="sxs-lookup"><span data-stu-id="4e42c-429">The specified property name is too large.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="4e42c-430">Validierung ist aktiviert, und der Schreibvorgang würde ungültige JSON-Daten produzieren.</span><span class="sxs-lookup"><span data-stu-id="4e42c-430">Validation is enabled, and the write operation would produce invalid JSON.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteString">
      <MemberSignature Language="C#" Value="public void WriteString (ReadOnlySpan&lt;byte&gt; utf8PropertyName, Guid value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteString(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; utf8PropertyName, valuetype System.Guid value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteString(System.ReadOnlySpan{System.Byte},System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteString (utf8PropertyName As ReadOnlySpan(Of Byte), value As Guid)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteString(ReadOnlySpan&lt;System::Byte&gt; utf8PropertyName, Guid value);" />
      <MemberSignature Language="F#" Value="member this.WriteString : ReadOnlySpan&lt;byte&gt; * Guid -&gt; unit" Usage="utf8JsonWriter.WriteString (utf8PropertyName, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="utf8PropertyName" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="value" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="utf8PropertyName"><span data-ttu-id="4e42c-431">Der UTF-8-codierte Eigenschaftenname des zu schreibenden JSON-Objekts.</span><span class="sxs-lookup"><span data-stu-id="4e42c-431">The UTF-8 encoded property name of the JSON object to be written.</span></span></param>
        <param name="value"><span data-ttu-id="4e42c-432">Der Wert, der als JSON-Zeichenfolge als Teil des Name-Wert-Paars geschrieben werden soll.</span><span class="sxs-lookup"><span data-stu-id="4e42c-432">The value to be written as a JSON string as part of the name/value pair.</span></span></param>
        <summary><span data-ttu-id="4e42c-433">Schreibt einen UTF-8-Eigenschaftennamen und einen <see cref="T:System.Guid" />-Wert (als JSON-Zeichenfolge) als Teil eines Name-Wert-Paars eines JSON-Objekts.</span><span class="sxs-lookup"><span data-stu-id="4e42c-433">Writes a UTF-8 property name and a <see cref="T:System.Guid" /> value (as a JSON string) as part of a name/value pair of a JSON object.</span></span></summary>
        <remarks>
          <format><![CDATA[

<span data-ttu-id="4e42c-434">Der Eigenschaftsname wird vor dem Schreiben mit Escapezeichen versehen.</span><span class="sxs-lookup"><span data-stu-id="4e42c-434">The property name is escaped before writing.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="4e42c-435">Der angegebene Eigenschaftenname ist zu lang.</span><span class="sxs-lookup"><span data-stu-id="4e42c-435">The specified property name is too large.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="4e42c-436">Validierung ist aktiviert, und der Schreibvorgang würde ungültige JSON-Daten produzieren.</span><span class="sxs-lookup"><span data-stu-id="4e42c-436">Validation is enabled, and the write operation would produce invalid JSON.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteString">
      <MemberSignature Language="C#" Value="public void WriteString (ReadOnlySpan&lt;byte&gt; utf8PropertyName, ReadOnlySpan&lt;byte&gt; utf8Value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteString(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; utf8PropertyName, valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; utf8Value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteString(System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteString (utf8PropertyName As ReadOnlySpan(Of Byte), utf8Value As ReadOnlySpan(Of Byte))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteString(ReadOnlySpan&lt;System::Byte&gt; utf8PropertyName, ReadOnlySpan&lt;System::Byte&gt; utf8Value);" />
      <MemberSignature Language="F#" Value="member this.WriteString : ReadOnlySpan&lt;byte&gt; * ReadOnlySpan&lt;byte&gt; -&gt; unit" Usage="utf8JsonWriter.WriteString (utf8PropertyName, utf8Value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="utf8PropertyName" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="utf8Value" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="utf8PropertyName"><span data-ttu-id="4e42c-437">Der UTF-8-codierte Eigenschaftenname des zu schreibenden JSON-Objekts.</span><span class="sxs-lookup"><span data-stu-id="4e42c-437">The UTF-8 encoded property name of the JSON object to be written.</span></span></param>
        <param name="utf8Value"><span data-ttu-id="4e42c-438">Der UTF-8-codierte Wert, der als JSON-Zeichenfolge als Teil des Name-Wert-Paars geschrieben werden soll.</span><span class="sxs-lookup"><span data-stu-id="4e42c-438">The UTF-8 encoded value to be written as a JSON string as part of the name/value pair.</span></span></param>
        <summary><span data-ttu-id="4e42c-439">Schreibt einen UTF-8-Eigenschaftennamen und UTF-8-Textwert (als JSON-Zeichenfolge) als Teil eines Name-Wert-Paars eines JSON-Objekts.</span><span class="sxs-lookup"><span data-stu-id="4e42c-439">Writes a UTF-8 property name and UTF-8 text value (as a JSON string) as part of a name/value pair of a JSON object.</span></span></summary>
        <remarks>
          <format><![CDATA[

<span data-ttu-id="4e42c-440">Die Eigenschaftennamen und-Wert wird mit Escapezeichen versehen vor dem Schreiben.</span><span class="sxs-lookup"><span data-stu-id="4e42c-440">The property name and value is escaped before writing.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="4e42c-441">Der angegebene Eigenschaftenname oder Wert ist zu groß.</span><span class="sxs-lookup"><span data-stu-id="4e42c-441">The specified property name or value is too large.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="4e42c-442">Validierung ist aktiviert, und der Schreibvorgang würde ungültige JSON-Daten produzieren.</span><span class="sxs-lookup"><span data-stu-id="4e42c-442">Validation is enabled, and the write operation would produce invalid JSON.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteString">
      <MemberSignature Language="C#" Value="public void WriteString (ReadOnlySpan&lt;byte&gt; utf8PropertyName, ReadOnlySpan&lt;char&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteString(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; utf8PropertyName, valuetype System.ReadOnlySpan`1&lt;char&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteString(System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Char})" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteString (utf8PropertyName As ReadOnlySpan(Of Byte), value As ReadOnlySpan(Of Char))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteString(ReadOnlySpan&lt;System::Byte&gt; utf8PropertyName, ReadOnlySpan&lt;char&gt; value);" />
      <MemberSignature Language="F#" Value="member this.WriteString : ReadOnlySpan&lt;byte&gt; * ReadOnlySpan&lt;char&gt; -&gt; unit" Usage="utf8JsonWriter.WriteString (utf8PropertyName, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="utf8PropertyName" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="value" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
      </Parameters>
      <Docs>
        <param name="utf8PropertyName"><span data-ttu-id="4e42c-443">Der UTF-8-codierte Eigenschaftenname des zu schreibenden JSON-Objekts.</span><span class="sxs-lookup"><span data-stu-id="4e42c-443">The UTF-8 encoded property name of the JSON object to be written.</span></span></param>
        <param name="value"><span data-ttu-id="4e42c-444">Der UTF-16-codierte Wert, der als UTF-8-transcodierte JSON-Zeichenfolge als Teil des Name-Wert-Paars geschrieben werden soll.</span><span class="sxs-lookup"><span data-stu-id="4e42c-444">The UTF-16 encoded value to be written as a UTF-8 transcoded JSON string as part of the name/value pair.</span></span></param>
        <summary><span data-ttu-id="4e42c-445">Schreibt einen UTF-8-Eigenschaftennamen und UTF-16-Textwert (als JSON-Zeichenfolge) als Teil eines Name-Wert-Paars eines JSON-Objekts.</span><span class="sxs-lookup"><span data-stu-id="4e42c-445">Writes a UTF-8 property name and UTF-16 text value (as a JSON string) as part of a name/value pair of a JSON object.</span></span></summary>
        <remarks>
          <format><![CDATA[

<span data-ttu-id="4e42c-446">Die Eigenschaftennamen und-Wert wird mit Escapezeichen versehen vor dem Schreiben.</span><span class="sxs-lookup"><span data-stu-id="4e42c-446">The property name and value is escaped before writing.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="4e42c-447">Der angegebene Eigenschaftenname oder Wert ist zu groß.</span><span class="sxs-lookup"><span data-stu-id="4e42c-447">The specified property name or value is too large.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="4e42c-448">Validierung ist aktiviert, und der Schreibvorgang würde ungültige JSON-Daten produzieren.</span><span class="sxs-lookup"><span data-stu-id="4e42c-448">Validation is enabled, and the write operation would produce invalid JSON.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteString">
      <MemberSignature Language="C#" Value="public void WriteString (ReadOnlySpan&lt;byte&gt; utf8PropertyName, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteString(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; utf8PropertyName, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteString(System.ReadOnlySpan{System.Byte},System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteString (utf8PropertyName As ReadOnlySpan(Of Byte), value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteString(ReadOnlySpan&lt;System::Byte&gt; utf8PropertyName, System::String ^ value);" />
      <MemberSignature Language="F#" Value="member this.WriteString : ReadOnlySpan&lt;byte&gt; * string -&gt; unit" Usage="utf8JsonWriter.WriteString (utf8PropertyName, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="utf8PropertyName" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="utf8PropertyName"><span data-ttu-id="4e42c-449">Der UTF-8-codierte Eigenschaftenname des zu schreibenden JSON-Objekts.</span><span class="sxs-lookup"><span data-stu-id="4e42c-449">The UTF-8 encoded property name of the JSON object to be written.</span></span></param>
        <param name="value"><span data-ttu-id="4e42c-450">Der UTF-16-codierte Wert, der als UTF-8-transcodierte JSON-Zeichenfolge als Teil des Name-Wert-Paars geschrieben werden soll.</span><span class="sxs-lookup"><span data-stu-id="4e42c-450">The UTF-16 encoded value to be written as a UTF-8 transcoded JSON string as part of the name/value pair.</span></span></param>
        <summary><span data-ttu-id="4e42c-451">Schreibt einen UTF-8-Eigenschaftennamen und Zeichenfolgentextwert (als JSON-Zeichenfolge) als Teil eines Name-Wert-Paars eines JSON-Objekts.</span><span class="sxs-lookup"><span data-stu-id="4e42c-451">Writes a UTF-8 property name and string text value (as a JSON string) as part of a name/value pair of a JSON object.</span></span></summary>
        <remarks>
          <format><![CDATA[

<span data-ttu-id="4e42c-452">Die Eigenschaftennamen und-Wert wird mit Escapezeichen versehen vor dem Schreiben.</span><span class="sxs-lookup"><span data-stu-id="4e42c-452">The property name and value is escaped before writing.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="4e42c-453">Der angegebene Eigenschaftenname oder Wert ist zu groß.</span><span class="sxs-lookup"><span data-stu-id="4e42c-453">The specified property name or value is too large.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="4e42c-454">Validierung ist aktiviert, und der Schreibvorgang würde ungültige JSON-Daten produzieren.</span><span class="sxs-lookup"><span data-stu-id="4e42c-454">Validation is enabled, and the write operation would produce invalid JSON.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteString">
      <MemberSignature Language="C#" Value="public void WriteString (ReadOnlySpan&lt;char&gt; propertyName, DateTime value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteString(valuetype System.ReadOnlySpan`1&lt;char&gt; propertyName, valuetype System.DateTime value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteString(System.ReadOnlySpan{System.Char},System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteString (propertyName As ReadOnlySpan(Of Char), value As DateTime)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteString(ReadOnlySpan&lt;char&gt; propertyName, DateTime value);" />
      <MemberSignature Language="F#" Value="member this.WriteString : ReadOnlySpan&lt;char&gt; * DateTime -&gt; unit" Usage="utf8JsonWriter.WriteString (propertyName, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="value" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="propertyName"><span data-ttu-id="4e42c-455">Der UTF-16-codierte Eigenschaftenname des JSON-Objekts, das zu transcodieren und als UTF-8 zu schreiben ist.</span><span class="sxs-lookup"><span data-stu-id="4e42c-455">The UTF-16 encoded property name of the JSON object to be transcoded and written as UTF-8.</span></span></param>
        <param name="value"><span data-ttu-id="4e42c-456">Der Wert, der als JSON-Zeichenfolge als Teil des Name-Wert-Paars geschrieben werden soll.</span><span class="sxs-lookup"><span data-stu-id="4e42c-456">The value to be written as a JSON string as part of the name/value pair.</span></span></param>
        <summary><span data-ttu-id="4e42c-457">Schreibt einen als schreibgeschützte Zeichenspanne angegebenen Eigenschaftennamen und einen <see cref="T:System.DateTime" />-Wert (als JSON-Zeichenfolge) als Teil eines Name-Wert-Paars eines JSON-Objekts.</span><span class="sxs-lookup"><span data-stu-id="4e42c-457">Writes a property name specified as a read-only character span and a <see cref="T:System.DateTime" /> value (as a JSON string) as part of a name/value pair of a JSON object.</span></span></summary>
        <remarks>
          <format><![CDATA[

<span data-ttu-id="4e42c-458">Der Eigenschaftsname wird vor dem Schreiben mit Escapezeichen versehen.</span><span class="sxs-lookup"><span data-stu-id="4e42c-458">The property name is escaped before writing.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="4e42c-459">Der angegebene Eigenschaftenname ist zu lang.</span><span class="sxs-lookup"><span data-stu-id="4e42c-459">The specified property name is too large.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="4e42c-460">Validierung ist aktiviert, und der Schreibvorgang würde ungültige JSON-Daten produzieren.</span><span class="sxs-lookup"><span data-stu-id="4e42c-460">Validation is enabled, and the write operation would produce invalid JSON.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteString">
      <MemberSignature Language="C#" Value="public void WriteString (ReadOnlySpan&lt;char&gt; propertyName, DateTimeOffset value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteString(valuetype System.ReadOnlySpan`1&lt;char&gt; propertyName, valuetype System.DateTimeOffset value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteString(System.ReadOnlySpan{System.Char},System.DateTimeOffset)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteString (propertyName As ReadOnlySpan(Of Char), value As DateTimeOffset)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteString(ReadOnlySpan&lt;char&gt; propertyName, DateTimeOffset value);" />
      <MemberSignature Language="F#" Value="member this.WriteString : ReadOnlySpan&lt;char&gt; * DateTimeOffset -&gt; unit" Usage="utf8JsonWriter.WriteString (propertyName, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="value" Type="System.DateTimeOffset" />
      </Parameters>
      <Docs>
        <param name="propertyName"><span data-ttu-id="4e42c-461">Der UTF-16-codierte Eigenschaftenname des JSON-Objekts, das zu transcodieren und als UTF-8 zu schreiben ist.</span><span class="sxs-lookup"><span data-stu-id="4e42c-461">The UTF-16 encoded property name of the JSON object to be transcoded and written as UTF-8.</span></span></param>
        <param name="value"><span data-ttu-id="4e42c-462">Der Wert, der als JSON-Zeichenfolge als Teil des Name-Wert-Paars geschrieben werden soll.</span><span class="sxs-lookup"><span data-stu-id="4e42c-462">The value to be written as a JSON string as part of the name/value pair.</span></span></param>
        <summary><span data-ttu-id="4e42c-463">Schreibt einen als schreibgeschützte Zeichenspanne angegebenen Eigenschaftennamen und einen <see cref="T:System.DateTimeOffset" />-Wert (als JSON-Zeichenfolge) als Teil eines Name-Wert-Paars eines JSON-Objekts.</span><span class="sxs-lookup"><span data-stu-id="4e42c-463">Writes a property name specified as a read-only character span and a <see cref="T:System.DateTimeOffset" /> value (as a JSON string) as part of a name/value pair of a JSON object.</span></span></summary>
        <remarks>
          <format><![CDATA[

<span data-ttu-id="4e42c-464">Der Eigenschaftsname wird vor dem Schreiben mit Escapezeichen versehen.</span><span class="sxs-lookup"><span data-stu-id="4e42c-464">The property name is escaped before writing.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="4e42c-465">Der angegebene Eigenschaftenname ist zu lang.</span><span class="sxs-lookup"><span data-stu-id="4e42c-465">The specified property name is too large.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="4e42c-466">Validierung ist aktiviert, und der Schreibvorgang würde ungültige JSON-Daten produzieren.</span><span class="sxs-lookup"><span data-stu-id="4e42c-466">Validation is enabled, and the write operation would produce invalid JSON.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteString">
      <MemberSignature Language="C#" Value="public void WriteString (ReadOnlySpan&lt;char&gt; propertyName, Guid value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteString(valuetype System.ReadOnlySpan`1&lt;char&gt; propertyName, valuetype System.Guid value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteString(System.ReadOnlySpan{System.Char},System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteString (propertyName As ReadOnlySpan(Of Char), value As Guid)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteString(ReadOnlySpan&lt;char&gt; propertyName, Guid value);" />
      <MemberSignature Language="F#" Value="member this.WriteString : ReadOnlySpan&lt;char&gt; * Guid -&gt; unit" Usage="utf8JsonWriter.WriteString (propertyName, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="value" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="propertyName"><span data-ttu-id="4e42c-467">Der UTF-16-codierte Eigenschaftenname des JSON-Objekts, das zu transcodieren und als UTF-8 zu schreiben ist.</span><span class="sxs-lookup"><span data-stu-id="4e42c-467">The UTF-16 encoded property name of the JSON object to be transcoded and written as UTF-8.</span></span></param>
        <param name="value"><span data-ttu-id="4e42c-468">Der Wert, der als JSON-Zeichenfolge als Teil des Name-Wert-Paars geschrieben werden soll.</span><span class="sxs-lookup"><span data-stu-id="4e42c-468">The value to be written as a JSON string as part of the name/value pair.</span></span></param>
        <summary><span data-ttu-id="4e42c-469">Schreibt einen als schreibgeschützte Zeichenspanne angegebenen Eigenschaftennamen und einen <see cref="T:System.Guid" />-Wert (als JSON-Zeichenfolge) als Teil eines Name-Wert-Paars eines JSON-Objekts.</span><span class="sxs-lookup"><span data-stu-id="4e42c-469">Writes a property name specified as a read-only character span and a <see cref="T:System.Guid" /> value (as a JSON string) as part of a name/value pair of a JSON object.</span></span></summary>
        <remarks>
          <format><![CDATA[

<span data-ttu-id="4e42c-470">Der Eigenschaftsname wird vor dem Schreiben mit Escapezeichen versehen.</span><span class="sxs-lookup"><span data-stu-id="4e42c-470">The property name is escaped before writing.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="4e42c-471">Der angegebene Eigenschaftenname ist zu lang.</span><span class="sxs-lookup"><span data-stu-id="4e42c-471">The specified property name is too large.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="4e42c-472">Validierung ist aktiviert, und der Schreibvorgang würde ungültige JSON-Daten produzieren.</span><span class="sxs-lookup"><span data-stu-id="4e42c-472">Validation is enabled, and the write operation would produce invalid JSON.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteString">
      <MemberSignature Language="C#" Value="public void WriteString (ReadOnlySpan&lt;char&gt; propertyName, ReadOnlySpan&lt;byte&gt; utf8Value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteString(valuetype System.ReadOnlySpan`1&lt;char&gt; propertyName, valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; utf8Value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteString(System.ReadOnlySpan{System.Char},System.ReadOnlySpan{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteString (propertyName As ReadOnlySpan(Of Char), utf8Value As ReadOnlySpan(Of Byte))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteString(ReadOnlySpan&lt;char&gt; propertyName, ReadOnlySpan&lt;System::Byte&gt; utf8Value);" />
      <MemberSignature Language="F#" Value="member this.WriteString : ReadOnlySpan&lt;char&gt; * ReadOnlySpan&lt;byte&gt; -&gt; unit" Usage="utf8JsonWriter.WriteString (propertyName, utf8Value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="utf8Value" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="propertyName"><span data-ttu-id="4e42c-473">Der UTF-16-codierte Eigenschaftenname des JSON-Objekts, das zu transcodieren und als UTF-8 zu schreiben ist.</span><span class="sxs-lookup"><span data-stu-id="4e42c-473">The UTF-16 encoded property name of the JSON object to be transcoded and written as UTF-8.</span></span></param>
        <param name="utf8Value"><span data-ttu-id="4e42c-474">Der UTF-8-codierte Wert, der als JSON-Zeichenfolge als Teil des Name-Wert-Paars geschrieben werden soll.</span><span class="sxs-lookup"><span data-stu-id="4e42c-474">The UTF-8 encoded value to be written as a JSON string as part of the name/value pair.</span></span></param>
        <summary><span data-ttu-id="4e42c-475">Schreibt einen UTF-16-Eigenschaftennamen und UTF-8-Textwert (als JSON-Zeichenfolge) als Teil eines Name-Wert-Paars eines JSON-Objekts.</span><span class="sxs-lookup"><span data-stu-id="4e42c-475">Writes a UTF-16 property name and UTF-8 text value (as a JSON string) as part of a name/value pair of a JSON object.</span></span></summary>
        <remarks>
          <format><![CDATA[

<span data-ttu-id="4e42c-476">Die Eigenschaftennamen und-Wert wird mit Escapezeichen versehen vor dem Schreiben.</span><span class="sxs-lookup"><span data-stu-id="4e42c-476">The property name and value is escaped before writing.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="4e42c-477">Der angegebene Eigenschaftenname oder Wert ist zu groß.</span><span class="sxs-lookup"><span data-stu-id="4e42c-477">The specified property name or value is too large.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="4e42c-478">Validierung ist aktiviert, und der Schreibvorgang würde ungültige JSON-Daten produzieren.</span><span class="sxs-lookup"><span data-stu-id="4e42c-478">Validation is enabled, and the write operation would produce invalid JSON.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteString">
      <MemberSignature Language="C#" Value="public void WriteString (ReadOnlySpan&lt;char&gt; propertyName, ReadOnlySpan&lt;char&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteString(valuetype System.ReadOnlySpan`1&lt;char&gt; propertyName, valuetype System.ReadOnlySpan`1&lt;char&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteString(System.ReadOnlySpan{System.Char},System.ReadOnlySpan{System.Char})" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteString (propertyName As ReadOnlySpan(Of Char), value As ReadOnlySpan(Of Char))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteString(ReadOnlySpan&lt;char&gt; propertyName, ReadOnlySpan&lt;char&gt; value);" />
      <MemberSignature Language="F#" Value="member this.WriteString : ReadOnlySpan&lt;char&gt; * ReadOnlySpan&lt;char&gt; -&gt; unit" Usage="utf8JsonWriter.WriteString (propertyName, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="value" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
      </Parameters>
      <Docs>
        <param name="propertyName"><span data-ttu-id="4e42c-479">Der UTF-16-codierte Eigenschaftenname des JSON-Objekts, das zu transcodieren und als UTF-8 zu schreiben ist.</span><span class="sxs-lookup"><span data-stu-id="4e42c-479">The UTF-16 encoded property name of the JSON object to be transcoded and written as UTF-8.</span></span></param>
        <param name="value"><span data-ttu-id="4e42c-480">Der UTF-16-codierte Wert, der als UTF-8-transcodierte JSON-Zeichenfolge als Teil des Name-Wert-Paars geschrieben werden soll.</span><span class="sxs-lookup"><span data-stu-id="4e42c-480">The UTF-16 encoded value to be written as a UTF-8 transcoded JSON string as part of the name/value pair.</span></span></param>
        <summary><span data-ttu-id="4e42c-481">Schreibt einen UTF-16-Eigenschaftennamen und UTF-16-Textwert (als JSON-Zeichenfolge) als Teil eines Name-Wert-Paars eines JSON-Objekts.</span><span class="sxs-lookup"><span data-stu-id="4e42c-481">Writes a UTF-16 property name and UTF-16 text value (as a JSON string) as part of a name/value pair of a JSON object.</span></span></summary>
        <remarks>
          <format><![CDATA[

<span data-ttu-id="4e42c-482">Die Eigenschaftennamen und-Wert wird mit Escapezeichen versehen vor dem Schreiben.</span><span class="sxs-lookup"><span data-stu-id="4e42c-482">The property name and value is escaped before writing.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="4e42c-483">Der angegebene Eigenschaftenname oder Wert ist zu groß.</span><span class="sxs-lookup"><span data-stu-id="4e42c-483">The specified property name or value is too large.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="4e42c-484">Validierung ist aktiviert, und der Schreibvorgang würde ungültige JSON-Daten produzieren.</span><span class="sxs-lookup"><span data-stu-id="4e42c-484">Validation is enabled, and the write operation would produce invalid JSON.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteString">
      <MemberSignature Language="C#" Value="public void WriteString (ReadOnlySpan&lt;char&gt; propertyName, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteString(valuetype System.ReadOnlySpan`1&lt;char&gt; propertyName, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteString(System.ReadOnlySpan{System.Char},System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteString (propertyName As ReadOnlySpan(Of Char), value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteString(ReadOnlySpan&lt;char&gt; propertyName, System::String ^ value);" />
      <MemberSignature Language="F#" Value="member this.WriteString : ReadOnlySpan&lt;char&gt; * string -&gt; unit" Usage="utf8JsonWriter.WriteString (propertyName, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="propertyName"><span data-ttu-id="4e42c-485">Der UTF-16-codierte Eigenschaftenname des JSON-Objekts, das zu transcodieren und als UTF-8 zu schreiben ist.</span><span class="sxs-lookup"><span data-stu-id="4e42c-485">The UTF-16 encoded property name of the JSON object to be transcoded and written as UTF-8.</span></span></param>
        <param name="value"><span data-ttu-id="4e42c-486">Der UTF-16-codierte Wert, der als UTF-8-transcodierte JSON-Zeichenfolge als Teil des Name-Wert-Paars geschrieben werden soll.</span><span class="sxs-lookup"><span data-stu-id="4e42c-486">The UTF-16 encoded value to be written as a UTF-8 transcoded JSON string as part of the name/value pair.</span></span></param>
        <summary><span data-ttu-id="4e42c-487">Schreibt einen UTF-16-Eigenschaftennamen und Zeichenfolgentextwert (als JSON-Zeichenfolge) als Teil eines Name-Wert-Paars eines JSON-Objekts.</span><span class="sxs-lookup"><span data-stu-id="4e42c-487">Writes a UTF-16 property name and string text value (as a JSON string) as part of a name/value pair of a JSON object.</span></span></summary>
        <remarks>
          <format><![CDATA[

<span data-ttu-id="4e42c-488">Die Eigenschaftennamen und-Wert wird mit Escapezeichen versehen vor dem Schreiben.</span><span class="sxs-lookup"><span data-stu-id="4e42c-488">The property name and value is escaped before writing.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="4e42c-489">Der angegebene Eigenschaftenname oder Wert ist zu groß.</span><span class="sxs-lookup"><span data-stu-id="4e42c-489">The specified property name or value is too large.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="4e42c-490">Validierung ist aktiviert, und der Schreibvorgang würde ungültige JSON-Daten produzieren.</span><span class="sxs-lookup"><span data-stu-id="4e42c-490">Validation is enabled, and the write operation would produce invalid JSON.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteString">
      <MemberSignature Language="C#" Value="public void WriteString (string propertyName, DateTime value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteString(string propertyName, valuetype System.DateTime value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteString(System.String,System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteString (propertyName As String, value As DateTime)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteString(System::String ^ propertyName, DateTime value);" />
      <MemberSignature Language="F#" Value="member this.WriteString : string * DateTime -&gt; unit" Usage="utf8JsonWriter.WriteString (propertyName, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
        <Parameter Name="value" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="propertyName"><span data-ttu-id="4e42c-491">Der UTF-16-codierte Eigenschaftenname des JSON-Objekts, das zu transcodieren und als UTF-8 zu schreiben ist.</span><span class="sxs-lookup"><span data-stu-id="4e42c-491">The UTF-16 encoded property name of the JSON object to be transcoded and written as UTF-8.</span></span></param>
        <param name="value"><span data-ttu-id="4e42c-492">Der Wert, der als JSON-Zeichenfolge als Teil des Name-Wert-Paars geschrieben werden soll.</span><span class="sxs-lookup"><span data-stu-id="4e42c-492">The value to be written as a JSON string as part of the name/value pair.</span></span></param>
        <summary><span data-ttu-id="4e42c-493">Schreibt einen als Zeichenfolge angegebenen Eigenschaftennamen und einen <see cref="T:System.DateTime" />-Wert (als JSON-Zeichenfolge) als Teil eines Name-Wert-Paars eines JSON-Objekts.</span><span class="sxs-lookup"><span data-stu-id="4e42c-493">Writes a property name specified as a string and a <see cref="T:System.DateTime" /> value (as a JSON string) as part of a name/value pair of a JSON object.</span></span></summary>
        <remarks>
          <format><![CDATA[

<span data-ttu-id="4e42c-494">Der Eigenschaftsname wird vor dem Schreiben mit Escapezeichen versehen.</span><span class="sxs-lookup"><span data-stu-id="4e42c-494">The property name is escaped before writing.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="4e42c-495">Der angegebene Eigenschaftenname ist zu lang.</span><span class="sxs-lookup"><span data-stu-id="4e42c-495">The specified property name is too large.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="4e42c-496">Validierung ist aktiviert, und der Schreibvorgang würde ungültige JSON-Daten produzieren.</span><span class="sxs-lookup"><span data-stu-id="4e42c-496">Validation is enabled, and the write operation would produce invalid JSON.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteString">
      <MemberSignature Language="C#" Value="public void WriteString (string propertyName, DateTimeOffset value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteString(string propertyName, valuetype System.DateTimeOffset value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteString(System.String,System.DateTimeOffset)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteString (propertyName As String, value As DateTimeOffset)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteString(System::String ^ propertyName, DateTimeOffset value);" />
      <MemberSignature Language="F#" Value="member this.WriteString : string * DateTimeOffset -&gt; unit" Usage="utf8JsonWriter.WriteString (propertyName, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
        <Parameter Name="value" Type="System.DateTimeOffset" />
      </Parameters>
      <Docs>
        <param name="propertyName"><span data-ttu-id="4e42c-497">Der UTF-16-codierte Eigenschaftenname des JSON-Objekts, das zu transcodieren und als UTF-8 zu schreiben ist.</span><span class="sxs-lookup"><span data-stu-id="4e42c-497">The UTF-16 encoded property name of the JSON object to be transcoded and written as UTF-8.</span></span></param>
        <param name="value"><span data-ttu-id="4e42c-498">Der Wert, der als JSON-Zeichenfolge als Teil des Name-Wert-Paars geschrieben werden soll.</span><span class="sxs-lookup"><span data-stu-id="4e42c-498">The value to be written as a JSON string as part of the name/value pair.</span></span></param>
        <summary><span data-ttu-id="4e42c-499">Schreibt einen als Zeichenfolge angegebenen Eigenschaftennamen und einen <see cref="T:System.DateTimeOffset" />-Wert (als JSON-Zeichenfolge) als Teil eines Name-Wert-Paars eines JSON-Objekts.</span><span class="sxs-lookup"><span data-stu-id="4e42c-499">Writes a property name specified as a string and a <see cref="T:System.DateTimeOffset" /> value (as a JSON string) as part of a name/value pair of a JSON object.</span></span></summary>
        <remarks>
          <format><![CDATA[

<span data-ttu-id="4e42c-500">Der Eigenschaftsname wird vor dem Schreiben mit Escapezeichen versehen.</span><span class="sxs-lookup"><span data-stu-id="4e42c-500">The property name is escaped before writing.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="4e42c-501">Der angegebene Eigenschaftenname ist zu lang.</span><span class="sxs-lookup"><span data-stu-id="4e42c-501">The specified property name is too large.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="4e42c-502">Validierung ist aktiviert, und der Schreibvorgang würde ungültige JSON-Daten produzieren.</span><span class="sxs-lookup"><span data-stu-id="4e42c-502">Validation is enabled, and the write operation would produce invalid JSON.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteString">
      <MemberSignature Language="C#" Value="public void WriteString (string propertyName, Guid value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteString(string propertyName, valuetype System.Guid value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteString(System.String,System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteString (propertyName As String, value As Guid)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteString(System::String ^ propertyName, Guid value);" />
      <MemberSignature Language="F#" Value="member this.WriteString : string * Guid -&gt; unit" Usage="utf8JsonWriter.WriteString (propertyName, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
        <Parameter Name="value" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="propertyName"><span data-ttu-id="4e42c-503">Der UTF-16-codierte Eigenschaftenname des JSON-Objekts, das zu transcodieren und als UTF-8 zu schreiben ist.</span><span class="sxs-lookup"><span data-stu-id="4e42c-503">The UTF-16 encoded property name of the JSON object to be transcoded and written as UTF-8.</span></span></param>
        <param name="value"><span data-ttu-id="4e42c-504">Der Wert, der als JSON-Zeichenfolge als Teil des Name-Wert-Paars geschrieben werden soll.</span><span class="sxs-lookup"><span data-stu-id="4e42c-504">The value to be written as a JSON string as part of the name/value pair.</span></span></param>
        <summary><span data-ttu-id="4e42c-505">Schreibt einen als Zeichenfolge angegebenen Eigenschaftennamen und einen <see cref="T:System.Guid" />-Wert (als JSON-Zeichenfolge) als Teil eines Name-Wert-Paars eines JSON-Objekts.</span><span class="sxs-lookup"><span data-stu-id="4e42c-505">Writes a property name specified as a string and a <see cref="T:System.Guid" /> value (as a JSON string) as part of a name/value pair of a JSON object.</span></span></summary>
        <remarks>
          <format><![CDATA[

<span data-ttu-id="4e42c-506">Der Eigenschaftsname wird vor dem Schreiben mit Escapezeichen versehen.</span><span class="sxs-lookup"><span data-stu-id="4e42c-506">The property name is escaped before writing.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="4e42c-507">Der angegebene Eigenschaftenname ist zu lang.</span><span class="sxs-lookup"><span data-stu-id="4e42c-507">The specified property name is too large.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="4e42c-508">Validierung ist aktiviert, und der Schreibvorgang würde ungültige JSON-Daten produzieren.</span><span class="sxs-lookup"><span data-stu-id="4e42c-508">Validation is enabled, and the write operation would produce invalid JSON.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteString">
      <MemberSignature Language="C#" Value="public void WriteString (string propertyName, ReadOnlySpan&lt;byte&gt; utf8Value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteString(string propertyName, valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; utf8Value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteString(System.String,System.ReadOnlySpan{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteString (propertyName As String, utf8Value As ReadOnlySpan(Of Byte))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteString(System::String ^ propertyName, ReadOnlySpan&lt;System::Byte&gt; utf8Value);" />
      <MemberSignature Language="F#" Value="member this.WriteString : string * ReadOnlySpan&lt;byte&gt; -&gt; unit" Usage="utf8JsonWriter.WriteString (propertyName, utf8Value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
        <Parameter Name="utf8Value" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="propertyName"><span data-ttu-id="4e42c-509">Der UTF-16-codierte Eigenschaftenname des JSON-Objekts, das zu transcodieren und als UTF-8 zu schreiben ist.</span><span class="sxs-lookup"><span data-stu-id="4e42c-509">The UTF-16 encoded property name of the JSON object to be transcoded and written as UTF-8.</span></span></param>
        <param name="utf8Value"><span data-ttu-id="4e42c-510">Der UTF-8-codierte Wert, der als JSON-Zeichenfolge als Teil des Name-Wert-Paars geschrieben werden soll.</span><span class="sxs-lookup"><span data-stu-id="4e42c-510">The UTF-8 encoded value to be written as a JSON string as part of the name/value pair.</span></span></param>
        <summary><span data-ttu-id="4e42c-511">Schreibt einen als Zeichenfolge angegebenen Eigenschaftennamen und einen UTF-8-Textwert (als JSON-Zeichenfolge) als Teil eines Name-Wert-Paars eines JSON-Objekts.</span><span class="sxs-lookup"><span data-stu-id="4e42c-511">Writes a property name specified as a string and a UTF-8 text value (as a JSON string) as part of a name/value pair of a JSON object.</span></span></summary>
        <remarks>
          <format><![CDATA[

<span data-ttu-id="4e42c-512">Die Eigenschaftennamen und-Wert wird mit Escapezeichen versehen vor dem Schreiben.</span><span class="sxs-lookup"><span data-stu-id="4e42c-512">The property name and value is escaped before writing.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="4e42c-513">Der angegebene Eigenschaftenname oder Wert ist zu groß.</span><span class="sxs-lookup"><span data-stu-id="4e42c-513">The specified property name or value is too large.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="4e42c-514">Validierung ist aktiviert, und der Schreibvorgang würde ungültige JSON-Daten produzieren.</span><span class="sxs-lookup"><span data-stu-id="4e42c-514">Validation is enabled, and the write operation would produce invalid JSON.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteString">
      <MemberSignature Language="C#" Value="public void WriteString (string propertyName, ReadOnlySpan&lt;char&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteString(string propertyName, valuetype System.ReadOnlySpan`1&lt;char&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteString(System.String,System.ReadOnlySpan{System.Char})" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteString (propertyName As String, value As ReadOnlySpan(Of Char))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteString(System::String ^ propertyName, ReadOnlySpan&lt;char&gt; value);" />
      <MemberSignature Language="F#" Value="member this.WriteString : string * ReadOnlySpan&lt;char&gt; -&gt; unit" Usage="utf8JsonWriter.WriteString (propertyName, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
        <Parameter Name="value" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
      </Parameters>
      <Docs>
        <param name="propertyName"><span data-ttu-id="4e42c-515">Der UTF-16-codierte Eigenschaftenname des JSON-Objekts, das zu transcodieren und als UTF-8 zu schreiben ist.</span><span class="sxs-lookup"><span data-stu-id="4e42c-515">The UTF-16 encoded property name of the JSON object to be transcoded and written as UTF-8.</span></span></param>
        <param name="value"><span data-ttu-id="4e42c-516">Der UTF-16-codierte Wert, der als UTF-8-transcodierte JSON-Zeichenfolge als Teil des Name-Wert-Paars geschrieben werden soll.</span><span class="sxs-lookup"><span data-stu-id="4e42c-516">The UTF-16 encoded value to be written as a UTF-8 transcoded JSON string as part of the name/value pair.</span></span></param>
        <summary><span data-ttu-id="4e42c-517">Schreibt einen als Zeichenfolge angegebenen Eigenschaftennamen und einen UTF-16-Textwert (als JSON-Zeichenfolge) als Teil eines Name-Wert-Paars eines JSON-Objekts.</span><span class="sxs-lookup"><span data-stu-id="4e42c-517">Writes a property name specified as a string and a UTF-16 text value (as a JSON string) as part of a name/value pair of a JSON object.</span></span></summary>
        <remarks>
          <format><![CDATA[

<span data-ttu-id="4e42c-518">Die Eigenschaftennamen und-Wert wird mit Escapezeichen versehen vor dem Schreiben.</span><span class="sxs-lookup"><span data-stu-id="4e42c-518">The property name and value is escaped before writing.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="4e42c-519">Der angegebene Eigenschaftenname oder Wert ist zu groß.</span><span class="sxs-lookup"><span data-stu-id="4e42c-519">The specified property name or value is too large.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="4e42c-520">Validierung ist aktiviert, und der Schreibvorgang würde ungültige JSON-Daten produzieren.</span><span class="sxs-lookup"><span data-stu-id="4e42c-520">Validation is enabled, and the write operation would produce invalid JSON.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteString">
      <MemberSignature Language="C#" Value="public void WriteString (string propertyName, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteString(string propertyName, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteString(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteString (propertyName As String, value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteString(System::String ^ propertyName, System::String ^ value);" />
      <MemberSignature Language="F#" Value="member this.WriteString : string * string -&gt; unit" Usage="utf8JsonWriter.WriteString (propertyName, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="propertyName"><span data-ttu-id="4e42c-521">Der UTF-16-codierte Eigenschaftenname des JSON-Objekts, das zu transcodieren und als UTF-8 zu schreiben ist.</span><span class="sxs-lookup"><span data-stu-id="4e42c-521">The UTF-16 encoded property name of the JSON object to be transcoded and written as UTF-8.</span></span></param>
        <param name="value"><span data-ttu-id="4e42c-522">Der UTF-16-codierte Wert, der als UTF-8-transcodierte JSON-Zeichenfolge als Teil des Name-Wert-Paars geschrieben werden soll.</span><span class="sxs-lookup"><span data-stu-id="4e42c-522">The UTF-16 encoded value to be written as a UTF-8 transcoded JSON string as part of the name/value pair.</span></span></param>
        <summary><span data-ttu-id="4e42c-523">Schreibt einen als Zeichenfolge angegebenen Eigenschaftennamen und einen Zeichenfolgentextwert (als JSON-Zeichenfolge) als Teil eines Name-Wert-Paars eines JSON-Objekts.</span><span class="sxs-lookup"><span data-stu-id="4e42c-523">Writes a property name specified as a string and a string text value (as a JSON string) as part of a name/value pair of a JSON object.</span></span></summary>
        <remarks>
          <format><![CDATA[

<span data-ttu-id="4e42c-524">Die Eigenschaftennamen und-Wert wird mit Escapezeichen versehen vor dem Schreiben.</span><span class="sxs-lookup"><span data-stu-id="4e42c-524">The property name and value is escaped before writing.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="4e42c-525">Der angegebene Eigenschaftenname oder Wert ist zu groß.</span><span class="sxs-lookup"><span data-stu-id="4e42c-525">The specified property name or value is too large.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="4e42c-526">Validierung ist aktiviert, und der Schreibvorgang würde ungültige JSON-Daten produzieren.</span><span class="sxs-lookup"><span data-stu-id="4e42c-526">Validation is enabled, and the write operation would produce invalid JSON.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteStringValue">
      <MemberSignature Language="C#" Value="public void WriteStringValue (DateTime value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteStringValue(valuetype System.DateTime value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteStringValue(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteStringValue (value As DateTime)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteStringValue(DateTime value);" />
      <MemberSignature Language="F#" Value="member this.WriteStringValue : DateTime -&gt; unit" Usage="utf8JsonWriter.WriteStringValue value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="4e42c-527">Der Wert, der als JSON-Zeichenfolge als ein Element eines JSON-Arrays geschrieben werden soll.</span><span class="sxs-lookup"><span data-stu-id="4e42c-527">The value to be written as a JSON string as an element of a JSON array.</span></span></param>
        <summary><span data-ttu-id="4e42c-528">Schreibt einen <see cref="T:System.DateTime" />-Wert (als JSON-Zeichenfolge) als ein Element eines JSON-Arrays.</span><span class="sxs-lookup"><span data-stu-id="4e42c-528">Writes a <see cref="T:System.DateTime" /> value (as a JSON string) as an element of a JSON array.</span></span></summary>
        <remarks><span data-ttu-id="4e42c-529">Diese Methode schreibt die <see cref="T:System.DateTime" /> mithilfe der zurückführbar ('O') <see cref="T:System.Buffers.StandardFormat" />.</span><span class="sxs-lookup"><span data-stu-id="4e42c-529">This method writes the <see cref="T:System.DateTime" /> using the round-trippable ('O') <see cref="T:System.Buffers.StandardFormat" />.</span></span> <span data-ttu-id="4e42c-530">Z.B. 2017-06-12T05:30:45.7680000.</span><span class="sxs-lookup"><span data-stu-id="4e42c-530">For example, 2017-06-12T05:30:45.7680000.</span></span></remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="4e42c-531">Validierung ist aktiviert, und der Vorgang würde im Schreiben ungültiger JSON-Daten resultieren.</span><span class="sxs-lookup"><span data-stu-id="4e42c-531">Validation is enabled, and the operation would result in writing invalid JSON.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteStringValue">
      <MemberSignature Language="C#" Value="public void WriteStringValue (DateTimeOffset value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteStringValue(valuetype System.DateTimeOffset value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteStringValue(System.DateTimeOffset)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteStringValue (value As DateTimeOffset)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteStringValue(DateTimeOffset value);" />
      <MemberSignature Language="F#" Value="member this.WriteStringValue : DateTimeOffset -&gt; unit" Usage="utf8JsonWriter.WriteStringValue value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.DateTimeOffset" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="4e42c-532">Der Wert, der als JSON-Zeichenfolge als ein Element eines JSON-Arrays geschrieben werden soll.</span><span class="sxs-lookup"><span data-stu-id="4e42c-532">The value to be written as a JSON string as an element of a JSON array.</span></span></param>
        <summary><span data-ttu-id="4e42c-533">Schreibt einen <see cref="T:System.DateTimeOffset" />-Wert (als JSON-Zeichenfolge) als ein Element eines JSON-Arrays.</span><span class="sxs-lookup"><span data-stu-id="4e42c-533">Writes a <see cref="T:System.DateTimeOffset" /> value (as a JSON string) as an element of a JSON array.</span></span></summary>
        <remarks><span data-ttu-id="4e42c-534">Diese Methode schreibt die <see cref="T:System.DateTimeOffset" /> mithilfe der zurückführbar ('O') <see cref="T:System.Buffers.StandardFormat" />.</span><span class="sxs-lookup"><span data-stu-id="4e42c-534">This method writes the <see cref="T:System.DateTimeOffset" /> using the round-trippable ('O') <see cref="T:System.Buffers.StandardFormat" />.</span></span> <span data-ttu-id="4e42c-535">Z.B. 2017-06-12T05:30:45.7680000-07:00.</span><span class="sxs-lookup"><span data-stu-id="4e42c-535">For example, 2017-06-12T05:30:45.7680000-07:00.</span></span></remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="4e42c-536">Validierung ist aktiviert, und der Vorgang würde im Schreiben ungültiger JSON-Daten resultieren.</span><span class="sxs-lookup"><span data-stu-id="4e42c-536">Validation is enabled, and the operation would result in writing invalid JSON.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteStringValue">
      <MemberSignature Language="C#" Value="public void WriteStringValue (Guid value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteStringValue(valuetype System.Guid value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteStringValue(System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteStringValue (value As Guid)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteStringValue(Guid value);" />
      <MemberSignature Language="F#" Value="member this.WriteStringValue : Guid -&gt; unit" Usage="utf8JsonWriter.WriteStringValue value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="4e42c-537">Der Wert, der als JSON-Zeichenfolge als ein Element eines JSON-Arrays geschrieben werden soll.</span><span class="sxs-lookup"><span data-stu-id="4e42c-537">The value to be written as a JSON string as an element of a JSON array.</span></span></param>
        <summary><span data-ttu-id="4e42c-538">Schreibt einen <see cref="T:System.Guid" />-Wert (als JSON-Zeichenfolge) als ein Element eines JSON-Arrays.</span><span class="sxs-lookup"><span data-stu-id="4e42c-538">Writes a <see cref="T:System.Guid" /> value (as a JSON string) as an element of a JSON array.</span></span></summary>
        <remarks><span data-ttu-id="4e42c-539">Diese Methode schreibt die <see cref="T:System.Guid" /> -Wert mithilfe der standardmäßigen <see cref="T:System.Buffers.StandardFormat" /> (d. h. hatte "), wie das Formular: Nnnnnnnn-Nnnn-Nnnn-Nnnn-Nnnnnnnnnnnn.</span><span class="sxs-lookup"><span data-stu-id="4e42c-539">This method writes the <see cref="T:System.Guid" /> value using the default <see cref="T:System.Buffers.StandardFormat" /> (that is, 'D'), as the form: nnnnnnnn-nnnn-nnnn-nnnn-nnnnnnnnnnnn.</span></span></remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="4e42c-540">Validierung ist aktiviert, und der Vorgang würde im Schreiben ungültiger JSON-Daten resultieren.</span><span class="sxs-lookup"><span data-stu-id="4e42c-540">Validation is enabled, and the operation would result in writing invalid JSON.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteStringValue">
      <MemberSignature Language="C#" Value="public void WriteStringValue (ReadOnlySpan&lt;byte&gt; utf8Value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteStringValue(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; utf8Value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteStringValue(System.ReadOnlySpan{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteStringValue (utf8Value As ReadOnlySpan(Of Byte))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteStringValue(ReadOnlySpan&lt;System::Byte&gt; utf8Value);" />
      <MemberSignature Language="F#" Value="member this.WriteStringValue : ReadOnlySpan&lt;byte&gt; -&gt; unit" Usage="utf8JsonWriter.WriteStringValue utf8Value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="utf8Value" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="utf8Value"><span data-ttu-id="4e42c-541">Der UTF-8-codierte Wert, der als JSON-Zeichenfolgenelement eines JSON-Arrays geschrieben werden soll.</span><span class="sxs-lookup"><span data-stu-id="4e42c-541">The UTF-8 encoded value to be written as a JSON string element of a JSON array.</span></span></param>
        <summary><span data-ttu-id="4e42c-542">Schreibt einen UTF-8-Textwert (als JSON-Zeichenfolge) als ein Element eines JSON-Arrays.</span><span class="sxs-lookup"><span data-stu-id="4e42c-542">Writes a UTF-8 text value (as a JSON string) as an element of a JSON array.</span></span></summary>
        <remarks>
          <format><![CDATA[

<span data-ttu-id="4e42c-543">Der Wert wird vor dem Schreiben mit Escapezeichen versehen.</span><span class="sxs-lookup"><span data-stu-id="4e42c-543">The value is escaped before writing.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="4e42c-544">Der angegebene Wert ist zu groß.</span><span class="sxs-lookup"><span data-stu-id="4e42c-544">The specified value is too large.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="4e42c-545">Validierung ist aktiviert, und der Schreibvorgang würde ungültige JSON-Daten produzieren.</span><span class="sxs-lookup"><span data-stu-id="4e42c-545">Validation is enabled, and the write operation would produce invalid JSON.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteStringValue">
      <MemberSignature Language="C#" Value="public void WriteStringValue (ReadOnlySpan&lt;char&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteStringValue(valuetype System.ReadOnlySpan`1&lt;char&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteStringValue(System.ReadOnlySpan{System.Char})" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteStringValue (value As ReadOnlySpan(Of Char))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteStringValue(ReadOnlySpan&lt;char&gt; value);" />
      <MemberSignature Language="F#" Value="member this.WriteStringValue : ReadOnlySpan&lt;char&gt; -&gt; unit" Usage="utf8JsonWriter.WriteStringValue value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="4e42c-546">Der UTF-16-codierte Wert, der als UTF-8-transcodiertes JSON-Zeichenfolgenelement eines JSON-Arrays geschrieben werden soll.</span><span class="sxs-lookup"><span data-stu-id="4e42c-546">The UTF-16 encoded value to be written as a UTF-8 transcoded JSON string element of a JSON array.</span></span></param>
        <summary><span data-ttu-id="4e42c-547">Schreibt einen UTF-16-Textwert (als JSON-Zeichenfolge) als ein Element eines JSON-Arrays.</span><span class="sxs-lookup"><span data-stu-id="4e42c-547">Writes a UTF-16 text value (as a JSON string) as an element of a JSON array.</span></span></summary>
        <remarks>
          <format><![CDATA[

<span data-ttu-id="4e42c-548">Der Wert wird vor dem Schreiben mit Escapezeichen versehen.</span><span class="sxs-lookup"><span data-stu-id="4e42c-548">The value is escaped before writing.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="4e42c-549">Der angegebene Wert ist zu groß.</span><span class="sxs-lookup"><span data-stu-id="4e42c-549">The specified value is too large.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="4e42c-550">Validierung ist aktiviert, und der Schreibvorgang würde ungültige JSON-Daten produzieren.</span><span class="sxs-lookup"><span data-stu-id="4e42c-550">Validation is enabled, and the write operation would produce invalid JSON.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteStringValue">
      <MemberSignature Language="C#" Value="public void WriteStringValue (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteStringValue(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteStringValue(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteStringValue (value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteStringValue(System::String ^ value);" />
      <MemberSignature Language="F#" Value="member this.WriteStringValue : string -&gt; unit" Usage="utf8JsonWriter.WriteStringValue value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="4e42c-551">Der UTF-16-codierte Wert, der als UTF-8-transcodiertes JSON-Zeichenfolgenelement eines JSON-Arrays geschrieben werden soll.</span><span class="sxs-lookup"><span data-stu-id="4e42c-551">The UTF-16 encoded value to be written as a UTF-8 transcoded JSON string element of a JSON array.</span></span></param>
        <summary><span data-ttu-id="4e42c-552">Schreibt einen Zeichenfolgentextwert (als JSON-Zeichenfolge) als ein Element eines JSON-Arrays.</span><span class="sxs-lookup"><span data-stu-id="4e42c-552">Writes a string text value (as a JSON string) as an element of a JSON array.</span></span></summary>
        <remarks>
          <format><![CDATA[

<span data-ttu-id="4e42c-553">Der Wert wird vor dem Schreiben mit Escapezeichen versehen.</span><span class="sxs-lookup"><span data-stu-id="4e42c-553">The value is escaped before writing.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="4e42c-554">Der angegebene Wert ist zu groß.</span><span class="sxs-lookup"><span data-stu-id="4e42c-554">The specified value is too large.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="4e42c-555">Validierung ist aktiviert, und der Schreibvorgang würde ungültige JSON-Daten produzieren.</span><span class="sxs-lookup"><span data-stu-id="4e42c-555">Validation is enabled, and the write operation would produce invalid JSON.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>