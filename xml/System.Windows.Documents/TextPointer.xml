<Type Name="TextPointer" FullName="System.Windows.Documents.TextPointer">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="d374acbfa59bece9a23ff4841ba74263d0c6fa42" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class TextPointer : System.Windows.Documents.ContentPosition" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TextPointer extends System.Windows.Documents.ContentPosition" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Documents.TextPointer" />
  <TypeSignature Language="VB.NET" Value="Public Class TextPointer&#xA;Inherits ContentPosition" />
  <TypeSignature Language="C++ CLI" Value="public ref class TextPointer : System::Windows::Documents::ContentPosition" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Documents.ContentPosition</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="59528-101">Stellt eine Position in einem <see cref="T:System.Windows.Documents.FlowDocument" /> oder <see cref="T:System.Windows.Controls.TextBlock" /> dar.</span>
      <span class="sxs-lookup">
        <span data-stu-id="59528-101">Represents a position within a <see cref="T:System.Windows.Documents.FlowDocument" /> or <see cref="T:System.Windows.Controls.TextBlock" />.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="59528-102">Die <xref:System.Windows.Documents.TextPointer> Klasse führt die folgende Terminologie:</span><span class="sxs-lookup"><span data-stu-id="59528-102">The <xref:System.Windows.Documents.TextPointer> class introduces the following terminology:</span></span>  
  
-   <span data-ttu-id="59528-103">Position - grundsätzlich, ein <xref:System.Windows.Documents.TextPointer> verweist immer auf eine *Position* im Inhalt.</span><span class="sxs-lookup"><span data-stu-id="59528-103">Position - Inherently, a <xref:System.Windows.Documents.TextPointer> always points to a *position* in content.</span></span>  <span data-ttu-id="59528-104">Diese Positionen entweder zwischen Zeichen im Inhalt oder Fluss fallen Content-Element-tags definieren die Struktur für den Inhalt.</span><span class="sxs-lookup"><span data-stu-id="59528-104">Such positions either fall between characters in the content, or between flow content element tags that define structure for the content.</span></span>  
  
-   <span data-ttu-id="59528-105">Aktuelle Position: Da eine <xref:System.Windows.Documents.TextPointer> immer gibt eine Position und da viele Vorgänge, die über ausgeführt werden können eine <xref:System.Windows.Documents.TextPointer> sind relativ zur Position, die derzeit verweist der <xref:System.Windows.Documents.TextPointer>, es ist sinnvoll, verweisen einfach auf die durch angegebenen Position ein <xref:System.Windows.Documents.TextPointer> als die *aktuelle Position*.</span><span class="sxs-lookup"><span data-stu-id="59528-105">Current Position - Because a <xref:System.Windows.Documents.TextPointer> always indicates a position, and because many of the operations that can be performed through a <xref:System.Windows.Documents.TextPointer> are relative to the position currently pointed to by the <xref:System.Windows.Documents.TextPointer>, it makes sense to simply refer to the position indicated by a <xref:System.Windows.Documents.TextPointer> as the *current position*.</span></span>  
  
-   <span data-ttu-id="59528-106">Position der Einfügemarke - ein *Einfügeposition* ist eine Position, in neuer Inhalte ohne Unterbrechung semantischen Regeln für den zugehörigen Inhalt hinzugefügt werden kann.</span><span class="sxs-lookup"><span data-stu-id="59528-106">Insertion Position - An *insertion position* is a position where new content may be added without breaking any semantic rules for the associated content.</span></span>  <span data-ttu-id="59528-107">In der Praxis ist eine Einfügeposition an einer beliebigen Stelle im Inhalt, in denen eine Einfügemarke positioniert werden kann.</span><span class="sxs-lookup"><span data-stu-id="59528-107">In practice, an insertion position is anywhere in content where a caret may be positioned.</span></span>  <span data-ttu-id="59528-108">Ein Beispiel einer gültigen <xref:System.Windows.Documents.TextPointer> Position an, die sich nicht um eine Einfügeposition ist, ist die Position zwischen zwei angrenzende <xref:System.Windows.Documents.Paragraph> Tags (d. h. zwischen dem Endtag aus dem vorherigen Absatz und das öffnende Tag eines nächsten Absatz).</span><span class="sxs-lookup"><span data-stu-id="59528-108">An example of a valid <xref:System.Windows.Documents.TextPointer> position that is not an insertion position is the position between two adjacent <xref:System.Windows.Documents.Paragraph> tags (that is, between the closing tag of the preceding paragraph and the opening tag of the next paragraph).</span></span>  
  
-   <span data-ttu-id="59528-109">Symbol: im Rahmen <xref:System.Windows.Documents.TextPointer> Vorgänge, die Symbole betreffen, keines der folgenden gilt eine *Symbol*:</span><span class="sxs-lookup"><span data-stu-id="59528-109">Symbol - For the purposes of <xref:System.Windows.Documents.TextPointer> operations that involve symbols, any of the following is considered to be a *symbol*:</span></span>  
  
    -   <span data-ttu-id="59528-110">Start- oder Endtag für ein <xref:System.Windows.Documents.TextElement> Element.</span><span class="sxs-lookup"><span data-stu-id="59528-110">An opening or closing tag for a <xref:System.Windows.Documents.TextElement> element.</span></span>  
  
    -   <span data-ttu-id="59528-111">Ein <xref:System.Windows.UIElement> Element innerhalb einer <xref:System.Windows.Documents.InlineUIContainer> oder <xref:System.Windows.Documents.BlockUIContainer>.</span><span class="sxs-lookup"><span data-stu-id="59528-111">A <xref:System.Windows.UIElement> element contained within an <xref:System.Windows.Documents.InlineUIContainer> or <xref:System.Windows.Documents.BlockUIContainer>.</span></span>  <span data-ttu-id="59528-112">Beachten Sie, dass solche eine <xref:System.Windows.UIElement> wird immer als genau ein Symbol ist eine zusätzliche Inhalts- oder Elemente gezählt der <xref:System.Windows.UIElement> werden als Symbole nicht gezählt.</span><span class="sxs-lookup"><span data-stu-id="59528-112">Note that such a <xref:System.Windows.UIElement> is always counted as exactly one symbol; any additional content or elements contained by the <xref:System.Windows.UIElement> are not counted as symbols.</span></span>  
  
    -   <span data-ttu-id="59528-113">Jedes 16-Bit [!INCLUDE[TLA#tla_unicode](~/includes/tlasharptla-unicode-md.md)] -Zeichen in einem <xref:System.Windows.Documents.Run> Element.</span><span class="sxs-lookup"><span data-stu-id="59528-113">Each 16-bit [!INCLUDE[TLA#tla_unicode](~/includes/tlasharptla-unicode-md.md)] character inside of a text <xref:System.Windows.Documents.Run> element.</span></span>  
  
-   <span data-ttu-id="59528-114">Textcontainer – eine *Textcontainer* wird das Element, das den äußeren Rahmen der fortlaufenden Inhalts bildet, die vom angegebenen Position ein <xref:System.Windows.Documents.TextPointer> liegt immer in einem Textcontainer.</span><span class="sxs-lookup"><span data-stu-id="59528-114">Text Container - A *text container* is the element that forms the ultimate border for the flow content at hand; the position indicated by a <xref:System.Windows.Documents.TextPointer> always falls within a text container.</span></span>  <span data-ttu-id="59528-115">Derzeit ein Textcontainer muss entweder eine <xref:System.Windows.Documents.FlowDocument> oder ein <xref:System.Windows.Controls.TextBlock>.</span><span class="sxs-lookup"><span data-stu-id="59528-115">Currently, a text container must be either a <xref:System.Windows.Documents.FlowDocument> or a <xref:System.Windows.Controls.TextBlock>.</span></span>  <span data-ttu-id="59528-116">Im Allgemeinen steigen zwischen <xref:System.Windows.Documents.TextPointer> Instanzen in anderen Text-Container werden nicht unterstützt.</span><span class="sxs-lookup"><span data-stu-id="59528-116">Generally speaking, operations between <xref:System.Windows.Documents.TextPointer> instances in different text containers are not supported.</span></span>  
  
-   <span data-ttu-id="59528-117">Dokument - der Inhalt in einem Textcontainer wird bezeichnet als eine *Dokument*, z. B. die <xref:System.Windows.Documents.TextPointer.IsInSameDocument%2A> Methode und die <xref:System.Windows.Documents.TextPointer.DocumentStart%2A> und <xref:System.Windows.Documents.TextPointer.DocumentEnd%2A> Eigenschaften.</span><span class="sxs-lookup"><span data-stu-id="59528-117">Document - The content in a text container is referred to as a *document*, as in the <xref:System.Windows.Documents.TextPointer.IsInSameDocument%2A> method and the <xref:System.Windows.Documents.TextPointer.DocumentStart%2A> and <xref:System.Windows.Documents.TextPointer.DocumentEnd%2A> properties.</span></span>  
  
 <span data-ttu-id="59528-118">Die <xref:System.Windows.Documents.TextPointer> Klasse dient zur Vereinfachung Durchlauf und Bearbeitung von Inhalt, der durch dargestellt wird [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] flow Inhaltselemente; in der Regel solche Elemente abgeleitet <xref:System.Windows.Documents.TextElement>.</span><span class="sxs-lookup"><span data-stu-id="59528-118">The <xref:System.Windows.Documents.TextPointer> class is intended to facilitate traversal and manipulation of content that is represented by [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] flow content elements; in general, such elements derive from <xref:System.Windows.Documents.TextElement>.</span></span>  <span data-ttu-id="59528-119">Einige der Vorgänge, die <xref:System.Windows.Documents.TextPointer> erleichtert umfassen Folgendes:</span><span class="sxs-lookup"><span data-stu-id="59528-119">Some of the operations that <xref:System.Windows.Documents.TextPointer> facilitates include the following:</span></span>  
  
-   <span data-ttu-id="59528-120">Führen Sie einen Ordinalvergleich von der aktuellen Position mit einer zweiten angegebenen Position.</span><span class="sxs-lookup"><span data-stu-id="59528-120">Perform an ordinal comparison of the current position with a second specified position.</span></span>  <span data-ttu-id="59528-121">Finden Sie unter der <xref:System.Windows.Documents.TextPointer.CompareTo%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="59528-121">See the <xref:System.Windows.Documents.TextPointer.CompareTo%2A> method.</span></span>  
  
-   <span data-ttu-id="59528-122">Die Art des Inhalts an die aktuelle Position in einer angegebenen Richtung angrenzende bestimmt.</span><span class="sxs-lookup"><span data-stu-id="59528-122">Determine the type of content adjacent to the current position in a specified direction.</span></span>  <span data-ttu-id="59528-123">Finden Sie unter der <xref:System.Windows.Documents.TextPointer.GetPointerContext%2A> Methode und <xref:System.Windows.Documents.TextPointerContext> Enumeration.</span><span class="sxs-lookup"><span data-stu-id="59528-123">See the <xref:System.Windows.Documents.TextPointer.GetPointerContext%2A> method and <xref:System.Windows.Documents.TextPointerContext> enumeration.</span></span>  
  
-   <span data-ttu-id="59528-124">Abrufen der <xref:System.Windows.Documents.TextElement> , die Bereiche oder angrenzend an die aktuelle Position ist.</span><span class="sxs-lookup"><span data-stu-id="59528-124">Get the <xref:System.Windows.Documents.TextElement> that scopes or is adjacent to the current position.</span></span>  <span data-ttu-id="59528-125">Finden Sie unter <xref:System.Windows.Documents.Paragraph> und die <xref:System.Windows.Documents.TextPointer.GetAdjacentElement%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="59528-125">See <xref:System.Windows.Documents.Paragraph> and the <xref:System.Windows.Documents.TextPointer.GetAdjacentElement%2A> method.</span></span>  
  
-   <span data-ttu-id="59528-126">Abrufen des Textcontainers aus, die das aktuelle Dokument Bereiche.</span><span class="sxs-lookup"><span data-stu-id="59528-126">Get the text container that scopes the current document.</span></span>  <span data-ttu-id="59528-127">Siehe <xref:System.Windows.Documents.TextPointer.Parent%2A>-Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="59528-127">See the <xref:System.Windows.Documents.TextPointer.Parent%2A> property.</span></span>  
  
-   <span data-ttu-id="59528-128">Abrufen Sie eine angegebene Anzahl von Zeichen, die vor oder nach der aktuellen Position.</span><span class="sxs-lookup"><span data-stu-id="59528-128">Get a specified number of characters preceding or following the current position.</span></span>  <span data-ttu-id="59528-129">Finden Sie unter der <xref:System.Windows.Documents.TextPointer.GetTextInRun%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="59528-129">See the <xref:System.Windows.Documents.TextPointer.GetTextInRun%2A> method.</span></span>  
  
-   <span data-ttu-id="59528-130">Fügen Sie eine Zeichenfolge von Zeichen an der aktuellen Position.</span><span class="sxs-lookup"><span data-stu-id="59528-130">Insert a string of characters at the current position.</span></span>  <span data-ttu-id="59528-131">Finden Sie unter der <xref:System.Windows.Documents.TextPointer.InsertTextInRun%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="59528-131">See the <xref:System.Windows.Documents.TextPointer.InsertTextInRun%2A> method.</span></span>  
  
-   <span data-ttu-id="59528-132">Suchen Sie Zeile Grenzen im Inhalt.</span><span class="sxs-lookup"><span data-stu-id="59528-132">Find line boundaries in content.</span></span>  <span data-ttu-id="59528-133">Finden Sie unter der <xref:System.Windows.Documents.TextPointer.GetLineStartPosition%2A> Methode und <xref:System.Windows.Documents.TextPointer.IsAtLineStartPosition%2A> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="59528-133">See the <xref:System.Windows.Documents.TextPointer.GetLineStartPosition%2A> method and <xref:System.Windows.Documents.TextPointer.IsAtLineStartPosition%2A> property.</span></span>  
  
-   <span data-ttu-id="59528-134">Übersetzt zwischen <xref:System.Windows.Documents.TextPointer> Positionen und das Symbol für UTC-offsets in Inhalte.</span><span class="sxs-lookup"><span data-stu-id="59528-134">Translate between <xref:System.Windows.Documents.TextPointer> positions and symbol offsets into content.</span></span>  <span data-ttu-id="59528-135">Finden Sie unter der <xref:System.Windows.Documents.TextPointer.GetOffsetToPosition%2A> und <xref:System.Windows.Documents.TextPointer.GetPositionAtOffset%2A> Methoden.</span><span class="sxs-lookup"><span data-stu-id="59528-135">See the <xref:System.Windows.Documents.TextPointer.GetOffsetToPosition%2A> and <xref:System.Windows.Documents.TextPointer.GetPositionAtOffset%2A> methods.</span></span>  
  
-   <span data-ttu-id="59528-136">Führen Sie die visuellen Treffertests durch Übersetzen zwischen ein <xref:System.Windows.Documents.TextPointer> Position und eine <xref:System.Windows.Point> , relative Koordinaten darstellt.</span><span class="sxs-lookup"><span data-stu-id="59528-136">Perform visual hit testing by translating between a <xref:System.Windows.Documents.TextPointer> position and a <xref:System.Windows.Point> representing relative coordinates.</span></span>  
  
-   <span data-ttu-id="59528-137">Suchen einer nahe gelegenen Einfügeposition oder Überprüfen Sie, ob die aktuelle Position eine Einfügeposition ist.</span><span class="sxs-lookup"><span data-stu-id="59528-137">Find a nearby insertion position, or check whether the current position is an insertion position.</span></span>  <span data-ttu-id="59528-138">Finden Sie unter der <xref:System.Windows.Documents.TextPointer.GetInsertionPosition%2A> und <xref:System.Windows.Documents.TextPointer.GetNextInsertionPosition%2A> Methoden und die <xref:System.Windows.Documents.TextPointer.IsAtInsertionPosition%2A> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="59528-138">See the <xref:System.Windows.Documents.TextPointer.GetInsertionPosition%2A> and <xref:System.Windows.Documents.TextPointer.GetNextInsertionPosition%2A> methods and the <xref:System.Windows.Documents.TextPointer.IsAtInsertionPosition%2A> property.</span></span>  
  
 <span data-ttu-id="59528-139">Die Position und <xref:System.Windows.Documents.TextPointer.LogicalDirection%2A> erkennbar ein <xref:System.Windows.Documents.TextPointer> Objekt sind unveränderlich.</span><span class="sxs-lookup"><span data-stu-id="59528-139">The position and <xref:System.Windows.Documents.TextPointer.LogicalDirection%2A> indicated by a <xref:System.Windows.Documents.TextPointer> object are immutable.</span></span>  <span data-ttu-id="59528-140">Wenn Inhalt bearbeitet oder geändert wird, die vom angegebenen Position eine <xref:System.Windows.Documents.TextPointer> ändert sich nicht relativ zum umgebenden Textes; stattdessen der Offset der Position vom Anfang des Inhalts entsprechend entsprechend die neue relative Position im angepasst wird Inhalt.</span><span class="sxs-lookup"><span data-stu-id="59528-140">When content is edited or modified, the position indicated by a <xref:System.Windows.Documents.TextPointer> does not change relative to the surrounding text; rather the offset of that position from the beginning of content is adjusted correspondingly to reflect the new relative position in content.</span></span>  <span data-ttu-id="59528-141">Angenommen, ein <xref:System.Windows.Documents.TextPointer> , der angibt, eine Position, an den Anfang eines bestimmten Absatzes, zeigen Sie auf den Anfang des Absatzes, selbst wenn Inhalt eingefügt oder werden, vor oder nach dem Absatz gelöscht wird fortgesetzt.</span><span class="sxs-lookup"><span data-stu-id="59528-141">For example, a <xref:System.Windows.Documents.TextPointer> that indicates a position at the beginning of a given paragraph continues to point to the beginning of that paragraph even when content is inserted or deleted before or after the paragraph.</span></span>  
  
 <span data-ttu-id="59528-142">Die <xref:System.Windows.Documents.TextPointer> Klasse keine öffentlichen Konstruktoren bereit.</span><span class="sxs-lookup"><span data-stu-id="59528-142">The <xref:System.Windows.Documents.TextPointer> class does not provide any public constructors.</span></span>  <span data-ttu-id="59528-143">Eine Instanz von <xref:System.Windows.Documents.TextPointer> wird erstellt, indem Sie mithilfe der Eigenschaften oder Methoden anderer Objekte (einschließlich anderer <xref:System.Windows.Documents.TextPointer> Objekte).</span><span class="sxs-lookup"><span data-stu-id="59528-143">An instance of <xref:System.Windows.Documents.TextPointer> is created by using properties or methods of other objects (including other <xref:System.Windows.Documents.TextPointer> objects).</span></span> <span data-ttu-id="59528-144">Die folgende Liste enthält einige Beispiele für Methoden und Eigenschaften, erstellen und zurückgeben, einer <xref:System.Windows.Documents.TextPointer>.</span><span class="sxs-lookup"><span data-stu-id="59528-144">The following list provides a few examples of methods and properties that create and return a <xref:System.Windows.Documents.TextPointer>.</span></span>  <span data-ttu-id="59528-145">Diese Liste ist nicht vollständig:</span><span class="sxs-lookup"><span data-stu-id="59528-145">This list is not exhaustive:</span></span>  
  
-   <span data-ttu-id="59528-146">Aus einem <xref:System.Windows.Documents.TextRange>: <xref:System.Windows.Documents.TextRange.Start%2A> und <xref:System.Windows.Documents.TextRange.End%2A>.</span><span class="sxs-lookup"><span data-stu-id="59528-146">From a <xref:System.Windows.Documents.TextRange>: <xref:System.Windows.Documents.TextRange.Start%2A> and <xref:System.Windows.Documents.TextRange.End%2A>.</span></span>  
  
-   <span data-ttu-id="59528-147">Aus einem <xref:System.Windows.Documents.TextElement>: <xref:System.Windows.Documents.TextElement.ContentStart%2A>, <xref:System.Windows.Documents.TextElement.ContentEnd%2A>, <xref:System.Windows.Documents.TextElement.ElementStart%2A>, und <xref:System.Windows.Documents.TextElement.ElementEnd%2A>.</span><span class="sxs-lookup"><span data-stu-id="59528-147">From a <xref:System.Windows.Documents.TextElement>:  <xref:System.Windows.Documents.TextElement.ContentStart%2A>, <xref:System.Windows.Documents.TextElement.ContentEnd%2A>, <xref:System.Windows.Documents.TextElement.ElementStart%2A>, and <xref:System.Windows.Documents.TextElement.ElementEnd%2A>.</span></span>  
  
-   <span data-ttu-id="59528-148">Aus einem <xref:System.Windows.Controls.TextBlock> (Textcontainer): <xref:System.Windows.Controls.TextBlock.ContentStart%2A>, <xref:System.Windows.Controls.TextBlock.ContentEnd%2A>, und <xref:System.Windows.Controls.TextBlock.GetPositionFromPoint%2A>.</span><span class="sxs-lookup"><span data-stu-id="59528-148">From a <xref:System.Windows.Controls.TextBlock> (text container): <xref:System.Windows.Controls.TextBlock.ContentStart%2A>, <xref:System.Windows.Controls.TextBlock.ContentEnd%2A>, and <xref:System.Windows.Controls.TextBlock.GetPositionFromPoint%2A>.</span></span>  
  
-   <span data-ttu-id="59528-149">Aus einem <xref:System.Windows.Documents.FlowDocument> (Textcontainer): <xref:System.Windows.Documents.FlowDocument.ContentStart%2A>, und <xref:System.Windows.Documents.FlowDocument.ContentEnd%2A></span><span class="sxs-lookup"><span data-stu-id="59528-149">From a <xref:System.Windows.Documents.FlowDocument> (text container): <xref:System.Windows.Documents.FlowDocument.ContentStart%2A>, and <xref:System.Windows.Documents.FlowDocument.ContentEnd%2A></span></span>  
  
-   <span data-ttu-id="59528-150">Aus einer vorhandenen <xref:System.Windows.Documents.TextPointer>: <xref:System.Windows.Documents.TextPointer.DocumentStart%2A>, <xref:System.Windows.Documents.TextPointer.DocumentEnd%2A>, <xref:System.Windows.Documents.TextPointer.GetNextInsertionPosition%2A>, und <xref:System.Windows.Documents.TextPointer.GetPositionAtOffset%2A>.</span><span class="sxs-lookup"><span data-stu-id="59528-150">From an existing <xref:System.Windows.Documents.TextPointer>: <xref:System.Windows.Documents.TextPointer.DocumentStart%2A>, <xref:System.Windows.Documents.TextPointer.DocumentEnd%2A>, <xref:System.Windows.Documents.TextPointer.GetNextInsertionPosition%2A>, and <xref:System.Windows.Documents.TextPointer.GetPositionAtOffset%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="59528-151">Im folgenden Beispiel wird veranschaulicht, wie eine <xref:System.Windows.Documents.TextPointer> finden Sie eine Position der ersten <xref:System.Windows.Documents.Run> Element in einem Container angegebenen Text.</span><span class="sxs-lookup"><span data-stu-id="59528-151">The following example demonstrates how to use a <xref:System.Windows.Documents.TextPointer> to find a position just inside of the first <xref:System.Windows.Documents.Run> element in a specified text container.</span></span>  
  
 [!code-csharp[TextPointer_Snippets#_TextPointer_TextPointer1](~/samples/snippets/csharp/VS_Snippets_Wpf/TextPointer_Snippets/CSharp/Window1.xaml.cs#_textpointer_textpointer1)]
 [!code-vb[TextPointer_Snippets#_TextPointer_TextPointer1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextPointer_Snippets/visualbasic/window1.xaml.vb#_textpointer_textpointer1)]  
  
 <span data-ttu-id="59528-152">Das folgende Beispiel implementiert eine vereinfachte Suchalgorithmus mit <xref:System.Windows.Documents.TextPointer> Einrichtungen.</span><span class="sxs-lookup"><span data-stu-id="59528-152">The following example implements a simplistic find algorithm using <xref:System.Windows.Documents.TextPointer> facilities.</span></span>  
  
 [!code-csharp[TextPointer_Snippets#_TextPointer_TextPointer2](~/samples/snippets/csharp/VS_Snippets_Wpf/TextPointer_Snippets/CSharp/Window1.xaml.cs#_textpointer_textpointer2)]
 [!code-vb[TextPointer_Snippets#_TextPointer_TextPointer2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextPointer_Snippets/visualbasic/window1.xaml.vb#_textpointer_textpointer2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Documents.TextRange" />
    <altmember cref="T:System.Windows.Documents.TextPointerContext" />
    <altmember cref="T:System.Windows.Documents.TextElement" />
  </Docs>
  <Members>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public int CompareTo (System.Windows.Documents.TextPointer position);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 CompareTo(class System.Windows.Documents.TextPointer position) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.TextPointer.CompareTo(System.Windows.Documents.TextPointer)" />
      <MemberSignature Language="VB.NET" Value="Public Function CompareTo (position As TextPointer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int CompareTo(System::Windows::Documents::TextPointer ^ position);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="position" Type="System.Windows.Documents.TextPointer" />
      </Parameters>
      <Docs>
        <param name="position">
          <span data-ttu-id="59528-153">Ein <see cref="T:System.Windows.Documents.TextPointer" />, der eine Position angibt, die mit der aktuellen Position verglichen werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59528-153">A <see cref="T:System.Windows.Documents.TextPointer" /> that specifies a position to compare to the current position.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="59528-154">Führt einen Ordinalvergleich der angegebenen Positionen des aktuellen <see cref="T:System.Windows.Documents.TextPointer" /> und eines anderen <see cref="T:System.Windows.Documents.TextPointer" /> aus.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59528-154">Performs an ordinal comparison between the positions specified by the current <see cref="T:System.Windows.Documents.TextPointer" /> and a second specified <see cref="T:System.Windows.Documents.TextPointer" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="59528-155">–1, wenn der aktuelle <see cref="T:System.Windows.Documents.TextPointer" /> vor der <paramref name="position" /> liegt; 0, wenn die Positionen identisch sind; +1, wenn der aktuelle <see cref="T:System.Windows.Documents.TextPointer" /> nach der <paramref name="position" /> liegt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59528-155">–1 if the current <see cref="T:System.Windows.Documents.TextPointer" /> precedes <paramref name="position" />; 0 if the locations are the same; +1 if the current <see cref="T:System.Windows.Documents.TextPointer" /> follows <paramref name="position" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="59528-156">Der Wert-1 gibt an, dass die Position von der aktuellen angegeben <xref:System.Windows.Documents.TextPointer> steht vor der angegebenen Position `position`.</span><span class="sxs-lookup"><span data-stu-id="59528-156">A value of –1 indicates that the position specified by the current <xref:System.Windows.Documents.TextPointer> precedes the position specified by `position`.</span></span>  <span data-ttu-id="59528-157">Der Wert 0 gibt an, dass die angegebenen Positionen gleich sind.</span><span class="sxs-lookup"><span data-stu-id="59528-157">A value of 0 indicates that the indicated positions are equal.</span></span>  <span data-ttu-id="59528-158">Ein Wert von + 1 gibt an, dass die Position von der aktuellen angegeben <xref:System.Windows.Documents.TextPointer> resultiert aus der angegebenen Position `position`.</span><span class="sxs-lookup"><span data-stu-id="59528-158">A value of positive +1 indicates that the position specified by the current <xref:System.Windows.Documents.TextPointer> follows the position specified by `position`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="59528-159">Im folgende Beispiel wird eine Verwendung für diese Methode veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="59528-159">The following example demonstrates a use for this method.</span></span>  <span data-ttu-id="59528-160">Im Beispiel die <xref:System.Windows.Documents.TextPointer.CompareTo%2A> Methode dient in Verbindung mit der <xref:System.Windows.Documents.TextPointer.GetInsertionPosition%2A> Methode zu testen, ob ein angegebenes <xref:System.Windows.Documents.TextElement> ist leer.</span><span class="sxs-lookup"><span data-stu-id="59528-160">In the example, the <xref:System.Windows.Documents.TextPointer.CompareTo%2A> method is used in conjunction with the <xref:System.Windows.Documents.TextPointer.GetInsertionPosition%2A> method to test whether a specified <xref:System.Windows.Documents.TextElement> is empty.</span></span>  
  
 [!code-csharp[TextPointer_Snippets#_TextPointer_GetInsertionPosition](~/samples/snippets/csharp/VS_Snippets_Wpf/TextPointer_Snippets/CSharp/Window1.xaml.cs#_textpointer_getinsertionposition)]
 [!code-vb[TextPointer_Snippets#_TextPointer_GetInsertionPosition](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextPointer_Snippets/visualbasic/window1.xaml.vb#_textpointer_getinsertionposition)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="59528-161">
            <paramref name="position" /> gibt eine Position an, die außerhalb des der aktuellen Position zugeordneten Textcontainers liegt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59528-161">
              <paramref name="position" /> specifies a position outside of the text container associated with the current position.</span>
          </span>
        </exception>
        <altmember cref="M:System.Windows.Documents.TextPointer.IsInSameDocument(System.Windows.Documents.TextPointer)" />
      </Docs>
    </Member>
    <Member MemberName="DeleteTextInRun">
      <MemberSignature Language="C#" Value="public int DeleteTextInRun (int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 DeleteTextInRun(int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.TextPointer.DeleteTextInRun(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function DeleteTextInRun (count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int DeleteTextInRun(int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="count">
          <span data-ttu-id="59528-162">Die Anzahl der zu löschenden Zeichen ab der aktuellen Position.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59528-162">The number of characters to delete, starting at the current position.</span>
          </span>
          <span data-ttu-id="59528-163">Geben Sie einen positiven Wert an, um Zeichen nach der aktuellen Position zu löschen, bzw. einen negativen Wert, um Zeichen vor der aktuellen Position zu löschen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59528-163">Specify a positive value to delete characters that follow the current position; specify a negative value to delete characters that precede the current position.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="59528-164">Löscht die angegebene Anzahl von Zeichen ab der Position, die vom aktuellen <see cref="T:System.Windows.Documents.TextPointer" /> angegeben wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59528-164">Deletes the specified number of characters from the position indicated by the current <see cref="T:System.Windows.Documents.TextPointer" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="59528-165">Die Anzahl der tatsächlich gelöschten Zeichen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59528-165">The number of characters actually deleted.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="59528-166">Geben Sie einen positiven Wert ein, um Zeichen zu löschen, die vor der aktuellen Position (wie in <xref:System.Windows.Documents.LogicalDirection.Forward?displayProperty=nameWithType>); Geben Sie einen negativen Wert, um Zeichen zu löschen, die vor der aktuellen Position (wie in <xref:System.Windows.Documents.LogicalDirection.Backward?displayProperty=nameWithType>).</span><span class="sxs-lookup"><span data-stu-id="59528-166">Specify a positive value to delete characters that follow the current position (as in <xref:System.Windows.Documents.LogicalDirection.Forward?displayProperty=nameWithType>); specify a negative value to delete characters that precede the current position (as in <xref:System.Windows.Documents.LogicalDirection.Backward?displayProperty=nameWithType>).</span></span>  
  
 <span data-ttu-id="59528-167">Die Anzahl der Zeichen, die tatsächlich gelöscht, ist möglicherweise kleiner als die Anzahl von angegebenen `count`.</span><span class="sxs-lookup"><span data-stu-id="59528-167">The number of characters actually deleted may be less than the number specified by `count`.</span></span>  <span data-ttu-id="59528-168">Dies geschieht in Fällen, in denen `count` gibt mehr Zeichen als vorhanden sind, gelöscht werden sollen.</span><span class="sxs-lookup"><span data-stu-id="59528-168">This happens in cases where `count` specifies more characters than exist to be deleted.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="59528-169">Die Methode wurde an einer Position aufgerufen, an der Text nicht zulässig ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59528-169">The method is called at a position where text is not allowed.</span>
          </span>
        </exception>
        <altmember cref="Overload:System.Windows.Documents.TextPointer.GetTextInRun" />
        <altmember cref="M:System.Windows.Documents.TextPointer.InsertTextInRun(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="DocumentEnd">
      <MemberSignature Language="C#" Value="public System.Windows.Documents.TextPointer DocumentEnd { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Documents.TextPointer DocumentEnd" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.TextPointer.DocumentEnd" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DocumentEnd As TextPointer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Documents::TextPointer ^ DocumentEnd { System::Windows::Documents::TextPointer ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.TextPointer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="59528-170">Ruft im der aktuellen Position zugeordneten Textcontainer am Ende des Inhalts einen <see cref="T:System.Windows.Documents.TextPointer" /> ab.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59528-170">Gets a <see cref="T:System.Windows.Documents.TextPointer" /> at the end of content in the text container associated with the current position.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="59528-171">Ein <see cref="T:System.Windows.Documents.TextPointer" /> am Ende des Inhalts im der aktuellen Position zugeordneten Textcontainer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59528-171">A <see cref="T:System.Windows.Documents.TextPointer" /> at the end of content in the text container associated with the current position.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="59528-172">Die <xref:System.Windows.Documents.TextPointer.Parent%2A> für das zurückgegebene <xref:System.Windows.Documents.TextPointer> ist immer ein Textcontainer (<xref:System.Windows.Controls.TextBlock> oder <xref:System.Windows.Documents.FlowDocument>), anstelle eines <xref:System.Windows.Documents.TextElement>.</span><span class="sxs-lookup"><span data-stu-id="59528-172">The <xref:System.Windows.Documents.TextPointer.Parent%2A> for the returned <xref:System.Windows.Documents.TextPointer> is always a text container (<xref:System.Windows.Controls.TextBlock> or <xref:System.Windows.Documents.FlowDocument>), rather than a <xref:System.Windows.Documents.TextElement>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.TextPointer.DocumentStart" />
      </Docs>
    </Member>
    <Member MemberName="DocumentStart">
      <MemberSignature Language="C#" Value="public System.Windows.Documents.TextPointer DocumentStart { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Documents.TextPointer DocumentStart" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.TextPointer.DocumentStart" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DocumentStart As TextPointer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Documents::TextPointer ^ DocumentStart { System::Windows::Documents::TextPointer ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.TextPointer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="59528-173">Ruft im der aktuellen Position zugeordneten Textcontainer am Anfang des Inhalts einen <see cref="T:System.Windows.Documents.TextPointer" /> ab.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59528-173">Gets a <see cref="T:System.Windows.Documents.TextPointer" /> at the beginning of content in the text container associated with the current position.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="59528-174">Ein <see cref="T:System.Windows.Documents.TextPointer" /> am Anfang des Inhalts im der aktuellen Position zugeordneten Textcontainer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59528-174">A <see cref="T:System.Windows.Documents.TextPointer" /> at the beginning of content in the text container associated with the current position.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="59528-175">Verwenden Sie die Position, die von dieser Eigenschaft zurückgegeben wird, als eine Baselineposition aus dem Arbeiten mit relativen Versatz an andere Positionen an.</span><span class="sxs-lookup"><span data-stu-id="59528-175">Use the position returned by this property as a baseline position from which to work with relative offsets to other positions.</span></span>  <span data-ttu-id="59528-176">Die <xref:System.Windows.Documents.TextPointer.GetOffsetToPosition%2A> und <xref:System.Windows.Documents.TextPointer.GetPositionAtOffset%2A> Methoden bieten eine Möglichkeit zum Konvertieren zwischen Positionen und offsets.</span><span class="sxs-lookup"><span data-stu-id="59528-176">The <xref:System.Windows.Documents.TextPointer.GetOffsetToPosition%2A> and <xref:System.Windows.Documents.TextPointer.GetPositionAtOffset%2A> methods provide a way to translate between positions and position offsets.</span></span>  
  
 <span data-ttu-id="59528-177">Die <xref:System.Windows.Documents.TextPointer.Parent%2A> für das zurückgegebene <xref:System.Windows.Documents.TextPointer> ist immer ein Textcontainer (<xref:System.Windows.Controls.TextBlock> oder <xref:System.Windows.Documents.FlowDocument>), anstelle eines <xref:System.Windows.Documents.TextElement>.</span><span class="sxs-lookup"><span data-stu-id="59528-177">The <xref:System.Windows.Documents.TextPointer.Parent%2A> for the returned <xref:System.Windows.Documents.TextPointer> is always a text container (<xref:System.Windows.Controls.TextBlock> or <xref:System.Windows.Documents.FlowDocument>), rather than a <xref:System.Windows.Documents.TextElement>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.TextPointer.DocumentEnd" />
      </Docs>
    </Member>
    <Member MemberName="GetAdjacentElement">
      <MemberSignature Language="C#" Value="public System.Windows.DependencyObject GetAdjacentElement (System.Windows.Documents.LogicalDirection direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.DependencyObject GetAdjacentElement(valuetype System.Windows.Documents.LogicalDirection direction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.TextPointer.GetAdjacentElement(System.Windows.Documents.LogicalDirection)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAdjacentElement (direction As LogicalDirection) As DependencyObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::DependencyObject ^ GetAdjacentElement(System::Windows::Documents::LogicalDirection direction);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="direction" Type="System.Windows.Documents.LogicalDirection" />
      </Parameters>
      <Docs>
        <param name="direction">
          <span data-ttu-id="59528-178">Einer der <see cref="T:System.Windows.Documents.LogicalDirection" />-Werte, mit denen die logische Richtung angegeben wird, in der die Suche nach einem benachbarten Element erfolgen soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59528-178">One of the <see cref="T:System.Windows.Documents.LogicalDirection" /> values that specifies the logical direction in which to search for an adjacent element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="59528-179">Gibt ggf. das Element zurück, das in der angegebenen logischen Richtung an den aktuellen <see cref="T:System.Windows.Documents.TextPointer" /> grenzt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59528-179">Returns the element, if any, that borders the current <see cref="T:System.Windows.Documents.TextPointer" /> in the specified logical direction.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="59528-180">Das benachbarte Element in der angegebenen <paramref name="direction" /> oder <see langword="null" />, wenn kein benachbartes Element vorhanden ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59528-180">The adjacent element in the specified <paramref name="direction" />, or <see langword="null" /> if no adjacent element exists.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="59528-181">Das zurückgegebene Element ist in der Regel eine <xref:System.Windows.Documents.TextElement>.</span><span class="sxs-lookup"><span data-stu-id="59528-181">The returned element is typically a <xref:System.Windows.Documents.TextElement>.</span></span>  <span data-ttu-id="59528-182">Ein <xref:System.Windows.UIElement> können zurückgegeben werden, wenn die <xref:System.Windows.Documents.TextPointer> gibt eine Position innerhalb einer <xref:System.Windows.Documents.BlockUIContainer> Element oder ein <xref:System.Windows.Documents.InlineUIContainer> Element.</span><span class="sxs-lookup"><span data-stu-id="59528-182">A <xref:System.Windows.UIElement> can be returned when the <xref:System.Windows.Documents.TextPointer> indicates a position inside a <xref:System.Windows.Documents.BlockUIContainer> element or an <xref:System.Windows.Documents.InlineUIContainer> element.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.TextPointer.Parent" />
      </Docs>
    </Member>
    <Member MemberName="GetCharacterRect">
      <MemberSignature Language="C#" Value="public System.Windows.Rect GetCharacterRect (System.Windows.Documents.LogicalDirection direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Windows.Rect GetCharacterRect(valuetype System.Windows.Documents.LogicalDirection direction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.TextPointer.GetCharacterRect(System.Windows.Documents.LogicalDirection)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCharacterRect (direction As LogicalDirection) As Rect" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Rect GetCharacterRect(System::Windows::Documents::LogicalDirection direction);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Documents.ITextPointer.GetCharacterRect(System.Windows.Documents.LogicalDirection)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Rect</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="direction" Type="System.Windows.Documents.LogicalDirection" />
      </Parameters>
      <Docs>
        <param name="direction">
          <span data-ttu-id="59528-183">Einer der <see cref="T:System.Windows.Documents.LogicalDirection" />-Werte, mit denen die logische Richtung angegeben wird, in der die Suche nach einem umgebenden Feld für Inhalt erfolgen soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59528-183">One of the <see cref="T:System.Windows.Documents.LogicalDirection" /> values that specifies the logical direction in which to find a content bounding box.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="59528-184">Gibt ein umgebendes Feld (<see cref="T:System.Windows.Rect" />) für Inhalt zurück, der in der angegebenen logischen Richtung an den aktuellen <see cref="T:System.Windows.Documents.TextPointer" /> grenzt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59528-184">Returns a bounding box (<see cref="T:System.Windows.Rect" />) for content that borders the current <see cref="T:System.Windows.Documents.TextPointer" /> in the specified logical direction.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="59528-185">Ein umgebendes Feld für Inhalt, der in der angegebenen Richtung an den aktuellen <see cref="T:System.Windows.Documents.TextPointer" /> grenzt, oder <see cref="P:System.Windows.Rect.Empty" />, wenn keine aktuellen und gültigen Layoutinformationen verfügbar sind.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59528-185">A bounding box for content that borders the current <see cref="T:System.Windows.Documents.TextPointer" /> in the specified direction, or <see cref="P:System.Windows.Rect.Empty" /> if current, valid layout information is unavailable.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="59528-186"><xref:System.Windows.Documents.TextElement> Ränder werden Inhalt im Rahmen dieser Methode nicht berücksichtigt werden.</span><span class="sxs-lookup"><span data-stu-id="59528-186"><xref:System.Windows.Documents.TextElement> edges are not considered content for the purposes of this method.</span></span>  <span data-ttu-id="59528-187">Wenn die <xref:System.Windows.Documents.TextPointer> positioniert ist, bevor Sie eine <xref:System.Windows.Documents.TextElement> Edge, der Rückgabewert wird ein Begrenzungsrahmen für den nächsten nicht-<xref:System.Windows.Documents.TextElement> Inhalte in der angegebenen Richtung.</span><span class="sxs-lookup"><span data-stu-id="59528-187">If the <xref:System.Windows.Documents.TextPointer> is positioned before a <xref:System.Windows.Documents.TextElement> edge, the return value is a bounding box for the next non-<xref:System.Windows.Documents.TextElement> content in the specified direction.</span></span>  <span data-ttu-id="59528-188">Wenn kein Inhalt vorhanden, in der angegebenen Richtung, eine Breite von NULL ist <xref:System.Windows.Rect> wird mit einer Höhe entsprechen die Höhe des vorhergehenden Inhalt zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="59528-188">If there is no content in the specified direction, a zero-width <xref:System.Windows.Rect> is returned with a height matching the height of any preceding content.</span></span>  
  
 <span data-ttu-id="59528-189">Eine gültige Layout abhängt, Vorgang, der von dieser Methode ausgeführt.</span><span class="sxs-lookup"><span data-stu-id="59528-189">The operation performed by this method depends on a valid layout.</span></span>  <span data-ttu-id="59528-190">Diese Methode versucht bei Bedarf automatisch ein gültiges Layout vor dem Fortsetzen des Vorgangs neu generieren.</span><span class="sxs-lookup"><span data-stu-id="59528-190">When necessary, this method attempts to automatically regenerate a valid layout before proceeding with the operation.</span></span>  <span data-ttu-id="59528-191">Erneutes Generieren eines Layouts kann eine relativ aufwändige Operation.</span><span class="sxs-lookup"><span data-stu-id="59528-191">Regenerating a layout can be a relatively expensive operation.</span></span>  <span data-ttu-id="59528-192">Verwenden der <xref:System.Windows.Documents.TextPointer.HasValidLayout%2A> Eigenschaft, um ein gültiges Layout überprüfen Sie vor dem Ausführen von Vorgängen, die das Layout erneut generiert werden können.</span><span class="sxs-lookup"><span data-stu-id="59528-192">Use the <xref:System.Windows.Documents.TextPointer.HasValidLayout%2A> property to check for a valid layout before performing operations that may regenerate the layout.</span></span>  <span data-ttu-id="59528-193">Weitere Informationen finden Sie unter [Layout](~/docs/framework/wpf/advanced/layout.md).</span><span class="sxs-lookup"><span data-stu-id="59528-193">For more information, see [Layout](~/docs/framework/wpf/advanced/layout.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.TextPointer.HasValidLayout" />
      </Docs>
    </Member>
    <Member MemberName="GetInsertionPosition">
      <MemberSignature Language="C#" Value="public System.Windows.Documents.TextPointer GetInsertionPosition (System.Windows.Documents.LogicalDirection direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Documents.TextPointer GetInsertionPosition(valuetype System.Windows.Documents.LogicalDirection direction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.TextPointer.GetInsertionPosition(System.Windows.Documents.LogicalDirection)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetInsertionPosition (direction As LogicalDirection) As TextPointer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Documents::TextPointer ^ GetInsertionPosition(System::Windows::Documents::LogicalDirection direction);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.TextPointer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="direction" Type="System.Windows.Documents.LogicalDirection" />
      </Parameters>
      <Docs>
        <param name="direction">
          <span data-ttu-id="59528-194">Einer der <see cref="T:System.Windows.Documents.LogicalDirection" />-Werte, mit denen die logische Richtung angegeben wird, in der die Suche nach der nächsten Einfügeposition erfolgen soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59528-194">One of the <see cref="T:System.Windows.Documents.LogicalDirection" /> values that specifies the logical direction in which to search for the closest insertion position.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="59528-195">Gibt in der angegebenen logischen Richtung an der nächsten Einfügeposition einen <see cref="T:System.Windows.Documents.TextPointer" /> zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59528-195">Returns a <see cref="T:System.Windows.Documents.TextPointer" /> to the closest insertion position in the specified logical direction.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="59528-196">Ein <see cref="T:System.Windows.Documents.TextPointer" /> an der nächsten Einfügeposition in der angegebenen Richtung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59528-196">A <see cref="T:System.Windows.Documents.TextPointer" /> to the closest insertion position in the specified direction.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="59528-197">Eine Einfügeposition handelt es sich um eine Position, wo neuer Inhalte hinzugefügt werden kann, ohne Unterbrechung semantischen Regeln für den zugehörigen Inhalt.</span><span class="sxs-lookup"><span data-stu-id="59528-197">An insertion position is a position where new content may be added without breaking any semantic rules for the associated content.</span></span>  <span data-ttu-id="59528-198">In der Praxis ist eine Einfügeposition an einer beliebigen Stelle im Inhalt, in denen eine Einfügemarke positioniert werden kann.</span><span class="sxs-lookup"><span data-stu-id="59528-198">In practice, an insertion position is anywhere in content where a caret may be positioned.</span></span>  <span data-ttu-id="59528-199">Ein Beispiel einer gültigen <xref:System.Windows.Documents.TextPointer> Position an, die sich nicht um eine Einfügeposition ist, ist die Position zwischen zwei angrenzende <xref:System.Windows.Documents.Paragraph> Tags (d. h. zwischen dem Endtag aus dem vorherigen Absatz und das öffnende Tag eines nächsten Absatz).</span><span class="sxs-lookup"><span data-stu-id="59528-199">An example of a valid <xref:System.Windows.Documents.TextPointer> position that is not an insertion position is the position between two adjacent <xref:System.Windows.Documents.Paragraph> tags (that is, between the closing tag of the preceding paragraph and the opening tag of the next paragraph).</span></span>  
  
 <span data-ttu-id="59528-200">Wenn die <xref:System.Windows.Documents.TextPointer> bereits verweist auf eine gültige Einfügeposition, aber das Endtag für eine Formatierung nicht leere Sequenz direkt auf diese Position in der angegebenen Richtung folgt die <xref:System.Windows.Documents.TextPointer> zurückgegeben, die von dieser Methode so angepasst wird, zeigen Sie auf das Einfügen Positionieren Sie einfach nach dem Schließen der Formatierung Sequenz.</span><span class="sxs-lookup"><span data-stu-id="59528-200">If the <xref:System.Windows.Documents.TextPointer> already points to a valid insertion position, but the closing tag for a non-empty formatting sequence directly follows that position in the given direction, then the <xref:System.Windows.Documents.TextPointer> returned by this method is adjusted to point to the insertion position just after the close of the formatting sequence.</span></span> <span data-ttu-id="59528-201">Betrachten Sie beispielsweise die Markupsequenz `<Bold>a</Bold>b`.</span><span class="sxs-lookup"><span data-stu-id="59528-201">For example, consider the markup sequence `<Bold>a</Bold>b`.</span></span> <span data-ttu-id="59528-202">Beachten Sie, dass es zwei Einfügepositionen zwischen den Buchstaben gibt `a` und `b` – vor der öffnenden `Bold` -Tag und direkt nach dem schließenden `Bold` Tag.</span><span class="sxs-lookup"><span data-stu-id="59528-202">Note that there are two insertion positions between the letters `a` and `b` — one that precedes the closing `Bold` tag, and one directly following the closing `Bold` tag.</span></span> <span data-ttu-id="59528-203">Wenn <xref:System.Windows.Documents.TextPointer.GetInsertionPosition%2A> für aufgerufen wird eine <xref:System.Windows.Documents.TextPointer> auf die Position direkt hinter dem Buchstaben `a` und vor des Abschlusses `Bold` Tag, und mit einer `direction` von <xref:System.Windows.Documents.LogicalDirection.Forward>, zurückgegebenen <xref:System.Windows.Documents.TextPointer> wird angepasst, um zu zeigen die die Position unmittelbar vor dem Buchstaben `b`, nach dem schließenden `Bold` Tag.</span><span class="sxs-lookup"><span data-stu-id="59528-203">If <xref:System.Windows.Documents.TextPointer.GetInsertionPosition%2A> is called on a <xref:System.Windows.Documents.TextPointer> to the position directly after the letter `a` and before of the closing `Bold` tag, and with a `direction` of <xref:System.Windows.Documents.LogicalDirection.Forward>, the returned <xref:System.Windows.Documents.TextPointer> is adjusted to point to the position just before the letter `b`, after the closing `Bold` tag.</span></span> <span data-ttu-id="59528-204">Zum Öffnen von Formatierungstags bei der Arbeit in die Gegenrichtung logischen wird eine ähnliche Anpassung vorgenommen.</span><span class="sxs-lookup"><span data-stu-id="59528-204">A similar adjustment is made for opening formatting tags when working in the opposite logical direction.</span></span> <span data-ttu-id="59528-205">Diese Methode soll systemverarbeitungsaufwand Mehrdeutigkeit zwischen Positionen der Einfügemarke in ähnlichen Fällen.</span><span class="sxs-lookup"><span data-stu-id="59528-205">This method is intended to provide a means of disambiguation between insertion positions in similar cases.</span></span>  
  
 <span data-ttu-id="59528-206">Diese Methode kann auch verwendet werden, selektive Einfügemarken sein, wenn eine Sequenz von Strukturtags beteiligt ist.</span><span class="sxs-lookup"><span data-stu-id="59528-206">This method can also be used to be selective about insertion points when a sequence of structural tags is involved.</span></span> <span data-ttu-id="59528-207">Z. B. an der Position zwischen schließen und Öffnen von Absatztags, die Richtung-Parameter kann verwendet werden, wählen Sie die nächste Einfügemarke am Anfang des folgenden Absatzes (durch Angabe <xref:System.Windows.Documents.LogicalDirection.Forward?displayProperty=nameWithType>) oder am Ende der vorherigen Absatz ( durch Angabe <xref:System.Windows.Documents.LogicalDirection.Backward?displayProperty=nameWithType>).</span><span class="sxs-lookup"><span data-stu-id="59528-207">For example, when at a position between closing and opening paragraph tags, the direction parameter can be used to select the closest insertion point at the beginning of the following paragraph (by specifying <xref:System.Windows.Documents.LogicalDirection.Forward?displayProperty=nameWithType>) or at the end of the preceding paragraph (by specifying <xref:System.Windows.Documents.LogicalDirection.Backward?displayProperty=nameWithType>).</span></span>  
  
 <span data-ttu-id="59528-208">Wenn der Mauszeiger befindet sich bereits an der Position der Einfügemarke, und es keine benachbarten Formatierungstags in der angegebenen gibt `direction`, das zurückgegebene <xref:System.Windows.Documents.TextPointer> verweist auf derselben Position wie die aufrufende <xref:System.Windows.Documents.TextPointer>.</span><span class="sxs-lookup"><span data-stu-id="59528-208">If the pointer is already at insertion position, and there are no adjacent formatting tags in the specified `direction`, the returned <xref:System.Windows.Documents.TextPointer> points to the same position as the calling <xref:System.Windows.Documents.TextPointer>.</span></span>  
  
 <span data-ttu-id="59528-209">Es ist möglich, dass keine gültige Einfügeposition relativ zur Position verweist vorhanden ist eine <xref:System.Windows.Documents.TextPointer>.</span><span class="sxs-lookup"><span data-stu-id="59528-209">It is possible that no valid insertion position exists relative to the position pointed to by a <xref:System.Windows.Documents.TextPointer>.</span></span>  <span data-ttu-id="59528-210">Dies kann geschehen, wenn der referenzierte Inhalt strukturell unvollständig sind, wie eine leere Tabelle oder Liste.</span><span class="sxs-lookup"><span data-stu-id="59528-210">This can happen if the referenced content is structurally incomplete, as in an empty table or list.</span></span>  <span data-ttu-id="59528-211">In solchen Fällen gibt diese Methode einfach eine <xref:System.Windows.Documents.TextPointer> an derselben Position wie das <xref:System.Windows.Documents.TextPointer> aus dem diese Methode aufgerufen wurde.</span><span class="sxs-lookup"><span data-stu-id="59528-211">In such cases, this method simply returns a <xref:System.Windows.Documents.TextPointer> to the same position as the <xref:System.Windows.Documents.TextPointer> from which this method was called.</span></span>  <span data-ttu-id="59528-212">Diese Methode gibt immer einen gültigen <xref:System.Windows.Documents.TextPointer>.</span><span class="sxs-lookup"><span data-stu-id="59528-212">This method always returns a valid <xref:System.Windows.Documents.TextPointer>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="59528-213">Dieses Beispiel zeigt, wie die <xref:System.Windows.Documents.TextPointer.GetInsertionPosition%2A> -Methode überprüft, ob ein angegebener <xref:System.Windows.Documents.TextElement> druckbaren Inhalt leer ist.</span><span class="sxs-lookup"><span data-stu-id="59528-213">This example shows how to use the <xref:System.Windows.Documents.TextPointer.GetInsertionPosition%2A> method to check whether a specified <xref:System.Windows.Documents.TextElement> is empty of printable content.</span></span>  
  
 [!code-csharp[TextPointer_Snippets#_TextPointer_GetInsertionPosition](~/samples/snippets/csharp/VS_Snippets_Wpf/TextPointer_Snippets/CSharp/Window1.xaml.cs#_textpointer_getinsertionposition)]
 [!code-vb[TextPointer_Snippets#_TextPointer_GetInsertionPosition](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextPointer_Snippets/visualbasic/window1.xaml.vb#_textpointer_getinsertionposition)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Documents.TextPointer.GetNextInsertionPosition(System.Windows.Documents.LogicalDirection)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetLineStartPosition">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="59528-214">Gibt einen <see cref="T:System.Windows.Documents.TextPointer" /> auf den Anfang einer Zeile zurück, die relativ zum aktuellen <see cref="T:System.Windows.Documents.TextPointer" /> angegeben wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59528-214">Returns a <see cref="T:System.Windows.Documents.TextPointer" /> to the beginning of a line that is specified relative to the current <see cref="T:System.Windows.Documents.TextPointer" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetLineStartPosition">
      <MemberSignature Language="C#" Value="public System.Windows.Documents.TextPointer GetLineStartPosition (int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Documents.TextPointer GetLineStartPosition(int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.TextPointer.GetLineStartPosition(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetLineStartPosition (count As Integer) As TextPointer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Documents::TextPointer ^ GetLineStartPosition(int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.TextPointer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="count">
          <span data-ttu-id="59528-215">Die Anzahl der zu überspringenden Zeilenanfangsmarker beim Festlegen der Zeile, deren Anfangsposition zurückgegeben werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59528-215">The number of start-of-line markers to skip when determining the line for which to return the starting position.</span>
          </span>
          <span data-ttu-id="59528-216">Mit negativen Werten werden vorangehende Zeilen angegeben, mit 0 die aktuelle Zeile, mit positiven Werten Folgezeilen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59528-216">Negative values specify preceding lines, 0 specifies the current line, and positive values specify following lines.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="59528-217">Gibt einen <see cref="T:System.Windows.Documents.TextPointer" /> auf den Anfang einer Zeile zurück, die relativ zum aktuellen <see cref="T:System.Windows.Documents.TextPointer" /> angegeben wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59528-217">Returns a <see cref="T:System.Windows.Documents.TextPointer" /> to the beginning of a line that is specified relative to the current <see cref="T:System.Windows.Documents.TextPointer" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="59528-218">Ein <see cref="T:System.Windows.Documents.TextPointer" />, der auf den Anfang der angegebenen Zeile zeigt (wobei die <see cref="P:System.Windows.Documents.TextPointer.LogicalDirection" /> auf <see cref="F:System.Windows.Documents.LogicalDirection.Forward" /> festgelegt ist); bzw. <see langword="null" />, wenn die angegebene Zeile außerhalb des Bereichs liegt oder anderweitig nicht gefunden werden kann.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59528-218">A <see cref="T:System.Windows.Documents.TextPointer" /> pointing to the beginning of the specified line (with the <see cref="P:System.Windows.Documents.TextPointer.LogicalDirection" /> set to <see cref="F:System.Windows.Documents.LogicalDirection.Forward" />), or <see langword="null" /> if the specified line is out of range or otherwise cannot be located.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="59528-219">Wenn die <xref:System.Windows.Documents.TextPointer> verweist auf eine mehrdeutige Position, z. B. zwischen zwei Zeilen, die Zeile in der vom angegebenen Richtung <xref:System.Windows.Documents.TextPointer.LogicalDirection%2A> als relative Anfangszeile ausgewählt ist.</span><span class="sxs-lookup"><span data-stu-id="59528-219">If the <xref:System.Windows.Documents.TextPointer> points to an ambiguous position, for example, between two lines, the line in the direction specified by <xref:System.Windows.Documents.TextPointer.LogicalDirection%2A> is selected as the relative starting line.</span></span>  
  
 <span data-ttu-id="59528-220">Eine gültige Layout abhängt, Vorgang, der von dieser Methode ausgeführt.</span><span class="sxs-lookup"><span data-stu-id="59528-220">The operation performed by this method depends on a valid layout.</span></span>  <span data-ttu-id="59528-221">Diese Methode versucht bei Bedarf automatisch ein gültiges Layout vor dem Fortsetzen des Vorgangs neu generieren.</span><span class="sxs-lookup"><span data-stu-id="59528-221">When necessary, this method attempts to automatically regenerate a valid layout before proceeding with the operation.</span></span>  <span data-ttu-id="59528-222">Erneutes Generieren eines Layouts kann eine relativ aufwändige Operation.</span><span class="sxs-lookup"><span data-stu-id="59528-222">Regenerating a layout can be a relatively expensive operation.</span></span>  <span data-ttu-id="59528-223">Verwendung <xref:System.Windows.Documents.TextPointer.HasValidLayout%2A> zu prüfen, ob ein gültiges Layout vor dem Ausführen von Vorgängen, die das Layout erneut generiert werden können.</span><span class="sxs-lookup"><span data-stu-id="59528-223">Use <xref:System.Windows.Documents.TextPointer.HasValidLayout%2A> to check for a valid layout before performing operations that may regenerate the layout.</span></span>  <span data-ttu-id="59528-224">Weitere Informationen finden Sie unter [Layout](~/docs/framework/wpf/advanced/layout.md).</span><span class="sxs-lookup"><span data-stu-id="59528-224">For more information, see [Layout](~/docs/framework/wpf/advanced/layout.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetLineStartPosition">
      <MemberSignature Language="C#" Value="public System.Windows.Documents.TextPointer GetLineStartPosition (int count, out int actualCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Documents.TextPointer GetLineStartPosition(int32 count, [out] int32&amp; actualCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.TextPointer.GetLineStartPosition(System.Int32,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetLineStartPosition (count As Integer, ByRef actualCount As Integer) As TextPointer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Documents::TextPointer ^ GetLineStartPosition(int count, [Runtime::InteropServices::Out] int % actualCount);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.TextPointer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="actualCount" Type="System.Int32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="count">
          <span data-ttu-id="59528-225">Die Anzahl der zu überspringenden Zeilenanfangsmarker beim Festlegen der Zeile, deren Anfangsposition zurückgegeben werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59528-225">The number of start-of-line markers to skip when determining the line for which to return the starting position.</span>
          </span>
          <span data-ttu-id="59528-226">Mit negativen Werten werden vorangehende Zeilen angegeben, mit 0 die aktuelle Zeile, mit positiven Werten Folgezeilen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59528-226">Negative values specify preceding lines, 0 specifies the current line, and positive values specify following lines.</span>
          </span>
        </param>
        <param name="actualCount">
          <span data-ttu-id="59528-227">Wenn diese Methode einen Rückgabewert erstellt, enthält dieser die tatsächliche Anzahl der Zeilenanfangsmarker, die beim Festlegen der Zeile übersprungen wurden, deren Anfangsposition zurückgegeben werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59528-227">When this method returns, contains the actual number of start-of-line markers that were skipped when determining the line for which to return the starting position.</span>
          </span>
          <span data-ttu-id="59528-228">Dieser Wert kann kleiner als <c>count</c> sein, wenn der Anfang oder das Ende des Inhalts erreicht ist, bevor die angegebene Anzahl von Zeilen übersprungen wurde.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59528-228">This value may be less than <c>count</c> if the beginning or end of content is encountered before the specified number of lines are skipped.</span>
          </span>
          <span data-ttu-id="59528-229">Dieser Parameter wird nicht initialisiert übergeben.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59528-229">This parameter is passed uninitialized.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="59528-230">Gibt einen <see cref="T:System.Windows.Documents.TextPointer" /> auf den Anfang einer Zeile zurück, die relativ zum aktuellen <see cref="T:System.Windows.Documents.TextPointer" /> angegeben wird, und gibt an, wie viele Zeilen übersprungen wurden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59528-230">Returns a <see cref="T:System.Windows.Documents.TextPointer" /> to the beginning of a line that is specified relative to the current <see cref="T:System.Windows.Documents.TextPointer" />, and reports how many lines were skipped.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="59528-231">Ein <see cref="T:System.Windows.Documents.TextPointer" />, der auf den Anfang der angegebenen Zeile (wobei die <see cref="P:System.Windows.Documents.TextPointer.LogicalDirection" /> auf <see cref="F:System.Windows.Documents.LogicalDirection.Forward" /> festgelegt ist) oder auf den Anfang der Zeile zeigt, die der angegebenen Zeile am nächsten ist, wenn die angegebene Zeile außerhalb des Bereichs liegt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59528-231">A <see cref="T:System.Windows.Documents.TextPointer" /> pointing to the beginning of the specified line (with the <see cref="P:System.Windows.Documents.TextPointer.LogicalDirection" /> set to <see cref="F:System.Windows.Documents.LogicalDirection.Forward" />), or to the beginning of the line closest to the specified line if the specified line is out of range.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="59528-232">Wenn die <xref:System.Windows.Documents.TextPointer> verweist auf eine mehrdeutige Position, z. B. zwischen zwei Zeilen, die Zeile in der vom angegebenen Richtung der <xref:System.Windows.Documents.TextPointer.LogicalDirection%2A> Eigenschaft als relative Anfangszeile ausgewählt ist.</span><span class="sxs-lookup"><span data-stu-id="59528-232">If the <xref:System.Windows.Documents.TextPointer> points to an ambiguous position, for example, between two lines, the line in the direction specified by the <xref:System.Windows.Documents.TextPointer.LogicalDirection%2A> property is selected as the relative starting line.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNextContextPosition">
      <MemberSignature Language="C#" Value="public System.Windows.Documents.TextPointer GetNextContextPosition (System.Windows.Documents.LogicalDirection direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Documents.TextPointer GetNextContextPosition(valuetype System.Windows.Documents.LogicalDirection direction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.TextPointer.GetNextContextPosition(System.Windows.Documents.LogicalDirection)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetNextContextPosition (direction As LogicalDirection) As TextPointer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Documents::TextPointer ^ GetNextContextPosition(System::Windows::Documents::LogicalDirection direction);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.TextPointer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="direction" Type="System.Windows.Documents.LogicalDirection" />
      </Parameters>
      <Docs>
        <param name="direction">
          <span data-ttu-id="59528-233">Einer der <see cref="T:System.Windows.Documents.LogicalDirection" />-Werte, mit denen die logische Richtung angegeben wird, in der die Suche nach dem nächsten Symbol erfolgen soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59528-233">One of the <see cref="T:System.Windows.Documents.LogicalDirection" /> values that specifies the logical direction in which to search for the next symbol.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="59528-234">Gibt einen Zeiger auf das nächste Symbol in der angegebenen logischen Richtung zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59528-234">Returns a pointer to the next symbol in the specified logical direction.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="59528-235">Ein <see cref="T:System.Windows.Documents.TextPointer" /> auf das nächste Symbol in der angeforderten Richtung oder <see langword="null" />, wenn der aktuelle <see cref="T:System.Windows.Documents.TextPointer" /> an den Anfang oder das Ende des Inhalts grenzt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59528-235">A <see cref="T:System.Windows.Documents.TextPointer" /> to the next symbol in the requested direction, or <see langword="null" /> if the current <see cref="T:System.Windows.Documents.TextPointer" /> borders the start or end of content.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="59528-236">Folgendes gilt ein Symbol sein:</span><span class="sxs-lookup"><span data-stu-id="59528-236">Any of the following is considered to be a symbol:</span></span>  
  
-   <span data-ttu-id="59528-237">Start- oder Endtag für ein <xref:System.Windows.Documents.TextElement> Element.</span><span class="sxs-lookup"><span data-stu-id="59528-237">An opening or closing tag for a <xref:System.Windows.Documents.TextElement> element.</span></span>  
  
-   <span data-ttu-id="59528-238">Ein <xref:System.Windows.UIElement> in enthaltenen Elementen ein <xref:System.Windows.Documents.InlineUIContainer> oder <xref:System.Windows.Documents.BlockUIContainer>.</span><span class="sxs-lookup"><span data-stu-id="59528-238">A <xref:System.Windows.UIElement> element contained in an <xref:System.Windows.Documents.InlineUIContainer> or <xref:System.Windows.Documents.BlockUIContainer>.</span></span>  <span data-ttu-id="59528-239">Beachten Sie, dass solche eine <xref:System.Windows.UIElement> wird immer als genau ein Symbol ist eine zusätzliche Inhalts- oder Elemente gezählt der <xref:System.Windows.UIElement> werden als Symbole nicht gezählt.</span><span class="sxs-lookup"><span data-stu-id="59528-239">Note that such a <xref:System.Windows.UIElement> is always counted as exactly one symbol; any additional content or elements contained by the <xref:System.Windows.UIElement> are not counted as symbols.</span></span>  
  
-   <span data-ttu-id="59528-240">Eine 16-Bit- [!INCLUDE[TLA#tla_unicode](~/includes/tlasharptla-unicode-md.md)] -Zeichen in einem <xref:System.Windows.Documents.Run> Element.</span><span class="sxs-lookup"><span data-stu-id="59528-240">A 16-bit [!INCLUDE[TLA#tla_unicode](~/includes/tlasharptla-unicode-md.md)] character inside of a text <xref:System.Windows.Documents.Run> element.</span></span>  
  
 <span data-ttu-id="59528-241">Wenn das nächste Symbol als kategorisiert wird <xref:System.Windows.Documents.TextPointerContext.EmbeddedElement>, <xref:System.Windows.Documents.TextPointerContext.ElementStart>, oder <xref:System.Windows.Documents.TextPointerContext.ElementEnd> (, das durch die <xref:System.Windows.Documents.TextPointer.GetPointerContext%2A> Methode), die <xref:System.Windows.Documents.TextPointer> zurückgegeben, die von dieser Methode ist genau ein Primärschlüsselsymbol erweiterten, von der aktuellen Position.</span><span class="sxs-lookup"><span data-stu-id="59528-241">If the next symbol is categorized as <xref:System.Windows.Documents.TextPointerContext.EmbeddedElement>, <xref:System.Windows.Documents.TextPointerContext.ElementStart>, or <xref:System.Windows.Documents.TextPointerContext.ElementEnd> (as identified by the <xref:System.Windows.Documents.TextPointer.GetPointerContext%2A> method), then the <xref:System.Windows.Documents.TextPointer> returned by this method is advanced by exactly one symbol from the current position.</span></span>  
  
 <span data-ttu-id="59528-242">Wenn das nächste Symbol als kategorisiert wird <xref:System.Windows.Documents.TextPointerContext.Text>, die <xref:System.Windows.Documents.TextPointer> zurückgegeben, die von dieser Methode wird hinter dem Text vorgerückt, auf das nächste-n Nichttext-Symbol (, also der nächsten position, an der <xref:System.Windows.Documents.TextPointerContext> ist nicht <xref:System.Windows.Documents.TextPointerContext.Text>).</span><span class="sxs-lookup"><span data-stu-id="59528-242">If the next symbol is categorized as <xref:System.Windows.Documents.TextPointerContext.Text>, then the <xref:System.Windows.Documents.TextPointer> returned by this method is advanced past the text to the next non-text symbol (that is, the next position where the <xref:System.Windows.Documents.TextPointerContext> is not <xref:System.Windows.Documents.TextPointerContext.Text>).</span></span>  <span data-ttu-id="59528-243">Die genaue Anzahl kann im Voraus berechnet werden, durch Aufrufen der <xref:System.Windows.Documents.TextPointer.GetTextRunLength%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="59528-243">The exact symbol count crossed can be calculated in advance by calling the <xref:System.Windows.Documents.TextPointer.GetTextRunLength%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="59528-244">Im folgende Beispiel wird eine Verwendung für diese Methode veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="59528-244">The following example demonstrates a use for this method.</span></span>  <span data-ttu-id="59528-245">Im Beispiel wird die <xref:System.Windows.Documents.TextPointer.GetNextContextPosition%2A> Methode in Verbindung mit der <xref:System.Windows.Documents.TextPointer.GetPointerContext%2A> Methode durchlaufen und extrahiert die Symbole in einem angegebenen <xref:System.Windows.Documents.TextElement>.</span><span class="sxs-lookup"><span data-stu-id="59528-245">The example uses the <xref:System.Windows.Documents.TextPointer.GetNextContextPosition%2A> method in conjunction with the <xref:System.Windows.Documents.TextPointer.GetPointerContext%2A> method to traverse and extract the symbols in a specified <xref:System.Windows.Documents.TextElement>.</span></span>  
  
 <span data-ttu-id="59528-246">Während das Beispiel kann, zum Extrahieren verwendet werden einer [!INCLUDE[TLA#tla_titlexaml](~/includes/tlasharptla-titlexaml-md.md)] Struktur für den Inhalt der einer angegebenen <xref:System.Windows.Documents.TextElement>, es dient nur zur Veranschaulichung und sollte nicht im Produktionscode verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="59528-246">While the example can be used to extract a [!INCLUDE[TLA#tla_titlexaml](~/includes/tlasharptla-titlexaml-md.md)] structure for the contents of a given <xref:System.Windows.Documents.TextElement>, it is intended for illustrative purposes only, and should not be used in production code.</span></span>  <span data-ttu-id="59528-247">Finden Sie unter der <xref:System.Xml> Namespace-URI für einen umfangreichen Satz von Typen, die zum Arbeiten mit und die XML-Verarbeitung entworfen wurden.</span><span class="sxs-lookup"><span data-stu-id="59528-247">See the <xref:System.Xml> namespace for a rich set of types designed for working with and processing XML.</span></span>  
  
 [!code-csharp[TextPointer_Snippets#_TextPointer_GetNextContextPosition](~/samples/snippets/csharp/VS_Snippets_Wpf/TextPointer_Snippets/CSharp/Window1.xaml.cs#_textpointer_getnextcontextposition)]
 [!code-vb[TextPointer_Snippets#_TextPointer_GetNextContextPosition](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextPointer_Snippets/visualbasic/window1.xaml.vb#_textpointer_getnextcontextposition)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNextInsertionPosition">
      <MemberSignature Language="C#" Value="public System.Windows.Documents.TextPointer GetNextInsertionPosition (System.Windows.Documents.LogicalDirection direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Documents.TextPointer GetNextInsertionPosition(valuetype System.Windows.Documents.LogicalDirection direction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.TextPointer.GetNextInsertionPosition(System.Windows.Documents.LogicalDirection)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetNextInsertionPosition (direction As LogicalDirection) As TextPointer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Documents::TextPointer ^ GetNextInsertionPosition(System::Windows::Documents::LogicalDirection direction);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.TextPointer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="direction" Type="System.Windows.Documents.LogicalDirection" />
      </Parameters>
      <Docs>
        <param name="direction">
          <span data-ttu-id="59528-248">Einer der <see cref="T:System.Windows.Documents.LogicalDirection" />-Werte, mit denen die logische Richtung angegeben wird, in der die Suche nach der nächsten Einfügeposition erfolgen soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59528-248">One of the <see cref="T:System.Windows.Documents.LogicalDirection" /> values that specifies the logical direction in which to search for the next insertion position.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="59528-249">Gibt in der angegebenen logischen Richtung an der nächsten Einfügeposition einen <see cref="T:System.Windows.Documents.TextPointer" /> zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59528-249">Returns a <see cref="T:System.Windows.Documents.TextPointer" /> to the next insertion position in the specified logical direction.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="59528-250">Ein <see cref="T:System.Windows.Documents.TextPointer" />, mit dem die nächste Einfügeposition in der angegebenen Richtung gekennzeichnet wird, oder <see langword="null" />, wenn keine nächste Einfügeposition gefunden werden kann.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59528-250">A <see cref="T:System.Windows.Documents.TextPointer" /> that identifies the next insertion position in the requested direction, or <see langword="null" /> if no next insertion position can be found.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="59528-251">Ein *Einfügeposition* ist eine Position, in neuer Inhalte ohne Unterbrechung semantischen Regeln für den zugehörigen Inhalt hinzugefügt werden kann.</span><span class="sxs-lookup"><span data-stu-id="59528-251">An *insertion position* is a position where new content may be added without breaking any semantic rules for the associated content.</span></span>  <span data-ttu-id="59528-252">In der Praxis ist eine Einfügeposition an einer beliebigen Stelle im Inhalt, in denen eine Einfügemarke positioniert werden kann.</span><span class="sxs-lookup"><span data-stu-id="59528-252">In practice, an insertion position is anywhere in content where a caret may be positioned.</span></span>  <span data-ttu-id="59528-253">Ein Beispiel einer gültigen <xref:System.Windows.Documents.TextPointer> Position an, die sich nicht um eine Einfügeposition ist, ist die Position zwischen zwei angrenzende <xref:System.Windows.Documents.Paragraph> Tags (d. h. zwischen dem Endtag aus dem vorherigen Absatz und das öffnende Tag eines nächsten Absatz).</span><span class="sxs-lookup"><span data-stu-id="59528-253">An example of a valid <xref:System.Windows.Documents.TextPointer> position that is not an insertion position is the position between two adjacent <xref:System.Windows.Documents.Paragraph> tags (that is, between the closing tag of the preceding paragraph and the opening tag of the next paragraph).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="59528-254">Im folgende Beispiel wird eine Verwendung für diese Methode veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="59528-254">The following example demonstrates a use for this method.</span></span> <span data-ttu-id="59528-255">Im Beispiel wird die <xref:System.Windows.Documents.TextPointer.GetNextInsertionPosition%2A> Methode Inhaltselement Grenzen durchlaufen, um die Anzahl der <xref:System.Windows.Documents.Paragraph> Elemente darstellen, zwischen zwei angegebenen <xref:System.Windows.Documents.TextPointer> Instanzen.</span><span class="sxs-lookup"><span data-stu-id="59528-255">The example uses the <xref:System.Windows.Documents.TextPointer.GetNextInsertionPosition%2A> method to traverse content element boundaries in order to count the number of <xref:System.Windows.Documents.Paragraph> elements present between two specified <xref:System.Windows.Documents.TextPointer> instances.</span></span>  
  
 [!code-csharp[TextPointer_Snippets#_TextPointer_GetNextInsertionPosition](~/samples/snippets/csharp/VS_Snippets_Wpf/TextPointer_Snippets/CSharp/Window1.xaml.cs#_textpointer_getnextinsertionposition)]
 [!code-vb[TextPointer_Snippets#_TextPointer_GetNextInsertionPosition](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextPointer_Snippets/visualbasic/window1.xaml.vb#_textpointer_getnextinsertionposition)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Documents.TextPointer.GetInsertionPosition(System.Windows.Documents.LogicalDirection)" />
      </Docs>
    </Member>
    <Member MemberName="GetOffsetToPosition">
      <MemberSignature Language="C#" Value="public int GetOffsetToPosition (System.Windows.Documents.TextPointer position);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetOffsetToPosition(class System.Windows.Documents.TextPointer position) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.TextPointer.GetOffsetToPosition(System.Windows.Documents.TextPointer)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetOffsetToPosition (position As TextPointer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetOffsetToPosition(System::Windows::Documents::TextPointer ^ position);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="position" Type="System.Windows.Documents.TextPointer" />
      </Parameters>
      <Docs>
        <param name="position">
          <span data-ttu-id="59528-256">Ein <see cref="T:System.Windows.Documents.TextPointer" />, mit dem eine Position angegeben wird, zu der die Entfernung (in Symbolen) bestimmt werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59528-256">A <see cref="T:System.Windows.Documents.TextPointer" /> that specifies a position to find the distance (in symbols) to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="59528-257">Gibt die Anzahl der Symbole zwischen dem aktuellen <see cref="T:System.Windows.Documents.TextPointer" /> und einem weiteren bestimmten <see cref="T:System.Windows.Documents.TextPointer" /> zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59528-257">Returns the count of symbols between the current <see cref="T:System.Windows.Documents.TextPointer" /> and a second specified <see cref="T:System.Windows.Documents.TextPointer" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="59528-258">Die relative Anzahl von Symbolen zwischen dem aktuellen <see cref="T:System.Windows.Documents.TextPointer" /> und der <paramref name="position" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59528-258">The relative number of symbols between the current <see cref="T:System.Windows.Documents.TextPointer" /> and <paramref name="position" />.</span>
          </span>
          <span data-ttu-id="59528-259">Mit einem negativen Wert wird angegeben, dass sich der aktuelle <see cref="T:System.Windows.Documents.TextPointer" /> hinter der durch <paramref name="position" /> angegebenen Position befindet; 0 gibt an, dass die Positionen identisch sind; und mit einem positiven Wert wird angegeben, dass sich der aktuelle <see cref="T:System.Windows.Documents.TextPointer" /> vor der durch <paramref name="position" /> angegebenen Position befindet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59528-259">A negative value indicates that the current <see cref="T:System.Windows.Documents.TextPointer" /> follows the position specified by <paramref name="position" />, 0 indicates that the positions are equal, and a positive value indicates that the current <see cref="T:System.Windows.Documents.TextPointer" /> precedes the position specified by <paramref name="position" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="59528-260">Folgendes gilt ein Symbol sein:</span><span class="sxs-lookup"><span data-stu-id="59528-260">Any of the following is considered to be a symbol:</span></span>  
  
-   <span data-ttu-id="59528-261">Start- oder Endtag für ein <xref:System.Windows.Documents.TextElement> Element.</span><span class="sxs-lookup"><span data-stu-id="59528-261">An opening or closing tag for a <xref:System.Windows.Documents.TextElement> element.</span></span>  
  
-   <span data-ttu-id="59528-262">Ein <xref:System.Windows.UIElement> in enthaltenen Elementen ein <xref:System.Windows.Documents.InlineUIContainer> oder <xref:System.Windows.Documents.BlockUIContainer>.</span><span class="sxs-lookup"><span data-stu-id="59528-262">A <xref:System.Windows.UIElement> element contained in an <xref:System.Windows.Documents.InlineUIContainer> or <xref:System.Windows.Documents.BlockUIContainer>.</span></span>  <span data-ttu-id="59528-263">Beachten Sie, dass solche eine <xref:System.Windows.UIElement> wird immer als genau ein Symbol ist eine zusätzliche Inhalts- oder Elemente gezählt der <xref:System.Windows.UIElement> werden als Symbole nicht gezählt.</span><span class="sxs-lookup"><span data-stu-id="59528-263">Note that such a <xref:System.Windows.UIElement> is always counted as exactly one symbol; any additional content or elements contained by the <xref:System.Windows.UIElement> are not counted as symbols.</span></span>  
  
-   <span data-ttu-id="59528-264">Eine 16-Bit- [!INCLUDE[TLA#tla_unicode](~/includes/tlasharptla-unicode-md.md)] -Zeichen in einem <xref:System.Windows.Documents.Run> Element.</span><span class="sxs-lookup"><span data-stu-id="59528-264">A 16-bit [!INCLUDE[TLA#tla_unicode](~/includes/tlasharptla-unicode-md.md)] character inside of a text <xref:System.Windows.Documents.Run> element.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="59528-265">Im folgende Beispiel wird eine Verwendung für diese Methode veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="59528-265">The following example demonstrates a use for this method.</span></span> <span data-ttu-id="59528-266">Im Beispiel wird die <xref:System.Windows.Documents.TextPointer.GetOffsetToPosition%2A> Methode, um die Offsets für zwei ermitteln <xref:System.Windows.Documents.TextPointer> Instanzen und verwendet dann diese Informationen speichern und Wiederherstellen der Auswahl in einem <xref:System.Windows.Controls.RichTextBox>.</span><span class="sxs-lookup"><span data-stu-id="59528-266">The example uses the <xref:System.Windows.Documents.TextPointer.GetOffsetToPosition%2A> method to find the offsets for two <xref:System.Windows.Documents.TextPointer> instances, and then uses this information to save and restore the selection in a <xref:System.Windows.Controls.RichTextBox>.</span></span>  <span data-ttu-id="59528-267">Das Beispiel setzt voraus, dass der Inhalt des der <xref:System.Windows.Controls.RichTextBox> zwischen einem speichern und eine Wiederherstellen der Auswahl nicht geändert wurden.</span><span class="sxs-lookup"><span data-stu-id="59528-267">The example assumes that the contents of the <xref:System.Windows.Controls.RichTextBox> have not changed between a selection save and a selection restore.</span></span>  
  
 [!code-csharp[TextPointer_Snippets#_TextPointer_GetOffsetToPosition](~/samples/snippets/csharp/VS_Snippets_Wpf/TextPointer_Snippets/CSharp/Window1.xaml.cs#_textpointer_getoffsettoposition)]
 [!code-vb[TextPointer_Snippets#_TextPointer_GetOffsetToPosition](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextPointer_Snippets/visualbasic/window1.xaml.vb#_textpointer_getoffsettoposition)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="59528-268">
            <paramref name="position" /> gibt eine Position an, die außerhalb des der aktuellen Position zugeordneten Textcontainers liegt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59528-268">
              <paramref name="position" /> specifies a position outside of the text container associated with the current position.</span>
          </span>
        </exception>
        <altmember cref="Overload:System.Windows.Documents.TextPointer.GetPositionAtOffset" />
        <altmember cref="M:System.Windows.Documents.TextPointer.IsInSameDocument(System.Windows.Documents.TextPointer)" />
      </Docs>
    </Member>
    <Member MemberName="GetPointerContext">
      <MemberSignature Language="C#" Value="public System.Windows.Documents.TextPointerContext GetPointerContext (System.Windows.Documents.LogicalDirection direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Windows.Documents.TextPointerContext GetPointerContext(valuetype System.Windows.Documents.LogicalDirection direction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.TextPointer.GetPointerContext(System.Windows.Documents.LogicalDirection)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPointerContext (direction As LogicalDirection) As TextPointerContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Documents::TextPointerContext GetPointerContext(System::Windows::Documents::LogicalDirection direction);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Documents.ITextPointer.GetPointerContext(System.Windows.Documents.LogicalDirection)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.TextPointerContext</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="direction" Type="System.Windows.Documents.LogicalDirection" />
      </Parameters>
      <Docs>
        <param name="direction">
          <span data-ttu-id="59528-269">Einer der <see cref="T:System.Windows.Documents.LogicalDirection" />-Werte, mit denen die logische Richtung angegeben wird, in der die Kategorie für den benachbarten Inhalt bestimmt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59528-269">One of the <see cref="T:System.Windows.Documents.LogicalDirection" /> values that specifies the logical direction in which to determine the category for adjacent content.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="59528-270">Gibt für den Inhalt neben dem aktuellen <see cref="T:System.Windows.Documents.TextPointer" /> in der angegebenen logischen Richtung einen Kategorieindikator zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59528-270">Returns a category indicator for the content adjacent to the current <see cref="T:System.Windows.Documents.TextPointer" /> in the specified logical direction.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="59528-271">Einer der <see cref="T:System.Windows.Documents.TextPointerContext" />-Werte, mit denen die Kategorie für benachbarten Inhalt in der angegebenen logischen Richtung angegeben wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59528-271">One of the <see cref="T:System.Windows.Documents.TextPointerContext" /> values that indicates the category for adjacent content in the specified logical direction.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="59528-272">Im folgende Beispiel wird eine Verwendung für diese Methode veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="59528-272">The following example demonstrates a use for this method.</span></span> <span data-ttu-id="59528-273">Im Beispiel wird die <xref:System.Windows.Documents.TextPointer.GetPointerContext%2A> Methode für die Implementierung eines Algorithmus zum Berechnen des Saldo der Start- und Endtags Element zwischen zwei angegebenen <xref:System.Windows.Documents.TextPointer> Positionen.</span><span class="sxs-lookup"><span data-stu-id="59528-273">The example uses the <xref:System.Windows.Documents.TextPointer.GetPointerContext%2A> method to implement an algorithm for calculating the balance of opening and closing element tags between two specified <xref:System.Windows.Documents.TextPointer> positions.</span></span>  <span data-ttu-id="59528-274">Jeder öffnenden Element als + 1, und jeder gezählt wird das Endtag des Elements als – 1 gezählt wird.</span><span class="sxs-lookup"><span data-stu-id="59528-274">Each opening element tag is counted as +1, and each closing element tag is counted as –1.</span></span>  
  
 [!code-csharp[TextPointer_Snippets#_TextPointer_GetOffsetToPosition2](~/samples/snippets/csharp/VS_Snippets_Wpf/TextPointer_Snippets/CSharp/Window1.xaml.cs#_textpointer_getoffsettoposition2)]
 [!code-vb[TextPointer_Snippets#_TextPointer_GetOffsetToPosition2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextPointer_Snippets/visualbasic/window1.xaml.vb#_textpointer_getoffsettoposition2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetPositionAtOffset">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="59528-275">Gibt einen <see cref="T:System.Windows.Documents.TextPointer" /> auf die Position zurück, die in Symbolen durch den ab dem Anfang des Inhalts bestimmten Offset angegeben wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59528-275">Returns a <see cref="T:System.Windows.Documents.TextPointer" /> to the position indicated by the specified offset, in symbols, from the beginning of content.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetPositionAtOffset">
      <MemberSignature Language="C#" Value="public System.Windows.Documents.TextPointer GetPositionAtOffset (int offset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Documents.TextPointer GetPositionAtOffset(int32 offset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.TextPointer.GetPositionAtOffset(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPositionAtOffset (offset As Integer) As TextPointer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Documents::TextPointer ^ GetPositionAtOffset(int offset);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.TextPointer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offset" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="offset">
          <span data-ttu-id="59528-276">Ein Offset in Symbolen, für den die Position berechnet und zurückgegeben werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59528-276">An offset, in symbols, for which to calculate and return the position.</span>
          </span>
          <span data-ttu-id="59528-277">Wenn der Offset negativ ist, wird die Position in der logischen Richtung berechnet, die der mit der <see cref="P:System.Windows.Documents.TextPointer.LogicalDirection" />-Eigenschaft angegebenen Richtung entgegengesetzt ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59528-277">If the offset is negative, the position is calculated in the logical direction opposite of that indicated by the <see cref="P:System.Windows.Documents.TextPointer.LogicalDirection" /> property.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="59528-278">Gibt einen <see cref="T:System.Windows.Documents.TextPointer" /> auf die Position zurück, die in Symbolen durch den ab dem Anfang des aktuellen <see cref="T:System.Windows.Documents.TextPointer" /> bestimmten Offset angegeben wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59528-278">Returns a <see cref="T:System.Windows.Documents.TextPointer" /> to the position indicated by the specified offset, in symbols, from the beginning of the current <see cref="T:System.Windows.Documents.TextPointer" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="59528-279">Ein <see cref="T:System.Windows.Documents.TextPointer" /> auf die Position, die von dem bestimmten Offset angegeben wird, oder <see langword="null" />, wenn keine entsprechende Position gefunden werden kann.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59528-279">A <see cref="T:System.Windows.Documents.TextPointer" /> to the position indicated by the specified offset, or <see langword="null" /> if no corresponding position can be found.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="59528-280">Folgendes gilt ein Symbol sein:</span><span class="sxs-lookup"><span data-stu-id="59528-280">Any of the following is considered to be a symbol:</span></span>  
  
-   <span data-ttu-id="59528-281">Eine öffnende oder schließende Tag für den <xref:System.Windows.Documents.TextElement> Element.</span><span class="sxs-lookup"><span data-stu-id="59528-281">An opening or closing tag for the <xref:System.Windows.Documents.TextElement> element.</span></span>  
  
-   <span data-ttu-id="59528-282">Ein <xref:System.Windows.UIElement> in enthaltenen Elementen ein <xref:System.Windows.Documents.InlineUIContainer> oder <xref:System.Windows.Documents.BlockUIContainer>.</span><span class="sxs-lookup"><span data-stu-id="59528-282">A <xref:System.Windows.UIElement> element contained in an <xref:System.Windows.Documents.InlineUIContainer> or <xref:System.Windows.Documents.BlockUIContainer>.</span></span>  <span data-ttu-id="59528-283">Beachten Sie, dass solche eine <xref:System.Windows.UIElement> wird immer als genau ein Symbol ist eine zusätzliche Inhalts- oder Elemente gezählt der <xref:System.Windows.UIElement> werden als Symbole nicht gezählt.</span><span class="sxs-lookup"><span data-stu-id="59528-283">Note that such a <xref:System.Windows.UIElement> is always counted as exactly one symbol; any additional content or elements contained by the <xref:System.Windows.UIElement> are not counted as symbols.</span></span>  
  
-   <span data-ttu-id="59528-284">Eine 16-Bit- [!INCLUDE[TLA#tla_unicode](~/includes/tlasharptla-unicode-md.md)] -Zeichen in einem <xref:System.Windows.Documents.Run> Element.</span><span class="sxs-lookup"><span data-stu-id="59528-284">A 16-bit [!INCLUDE[TLA#tla_unicode](~/includes/tlasharptla-unicode-md.md)] character inside of a text <xref:System.Windows.Documents.Run> element.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="59528-285">Im folgende Beispiel wird eine Verwendung für diese Methode veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="59528-285">The following example demonstrates a use for this method.</span></span> <span data-ttu-id="59528-286">Im Beispiel wird die <xref:System.Windows.Documents.TextPointer.GetPositionAtOffset%2A> Methode für die Implementierung von ein Paar von Methoden, mit einem Methodenpaar an eine angegebene Position relativ zum alle hosting Absatz, und die andere zum Zurückgeben einer <xref:System.Windows.Documents.TextPointer> an einem angegebenen Offset in einem angegebenen Absatz.</span><span class="sxs-lookup"><span data-stu-id="59528-286">The example uses the <xref:System.Windows.Documents.TextPointer.GetPositionAtOffset%2A> method to implement a pair of methods, one to calculate the offset to a specified position relative to any hosting paragraph, and the other to return a <xref:System.Windows.Documents.TextPointer> to a specified offset in a specified paragraph.</span></span>  
  
 [!code-csharp[TextPointer_Snippets#_TextPointer_GetPositionAtOffset](~/samples/snippets/csharp/VS_Snippets_Wpf/TextPointer_Snippets/CSharp/Window1.xaml.cs#_textpointer_getpositionatoffset)]
 [!code-vb[TextPointer_Snippets#_TextPointer_GetPositionAtOffset](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextPointer_Snippets/visualbasic/window1.xaml.vb#_textpointer_getpositionatoffset)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Documents.TextPointer.GetOffsetToPosition(System.Windows.Documents.TextPointer)" />
      </Docs>
    </Member>
    <Member MemberName="GetPositionAtOffset">
      <MemberSignature Language="C#" Value="public System.Windows.Documents.TextPointer GetPositionAtOffset (int offset, System.Windows.Documents.LogicalDirection direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Documents.TextPointer GetPositionAtOffset(int32 offset, valuetype System.Windows.Documents.LogicalDirection direction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.TextPointer.GetPositionAtOffset(System.Int32,System.Windows.Documents.LogicalDirection)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPositionAtOffset (offset As Integer, direction As LogicalDirection) As TextPointer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Documents::TextPointer ^ GetPositionAtOffset(int offset, System::Windows::Documents::LogicalDirection direction);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.TextPointer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="direction" Type="System.Windows.Documents.LogicalDirection" />
      </Parameters>
      <Docs>
        <param name="offset">
          <span data-ttu-id="59528-287">Ein Offset in Symbolen, für den die Position berechnet und zurückgegeben werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59528-287">An offset, in symbols, for which to calculate and return the position.</span>
          </span>
          <span data-ttu-id="59528-288">Wenn der Offset negativ ist, steht der zurückgegebene <see cref="T:System.Windows.Documents.TextPointer" /> vor dem aktuellen <see cref="T:System.Windows.Documents.TextPointer" />, andernfalls danach.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59528-288">If the offset is negative, the returned <see cref="T:System.Windows.Documents.TextPointer" /> precedes the current <see cref="T:System.Windows.Documents.TextPointer" />; otherwise, it follows.</span>
          </span>
        </param>
        <param name="direction">
          <span data-ttu-id="59528-289">Einer der <see cref="T:System.Windows.Documents.LogicalDirection" />-Werte, mit denen die logische Richtung des zurückgegebenen <see cref="T:System.Windows.Documents.TextPointer" /> angegeben wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59528-289">One of the <see cref="T:System.Windows.Documents.LogicalDirection" /> values that specifies the logical direction of the returned <see cref="T:System.Windows.Documents.TextPointer" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="59528-290">Gibt einen <see cref="T:System.Windows.Documents.TextPointer" /> auf die Position zurück, die in Symbolen durch den ab dem Anfang des aktuellen <see cref="T:System.Windows.Documents.TextPointer" /> bestimmten Offset und in der angegebenen Richtung angegeben wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59528-290">Returns a <see cref="T:System.Windows.Documents.TextPointer" /> to the position indicated by the specified offset, in symbols, from the beginning of the current <see cref="T:System.Windows.Documents.TextPointer" /> and in the specified direction.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="59528-291">Ein <see cref="T:System.Windows.Documents.TextPointer" /> auf die Position, die durch den bestimmten Offset angegeben wird, oder <see langword="null" />, wenn sich der Offset über das Ende des Inhalts hinaus erstreckt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59528-291">A <see cref="T:System.Windows.Documents.TextPointer" /> to the position indicated by the specified offset, or <see langword="null" /> if the offset extends past the end of the content.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="59528-292">Folgendes gilt ein Symbol sein:</span><span class="sxs-lookup"><span data-stu-id="59528-292">Any of the following is considered to be a symbol:</span></span>  
  
-   <span data-ttu-id="59528-293">Eine öffnende oder schließende Tag für den <xref:System.Windows.Documents.TextElement> Element.</span><span class="sxs-lookup"><span data-stu-id="59528-293">An opening or closing tag for the <xref:System.Windows.Documents.TextElement> element.</span></span>  
  
-   <span data-ttu-id="59528-294">Ein <xref:System.Windows.UIElement> in enthaltenen Elementen ein <xref:System.Windows.Documents.InlineUIContainer> oder <xref:System.Windows.Documents.BlockUIContainer>.</span><span class="sxs-lookup"><span data-stu-id="59528-294">A <xref:System.Windows.UIElement> element contained in an <xref:System.Windows.Documents.InlineUIContainer> or <xref:System.Windows.Documents.BlockUIContainer>.</span></span>  <span data-ttu-id="59528-295">Beachten Sie, dass solche eine <xref:System.Windows.UIElement> wird immer als genau ein Symbol ist eine zusätzliche Inhalts- oder Elemente gezählt der <xref:System.Windows.UIElement> werden als Symbole nicht gezählt.</span><span class="sxs-lookup"><span data-stu-id="59528-295">Note that such a <xref:System.Windows.UIElement> is always counted as exactly one symbol; any additional content or elements contained by the <xref:System.Windows.UIElement> are not counted as symbols.</span></span>  
  
-   <span data-ttu-id="59528-296">Eine 16-Bit- [!INCLUDE[TLA#tla_unicode](~/includes/tlasharptla-unicode-md.md)] -Zeichen in einem <xref:System.Windows.Documents.Run> Element.</span><span class="sxs-lookup"><span data-stu-id="59528-296">A 16-bit [!INCLUDE[TLA#tla_unicode](~/includes/tlasharptla-unicode-md.md)] character inside of a text <xref:System.Windows.Documents.Run> element.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Documents.TextPointer.GetOffsetToPosition(System.Windows.Documents.TextPointer)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetTextInRun">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="59528-297">Gibt den Text zurück, der sich neben dem aktuellen <see cref="T:System.Windows.Documents.TextPointer" /> befindet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59528-297">Returns text adjacent to the current <see cref="T:System.Windows.Documents.TextPointer" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetTextInRun">
      <MemberSignature Language="C#" Value="public string GetTextInRun (System.Windows.Documents.LogicalDirection direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetTextInRun(valuetype System.Windows.Documents.LogicalDirection direction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.TextPointer.GetTextInRun(System.Windows.Documents.LogicalDirection)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTextInRun (direction As LogicalDirection) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetTextInRun(System::Windows::Documents::LogicalDirection direction);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Documents.ITextPointer.GetTextInRun(System.Windows.Documents.LogicalDirection)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="direction" Type="System.Windows.Documents.LogicalDirection" />
      </Parameters>
      <Docs>
        <param name="direction">
          <span data-ttu-id="59528-298">Einer der <see cref="T:System.Windows.Documents.LogicalDirection" />-Werte, mit denen die logische Richtung angegeben wird, in der benachbarter Text gesucht und zurückgegeben werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59528-298">One of the <see cref="T:System.Windows.Documents.LogicalDirection" /> values that specifies the logical direction in which to find and return any adjacent text.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="59528-299">Gibt eine Zeichenfolge zurück, die Text enthält, der sich in der angegebenen logischen Richtung neben dem aktuellen <see cref="T:System.Windows.Documents.TextPointer" /> befindet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59528-299">Returns a string containing any text adjacent to the current <see cref="T:System.Windows.Documents.TextPointer" /> in the specified logical direction.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="59528-300">Eine Zeichenfolge, die beliebigen benachbarten Text in der angegebenen logischen Richtung enthält, oder <see cref="F:System.String.Empty" />, wenn kein benachbarter Text gefunden werden kann.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59528-300">A string containing any adjacent text in the specified logical direction, or <see cref="F:System.String.Empty" /> if no adjacent text can be found.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="59528-301">Diese Methode gibt nur ununterbrochene textausführungen.</span><span class="sxs-lookup"><span data-stu-id="59528-301">This method returns only uninterrupted runs of text.</span></span>  <span data-ttu-id="59528-302">Nichts wird zurückgegeben, wenn alle Typ außer symbol <xref:System.Windows.Documents.TextPointerContext.Text> wird neben dem aktuellen <xref:System.Windows.Documents.TextPointer> in der angegebenen Richtung.</span><span class="sxs-lookup"><span data-stu-id="59528-302">Nothing is returned if any symbol type other than <xref:System.Windows.Documents.TextPointerContext.Text> is adjacent to the current <xref:System.Windows.Documents.TextPointer> in the specified direction.</span></span>  <span data-ttu-id="59528-303">Auf ähnliche Weise wird der Text nur bis zur nächsten-n Nichttext-Symbol zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="59528-303">Similarly, text is returned only up to the next non-text symbol.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="59528-304">Im folgende Beispiel wird eine Verwendung für diese Methode veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="59528-304">The following example demonstrates a use for this method.</span></span> <span data-ttu-id="59528-305">Im Beispiel wird die <xref:System.Windows.Documents.TextPointer.GetTextInRun%2A> Methode für die Implementierung von einem einfachen Text extrahieren.</span><span class="sxs-lookup"><span data-stu-id="59528-305">The example uses the <xref:System.Windows.Documents.TextPointer.GetTextInRun%2A> method to implement a simple text extractor.</span></span>  <span data-ttu-id="59528-306">Die Methode gibt eine zeichenfolgenverkettung aus sämtlichen Text zwischen zwei angegebenen <xref:System.Windows.Documents.TextPointer> Instanzen.</span><span class="sxs-lookup"><span data-stu-id="59528-306">The method returns a string concatenation of all text between two specified <xref:System.Windows.Documents.TextPointer> instances.</span></span>  
  
 <span data-ttu-id="59528-307">Während das Beispiel kann, zum Extrahieren von Text zwischen zwei verwendet werden <xref:System.Windows.Documents.TextPointer> Instanzen, es dient nur zur Veranschaulichung und sollte nicht im Produktionscode verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="59528-307">While the example can be used to extract any text between two <xref:System.Windows.Documents.TextPointer> instances, it is intended for illustrative purposes only, and should not be used in production code.</span></span>  <span data-ttu-id="59528-308">Verwenden Sie stattdessen die <xref:System.Windows.Documents.TextRange.Text%2A?displayProperty=nameWithType>-Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="59528-308">Use the <xref:System.Windows.Documents.TextRange.Text%2A?displayProperty=nameWithType> property instead.</span></span>  
  
 [!code-csharp[TextPointer_Snippets#_TextPointer_GetTextInRun](~/samples/snippets/csharp/VS_Snippets_Wpf/TextPointer_Snippets/CSharp/Window1.xaml.cs#_textpointer_gettextinrun)]
 [!code-vb[TextPointer_Snippets#_TextPointer_GetTextInRun](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextPointer_Snippets/visualbasic/window1.xaml.vb#_textpointer_gettextinrun)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Documents.TextPointer.DeleteTextInRun(System.Int32)" />
        <altmember cref="M:System.Windows.Documents.TextPointer.InsertTextInRun(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetTextInRun">
      <MemberSignature Language="C#" Value="public int GetTextInRun (System.Windows.Documents.LogicalDirection direction, char[] textBuffer, int startIndex, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetTextInRun(valuetype System.Windows.Documents.LogicalDirection direction, char[] textBuffer, int32 startIndex, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.TextPointer.GetTextInRun(System.Windows.Documents.LogicalDirection,System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTextInRun (direction As LogicalDirection, textBuffer As Char(), startIndex As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetTextInRun(System::Windows::Documents::LogicalDirection direction, cli::array &lt;char&gt; ^ textBuffer, int startIndex, int count);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Documents.ITextPointer.GetTextInRun(System.Windows.Documents.LogicalDirection,System.Char[],System.Int32,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="direction" Type="System.Windows.Documents.LogicalDirection" />
        <Parameter Name="textBuffer" Type="System.Char[]" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="direction">
          <span data-ttu-id="59528-309">Einer der <see cref="T:System.Windows.Documents.LogicalDirection" />-Werte, mit denen die logische Richtung angegeben wird, in der benachbarter Text gesucht und kopiert werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59528-309">One of the <see cref="T:System.Windows.Documents.LogicalDirection" /> values that specifies the logical direction in which to find and copy any adjacent text.</span>
          </span>
        </param>
        <param name="textBuffer">
          <span data-ttu-id="59528-310">Ein Puffer, in den beliebiger Text kopiert wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59528-310">A buffer into which any text is copied.</span>
          </span>
        </param>
        <param name="startIndex">
          <span data-ttu-id="59528-311">Ein Index im <c>textBuffer</c>, ab dem mit dem Schreiben von kopiertem Text begonnen wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59528-311">An index into <c>textBuffer</c> at which to begin writing copied text.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="59528-312">Die maximale Anzahl der zu kopierenden Zeichen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59528-312">The maximum number of characters to copy.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="59528-313">Kopiert die angegebene maximale Anzahl von Zeichen aus benachbartem Text in der angegebenen Richtung in ein vom Aufrufer bereitgestelltes Zeichenarray.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59528-313">Copies the specified maximum number of characters from any adjacent text in the specified direction into a caller-supplied character array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="59528-314">Die Anzahl der tatsächlich in den <paramref name="textBuffer" /> kopierten Zeichen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59528-314">The number of characters actually copied into <paramref name="textBuffer" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="59528-315">Diese Methode gibt nur ununterbrochene textausführungen.</span><span class="sxs-lookup"><span data-stu-id="59528-315">This method returns only uninterrupted runs of text.</span></span>  <span data-ttu-id="59528-316">Nichts wird zurückgegeben, wenn alle Typ außer symbol <xref:System.Windows.Documents.TextPointerContext.Text> wird neben dem aktuellen <xref:System.Windows.Documents.TextPointer> in der angegebenen Richtung.</span><span class="sxs-lookup"><span data-stu-id="59528-316">Nothing is returned if any symbol type other than <xref:System.Windows.Documents.TextPointerContext.Text> is adjacent to the current <xref:System.Windows.Documents.TextPointer> in the specified direction.</span></span>  <span data-ttu-id="59528-317">Auf ähnliche Weise wird der Text nur bis zur nächsten-n Nichttext-Symbol zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="59528-317">Similarly, text is returned only up to the next non-text symbol.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="59528-318">
            <paramref name="startIndex" /> ist kleiner als 0 oder größer als die <see cref="P:System.Array.Length" />-Eigenschaft von <paramref name="textBuffer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59528-318">
              <paramref name="startIndex" /> is less than 0 or greater than the <see cref="P:System.Array.Length" /> property of <paramref name="textBuffer" />.</span>
          </span>
          <span data-ttu-id="59528-319">- oder - </span>
          <span class="sxs-lookup">
            <span data-stu-id="59528-319">-or-</span>
          </span>
          <span data-ttu-id="59528-320">
            <paramref name="count" /> ist kleiner als 0 oder größer als der verbleibende Raum im <paramref name="textBuffer" /> (<paramref name="textBuffer" />.<see cref="P:System.Array.Length" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="59528-320">
              <paramref name="count" /> is less than 0 or greater than the remaining space in <paramref name="textBuffer" /> (<paramref name="textBuffer" />.<see cref="P:System.Array.Length" /></span>
          </span>
          <span data-ttu-id="59528-321">minus<paramref name="startIndex" />).</span>
          <span class="sxs-lookup">
            <span data-stu-id="59528-321">minus <paramref name="startIndex" />).</span>
          </span>
        </exception>
        <altmember cref="M:System.Windows.Documents.TextPointer.DeleteTextInRun(System.Int32)" />
        <altmember cref="M:System.Windows.Documents.TextPointer.InsertTextInRun(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetTextRunLength">
      <MemberSignature Language="C#" Value="public int GetTextRunLength (System.Windows.Documents.LogicalDirection direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetTextRunLength(valuetype System.Windows.Documents.LogicalDirection direction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.TextPointer.GetTextRunLength(System.Windows.Documents.LogicalDirection)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTextRunLength (direction As LogicalDirection) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetTextRunLength(System::Windows::Documents::LogicalDirection direction);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Documents.ITextPointer.GetTextRunLength(System.Windows.Documents.LogicalDirection)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="direction" Type="System.Windows.Documents.LogicalDirection" />
      </Parameters>
      <Docs>
        <param name="direction">
          <span data-ttu-id="59528-322">Einer der <see cref="T:System.Windows.Documents.LogicalDirection" />-Werte, mit denen die logische Richtung für das Zählen der Zeichenanzahl angegeben wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59528-322">One of the <see cref="T:System.Windows.Documents.LogicalDirection" /> values that specifies the logical direction in which to count the number of characters.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="59528-323">Gibt in der angegebenen logischen Richtung die Anzahl der Unicode-Zeichen zwischen dem aktuellen <see cref="T:System.Windows.Documents.TextPointer" /> und dem nächsten Nicht-Text-Symbol zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59528-323">Returns the number of Unicode characters between the current <see cref="T:System.Windows.Documents.TextPointer" /> and the next non-text symbol, in the specified logical direction.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="59528-324">Die Anzahl der Unicode-Zeichen zwischen dem aktuellen <see cref="T:System.Windows.Documents.TextPointer" /> und dem nächsten Nicht-Text-Symbol.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59528-324">The number of Unicode characters between the current <see cref="T:System.Windows.Documents.TextPointer" /> and the next non-text symbol.</span>
          </span>
          <span data-ttu-id="59528-325">Diese Zahl kann 0 sein, wenn kein benachbarter Text vorhanden ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59528-325">This number may be 0 if there is no adjacent text.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="59528-326">Folgendes gilt ein Symbol sein:</span><span class="sxs-lookup"><span data-stu-id="59528-326">Any of the following is considered to be a symbol:</span></span>  
  
-   <span data-ttu-id="59528-327">Eine öffnende oder schließende Tag für den <xref:System.Windows.Documents.TextElement> Element.</span><span class="sxs-lookup"><span data-stu-id="59528-327">An opening or closing tag for the <xref:System.Windows.Documents.TextElement> element.</span></span>  
  
-   <span data-ttu-id="59528-328">Ein <xref:System.Windows.UIElement> in enthaltenen Elementen ein <xref:System.Windows.Documents.InlineUIContainer> oder <xref:System.Windows.Documents.BlockUIContainer>.</span><span class="sxs-lookup"><span data-stu-id="59528-328">A <xref:System.Windows.UIElement> element contained in an <xref:System.Windows.Documents.InlineUIContainer> or <xref:System.Windows.Documents.BlockUIContainer>.</span></span>  <span data-ttu-id="59528-329">Beachten Sie, dass solche eine <xref:System.Windows.UIElement> wird immer als genau ein Symbol ist eine zusätzliche Inhalts- oder Elemente gezählt der <xref:System.Windows.UIElement> werden als Symbole nicht gezählt.</span><span class="sxs-lookup"><span data-stu-id="59528-329">Note that such a <xref:System.Windows.UIElement> is always counted as exactly one symbol; any additional content or elements contained by the <xref:System.Windows.UIElement> are not counted as symbols.</span></span>  
  
-   <span data-ttu-id="59528-330">Eine 16-Bit- [!INCLUDE[TLA#tla_unicode](~/includes/tlasharptla-unicode-md.md)] -Zeichen in einem <xref:System.Windows.Documents.Run> Element.</span><span class="sxs-lookup"><span data-stu-id="59528-330">A 16-bit [!INCLUDE[TLA#tla_unicode](~/includes/tlasharptla-unicode-md.md)] character inside of a text <xref:System.Windows.Documents.Run> element.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasValidLayout">
      <MemberSignature Language="C#" Value="public bool HasValidLayout { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasValidLayout" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.TextPointer.HasValidLayout" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasValidLayout As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasValidLayout { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.Documents.ITextPointer.HasValidLayout</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="59528-331">Ruft einen Wert ab, mit dem angegeben wird, ob der der aktuellen Position zugeordnete Textcontainer über ein gültiges (aktuelles) Layout verfügt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59528-331">Gets a value that indicates whether the text container associated with the current position has a valid (up-to-date) layout.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="59528-332">
            <see langword="true" />, wenn das Layout aktuell und gültig ist, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59528-332">
              <see langword="true" /> if the layout is current and valid; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="59528-333">Bei Bedarf werden Vorgänge, die von einem gültigen Layout abhängen (z. B. die <xref:System.Windows.Documents.TextPointer.GetLineStartPosition%2A> -Methode, <xref:System.Windows.Documents.TextPointer.GetCharacterRect%2A> -Methode und <xref:System.Windows.Documents.TextPointer.IsAtLineStartPosition%2A> Eigenschaft) versuchen, ein gültiges Layout vor dem Fortsetzen des Vorgangs automatisch erneut zu generieren.</span><span class="sxs-lookup"><span data-stu-id="59528-333">When necessary, operations that depend on a valid layout (such as the <xref:System.Windows.Documents.TextPointer.GetLineStartPosition%2A> method, <xref:System.Windows.Documents.TextPointer.GetCharacterRect%2A> method, and <xref:System.Windows.Documents.TextPointer.IsAtLineStartPosition%2A> property) attempt to automatically regenerate a valid layout before proceeding with the operation.</span></span>  <span data-ttu-id="59528-334">Erneutes Generieren eines Layouts kann eine relativ aufwändige Operation.</span><span class="sxs-lookup"><span data-stu-id="59528-334">Regenerating a layout can be a relatively expensive operation.</span></span>  <span data-ttu-id="59528-335">Verwenden Sie diese Eigenschaft, um ein gültiges Layout überprüfen Sie vor dem Ausführen von Vorgängen, die das Layout erneut generiert werden können.</span><span class="sxs-lookup"><span data-stu-id="59528-335">Use this property to check for a valid layout before performing operations that may regenerate the layout.</span></span>  <span data-ttu-id="59528-336">Weitere Informationen finden Sie unter [Layout](~/docs/framework/wpf/advanced/layout.md).</span><span class="sxs-lookup"><span data-stu-id="59528-336">For more information, see [Layout](~/docs/framework/wpf/advanced/layout.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertLineBreak">
      <MemberSignature Language="C#" Value="public System.Windows.Documents.TextPointer InsertLineBreak ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Documents.TextPointer InsertLineBreak() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.TextPointer.InsertLineBreak" />
      <MemberSignature Language="VB.NET" Value="Public Function InsertLineBreak () As TextPointer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Documents::TextPointer ^ InsertLineBreak();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.TextPointer</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="59528-337">Fügt an der aktuellen Position einen Zeilenumbruch ein.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59528-337">Inserts a line break at the current position.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="59528-338">Ein <see cref="T:System.Windows.Documents.TextPointer" />, der unmittelbar nach dem von dieser Methode eingefügten <see cref="T:System.Windows.Documents.LineBreak" />-Element positioniert wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59528-338">A <see cref="T:System.Windows.Documents.TextPointer" /> positioned immediately after the <see cref="T:System.Windows.Documents.LineBreak" /> element inserted by this method.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertParagraphBreak">
      <MemberSignature Language="C#" Value="public System.Windows.Documents.TextPointer InsertParagraphBreak ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Documents.TextPointer InsertParagraphBreak() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.TextPointer.InsertParagraphBreak" />
      <MemberSignature Language="VB.NET" Value="Public Function InsertParagraphBreak () As TextPointer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Documents::TextPointer ^ InsertParagraphBreak();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.TextPointer</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="59528-339">Fügt an der aktuellen Position einen Absatzwechsel ein.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59528-339">Inserts a paragraph break at the current position.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="59528-340">Ein <see cref="T:System.Windows.Documents.TextPointer" /> auf den Anfang (<see cref="P:System.Windows.Documents.TextElement.ContentStart" />) des neuen Absatzes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59528-340">A <see cref="T:System.Windows.Documents.TextPointer" /> to the beginning (<see cref="P:System.Windows.Documents.TextElement.ContentStart" />) of the new paragraph.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="59528-341">Wenn diese Methode aufgerufen wird, wenn die aktuelle Position innerhalb einer vorhandenen ist <xref:System.Windows.Documents.Paragraph> -Element, den vorhandenen Absatz und alle Inhalte, die es enthält sind an der aktuellen Position in zwei Absätze aufgeteilt.</span><span class="sxs-lookup"><span data-stu-id="59528-341">If this method is called when the current position is inside of an existing <xref:System.Windows.Documents.Paragraph> element, the existing paragraph and any content it contains are split into two paragraphs at the current position.</span></span>  <span data-ttu-id="59528-342">Wenn diese Methode aufgerufen wird, wenn die aktuelle Position nicht in einen vorhandenen Absatz ist, wird ein neuer, leerer Absatz eingefügt.</span><span class="sxs-lookup"><span data-stu-id="59528-342">If this method is called when the current position is not inside of an existing paragraph, a new, empty paragraph is inserted.</span></span>  <span data-ttu-id="59528-343">Wenn diese Methode an einer Position für das Aufteilen oder Einfügen eines Absatzes ungeeignet aufgerufen wird (z. B., wenn die aktuelle Position innerhalb des ist ein <xref:System.Windows.Documents.Hyperlink> Element), wird eine Ausnahme ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="59528-343">If this method is called at a position unsuitable for splitting or inserting a paragraph (for example, if the current position is inside of a <xref:System.Windows.Documents.Hyperlink> element), an exception is thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="59528-344">Diese Methode wird an einer Position aufgerufen, an der keine Aufteilung für das Einfügen eines neuen Absatzes erfolgen kann, z. B. im Bereich eines <see cref="T:System.Windows.Documents.Hyperlink" /> oder eines <see cref="T:System.Windows.Documents.InlineUIContainer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59528-344">This method is called on a position that cannot be split to accommodate a new paragraph, such as in the scope of a <see cref="T:System.Windows.Documents.Hyperlink" /> or <see cref="T:System.Windows.Documents.InlineUIContainer" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="InsertTextInRun">
      <MemberSignature Language="C#" Value="public void InsertTextInRun (string textData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void InsertTextInRun(string textData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.TextPointer.InsertTextInRun(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub InsertTextInRun (textData As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void InsertTextInRun(System::String ^ textData);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Documents.ITextPointer.InsertTextInRun(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textData" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="textData">
          <span data-ttu-id="59528-345">Der einzufügende Text.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59528-345">The text to insert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="59528-346">Fügt den angegebenen Text an der aktuellen Position in den <see cref="T:System.Windows.Documents.Run" /> des Texts ein.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59528-346">Inserts the specified text into the text <see cref="T:System.Windows.Documents.Run" /> at the current position.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="59528-347">Wenn die <xref:System.Windows.Documents.TextPointer> nicht beschränkt wird eine <xref:System.Windows.Documents.Run> Element, eine <xref:System.Windows.Documents.Run> eingefügt wird, zusammen mit den `textData`.</span><span class="sxs-lookup"><span data-stu-id="59528-347">If the <xref:System.Windows.Documents.TextPointer> is not scoped by a <xref:System.Windows.Documents.Run> element, a <xref:System.Windows.Documents.Run> is inserted along with the `textData`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="59528-348">Die aktuelle Position befindet sich nicht in einem <see cref="T:System.Windows.Documents.Run" />-Element.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59528-348">The current position is not within a <see cref="T:System.Windows.Documents.Run" /> element.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="59528-349">
            <paramref name="textData" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59528-349">
              <paramref name="textData" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="IsAtInsertionPosition">
      <MemberSignature Language="C#" Value="public bool IsAtInsertionPosition { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAtInsertionPosition" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.TextPointer.IsAtInsertionPosition" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsAtInsertionPosition As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsAtInsertionPosition { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.Documents.ITextPointer.IsAtInsertionPosition</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="59528-350">Ruft einen Wert ab, mit dem angegeben wird, ob die aktuelle Position eine Einfügeposition ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59528-350">Gets a value that indicates whether the current position is an insertion position.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="59528-351">
            <see langword="true" />, wenn die aktuelle Position eine Einfügeposition ist, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59528-351">
              <see langword="true" /> if the current position is an insertion position; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="59528-352">Eine Einfügeposition handelt es sich um eine Position, wo neuer Inhalte hinzugefügt werden kann, ohne Unterbrechung semantischen Regeln für den zugehörigen Inhalt.</span><span class="sxs-lookup"><span data-stu-id="59528-352">An insertion position is a position where new content may be added without breaking any semantic rules for the associated content.</span></span>  <span data-ttu-id="59528-353">In der Praxis ist eine Einfügeposition an einer beliebigen Stelle im Inhalt, in denen eine Einfügemarke positioniert werden kann.</span><span class="sxs-lookup"><span data-stu-id="59528-353">In practice, an insertion position is anywhere in content where a caret may be positioned.</span></span>  <span data-ttu-id="59528-354">Ein Beispiel einer gültigen <xref:System.Windows.Documents.TextPointer> Position an, die sich nicht um eine Einfügeposition ist, ist die Position zwischen zwei angrenzende <xref:System.Windows.Documents.Paragraph> Tags (d. h. zwischen dem Endtag aus dem vorherigen Absatz und das öffnende Tag eines nächsten Absatz).</span><span class="sxs-lookup"><span data-stu-id="59528-354">An example of a valid <xref:System.Windows.Documents.TextPointer> position that is not an insertion position is the position between two adjacent <xref:System.Windows.Documents.Paragraph> tags (that is, between the closing tag of the preceding paragraph and the opening tag of the next paragraph).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Documents.TextPointer.GetInsertionPosition(System.Windows.Documents.LogicalDirection)" />
        <altmember cref="M:System.Windows.Documents.TextPointer.GetNextInsertionPosition(System.Windows.Documents.LogicalDirection)" />
      </Docs>
    </Member>
    <Member MemberName="IsAtLineStartPosition">
      <MemberSignature Language="C#" Value="public bool IsAtLineStartPosition { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAtLineStartPosition" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.TextPointer.IsAtLineStartPosition" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsAtLineStartPosition As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsAtLineStartPosition { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="59528-355">Ruft einen Wert ab, mit dem angegeben wird, ob sich die aktuelle Position am Anfang einer Zeile befindet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59528-355">Gets a value that indicates whether the current position is at the beginning of a line.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="59528-356">
            <see langword="true" />, wenn sich die aktuelle Position am Anfang einer Zeile befindet, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59528-356">
              <see langword="true" /> if the current position is at the beginning of a line; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="59528-357">Wenn die <xref:System.Windows.Documents.TextPointer> verweist auf eine mehrdeutige Position, z. B. zwischen zwei Zeilen, die Zeile in der vom angegebenen Richtung der <xref:System.Windows.Documents.TextPointer.LogicalDirection%2A> Eigenschaft als relative Anfangszeile ausgewählt ist.</span><span class="sxs-lookup"><span data-stu-id="59528-357">If the <xref:System.Windows.Documents.TextPointer> points to an ambiguous position, for example, between two lines, the line in the direction specified by the <xref:System.Windows.Documents.TextPointer.LogicalDirection%2A> property is selected as the relative starting line.</span></span>  
  
 <span data-ttu-id="59528-358">Der Vorgang ausgeführt wird, die von dieser Eigenschaft hängt von einem gültigen Layout ab.</span><span class="sxs-lookup"><span data-stu-id="59528-358">The operation performed by this property depends on a valid layout.</span></span>  <span data-ttu-id="59528-359">Diese Methode versucht bei Bedarf automatisch ein gültiges Layout vor dem Fortsetzen des Vorgangs neu generieren.</span><span class="sxs-lookup"><span data-stu-id="59528-359">When necessary, this method attempts to automatically regenerate a valid layout before proceeding with the operation.</span></span>  <span data-ttu-id="59528-360">Erneutes Generieren eines Layouts kann eine relativ aufwändige Operation.</span><span class="sxs-lookup"><span data-stu-id="59528-360">Regenerating a layout can be a relatively expensive operation.</span></span>  <span data-ttu-id="59528-361">Verwenden der <xref:System.Windows.Documents.TextPointer.HasValidLayout%2A> Eigenschaft, um ein gültiges Layout überprüfen Sie vor dem Ausführen von Vorgängen, die das Layout erneut generiert werden können.</span><span class="sxs-lookup"><span data-stu-id="59528-361">Use the <xref:System.Windows.Documents.TextPointer.HasValidLayout%2A> property to check for a valid layout before performing operations that may regenerate the layout.</span></span>  <span data-ttu-id="59528-362">Weitere Informationen finden Sie unter [Layout](~/docs/framework/wpf/advanced/layout.md).</span><span class="sxs-lookup"><span data-stu-id="59528-362">For more information, see [Layout](~/docs/framework/wpf/advanced/layout.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.TextPointer.IsAtLineStartPosition" />
      </Docs>
    </Member>
    <Member MemberName="IsInSameDocument">
      <MemberSignature Language="C#" Value="public bool IsInSameDocument (System.Windows.Documents.TextPointer textPosition);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsInSameDocument(class System.Windows.Documents.TextPointer textPosition) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.TextPointer.IsInSameDocument(System.Windows.Documents.TextPointer)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsInSameDocument (textPosition As TextPointer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsInSameDocument(System::Windows::Documents::TextPointer ^ textPosition);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textPosition" Type="System.Windows.Documents.TextPointer" />
      </Parameters>
      <Docs>
        <param name="textPosition">
          <span data-ttu-id="59528-363">Ein <see cref="T:System.Windows.Documents.TextPointer" />, der eine Position angibt, die mit der aktuellen Position verglichen werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59528-363">A <see cref="T:System.Windows.Documents.TextPointer" /> that specifies a position to compare to the current position.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="59528-364">Gibt an, ob sich die angegebene Position im gleichen Textcontainer wie die aktuelle Position befindet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59528-364">Indicates whether the specified position is in the same text container as the current position.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="59528-365">
            <see langword="true" />, wenn mit <paramref name="textPosition" /> eine Position angegeben wird, die sich im gleichen Textcontainer wie die aktuelle Position befindet, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59528-365">
              <see langword="true" /> if <paramref name="textPosition" /> indicates a position that is in the same text container as the current position; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="59528-366">Die meisten Operationen mit mehreren <xref:System.Windows.Documents.TextPointer> Instanzen sind nur gültig, wenn die betreffenden Instanzen Positionen anzuzeigen, die im gleichen Textfeld Containerbereich sind.</span><span class="sxs-lookup"><span data-stu-id="59528-366">Most operations that involve multiple <xref:System.Windows.Documents.TextPointer> instances are only valid if the instances in question indicate positions that are in the same text container scope.</span></span>  <span data-ttu-id="59528-367">Zum Beispiel die <xref:System.Windows.Documents.TextPointer.CompareTo%2A> und <xref:System.Windows.Documents.TextPointer.GetOffsetToPosition%2A> Methoden können nicht verwendet werden, mit einer <xref:System.Windows.Documents.TextPointer> an eine Position außerhalb der aktuellen Position zugeordneten Textcontainers.</span><span class="sxs-lookup"><span data-stu-id="59528-367">For example the <xref:System.Windows.Documents.TextPointer.CompareTo%2A> and <xref:System.Windows.Documents.TextPointer.GetOffsetToPosition%2A> methods cannot be used with a <xref:System.Windows.Documents.TextPointer> to a position outside of the text container associated with the current position.</span></span>  <span data-ttu-id="59528-368">Verwenden Sie diese Methode zum Überprüfen, ob ein angegebenes <xref:System.Windows.Documents.TextPointer> ist kompatibel mit der aktuellen Position für solche Vorgänge.</span><span class="sxs-lookup"><span data-stu-id="59528-368">Use this method to verify that a specified <xref:System.Windows.Documents.TextPointer> is compatible with the current position for such operations.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="59528-369">Im folgende Beispiel wird eine Verwendung für diese Methode veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="59528-369">The following example demonstrates a use for this method.</span></span>  <span data-ttu-id="59528-370">Im Beispiel wird die <xref:System.Windows.Documents.TextPointer.IsInSameDocument%2A> -Methode überprüft, ob ein angegebener <xref:System.Windows.Documents.TextPointer> befindet sich zwischen zwei anderen angegebenen <xref:System.Windows.Documents.TextPointer> Instanzen in eine Situation, besteht keine Garantie, dass alle drei Positionen auf den gleichen Textcontainer gehören.</span><span class="sxs-lookup"><span data-stu-id="59528-370">The example uses the <xref:System.Windows.Documents.TextPointer.IsInSameDocument%2A> method to check whether a specified <xref:System.Windows.Documents.TextPointer> is positioned between two other specified <xref:System.Windows.Documents.TextPointer> instances in a situation when there is no guarantee that all three positions belong to the same text container.</span></span>  
  
 [!code-csharp[TextPointer_Snippets#_TextPointer_IsInSameDocument](~/samples/snippets/csharp/VS_Snippets_Wpf/TextPointer_Snippets/CSharp/Window1.xaml.cs#_textpointer_isinsamedocument)]
 [!code-vb[TextPointer_Snippets#_TextPointer_IsInSameDocument](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextPointer_Snippets/visualbasic/window1.xaml.vb#_textpointer_isinsamedocument)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="59528-371">
            <paramref name="textPosition" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59528-371">
              <paramref name="textPosition" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="LogicalDirection">
      <MemberSignature Language="C#" Value="public System.Windows.Documents.LogicalDirection LogicalDirection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Documents.LogicalDirection LogicalDirection" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.TextPointer.LogicalDirection" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LogicalDirection As LogicalDirection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Documents::LogicalDirection LogicalDirection { System::Windows::Documents::LogicalDirection get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.Documents.ITextPointer.LogicalDirection</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.LogicalDirection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="59528-372">Ruft die der aktuellen Position zugeordnete logische Richtung ab, mit der der aktuellen Position zugeordneter Inhalt unterschieden werden kann.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59528-372">Gets the logical direction associated with the current position which is used to disambiguate content associated with the current position.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="59528-373">Der <see cref="T:System.Windows.Documents.LogicalDirection" />-Wert, der der aktuellen Position zugeordnet ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59528-373">The <see cref="T:System.Windows.Documents.LogicalDirection" /> value that is associated with the current position.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="59528-374">Als Beispiel dafür, wie diese Eigenschaft verwendet wird die <xref:System.Windows.Documents.LogicalDirection> von der <xref:System.Windows.Documents.TextPointer> zurückgegeben von einem Treffertest Methode ergibt einen Treffer zwischen beiden Zeichen des Texts.</span><span class="sxs-lookup"><span data-stu-id="59528-374">As an example of how this property is used, the <xref:System.Windows.Documents.LogicalDirection> of the <xref:System.Windows.Documents.TextPointer> returned by a hit test method gives a hit that is between two characters of text.</span></span> <span data-ttu-id="59528-375">Die logische Richtung gibt an, welche der beiden Zeichen tatsächlich erreicht wurde, links oder rechts.</span><span class="sxs-lookup"><span data-stu-id="59528-375">The logical direction specifies which of the two characters was actually hit—the left or the right.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Paragraph">
      <MemberSignature Language="C#" Value="public System.Windows.Documents.Paragraph Paragraph { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Documents.Paragraph Paragraph" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.TextPointer.Paragraph" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Paragraph As Paragraph" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Documents::Paragraph ^ Paragraph { System::Windows::Documents::Paragraph ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.Paragraph</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="59528-376">Ruft den Absatz ab, mit dem ggf. die aktuelle Position festgelegt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59528-376">Gets the paragraph that scopes the current position, if any.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="59528-377">Die <see cref="T:System.Windows.Documents.Paragraph" /> , die die aktuelle Position, Bereiche oder <see langword="null" /> Wenn kein entsprechender Absatz vorhanden ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59528-377">The <see cref="T:System.Windows.Documents.Paragraph" /> that scopes the current position, or <see langword="null" /> if no such paragraph exists.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Documents.TextPointer.Parent" />
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public System.Windows.DependencyObject Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.DependencyObject Parent" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.TextPointer.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As DependencyObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::DependencyObject ^ Parent { System::Windows::DependencyObject ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyObject</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="59528-378">Ruft das logische übergeordnete Element ab, mit dem die aktuelle Position festgelegt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59528-378">Gets the logical parent that scopes the current position.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="59528-379">Das logische übergeordnete Element, mit dem die aktuelle Position festgelegt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59528-379">The logical parent that scopes the current position.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Documents.TextPointer.Paragraph" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.TextPointer.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="59528-380">Dieser Typ oder Member unterstützt die [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)]-Infrastruktur und ist nicht für die direkte Verwendung im Code vorgesehen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59528-380">This type or member supports the [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] infrastructure and is not intended to be used directly from your code.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="59528-381">Die Zeichenfolge, die das Objekt darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59528-381">The string that represents the object.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>