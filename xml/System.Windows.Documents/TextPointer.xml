<Type Name="TextPointer" FullName="System.Windows.Documents.TextPointer">
  <Metadata><Meta Name="ms.openlocfilehash" Value="bdd4b36d2c90eebad620705886b1c30d54b07ca4" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86711219" /></Metadata><TypeSignature Language="C#" Value="public class TextPointer : System.Windows.Documents.ContentPosition" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TextPointer extends System.Windows.Documents.ContentPosition" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Documents.TextPointer" />
  <TypeSignature Language="VB.NET" Value="Public Class TextPointer&#xA;Inherits ContentPosition" />
  <TypeSignature Language="C++ CLI" Value="public ref class TextPointer : System::Windows::Documents::ContentPosition" />
  <TypeSignature Language="F#" Value="type TextPointer = class&#xA;    inherit ContentPosition" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Documents.ContentPosition</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="a925f-101">Stellt eine Position in einem <see cref="T:System.Windows.Documents.FlowDocument" /> oder <see cref="T:System.Windows.Controls.TextBlock" /> dar.</span><span class="sxs-lookup"><span data-stu-id="a925f-101">Represents a position within a <see cref="T:System.Windows.Documents.FlowDocument" /> or <see cref="T:System.Windows.Controls.TextBlock" />.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a925f-102">Mit der- <xref:System.Windows.Documents.TextPointer> Klasse wird die folgende Terminologie eingeführt:</span><span class="sxs-lookup"><span data-stu-id="a925f-102">The <xref:System.Windows.Documents.TextPointer> class introduces the following terminology:</span></span>  
  
-   <span data-ttu-id="a925f-103">Position: ein <xref:System.Windows.Documents.TextPointer> zeigt immer auf eine *Position* im Inhalt.</span><span class="sxs-lookup"><span data-stu-id="a925f-103">Position - Inherently, a <xref:System.Windows.Documents.TextPointer> always points to a *position* in content.</span></span>  <span data-ttu-id="a925f-104">Diese Positionen liegen entweder zwischen Zeichen im Inhalt oder zwischen fortlaufenden Inhalts Element-Tags, die die Struktur für den Inhalt definieren.</span><span class="sxs-lookup"><span data-stu-id="a925f-104">Such positions either fall between characters in the content, or between flow content element tags that define structure for the content.</span></span>  
  
-   <span data-ttu-id="a925f-105">Aktuelle Position-da ein-Wert <xref:System.Windows.Documents.TextPointer> immer eine Position angibt und viele der Vorgänge, die über einen ausgeführt werden können, <xref:System.Windows.Documents.TextPointer> relativ zu der Position sind, auf die derzeit von verwiesen wird <xref:System.Windows.Documents.TextPointer> , ist es sinnvoll, einfach auf die Position zu verweisen, die von einer <xref:System.Windows.Documents.TextPointer> als *aktuelle Position*angegeben wird.</span><span class="sxs-lookup"><span data-stu-id="a925f-105">Current Position - Because a <xref:System.Windows.Documents.TextPointer> always indicates a position, and because many of the operations that can be performed through a <xref:System.Windows.Documents.TextPointer> are relative to the position currently pointed to by the <xref:System.Windows.Documents.TextPointer>, it makes sense to simply refer to the position indicated by a <xref:System.Windows.Documents.TextPointer> as the *current position*.</span></span>  
  
-   <span data-ttu-id="a925f-106">Einfügeposition: eine *Einfügeposition* ist eine Position, an der neuer Inhalt hinzugefügt werden kann, ohne dass alle semantischen Regeln für den zugeordneten Inhalt</span><span class="sxs-lookup"><span data-stu-id="a925f-106">Insertion Position - An *insertion position* is a position where new content may be added without breaking any semantic rules for the associated content.</span></span>  <span data-ttu-id="a925f-107">In der Praxis befindet sich eine Einfügemarke an einer beliebigen Stelle im Inhalt, an der ein Caretzeichen positioniert werden</span><span class="sxs-lookup"><span data-stu-id="a925f-107">In practice, an insertion position is anywhere in content where a caret may be positioned.</span></span>  <span data-ttu-id="a925f-108">Ein Beispiel für eine gültige <xref:System.Windows.Documents.TextPointer> Position, bei der es sich nicht um eine Einfügeposition handelt, ist die Position zwischen zwei angrenzenden Tags (d. h. <xref:System.Windows.Documents.Paragraph> zwischen dem schließenden Tag des vorangehenden Absatzes und dem öffnenden Tag des nächsten Absatzes).</span><span class="sxs-lookup"><span data-stu-id="a925f-108">An example of a valid <xref:System.Windows.Documents.TextPointer> position that is not an insertion position is the position between two adjacent <xref:System.Windows.Documents.Paragraph> tags (that is, between the closing tag of the preceding paragraph and the opening tag of the next paragraph).</span></span>  
  
-   <span data-ttu-id="a925f-109">Symbol <xref:System.Windows.Documents.TextPointer> : bei Vorgängen, die Symbole einschließen, gilt Folgendes als *Symbol*:</span><span class="sxs-lookup"><span data-stu-id="a925f-109">Symbol - For the purposes of <xref:System.Windows.Documents.TextPointer> operations that involve symbols, any of the following is considered to be a *symbol*:</span></span>  
  
    -   <span data-ttu-id="a925f-110">Ein öffnendes oder Schließ Endes Tag für ein- <xref:System.Windows.Documents.TextElement> Element.</span><span class="sxs-lookup"><span data-stu-id="a925f-110">An opening or closing tag for a <xref:System.Windows.Documents.TextElement> element.</span></span>  
  
    -   <span data-ttu-id="a925f-111">Ein-Element, das <xref:System.Windows.UIElement> in einem oder einem enthalten ist <xref:System.Windows.Documents.InlineUIContainer> <xref:System.Windows.Documents.BlockUIContainer> .</span><span class="sxs-lookup"><span data-stu-id="a925f-111">A <xref:System.Windows.UIElement> element contained within an <xref:System.Windows.Documents.InlineUIContainer> or <xref:System.Windows.Documents.BlockUIContainer>.</span></span>  <span data-ttu-id="a925f-112">Beachten Sie, dass ein solcher Wert <xref:System.Windows.UIElement> immer als genau ein Symbol gezählt wird; alle zusätzlichen Inhalte oder Elemente, die in der enthalten <xref:System.Windows.UIElement> sind, werden nicht als Symbole gezählt.</span><span class="sxs-lookup"><span data-stu-id="a925f-112">Note that such a <xref:System.Windows.UIElement> is always counted as exactly one symbol; any additional content or elements contained by the <xref:System.Windows.UIElement> are not counted as symbols.</span></span>  
  
    -   <span data-ttu-id="a925f-113">Jedes 16-Bit- [!INCLUDE[TLA#tla_unicode](~/includes/tlasharptla-unicode-md.md)] Zeichen in einem Text <xref:System.Windows.Documents.Run> Element.</span><span class="sxs-lookup"><span data-stu-id="a925f-113">Each 16-bit [!INCLUDE[TLA#tla_unicode](~/includes/tlasharptla-unicode-md.md)] character inside of a text <xref:System.Windows.Documents.Run> element.</span></span>  
  
-   <span data-ttu-id="a925f-114">Text Container: ein *Text Container* ist das Element, das den endgültigen Rahmen für den Flow-Inhalt bildet. die von einem gekennzeichnete Position <xref:System.Windows.Documents.TextPointer> liegt immer innerhalb eines Text Containers.</span><span class="sxs-lookup"><span data-stu-id="a925f-114">Text Container - A *text container* is the element that forms the ultimate border for the flow content at hand; the position indicated by a <xref:System.Windows.Documents.TextPointer> always falls within a text container.</span></span>  <span data-ttu-id="a925f-115">Derzeit muss ein Text Container entweder ein <xref:System.Windows.Documents.FlowDocument> oder ein sein <xref:System.Windows.Controls.TextBlock> .</span><span class="sxs-lookup"><span data-stu-id="a925f-115">Currently, a text container must be either a <xref:System.Windows.Documents.FlowDocument> or a <xref:System.Windows.Controls.TextBlock>.</span></span>  <span data-ttu-id="a925f-116">Im Allgemeinen werden Vorgänge zwischen <xref:System.Windows.Documents.TextPointer> Instanzen in unterschiedlichen Text Containern nicht unterstützt.</span><span class="sxs-lookup"><span data-stu-id="a925f-116">Generally speaking, operations between <xref:System.Windows.Documents.TextPointer> instances in different text containers are not supported.</span></span>  
  
-   <span data-ttu-id="a925f-117">Document: der Inhalt in einem Text Container wird als *Dokument*bezeichnet, wie in der- <xref:System.Windows.Documents.TextPointer.IsInSameDocument%2A> Methode und den <xref:System.Windows.Documents.TextPointer.DocumentStart%2A> -und- <xref:System.Windows.Documents.TextPointer.DocumentEnd%2A> Eigenschaften.</span><span class="sxs-lookup"><span data-stu-id="a925f-117">Document - The content in a text container is referred to as a *document*, as in the <xref:System.Windows.Documents.TextPointer.IsInSameDocument%2A> method and the <xref:System.Windows.Documents.TextPointer.DocumentStart%2A> and <xref:System.Windows.Documents.TextPointer.DocumentEnd%2A> properties.</span></span>  
  
 <span data-ttu-id="a925f-118">Die-Klasse soll das Traversieren <xref:System.Windows.Documents.TextPointer> und manipulieren von Inhalten erleichtern, die durch fortlaufende [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] Inhaltselemente dargestellt werden. im Allgemeinen werden solche Elemente von abgeleitet <xref:System.Windows.Documents.TextElement> .</span><span class="sxs-lookup"><span data-stu-id="a925f-118">The <xref:System.Windows.Documents.TextPointer> class is intended to facilitate traversal and manipulation of content that is represented by [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] flow content elements; in general, such elements derive from <xref:System.Windows.Documents.TextElement>.</span></span>  <span data-ttu-id="a925f-119">Zu den Vorgängen, die von vereinfacht werden, <xref:System.Windows.Documents.TextPointer> zählen die folgenden:</span><span class="sxs-lookup"><span data-stu-id="a925f-119">Some of the operations that <xref:System.Windows.Documents.TextPointer> facilitates include the following:</span></span>  
  
-   <span data-ttu-id="a925f-120">Führt einen Ordinalvergleich der aktuellen Position mit einer zweiten angegebenen Position aus.</span><span class="sxs-lookup"><span data-stu-id="a925f-120">Perform an ordinal comparison of the current position with a second specified position.</span></span>  <span data-ttu-id="a925f-121">Siehe die- <xref:System.Windows.Documents.TextPointer.CompareTo%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="a925f-121">See the <xref:System.Windows.Documents.TextPointer.CompareTo%2A> method.</span></span>  
  
-   <span data-ttu-id="a925f-122">Bestimmen Sie den Inhaltstyp, der an der aktuellen Position in einer angegebenen Richtung angrenzt.</span><span class="sxs-lookup"><span data-stu-id="a925f-122">Determine the type of content adjacent to the current position in a specified direction.</span></span>  <span data-ttu-id="a925f-123">Siehe die <xref:System.Windows.Documents.TextPointer.GetPointerContext%2A> -Methode und- <xref:System.Windows.Documents.TextPointerContext> Enumeration.</span><span class="sxs-lookup"><span data-stu-id="a925f-123">See the <xref:System.Windows.Documents.TextPointer.GetPointerContext%2A> method and <xref:System.Windows.Documents.TextPointerContext> enumeration.</span></span>  
  
-   <span data-ttu-id="a925f-124">Dient zum Beziehen der <xref:System.Windows.Documents.TextElement> Bereiche oder der aktuellen Position.</span><span class="sxs-lookup"><span data-stu-id="a925f-124">Get the <xref:System.Windows.Documents.TextElement> that scopes or is adjacent to the current position.</span></span>  <span data-ttu-id="a925f-125">Siehe <xref:System.Windows.Documents.Paragraph> und die- <xref:System.Windows.Documents.TextPointer.GetAdjacentElement%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="a925f-125">See <xref:System.Windows.Documents.Paragraph> and the <xref:System.Windows.Documents.TextPointer.GetAdjacentElement%2A> method.</span></span>  
  
-   <span data-ttu-id="a925f-126">Den Text Container zum Gültigkeitsbereich des aktuellen Dokuments.</span><span class="sxs-lookup"><span data-stu-id="a925f-126">Get the text container that scopes the current document.</span></span>  <span data-ttu-id="a925f-127">Weitere Informationen finden Sie unter der <xref:System.Windows.Documents.TextPointer.Parent%2A>-Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="a925f-127">See the <xref:System.Windows.Documents.TextPointer.Parent%2A> property.</span></span>  
  
-   <span data-ttu-id="a925f-128">Gibt eine angegebene Anzahl von Zeichen an, die der aktuellen Position vorangestellt oder folgt.</span><span class="sxs-lookup"><span data-stu-id="a925f-128">Get a specified number of characters preceding or following the current position.</span></span>  <span data-ttu-id="a925f-129">Siehe die- <xref:System.Windows.Documents.TextPointer.GetTextInRun%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="a925f-129">See the <xref:System.Windows.Documents.TextPointer.GetTextInRun%2A> method.</span></span>  
  
-   <span data-ttu-id="a925f-130">Fügt eine Zeichenfolge an der aktuellen Position ein.</span><span class="sxs-lookup"><span data-stu-id="a925f-130">Insert a string of characters at the current position.</span></span>  <span data-ttu-id="a925f-131">Siehe die- <xref:System.Windows.Documents.TextPointer.InsertTextInRun%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="a925f-131">See the <xref:System.Windows.Documents.TextPointer.InsertTextInRun%2A> method.</span></span>  
  
-   <span data-ttu-id="a925f-132">Zeilen Grenzen im Inhalt suchen.</span><span class="sxs-lookup"><span data-stu-id="a925f-132">Find line boundaries in content.</span></span>  <span data-ttu-id="a925f-133">Siehe die <xref:System.Windows.Documents.TextPointer.GetLineStartPosition%2A> -Methode und die- <xref:System.Windows.Documents.TextPointer.IsAtLineStartPosition%2A> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="a925f-133">See the <xref:System.Windows.Documents.TextPointer.GetLineStartPosition%2A> method and <xref:System.Windows.Documents.TextPointer.IsAtLineStartPosition%2A> property.</span></span>  
  
-   <span data-ttu-id="a925f-134">Übersetzt zwischen <xref:System.Windows.Documents.TextPointer> Positionen und Symbol Offsets in den Inhalt.</span><span class="sxs-lookup"><span data-stu-id="a925f-134">Translate between <xref:System.Windows.Documents.TextPointer> positions and symbol offsets into content.</span></span>  <span data-ttu-id="a925f-135">Siehe die <xref:System.Windows.Documents.TextPointer.GetOffsetToPosition%2A> <xref:System.Windows.Documents.TextPointer.GetPositionAtOffset%2A> Methoden und.</span><span class="sxs-lookup"><span data-stu-id="a925f-135">See the <xref:System.Windows.Documents.TextPointer.GetOffsetToPosition%2A> and <xref:System.Windows.Documents.TextPointer.GetPositionAtOffset%2A> methods.</span></span>  
  
-   <span data-ttu-id="a925f-136">Ausführen von visuellen Treffer Tests durch übersetzen zwischen einer <xref:System.Windows.Documents.TextPointer> Position und einem, das <xref:System.Windows.Point> relative Koordinaten darstellt.</span><span class="sxs-lookup"><span data-stu-id="a925f-136">Perform visual hit testing by translating between a <xref:System.Windows.Documents.TextPointer> position and a <xref:System.Windows.Point> representing relative coordinates.</span></span>  
  
-   <span data-ttu-id="a925f-137">Sucht eine Einfügeposition in der Nähe oder überprüft, ob die aktuelle Position eine Einfügeposition ist.</span><span class="sxs-lookup"><span data-stu-id="a925f-137">Find a nearby insertion position, or check whether the current position is an insertion position.</span></span>  <span data-ttu-id="a925f-138">Siehe die <xref:System.Windows.Documents.TextPointer.GetInsertionPosition%2A> <xref:System.Windows.Documents.TextPointer.GetNextInsertionPosition%2A> Methoden und und die- <xref:System.Windows.Documents.TextPointer.IsAtInsertionPosition%2A> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="a925f-138">See the <xref:System.Windows.Documents.TextPointer.GetInsertionPosition%2A> and <xref:System.Windows.Documents.TextPointer.GetNextInsertionPosition%2A> methods and the <xref:System.Windows.Documents.TextPointer.IsAtInsertionPosition%2A> property.</span></span>  
  
 <span data-ttu-id="a925f-139">Die Position, die <xref:System.Windows.Documents.TextPointer.LogicalDirection%2A> von einem-Objekt angegeben wird, <xref:System.Windows.Documents.TextPointer> ist unveränderlich.</span><span class="sxs-lookup"><span data-stu-id="a925f-139">The position and <xref:System.Windows.Documents.TextPointer.LogicalDirection%2A> indicated by a <xref:System.Windows.Documents.TextPointer> object are immutable.</span></span>  <span data-ttu-id="a925f-140">Wenn der Inhalt bearbeitet oder geändert wird, ändert sich die von einem angegebener Position <xref:System.Windows.Documents.TextPointer> nicht relativ zum umgebenden Text; stattdessen wird der Offset dieser Position vom Anfang des Inhalts entsprechend angepasst, um die neue relative Position im Inhalt widerzuspiegeln.</span><span class="sxs-lookup"><span data-stu-id="a925f-140">When content is edited or modified, the position indicated by a <xref:System.Windows.Documents.TextPointer> does not change relative to the surrounding text; rather the offset of that position from the beginning of content is adjusted correspondingly to reflect the new relative position in content.</span></span>  <span data-ttu-id="a925f-141">Beispielsweise zeigt ein- <xref:System.Windows.Documents.TextPointer> Wert, der eine Position am Anfang eines bestimmten Absatzes angibt, weiterhin auf den Anfang dieses Absatzes, auch wenn Inhalt vor oder nach dem Absatz eingefügt oder gelöscht wird.</span><span class="sxs-lookup"><span data-stu-id="a925f-141">For example, a <xref:System.Windows.Documents.TextPointer> that indicates a position at the beginning of a given paragraph continues to point to the beginning of that paragraph even when content is inserted or deleted before or after the paragraph.</span></span>  
  
 <span data-ttu-id="a925f-142">Die-Klasse stellt keine <xref:System.Windows.Documents.TextPointer> öffentlichen Konstruktoren bereit.</span><span class="sxs-lookup"><span data-stu-id="a925f-142">The <xref:System.Windows.Documents.TextPointer> class does not provide any public constructors.</span></span>  <span data-ttu-id="a925f-143">Eine Instanz von <xref:System.Windows.Documents.TextPointer> wird mithilfe von Eigenschaften oder Methoden anderer Objekte (einschließlich anderer <xref:System.Windows.Documents.TextPointer> Objekte) erstellt.</span><span class="sxs-lookup"><span data-stu-id="a925f-143">An instance of <xref:System.Windows.Documents.TextPointer> is created by using properties or methods of other objects (including other <xref:System.Windows.Documents.TextPointer> objects).</span></span> <span data-ttu-id="a925f-144">Die folgende Liste enthält einige Beispiele für Methoden und Eigenschaften, mit denen ein erstellt und zurückgegeben wird <xref:System.Windows.Documents.TextPointer> .</span><span class="sxs-lookup"><span data-stu-id="a925f-144">The following list provides a few examples of methods and properties that create and return a <xref:System.Windows.Documents.TextPointer>.</span></span>  <span data-ttu-id="a925f-145">Diese Liste ist nicht vollständig:</span><span class="sxs-lookup"><span data-stu-id="a925f-145">This list is not exhaustive:</span></span>  
  
-   <span data-ttu-id="a925f-146">Aus einem <xref:System.Windows.Documents.TextRange> : <xref:System.Windows.Documents.TextRange.Start%2A> und <xref:System.Windows.Documents.TextRange.End%2A> .</span><span class="sxs-lookup"><span data-stu-id="a925f-146">From a <xref:System.Windows.Documents.TextRange>: <xref:System.Windows.Documents.TextRange.Start%2A> and <xref:System.Windows.Documents.TextRange.End%2A>.</span></span>  
  
-   <span data-ttu-id="a925f-147">Von einem <xref:System.Windows.Documents.TextElement> :  <xref:System.Windows.Documents.TextElement.ContentStart%2A> , <xref:System.Windows.Documents.TextElement.ContentEnd%2A> , <xref:System.Windows.Documents.TextElement.ElementStart%2A> und <xref:System.Windows.Documents.TextElement.ElementEnd%2A> .</span><span class="sxs-lookup"><span data-stu-id="a925f-147">From a <xref:System.Windows.Documents.TextElement>:  <xref:System.Windows.Documents.TextElement.ContentStart%2A>, <xref:System.Windows.Documents.TextElement.ContentEnd%2A>, <xref:System.Windows.Documents.TextElement.ElementStart%2A>, and <xref:System.Windows.Documents.TextElement.ElementEnd%2A>.</span></span>  
  
-   <span data-ttu-id="a925f-148">Aus einem <xref:System.Windows.Controls.TextBlock> (Text Container): <xref:System.Windows.Controls.TextBlock.ContentStart%2A> , <xref:System.Windows.Controls.TextBlock.ContentEnd%2A> und <xref:System.Windows.Controls.TextBlock.GetPositionFromPoint%2A> .</span><span class="sxs-lookup"><span data-stu-id="a925f-148">From a <xref:System.Windows.Controls.TextBlock> (text container): <xref:System.Windows.Controls.TextBlock.ContentStart%2A>, <xref:System.Windows.Controls.TextBlock.ContentEnd%2A>, and <xref:System.Windows.Controls.TextBlock.GetPositionFromPoint%2A>.</span></span>  
  
-   <span data-ttu-id="a925f-149">Aus einem <xref:System.Windows.Documents.FlowDocument> (Text Container): <xref:System.Windows.Documents.FlowDocument.ContentStart%2A> , und <xref:System.Windows.Documents.FlowDocument.ContentEnd%2A></span><span class="sxs-lookup"><span data-stu-id="a925f-149">From a <xref:System.Windows.Documents.FlowDocument> (text container): <xref:System.Windows.Documents.FlowDocument.ContentStart%2A>, and <xref:System.Windows.Documents.FlowDocument.ContentEnd%2A></span></span>  
  
-   <span data-ttu-id="a925f-150">Aus einer vorhandenen <xref:System.Windows.Documents.TextPointer> : <xref:System.Windows.Documents.TextPointer.DocumentStart%2A> , <xref:System.Windows.Documents.TextPointer.DocumentEnd%2A> , <xref:System.Windows.Documents.TextPointer.GetNextInsertionPosition%2A> und <xref:System.Windows.Documents.TextPointer.GetPositionAtOffset%2A> .</span><span class="sxs-lookup"><span data-stu-id="a925f-150">From an existing <xref:System.Windows.Documents.TextPointer>: <xref:System.Windows.Documents.TextPointer.DocumentStart%2A>, <xref:System.Windows.Documents.TextPointer.DocumentEnd%2A>, <xref:System.Windows.Documents.TextPointer.GetNextInsertionPosition%2A>, and <xref:System.Windows.Documents.TextPointer.GetPositionAtOffset%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a925f-151">Im folgenden Beispiel wird veranschaulicht, wie Sie mit einem eine <xref:System.Windows.Documents.TextPointer> Position direkt innerhalb des ersten <xref:System.Windows.Documents.Run> Elements in einem angegebenen Text Container finden.</span><span class="sxs-lookup"><span data-stu-id="a925f-151">The following example demonstrates how to use a <xref:System.Windows.Documents.TextPointer> to find a position just inside of the first <xref:System.Windows.Documents.Run> element in a specified text container.</span></span>  
  
 [!code-csharp[TextPointer_Snippets#_TextPointer_TextPointer1](~/samples/snippets/csharp/VS_Snippets_Wpf/TextPointer_Snippets/CSharp/Window1.xaml.cs#_textpointer_textpointer1)]
 [!code-vb[TextPointer_Snippets#_TextPointer_TextPointer1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextPointer_Snippets/visualbasic/window1.xaml.vb#_textpointer_textpointer1)]  
  
 <span data-ttu-id="a925f-152">Im folgenden Beispiel wird ein einfacher Suchalgorithmus mithilfe von-Funktionen implementiert <xref:System.Windows.Documents.TextPointer> .</span><span class="sxs-lookup"><span data-stu-id="a925f-152">The following example implements a simplistic find algorithm using <xref:System.Windows.Documents.TextPointer> facilities.</span></span>  
  
 [!code-csharp[TextPointer_Snippets#_TextPointer_TextPointer2](~/samples/snippets/csharp/VS_Snippets_Wpf/TextPointer_Snippets/CSharp/Window1.xaml.cs#_textpointer_textpointer2)]
 [!code-vb[TextPointer_Snippets#_TextPointer_TextPointer2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextPointer_Snippets/visualbasic/window1.xaml.vb#_textpointer_textpointer2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Documents.TextRange" />
    <altmember cref="T:System.Windows.Documents.TextPointerContext" />
    <altmember cref="T:System.Windows.Documents.TextElement" />
  </Docs>
  <Members>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public int CompareTo (System.Windows.Documents.TextPointer position);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 CompareTo(class System.Windows.Documents.TextPointer position) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.TextPointer.CompareTo(System.Windows.Documents.TextPointer)" />
      <MemberSignature Language="VB.NET" Value="Public Function CompareTo (position As TextPointer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int CompareTo(System::Windows::Documents::TextPointer ^ position);" />
      <MemberSignature Language="F#" Value="member this.CompareTo : System.Windows.Documents.TextPointer -&gt; int" Usage="textPointer.CompareTo position" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="position" Type="System.Windows.Documents.TextPointer" />
      </Parameters>
      <Docs>
        <param name="position"><span data-ttu-id="a925f-153">Ein <see cref="T:System.Windows.Documents.TextPointer" />, der eine Position angibt, die mit der aktuellen Position verglichen werden soll.</span><span class="sxs-lookup"><span data-stu-id="a925f-153">A <see cref="T:System.Windows.Documents.TextPointer" /> that specifies a position to compare to the current position.</span></span></param>
        <summary><span data-ttu-id="a925f-154">Führt einen Ordinalvergleich der angegebenen Positionen des aktuellen <see cref="T:System.Windows.Documents.TextPointer" /> und eines anderen <see cref="T:System.Windows.Documents.TextPointer" /> aus.</span><span class="sxs-lookup"><span data-stu-id="a925f-154">Performs an ordinal comparison between the positions specified by the current <see cref="T:System.Windows.Documents.TextPointer" /> and a second specified <see cref="T:System.Windows.Documents.TextPointer" />.</span></span></summary>
        <returns><span data-ttu-id="a925f-155">–1, wenn der aktuelle <see cref="T:System.Windows.Documents.TextPointer" /> vor der <paramref name="position" /> liegt; 0, wenn die Positionen identisch sind; +1, wenn der aktuelle <see cref="T:System.Windows.Documents.TextPointer" /> nach der <paramref name="position" /> liegt.</span><span class="sxs-lookup"><span data-stu-id="a925f-155">-1 if the current <see cref="T:System.Windows.Documents.TextPointer" /> precedes <paramref name="position" />; 0 if the locations are the same; +1 if the current <see cref="T:System.Windows.Documents.TextPointer" /> follows <paramref name="position" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a925f-156">Der Wert-1 gibt an, dass die vom aktuellen angegebene Position vor <xref:System.Windows.Documents.TextPointer> der durch angegebenen Position liegt `position` .</span><span class="sxs-lookup"><span data-stu-id="a925f-156">A value of -1 indicates that the position specified by the current <xref:System.Windows.Documents.TextPointer> precedes the position specified by `position`.</span></span>  <span data-ttu-id="a925f-157">Der Wert 0 gibt an, dass die genannten Positionen gleich sind.</span><span class="sxs-lookup"><span data-stu-id="a925f-157">A value of 0 indicates that the indicated positions are equal.</span></span>  <span data-ttu-id="a925f-158">Der Wert "positiv + 1" gibt an, dass die vom aktuellen angegebene Position <xref:System.Windows.Documents.TextPointer> der durch angegebenen Position folgt `position` .</span><span class="sxs-lookup"><span data-stu-id="a925f-158">A value of positive +1 indicates that the position specified by the current <xref:System.Windows.Documents.TextPointer> follows the position specified by `position`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a925f-159">Im folgenden Beispiel wird eine Verwendung für diese Methode veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="a925f-159">The following example demonstrates a use for this method.</span></span>  <span data-ttu-id="a925f-160">Im Beispiel wird die- <xref:System.Windows.Documents.TextPointer.CompareTo%2A> Methode in Verbindung mit der- <xref:System.Windows.Documents.TextPointer.GetInsertionPosition%2A> Methode verwendet, um zu testen, ob ein angegebenes <xref:System.Windows.Documents.TextElement> leer ist.</span><span class="sxs-lookup"><span data-stu-id="a925f-160">In the example, the <xref:System.Windows.Documents.TextPointer.CompareTo%2A> method is used in conjunction with the <xref:System.Windows.Documents.TextPointer.GetInsertionPosition%2A> method to test whether a specified <xref:System.Windows.Documents.TextElement> is empty.</span></span>  
  
 [!code-csharp[TextPointer_Snippets#_TextPointer_GetInsertionPosition](~/samples/snippets/csharp/VS_Snippets_Wpf/TextPointer_Snippets/CSharp/Window1.xaml.cs#_textpointer_getinsertionposition)]
 [!code-vb[TextPointer_Snippets#_TextPointer_GetInsertionPosition](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextPointer_Snippets/visualbasic/window1.xaml.vb#_textpointer_getinsertionposition)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a925f-161"><paramref name="position" /> gibt eine Position an, die außerhalb des der aktuellen Position zugeordneten Textcontainers liegt.</span><span class="sxs-lookup"><span data-stu-id="a925f-161"><paramref name="position" /> specifies a position outside of the text container associated with the current position.</span></span></exception>
        <altmember cref="M:System.Windows.Documents.TextPointer.IsInSameDocument(System.Windows.Documents.TextPointer)" />
      </Docs>
    </Member>
    <Member MemberName="DeleteTextInRun">
      <MemberSignature Language="C#" Value="public int DeleteTextInRun (int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 DeleteTextInRun(int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.TextPointer.DeleteTextInRun(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function DeleteTextInRun (count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int DeleteTextInRun(int count);" />
      <MemberSignature Language="F#" Value="member this.DeleteTextInRun : int -&gt; int" Usage="textPointer.DeleteTextInRun count" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="count"><span data-ttu-id="a925f-162">Die Anzahl der zu löschenden Zeichen ab der aktuellen Position.</span><span class="sxs-lookup"><span data-stu-id="a925f-162">The number of characters to delete, starting at the current position.</span></span> <span data-ttu-id="a925f-163">Geben Sie einen positiven Wert an, um Zeichen nach der aktuellen Position zu löschen, bzw. einen negativen Wert, um Zeichen vor der aktuellen Position zu löschen.</span><span class="sxs-lookup"><span data-stu-id="a925f-163">Specify a positive value to delete characters that follow the current position; specify a negative value to delete characters that precede the current position.</span></span></param>
        <summary><span data-ttu-id="a925f-164">Löscht die angegebene Anzahl von Zeichen ab der Position, die vom aktuellen <see cref="T:System.Windows.Documents.TextPointer" /> angegeben wird.</span><span class="sxs-lookup"><span data-stu-id="a925f-164">Deletes the specified number of characters from the position indicated by the current <see cref="T:System.Windows.Documents.TextPointer" />.</span></span></summary>
        <returns><span data-ttu-id="a925f-165">Die Anzahl der tatsächlich gelöschten Zeichen.</span><span class="sxs-lookup"><span data-stu-id="a925f-165">The number of characters actually deleted.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a925f-166">Geben Sie einen positiven Wert zum Löschen von Zeichen an, die der aktuellen Position folgen (wie in <xref:System.Windows.Documents.LogicalDirection.Forward?displayProperty=nameWithType> ). Geben Sie einen negativen Wert zum Löschen von Zeichen an, die der aktuellen Position vorangestellt sind (wie in <xref:System.Windows.Documents.LogicalDirection.Backward?displayProperty=nameWithType> ).</span><span class="sxs-lookup"><span data-stu-id="a925f-166">Specify a positive value to delete characters that follow the current position (as in <xref:System.Windows.Documents.LogicalDirection.Forward?displayProperty=nameWithType>); specify a negative value to delete characters that precede the current position (as in <xref:System.Windows.Documents.LogicalDirection.Backward?displayProperty=nameWithType>).</span></span>  
  
 <span data-ttu-id="a925f-167">Die Anzahl der tatsächlich gelöschten Zeichen ist möglicherweise kleiner als die Zahl, die durch angegeben wird `count` .</span><span class="sxs-lookup"><span data-stu-id="a925f-167">The number of characters actually deleted may be less than the number specified by `count`.</span></span>  <span data-ttu-id="a925f-168">Dies geschieht in Fällen, in denen `count` mehr Zeichen als vorhanden sind, die gelöscht werden sollen.</span><span class="sxs-lookup"><span data-stu-id="a925f-168">This happens in cases where `count` specifies more characters than exist to be deleted.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="a925f-169">Die Methode wurde an einer Position aufgerufen, an der Text nicht zulässig ist.</span><span class="sxs-lookup"><span data-stu-id="a925f-169">The method is called at a position where text is not allowed.</span></span></exception>
        <altmember cref="Overload:System.Windows.Documents.TextPointer.GetTextInRun" />
        <altmember cref="M:System.Windows.Documents.TextPointer.InsertTextInRun(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="DocumentEnd">
      <MemberSignature Language="C#" Value="public System.Windows.Documents.TextPointer DocumentEnd { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Documents.TextPointer DocumentEnd" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.TextPointer.DocumentEnd" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DocumentEnd As TextPointer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Documents::TextPointer ^ DocumentEnd { System::Windows::Documents::TextPointer ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DocumentEnd : System.Windows.Documents.TextPointer" Usage="System.Windows.Documents.TextPointer.DocumentEnd" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.TextPointer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a925f-170">Ruft im der aktuellen Position zugeordneten Textcontainer am Ende des Inhalts einen <see cref="T:System.Windows.Documents.TextPointer" /> ab.</span><span class="sxs-lookup"><span data-stu-id="a925f-170">Gets a <see cref="T:System.Windows.Documents.TextPointer" /> at the end of content in the text container associated with the current position.</span></span></summary>
        <value><span data-ttu-id="a925f-171">Ein <see cref="T:System.Windows.Documents.TextPointer" /> am Ende des Inhalts im der aktuellen Position zugeordneten Textcontainer.</span><span class="sxs-lookup"><span data-stu-id="a925f-171">A <see cref="T:System.Windows.Documents.TextPointer" /> at the end of content in the text container associated with the current position.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a925f-172">Der <xref:System.Windows.Documents.TextPointer.Parent%2A> für die zurückgegebene <xref:System.Windows.Documents.TextPointer> ist immer ein Text Container ( <xref:System.Windows.Controls.TextBlock> oder) und <xref:System.Windows.Documents.FlowDocument> nicht ein <xref:System.Windows.Documents.TextElement> .</span><span class="sxs-lookup"><span data-stu-id="a925f-172">The <xref:System.Windows.Documents.TextPointer.Parent%2A> for the returned <xref:System.Windows.Documents.TextPointer> is always a text container (<xref:System.Windows.Controls.TextBlock> or <xref:System.Windows.Documents.FlowDocument>), rather than a <xref:System.Windows.Documents.TextElement>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.TextPointer.DocumentStart" />
      </Docs>
    </Member>
    <Member MemberName="DocumentStart">
      <MemberSignature Language="C#" Value="public System.Windows.Documents.TextPointer DocumentStart { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Documents.TextPointer DocumentStart" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.TextPointer.DocumentStart" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DocumentStart As TextPointer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Documents::TextPointer ^ DocumentStart { System::Windows::Documents::TextPointer ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DocumentStart : System.Windows.Documents.TextPointer" Usage="System.Windows.Documents.TextPointer.DocumentStart" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.TextPointer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a925f-173">Ruft im der aktuellen Position zugeordneten Textcontainer am Anfang des Inhalts einen <see cref="T:System.Windows.Documents.TextPointer" /> ab.</span><span class="sxs-lookup"><span data-stu-id="a925f-173">Gets a <see cref="T:System.Windows.Documents.TextPointer" /> at the beginning of content in the text container associated with the current position.</span></span></summary>
        <value><span data-ttu-id="a925f-174">Ein <see cref="T:System.Windows.Documents.TextPointer" /> am Anfang des Inhalts im der aktuellen Position zugeordneten Textcontainer.</span><span class="sxs-lookup"><span data-stu-id="a925f-174">A <see cref="T:System.Windows.Documents.TextPointer" /> at the beginning of content in the text container associated with the current position.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a925f-175">Verwenden Sie die von dieser Eigenschaft zurückgegebene Position als Baselineversion, von der aus relative Offsets zu anderen Positionen verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="a925f-175">Use the position returned by this property as a baseline position from which to work with relative offsets to other positions.</span></span>  <span data-ttu-id="a925f-176">Die <xref:System.Windows.Documents.TextPointer.GetOffsetToPosition%2A> -Methode und die- <xref:System.Windows.Documents.TextPointer.GetPositionAtOffset%2A> Methode bieten eine Möglichkeit, zwischen Positionen und Positions Offsets zu übersetzen.</span><span class="sxs-lookup"><span data-stu-id="a925f-176">The <xref:System.Windows.Documents.TextPointer.GetOffsetToPosition%2A> and <xref:System.Windows.Documents.TextPointer.GetPositionAtOffset%2A> methods provide a way to translate between positions and position offsets.</span></span>  
  
 <span data-ttu-id="a925f-177">Der <xref:System.Windows.Documents.TextPointer.Parent%2A> für die zurückgegebene <xref:System.Windows.Documents.TextPointer> ist immer ein Text Container ( <xref:System.Windows.Controls.TextBlock> oder) und <xref:System.Windows.Documents.FlowDocument> nicht ein <xref:System.Windows.Documents.TextElement> .</span><span class="sxs-lookup"><span data-stu-id="a925f-177">The <xref:System.Windows.Documents.TextPointer.Parent%2A> for the returned <xref:System.Windows.Documents.TextPointer> is always a text container (<xref:System.Windows.Controls.TextBlock> or <xref:System.Windows.Documents.FlowDocument>), rather than a <xref:System.Windows.Documents.TextElement>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.TextPointer.DocumentEnd" />
      </Docs>
    </Member>
    <Member MemberName="GetAdjacentElement">
      <MemberSignature Language="C#" Value="public System.Windows.DependencyObject GetAdjacentElement (System.Windows.Documents.LogicalDirection direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.DependencyObject GetAdjacentElement(valuetype System.Windows.Documents.LogicalDirection direction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.TextPointer.GetAdjacentElement(System.Windows.Documents.LogicalDirection)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAdjacentElement (direction As LogicalDirection) As DependencyObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::DependencyObject ^ GetAdjacentElement(System::Windows::Documents::LogicalDirection direction);" />
      <MemberSignature Language="F#" Value="member this.GetAdjacentElement : System.Windows.Documents.LogicalDirection -&gt; System.Windows.DependencyObject" Usage="textPointer.GetAdjacentElement direction" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="direction" Type="System.Windows.Documents.LogicalDirection" />
      </Parameters>
      <Docs>
        <param name="direction"><span data-ttu-id="a925f-178">Einer der <see cref="T:System.Windows.Documents.LogicalDirection" />-Werte, mit denen die logische Richtung angegeben wird, in der die Suche nach einem benachbarten Element erfolgen soll.</span><span class="sxs-lookup"><span data-stu-id="a925f-178">One of the <see cref="T:System.Windows.Documents.LogicalDirection" /> values that specifies the logical direction in which to search for an adjacent element.</span></span></param>
        <summary><span data-ttu-id="a925f-179">Gibt ggf. das Element zurück, das in der angegebenen logischen Richtung an den aktuellen <see cref="T:System.Windows.Documents.TextPointer" /> grenzt.</span><span class="sxs-lookup"><span data-stu-id="a925f-179">Returns the element, if any, that borders the current <see cref="T:System.Windows.Documents.TextPointer" /> in the specified logical direction.</span></span></summary>
        <returns><span data-ttu-id="a925f-180">Das benachbarte Element in der angegebenen <paramref name="direction" /> oder <see langword="null" />, wenn kein benachbartes Element vorhanden ist.</span><span class="sxs-lookup"><span data-stu-id="a925f-180">The adjacent element in the specified <paramref name="direction" />, or <see langword="null" /> if no adjacent element exists.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a925f-181">Das zurückgegebene Element ist in der Regel ein <xref:System.Windows.Documents.TextElement> .</span><span class="sxs-lookup"><span data-stu-id="a925f-181">The returned element is typically a <xref:System.Windows.Documents.TextElement>.</span></span>  <span data-ttu-id="a925f-182">Eine <xref:System.Windows.UIElement> kann zurückgegeben werden, wenn das <xref:System.Windows.Documents.TextPointer> eine Position in einem- <xref:System.Windows.Documents.BlockUIContainer> Element oder einem- <xref:System.Windows.Documents.InlineUIContainer> Element angibt.</span><span class="sxs-lookup"><span data-stu-id="a925f-182">A <xref:System.Windows.UIElement> can be returned when the <xref:System.Windows.Documents.TextPointer> indicates a position inside a <xref:System.Windows.Documents.BlockUIContainer> element or an <xref:System.Windows.Documents.InlineUIContainer> element.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.TextPointer.Parent" />
      </Docs>
    </Member>
    <Member MemberName="GetCharacterRect">
      <MemberSignature Language="C#" Value="public System.Windows.Rect GetCharacterRect (System.Windows.Documents.LogicalDirection direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Windows.Rect GetCharacterRect(valuetype System.Windows.Documents.LogicalDirection direction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.TextPointer.GetCharacterRect(System.Windows.Documents.LogicalDirection)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCharacterRect (direction As LogicalDirection) As Rect" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Rect GetCharacterRect(System::Windows::Documents::LogicalDirection direction);" />
      <MemberSignature Language="F#" Value="member this.GetCharacterRect : System.Windows.Documents.LogicalDirection -&gt; System.Windows.Rect" Usage="textPointer.GetCharacterRect direction" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Rect</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="direction" Type="System.Windows.Documents.LogicalDirection" />
      </Parameters>
      <Docs>
        <param name="direction"><span data-ttu-id="a925f-183">Einer der <see cref="T:System.Windows.Documents.LogicalDirection" />-Werte, mit denen die logische Richtung angegeben wird, in der die Suche nach einem umgebenden Feld für Inhalt erfolgen soll.</span><span class="sxs-lookup"><span data-stu-id="a925f-183">One of the <see cref="T:System.Windows.Documents.LogicalDirection" /> values that specifies the logical direction in which to find a content bounding box.</span></span></param>
        <summary><span data-ttu-id="a925f-184">Gibt ein umgebendes Feld (<see cref="T:System.Windows.Rect" />) für Inhalt zurück, der in der angegebenen logischen Richtung an den aktuellen <see cref="T:System.Windows.Documents.TextPointer" /> grenzt.</span><span class="sxs-lookup"><span data-stu-id="a925f-184">Returns a bounding box (<see cref="T:System.Windows.Rect" />) for content that borders the current <see cref="T:System.Windows.Documents.TextPointer" /> in the specified logical direction.</span></span></summary>
        <returns><span data-ttu-id="a925f-185">Ein umgebendes Feld für Inhalt, der in der angegebenen Richtung an den aktuellen <see cref="T:System.Windows.Documents.TextPointer" /> grenzt, oder <see cref="P:System.Windows.Rect.Empty" />, wenn keine aktuellen und gültigen Layoutinformationen verfügbar sind.</span><span class="sxs-lookup"><span data-stu-id="a925f-185">A bounding box for content that borders the current <see cref="T:System.Windows.Documents.TextPointer" /> in the specified direction, or <see cref="P:System.Windows.Rect.Empty" /> if current, valid layout information is unavailable.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a925f-186"><xref:System.Windows.Documents.TextElement> Kanten werden für diese Methode nicht als Inhalt betrachtet.</span><span class="sxs-lookup"><span data-stu-id="a925f-186"><xref:System.Windows.Documents.TextElement> edges are not considered content for the purposes of this method.</span></span>  <span data-ttu-id="a925f-187">Wenn das- <xref:System.Windows.Documents.TextPointer> Feld vor einem <xref:System.Windows.Documents.TextElement> Rand positioniert ist, ist der Rückgabewert ein Begrenzungs Rahmen für den nächsten nicht- <xref:System.Windows.Documents.TextElement> Inhalt in der angegebenen Richtung.</span><span class="sxs-lookup"><span data-stu-id="a925f-187">If the <xref:System.Windows.Documents.TextPointer> is positioned before a <xref:System.Windows.Documents.TextElement> edge, the return value is a bounding box for the next non-<xref:System.Windows.Documents.TextElement> content in the specified direction.</span></span>  <span data-ttu-id="a925f-188">Wenn kein Inhalt in der angegebenen Richtung vorhanden ist, wird eine Breite von 0 (null) <xref:System.Windows.Rect> zurückgegeben, wobei eine Höhe mit der Höhe eines vorangehenden Inhalts übereinstimmt.</span><span class="sxs-lookup"><span data-stu-id="a925f-188">If there is no content in the specified direction, a zero-width <xref:System.Windows.Rect> is returned with a height matching the height of any preceding content.</span></span>  
  
 <span data-ttu-id="a925f-189">Der von dieser Methode ausgeführte Vorgang hängt von einem gültigen Layout ab.</span><span class="sxs-lookup"><span data-stu-id="a925f-189">The operation performed by this method depends on a valid layout.</span></span>  <span data-ttu-id="a925f-190">Bei Bedarf versucht diese Methode, ein gültiges Layout automatisch neu zu generieren, bevor der Vorgang fortgesetzt wird.</span><span class="sxs-lookup"><span data-stu-id="a925f-190">When necessary, this method attempts to automatically regenerate a valid layout before proceeding with the operation.</span></span>  <span data-ttu-id="a925f-191">Das erneute Generieren eines Layouts kann ein relativ kostspieliger Vorgang sein.</span><span class="sxs-lookup"><span data-stu-id="a925f-191">Regenerating a layout can be a relatively expensive operation.</span></span>  <span data-ttu-id="a925f-192">Verwenden Sie die- <xref:System.Windows.Documents.TextPointer.HasValidLayout%2A> Eigenschaft, um ein gültiges Layout zu suchen, bevor Sie Vorgänge ausführen, die das Layout möglicherweise erneut generieren</span><span class="sxs-lookup"><span data-stu-id="a925f-192">Use the <xref:System.Windows.Documents.TextPointer.HasValidLayout%2A> property to check for a valid layout before performing operations that may regenerate the layout.</span></span>  <span data-ttu-id="a925f-193">Weitere Informationen finden Sie unter [Layout](/dotnet/framework/wpf/advanced/layout).</span><span class="sxs-lookup"><span data-stu-id="a925f-193">For more information, see [Layout](/dotnet/framework/wpf/advanced/layout).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.TextPointer.HasValidLayout" />
      </Docs>
    </Member>
    <Member MemberName="GetInsertionPosition">
      <MemberSignature Language="C#" Value="public System.Windows.Documents.TextPointer GetInsertionPosition (System.Windows.Documents.LogicalDirection direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Documents.TextPointer GetInsertionPosition(valuetype System.Windows.Documents.LogicalDirection direction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.TextPointer.GetInsertionPosition(System.Windows.Documents.LogicalDirection)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetInsertionPosition (direction As LogicalDirection) As TextPointer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Documents::TextPointer ^ GetInsertionPosition(System::Windows::Documents::LogicalDirection direction);" />
      <MemberSignature Language="F#" Value="member this.GetInsertionPosition : System.Windows.Documents.LogicalDirection -&gt; System.Windows.Documents.TextPointer" Usage="textPointer.GetInsertionPosition direction" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.TextPointer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="direction" Type="System.Windows.Documents.LogicalDirection" />
      </Parameters>
      <Docs>
        <param name="direction"><span data-ttu-id="a925f-194">Einer der <see cref="T:System.Windows.Documents.LogicalDirection" />-Werte, mit denen die logische Richtung angegeben wird, in der die Suche nach der nächsten Einfügeposition erfolgen soll.</span><span class="sxs-lookup"><span data-stu-id="a925f-194">One of the <see cref="T:System.Windows.Documents.LogicalDirection" /> values that specifies the logical direction in which to search for the closest insertion position.</span></span></param>
        <summary><span data-ttu-id="a925f-195">Gibt in der angegebenen logischen Richtung an der nächsten Einfügeposition einen <see cref="T:System.Windows.Documents.TextPointer" /> zurück.</span><span class="sxs-lookup"><span data-stu-id="a925f-195">Returns a <see cref="T:System.Windows.Documents.TextPointer" /> to the closest insertion position in the specified logical direction.</span></span></summary>
        <returns><span data-ttu-id="a925f-196">Ein <see cref="T:System.Windows.Documents.TextPointer" /> an der nächsten Einfügeposition in der angegebenen Richtung.</span><span class="sxs-lookup"><span data-stu-id="a925f-196">A <see cref="T:System.Windows.Documents.TextPointer" /> to the closest insertion position in the specified direction.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a925f-197">Eine Einfügeposition ist eine Position, an der neuer Inhalt hinzugefügt werden kann, ohne dass alle semantischen Regeln für den zugehörigen Inhalt unterbrochen werden</span><span class="sxs-lookup"><span data-stu-id="a925f-197">An insertion position is a position where new content may be added without breaking any semantic rules for the associated content.</span></span>  <span data-ttu-id="a925f-198">In der Praxis befindet sich eine Einfügemarke an einer beliebigen Stelle im Inhalt, an der ein Caretzeichen positioniert werden</span><span class="sxs-lookup"><span data-stu-id="a925f-198">In practice, an insertion position is anywhere in content where a caret may be positioned.</span></span>  <span data-ttu-id="a925f-199">Ein Beispiel für eine gültige <xref:System.Windows.Documents.TextPointer> Position, bei der es sich nicht um eine Einfügeposition handelt, ist die Position zwischen zwei angrenzenden Tags (d. h. <xref:System.Windows.Documents.Paragraph> zwischen dem schließenden Tag des vorangehenden Absatzes und dem öffnenden Tag des nächsten Absatzes).</span><span class="sxs-lookup"><span data-stu-id="a925f-199">An example of a valid <xref:System.Windows.Documents.TextPointer> position that is not an insertion position is the position between two adjacent <xref:System.Windows.Documents.Paragraph> tags (that is, between the closing tag of the preceding paragraph and the opening tag of the next paragraph).</span></span>  
  
 <span data-ttu-id="a925f-200">Wenn der <xref:System.Windows.Documents.TextPointer> bereits auf eine gültige Einfügeposition zeigt, aber das Endtag für eine nicht leere Formatierungs Sequenz direkt an diese Position in der angegebenen Richtung folgt, <xref:System.Windows.Documents.TextPointer> wird der von dieser Methode zurückgegebene so angepasst, dass er auf die Einfügeposition unmittelbar nach dem Schließen der Formatierungs Sequenz zeigt.</span><span class="sxs-lookup"><span data-stu-id="a925f-200">If the <xref:System.Windows.Documents.TextPointer> already points to a valid insertion position, but the closing tag for a non-empty formatting sequence directly follows that position in the given direction, then the <xref:System.Windows.Documents.TextPointer> returned by this method is adjusted to point to the insertion position just after the close of the formatting sequence.</span></span> <span data-ttu-id="a925f-201">Sehen Sie sich beispielsweise die Markup Sequenz an `<Bold>a</Bold>b` .</span><span class="sxs-lookup"><span data-stu-id="a925f-201">For example, consider the markup sequence `<Bold>a</Bold>b`.</span></span> <span data-ttu-id="a925f-202">Beachten Sie, dass es zwei Einfügepositionen zwischen den Buchstaben `a` und `b` -eins gibt, das dem schließenden `Bold` Tag vorangestellt ist, und eines direkt nach dem schließenden `Bold` Tag.</span><span class="sxs-lookup"><span data-stu-id="a925f-202">Note that there are two insertion positions between the letters `a` and `b` - one that precedes the closing `Bold` tag, and one directly following the closing `Bold` tag.</span></span> <span data-ttu-id="a925f-203">Wenn für <xref:System.Windows.Documents.TextPointer.GetInsertionPosition%2A> eine auf <xref:System.Windows.Documents.TextPointer> die Position direkt nach dem Buchstaben `a` und vor dem schließenden `Bold` Tag und mit einem von aufgerufen wird, `direction` <xref:System.Windows.Documents.LogicalDirection.Forward> wird die zurückgegebene <xref:System.Windows.Documents.TextPointer> so angepasst, dass Sie auf die Position unmittelbar vor dem Buchstaben hinter `b` dem schließenden Tag verweist `Bold` .</span><span class="sxs-lookup"><span data-stu-id="a925f-203">If <xref:System.Windows.Documents.TextPointer.GetInsertionPosition%2A> is called on a <xref:System.Windows.Documents.TextPointer> to the position directly after the letter `a` and before of the closing `Bold` tag, and with a `direction` of <xref:System.Windows.Documents.LogicalDirection.Forward>, the returned <xref:System.Windows.Documents.TextPointer> is adjusted to point to the position just before the letter `b`, after the closing `Bold` tag.</span></span> <span data-ttu-id="a925f-204">Beim Arbeiten in umgekehrter logischer Richtung wird eine ähnliche Anpassung zum Öffnen von Formatierungs Tags vorgenommen.</span><span class="sxs-lookup"><span data-stu-id="a925f-204">A similar adjustment is made for opening formatting tags when working in the opposite logical direction.</span></span> <span data-ttu-id="a925f-205">Diese Methode soll ein Mittel für die Mehrdeutigkeit zwischen Einfügepositionen in ähnlichen Fällen bereitstellen.</span><span class="sxs-lookup"><span data-stu-id="a925f-205">This method is intended to provide a means of disambiguation between insertion positions in similar cases.</span></span>  
  
 <span data-ttu-id="a925f-206">Diese Methode kann auch verwendet werden, um bei einfügepunkten selektiv zu sein, wenn eine Sequenz von strukturellen Tags beteiligt ist.</span><span class="sxs-lookup"><span data-stu-id="a925f-206">This method can also be used to be selective about insertion points when a sequence of structural tags is involved.</span></span> <span data-ttu-id="a925f-207">Wenn z. b. an einer Position zwischen schließenden und öffnenden Absatz Tags verwendet wird, kann der Direction-Parameter verwendet werden, um am Anfang des folgenden Absatzes (durch Angabe von <xref:System.Windows.Documents.LogicalDirection.Forward?displayProperty=nameWithType> ) oder am Ende des vorangehenden Absatzes (durch Angabe von) den nächstgelegenen Einfügepunkt auszuwählen <xref:System.Windows.Documents.LogicalDirection.Backward?displayProperty=nameWithType> .</span><span class="sxs-lookup"><span data-stu-id="a925f-207">For example, when at a position between closing and opening paragraph tags, the direction parameter can be used to select the closest insertion point at the beginning of the following paragraph (by specifying <xref:System.Windows.Documents.LogicalDirection.Forward?displayProperty=nameWithType>) or at the end of the preceding paragraph (by specifying <xref:System.Windows.Documents.LogicalDirection.Backward?displayProperty=nameWithType>).</span></span>  
  
 <span data-ttu-id="a925f-208">Wenn sich der Zeiger bereits an der Einfügemarke befindet und keine angrenzenden Formatierungs Tags in der angegebenen vorhanden sind `direction` , verweist der zurückgegebene <xref:System.Windows.Documents.TextPointer> auf dieselbe Position wie der aufrufende <xref:System.Windows.Documents.TextPointer> .</span><span class="sxs-lookup"><span data-stu-id="a925f-208">If the pointer is already at insertion position, and there are no adjacent formatting tags in the specified `direction`, the returned <xref:System.Windows.Documents.TextPointer> points to the same position as the calling <xref:System.Windows.Documents.TextPointer>.</span></span>  
  
 <span data-ttu-id="a925f-209">Es ist möglich, dass keine gültige Einfügeposition relativ zu der Position vorhanden ist, auf die von verwiesen wird <xref:System.Windows.Documents.TextPointer> .</span><span class="sxs-lookup"><span data-stu-id="a925f-209">It is possible that no valid insertion position exists relative to the position pointed to by a <xref:System.Windows.Documents.TextPointer>.</span></span>  <span data-ttu-id="a925f-210">Dies kann vorkommen, wenn der Inhalt, auf den verwiesen wird, strukturell unvollständig ist, wie in einer leeren Tabelle oder Liste.</span><span class="sxs-lookup"><span data-stu-id="a925f-210">This can happen if the referenced content is structurally incomplete, as in an empty table or list.</span></span>  <span data-ttu-id="a925f-211">In solchen Fällen gibt diese Methode einfach <xref:System.Windows.Documents.TextPointer> an dieselbe Position zurück wie die, <xref:System.Windows.Documents.TextPointer> von der aus diese Methode aufgerufen wurde.</span><span class="sxs-lookup"><span data-stu-id="a925f-211">In such cases, this method simply returns a <xref:System.Windows.Documents.TextPointer> to the same position as the <xref:System.Windows.Documents.TextPointer> from which this method was called.</span></span>  <span data-ttu-id="a925f-212">Diese Methode gibt immer einen gültigen zurück <xref:System.Windows.Documents.TextPointer> .</span><span class="sxs-lookup"><span data-stu-id="a925f-212">This method always returns a valid <xref:System.Windows.Documents.TextPointer>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a925f-213">In diesem Beispiel wird gezeigt, wie die- <xref:System.Windows.Documents.TextPointer.GetInsertionPosition%2A> Methode verwendet wird, um zu überprüfen, ob ein angegebener <xref:System.Windows.Documents.TextElement> Inhalt leer ist.</span><span class="sxs-lookup"><span data-stu-id="a925f-213">This example shows how to use the <xref:System.Windows.Documents.TextPointer.GetInsertionPosition%2A> method to check whether a specified <xref:System.Windows.Documents.TextElement> is empty of printable content.</span></span>  
  
 [!code-csharp[TextPointer_Snippets#_TextPointer_GetInsertionPosition](~/samples/snippets/csharp/VS_Snippets_Wpf/TextPointer_Snippets/CSharp/Window1.xaml.cs#_textpointer_getinsertionposition)]
 [!code-vb[TextPointer_Snippets#_TextPointer_GetInsertionPosition](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextPointer_Snippets/visualbasic/window1.xaml.vb#_textpointer_getinsertionposition)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Documents.TextPointer.GetNextInsertionPosition(System.Windows.Documents.LogicalDirection)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetLineStartPosition">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a925f-214">Gibt einen <see cref="T:System.Windows.Documents.TextPointer" /> auf den Anfang einer Zeile zurück, die relativ zum aktuellen <see cref="T:System.Windows.Documents.TextPointer" /> angegeben wird.</span><span class="sxs-lookup"><span data-stu-id="a925f-214">Returns a <see cref="T:System.Windows.Documents.TextPointer" /> to the beginning of a line that is specified relative to the current <see cref="T:System.Windows.Documents.TextPointer" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetLineStartPosition">
      <MemberSignature Language="C#" Value="public System.Windows.Documents.TextPointer GetLineStartPosition (int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Documents.TextPointer GetLineStartPosition(int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.TextPointer.GetLineStartPosition(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetLineStartPosition (count As Integer) As TextPointer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Documents::TextPointer ^ GetLineStartPosition(int count);" />
      <MemberSignature Language="F#" Value="member this.GetLineStartPosition : int -&gt; System.Windows.Documents.TextPointer" Usage="textPointer.GetLineStartPosition count" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.TextPointer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="count"><span data-ttu-id="a925f-215">Die Anzahl der zu überspringenden Zeilenanfangsmarker beim Festlegen der Zeile, deren Anfangsposition zurückgegeben werden soll.</span><span class="sxs-lookup"><span data-stu-id="a925f-215">The number of start-of-line markers to skip when determining the line for which to return the starting position.</span></span> <span data-ttu-id="a925f-216">Mit negativen Werten werden vorangehende Zeilen angegeben, mit 0 die aktuelle Zeile, mit positiven Werten Folgezeilen.</span><span class="sxs-lookup"><span data-stu-id="a925f-216">Negative values specify preceding lines, 0 specifies the current line, and positive values specify following lines.</span></span></param>
        <summary><span data-ttu-id="a925f-217">Gibt einen <see cref="T:System.Windows.Documents.TextPointer" /> auf den Anfang einer Zeile zurück, die relativ zum aktuellen <see cref="T:System.Windows.Documents.TextPointer" /> angegeben wird.</span><span class="sxs-lookup"><span data-stu-id="a925f-217">Returns a <see cref="T:System.Windows.Documents.TextPointer" /> to the beginning of a line that is specified relative to the current <see cref="T:System.Windows.Documents.TextPointer" />.</span></span></summary>
        <returns><span data-ttu-id="a925f-218">Ein <see cref="T:System.Windows.Documents.TextPointer" />, der auf den Anfang der angegebenen Zeile zeigt (wobei die <see cref="P:System.Windows.Documents.TextPointer.LogicalDirection" /> auf <see cref="F:System.Windows.Documents.LogicalDirection.Forward" /> festgelegt ist); bzw. <see langword="null" />, wenn die angegebene Zeile außerhalb des Bereichs liegt oder anderweitig nicht gefunden werden kann.</span><span class="sxs-lookup"><span data-stu-id="a925f-218">A <see cref="T:System.Windows.Documents.TextPointer" /> pointing to the beginning of the specified line (with the <see cref="P:System.Windows.Documents.TextPointer.LogicalDirection" /> set to <see cref="F:System.Windows.Documents.LogicalDirection.Forward" />), or <see langword="null" /> if the specified line is out of range or otherwise cannot be located.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a925f-219">Wenn das <xref:System.Windows.Documents.TextPointer> auf eine mehrdeutige Position zeigt, z. b. zwischen zwei Zeilen, wird die Zeile in der durch angegebenen Richtung <xref:System.Windows.Documents.TextPointer.LogicalDirection%2A> als relative anfangs Linie ausgewählt.</span><span class="sxs-lookup"><span data-stu-id="a925f-219">If the <xref:System.Windows.Documents.TextPointer> points to an ambiguous position, for example, between two lines, the line in the direction specified by <xref:System.Windows.Documents.TextPointer.LogicalDirection%2A> is selected as the relative starting line.</span></span>  
  
 <span data-ttu-id="a925f-220">Der von dieser Methode ausgeführte Vorgang hängt von einem gültigen Layout ab.</span><span class="sxs-lookup"><span data-stu-id="a925f-220">The operation performed by this method depends on a valid layout.</span></span>  <span data-ttu-id="a925f-221">Bei Bedarf versucht diese Methode, ein gültiges Layout automatisch neu zu generieren, bevor der Vorgang fortgesetzt wird.</span><span class="sxs-lookup"><span data-stu-id="a925f-221">When necessary, this method attempts to automatically regenerate a valid layout before proceeding with the operation.</span></span>  <span data-ttu-id="a925f-222">Das erneute Generieren eines Layouts kann ein relativ kostspieliger Vorgang sein.</span><span class="sxs-lookup"><span data-stu-id="a925f-222">Regenerating a layout can be a relatively expensive operation.</span></span>  <span data-ttu-id="a925f-223">Verwenden <xref:System.Windows.Documents.TextPointer.HasValidLayout%2A> Sie, um ein gültiges Layout zu suchen, bevor Sie Vorgänge ausführen, die das Layout neu generieren können.</span><span class="sxs-lookup"><span data-stu-id="a925f-223">Use <xref:System.Windows.Documents.TextPointer.HasValidLayout%2A> to check for a valid layout before performing operations that may regenerate the layout.</span></span>  <span data-ttu-id="a925f-224">Weitere Informationen finden Sie unter [Layout](/dotnet/framework/wpf/advanced/layout).</span><span class="sxs-lookup"><span data-stu-id="a925f-224">For more information, see [Layout](/dotnet/framework/wpf/advanced/layout).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetLineStartPosition">
      <MemberSignature Language="C#" Value="public System.Windows.Documents.TextPointer GetLineStartPosition (int count, out int actualCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Documents.TextPointer GetLineStartPosition(int32 count, [out] int32&amp; actualCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.TextPointer.GetLineStartPosition(System.Int32,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetLineStartPosition (count As Integer, ByRef actualCount As Integer) As TextPointer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Documents::TextPointer ^ GetLineStartPosition(int count, [Runtime::InteropServices::Out] int % actualCount);" />
      <MemberSignature Language="F#" Value="member this.GetLineStartPosition : int * int -&gt; System.Windows.Documents.TextPointer" Usage="textPointer.GetLineStartPosition (count, actualCount)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.TextPointer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="actualCount" Type="System.Int32" RefType="out" />
      </Parameters>
      <Docs>
        <param name="count"><span data-ttu-id="a925f-225">Die Anzahl der zu überspringenden Zeilenanfangsmarker beim Festlegen der Zeile, deren Anfangsposition zurückgegeben werden soll.</span><span class="sxs-lookup"><span data-stu-id="a925f-225">The number of start-of-line markers to skip when determining the line for which to return the starting position.</span></span> <span data-ttu-id="a925f-226">Mit negativen Werten werden vorangehende Zeilen angegeben, mit 0 die aktuelle Zeile, mit positiven Werten Folgezeilen.</span><span class="sxs-lookup"><span data-stu-id="a925f-226">Negative values specify preceding lines, 0 specifies the current line, and positive values specify following lines.</span></span></param>
        <param name="actualCount"><span data-ttu-id="a925f-227">Wenn diese Methode einen Rückgabewert erstellt, enthält dieser die tatsächliche Anzahl der Zeilenanfangsmarker, die beim Festlegen der Zeile übersprungen wurden, deren Anfangsposition zurückgegeben werden soll.</span><span class="sxs-lookup"><span data-stu-id="a925f-227">When this method returns, contains the actual number of start-of-line markers that were skipped when determining the line for which to return the starting position.</span></span>  <span data-ttu-id="a925f-228">Dieser Wert kann kleiner als <paramref name="count" /> sein, wenn der Anfang oder das Ende des Inhalts erreicht ist, bevor die angegebene Anzahl von Zeilen übersprungen wurde.</span><span class="sxs-lookup"><span data-stu-id="a925f-228">This value may be less than <paramref name="count" /> if the beginning or end of content is encountered before the specified number of lines are skipped.</span></span> <span data-ttu-id="a925f-229">Dieser Parameter wird nicht initialisiert übergeben.</span><span class="sxs-lookup"><span data-stu-id="a925f-229">This parameter is passed uninitialized.</span></span></param>
        <summary><span data-ttu-id="a925f-230">Gibt einen <see cref="T:System.Windows.Documents.TextPointer" /> auf den Anfang einer Zeile zurück, die relativ zum aktuellen <see cref="T:System.Windows.Documents.TextPointer" /> angegeben wird, und gibt an, wie viele Zeilen übersprungen wurden.</span><span class="sxs-lookup"><span data-stu-id="a925f-230">Returns a <see cref="T:System.Windows.Documents.TextPointer" /> to the beginning of a line that is specified relative to the current <see cref="T:System.Windows.Documents.TextPointer" />, and reports how many lines were skipped.</span></span></summary>
        <returns><span data-ttu-id="a925f-231">Ein <see cref="T:System.Windows.Documents.TextPointer" />, der auf den Anfang der angegebenen Zeile (wobei die <see cref="P:System.Windows.Documents.TextPointer.LogicalDirection" /> auf <see cref="F:System.Windows.Documents.LogicalDirection.Forward" /> festgelegt ist) oder auf den Anfang der Zeile zeigt, die der angegebenen Zeile am nächsten ist, wenn die angegebene Zeile außerhalb des Bereichs liegt.</span><span class="sxs-lookup"><span data-stu-id="a925f-231">A <see cref="T:System.Windows.Documents.TextPointer" /> pointing to the beginning of the specified line (with the <see cref="P:System.Windows.Documents.TextPointer.LogicalDirection" /> set to <see cref="F:System.Windows.Documents.LogicalDirection.Forward" />), or to the beginning of the line closest to the specified line if the specified line is out of range.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a925f-232">Wenn das <xref:System.Windows.Documents.TextPointer> auf eine mehrdeutige Position zeigt, z. b. zwischen zwei Zeilen, wird die Zeile in der durch die-Eigenschaft angegebenen Richtung <xref:System.Windows.Documents.TextPointer.LogicalDirection%2A> als relative anfangs Linie ausgewählt.</span><span class="sxs-lookup"><span data-stu-id="a925f-232">If the <xref:System.Windows.Documents.TextPointer> points to an ambiguous position, for example, between two lines, the line in the direction specified by the <xref:System.Windows.Documents.TextPointer.LogicalDirection%2A> property is selected as the relative starting line.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNextContextPosition">
      <MemberSignature Language="C#" Value="public System.Windows.Documents.TextPointer GetNextContextPosition (System.Windows.Documents.LogicalDirection direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Documents.TextPointer GetNextContextPosition(valuetype System.Windows.Documents.LogicalDirection direction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.TextPointer.GetNextContextPosition(System.Windows.Documents.LogicalDirection)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetNextContextPosition (direction As LogicalDirection) As TextPointer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Documents::TextPointer ^ GetNextContextPosition(System::Windows::Documents::LogicalDirection direction);" />
      <MemberSignature Language="F#" Value="member this.GetNextContextPosition : System.Windows.Documents.LogicalDirection -&gt; System.Windows.Documents.TextPointer" Usage="textPointer.GetNextContextPosition direction" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.TextPointer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="direction" Type="System.Windows.Documents.LogicalDirection" />
      </Parameters>
      <Docs>
        <param name="direction"><span data-ttu-id="a925f-233">Einer der <see cref="T:System.Windows.Documents.LogicalDirection" />-Werte, mit denen die logische Richtung angegeben wird, in der die Suche nach dem nächsten Symbol erfolgen soll.</span><span class="sxs-lookup"><span data-stu-id="a925f-233">One of the <see cref="T:System.Windows.Documents.LogicalDirection" /> values that specifies the logical direction in which to search for the next symbol.</span></span></param>
        <summary><span data-ttu-id="a925f-234">Gibt einen Zeiger auf das nächste Symbol in der angegebenen logischen Richtung zurück.</span><span class="sxs-lookup"><span data-stu-id="a925f-234">Returns a pointer to the next symbol in the specified logical direction.</span></span></summary>
        <returns><span data-ttu-id="a925f-235">Ein <see cref="T:System.Windows.Documents.TextPointer" /> auf das nächste Symbol in der angeforderten Richtung oder <see langword="null" />, wenn der aktuelle <see cref="T:System.Windows.Documents.TextPointer" /> an den Anfang oder das Ende des Inhalts grenzt.</span><span class="sxs-lookup"><span data-stu-id="a925f-235">A <see cref="T:System.Windows.Documents.TextPointer" /> to the next symbol in the requested direction, or <see langword="null" /> if the current <see cref="T:System.Windows.Documents.TextPointer" /> borders the start or end of content.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a925f-236">Folgendes gilt als Symbol:</span><span class="sxs-lookup"><span data-stu-id="a925f-236">Any of the following is considered to be a symbol:</span></span>  
  
-   <span data-ttu-id="a925f-237">Ein öffnendes oder Schließ Endes Tag für ein- <xref:System.Windows.Documents.TextElement> Element.</span><span class="sxs-lookup"><span data-stu-id="a925f-237">An opening or closing tag for a <xref:System.Windows.Documents.TextElement> element.</span></span>  
  
-   <span data-ttu-id="a925f-238">Ein-Element, das <xref:System.Windows.UIElement> in einem oder einem enthalten ist <xref:System.Windows.Documents.InlineUIContainer> <xref:System.Windows.Documents.BlockUIContainer> .</span><span class="sxs-lookup"><span data-stu-id="a925f-238">A <xref:System.Windows.UIElement> element contained in an <xref:System.Windows.Documents.InlineUIContainer> or <xref:System.Windows.Documents.BlockUIContainer>.</span></span>  <span data-ttu-id="a925f-239">Beachten Sie, dass ein solcher Wert <xref:System.Windows.UIElement> immer als genau ein Symbol gezählt wird; alle zusätzlichen Inhalte oder Elemente, die in der enthalten <xref:System.Windows.UIElement> sind, werden nicht als Symbole gezählt.</span><span class="sxs-lookup"><span data-stu-id="a925f-239">Note that such a <xref:System.Windows.UIElement> is always counted as exactly one symbol; any additional content or elements contained by the <xref:System.Windows.UIElement> are not counted as symbols.</span></span>  
  
-   <span data-ttu-id="a925f-240">Ein 16-Bit- [!INCLUDE[TLA#tla_unicode](~/includes/tlasharptla-unicode-md.md)] Zeichen in einem Text <xref:System.Windows.Documents.Run> Element.</span><span class="sxs-lookup"><span data-stu-id="a925f-240">A 16-bit [!INCLUDE[TLA#tla_unicode](~/includes/tlasharptla-unicode-md.md)] character inside of a text <xref:System.Windows.Documents.Run> element.</span></span>  
  
 <span data-ttu-id="a925f-241">Wenn das nächste Symbol als, oder kategorisiert wird <xref:System.Windows.Documents.TextPointerContext.EmbeddedElement> <xref:System.Windows.Documents.TextPointerContext.ElementStart> <xref:System.Windows.Documents.TextPointerContext.ElementEnd> (wie durch die- <xref:System.Windows.Documents.TextPointer.GetPointerContext%2A> Methode identifiziert), <xref:System.Windows.Documents.TextPointer> wird der von dieser Methode zurückgegebene von genau einem Symbol von der aktuellen Position aus erweitert.</span><span class="sxs-lookup"><span data-stu-id="a925f-241">If the next symbol is categorized as <xref:System.Windows.Documents.TextPointerContext.EmbeddedElement>, <xref:System.Windows.Documents.TextPointerContext.ElementStart>, or <xref:System.Windows.Documents.TextPointerContext.ElementEnd> (as identified by the <xref:System.Windows.Documents.TextPointer.GetPointerContext%2A> method), then the <xref:System.Windows.Documents.TextPointer> returned by this method is advanced by exactly one symbol from the current position.</span></span>  
  
 <span data-ttu-id="a925f-242">Wenn das nächste Symbol als kategorisiert wird <xref:System.Windows.Documents.TextPointerContext.Text> , wird der, der <xref:System.Windows.Documents.TextPointer> von dieser Methode zurückgegeben wird, hinter dem Text bis zum nächsten nicht-Text-Symbol erweitert (d. h. die nächste Position, an der <xref:System.Windows.Documents.TextPointerContext> nicht ist <xref:System.Windows.Documents.TextPointerContext.Text> ).</span><span class="sxs-lookup"><span data-stu-id="a925f-242">If the next symbol is categorized as <xref:System.Windows.Documents.TextPointerContext.Text>, then the <xref:System.Windows.Documents.TextPointer> returned by this method is advanced past the text to the next non-text symbol (that is, the next position where the <xref:System.Windows.Documents.TextPointerContext> is not <xref:System.Windows.Documents.TextPointerContext.Text>).</span></span>  <span data-ttu-id="a925f-243">Die genaue Symbol Anzahl, die überschritten wird, kann im Voraus durch Aufrufen der-Methode berechnet werden <xref:System.Windows.Documents.TextPointer.GetTextRunLength%2A> .</span><span class="sxs-lookup"><span data-stu-id="a925f-243">The exact symbol count crossed can be calculated in advance by calling the <xref:System.Windows.Documents.TextPointer.GetTextRunLength%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a925f-244">Im folgenden Beispiel wird eine Verwendung für diese Methode veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="a925f-244">The following example demonstrates a use for this method.</span></span>  <span data-ttu-id="a925f-245">Im Beispiel wird die <xref:System.Windows.Documents.TextPointer.GetNextContextPosition%2A> -Methode in Verbindung mit der- <xref:System.Windows.Documents.TextPointer.GetPointerContext%2A> Methode verwendet, um die Symbole in einem angegebenen zu durchlaufen und zu extrahieren <xref:System.Windows.Documents.TextElement> .</span><span class="sxs-lookup"><span data-stu-id="a925f-245">The example uses the <xref:System.Windows.Documents.TextPointer.GetNextContextPosition%2A> method in conjunction with the <xref:System.Windows.Documents.TextPointer.GetPointerContext%2A> method to traverse and extract the symbols in a specified <xref:System.Windows.Documents.TextElement>.</span></span>  
  
 <span data-ttu-id="a925f-246">Obwohl das Beispiel zum Extrahieren einer [!INCLUDE[TLA#tla_titlexaml](~/includes/tlasharptla-titlexaml-md.md)] Struktur für den Inhalt einer bestimmten verwendet werden kann <xref:System.Windows.Documents.TextElement> , ist es nur für die Veranschaulichung gedacht und sollte nicht im Produktionscode verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="a925f-246">While the example can be used to extract a [!INCLUDE[TLA#tla_titlexaml](~/includes/tlasharptla-titlexaml-md.md)] structure for the contents of a given <xref:System.Windows.Documents.TextElement>, it is intended for illustrative purposes only, and should not be used in production code.</span></span>  <span data-ttu-id="a925f-247">Weitere Informationen zum <xref:System.Xml> Arbeiten mit und Verarbeiten von XML finden Sie im-Namespace.</span><span class="sxs-lookup"><span data-stu-id="a925f-247">See the <xref:System.Xml> namespace for a rich set of types designed for working with and processing XML.</span></span>  
  
 [!code-csharp[TextPointer_Snippets#_TextPointer_GetNextContextPosition](~/samples/snippets/csharp/VS_Snippets_Wpf/TextPointer_Snippets/CSharp/Window1.xaml.cs#_textpointer_getnextcontextposition)]
 [!code-vb[TextPointer_Snippets#_TextPointer_GetNextContextPosition](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextPointer_Snippets/visualbasic/window1.xaml.vb#_textpointer_getnextcontextposition)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNextInsertionPosition">
      <MemberSignature Language="C#" Value="public System.Windows.Documents.TextPointer GetNextInsertionPosition (System.Windows.Documents.LogicalDirection direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Documents.TextPointer GetNextInsertionPosition(valuetype System.Windows.Documents.LogicalDirection direction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.TextPointer.GetNextInsertionPosition(System.Windows.Documents.LogicalDirection)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetNextInsertionPosition (direction As LogicalDirection) As TextPointer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Documents::TextPointer ^ GetNextInsertionPosition(System::Windows::Documents::LogicalDirection direction);" />
      <MemberSignature Language="F#" Value="member this.GetNextInsertionPosition : System.Windows.Documents.LogicalDirection -&gt; System.Windows.Documents.TextPointer" Usage="textPointer.GetNextInsertionPosition direction" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.TextPointer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="direction" Type="System.Windows.Documents.LogicalDirection" />
      </Parameters>
      <Docs>
        <param name="direction"><span data-ttu-id="a925f-248">Einer der <see cref="T:System.Windows.Documents.LogicalDirection" />-Werte, mit denen die logische Richtung angegeben wird, in der die Suche nach der nächsten Einfügeposition erfolgen soll.</span><span class="sxs-lookup"><span data-stu-id="a925f-248">One of the <see cref="T:System.Windows.Documents.LogicalDirection" /> values that specifies the logical direction in which to search for the next insertion position.</span></span></param>
        <summary><span data-ttu-id="a925f-249">Gibt in der angegebenen logischen Richtung an der nächsten Einfügeposition einen <see cref="T:System.Windows.Documents.TextPointer" /> zurück.</span><span class="sxs-lookup"><span data-stu-id="a925f-249">Returns a <see cref="T:System.Windows.Documents.TextPointer" /> to the next insertion position in the specified logical direction.</span></span></summary>
        <returns><span data-ttu-id="a925f-250">Ein <see cref="T:System.Windows.Documents.TextPointer" />, mit dem die nächste Einfügeposition in der angegebenen Richtung gekennzeichnet wird, oder <see langword="null" />, wenn keine nächste Einfügeposition gefunden werden kann.</span><span class="sxs-lookup"><span data-stu-id="a925f-250">A <see cref="T:System.Windows.Documents.TextPointer" /> that identifies the next insertion position in the requested direction, or <see langword="null" /> if no next insertion position can be found.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a925f-251">Eine *Einfügeposition* ist eine Position, an der neuer Inhalt hinzugefügt werden kann, ohne dass alle semantischen Regeln für den zugehörigen Inhalt unterbrochen werden</span><span class="sxs-lookup"><span data-stu-id="a925f-251">An *insertion position* is a position where new content may be added without breaking any semantic rules for the associated content.</span></span>  <span data-ttu-id="a925f-252">In der Praxis befindet sich eine Einfügemarke an einer beliebigen Stelle im Inhalt, an der ein Caretzeichen positioniert werden</span><span class="sxs-lookup"><span data-stu-id="a925f-252">In practice, an insertion position is anywhere in content where a caret may be positioned.</span></span>  <span data-ttu-id="a925f-253">Ein Beispiel für eine gültige <xref:System.Windows.Documents.TextPointer> Position, bei der es sich nicht um eine Einfügeposition handelt, ist die Position zwischen zwei angrenzenden Tags (d. h. <xref:System.Windows.Documents.Paragraph> zwischen dem schließenden Tag des vorangehenden Absatzes und dem öffnenden Tag des nächsten Absatzes).</span><span class="sxs-lookup"><span data-stu-id="a925f-253">An example of a valid <xref:System.Windows.Documents.TextPointer> position that is not an insertion position is the position between two adjacent <xref:System.Windows.Documents.Paragraph> tags (that is, between the closing tag of the preceding paragraph and the opening tag of the next paragraph).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a925f-254">Im folgenden Beispiel wird eine Verwendung für diese Methode veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="a925f-254">The following example demonstrates a use for this method.</span></span> <span data-ttu-id="a925f-255">Im Beispiel wird die- <xref:System.Windows.Documents.TextPointer.GetNextInsertionPosition%2A> Methode zum Durchlaufen von Inhalts Elementgrenzen verwendet, um die Anzahl der Elemente zu zählen, die <xref:System.Windows.Documents.Paragraph> zwischen zwei angegebenen-Instanzen vorhanden sind <xref:System.Windows.Documents.TextPointer> .</span><span class="sxs-lookup"><span data-stu-id="a925f-255">The example uses the <xref:System.Windows.Documents.TextPointer.GetNextInsertionPosition%2A> method to traverse content element boundaries in order to count the number of <xref:System.Windows.Documents.Paragraph> elements present between two specified <xref:System.Windows.Documents.TextPointer> instances.</span></span>  
  
 [!code-csharp[TextPointer_Snippets#_TextPointer_GetNextInsertionPosition](~/samples/snippets/csharp/VS_Snippets_Wpf/TextPointer_Snippets/CSharp/Window1.xaml.cs#_textpointer_getnextinsertionposition)]
 [!code-vb[TextPointer_Snippets#_TextPointer_GetNextInsertionPosition](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextPointer_Snippets/visualbasic/window1.xaml.vb#_textpointer_getnextinsertionposition)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Documents.TextPointer.GetInsertionPosition(System.Windows.Documents.LogicalDirection)" />
      </Docs>
    </Member>
    <Member MemberName="GetOffsetToPosition">
      <MemberSignature Language="C#" Value="public int GetOffsetToPosition (System.Windows.Documents.TextPointer position);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetOffsetToPosition(class System.Windows.Documents.TextPointer position) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.TextPointer.GetOffsetToPosition(System.Windows.Documents.TextPointer)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetOffsetToPosition (position As TextPointer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetOffsetToPosition(System::Windows::Documents::TextPointer ^ position);" />
      <MemberSignature Language="F#" Value="member this.GetOffsetToPosition : System.Windows.Documents.TextPointer -&gt; int" Usage="textPointer.GetOffsetToPosition position" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="position" Type="System.Windows.Documents.TextPointer" />
      </Parameters>
      <Docs>
        <param name="position"><span data-ttu-id="a925f-256">Ein <see cref="T:System.Windows.Documents.TextPointer" />, mit dem eine Position angegeben wird, zu der die Entfernung (in Symbolen) bestimmt werden soll.</span><span class="sxs-lookup"><span data-stu-id="a925f-256">A <see cref="T:System.Windows.Documents.TextPointer" /> that specifies a position to find the distance (in symbols) to.</span></span></param>
        <summary><span data-ttu-id="a925f-257">Gibt die Anzahl der Symbole zwischen dem aktuellen <see cref="T:System.Windows.Documents.TextPointer" /> und einem weiteren bestimmten <see cref="T:System.Windows.Documents.TextPointer" /> zurück.</span><span class="sxs-lookup"><span data-stu-id="a925f-257">Returns the count of symbols between the current <see cref="T:System.Windows.Documents.TextPointer" /> and a second specified <see cref="T:System.Windows.Documents.TextPointer" />.</span></span></summary>
        <returns><span data-ttu-id="a925f-258">Die relative Anzahl von Symbolen zwischen dem aktuellen <see cref="T:System.Windows.Documents.TextPointer" /> und der <paramref name="position" />.</span><span class="sxs-lookup"><span data-stu-id="a925f-258">The relative number of symbols between the current <see cref="T:System.Windows.Documents.TextPointer" /> and <paramref name="position" />.</span></span>  <span data-ttu-id="a925f-259">Mit einem negativen Wert wird angegeben, dass sich der aktuelle <see cref="T:System.Windows.Documents.TextPointer" /> hinter der durch <paramref name="position" /> angegebenen Position befindet; 0 gibt an, dass die Positionen identisch sind; und mit einem positiven Wert wird angegeben, dass sich der aktuelle <see cref="T:System.Windows.Documents.TextPointer" /> vor der durch <paramref name="position" /> angegebenen Position befindet.</span><span class="sxs-lookup"><span data-stu-id="a925f-259">A negative value indicates that the current <see cref="T:System.Windows.Documents.TextPointer" /> follows the position specified by <paramref name="position" />, 0 indicates that the positions are equal, and a positive value indicates that the current <see cref="T:System.Windows.Documents.TextPointer" /> precedes the position specified by <paramref name="position" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a925f-260">Folgendes gilt als Symbol:</span><span class="sxs-lookup"><span data-stu-id="a925f-260">Any of the following is considered to be a symbol:</span></span>  
  
-   <span data-ttu-id="a925f-261">Ein öffnendes oder Schließ Endes Tag für ein- <xref:System.Windows.Documents.TextElement> Element.</span><span class="sxs-lookup"><span data-stu-id="a925f-261">An opening or closing tag for a <xref:System.Windows.Documents.TextElement> element.</span></span>  
  
-   <span data-ttu-id="a925f-262">Ein-Element, das <xref:System.Windows.UIElement> in einem oder einem enthalten ist <xref:System.Windows.Documents.InlineUIContainer> <xref:System.Windows.Documents.BlockUIContainer> .</span><span class="sxs-lookup"><span data-stu-id="a925f-262">A <xref:System.Windows.UIElement> element contained in an <xref:System.Windows.Documents.InlineUIContainer> or <xref:System.Windows.Documents.BlockUIContainer>.</span></span>  <span data-ttu-id="a925f-263">Beachten Sie, dass ein solcher Wert <xref:System.Windows.UIElement> immer als genau ein Symbol gezählt wird; alle zusätzlichen Inhalte oder Elemente, die in der enthalten <xref:System.Windows.UIElement> sind, werden nicht als Symbole gezählt.</span><span class="sxs-lookup"><span data-stu-id="a925f-263">Note that such a <xref:System.Windows.UIElement> is always counted as exactly one symbol; any additional content or elements contained by the <xref:System.Windows.UIElement> are not counted as symbols.</span></span>  
  
-   <span data-ttu-id="a925f-264">Ein 16-Bit- [!INCLUDE[TLA#tla_unicode](~/includes/tlasharptla-unicode-md.md)] Zeichen in einem Text <xref:System.Windows.Documents.Run> Element.</span><span class="sxs-lookup"><span data-stu-id="a925f-264">A 16-bit [!INCLUDE[TLA#tla_unicode](~/includes/tlasharptla-unicode-md.md)] character inside of a text <xref:System.Windows.Documents.Run> element.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a925f-265">Im folgenden Beispiel wird eine Verwendung für diese Methode veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="a925f-265">The following example demonstrates a use for this method.</span></span> <span data-ttu-id="a925f-266">Im Beispiel wird die <xref:System.Windows.Documents.TextPointer.GetOffsetToPosition%2A> -Methode verwendet, um die Offsets für zwei <xref:System.Windows.Documents.TextPointer> -Instanzen zu suchen. Anschließend werden diese Informationen verwendet, um die Auswahl in einem zu speichern und wiederherzustellen <xref:System.Windows.Controls.RichTextBox> .</span><span class="sxs-lookup"><span data-stu-id="a925f-266">The example uses the <xref:System.Windows.Documents.TextPointer.GetOffsetToPosition%2A> method to find the offsets for two <xref:System.Windows.Documents.TextPointer> instances, and then uses this information to save and restore the selection in a <xref:System.Windows.Controls.RichTextBox>.</span></span>  <span data-ttu-id="a925f-267">Im Beispiel wird davon ausgegangen, dass sich der Inhalt von <xref:System.Windows.Controls.RichTextBox> zwischen dem Speichern einer Auswahl und dem Wiederherstellen einer Auswahl nicht geändert hat.</span><span class="sxs-lookup"><span data-stu-id="a925f-267">The example assumes that the contents of the <xref:System.Windows.Controls.RichTextBox> have not changed between a selection save and a selection restore.</span></span>  
  
 [!code-csharp[TextPointer_Snippets#_TextPointer_GetOffsetToPosition](~/samples/snippets/csharp/VS_Snippets_Wpf/TextPointer_Snippets/CSharp/Window1.xaml.cs#_textpointer_getoffsettoposition)]
 [!code-vb[TextPointer_Snippets#_TextPointer_GetOffsetToPosition](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextPointer_Snippets/visualbasic/window1.xaml.vb#_textpointer_getoffsettoposition)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a925f-268"><paramref name="position" /> gibt eine Position an, die außerhalb des der aktuellen Position zugeordneten Textcontainers liegt.</span><span class="sxs-lookup"><span data-stu-id="a925f-268"><paramref name="position" /> specifies a position outside of the text container associated with the current position.</span></span></exception>
        <altmember cref="Overload:System.Windows.Documents.TextPointer.GetPositionAtOffset" />
        <altmember cref="M:System.Windows.Documents.TextPointer.IsInSameDocument(System.Windows.Documents.TextPointer)" />
      </Docs>
    </Member>
    <Member MemberName="GetPointerContext">
      <MemberSignature Language="C#" Value="public System.Windows.Documents.TextPointerContext GetPointerContext (System.Windows.Documents.LogicalDirection direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Windows.Documents.TextPointerContext GetPointerContext(valuetype System.Windows.Documents.LogicalDirection direction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.TextPointer.GetPointerContext(System.Windows.Documents.LogicalDirection)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPointerContext (direction As LogicalDirection) As TextPointerContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Documents::TextPointerContext GetPointerContext(System::Windows::Documents::LogicalDirection direction);" />
      <MemberSignature Language="F#" Value="member this.GetPointerContext : System.Windows.Documents.LogicalDirection -&gt; System.Windows.Documents.TextPointerContext" Usage="textPointer.GetPointerContext direction" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.TextPointerContext</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="direction" Type="System.Windows.Documents.LogicalDirection" />
      </Parameters>
      <Docs>
        <param name="direction"><span data-ttu-id="a925f-269">Einer der <see cref="T:System.Windows.Documents.LogicalDirection" />-Werte, mit denen die logische Richtung angegeben wird, in der die Kategorie für den benachbarten Inhalt bestimmt wird.</span><span class="sxs-lookup"><span data-stu-id="a925f-269">One of the <see cref="T:System.Windows.Documents.LogicalDirection" /> values that specifies the logical direction in which to determine the category for adjacent content.</span></span></param>
        <summary><span data-ttu-id="a925f-270">Gibt für den Inhalt neben dem aktuellen <see cref="T:System.Windows.Documents.TextPointer" /> in der angegebenen logischen Richtung einen Kategorieindikator zurück.</span><span class="sxs-lookup"><span data-stu-id="a925f-270">Returns a category indicator for the content adjacent to the current <see cref="T:System.Windows.Documents.TextPointer" /> in the specified logical direction.</span></span></summary>
        <returns><span data-ttu-id="a925f-271">Einer der <see cref="T:System.Windows.Documents.TextPointerContext" />-Werte, mit denen die Kategorie für benachbarten Inhalt in der angegebenen logischen Richtung angegeben wird.</span><span class="sxs-lookup"><span data-stu-id="a925f-271">One of the <see cref="T:System.Windows.Documents.TextPointerContext" /> values that indicates the category for adjacent content in the specified logical direction.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="a925f-272">Im folgenden Beispiel wird eine Verwendung für diese Methode veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="a925f-272">The following example demonstrates a use for this method.</span></span> <span data-ttu-id="a925f-273">Im Beispiel wird die- <xref:System.Windows.Documents.TextPointer.GetPointerContext%2A> Methode verwendet, um einen Algorithmus zum Berechnen des Ausgleichs von öffnenden und schließenden Element Tags zwischen zwei angegebenen Positionen zu implementieren <xref:System.Windows.Documents.TextPointer> .</span><span class="sxs-lookup"><span data-stu-id="a925f-273">The example uses the <xref:System.Windows.Documents.TextPointer.GetPointerContext%2A> method to implement an algorithm for calculating the balance of opening and closing element tags between two specified <xref:System.Windows.Documents.TextPointer> positions.</span></span>  <span data-ttu-id="a925f-274">Jedes öffnende Elementtag wird als + 1 gezählt, und jedes schließende Elementtag wird als-1 gezählt.</span><span class="sxs-lookup"><span data-stu-id="a925f-274">Each opening element tag is counted as +1, and each closing element tag is counted as -1.</span></span>  
  
 [!code-csharp[TextPointer_Snippets#_TextPointer_GetOffsetToPosition2](~/samples/snippets/csharp/VS_Snippets_Wpf/TextPointer_Snippets/CSharp/Window1.xaml.cs#_textpointer_getoffsettoposition2)]
 [!code-vb[TextPointer_Snippets#_TextPointer_GetOffsetToPosition2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextPointer_Snippets/visualbasic/window1.xaml.vb#_textpointer_getoffsettoposition2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetPositionAtOffset">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a925f-275">Gibt einen <see cref="T:System.Windows.Documents.TextPointer" /> auf die Position zurück, die in Symbolen durch den ab dem Anfang des Inhalts bestimmten Offset angegeben wird.</span><span class="sxs-lookup"><span data-stu-id="a925f-275">Returns a <see cref="T:System.Windows.Documents.TextPointer" /> to the position indicated by the specified offset, in symbols, from the beginning of content.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetPositionAtOffset">
      <MemberSignature Language="C#" Value="public System.Windows.Documents.TextPointer GetPositionAtOffset (int offset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Documents.TextPointer GetPositionAtOffset(int32 offset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.TextPointer.GetPositionAtOffset(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPositionAtOffset (offset As Integer) As TextPointer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Documents::TextPointer ^ GetPositionAtOffset(int offset);" />
      <MemberSignature Language="F#" Value="member this.GetPositionAtOffset : int -&gt; System.Windows.Documents.TextPointer" Usage="textPointer.GetPositionAtOffset offset" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.TextPointer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offset" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="offset"><span data-ttu-id="a925f-276">Ein Offset in Symbolen, für den die Position berechnet und zurückgegeben werden soll.</span><span class="sxs-lookup"><span data-stu-id="a925f-276">An offset, in symbols, for which to calculate and return the position.</span></span>  <span data-ttu-id="a925f-277">Wenn der Offset negativ ist, wird die Position in der logischen Richtung berechnet, die der mit der <see cref="P:System.Windows.Documents.TextPointer.LogicalDirection" />-Eigenschaft angegebenen Richtung entgegengesetzt ist.</span><span class="sxs-lookup"><span data-stu-id="a925f-277">If the offset is negative, the position is calculated in the logical direction opposite of that indicated by the <see cref="P:System.Windows.Documents.TextPointer.LogicalDirection" /> property.</span></span></param>
        <summary><span data-ttu-id="a925f-278">Gibt einen <see cref="T:System.Windows.Documents.TextPointer" /> auf die Position zurück, die in Symbolen durch den ab dem Anfang des aktuellen <see cref="T:System.Windows.Documents.TextPointer" /> bestimmten Offset angegeben wird.</span><span class="sxs-lookup"><span data-stu-id="a925f-278">Returns a <see cref="T:System.Windows.Documents.TextPointer" /> to the position indicated by the specified offset, in symbols, from the beginning of the current <see cref="T:System.Windows.Documents.TextPointer" />.</span></span></summary>
        <returns><span data-ttu-id="a925f-279">Ein <see cref="T:System.Windows.Documents.TextPointer" /> auf die Position, die von dem bestimmten Offset angegeben wird, oder <see langword="null" />, wenn keine entsprechende Position gefunden werden kann.</span><span class="sxs-lookup"><span data-stu-id="a925f-279">A <see cref="T:System.Windows.Documents.TextPointer" /> to the position indicated by the specified offset, or <see langword="null" /> if no corresponding position can be found.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a925f-280">Folgendes gilt als Symbol:</span><span class="sxs-lookup"><span data-stu-id="a925f-280">Any of the following is considered to be a symbol:</span></span>  
  
-   <span data-ttu-id="a925f-281">Ein öffnendes oder Schließ Endes Tag für das <xref:System.Windows.Documents.TextElement> Element.</span><span class="sxs-lookup"><span data-stu-id="a925f-281">An opening or closing tag for the <xref:System.Windows.Documents.TextElement> element.</span></span>  
  
-   <span data-ttu-id="a925f-282">Ein-Element, das <xref:System.Windows.UIElement> in einem oder einem enthalten ist <xref:System.Windows.Documents.InlineUIContainer> <xref:System.Windows.Documents.BlockUIContainer> .</span><span class="sxs-lookup"><span data-stu-id="a925f-282">A <xref:System.Windows.UIElement> element contained in an <xref:System.Windows.Documents.InlineUIContainer> or <xref:System.Windows.Documents.BlockUIContainer>.</span></span>  <span data-ttu-id="a925f-283">Beachten Sie, dass ein solcher Wert <xref:System.Windows.UIElement> immer als genau ein Symbol gezählt wird; alle zusätzlichen Inhalte oder Elemente, die in der enthalten <xref:System.Windows.UIElement> sind, werden nicht als Symbole gezählt.</span><span class="sxs-lookup"><span data-stu-id="a925f-283">Note that such a <xref:System.Windows.UIElement> is always counted as exactly one symbol; any additional content or elements contained by the <xref:System.Windows.UIElement> are not counted as symbols.</span></span>  
  
-   <span data-ttu-id="a925f-284">Ein 16-Bit- [!INCLUDE[TLA#tla_unicode](~/includes/tlasharptla-unicode-md.md)] Zeichen in einem Text <xref:System.Windows.Documents.Run> Element.</span><span class="sxs-lookup"><span data-stu-id="a925f-284">A 16-bit [!INCLUDE[TLA#tla_unicode](~/includes/tlasharptla-unicode-md.md)] character inside of a text <xref:System.Windows.Documents.Run> element.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a925f-285">Im folgenden Beispiel wird eine Verwendung für diese Methode veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="a925f-285">The following example demonstrates a use for this method.</span></span> <span data-ttu-id="a925f-286">Im Beispiel wird die- <xref:System.Windows.Documents.TextPointer.GetPositionAtOffset%2A> Methode verwendet, um ein Methoden paar zu implementieren, eines zum Berechnen des Offsets an eine angegebene Position in Relation zu einem beliebigen hostingabsatz und das andere, um einen <xref:System.Windows.Documents.TextPointer> an einen angegebenen Offset in einem angegebenen Absatz zurückzugeben.</span><span class="sxs-lookup"><span data-stu-id="a925f-286">The example uses the <xref:System.Windows.Documents.TextPointer.GetPositionAtOffset%2A> method to implement a pair of methods, one to calculate the offset to a specified position relative to any hosting paragraph, and the other to return a <xref:System.Windows.Documents.TextPointer> to a specified offset in a specified paragraph.</span></span>  
  
 [!code-csharp[TextPointer_Snippets#_TextPointer_GetPositionAtOffset](~/samples/snippets/csharp/VS_Snippets_Wpf/TextPointer_Snippets/CSharp/Window1.xaml.cs#_textpointer_getpositionatoffset)]
 [!code-vb[TextPointer_Snippets#_TextPointer_GetPositionAtOffset](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextPointer_Snippets/visualbasic/window1.xaml.vb#_textpointer_getpositionatoffset)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Documents.TextPointer.GetOffsetToPosition(System.Windows.Documents.TextPointer)" />
      </Docs>
    </Member>
    <Member MemberName="GetPositionAtOffset">
      <MemberSignature Language="C#" Value="public System.Windows.Documents.TextPointer GetPositionAtOffset (int offset, System.Windows.Documents.LogicalDirection direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Documents.TextPointer GetPositionAtOffset(int32 offset, valuetype System.Windows.Documents.LogicalDirection direction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.TextPointer.GetPositionAtOffset(System.Int32,System.Windows.Documents.LogicalDirection)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPositionAtOffset (offset As Integer, direction As LogicalDirection) As TextPointer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Documents::TextPointer ^ GetPositionAtOffset(int offset, System::Windows::Documents::LogicalDirection direction);" />
      <MemberSignature Language="F#" Value="member this.GetPositionAtOffset : int * System.Windows.Documents.LogicalDirection -&gt; System.Windows.Documents.TextPointer" Usage="textPointer.GetPositionAtOffset (offset, direction)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.TextPointer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="direction" Type="System.Windows.Documents.LogicalDirection" />
      </Parameters>
      <Docs>
        <param name="offset"><span data-ttu-id="a925f-287">Ein Offset in Symbolen, für den die Position berechnet und zurückgegeben werden soll.</span><span class="sxs-lookup"><span data-stu-id="a925f-287">An offset, in symbols, for which to calculate and return the position.</span></span>  <span data-ttu-id="a925f-288">Wenn der Offset negativ ist, steht der zurückgegebene <see cref="T:System.Windows.Documents.TextPointer" /> vor dem aktuellen <see cref="T:System.Windows.Documents.TextPointer" />, andernfalls danach.</span><span class="sxs-lookup"><span data-stu-id="a925f-288">If the offset is negative, the returned <see cref="T:System.Windows.Documents.TextPointer" /> precedes the current <see cref="T:System.Windows.Documents.TextPointer" />; otherwise, it follows.</span></span></param>
        <param name="direction"><span data-ttu-id="a925f-289">Einer der <see cref="T:System.Windows.Documents.LogicalDirection" />-Werte, mit denen die logische Richtung des zurückgegebenen <see cref="T:System.Windows.Documents.TextPointer" /> angegeben wird.</span><span class="sxs-lookup"><span data-stu-id="a925f-289">One of the <see cref="T:System.Windows.Documents.LogicalDirection" /> values that specifies the logical direction of the returned <see cref="T:System.Windows.Documents.TextPointer" />.</span></span></param>
        <summary><span data-ttu-id="a925f-290">Gibt einen <see cref="T:System.Windows.Documents.TextPointer" /> auf die Position zurück, die in Symbolen durch den ab dem Anfang des aktuellen <see cref="T:System.Windows.Documents.TextPointer" /> bestimmten Offset und in der angegebenen Richtung angegeben wird.</span><span class="sxs-lookup"><span data-stu-id="a925f-290">Returns a <see cref="T:System.Windows.Documents.TextPointer" /> to the position indicated by the specified offset, in symbols, from the beginning of the current <see cref="T:System.Windows.Documents.TextPointer" /> and in the specified direction.</span></span></summary>
        <returns><span data-ttu-id="a925f-291">Ein <see cref="T:System.Windows.Documents.TextPointer" /> auf die Position, die durch den bestimmten Offset angegeben wird, oder <see langword="null" />, wenn sich der Offset über das Ende des Inhalts hinaus erstreckt.</span><span class="sxs-lookup"><span data-stu-id="a925f-291">A <see cref="T:System.Windows.Documents.TextPointer" /> to the position indicated by the specified offset, or <see langword="null" /> if the offset extends past the end of the content.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a925f-292">Folgendes gilt als Symbol:</span><span class="sxs-lookup"><span data-stu-id="a925f-292">Any of the following is considered to be a symbol:</span></span>  
  
-   <span data-ttu-id="a925f-293">Ein öffnendes oder Schließ Endes Tag für das <xref:System.Windows.Documents.TextElement> Element.</span><span class="sxs-lookup"><span data-stu-id="a925f-293">An opening or closing tag for the <xref:System.Windows.Documents.TextElement> element.</span></span>  
  
-   <span data-ttu-id="a925f-294">Ein-Element, das <xref:System.Windows.UIElement> in einem oder einem enthalten ist <xref:System.Windows.Documents.InlineUIContainer> <xref:System.Windows.Documents.BlockUIContainer> .</span><span class="sxs-lookup"><span data-stu-id="a925f-294">A <xref:System.Windows.UIElement> element contained in an <xref:System.Windows.Documents.InlineUIContainer> or <xref:System.Windows.Documents.BlockUIContainer>.</span></span>  <span data-ttu-id="a925f-295">Beachten Sie, dass ein solcher Wert <xref:System.Windows.UIElement> immer als genau ein Symbol gezählt wird; alle zusätzlichen Inhalte oder Elemente, die in der enthalten <xref:System.Windows.UIElement> sind, werden nicht als Symbole gezählt.</span><span class="sxs-lookup"><span data-stu-id="a925f-295">Note that such a <xref:System.Windows.UIElement> is always counted as exactly one symbol; any additional content or elements contained by the <xref:System.Windows.UIElement> are not counted as symbols.</span></span>  
  
-   <span data-ttu-id="a925f-296">Ein 16-Bit- [!INCLUDE[TLA#tla_unicode](~/includes/tlasharptla-unicode-md.md)] Zeichen in einem Text <xref:System.Windows.Documents.Run> Element.</span><span class="sxs-lookup"><span data-stu-id="a925f-296">A 16-bit [!INCLUDE[TLA#tla_unicode](~/includes/tlasharptla-unicode-md.md)] character inside of a text <xref:System.Windows.Documents.Run> element.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Documents.TextPointer.GetOffsetToPosition(System.Windows.Documents.TextPointer)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetTextInRun">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a925f-297">Gibt den Text zurück, der sich neben dem aktuellen <see cref="T:System.Windows.Documents.TextPointer" /> befindet.</span><span class="sxs-lookup"><span data-stu-id="a925f-297">Returns text adjacent to the current <see cref="T:System.Windows.Documents.TextPointer" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetTextInRun">
      <MemberSignature Language="C#" Value="public string GetTextInRun (System.Windows.Documents.LogicalDirection direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetTextInRun(valuetype System.Windows.Documents.LogicalDirection direction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.TextPointer.GetTextInRun(System.Windows.Documents.LogicalDirection)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTextInRun (direction As LogicalDirection) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetTextInRun(System::Windows::Documents::LogicalDirection direction);" />
      <MemberSignature Language="F#" Value="member this.GetTextInRun : System.Windows.Documents.LogicalDirection -&gt; string" Usage="textPointer.GetTextInRun direction" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="direction" Type="System.Windows.Documents.LogicalDirection" />
      </Parameters>
      <Docs>
        <param name="direction"><span data-ttu-id="a925f-298">Einer der <see cref="T:System.Windows.Documents.LogicalDirection" />-Werte, mit denen die logische Richtung angegeben wird, in der benachbarter Text gesucht und zurückgegeben werden soll.</span><span class="sxs-lookup"><span data-stu-id="a925f-298">One of the <see cref="T:System.Windows.Documents.LogicalDirection" /> values that specifies the logical direction in which to find and return any adjacent text.</span></span></param>
        <summary><span data-ttu-id="a925f-299">Gibt eine Zeichenfolge zurück, die Text enthält, der sich in der angegebenen logischen Richtung neben dem aktuellen <see cref="T:System.Windows.Documents.TextPointer" /> befindet.</span><span class="sxs-lookup"><span data-stu-id="a925f-299">Returns a string containing any text adjacent to the current <see cref="T:System.Windows.Documents.TextPointer" /> in the specified logical direction.</span></span></summary>
        <returns><span data-ttu-id="a925f-300">Eine Zeichenfolge, die beliebigen benachbarten Text in der angegebenen logischen Richtung enthält, oder <see cref="F:System.String.Empty" />, wenn kein benachbarter Text gefunden werden kann.</span><span class="sxs-lookup"><span data-stu-id="a925f-300">A string containing any adjacent text in the specified logical direction, or <see cref="F:System.String.Empty" /> if no adjacent text can be found.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a925f-301">Diese Methode gibt nur ununterbrochene Ausführungen von Text zurück.</span><span class="sxs-lookup"><span data-stu-id="a925f-301">This method returns only uninterrupted runs of text.</span></span>  <span data-ttu-id="a925f-302">Es wird nichts zurückgegeben, wenn ein anderer Symboltyp als <xref:System.Windows.Documents.TextPointerContext.Text> an den aktuellen <xref:System.Windows.Documents.TextPointer> in der angegebenen Richtung grenzt.</span><span class="sxs-lookup"><span data-stu-id="a925f-302">Nothing is returned if any symbol type other than <xref:System.Windows.Documents.TextPointerContext.Text> is adjacent to the current <xref:System.Windows.Documents.TextPointer> in the specified direction.</span></span>  <span data-ttu-id="a925f-303">Auf ähnliche Weise wird Text nur bis zum nächsten nicht-Text-Symbol zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="a925f-303">Similarly, text is returned only up to the next non-text symbol.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a925f-304">Im folgenden Beispiel wird eine Verwendung für diese Methode veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="a925f-304">The following example demonstrates a use for this method.</span></span> <span data-ttu-id="a925f-305">Im Beispiel wird die- <xref:System.Windows.Documents.TextPointer.GetTextInRun%2A> Methode verwendet, um einen einfachen textextraktor zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="a925f-305">The example uses the <xref:System.Windows.Documents.TextPointer.GetTextInRun%2A> method to implement a simple text extractor.</span></span>  <span data-ttu-id="a925f-306">Die-Methode gibt eine Zeichen folgen Verkettung für den gesamten Text zwischen zwei angegebenen- <xref:System.Windows.Documents.TextPointer> Instanzen zurück.</span><span class="sxs-lookup"><span data-stu-id="a925f-306">The method returns a string concatenation of all text between two specified <xref:System.Windows.Documents.TextPointer> instances.</span></span>  
  
 <span data-ttu-id="a925f-307">Obwohl das Beispiel zum Extrahieren von Text zwischen zwei-Instanzen verwendet werden kann <xref:System.Windows.Documents.TextPointer> , ist es nur zu Veranschaulichung gedacht und sollte nicht im Produktionscode verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="a925f-307">While the example can be used to extract any text between two <xref:System.Windows.Documents.TextPointer> instances, it is intended for illustrative purposes only, and should not be used in production code.</span></span>  <span data-ttu-id="a925f-308">Verwenden Sie stattdessen die <xref:System.Windows.Documents.TextRange.Text%2A?displayProperty=nameWithType>-Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="a925f-308">Use the <xref:System.Windows.Documents.TextRange.Text%2A?displayProperty=nameWithType> property instead.</span></span>  
  
 [!code-csharp[TextPointer_Snippets#_TextPointer_GetTextInRun](~/samples/snippets/csharp/VS_Snippets_Wpf/TextPointer_Snippets/CSharp/Window1.xaml.cs#_textpointer_gettextinrun)]
 [!code-vb[TextPointer_Snippets#_TextPointer_GetTextInRun](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextPointer_Snippets/visualbasic/window1.xaml.vb#_textpointer_gettextinrun)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Documents.TextPointer.DeleteTextInRun(System.Int32)" />
        <altmember cref="M:System.Windows.Documents.TextPointer.InsertTextInRun(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetTextInRun">
      <MemberSignature Language="C#" Value="public int GetTextInRun (System.Windows.Documents.LogicalDirection direction, char[] textBuffer, int startIndex, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetTextInRun(valuetype System.Windows.Documents.LogicalDirection direction, char[] textBuffer, int32 startIndex, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.TextPointer.GetTextInRun(System.Windows.Documents.LogicalDirection,System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTextInRun (direction As LogicalDirection, textBuffer As Char(), startIndex As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetTextInRun(System::Windows::Documents::LogicalDirection direction, cli::array &lt;char&gt; ^ textBuffer, int startIndex, int count);" />
      <MemberSignature Language="F#" Value="member this.GetTextInRun : System.Windows.Documents.LogicalDirection * char[] * int * int -&gt; int" Usage="textPointer.GetTextInRun (direction, textBuffer, startIndex, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="direction" Type="System.Windows.Documents.LogicalDirection" />
        <Parameter Name="textBuffer" Type="System.Char[]" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="direction"><span data-ttu-id="a925f-309">Einer der <see cref="T:System.Windows.Documents.LogicalDirection" />-Werte, mit denen die logische Richtung angegeben wird, in der benachbarter Text gesucht und kopiert werden soll.</span><span class="sxs-lookup"><span data-stu-id="a925f-309">One of the <see cref="T:System.Windows.Documents.LogicalDirection" /> values that specifies the logical direction in which to find and copy any adjacent text.</span></span></param>
        <param name="textBuffer"><span data-ttu-id="a925f-310">Ein Puffer, in den beliebiger Text kopiert wird.</span><span class="sxs-lookup"><span data-stu-id="a925f-310">A buffer into which any text is copied.</span></span></param>
        <param name="startIndex"><span data-ttu-id="a925f-311">Ein Index im <paramref name="textBuffer" />, ab dem mit dem Schreiben von kopiertem Text begonnen wird.</span><span class="sxs-lookup"><span data-stu-id="a925f-311">An index into <paramref name="textBuffer" /> at which to begin writing copied text.</span></span></param>
        <param name="count"><span data-ttu-id="a925f-312">Die maximale Anzahl der zu kopierenden Zeichen.</span><span class="sxs-lookup"><span data-stu-id="a925f-312">The maximum number of characters to copy.</span></span></param>
        <summary><span data-ttu-id="a925f-313">Kopiert die angegebene maximale Anzahl von Zeichen aus benachbartem Text in der angegebenen Richtung in ein vom Aufrufer bereitgestelltes Zeichenarray.</span><span class="sxs-lookup"><span data-stu-id="a925f-313">Copies the specified maximum number of characters from any adjacent text in the specified direction into a caller-supplied character array.</span></span></summary>
        <returns><span data-ttu-id="a925f-314">Die Anzahl der tatsächlich in den <paramref name="textBuffer" /> kopierten Zeichen.</span><span class="sxs-lookup"><span data-stu-id="a925f-314">The number of characters actually copied into <paramref name="textBuffer" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a925f-315">Diese Methode gibt nur ununterbrochene Ausführungen von Text zurück.</span><span class="sxs-lookup"><span data-stu-id="a925f-315">This method returns only uninterrupted runs of text.</span></span>  <span data-ttu-id="a925f-316">Es wird nichts zurückgegeben, wenn ein anderer Symboltyp als <xref:System.Windows.Documents.TextPointerContext.Text> an den aktuellen <xref:System.Windows.Documents.TextPointer> in der angegebenen Richtung grenzt.</span><span class="sxs-lookup"><span data-stu-id="a925f-316">Nothing is returned if any symbol type other than <xref:System.Windows.Documents.TextPointerContext.Text> is adjacent to the current <xref:System.Windows.Documents.TextPointer> in the specified direction.</span></span>  <span data-ttu-id="a925f-317">Auf ähnliche Weise wird Text nur bis zum nächsten nicht-Text-Symbol zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="a925f-317">Similarly, text is returned only up to the next non-text symbol.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a925f-318"><paramref name="startIndex" /> ist kleiner als 0 oder größer als die <see cref="P:System.Array.Length" />-Eigenschaft von <paramref name="textBuffer" />.</span><span class="sxs-lookup"><span data-stu-id="a925f-318"><paramref name="startIndex" /> is less than 0 or greater than the <see cref="P:System.Array.Length" /> property of <paramref name="textBuffer" />.</span></span>  
  
<span data-ttu-id="a925f-319">Oder</span><span class="sxs-lookup"><span data-stu-id="a925f-319">-or-</span></span> 
 <span data-ttu-id="a925f-320"><paramref name="count" /> ist kleiner als 0 oder größer als der verbleibende Raum im <paramref name="textBuffer" /> (<paramref name="textBuffer" />.<see cref="P:System.Array.Length" /></span><span class="sxs-lookup"><span data-stu-id="a925f-320"><paramref name="count" /> is less than 0 or greater than the remaining space in <paramref name="textBuffer" /> (<paramref name="textBuffer" />.<see cref="P:System.Array.Length" /></span></span> <span data-ttu-id="a925f-321">minus<paramref name="startIndex" />).</span><span class="sxs-lookup"><span data-stu-id="a925f-321">minus <paramref name="startIndex" />).</span></span></exception>
        <altmember cref="M:System.Windows.Documents.TextPointer.DeleteTextInRun(System.Int32)" />
        <altmember cref="M:System.Windows.Documents.TextPointer.InsertTextInRun(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetTextRunLength">
      <MemberSignature Language="C#" Value="public int GetTextRunLength (System.Windows.Documents.LogicalDirection direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetTextRunLength(valuetype System.Windows.Documents.LogicalDirection direction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.TextPointer.GetTextRunLength(System.Windows.Documents.LogicalDirection)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTextRunLength (direction As LogicalDirection) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetTextRunLength(System::Windows::Documents::LogicalDirection direction);" />
      <MemberSignature Language="F#" Value="member this.GetTextRunLength : System.Windows.Documents.LogicalDirection -&gt; int" Usage="textPointer.GetTextRunLength direction" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="direction" Type="System.Windows.Documents.LogicalDirection" />
      </Parameters>
      <Docs>
        <param name="direction"><span data-ttu-id="a925f-322">Einer der <see cref="T:System.Windows.Documents.LogicalDirection" />-Werte, mit denen die logische Richtung für das Zählen der Zeichenanzahl angegeben wird.</span><span class="sxs-lookup"><span data-stu-id="a925f-322">One of the <see cref="T:System.Windows.Documents.LogicalDirection" /> values that specifies the logical direction in which to count the number of characters.</span></span></param>
        <summary><span data-ttu-id="a925f-323">Gibt in der angegebenen logischen Richtung die Anzahl der Unicode-Zeichen zwischen dem aktuellen <see cref="T:System.Windows.Documents.TextPointer" /> und dem nächsten Nicht-Text-Symbol zurück.</span><span class="sxs-lookup"><span data-stu-id="a925f-323">Returns the number of Unicode characters between the current <see cref="T:System.Windows.Documents.TextPointer" /> and the next non-text symbol, in the specified logical direction.</span></span></summary>
        <returns><span data-ttu-id="a925f-324">Die Anzahl der Unicode-Zeichen zwischen dem aktuellen <see cref="T:System.Windows.Documents.TextPointer" /> und dem nächsten Nicht-Text-Symbol.</span><span class="sxs-lookup"><span data-stu-id="a925f-324">The number of Unicode characters between the current <see cref="T:System.Windows.Documents.TextPointer" /> and the next non-text symbol.</span></span>  <span data-ttu-id="a925f-325">Diese Zahl kann 0 sein, wenn kein benachbarter Text vorhanden ist.</span><span class="sxs-lookup"><span data-stu-id="a925f-325">This number may be 0 if there is no adjacent text.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a925f-326">Folgendes gilt als Symbol:</span><span class="sxs-lookup"><span data-stu-id="a925f-326">Any of the following is considered to be a symbol:</span></span>  
  
-   <span data-ttu-id="a925f-327">Ein öffnendes oder Schließ Endes Tag für das <xref:System.Windows.Documents.TextElement> Element.</span><span class="sxs-lookup"><span data-stu-id="a925f-327">An opening or closing tag for the <xref:System.Windows.Documents.TextElement> element.</span></span>  
  
-   <span data-ttu-id="a925f-328">Ein-Element, das <xref:System.Windows.UIElement> in einem oder einem enthalten ist <xref:System.Windows.Documents.InlineUIContainer> <xref:System.Windows.Documents.BlockUIContainer> .</span><span class="sxs-lookup"><span data-stu-id="a925f-328">A <xref:System.Windows.UIElement> element contained in an <xref:System.Windows.Documents.InlineUIContainer> or <xref:System.Windows.Documents.BlockUIContainer>.</span></span>  <span data-ttu-id="a925f-329">Beachten Sie, dass ein solcher Wert <xref:System.Windows.UIElement> immer als genau ein Symbol gezählt wird; alle zusätzlichen Inhalte oder Elemente, die in der enthalten <xref:System.Windows.UIElement> sind, werden nicht als Symbole gezählt.</span><span class="sxs-lookup"><span data-stu-id="a925f-329">Note that such a <xref:System.Windows.UIElement> is always counted as exactly one symbol; any additional content or elements contained by the <xref:System.Windows.UIElement> are not counted as symbols.</span></span>  
  
-   <span data-ttu-id="a925f-330">Ein 16-Bit- [!INCLUDE[TLA#tla_unicode](~/includes/tlasharptla-unicode-md.md)] Zeichen in einem Text <xref:System.Windows.Documents.Run> Element.</span><span class="sxs-lookup"><span data-stu-id="a925f-330">A 16-bit [!INCLUDE[TLA#tla_unicode](~/includes/tlasharptla-unicode-md.md)] character inside of a text <xref:System.Windows.Documents.Run> element.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasValidLayout">
      <MemberSignature Language="C#" Value="public bool HasValidLayout { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasValidLayout" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.TextPointer.HasValidLayout" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasValidLayout As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasValidLayout { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasValidLayout : bool" Usage="System.Windows.Documents.TextPointer.HasValidLayout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a925f-331">Ruft einen Wert ab, mit dem angegeben wird, ob der der aktuellen Position zugeordnete Textcontainer über ein gültiges (aktuelles) Layout verfügt.</span><span class="sxs-lookup"><span data-stu-id="a925f-331">Gets a value that indicates whether the text container associated with the current position has a valid (up-to-date) layout.</span></span></summary>
        <value><span data-ttu-id="a925f-332"><see langword="true" />, wenn das Layout aktuell und gültig ist, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="a925f-332"><see langword="true" /> if the layout is current and valid; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a925f-333">Bei Bedarf versuchen Vorgänge, die von einem gültigen Layout (z. b. der <xref:System.Windows.Documents.TextPointer.GetLineStartPosition%2A> Methode, der <xref:System.Windows.Documents.TextPointer.GetCharacterRect%2A> Methode und der <xref:System.Windows.Documents.TextPointer.IsAtLineStartPosition%2A> Eigenschaft) abhängen, automatisch ein gültiges Layout erneut zu generieren, bevor Sie den Vorgang fortsetzen.</span><span class="sxs-lookup"><span data-stu-id="a925f-333">When necessary, operations that depend on a valid layout (such as the <xref:System.Windows.Documents.TextPointer.GetLineStartPosition%2A> method, <xref:System.Windows.Documents.TextPointer.GetCharacterRect%2A> method, and <xref:System.Windows.Documents.TextPointer.IsAtLineStartPosition%2A> property) attempt to automatically regenerate a valid layout before proceeding with the operation.</span></span>  <span data-ttu-id="a925f-334">Das erneute Generieren eines Layouts kann ein relativ kostspieliger Vorgang sein.</span><span class="sxs-lookup"><span data-stu-id="a925f-334">Regenerating a layout can be a relatively expensive operation.</span></span>  <span data-ttu-id="a925f-335">Verwenden Sie diese Eigenschaft, um vor der Durchführung von Vorgängen, die das Layout neu generieren können, nach einem gültigen Layout</span><span class="sxs-lookup"><span data-stu-id="a925f-335">Use this property to check for a valid layout before performing operations that may regenerate the layout.</span></span>  <span data-ttu-id="a925f-336">Weitere Informationen finden Sie unter [Layout](/dotnet/framework/wpf/advanced/layout).</span><span class="sxs-lookup"><span data-stu-id="a925f-336">For more information, see [Layout](/dotnet/framework/wpf/advanced/layout).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertLineBreak">
      <MemberSignature Language="C#" Value="public System.Windows.Documents.TextPointer InsertLineBreak ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Documents.TextPointer InsertLineBreak() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.TextPointer.InsertLineBreak" />
      <MemberSignature Language="VB.NET" Value="Public Function InsertLineBreak () As TextPointer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Documents::TextPointer ^ InsertLineBreak();" />
      <MemberSignature Language="F#" Value="member this.InsertLineBreak : unit -&gt; System.Windows.Documents.TextPointer" Usage="textPointer.InsertLineBreak " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.TextPointer</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a925f-337">Fügt an der aktuellen Position einen Zeilenumbruch ein.</span><span class="sxs-lookup"><span data-stu-id="a925f-337">Inserts a line break at the current position.</span></span></summary>
        <returns><span data-ttu-id="a925f-338">Ein <see cref="T:System.Windows.Documents.TextPointer" />, der unmittelbar nach dem von dieser Methode eingefügten <see cref="T:System.Windows.Documents.LineBreak" />-Element positioniert wird.</span><span class="sxs-lookup"><span data-stu-id="a925f-338">A <see cref="T:System.Windows.Documents.TextPointer" /> positioned immediately after the <see cref="T:System.Windows.Documents.LineBreak" /> element inserted by this method.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertParagraphBreak">
      <MemberSignature Language="C#" Value="public System.Windows.Documents.TextPointer InsertParagraphBreak ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Documents.TextPointer InsertParagraphBreak() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.TextPointer.InsertParagraphBreak" />
      <MemberSignature Language="VB.NET" Value="Public Function InsertParagraphBreak () As TextPointer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Documents::TextPointer ^ InsertParagraphBreak();" />
      <MemberSignature Language="F#" Value="member this.InsertParagraphBreak : unit -&gt; System.Windows.Documents.TextPointer" Usage="textPointer.InsertParagraphBreak " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.TextPointer</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a925f-339">Fügt an der aktuellen Position einen Absatzwechsel ein.</span><span class="sxs-lookup"><span data-stu-id="a925f-339">Inserts a paragraph break at the current position.</span></span></summary>
        <returns><span data-ttu-id="a925f-340">Ein <see cref="T:System.Windows.Documents.TextPointer" /> auf den Anfang (<see cref="P:System.Windows.Documents.TextElement.ContentStart" />) des neuen Absatzes.</span><span class="sxs-lookup"><span data-stu-id="a925f-340">A <see cref="T:System.Windows.Documents.TextPointer" /> to the beginning (<see cref="P:System.Windows.Documents.TextElement.ContentStart" />) of the new paragraph.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a925f-341">Wenn diese Methode aufgerufen wird, wenn sich die aktuelle Position innerhalb eines vorhandenen <xref:System.Windows.Documents.Paragraph> Elements befindet, werden der vorhandene Absatz und der darin enthaltene Inhalt in zwei Absätze an der aktuellen Position aufgeteilt.</span><span class="sxs-lookup"><span data-stu-id="a925f-341">If this method is called when the current position is inside of an existing <xref:System.Windows.Documents.Paragraph> element, the existing paragraph and any content it contains are split into two paragraphs at the current position.</span></span>  <span data-ttu-id="a925f-342">Wenn diese Methode aufgerufen wird, wenn die aktuelle Position nicht innerhalb eines vorhandenen Absatzes liegt, wird ein neuer, leerer Absatz eingefügt.</span><span class="sxs-lookup"><span data-stu-id="a925f-342">If this method is called when the current position is not inside of an existing paragraph, a new, empty paragraph is inserted.</span></span>  <span data-ttu-id="a925f-343">Wenn diese Methode an einer Position aufgerufen wird, die für das Aufteilen oder Einfügen eines Absatzes ungeeignet ist (z. b. wenn sich die aktuelle Position in einem- <xref:System.Windows.Documents.Hyperlink> Element befindet), wird eine Ausnahme ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="a925f-343">If this method is called at a position unsuitable for splitting or inserting a paragraph (for example, if the current position is inside of a <xref:System.Windows.Documents.Hyperlink> element), an exception is thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="a925f-344">Diese Methode wird an einer Position aufgerufen, an der keine Aufteilung für das Einfügen eines neuen Absatzes erfolgen kann, z. B. im Bereich eines <see cref="T:System.Windows.Documents.Hyperlink" /> oder eines <see cref="T:System.Windows.Documents.InlineUIContainer" />.</span><span class="sxs-lookup"><span data-stu-id="a925f-344">This method is called on a position that cannot be split to accommodate a new paragraph, such as in the scope of a <see cref="T:System.Windows.Documents.Hyperlink" /> or <see cref="T:System.Windows.Documents.InlineUIContainer" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="InsertTextInRun">
      <MemberSignature Language="C#" Value="public void InsertTextInRun (string textData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void InsertTextInRun(string textData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.TextPointer.InsertTextInRun(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub InsertTextInRun (textData As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void InsertTextInRun(System::String ^ textData);" />
      <MemberSignature Language="F#" Value="member this.InsertTextInRun : string -&gt; unit" Usage="textPointer.InsertTextInRun textData" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textData" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="textData"><span data-ttu-id="a925f-345">Der einzufügende Text.</span><span class="sxs-lookup"><span data-stu-id="a925f-345">The text to insert.</span></span></param>
        <summary><span data-ttu-id="a925f-346">Fügt den angegebenen Text an der aktuellen Position in den <see cref="T:System.Windows.Documents.Run" /> des Texts ein.</span><span class="sxs-lookup"><span data-stu-id="a925f-346">Inserts the specified text into the text <see cref="T:System.Windows.Documents.Run" /> at the current position.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a925f-347">Wenn der <xref:System.Windows.Documents.TextPointer> nicht durch ein-Element festgelegt ist <xref:System.Windows.Documents.Run> , <xref:System.Windows.Documents.Run> wird eine zusammen mit der eingefügt `textData` .</span><span class="sxs-lookup"><span data-stu-id="a925f-347">If the <xref:System.Windows.Documents.TextPointer> is not scoped by a <xref:System.Windows.Documents.Run> element, a <xref:System.Windows.Documents.Run> is inserted along with the `textData`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="a925f-348">Die aktuelle Position befindet sich nicht in einem <see cref="T:System.Windows.Documents.Run" />-Element.</span><span class="sxs-lookup"><span data-stu-id="a925f-348">The current position is not within a <see cref="T:System.Windows.Documents.Run" /> element.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a925f-349"><paramref name="textData" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a925f-349"><paramref name="textData" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IsAtInsertionPosition">
      <MemberSignature Language="C#" Value="public bool IsAtInsertionPosition { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAtInsertionPosition" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.TextPointer.IsAtInsertionPosition" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsAtInsertionPosition As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsAtInsertionPosition { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsAtInsertionPosition : bool" Usage="System.Windows.Documents.TextPointer.IsAtInsertionPosition" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a925f-350">Ruft einen Wert ab, mit dem angegeben wird, ob die aktuelle Position eine Einfügeposition ist.</span><span class="sxs-lookup"><span data-stu-id="a925f-350">Gets a value that indicates whether the current position is an insertion position.</span></span></summary>
        <value><span data-ttu-id="a925f-351"><see langword="true" />, wenn die aktuelle Position eine Einfügeposition ist, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="a925f-351"><see langword="true" /> if the current position is an insertion position; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a925f-352">Eine Einfügeposition ist eine Position, an der neuer Inhalt hinzugefügt werden kann, ohne dass alle semantischen Regeln für den zugehörigen Inhalt unterbrochen werden</span><span class="sxs-lookup"><span data-stu-id="a925f-352">An insertion position is a position where new content may be added without breaking any semantic rules for the associated content.</span></span>  <span data-ttu-id="a925f-353">In der Praxis befindet sich eine Einfügemarke an einer beliebigen Stelle im Inhalt, an der ein Caretzeichen positioniert werden</span><span class="sxs-lookup"><span data-stu-id="a925f-353">In practice, an insertion position is anywhere in content where a caret may be positioned.</span></span>  <span data-ttu-id="a925f-354">Ein Beispiel für eine gültige <xref:System.Windows.Documents.TextPointer> Position, bei der es sich nicht um eine Einfügeposition handelt, ist die Position zwischen zwei angrenzenden Tags (d. h. <xref:System.Windows.Documents.Paragraph> zwischen dem schließenden Tag des vorangehenden Absatzes und dem öffnenden Tag des nächsten Absatzes).</span><span class="sxs-lookup"><span data-stu-id="a925f-354">An example of a valid <xref:System.Windows.Documents.TextPointer> position that is not an insertion position is the position between two adjacent <xref:System.Windows.Documents.Paragraph> tags (that is, between the closing tag of the preceding paragraph and the opening tag of the next paragraph).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Documents.TextPointer.GetInsertionPosition(System.Windows.Documents.LogicalDirection)" />
        <altmember cref="M:System.Windows.Documents.TextPointer.GetNextInsertionPosition(System.Windows.Documents.LogicalDirection)" />
      </Docs>
    </Member>
    <Member MemberName="IsAtLineStartPosition">
      <MemberSignature Language="C#" Value="public bool IsAtLineStartPosition { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAtLineStartPosition" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.TextPointer.IsAtLineStartPosition" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsAtLineStartPosition As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsAtLineStartPosition { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsAtLineStartPosition : bool" Usage="System.Windows.Documents.TextPointer.IsAtLineStartPosition" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a925f-355">Ruft einen Wert ab, mit dem angegeben wird, ob sich die aktuelle Position am Anfang einer Zeile befindet.</span><span class="sxs-lookup"><span data-stu-id="a925f-355">Gets a value that indicates whether the current position is at the beginning of a line.</span></span></summary>
        <value><span data-ttu-id="a925f-356"><see langword="true" />, wenn sich die aktuelle Position am Anfang einer Zeile befindet, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="a925f-356"><see langword="true" /> if the current position is at the beginning of a line; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a925f-357">Wenn das <xref:System.Windows.Documents.TextPointer> auf eine mehrdeutige Position zeigt, z. b. zwischen zwei Zeilen, wird die Zeile in der durch die-Eigenschaft angegebenen Richtung <xref:System.Windows.Documents.TextPointer.LogicalDirection%2A> als relative anfangs Linie ausgewählt.</span><span class="sxs-lookup"><span data-stu-id="a925f-357">If the <xref:System.Windows.Documents.TextPointer> points to an ambiguous position, for example, between two lines, the line in the direction specified by the <xref:System.Windows.Documents.TextPointer.LogicalDirection%2A> property is selected as the relative starting line.</span></span>  
  
 <span data-ttu-id="a925f-358">Der von dieser Eigenschaft ausgeführte Vorgang hängt von einem gültigen Layout ab.</span><span class="sxs-lookup"><span data-stu-id="a925f-358">The operation performed by this property depends on a valid layout.</span></span>  <span data-ttu-id="a925f-359">Bei Bedarf versucht diese Methode, ein gültiges Layout automatisch neu zu generieren, bevor der Vorgang fortgesetzt wird.</span><span class="sxs-lookup"><span data-stu-id="a925f-359">When necessary, this method attempts to automatically regenerate a valid layout before proceeding with the operation.</span></span>  <span data-ttu-id="a925f-360">Das erneute Generieren eines Layouts kann ein relativ kostspieliger Vorgang sein.</span><span class="sxs-lookup"><span data-stu-id="a925f-360">Regenerating a layout can be a relatively expensive operation.</span></span>  <span data-ttu-id="a925f-361">Verwenden Sie die- <xref:System.Windows.Documents.TextPointer.HasValidLayout%2A> Eigenschaft, um ein gültiges Layout zu suchen, bevor Sie Vorgänge ausführen, die das Layout möglicherweise erneut generieren</span><span class="sxs-lookup"><span data-stu-id="a925f-361">Use the <xref:System.Windows.Documents.TextPointer.HasValidLayout%2A> property to check for a valid layout before performing operations that may regenerate the layout.</span></span>  <span data-ttu-id="a925f-362">Weitere Informationen finden Sie unter [Layout](/dotnet/framework/wpf/advanced/layout).</span><span class="sxs-lookup"><span data-stu-id="a925f-362">For more information, see [Layout](/dotnet/framework/wpf/advanced/layout).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.TextPointer.IsAtLineStartPosition" />
      </Docs>
    </Member>
    <Member MemberName="IsInSameDocument">
      <MemberSignature Language="C#" Value="public bool IsInSameDocument (System.Windows.Documents.TextPointer textPosition);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsInSameDocument(class System.Windows.Documents.TextPointer textPosition) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.TextPointer.IsInSameDocument(System.Windows.Documents.TextPointer)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsInSameDocument (textPosition As TextPointer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsInSameDocument(System::Windows::Documents::TextPointer ^ textPosition);" />
      <MemberSignature Language="F#" Value="member this.IsInSameDocument : System.Windows.Documents.TextPointer -&gt; bool" Usage="textPointer.IsInSameDocument textPosition" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textPosition" Type="System.Windows.Documents.TextPointer" />
      </Parameters>
      <Docs>
        <param name="textPosition"><span data-ttu-id="a925f-363">Ein <see cref="T:System.Windows.Documents.TextPointer" />, der eine Position angibt, die mit der aktuellen Position verglichen werden soll.</span><span class="sxs-lookup"><span data-stu-id="a925f-363">A <see cref="T:System.Windows.Documents.TextPointer" /> that specifies a position to compare to the current position.</span></span></param>
        <summary><span data-ttu-id="a925f-364">Gibt an, ob sich die angegebene Position im gleichen Textcontainer wie die aktuelle Position befindet.</span><span class="sxs-lookup"><span data-stu-id="a925f-364">Indicates whether the specified position is in the same text container as the current position.</span></span></summary>
        <returns><span data-ttu-id="a925f-365"><see langword="true" />, wenn mit <paramref name="textPosition" /> eine Position angegeben wird, die sich im gleichen Textcontainer wie die aktuelle Position befindet, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="a925f-365"><see langword="true" /> if <paramref name="textPosition" /> indicates a position that is in the same text container as the current position; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a925f-366">Die meisten Vorgänge, die mehrere Instanzen umfassen, <xref:System.Windows.Documents.TextPointer> sind nur gültig, wenn die fraglichen Instanzen Positionen angeben, die sich im gleichen Text Containerbereich befinden.</span><span class="sxs-lookup"><span data-stu-id="a925f-366">Most operations that involve multiple <xref:System.Windows.Documents.TextPointer> instances are only valid if the instances in question indicate positions that are in the same text container scope.</span></span>  <span data-ttu-id="a925f-367">Beispielsweise <xref:System.Windows.Documents.TextPointer.CompareTo%2A> können die-Methode und die- <xref:System.Windows.Documents.TextPointer.GetOffsetToPosition%2A> Methode nicht mit einem <xref:System.Windows.Documents.TextPointer> an eine Position außerhalb des Text Containers, der der aktuellen Position zugeordnet ist, verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="a925f-367">For example the <xref:System.Windows.Documents.TextPointer.CompareTo%2A> and <xref:System.Windows.Documents.TextPointer.GetOffsetToPosition%2A> methods cannot be used with a <xref:System.Windows.Documents.TextPointer> to a position outside of the text container associated with the current position.</span></span>  <span data-ttu-id="a925f-368">Verwenden Sie diese Methode, um zu überprüfen, ob eine angegebene <xref:System.Windows.Documents.TextPointer> mit der aktuellen Position für solche Vorgänge kompatibel ist.</span><span class="sxs-lookup"><span data-stu-id="a925f-368">Use this method to verify that a specified <xref:System.Windows.Documents.TextPointer> is compatible with the current position for such operations.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a925f-369">Im folgenden Beispiel wird eine Verwendung für diese Methode veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="a925f-369">The following example demonstrates a use for this method.</span></span>  <span data-ttu-id="a925f-370">Im Beispiel wird die- <xref:System.Windows.Documents.TextPointer.IsInSameDocument%2A> Methode verwendet, um zu überprüfen, ob ein angegebenes <xref:System.Windows.Documents.TextPointer> zwischen zwei anderen angegebenen-Instanzen positioniert ist <xref:System.Windows.Documents.TextPointer> , wenn keine Garantie besteht, dass alle drei Positionen zu demselben Text Container gehören.</span><span class="sxs-lookup"><span data-stu-id="a925f-370">The example uses the <xref:System.Windows.Documents.TextPointer.IsInSameDocument%2A> method to check whether a specified <xref:System.Windows.Documents.TextPointer> is positioned between two other specified <xref:System.Windows.Documents.TextPointer> instances in a situation when there is no guarantee that all three positions belong to the same text container.</span></span>  
  
 [!code-csharp[TextPointer_Snippets#_TextPointer_IsInSameDocument](~/samples/snippets/csharp/VS_Snippets_Wpf/TextPointer_Snippets/CSharp/Window1.xaml.cs#_textpointer_isinsamedocument)]
 [!code-vb[TextPointer_Snippets#_TextPointer_IsInSameDocument](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextPointer_Snippets/visualbasic/window1.xaml.vb#_textpointer_isinsamedocument)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a925f-371"><paramref name="textPosition" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a925f-371"><paramref name="textPosition" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="LogicalDirection">
      <MemberSignature Language="C#" Value="public System.Windows.Documents.LogicalDirection LogicalDirection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Documents.LogicalDirection LogicalDirection" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.TextPointer.LogicalDirection" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LogicalDirection As LogicalDirection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Documents::LogicalDirection LogicalDirection { System::Windows::Documents::LogicalDirection get(); };" />
      <MemberSignature Language="F#" Value="member this.LogicalDirection : System.Windows.Documents.LogicalDirection" Usage="System.Windows.Documents.TextPointer.LogicalDirection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.LogicalDirection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a925f-372">Ruft die der aktuellen Position zugeordnete logische Richtung ab, mit der der aktuellen Position zugeordneter Inhalt unterschieden werden kann.</span><span class="sxs-lookup"><span data-stu-id="a925f-372">Gets the logical direction associated with the current position which is used to disambiguate content associated with the current position.</span></span></summary>
        <value><span data-ttu-id="a925f-373">Der <see cref="T:System.Windows.Documents.LogicalDirection" />-Wert, der der aktuellen Position zugeordnet ist.</span><span class="sxs-lookup"><span data-stu-id="a925f-373">The <see cref="T:System.Windows.Documents.LogicalDirection" /> value that is associated with the current position.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a925f-374">Als Beispiel für die Verwendung dieser Eigenschaft gibt der der von <xref:System.Windows.Documents.LogicalDirection> <xref:System.Windows.Documents.TextPointer> einer Treffer Testmethode zurückgegebenen einen Treffer zwischen zwei Textzeichen zurück.</span><span class="sxs-lookup"><span data-stu-id="a925f-374">As an example of how this property is used, the <xref:System.Windows.Documents.LogicalDirection> of the <xref:System.Windows.Documents.TextPointer> returned by a hit test method gives a hit that is between two characters of text.</span></span> <span data-ttu-id="a925f-375">Die logische Richtung gibt an, welches der beiden Zeichen tatsächlich auf der linken oder rechten Seite gedrückt wurde.</span><span class="sxs-lookup"><span data-stu-id="a925f-375">The logical direction specifies which of the two characters was actually hit - the left or the right.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Paragraph">
      <MemberSignature Language="C#" Value="public System.Windows.Documents.Paragraph Paragraph { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Documents.Paragraph Paragraph" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.TextPointer.Paragraph" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Paragraph As Paragraph" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Documents::Paragraph ^ Paragraph { System::Windows::Documents::Paragraph ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Paragraph : System.Windows.Documents.Paragraph" Usage="System.Windows.Documents.TextPointer.Paragraph" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.Paragraph</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a925f-376">Ruft den Absatz ab, mit dem ggf. die aktuelle Position festgelegt wird.</span><span class="sxs-lookup"><span data-stu-id="a925f-376">Gets the paragraph that scopes the current position, if any.</span></span></summary>
        <value><span data-ttu-id="a925f-377">Die <see cref="T:System.Windows.Documents.Paragraph" /> , die die aktuelle Position eingibt, oder, <see langword="null" /> Wenn kein solcher Absatz vorhanden ist.</span><span class="sxs-lookup"><span data-stu-id="a925f-377">The <see cref="T:System.Windows.Documents.Paragraph" /> that scopes the current position, or <see langword="null" /> if no such paragraph exists.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Documents.TextPointer.Parent" />
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public System.Windows.DependencyObject Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.DependencyObject Parent" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.TextPointer.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As DependencyObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::DependencyObject ^ Parent { System::Windows::DependencyObject ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Parent : System.Windows.DependencyObject" Usage="System.Windows.Documents.TextPointer.Parent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyObject</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a925f-378">Ruft das logische übergeordnete Element ab, mit dem die aktuelle Position festgelegt wird.</span><span class="sxs-lookup"><span data-stu-id="a925f-378">Gets the logical parent that scopes the current position.</span></span></summary>
        <value><span data-ttu-id="a925f-379">Das logische übergeordnete Element, mit dem die aktuelle Position festgelegt wird.</span><span class="sxs-lookup"><span data-stu-id="a925f-379">The logical parent that scopes the current position.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Documents.TextPointer.Paragraph" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.TextPointer.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="textPointer.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a925f-380">Dieser Typ oder Member unterstützt die [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)]-Infrastruktur und ist nicht für die direkte Verwendung im Code vorgesehen.</span><span class="sxs-lookup"><span data-stu-id="a925f-380">This type or member supports the [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] infrastructure and is not intended to be used directly from your code.</span></span></summary>
        <returns><span data-ttu-id="a925f-381">Die Zeichenfolge, die das Objekt darstellt.</span><span class="sxs-lookup"><span data-stu-id="a925f-381">The string that represents the object.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
