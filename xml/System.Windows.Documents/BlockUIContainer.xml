<Type Name="BlockUIContainer" FullName="System.Windows.Documents.BlockUIContainer">
  <Metadata><Meta Name="ms.openlocfilehash" Value="3907c871e8258ec70c99f6cfeaa83e117851558d" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86711674" /></Metadata><TypeSignature Language="C#" Value="public class BlockUIContainer : System.Windows.Documents.Block" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit BlockUIContainer extends System.Windows.Documents.Block" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Documents.BlockUIContainer" />
  <TypeSignature Language="VB.NET" Value="Public Class BlockUIContainer&#xA;Inherits Block" />
  <TypeSignature Language="C++ CLI" Value="public ref class BlockUIContainer : System::Windows::Documents::Block" />
  <TypeSignature Language="F#" Value="type BlockUIContainer = class&#xA;    inherit Block" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Documents.Block</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.Windows.Markup.ContentProperty("Child")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Windows.Markup.ContentProperty("Child")&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Ein Element für fortlaufenden Inhalt auf Blockebene, das <see cref="T:System.Windows.UIElement" />-Elemente aktiviert (dh. ein <see cref="T:System.Windows.Controls.Button" />) die (gehostet) im fortlaufenden Inhalt eingebettet werden sollen.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ein- <xref:System.Windows.UIElement> Element (d. h. ein <xref:System.Windows.Controls.Button> ) kann direkt in den fortlaufenden Inhalt eingebettet werden, indem es in ein-Element eingebunden wird <xref:System.Windows.Documents.BlockUIContainer> (siehe Beispiel unten).  
  
 Ein <xref:System.Windows.Documents.BlockUIContainer> kann möglicherweise nicht mehr als ein untergeordnetes Element hosten <xref:System.Windows.UIElement> .  Das untergeordnete Element, das von einem gehostet wird, kann jedoch eigene untergeordnete Elemente <xref:System.Windows.Documents.BlockUIContainer> hosten.  
  
   
  
## Examples  
 Im folgenden Beispiel wird gezeigt, wie die <xref:System.Windows.Documents.BlockUIContainer> Elemente zum Hosten <xref:System.Windows.UIElement> von Elementen innerhalb von fortlaufendem Inhalt verwendet werden.  
  
 [!code-xaml[SpanSnippets#_BlockUIXAML](~/samples/snippets/csharp/VS_Snippets_Wpf/SpanSnippets/CSharp/Window1.xaml#_blockuixaml)]  
  
 Die folgende Abbildung zeigt, wie dieses Beispiel gerendert wird.  
  
 ![Bildschirmabbildung: UIElement eingebettet in fortlaufenden Inhalt](~/add/media/blockuicontainer.png "Bildschirmabbildung: UIElement eingebettet in fortlaufenden Inhalt")  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Documents.InlineUIContainer" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Windows.Documents.BlockUIContainer" />-Klasse.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BlockUIContainer ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.BlockUIContainer.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BlockUIContainer();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue leere Instanz der <see cref="T:System.Windows.Documents.BlockUIContainer" />-Klasse.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BlockUIContainer (System.Windows.UIElement uiElement);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.UIElement uiElement) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.BlockUIContainer.#ctor(System.Windows.UIElement)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (uiElement As UIElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BlockUIContainer(System::Windows::UIElement ^ uiElement);" />
      <MemberSignature Language="F#" Value="new System.Windows.Documents.BlockUIContainer : System.Windows.UIElement -&gt; System.Windows.Documents.BlockUIContainer" Usage="new System.Windows.Documents.BlockUIContainer uiElement" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="uiElement" Type="System.Windows.UIElement" />
      </Parameters>
      <Docs>
        <param name="uiElement">Ein <see cref="T:System.Windows.UIElement" />-Objekt, mit dem der ursprüngliche Inhalt des neuen <see cref="T:System.Windows.Documents.BlockUIContainer" /> angegeben wird.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Windows.Documents.BlockUIContainer" />-Klasse und übernimmt ein bestimmtes <see cref="T:System.Windows.UIElement" />-Objekt als ursprünglichen Inhalt des neuen <see cref="T:System.Windows.Documents.BlockUIContainer" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Im folgenden Beispiel wird die Verwendung dieses Konstruktors veranschaulicht.  
  
 [!code-csharp[SpanSnippets#_BlockUI_Const1](~/samples/snippets/csharp/VS_Snippets_Wpf/SpanSnippets/CSharp/Window1.xaml.cs#_blockui_const1)]
 [!code-vb[SpanSnippets#_BlockUI_Const1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/SpanSnippets/visualbasic/window1.xaml.vb#_blockui_const1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Child">
      <MemberSignature Language="C#" Value="public System.Windows.UIElement Child { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.UIElement Child" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.BlockUIContainer.Child" />
      <MemberSignature Language="VB.NET" Value="Public Property Child As UIElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::UIElement ^ Child { System::Windows::UIElement ^ get(); void set(System::Windows::UIElement ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Child : System.Windows.UIElement with get, set" Usage="System.Windows.Documents.BlockUIContainer.Child" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.UIElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft das vom <see cref="T:System.Windows.UIElement" /> gehostete <see cref="T:System.Windows.Documents.BlockUIContainer" /> ab oder legt dieses fest.</summary>
        <value>Das vom <see cref="T:System.Windows.UIElement" /> gehostete <see cref="T:System.Windows.Documents.BlockUIContainer" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ein <xref:System.Windows.Documents.BlockUIContainer> kann möglicherweise nicht mehr als ein untergeordnetes Element hosten <xref:System.Windows.UIElement> .  Das untergeordnete Element, das von einem gehostet wird, kann jedoch eigene untergeordnete Elemente <xref:System.Windows.Documents.BlockUIContainer> hosten.  
  
 In [!INCLUDE[TLA#tla_titlexaml](~/includes/tlasharptla-titlexaml-md.md)] entspricht das Wrapping eines <xref:System.Windows.UIElement> in einem dem <xref:System.Windows.Documents.BlockUIContainer> Festlegen dieser <xref:System.Windows.UIElement> als Wert der- <xref:System.Windows.Documents.BlockUIContainer.Child%2A> Eigenschaft.  
  
   
  
## Examples  
 Im folgenden Beispiel wird gezeigt, wie die <xref:System.Windows.Documents.BlockUIContainer> Elemente zum Hosten <xref:System.Windows.UIElement> von Elementen innerhalb von fortlaufendem Inhalt verwendet werden.  
  
 [!code-xaml[SpanSnippets#_BlockUIXAML](~/samples/snippets/csharp/VS_Snippets_Wpf/SpanSnippets/CSharp/Window1.xaml#_blockuixaml)]  
  
 Die folgende Abbildung zeigt, wie dieses Beispiel gerendert wird.  
  
 ![Bildschirmabbildung: UIElement eingebettet in fortlaufenden Inhalt](~/add/media/blockuicontainer.png "Bildschirmabbildung: UIElement eingebettet in fortlaufenden Inhalt")  
  
 Im folgenden Beispiel wird gezeigt, wie die-Eigenschaft Programm gesteuert verwendet wird <xref:System.Windows.Documents.BlockUIContainer.Child%2A> .  
  
 [!code-csharp[spansnippets#_BlockUI_Child](~/samples/snippets/csharp/VS_Snippets_Wpf/SpanSnippets/CSharp/Window1.xaml.cs#_blockui_child)]
 [!code-vb[spansnippets#_BlockUI_Child](~/samples/snippets/visualbasic/VS_Snippets_Wpf/SpanSnippets/visualbasic/window1.xaml.vb#_blockui_child)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
