<Type Name="AnchoredBlock" FullName="System.Windows.Documents.AnchoredBlock">
  <Metadata><Meta Name="ms.openlocfilehash" Value="e4fcbd11dedcaaa3ff79684a5bd19820e5d388db" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70457046" /></Metadata><TypeSignature Language="C#" Value="public abstract class AnchoredBlock : System.Windows.Documents.Inline" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit AnchoredBlock extends System.Windows.Documents.Inline" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Documents.AnchoredBlock" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class AnchoredBlock&#xA;Inherits Inline" />
  <TypeSignature Language="C++ CLI" Value="public ref class AnchoredBlock abstract : System::Windows::Documents::Inline" />
  <TypeSignature Language="F#" Value="type AnchoredBlock = class&#xA;    inherit Inline" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Documents.Inline</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Windows.Markup.ContentProperty("Blocks")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Eine abstrakte Klasse, die eine Basis für <see cref="T:System.Windows.Documents.Inline" />-Elemente bereitstellt, die zum Verankern von <see cref="T:System.Windows.Documents.Block" />-Elementen für fortlaufenden Inhalt verwendet werden.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected AnchoredBlock (System.Windows.Documents.Block block, System.Windows.Documents.TextPointer insertionPosition);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Windows.Documents.Block block, class System.Windows.Documents.TextPointer insertionPosition) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.AnchoredBlock.#ctor(System.Windows.Documents.Block,System.Windows.Documents.TextPointer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; AnchoredBlock(System::Windows::Documents::Block ^ block, System::Windows::Documents::TextPointer ^ insertionPosition);" />
      <MemberSignature Language="F#" Value="new System.Windows.Documents.AnchoredBlock : System.Windows.Documents.Block * System.Windows.Documents.TextPointer -&gt; System.Windows.Documents.AnchoredBlock" Usage="new System.Windows.Documents.AnchoredBlock (block, insertionPosition)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="block" Type="System.Windows.Documents.Block" />
        <Parameter Name="insertionPosition" Type="System.Windows.Documents.TextPointer" />
      </Parameters>
      <Docs>
        <param name="block">Ein <see cref="T:System.Windows.Documents.Block" />-Objekt, das den ursprünglichen Inhalt des neuen Elements angibt.  Dieser Parameter ist möglicherweise <see langword="null" />. In diesem Fall wird kein <see cref="T:System.Windows.Documents.Block" /> eingefügt.</param>
        <param name="insertionPosition">Ein <see cref="T:System.Windows.Documents.TextPointer" />, der eine Einfügeposition angibt, an der das Element nach dem Erstellen eingefügt werden soll, oder <see langword="null" />, wenn keine automatische Einfügung erfolgen soll.</param>
        <summary>Initialisiert beim Aufruf in einer abgeleiteten Klasse Basisklassenwerte und übernimmt ein angegebenes <see cref="T:System.Windows.Documents.Block" />-Objekt als ursprünglichen Inhalt des neuen Nachfolgerelements von <see cref="T:System.Windows.Documents.AnchoredBlock" /> sowie einen <see cref="T:System.Windows.Documents.TextPointer" />, der eine Einfügeposition für das neue untergeordnete <see cref="T:System.Windows.Documents.AnchoredBlock" />-Element angibt.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Blocks">
      <MemberSignature Language="C#" Value="public System.Windows.Documents.BlockCollection Blocks { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Documents.BlockCollection Blocks" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.AnchoredBlock.Blocks" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Blocks As BlockCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Documents::BlockCollection ^ Blocks { System::Windows::Documents::BlockCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Blocks : System.Windows.Documents.BlockCollection" Usage="System.Windows.Documents.AnchoredBlock.Blocks" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.BlockCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft eine <see cref="T:System.Windows.Documents.BlockCollection" /> ab, die <see cref="T:System.Windows.Documents.Block" />-Elemente der obersten Ebene enthält, die den Inhalt des Elements umfassen.</summary>
        <value>Eine <see cref="T:System.Windows.Documents.BlockCollection" /> mit den <see cref="T:System.Windows.Documents.Block" />-Elementen, die den Inhalt des Elements umfassen.  
  
Diese Eigenschaft hat keinen Standardwert.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BorderBrush">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Brush BorderBrush { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.Brush BorderBrush" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.AnchoredBlock.BorderBrush" />
      <MemberSignature Language="VB.NET" Value="Public Property BorderBrush As Brush" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::Brush ^ BorderBrush { System::Windows::Media::Brush ^ get(); void set(System::Windows::Media::Brush ^ value); };" />
      <MemberSignature Language="F#" Value="member this.BorderBrush : System.Windows.Media.Brush with get, set" Usage="System.Windows.Documents.AnchoredBlock.BorderBrush" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Brush</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen beim Zeichnen des Rahmens des Elements zu verwendenden <see cref="T:System.Windows.Media.Brush" /> ab oder legt diesen fest.</summary>
        <value>Der Pinsel, der für den Rahmen des Elements verwendet wird. Der Standardwert ist ein <see langword="null" /> Pinsel.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Eine Tabelle mit Dragquellen, die die verfügbaren vordefinierten Pinsel Farben anzeigen, finden <xref:System.Windows.Media.Brushes>Sie unter.  
  
<a name="dependencyPropertyInfo_BorderBrush"></a>   
## <a name="dependency-property-information"></a>Informationen zur Abhängigkeitseigenschaft  
  
|||  
|-|-|  
|Bezeichnerfeld|<xref:System.Windows.Documents.AnchoredBlock.BorderBrushProperty>|  
|Metadateneigenschaften auf `true` festgelegt|<xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>|  
  
   
  
## Examples  
 Im folgenden Beispiel wird gezeigt, wie das <xref:System.Windows.Documents.Block.BorderBrush%2A> -Attribut eines-Elements<xref:System.Windows.Documents.Paragraph>() festgelegt wird.  
  
 [!code-xaml[BlockSnippets#_Block_BordersXAML](~/samples/snippets/csharp/VS_Snippets_Wpf/BlockSnippets/CSharp/Window1.xaml#_block_bordersxaml)]  
  
 Die folgende Abbildung zeigt, wie dieses Beispiel gerendert wird.  
  
 ![Bildschirm Abbildung: blau,&#47;1 4Zoll, Rahmen um Block] (~/add/media/block-borders.png "Bildschirm Abbildung: blau, 1/4 Zoll, Rahmen um Block")  
  
 Im folgenden Beispiel wird gezeigt, wie die <xref:System.Windows.Documents.Block.BorderBrush%2A> -Eigenschaft Programm gesteuert festgelegt wird.  
  
 [!code-csharp[BlockSnippets#_Block_Borders](~/samples/snippets/csharp/VS_Snippets_Wpf/BlockSnippets/CSharp/Window1.xaml.cs#_block_borders)]
 [!code-vb[BlockSnippets#_Block_Borders](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BlockSnippets/visualbasic/window1.xaml.vb#_block_borders)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.AnchoredBlock.BorderThickness" />
      </Docs>
    </Member>
    <Member MemberName="BorderBrushProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty BorderBrushProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty BorderBrushProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Documents.AnchoredBlock.BorderBrushProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly BorderBrushProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ BorderBrushProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable BorderBrushProperty : System.Windows.DependencyProperty" Usage="System.Windows.Documents.AnchoredBlock.BorderBrushProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Bezeichnet die <see cref="P:System.Windows.Documents.AnchoredBlock.BorderBrush" />-Abhängigkeitseigenschaft.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BorderThickness">
      <MemberSignature Language="C#" Value="public System.Windows.Thickness BorderThickness { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Thickness BorderThickness" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.AnchoredBlock.BorderThickness" />
      <MemberSignature Language="VB.NET" Value="Public Property BorderThickness As Thickness" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Thickness BorderThickness { System::Windows::Thickness get(); void set(System::Windows::Thickness value); };" />
      <MemberSignature Language="F#" Value="member this.BorderThickness : System.Windows.Thickness with get, set" Usage="System.Windows.Documents.AnchoredBlock.BorderThickness" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Thickness</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Stärke des Rahmens des Elements ab oder legt diese fest.</summary>
        <value>Eine <see cref="T:System.Windows.Thickness" /> -Struktur, die die Stärke des Rahmens in geräteunabhängigen Pixeln angibt.  
  
Der Standardwert ist die einheitliche Stärke 0 (null) (**0,0**).</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_BorderThickness"></a>   
## <a name="xaml-attribute-usage"></a>Verwendung von XAML-Attributen  
  
```  
<object BorderThickness="uniformThickness"/>  
- or -  
<object BorderThickness="independentThickness"/>  
- or -  
<object BorderThickness="qualifiedUniformThickness"/>  
- or -  
<object BorderThickness="qualifiedIndependentThickness"/>  
```  
  
<a name="xamlValues_BorderThickness"></a>   
## <a name="xaml-values"></a>XAML-Werte  
 *Uniform-Dicke*  
 Zeichen folgen Darstellung eines einzelnen <xref:System.Double> Werts, der einheitlich auf alle vier Größen Dimensionen angewendet werden soll.  Beispielsweise entspricht der `"10"` Wert einem Wert von. `"10,10,10,10"`  Ein nicht qualifizierter Wert wird in geräteunabhängigen Pixeln gemessen. Zeichen folgen müssen nicht explizit Dezimalstellen enthalten.  
  
 *independentdicke*  
 Zeichen folgen Darstellung von vier <xref:System.Double> geordneten Werten, die den unabhängigen Größen der Dicke für Links, oben, rechts und unten in dieser Reihenfolge entsprechen.  Die vier Werte müssen durch Kommas getrennt werden. Leerzeichen sind nicht zulässig.  "5, 10, 15, 20" ergibt z. b. 5 Pixel des Rahmens links neben dem Inhalt, 10 Pixel Rand oberhalb des Inhalts, 15 Pixel des Rahmens rechts neben Inhalt und 20 Pixel des Rahmens unterhalb des Inhalts.  
  
 *qualifiedunifordicke*  
 Ein durch *unifordicke* beschriebener Wert, gefolgt von einem der folgenden Einheits spezifiken `px`: `in`,.  
  
 `px`(Standard) ist[!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]  
  
 `in`ist Zoll; 1In = = 96px  
  
 Beispielsweise `"1in"` stellt einen einheitlichen Rahmen von 1 Zoll in alle Richtungen bereit.  
  
 *qualifiedindependentdicke*  
 Ein durch *independentdicke*beschriebener Wert, mit jedem unabhängigen Wert, gefolgt von einem der folgenden Einheits Spezifizierer `in`: `px`,.  
  
 `px`(Standard) ist[!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]  
  
 `in`ist Zoll; 1In = = 96px  
  
 Beispielsweise `"1.5in,0.8in,1.5in,0.8in"`.  Einheitenspezifizierer können aus einem oder mehreren Werten gemischt oder ausgelassen werden.  
  
<a name="dependencyPropertyInfo_BorderThickness"></a>   
## <a name="dependency-property-information"></a>Informationen zur Abhängigkeitseigenschaft  
  
|||  
|-|-|  
|Bezeichnerfeld|<xref:System.Windows.Documents.AnchoredBlock.BorderThicknessProperty>|  
|Metadateneigenschaften auf `true` festgelegt|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>|  
  
   
  
## Examples  
 Im folgenden Beispiel wird gezeigt, wie das <xref:System.Windows.Documents.Block.BorderThickness%2A> -Attribut <xref:System.Windows.Documents.Block> eines-Elements<xref:System.Windows.Documents.Paragraph>() festgelegt wird.  
  
 [!code-xaml[BlockSnippets#_Block_BordersXAML](~/samples/snippets/csharp/VS_Snippets_Wpf/BlockSnippets/CSharp/Window1.xaml#_block_bordersxaml)]  
  
 Die folgende Abbildung zeigt, wie dieses Beispiel gerendert wird.  
  
 ![Bildschirm Abbildung: blau,&#47;1 4Zoll, Rahmen um Block] (~/add/media/block-borders.png "Bildschirm Abbildung: blau, 1/4 Zoll, Rahmen um Block")  
  
 Im folgenden Beispiel wird gezeigt, wie die <xref:System.Windows.Documents.Block.BorderThickness%2A> -Eigenschaft Programm gesteuert festgelegt wird.  
  
 [!code-csharp[BlockSnippets#_Block_Borders](~/samples/snippets/csharp/VS_Snippets_Wpf/BlockSnippets/CSharp/Window1.xaml.cs#_block_borders)]
 [!code-vb[BlockSnippets#_Block_Borders](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BlockSnippets/visualbasic/window1.xaml.vb#_block_borders)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.AnchoredBlock.BorderBrush" />
      </Docs>
    </Member>
    <Member MemberName="BorderThicknessProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty BorderThicknessProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty BorderThicknessProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Documents.AnchoredBlock.BorderThicknessProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly BorderThicknessProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ BorderThicknessProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable BorderThicknessProperty : System.Windows.DependencyProperty" Usage="System.Windows.Documents.AnchoredBlock.BorderThicknessProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Bezeichnet die <see cref="P:System.Windows.Documents.AnchoredBlock.BorderThickness" />-Abhängigkeitseigenschaft.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LineHeight">
      <MemberSignature Language="C#" Value="public double LineHeight { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 LineHeight" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.AnchoredBlock.LineHeight" />
      <MemberSignature Language="VB.NET" Value="Public Property LineHeight As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double LineHeight { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.LineHeight : double with get, set" Usage="System.Windows.Documents.AnchoredBlock.LineHeight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.LengthConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Höhe der einzelnen Zeilen des Inhalts ab oder legt diese fest.</summary>
        <value>Ein Double-Wert, der die Zeilenhöhe in geräteunabhängigen Pixeln angibt.  <see cref="P:System.Windows.Documents.AnchoredBlock.LineHeight" />muss größer oder gleich <c>0,0034</c> und gleich oder kleiner als <c>160000</c>sein.  
  
Der Wert <see cref="F:System.Double.NaN" /> (entspricht dem Attribut Wert "<c>Auto</c>") bewirkt, dass die Zeilenhöhe automatisch anhand der aktuellen Schriftart Merkmale bestimmt wird.  
  
Der Standardwert ist <see cref="F:System.Double.NaN" />sein.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durch Ändern dieses Werts wird die Höhe des zugeordneten Textes nicht geändert. Stattdessen wird die Höhe der Zeile, die den Text enthält, geändert.  
  
 Zusätzlich zu dieser Eigenschaft wird das Layout der Zeilen in einem <xref:System.Windows.Documents.AnchoredBlock> <xref:System.Windows.Documents.AnchoredBlock.LineStackingStrategy%2A> von der-Eigenschaft beeinflusst.  
  
<a name="xamlAttributeUsage_LineHeight"></a>   
## <a name="xaml-attribute-usage"></a>Verwendung von XAML-Attributen  
  
```  
<object LineHeight="double"/>  
- or -  
<object LineHeight="qualifiedDouble"/>  
- or -  
<object LineHeight="Auto"/>  
```  
  
<a name="xamlValues_LineHeight"></a>   
## <a name="xaml-values"></a>XAML-Werte  
 *double*  
 Zeichen folgen Darstellung eines <xref:System.Double> Werts, der `0.0034` größer oder gleich, aber gleich oder kleiner als `160000`ist. Ein nicht qualifizierter Wert wird in geräteunabhängigen Pixeln gemessen. Zeichen folgen müssen nicht explizit Dezimalstellen enthalten.  
  
 *qualifiedDouble*  
 Ein *doppelter* Wert `Auto`, wie oben beschrieben (ausgenommen), gefolgt von einem der folgenden Einheits spezifiken: `in` `px`,, `cm`, `pt`.  
  
 `px`(Standard) ist[!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]  
  
 `in`ist Zoll; 1In = = 96px  
  
 `cm`ist Zentimeter; 1cm = = (96/2,54) px  
  
 `pt`ist Punkte 1pt = = (96/72) px  
  
 Auto  
 Bewirkt, dass die Zeilenhöhe automatisch anhand der aktuellen Schriftart Merkmale bestimmt wird.  Entspricht einem-Eigenschafts Wert <xref:System.Double.NaN>von.  
  
<a name="dependencyPropertyInfo_LineHeight"></a>   
## <a name="dependency-property-information"></a>Informationen zur Abhängigkeitseigenschaft  
  
|||  
|-|-|  
|Bezeichnerfeld|<xref:System.Windows.Documents.AnchoredBlock.LineHeightProperty>|  
|Metadateneigenschaften auf `true` festgelegt|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>, <xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>, <xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A>|  
  
   
  
## Examples  
 Im folgenden Beispiel wird gezeigt, wie das <xref:System.Windows.Documents.AnchoredBlock.LineHeight%2A> -Attribut <xref:System.Windows.Documents.Block> eines-Elements festgelegt wird.  
  
 [!code-xaml[BlockSnippets#_Block_LineHeightXAML](~/samples/snippets/csharp/VS_Snippets_Wpf/BlockSnippets/CSharp/Window1.xaml#_block_lineheightxaml)]  
  
 Die folgende Abbildung zeigt, wie das vorherige Beispiel gerendert wird.  
  
 ![Bildschirm Abbildung: FlowDocument LineHeight] (~/add/media/flowdocument-lineheight.png "Bildschirm Abbildung: FlowDocument LineHeight")  
  
 In der folgenden Abbildung wird gezeigt, wie das gleiche Beispiel mit der Standard <xref:System.Windows.Documents.AnchoredBlock.LineHeight%2A>Einstellung von = <xref:System.Double.NaN>gerendert wird.  
  
 ![Bildschirm Abbildung: FlowDocument LineHeight Standard] (~/add/media/flowdocument-lineheightdefault.png "Bildschirm Abbildung: FlowDocument LineHeight Standard")  
  
 Im folgenden Beispiel wird gezeigt, wie die <xref:System.Windows.Documents.AnchoredBlock.LineHeight%2A> -Eigenschaft Programm gesteuert festgelegt wird.  
  
 [!code-csharp[BlockSnippets#_Block_LineHeight](~/samples/snippets/csharp/VS_Snippets_Wpf/BlockSnippets/CSharp/Window1.xaml.cs#_block_lineheight)]
 [!code-vb[BlockSnippets#_Block_LineHeight](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BlockSnippets/visualbasic/window1.xaml.vb#_block_lineheight)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Die Auslösung erfolgt, wenn versucht wird, für <see cref="P:System.Windows.Controls.TextBlock.LineHeight" /> einen nicht positiven Wert festzulegen.</exception>
      </Docs>
    </Member>
    <Member MemberName="LineHeightProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty LineHeightProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty LineHeightProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Documents.AnchoredBlock.LineHeightProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LineHeightProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ LineHeightProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable LineHeightProperty : System.Windows.DependencyProperty" Usage="System.Windows.Documents.AnchoredBlock.LineHeightProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Bezeichnet die <see cref="P:System.Windows.Documents.AnchoredBlock.LineHeight" />-Abhängigkeitseigenschaft.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LineStackingStrategy">
      <MemberSignature Language="C#" Value="public System.Windows.LineStackingStrategy LineStackingStrategy { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.LineStackingStrategy LineStackingStrategy" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.AnchoredBlock.LineStackingStrategy" />
      <MemberSignature Language="VB.NET" Value="Public Property LineStackingStrategy As LineStackingStrategy" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::LineStackingStrategy LineStackingStrategy { System::Windows::LineStackingStrategy get(); void set(System::Windows::LineStackingStrategy value); };" />
      <MemberSignature Language="F#" Value="member this.LineStackingStrategy : System.Windows.LineStackingStrategy with get, set" Usage="System.Windows.Documents.AnchoredBlock.LineStackingStrategy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.LineStackingStrategy</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Mechanismus ab, mit dem ein Zeilenfeld für jede Textzeile im Textelement bestimmt wird, oder legt diesen fest.</summary>
        <value>Der Mechanismus, mit dem ein Zeilenfeld für jede Textzeile im Textelement bestimmt wird. Der Standardwert ist <see cref="F:System.Windows.LineStackingStrategy.MaxHeight" />sein.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_LineStackingStrategyProperty"></a>   
## <a name="dependency-property-information"></a>Informationen zur Abhängigkeitseigenschaft  
  
|||  
|-|-|  
|Bezeichnerfeld|<xref:System.Windows.Documents.AnchoredBlock.LineStackingStrategyProperty>|  
|Metadateneigenschaften auf `true` festgelegt|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>, <xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>, <xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A>|  
  
   
  
## Examples  
 Im folgenden Beispiel wird gezeigt, wie die <xref:System.Windows.Controls.TextBlock.LineStackingStrategy%2A> -Eigenschaft verwendet wird, um zu bestimmen, wie die Zeilen Felder für <xref:System.Windows.Controls.TextBlock>Textzeilen eines erstellt werden. Der erste <xref:System.Windows.Controls.TextBlock> <xref:System.Windows.LineStackingStrategy.MaxHeight> <xref:System.Windows.Controls.TextBlock> hat den <xref:System.Windows.LineStackingStrategy.BlockLineHeight>Wert, und der zweite hat den Wert. <xref:System.Windows.Controls.TextBlock.LineStackingStrategy%2A>  
  
 [!code-xaml[FlowMiscSnippets_snip#LineStackingStrategyExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/FlowMiscSnippets_snip/cs/linestackingstrategyexample.xaml#linestackingstrategyexamplewholepage)]  
  
 In der folgenden Abbildung ist das Ergebnis des obigen Codes dargestellt.  
  
 ![Bildschirm Abbildung: Vergleichen von LineStackingStrategy-Werten] (~/add/media/flow-linestackingstrategy.gif "Bildschirm Abbildung: Vergleichen von LineStackingStrategy-Werten")  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LineStackingStrategyProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty LineStackingStrategyProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty LineStackingStrategyProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Documents.AnchoredBlock.LineStackingStrategyProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LineStackingStrategyProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ LineStackingStrategyProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable LineStackingStrategyProperty : System.Windows.DependencyProperty" Usage="System.Windows.Documents.AnchoredBlock.LineStackingStrategyProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Bezeichnet die <see cref="P:System.Windows.Documents.AnchoredBlock.LineStackingStrategy" />-Abhängigkeitseigenschaft.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Margin">
      <MemberSignature Language="C#" Value="public System.Windows.Thickness Margin { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Thickness Margin" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.AnchoredBlock.Margin" />
      <MemberSignature Language="VB.NET" Value="Public Property Margin As Thickness" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Thickness Margin { System::Windows::Thickness get(); void set(System::Windows::Thickness value); };" />
      <MemberSignature Language="F#" Value="member this.Margin : System.Windows.Thickness with get, set" Usage="System.Windows.Documents.AnchoredBlock.Margin" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Thickness</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Stärke des Rands des Elements ab oder legt diese fest.</summary>
        <value>Eine <see cref="T:System.Windows.Thickness" /> -Struktur, die die Stärke des Rands in geräteunabhängigen Pixeln angibt.  
  
Der Standardwert ist die einheitliche Stärke 0 (null) (**0,0**).</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Documents.ListItem.Margin%2A>der Puffer Raum, der außerhalb des Inhalts Bereichs eines Elements liegt, zwischen den Rändern des Inhalts Bereichs des Elements und den Rändern des übergeordneten Elements.  Steht im <xref:System.Windows.Documents.ListItem.Padding%2A>Gegensatz zu, bei dem es sich um einen Pufferbereich handelt, der innerhalb des Inhalts Bereichs eines Elements liegt, zwischen dem Inhalt des Elements und dem inneren Rand des Elements.  
  
<a name="xamlAttributeUsage_Margin"></a>   
## <a name="xaml-attribute-usage"></a>Verwendung von XAML-Attributen  
  
```  
<object Margin="uniformThickness"/>  
- or -  
<object Margin="independentThickness"/>  
- or -  
<object Margin="qualifiedUniformThickness"/>  
- or -  
<object Margin="qualifiedIndependentThickness"/>  
```  
  
<a name="xamlValues_Margin"></a>   
## <a name="xaml-values"></a>XAML-Werte  
 *Uniform-Dicke*  
 Zeichen folgen Darstellung eines einzelnen <xref:System.Double> Werts, der einheitlich auf alle vier Größen Dimensionen angewendet werden soll.  Beispielsweise entspricht der `"10"` Wert einem Wert von. `"10,10,10,10"`  Ein nicht qualifizierter Wert wird in geräteunabhängigen Pixeln gemessen. Zeichen folgen müssen nicht explizit Dezimalstellen enthalten.  
  
 *independentdicke*  
 Zeichen folgen Darstellung von vier <xref:System.Double> geordneten Werten, die den unabhängigen Größen der Dicke für Links, oben, rechts und unten in dieser Reihenfolge entsprechen.  Die vier Werte müssen durch Kommas getrennt werden. Leerzeichen sind nicht zulässig.  Beispiel: "5, 10, 15, 20" ergibt 5 Pixel Rand links neben dem Inhalt, 10 Pixel Rand oberhalb des Inhalts, 15 Pixel Rand rechts neben dem Inhalt und 20 Pixel Rand unterhalb des Inhalts.  
  
 *qualifiedunifordicke*  
 Ein durch *unifordicke* beschriebener Wert, gefolgt von einem der folgenden Einheits spezifiken `px`: `in`,.  
  
 `px`(Standard) ist[!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]  
  
 `in`ist Zoll; 1In = = 96px  
  
 Beispielsweise `"1in"` bietet einen einheitlichen Rand von 1 Zoll in alle Richtungen.  
  
 *qualifiedindependentdicke*  
 Ein durch *independentdicke*beschriebener Wert, mit jedem unabhängigen Wert, gefolgt von einem der folgenden Einheits Spezifizierer `in`: `px`,.  
  
 `px`(Standard) ist[!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]  
  
 `in`ist Zoll; 1In = = 96px  
  
 Beispielsweise `"1.5in,0.8in,1.5in,0.8in"`.  Einheitenspezifizierer können aus einem oder mehreren Werten gemischt oder ausgelassen werden.  
  
<a name="dependencyPropertyInfo_Margin"></a>   
## <a name="dependency-property-information"></a>Informationen zur Abhängigkeitseigenschaft  
  
|||  
|-|-|  
|Bezeichnerfeld|<xref:System.Windows.Documents.AnchoredBlock.MarginProperty>|  
|Metadateneigenschaften auf `true` festgelegt|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>|  
  
   
  
## Examples  
 Im folgenden Beispiel wird gezeigt, wie das <xref:System.Windows.Documents.AnchoredBlock.Margin%2A> -Attribut <xref:System.Windows.Documents.Block> eines-Elements<xref:System.Windows.Documents.Paragraph>() festgelegt wird.  
  
 [!code-xaml[BlockSnippets#_Block_MarginPaddingXAML](~/samples/snippets/csharp/VS_Snippets_Wpf/BlockSnippets/CSharp/Window1.xaml#_block_marginpaddingxaml)]  
  
 Die folgende Abbildung zeigt, wie dieses Beispiel gerendert wird.  Zur Veranschaulichung werden übertriebene stärken und Farben verwendet.  
  
 ![Bildschirm Abbildung: Absätze mit Auffüll-und Seitenrändern] (~/add/media/block-marginpadding.png "Bildschirm Abbildung: Absätze mit Auffüll-und Seitenrändern")  
  
 Im folgenden Beispiel wird gezeigt, wie die <xref:System.Windows.Documents.AnchoredBlock.Margin%2A> -Eigenschaft Programm gesteuert festgelegt wird.  
  
 [!code-csharp[BlockSnippets#_Block_MarginPadding](~/samples/snippets/csharp/VS_Snippets_Wpf/BlockSnippets/CSharp/Window1.xaml.cs#_block_marginpadding)]
 [!code-vb[BlockSnippets#_Block_MarginPadding](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BlockSnippets/visualbasic/window1.xaml.vb#_block_marginpadding)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MarginProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty MarginProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty MarginProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Documents.AnchoredBlock.MarginProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MarginProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ MarginProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable MarginProperty : System.Windows.DependencyProperty" Usage="System.Windows.Documents.AnchoredBlock.MarginProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Bezeichnet die <see cref="P:System.Windows.Documents.AnchoredBlock.Margin" />-Abhängigkeitseigenschaft.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Padding">
      <MemberSignature Language="C#" Value="public System.Windows.Thickness Padding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Thickness Padding" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.AnchoredBlock.Padding" />
      <MemberSignature Language="VB.NET" Value="Public Property Padding As Thickness" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Thickness Padding { System::Windows::Thickness get(); void set(System::Windows::Thickness value); };" />
      <MemberSignature Language="F#" Value="member this.Padding : System.Windows.Thickness with get, set" Usage="System.Windows.Documents.AnchoredBlock.Padding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Thickness</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Abstandsstärke für das Element ab oder legt diese fest.</summary>
        <value>Eine <see cref="T:System.Windows.Thickness" /> -Struktur, die den anzuwendenden Abstand in geräteunabhängigen Pixeln angibt.  
  
Der Standardwert ist die einheitliche Stärke 0 (null) (**0,0**).</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Documents.ListItem.Padding%2A>der Puffer Raum, der innerhalb des Inhalts Bereichs eines Elements liegt, zwischen dem Inhalt des Elements und dem inneren Rand des Elements.  Steht im <xref:System.Windows.Documents.ListItem.Margin%2A>Gegensatz zu, bei dem es sich um einen Pufferbereich handelt, der außerhalb des Inhalts Bereichs eines Elements liegt, zwischen den Rändern des Inhalts Bereichs des Elements und den Rändern des übergeordneten Elements.  
  
<a name="xamlAttributeUsage_Padding"></a>   
## <a name="xaml-attribute-usage"></a>Verwendung von XAML-Attributen  
  
```  
<object Padding="uniformThickness"/>  
- or -  
<object Padding="independentThickness"/>  
- or -  
<object Padding="qualifiedUniformThickness"/>  
- or -  
<object Padding="qualifiedIndependentThickness"/>  
```  
  
<a name="xamlValues_Padding"></a>   
## <a name="xaml-values"></a>XAML-Werte  
 *Uniform-Dicke*  
 Zeichen folgen Darstellung eines einzelnen <xref:System.Double> Werts, der einheitlich auf alle vier Größen Dimensionen angewendet werden soll.  Beispielsweise entspricht der `"10"` Wert einem Wert von. `"10,10,10,10"`  Ein nicht qualifizierter Wert wird in geräteunabhängigen Pixeln gemessen. Zeichen folgen müssen nicht explizit Dezimalstellen enthalten.  
  
 *independentdicke*  
 Zeichen folgen Darstellung von vier <xref:System.Double> geordneten Werten, die den unabhängigen Größen der Dicke für Links, oben, rechts und unten in dieser Reihenfolge entsprechen.  Die vier Werte müssen durch Kommas getrennt werden. Leerzeichen sind nicht zulässig.  "5, 10, 15, 20" ergibt z. b. 5 Pixel Auffüll Zeichen auf der linken Seite des Inhalts, 10 Pixel oberhalb des Inhalts, 15 Pixel nach rechts neben dem Inhalt und 20 Pixel Abstand unterhalb des Inhalts.  
  
 *qualifiedunifordicke*  
 Ein durch *unifordicke* beschriebener Wert, gefolgt von einem der folgenden Einheits spezifiken `px`: `in`,.  
  
 `px`(Standard) ist[!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]  
  
 `in`ist Zoll; 1In = = 96px  
  
 Beispielsweise `"1in"` stellt eine einheitliche Auffüllung von 1 Zoll in alle Richtungen bereit.  
  
 *qualifiedindependentdicke*  
 Ein durch *independentdicke*beschriebener Wert, mit jedem unabhängigen Wert, gefolgt von einem der folgenden Einheits Spezifizierer `in`: `px`,.  
  
 `px`(Standard) ist[!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]  
  
 `in`ist Zoll; 1In = = 96px  
  
 Beispielsweise `"1.5in,0.8in,1.5in,0.8in"`.  Einheitenspezifizierer können aus einem oder mehreren Werten gemischt oder ausgelassen werden.  
  
<a name="dependencyPropertyInfo_Padding"></a>   
## <a name="dependency-property-information"></a>Informationen zur Abhängigkeitseigenschaft  
  
|||  
|-|-|  
|Bezeichnerfeld|<xref:System.Windows.Documents.AnchoredBlock.PaddingProperty>|  
|Metadateneigenschaften auf `true` festgelegt|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>|  
  
   
  
## Examples  
 Im folgenden Beispiel wird gezeigt, wie das <xref:System.Windows.Documents.AnchoredBlock.Padding%2A> -Attribut <xref:System.Windows.Documents.Block> eines-Elements<xref:System.Windows.Documents.Paragraph>() festgelegt wird.  
  
 [!code-xaml[BlockSnippets#_Block_MarginPaddingXAML](~/samples/snippets/csharp/VS_Snippets_Wpf/BlockSnippets/CSharp/Window1.xaml#_block_marginpaddingxaml)]  
  
 Die folgende Abbildung zeigt, wie dieses Beispiel gerendert wird.  Zur Veranschaulichung werden übertriebene stärken und Farben verwendet.  
  
 ![Bildschirm Abbildung: Absätze mit Auffüll-und Seitenrändern] (~/add/media/block-marginpadding.png "Bildschirm Abbildung: Absätze mit Auffüll-und Seitenrändern")  
  
 Im folgenden Beispiel wird gezeigt, wie die <xref:System.Windows.Documents.AnchoredBlock.Padding%2A> -Eigenschaft Programm gesteuert festgelegt wird.  
  
 [!code-csharp[BlockSnippets#_Block_MarginPadding](~/samples/snippets/csharp/VS_Snippets_Wpf/BlockSnippets/CSharp/Window1.xaml.cs#_block_marginpadding)]
 [!code-vb[BlockSnippets#_Block_MarginPadding](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BlockSnippets/visualbasic/window1.xaml.vb#_block_marginpadding)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PaddingProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty PaddingProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty PaddingProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Documents.AnchoredBlock.PaddingProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PaddingProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ PaddingProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable PaddingProperty : System.Windows.DependencyProperty" Usage="System.Windows.Documents.AnchoredBlock.PaddingProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Bezeichnet die <see cref="P:System.Windows.Documents.AnchoredBlock.Padding" />-Abhängigkeitseigenschaft.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeBlocks">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeBlocks (System.Windows.Markup.XamlDesignerSerializationManager manager);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeBlocks(class System.Windows.Markup.XamlDesignerSerializationManager manager) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.AnchoredBlock.ShouldSerializeBlocks(System.Windows.Markup.XamlDesignerSerializationManager)" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializeBlocks (manager As XamlDesignerSerializationManager) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializeBlocks(System::Windows::Markup::XamlDesignerSerializationManager ^ manager);" />
      <MemberSignature Language="F#" Value="member this.ShouldSerializeBlocks : System.Windows.Markup.XamlDesignerSerializationManager -&gt; bool" Usage="anchoredBlock.ShouldSerializeBlocks manager" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.Windows.Markup.XamlDesignerSerializationManager" />
      </Parameters>
      <Docs>
        <param name="manager">Ein Serialisierungsdienst-Manager-Objekt für dieses Objekt.</param>
        <summary>Gibt einen Wert zurück, der angibt, ob der effektive Wert der <see cref="P:System.Windows.Documents.AnchoredBlock.Blocks" />-Eigenschaft bei der Serialisierung eines von <see cref="T:System.Windows.Documents.AnchoredBlock" /> abgeleiteten Objekts serialisiert werden soll.</summary>
        <returns><see langword="true" />, wenn die <see cref="P:System.Windows.Documents.AnchoredBlock.Blocks" />-Eigenschaft serialisiert werden soll, andernfalls <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NullReferenceException">Wird ausgelöst, wenn <paramref name="manager" /> den Wert <see langword="null" /> hat.</exception>
      </Docs>
    </Member>
    <Member MemberName="TextAlignment">
      <MemberSignature Language="C#" Value="public System.Windows.TextAlignment TextAlignment { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.TextAlignment TextAlignment" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.AnchoredBlock.TextAlignment" />
      <MemberSignature Language="VB.NET" Value="Public Property TextAlignment As TextAlignment" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::TextAlignment TextAlignment { System::Windows::TextAlignment get(); void set(System::Windows::TextAlignment value); };" />
      <MemberSignature Language="F#" Value="member this.TextAlignment : System.Windows.TextAlignment with get, set" Usage="System.Windows.Documents.AnchoredBlock.TextAlignment" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.TextAlignment</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, mit dem die horizontale Ausrichtung des Textinhalts angegeben wird, oder legt diesen Wert fest.</summary>
        <value>Ein Member der <see cref="T:System.Windows.TextAlignment" />-Enumerationen, der die gewünschte Ausrichtung angibt.  
  
Der Standardwert ist <see cref="F:System.Windows.TextAlignment.Left" />sein.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_TextAlignment"></a>   
## <a name="dependency-property-information"></a>Informationen zur Abhängigkeitseigenschaft  
  
|||  
|-|-|  
|Bezeichnerfeld|<xref:System.Windows.Documents.AnchoredBlock.TextAlignmentProperty>|  
|Metadateneigenschaften auf `true` festgelegt|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>, <xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>, <xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A>|  
  
   
  
## Examples  
 Im folgenden Beispiel wird gezeigt, wie das <xref:System.Windows.Documents.AnchoredBlock.TextAlignment%2A> -Attribut <xref:System.Windows.Documents.Block> eines-Elements festgelegt wird.  
  
 [!code-xaml[BlockSnippets#_Block_TextAlignmentXAML](~/samples/snippets/csharp/VS_Snippets_Wpf/BlockSnippets/CSharp/Window1.xaml#_block_textalignmentxaml)]  
  
 In der folgenden Abbildung wird gezeigt, wie das vorherige Beispiel mit **Linker** Textausrichtung (Standardeinstellung) gerendert wird.  
  
 ![Bildschirm Abbildung: TextAlign-Eigenschafts Wert left] (~/add/media/flowdoc-textalign-left.png "Bildschirm Abbildung: TextAlign-Eigenschafts Wert left")  
  
 Die folgende Abbildung zeigt, wie das gleiche Beispiel mit der **rechten** Textausrichtung gerendert wird.  
  
 ![Bildschirm Abbildung: TextAlign-Wert von Right] (~/add/media/flowdoc-textalign-right.png "Bildschirm Abbildung: TextAlign-Wert von Right")  
  
 **In der** folgenden Abbildung wird gezeigt, wie das gleiche Beispiel mit der zentriert-Textausrichtung rendert.  
  
 ![Bildschirm Abbildung: TextAlign-Eigenschafts Wert von Center] (~/add/media/flowdoc-textalign-center.png "Bildschirm Abbildung: TextAlign-Eigenschafts Wert von Center")  
  
 Im folgenden Beispiel wird gezeigt, wie die <xref:System.Windows.Documents.AnchoredBlock.TextAlignment%2A> -Eigenschaft Programm gesteuert festgelegt wird.  
  
 [!code-csharp[BlockSnippets#_Block_TextAlignment](~/samples/snippets/csharp/VS_Snippets_Wpf/BlockSnippets/CSharp/Window1.xaml.cs#_block_textalignment)]
 [!code-vb[BlockSnippets#_Block_TextAlignment](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BlockSnippets/visualbasic/window1.xaml.vb#_block_textalignment)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TextAlignmentProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty TextAlignmentProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty TextAlignmentProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Documents.AnchoredBlock.TextAlignmentProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TextAlignmentProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ TextAlignmentProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable TextAlignmentProperty : System.Windows.DependencyProperty" Usage="System.Windows.Documents.AnchoredBlock.TextAlignmentProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Bezeichnet die <see cref="P:System.Windows.Documents.AnchoredBlock.TextAlignment" />-Abhängigkeitseigenschaft.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
