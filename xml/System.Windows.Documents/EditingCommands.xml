<Type Name="EditingCommands" FullName="System.Windows.Documents.EditingCommands">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="56ac8ca9237ec99eb53ae1283903a5a349c16b21" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36364128" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class EditingCommands" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit EditingCommands extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Documents.EditingCommands" />
  <TypeSignature Language="VB.NET" Value="Public Class EditingCommands" />
  <TypeSignature Language="C++ CLI" Value="public ref class EditingCommands abstract sealed" />
  <TypeSignature Language="F#" Value="type EditingCommands = class" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="6b478-101">Stellt einen Standardsatz von Befehlen für Bearbeitungen bereit.</span>
      <span class="sxs-lookup">
        <span data-stu-id="6b478-101">Provides a standard set of editing related commands.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6b478-102">Die folgende Tabelle zeigt die Befehle zum Bearbeiten und die zugeordneten Schlüssel Gesten (mit Schlüsselnamen aus dem <xref:System.Windows.Input.Key> und <xref:System.Windows.Input.ModifierKeys> Enumerationen).</span><span class="sxs-lookup"><span data-stu-id="6b478-102">The following table shows the editing commands and the associated default key gestures (with key names from the <xref:System.Windows.Input.Key> and <xref:System.Windows.Input.ModifierKeys> enumerations).</span></span>  
  
|<span data-ttu-id="6b478-103">Befehl Bearbeiten</span><span class="sxs-lookup"><span data-stu-id="6b478-103">Editing command</span></span>|<span data-ttu-id="6b478-104">Standardmäßige Tastenkombination</span><span class="sxs-lookup"><span data-stu-id="6b478-104">Default key gesture</span></span>|  
|---------------------|-------------------------|  
|<xref:System.Windows.Documents.EditingCommands.AlignCenter%2A>|`Ctrl`+`E`|  
|<xref:System.Windows.Documents.EditingCommands.AlignJustify%2A>|`Ctrl`+`J`|  
|<xref:System.Windows.Documents.EditingCommands.AlignLeft%2A>|`Ctrl`+`L`|  
|<xref:System.Windows.Documents.EditingCommands.AlignRight%2A>|`Ctrl`+`R`|  
|<xref:System.Windows.Documents.EditingCommands.Backspace%2A>|`Backspace`|  
|<xref:System.Windows.Documents.EditingCommands.CorrectSpellingError%2A>|<span data-ttu-id="6b478-105">keine Standardtastenkombination</span><span class="sxs-lookup"><span data-stu-id="6b478-105">no default key gesture</span></span>|  
|<xref:System.Windows.Documents.EditingCommands.DecreaseFontSize%2A>|`Ctrl`+`OemOpenBrackets`|  
|<xref:System.Windows.Documents.EditingCommands.DecreaseIndentation%2A>|`Ctrl`+`Shift`+`T`|  
|<xref:System.Windows.Documents.EditingCommands.Delete%2A>|`Delete`|  
|<xref:System.Windows.Documents.EditingCommands.DeleteNextWord%2A>|`Ctrl`+`Delete`|  
|<xref:System.Windows.Documents.EditingCommands.DeletePreviousWord%2A>|`Ctrl`+`Backspace`|  
|<xref:System.Windows.Documents.EditingCommands.EnterLineBreak%2A>|`Shift`+`Enter`|  
|<xref:System.Windows.Documents.EditingCommands.EnterParagraphBreak%2A>|`Enter`|  
|<xref:System.Windows.Documents.EditingCommands.IgnoreSpellingError%2A>|<span data-ttu-id="6b478-106">keine Standardtastenkombination</span><span class="sxs-lookup"><span data-stu-id="6b478-106">no default key gesture</span></span>|  
|<xref:System.Windows.Documents.EditingCommands.IncreaseFontSize%2A>|`Ctrl`+`OemCloseBrackets`|  
|<xref:System.Windows.Documents.EditingCommands.IncreaseIndentation%2A>|`Ctrl`+`T`|  
|<xref:System.Windows.Documents.EditingCommands.MoveDownByLine%2A>|`Down`|  
|<xref:System.Windows.Documents.EditingCommands.MoveDownByPage%2A>|`PageDown`|  
|<xref:System.Windows.Documents.EditingCommands.MoveDownByParagraph%2A>|`Ctrl`+`Down`|  
|<xref:System.Windows.Documents.EditingCommands.MoveLeftByCharacter%2A>|`Left`|  
|<xref:System.Windows.Documents.EditingCommands.MoveLeftByWord%2A>|`Ctrl`+`Left`|  
|<xref:System.Windows.Documents.EditingCommands.MoveRightByCharacter%2A>|`Right`|  
|<xref:System.Windows.Documents.EditingCommands.MoveRightByWord%2A>|`Ctrl`+`Right`|  
|<xref:System.Windows.Documents.EditingCommands.MoveToDocumentEnd%2A>|`Ctrl`+`End`|  
|<xref:System.Windows.Documents.EditingCommands.MoveToDocumentStart%2A>|`Ctrl`+`Home`|  
|<xref:System.Windows.Documents.EditingCommands.MoveToLineEnd%2A>|`End`|  
|<xref:System.Windows.Documents.EditingCommands.MoveToLineStart%2A>|`Home`|  
|<xref:System.Windows.Documents.EditingCommands.MoveUpByLine%2A>|`Up`|  
|<xref:System.Windows.Documents.EditingCommands.MoveUpByPage%2A>|`PageUp`|  
|<xref:System.Windows.Documents.EditingCommands.MoveUpByParagraph%2A>|`Ctrl`+`Up`|  
|<xref:System.Windows.Documents.EditingCommands.SelectDownByLine%2A>|`Shift`+`Down`|  
|<xref:System.Windows.Documents.EditingCommands.SelectDownByPage%2A>|`Shift`+`PageDown`|  
|<xref:System.Windows.Documents.EditingCommands.SelectDownByParagraph%2A>|`Ctrl`+`Shift`+`Down`|  
|<xref:System.Windows.Documents.EditingCommands.SelectLeftByCharacter%2A>|`Shift`+`Left`|  
|<xref:System.Windows.Documents.EditingCommands.SelectLeftByWord%2A>|`Ctrl`+`Shift`+`Left`|  
|<xref:System.Windows.Documents.EditingCommands.SelectRightByCharacter%2A>|`Shift`+`Right`|  
|<xref:System.Windows.Documents.EditingCommands.SelectRightByWord%2A>|`Ctrl`+`Shift`+`Right`|  
|<xref:System.Windows.Documents.EditingCommands.SelectToDocumentEnd%2A>|`Ctrl`+`Shift`+`End`|  
|<xref:System.Windows.Documents.EditingCommands.SelectToDocumentStart%2A>|`Ctrl`+`Shift`+`Home`|  
|<xref:System.Windows.Documents.EditingCommands.SelectToLineEnd%2A>|`Shift`+`End`|  
|<xref:System.Windows.Documents.EditingCommands.SelectToLineStart%2A>|`Shift`+`Home`|  
|<xref:System.Windows.Documents.EditingCommands.SelectUpByLine%2A>|`Shift`+`Up`|  
|<xref:System.Windows.Documents.EditingCommands.SelectUpByPage%2A>|`Shift`+`PageUp`|  
|<xref:System.Windows.Documents.EditingCommands.SelectUpByParagraph%2A>|`Ctrl`+`Shift`+`Up`|  
|<xref:System.Windows.Documents.EditingCommands.TabBackward%2A>|`Shift`+`Tab`|  
|<xref:System.Windows.Documents.EditingCommands.TabForward%2A>|`Tab`|  
|<xref:System.Windows.Documents.EditingCommands.ToggleBold%2A>|`Ctrl`+`B`|  
|<xref:System.Windows.Documents.EditingCommands.ToggleBullets%2A>|`Ctrl`+`Shift`+`L`|  
|<xref:System.Windows.Documents.EditingCommands.ToggleInsert%2A>|`Insert`|  
|<xref:System.Windows.Documents.EditingCommands.ToggleItalic%2A>|`Ctrl`+`I`|  
|<xref:System.Windows.Documents.EditingCommands.ToggleNumbering%2A>|`Ctrl`+`Shift`+`N`|  
|<xref:System.Windows.Documents.EditingCommands.ToggleSubscript%2A>|`Ctrl`+`OemPlus`|  
|<xref:System.Windows.Documents.EditingCommands.ToggleSuperscript%2A>|`Ctrl`+`Shift+OemPlus`|  
|<xref:System.Windows.Documents.EditingCommands.ToggleUnderline%2A>|`Ctrl`+`U`|  
  
 <span data-ttu-id="6b478-107">Befehle zum Verschieben der Einfügemarke und Erweitern der Auswahl verwenden einen gemeinsamen Satz von Standardtastenkombinationen, die allgemeine Differenz wird das Hinzufügen der <xref:System.Windows.Input.ModifierKeys.Shift> -Taste, um die Auswahl von Befehlen aus Befehle zum Verschieben der Einfügemarke zu unterscheiden.</span><span class="sxs-lookup"><span data-stu-id="6b478-107">Caret movement commands and selection expanding commands share a common set of default key gestures, the general difference being the addition of the <xref:System.Windows.Input.ModifierKeys.Shift> key to differentiate selection commands from caret movement commands.</span></span>  <span data-ttu-id="6b478-108">Z. B. die <xref:System.Windows.Documents.EditingCommands.MoveLeftByCharacter%2A> Befehl verfügt über eine Standardtastenkombination <xref:System.Windows.Input.Key.Left>, und die entsprechende <xref:System.Windows.Documents.EditingCommands.SelectLeftByCharacter%2A> Befehl verfügt über eine Standardtastenkombination <xref:System.Windows.Input.ModifierKeys.Shift> + <xref:System.Windows.Input.Key.Left>.</span><span class="sxs-lookup"><span data-stu-id="6b478-108">For example, the <xref:System.Windows.Documents.EditingCommands.MoveLeftByCharacter%2A> command has a default key gesture of <xref:System.Windows.Input.Key.Left>, and the corresponding <xref:System.Windows.Documents.EditingCommands.SelectLeftByCharacter%2A> command has a default key gesture of <xref:System.Windows.Input.ModifierKeys.Shift>+<xref:System.Windows.Input.Key.Left>.</span></span>  
  
 <span data-ttu-id="6b478-109">Im Allgemeinen die Befehlsdefinitionen bereitgestellt, von der <xref:System.Windows.Documents.EditingCommands> Klasse nehmen Sie keine Befehlsparameter (der `parameter` Parameter erwartet, indem Sie die <xref:System.Windows.Input.ICommand.Execute%2A> Methode).</span><span class="sxs-lookup"><span data-stu-id="6b478-109">In general, the command definitions provided by the <xref:System.Windows.Documents.EditingCommands> class do not make use of command parameters (the `parameter` parameter expected by the <xref:System.Windows.Input.ICommand.Execute%2A> method).</span></span>  
  
 <span data-ttu-id="6b478-110">Weitere Informationen über Befehle und die Befehle finden Sie unter [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="6b478-110">For more information on commands and commanding, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6b478-111">Im folgenden Beispiel wird veranschaulicht, wie auf einen Befehl für ein Objekt aufrufen, die der Befehl unterstützt wird.</span><span class="sxs-lookup"><span data-stu-id="6b478-111">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="6b478-112">In diesem Beispiel eine <xref:System.Windows.Controls.RichTextBox> dient als das Befehlsziel.</span><span class="sxs-lookup"><span data-stu-id="6b478-112">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="6b478-113">Beachten Sie, dass <xref:System.Windows.Controls.RichTextBox> implementiert die <xref:System.Windows.IInputElement> Schnittstelle (geerbt von <xref:System.Windows.FrameworkElement>), und bietet systemeigene Unterstützung für viele Bearbeitungsbefehle.</span><span class="sxs-lookup"><span data-stu-id="6b478-113">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="6b478-114">Das erste Argument für die <xref:System.Windows.Input.RoutedCommand.Execute%2A> Methode ist ein Befehlsparameter.</span><span class="sxs-lookup"><span data-stu-id="6b478-114">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="6b478-115">Die meisten Befehle ignorieren Befehlsparameter. Dieser Parameter sollte im allgemeinen `null` für Bearbeitungsbefehle.</span><span class="sxs-lookup"><span data-stu-id="6b478-115">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="6b478-116">Das zweite Argument gibt das Objekt, an dem der Befehl weitergeleitet werden.</span><span class="sxs-lookup"><span data-stu-id="6b478-116">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="6b478-117">Dieses Objekt muss implementieren die <xref:System.Windows.IInputElement> Schnittstelle, und sollte einen Handler für den angegebenen Befehl einschließen.</span><span class="sxs-lookup"><span data-stu-id="6b478-117">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="6b478-118">Im Allgemeinen wird ein Befehl ignoriert, wenn für ein Objekt aufgerufen, die den Befehl nicht behandelt.</span><span class="sxs-lookup"><span data-stu-id="6b478-118">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Input.MediaCommands" />
    <altmember cref="T:System.Windows.Input.ApplicationCommands" />
    <altmember cref="T:System.Windows.Input.ComponentCommands" />
    <altmember cref="T:System.Windows.Input.RoutedCommand" />
    <altmember cref="T:System.Windows.Input.RoutedUICommand" />
    <altmember cref="T:System.Windows.Input.CommandBinding" />
    <altmember cref="T:System.Windows.Input.CommandManager" />
    <altmember cref="T:System.Windows.Input.NavigationCommands" />
  </Docs>
  <Members>
    <Member MemberName="AlignCenter">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand AlignCenter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand AlignCenter" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.AlignCenter" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property AlignCenter As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ AlignCenter { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AlignCenter : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.AlignCenter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6b478-119">Stellt den <see cref="P:System.Windows.Documents.EditingCommands.AlignCenter" />-Befehl dar, mit dem angefordert wird, dass der aktuelle Absatz oder ausgewählte Absätze zentriert werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b478-119">Represents the <see cref="P:System.Windows.Documents.EditingCommands.AlignCenter" /> command, which requests that the current paragraph or a selection of paragraphs be centered.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6b478-120">Der angeforderte Befehl.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b478-120">The requested command.</span>
          </span>
          <span data-ttu-id="6b478-121">Die standardmäßige Tastenkombination für diesen Befehl wird <see langword="Ctrl" /> + <see langword="E" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b478-121">The default key gesture for this command is <see langword="Ctrl" />+<see langword="E" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6b478-122">Mit diesem Befehl bezieht sich immer nur die <xref:System.Windows.Documents.Paragraph> Ebene.</span><span class="sxs-lookup"><span data-stu-id="6b478-122">This command operates at the <xref:System.Windows.Documents.Paragraph> level.</span></span>  <span data-ttu-id="6b478-123">Wenn dieser Befehl aufgerufen wird, für einen ausgewählten Teil des Inhalts innerhalb eines Absatzes (einschließlich eine leere Auswahl, in dem sich die Einfügemarke innerhalb eines Absatzes wird), wird die angeforderte Auswirkungen auf den gesamten Absatz angewendet.</span><span class="sxs-lookup"><span data-stu-id="6b478-123">If this command is invoked on a partial selection of content within a paragraph (including an empty selection where the caret is within a paragraph), the requested effect is applied to the entire paragraph.</span></span>  <span data-ttu-id="6b478-124">Wenn Sie diesen Befehl für eine Auswahl aufgerufen wird, die mehrere Absätze umfasst, wird die Auswirkung auf den gesamten Inhalt der einzelnen Absätze angewendet, die in der Auswahl beteiligt ist.</span><span class="sxs-lookup"><span data-stu-id="6b478-124">If this command is invoked on a selection that spans multiple paragraphs, the effect is applied to the entire contents of each paragraph that participates in the selection.</span></span>  
  
 <span data-ttu-id="6b478-125">Die folgende Abbildung zeigt ein Beispiel für zentrierten Inhalt.</span><span class="sxs-lookup"><span data-stu-id="6b478-125">The following figure shows an example of centered content.</span></span>  
  
 <span data-ttu-id="6b478-126">![Bildschirmabbildung: TextAlign-Eigenschaftswert Center](~/add/media/flowdoc-textalign-center.png "Bildschirmabbildung: TextAlign-Eigenschaftswert Center")</span><span class="sxs-lookup"><span data-stu-id="6b478-126">![Screenshot: TextAlign property value of Center](~/add/media/flowdoc-textalign-center.png "Screenshot: TextAlign property value of Center")</span></span>  
  
 <span data-ttu-id="6b478-127">Mit diesem Befehl wird eine systemeigene Unterstützung durch <xref:System.Windows.Controls.RichTextBox>.</span><span class="sxs-lookup"><span data-stu-id="6b478-127">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>.</span></span>  
  
<a name="xamlAttributeUsage_AlignCenter"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="6b478-128">Verwendung von XAML-Attributen</span><span class="sxs-lookup"><span data-stu-id="6b478-128">XAML Attribute Usage</span></span>  
  
```  
<object property="AlignCenter"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="6b478-129">Im folgenden Beispiel wird veranschaulicht, wie auf einen Befehl für ein Objekt aufrufen, die der Befehl unterstützt wird.</span><span class="sxs-lookup"><span data-stu-id="6b478-129">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="6b478-130">In diesem Beispiel eine <xref:System.Windows.Controls.RichTextBox> dient als das Befehlsziel.</span><span class="sxs-lookup"><span data-stu-id="6b478-130">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="6b478-131">Beachten Sie, dass <xref:System.Windows.Controls.RichTextBox> implementiert die <xref:System.Windows.IInputElement> Schnittstelle (geerbt von <xref:System.Windows.FrameworkElement>), und bietet systemeigene Unterstützung für viele Bearbeitungsbefehle.</span><span class="sxs-lookup"><span data-stu-id="6b478-131">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="6b478-132">Das erste Argument für die <xref:System.Windows.Input.RoutedCommand.Execute%2A> Methode ist ein Befehlsparameter.</span><span class="sxs-lookup"><span data-stu-id="6b478-132">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="6b478-133">Die meisten Befehle ignorieren Befehlsparameter. Dieser Parameter sollte im allgemeinen `null` für Bearbeitungsbefehle.</span><span class="sxs-lookup"><span data-stu-id="6b478-133">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="6b478-134">Das zweite Argument gibt das Objekt, an dem der Befehl weitergeleitet werden.</span><span class="sxs-lookup"><span data-stu-id="6b478-134">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="6b478-135">Dieses Objekt muss implementieren die <xref:System.Windows.IInputElement> Schnittstelle, und sollte einen Handler für den angegebenen Befehl einschließen.</span><span class="sxs-lookup"><span data-stu-id="6b478-135">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="6b478-136">Im Allgemeinen wird ein Befehl ignoriert, wenn für ein Objekt aufgerufen, die den Befehl nicht behandelt.</span><span class="sxs-lookup"><span data-stu-id="6b478-136">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.AlignJustify" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.AlignLeft" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.AlignRight" />
      </Docs>
    </Member>
    <Member MemberName="AlignJustify">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand AlignJustify { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand AlignJustify" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.AlignJustify" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property AlignJustify As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ AlignJustify { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AlignJustify : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.AlignJustify" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6b478-137">Stellt den <see cref="P:System.Windows.Documents.EditingCommands.AlignJustify" />-Befehl dar, mit dem angefordert wird, dass der aktuelle Absatz oder ausgewählte Absätze im Blocksatz ausgerichtet werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b478-137">Represents the <see cref="P:System.Windows.Documents.EditingCommands.AlignJustify" /> command, which requests that the current paragraph or a selection of paragraphs be justified.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6b478-138">Der angeforderte Befehl.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b478-138">The requested command.</span>
          </span>
          <span data-ttu-id="6b478-139">Die standardmäßige Tastenkombination für diesen Befehl wird <see langword="Ctrl" /> + <see langword="J" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b478-139">The default key gesture for this command is <see langword="Ctrl" />+<see langword="J" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6b478-140">Mit diesem Befehl bezieht sich immer nur die <xref:System.Windows.Documents.Paragraph> Ebene.</span><span class="sxs-lookup"><span data-stu-id="6b478-140">This command operates at the <xref:System.Windows.Documents.Paragraph> level.</span></span>  <span data-ttu-id="6b478-141">Wenn dieser Befehl aufgerufen wird, für einen ausgewählten Teil des Inhalts innerhalb eines Absatzes (einschließlich eine leere Auswahl, in dem sich die Einfügemarke innerhalb eines Absatzes wird), wird die angeforderte Auswirkungen auf den gesamten Absatz angewendet.</span><span class="sxs-lookup"><span data-stu-id="6b478-141">If this command is invoked on a partial selection of content within a paragraph (including an empty selection where the caret is within a paragraph), the requested effect is applied to the entire paragraph.</span></span>  <span data-ttu-id="6b478-142">Wenn dieser Befehl für eine Auswahl, die mehrere Absätze umfasst aufgerufen wird, ist die Auswirkung auf die Absätze in der Auswahl angewendet.</span><span class="sxs-lookup"><span data-stu-id="6b478-142">If this command is invoked on a selection that spans multiple paragraphs, the effect is applied to all the paragraphs in the selection.</span></span>  
  
 <span data-ttu-id="6b478-143">Wenn Inhalt ausgerichtet ist, wird der horizontale Abstand innerhalb jeder Zeile des Inhalts angepasst, damit, dass die Zeilen gleich oder in der Nähe von gleicher Breite aufweisen.</span><span class="sxs-lookup"><span data-stu-id="6b478-143">When content is justified, the horizontal spacing within each line of content is adjusted so that the justified lines are of equal or near-equal width.</span></span>  <span data-ttu-id="6b478-144">Inhalt ist in der Regel gerechtfertigt, zum Glätten auf den Seiten des Inhalts zu erstellen.</span><span class="sxs-lookup"><span data-stu-id="6b478-144">Content is typically justified to create smooth edges on the sides of the content.</span></span>  
  
 <span data-ttu-id="6b478-145">Da es häufig kürzer als die übrigen Daten handelt, kann die letzte Zeile in einem Absatz nicht ausgerichtet bleiben, nachdem dieser Befehl aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="6b478-145">Because it is often shorter than the rest, the last line in a paragraph may remain unjustified after this command is invoked.</span></span>  
  
 <span data-ttu-id="6b478-146">Die folgende Abbildung zeigt nicht ausgerichtet (linksbündig) Inhalt.</span><span class="sxs-lookup"><span data-stu-id="6b478-146">The following figure shows unjustified (left-aligned) content.</span></span>  
  
 <span data-ttu-id="6b478-147">![Bildschirmabbildung: Inhalt ist nicht ausgerichtet](~/add/media/content-unjustified.png "Screenshot: Inhalt ist nicht ausgerichtet")</span><span class="sxs-lookup"><span data-stu-id="6b478-147">![Screenshot: Content is unjustified](~/add/media/content-unjustified.png "Screenshot: Content is unjustified")</span></span>  
  
 <span data-ttu-id="6b478-148">Die folgende Abbildung zeigt den gleichen Inhalt aus, nachdem es begründet.</span><span class="sxs-lookup"><span data-stu-id="6b478-148">The following figure shows the same content after it has been justified.</span></span>  
  
 <span data-ttu-id="6b478-149">![Screenshot des Inhalts gerechtfertigt Text](~/add/media/content-justified.png "Screenshot des Inhalts gerechtfertigt Text")</span><span class="sxs-lookup"><span data-stu-id="6b478-149">![Screenshot of content justified text](~/add/media/content-justified.png "Screenshot of content justified text")</span></span>  
  
 <span data-ttu-id="6b478-150">Es ist nicht notwendigerweise eine tatsächliche Implementierung, die für diesen Befehl für ein angegebenes Objekt reagiert. in vielen Fällen ist die Implementierung, die an einen Befehl antwortet der Verantwortung des Anwendungs-Writer.</span><span class="sxs-lookup"><span data-stu-id="6b478-150">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="6b478-151">Mit diesem Befehl wird eine systemeigene Unterstützung durch <xref:System.Windows.Controls.RichTextBox>.</span><span class="sxs-lookup"><span data-stu-id="6b478-151">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>.</span></span>  
  
<a name="xamlAttributeUsage_AlignJustify"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="6b478-152">Verwendung von XAML-Attributen</span><span class="sxs-lookup"><span data-stu-id="6b478-152">XAML Attribute Usage</span></span>  
  
```  
<object property="AlignJustify"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="6b478-153">Im folgenden Beispiel wird veranschaulicht, wie auf einen Befehl für ein Objekt aufrufen, die der Befehl unterstützt wird.</span><span class="sxs-lookup"><span data-stu-id="6b478-153">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="6b478-154">In diesem Beispiel eine <xref:System.Windows.Controls.RichTextBox> dient als das Befehlsziel.</span><span class="sxs-lookup"><span data-stu-id="6b478-154">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="6b478-155">Beachten Sie, dass <xref:System.Windows.Controls.RichTextBox> implementiert die <xref:System.Windows.IInputElement> Schnittstelle (geerbt von <xref:System.Windows.FrameworkElement>), und bietet systemeigene Unterstützung für viele Bearbeitungsbefehle.</span><span class="sxs-lookup"><span data-stu-id="6b478-155">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="6b478-156">Das erste Argument für die <xref:System.Windows.Input.RoutedCommand.Execute%2A> Methode ist ein Befehlsparameter.</span><span class="sxs-lookup"><span data-stu-id="6b478-156">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="6b478-157">Die meisten Befehle ignorieren Befehlsparameter. Dieser Parameter sollte im allgemeinen `null` für Bearbeitungsbefehle.</span><span class="sxs-lookup"><span data-stu-id="6b478-157">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="6b478-158">Das zweite Argument gibt das Objekt, an dem der Befehl weitergeleitet werden.</span><span class="sxs-lookup"><span data-stu-id="6b478-158">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="6b478-159">Dieses Objekt muss implementieren die <xref:System.Windows.IInputElement> Schnittstelle, und sollte einen Handler für den angegebenen Befehl einschließen.</span><span class="sxs-lookup"><span data-stu-id="6b478-159">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="6b478-160">Im Allgemeinen wird ein Befehl ignoriert, wenn für ein Objekt aufgerufen, die den Befehl nicht behandelt.</span><span class="sxs-lookup"><span data-stu-id="6b478-160">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.AlignCenter" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.AlignLeft" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.AlignRight" />
      </Docs>
    </Member>
    <Member MemberName="AlignLeft">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand AlignLeft { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand AlignLeft" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.AlignLeft" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property AlignLeft As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ AlignLeft { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AlignLeft : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.AlignLeft" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6b478-161">Stellt den <see cref="P:System.Windows.Documents.EditingCommands.AlignLeft" />-Befehl dar, mit dem angefordert wird, dass der ausgewählte Inhalt linksbündig ausgerichtet wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b478-161">Represents the <see cref="P:System.Windows.Documents.EditingCommands.AlignLeft" /> command, which requests that a selection of content be aligned left.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6b478-162">Der angeforderte Befehl.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b478-162">The requested command.</span>
          </span>
          <span data-ttu-id="6b478-163">Die standardmäßige Tastenkombination für diesen Befehl wird <see langword="Ctrl" /> + <see langword="L" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b478-163">The default key gesture for this command is <see langword="Ctrl" />+<see langword="L" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6b478-164">Mit diesem Befehl bezieht sich immer nur die <xref:System.Windows.Documents.Paragraph> Ebene.</span><span class="sxs-lookup"><span data-stu-id="6b478-164">This command operates at the <xref:System.Windows.Documents.Paragraph> level.</span></span>  <span data-ttu-id="6b478-165">Wenn dieser Befehl aufgerufen wird, für einen ausgewählten Teil des Inhalts innerhalb eines Absatzes (einschließlich eine leere Auswahl, in dem sich die Einfügemarke innerhalb eines Absatzes wird), wird die angeforderte Auswirkungen auf den gesamten Absatz angewendet.</span><span class="sxs-lookup"><span data-stu-id="6b478-165">If this command is invoked on a partial selection of content within a paragraph (including an empty selection where the caret is within a paragraph), the requested effect is applied to the entire paragraph.</span></span>  <span data-ttu-id="6b478-166">Wenn Sie diesen Befehl für eine Auswahl aufgerufen wird, die mehrere Absätze umfasst, wird die Auswirkung auf den gesamten Inhalt der einzelnen Absätze angewendet, die in der Auswahl beteiligt ist.</span><span class="sxs-lookup"><span data-stu-id="6b478-166">If this command is invoked on a selection that spans multiple paragraphs, the effect is applied to the entire contents of each paragraph that participates in the selection.</span></span>  
  
 <span data-ttu-id="6b478-167">Die folgende Abbildung zeigt ein Beispiel des Inhalts linksbündig ausgerichtet.</span><span class="sxs-lookup"><span data-stu-id="6b478-167">The following figure shows an example of left-aligned content.</span></span>  
  
 <span data-ttu-id="6b478-168">![Bildschirmabbildung: TextAlign-Eigenschaftswert Left](~/add/media/flowdoc-textalign-left.png "Bildschirmabbildung: TextAlign-Eigenschaftswert Left")</span><span class="sxs-lookup"><span data-stu-id="6b478-168">![Screenshot: TextAlign property value of Left](~/add/media/flowdoc-textalign-left.png "Screenshot: TextAlign property value of Left")</span></span>  
  
 <span data-ttu-id="6b478-169">Es ist nicht notwendigerweise eine tatsächliche Implementierung, die für diesen Befehl für ein angegebenes Objekt reagiert. in vielen Fällen ist die Implementierung, die an einen Befehl antwortet der Verantwortung des Anwendungs-Writer.</span><span class="sxs-lookup"><span data-stu-id="6b478-169">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="6b478-170">Mit diesem Befehl wird eine systemeigene Unterstützung durch <xref:System.Windows.Controls.RichTextBox>.</span><span class="sxs-lookup"><span data-stu-id="6b478-170">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>.</span></span>  
  
<a name="xamlAttributeUsage_AlignLeft"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="6b478-171">Verwendung von XAML-Attributen</span><span class="sxs-lookup"><span data-stu-id="6b478-171">XAML Attribute Usage</span></span>  
  
```  
<object property="AlignLeft"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="6b478-172">Im folgenden Beispiel wird veranschaulicht, wie auf einen Befehl für ein Objekt aufrufen, die der Befehl unterstützt wird.</span><span class="sxs-lookup"><span data-stu-id="6b478-172">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="6b478-173">In diesem Beispiel eine <xref:System.Windows.Controls.RichTextBox> dient als das Befehlsziel.</span><span class="sxs-lookup"><span data-stu-id="6b478-173">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="6b478-174">Beachten Sie, dass <xref:System.Windows.Controls.RichTextBox> implementiert die <xref:System.Windows.IInputElement> Schnittstelle (geerbt von <xref:System.Windows.FrameworkElement>), und bietet systemeigene Unterstützung für viele Bearbeitungsbefehle.</span><span class="sxs-lookup"><span data-stu-id="6b478-174">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="6b478-175">Das erste Argument für die <xref:System.Windows.Input.RoutedCommand.Execute%2A> Methode ist ein Befehlsparameter.</span><span class="sxs-lookup"><span data-stu-id="6b478-175">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="6b478-176">Die meisten Befehle ignorieren Befehlsparameter. Dieser Parameter sollte im allgemeinen `null` für Bearbeitungsbefehle.</span><span class="sxs-lookup"><span data-stu-id="6b478-176">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="6b478-177">Das zweite Argument gibt das Objekt, an dem der Befehl weitergeleitet werden.</span><span class="sxs-lookup"><span data-stu-id="6b478-177">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="6b478-178">Dieses Objekt muss implementieren die <xref:System.Windows.IInputElement> Schnittstelle, und sollte einen Handler für den angegebenen Befehl einschließen.</span><span class="sxs-lookup"><span data-stu-id="6b478-178">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="6b478-179">Im Allgemeinen wird ein Befehl ignoriert, wenn für ein Objekt aufgerufen, die den Befehl nicht behandelt.</span><span class="sxs-lookup"><span data-stu-id="6b478-179">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.AlignCenter" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.AlignJustify" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.AlignRight" />
      </Docs>
    </Member>
    <Member MemberName="AlignRight">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand AlignRight { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand AlignRight" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.AlignRight" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property AlignRight As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ AlignRight { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AlignRight : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.AlignRight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6b478-180">Stellt den <see cref="P:System.Windows.Documents.EditingCommands.AlignRight" />-Befehl dar, mit dem angefordert wird, dass der ausgewählte Inhalt rechtsbündig ausgerichtet wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b478-180">Represents the <see cref="P:System.Windows.Documents.EditingCommands.AlignRight" /> command, which requests that a selection of content be aligned right.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6b478-181">Der angeforderte Befehl.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b478-181">The requested command.</span>
          </span>
          <span data-ttu-id="6b478-182">Die standardmäßige Tastenkombination für diesen Befehl wird <see langword="Ctrl" /> + <see langword="R" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b478-182">The default key gesture for this command is <see langword="Ctrl" />+<see langword="R" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6b478-183">Mit diesem Befehl bezieht sich immer nur die <xref:System.Windows.Documents.Paragraph> Ebene.</span><span class="sxs-lookup"><span data-stu-id="6b478-183">This command operates at the <xref:System.Windows.Documents.Paragraph> level.</span></span>  <span data-ttu-id="6b478-184">Wenn dieser Befehl aufgerufen wird, für einen ausgewählten Teil des Inhalts innerhalb eines Absatzes (einschließlich eine leere Auswahl, in dem sich die Einfügemarke innerhalb eines Absatzes wird), wird die angeforderte Auswirkungen auf den gesamten Absatz angewendet.</span><span class="sxs-lookup"><span data-stu-id="6b478-184">If this command is invoked on a partial selection of content within a paragraph (including an empty selection where the caret is within a paragraph), the requested effect is applied to the entire paragraph.</span></span>  <span data-ttu-id="6b478-185">Wenn Sie diesen Befehl für eine Auswahl aufgerufen wird, die mehrere Absätze umfasst, wird die Auswirkung auf den gesamten Inhalt der einzelnen Absätze angewendet, die in der Auswahl beteiligt ist.</span><span class="sxs-lookup"><span data-stu-id="6b478-185">If this command is invoked on a selection that spans multiple paragraphs, the effect is applied to the entire contents of each paragraph that participates in the selection.</span></span>  
  
 <span data-ttu-id="6b478-186">Die folgende Abbildung zeigt ein Beispiel des Inhalts rechtsbündig ausgerichtet.</span><span class="sxs-lookup"><span data-stu-id="6b478-186">The following figure shows an example of right-aligned content.</span></span>  
  
 <span data-ttu-id="6b478-187">![Bildschirmabbildung: TextAlign-Wert rechts](~/add/media/flowdoc-textalign-right.png "Bildschirmabbildung: TextAlign-Wert, der rechts")</span><span class="sxs-lookup"><span data-stu-id="6b478-187">![Screenshot: TextAlign value of Right](~/add/media/flowdoc-textalign-right.png "Screenshot: TextAlign value of Right")</span></span>  
  
 <span data-ttu-id="6b478-188">Es ist nicht notwendigerweise eine tatsächliche Implementierung, die für diesen Befehl für ein angegebenes Objekt reagiert. in vielen Fällen ist die Implementierung, die an einen Befehl antwortet der Verantwortung des Anwendungs-Writer.</span><span class="sxs-lookup"><span data-stu-id="6b478-188">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="6b478-189">Mit diesem Befehl wird eine systemeigene Unterstützung durch <xref:System.Windows.Controls.RichTextBox>.</span><span class="sxs-lookup"><span data-stu-id="6b478-189">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>.</span></span>  
  
<a name="xamlAttributeUsage_AlignRight"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="6b478-190">Verwendung von XAML-Attributen</span><span class="sxs-lookup"><span data-stu-id="6b478-190">XAML Attribute Usage</span></span>  
  
```  
<object property="AlignRight"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="6b478-191">Im folgenden Beispiel wird veranschaulicht, wie auf einen Befehl für ein Objekt aufrufen, die der Befehl unterstützt wird.</span><span class="sxs-lookup"><span data-stu-id="6b478-191">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="6b478-192">In diesem Beispiel eine <xref:System.Windows.Controls.RichTextBox> dient als das Befehlsziel.</span><span class="sxs-lookup"><span data-stu-id="6b478-192">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="6b478-193">Beachten Sie, dass <xref:System.Windows.Controls.RichTextBox> implementiert die <xref:System.Windows.IInputElement> Schnittstelle (geerbt von <xref:System.Windows.FrameworkElement>), und bietet systemeigene Unterstützung für viele Bearbeitungsbefehle.</span><span class="sxs-lookup"><span data-stu-id="6b478-193">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="6b478-194">Das erste Argument für die <xref:System.Windows.Input.RoutedCommand.Execute%2A> Methode ist ein Befehlsparameter.</span><span class="sxs-lookup"><span data-stu-id="6b478-194">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="6b478-195">Die meisten Befehle ignorieren Befehlsparameter. Dieser Parameter sollte im allgemeinen `null` für Bearbeitungsbefehle.</span><span class="sxs-lookup"><span data-stu-id="6b478-195">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="6b478-196">Das zweite Argument gibt das Objekt, an dem der Befehl weitergeleitet werden.</span><span class="sxs-lookup"><span data-stu-id="6b478-196">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="6b478-197">Dieses Objekt muss implementieren die <xref:System.Windows.IInputElement> Schnittstelle, und sollte einen Handler für den angegebenen Befehl einschließen.</span><span class="sxs-lookup"><span data-stu-id="6b478-197">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="6b478-198">Im Allgemeinen wird ein Befehl ignoriert, wenn für ein Objekt aufgerufen, die den Befehl nicht behandelt.</span><span class="sxs-lookup"><span data-stu-id="6b478-198">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.AlignCenter" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.AlignJustify" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.AlignRight" />
      </Docs>
    </Member>
    <Member MemberName="Backspace">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand Backspace { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand Backspace" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.Backspace" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Backspace As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ Backspace { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Backspace : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.Backspace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6b478-199">Stellt den <see cref="P:System.Windows.Documents.EditingCommands.Backspace" />-Befehl dar, mit dem angefordert wird, dass an der aktuellen Position oder für die aktuelle Auswahl ein Rücktastenzeichen eingefügt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b478-199">Represents the <see cref="P:System.Windows.Documents.EditingCommands.Backspace" /> command, which requests that a backspace be entered at the current position or over the current selection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6b478-200">Der angeforderte Befehl.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b478-200">The requested command.</span>
          </span>
          <span data-ttu-id="6b478-201">Die Standardtastenkombination für diesen Befehl ist <see langword="Backspace" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b478-201">The default key gesture for this command is <see langword="Backspace" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6b478-202">Wenn auf eine leere Auswahl aufgerufen wird, werden mit diesem Befehl das Zeichen oder Absatztrennzeichen vor der Einfügemarke gelöscht.</span><span class="sxs-lookup"><span data-stu-id="6b478-202">When invoked on an empty selection, this command deletes the character or paragraph separator just before the caret.</span></span> <span data-ttu-id="6b478-203">Wenn auf eine nicht leere Auswahl aufgerufen wird, löscht mit diesem Befehl die Auswahl auf.</span><span class="sxs-lookup"><span data-stu-id="6b478-203">When invoked on a non-empty selection, this command deletes the selection.</span></span>  
  
 <span data-ttu-id="6b478-204">Mit diesem Befehl behält die Formatierung aus der gelöschten Auswahl für den Inhalt sofort an derselben Position eingefügt, nachdem dieser Befehl aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="6b478-204">This command retains any formatting from the deleted selection for content immediately inserted at the same location after this command is invoked.</span></span>  <span data-ttu-id="6b478-205">Im Gegensatz dazu die <xref:System.Windows.Documents.EditingCommands.Delete%2A> Befehl, der keine vorherige Formatierung beibehalten.</span><span class="sxs-lookup"><span data-stu-id="6b478-205">Contrast with the <xref:System.Windows.Documents.EditingCommands.Delete%2A> command, which does not retain previous formatting.</span></span>  
  
 <span data-ttu-id="6b478-206">Es ist nicht notwendigerweise eine tatsächliche Implementierung, die für diesen Befehl für ein angegebenes Objekt reagiert. in vielen Fällen ist die Implementierung, die an einen Befehl antwortet der Verantwortung des Anwendungs-Writer.</span><span class="sxs-lookup"><span data-stu-id="6b478-206">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="6b478-207">Mit diesem Befehl wird eine systemeigene Unterstützung durch <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, und <xref:System.Windows.Controls.PasswordBox>.</span><span class="sxs-lookup"><span data-stu-id="6b478-207">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_Backspace"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="6b478-208">Verwendung von XAML-Attributen</span><span class="sxs-lookup"><span data-stu-id="6b478-208">XAML Attribute Usage</span></span>  
  
```  
<object property="Backspace"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="6b478-209">Im folgenden Beispiel wird veranschaulicht, wie auf einen Befehl für ein Objekt aufrufen, die der Befehl unterstützt wird.</span><span class="sxs-lookup"><span data-stu-id="6b478-209">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="6b478-210">In diesem Beispiel eine <xref:System.Windows.Controls.RichTextBox> dient als das Befehlsziel.</span><span class="sxs-lookup"><span data-stu-id="6b478-210">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="6b478-211">Beachten Sie, dass <xref:System.Windows.Controls.RichTextBox> implementiert die <xref:System.Windows.IInputElement> Schnittstelle (geerbt von <xref:System.Windows.FrameworkElement>), und bietet systemeigene Unterstützung für viele Bearbeitungsbefehle.</span><span class="sxs-lookup"><span data-stu-id="6b478-211">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="6b478-212">Das erste Argument für die <xref:System.Windows.Input.RoutedCommand.Execute%2A> Methode ist ein Befehlsparameter.</span><span class="sxs-lookup"><span data-stu-id="6b478-212">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="6b478-213">Die meisten Befehle ignorieren Befehlsparameter. Dieser Parameter sollte im allgemeinen `null` für Bearbeitungsbefehle.</span><span class="sxs-lookup"><span data-stu-id="6b478-213">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="6b478-214">Das zweite Argument gibt das Objekt, an dem der Befehl weitergeleitet werden.</span><span class="sxs-lookup"><span data-stu-id="6b478-214">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="6b478-215">Dieses Objekt muss implementieren die <xref:System.Windows.IInputElement> Schnittstelle, und sollte einen Handler für den angegebenen Befehl einschließen.</span><span class="sxs-lookup"><span data-stu-id="6b478-215">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="6b478-216">Im Allgemeinen wird ein Befehl ignoriert, wenn für ein Objekt aufgerufen, die den Befehl nicht behandelt.</span><span class="sxs-lookup"><span data-stu-id="6b478-216">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CorrectSpellingError">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand CorrectSpellingError { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand CorrectSpellingError" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.CorrectSpellingError" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property CorrectSpellingError As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ CorrectSpellingError { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CorrectSpellingError : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.CorrectSpellingError" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6b478-217">Stellt den <see cref="P:System.Windows.Documents.EditingCommands.CorrectSpellingError" />-Befehl dar, mit dem angefordert wird, dass jedes falsch geschriebene Wort an der aktuellen Position korrigiert wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b478-217">Represents the <see cref="P:System.Windows.Documents.EditingCommands.CorrectSpellingError" /> command, which requests that any misspelled word at the current position be corrected.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6b478-218">Der angeforderte Befehl.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b478-218">The requested command.</span>
          </span>
          <span data-ttu-id="6b478-219">Für diesen Befehl gibt es keine Standardtastenkombination.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b478-219">This command has no default key gesture.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6b478-220">Es ist nicht notwendigerweise eine tatsächliche Implementierung, die für diesen Befehl für ein angegebenes Objekt reagiert. in vielen Fällen ist die Implementierung, die an einen Befehl antwortet der Verantwortung des Anwendungs-Writer.</span><span class="sxs-lookup"><span data-stu-id="6b478-220">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
<a name="xamlAttributeUsage_CorrectSpellingError"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="6b478-221">Verwendung von XAML-Attributen</span><span class="sxs-lookup"><span data-stu-id="6b478-221">XAML Attribute Usage</span></span>  
  
```  
<object property="CorrectSpellingError"/>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.IgnoreSpellingError" />
      </Docs>
    </Member>
    <Member MemberName="DecreaseFontSize">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand DecreaseFontSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand DecreaseFontSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.DecreaseFontSize" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property DecreaseFontSize As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ DecreaseFontSize { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DecreaseFontSize : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.DecreaseFontSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6b478-222">Stellt den <see cref="P:System.Windows.Documents.EditingCommands.DecreaseFontSize" />-Befehl dar, mit dem angefordert wird, dass die Schriftgröße für die aktuelle Auswahl um 1 Punkt verringert wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b478-222">Represents the <see cref="P:System.Windows.Documents.EditingCommands.DecreaseFontSize" /> command, which requests that the font size for the current selection be decreased by 1 point.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6b478-223">Der angeforderte Befehl.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b478-223">The requested command.</span>
          </span>
          <span data-ttu-id="6b478-224">Die standardmäßige Tastenkombination für diesen Befehl wird <see langword="Ctrl" /> + <see langword="OemOpenBrackets" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b478-224">The default key gesture for this command is <see langword="Ctrl" />+<see langword="OemOpenBrackets" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6b478-225">Wenn dieser Befehl für eine leere Auswahl aufgerufen wird, in dem sich die Einfügemarke innerhalb eines Worts ist, wird die Auswahl automatisch erweitert, um den Befehl für das ganze Wort gelten.</span><span class="sxs-lookup"><span data-stu-id="6b478-225">If this command is invoked on an empty selection where the caret is within a word, the selection is automatically expanded to apply the command to the entire word.</span></span>  
  
 <span data-ttu-id="6b478-226">Es ist nicht notwendigerweise eine tatsächliche Implementierung, die für diesen Befehl für ein angegebenes Objekt reagiert. in vielen Fällen ist die Implementierung, die an einen Befehl antwortet der Verantwortung des Anwendungs-Writer.</span><span class="sxs-lookup"><span data-stu-id="6b478-226">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="6b478-227">Mit diesem Befehl wird eine systemeigene Unterstützung durch <xref:System.Windows.Controls.RichTextBox>.</span><span class="sxs-lookup"><span data-stu-id="6b478-227">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>.</span></span>  
  
<a name="xamlAttributeUsage_DecreaseFontSize"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="6b478-228">Verwendung von XAML-Attributen</span><span class="sxs-lookup"><span data-stu-id="6b478-228">XAML Attribute Usage</span></span>  
  
```  
<object property="DecreaseFontSize"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="6b478-229">Im folgenden Beispiel wird veranschaulicht, wie auf einen Befehl für ein Objekt aufrufen, die der Befehl unterstützt wird.</span><span class="sxs-lookup"><span data-stu-id="6b478-229">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="6b478-230">In diesem Beispiel eine <xref:System.Windows.Controls.RichTextBox> dient als das Befehlsziel.</span><span class="sxs-lookup"><span data-stu-id="6b478-230">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="6b478-231">Beachten Sie, dass <xref:System.Windows.Controls.RichTextBox> implementiert die <xref:System.Windows.IInputElement> Schnittstelle (geerbt von <xref:System.Windows.FrameworkElement>), und bietet systemeigene Unterstützung für viele Bearbeitungsbefehle.</span><span class="sxs-lookup"><span data-stu-id="6b478-231">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="6b478-232">Das erste Argument für die <xref:System.Windows.Input.RoutedCommand.Execute%2A> Methode ist ein Befehlsparameter.</span><span class="sxs-lookup"><span data-stu-id="6b478-232">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="6b478-233">Die meisten Befehle ignorieren Befehlsparameter. Dieser Parameter sollte im allgemeinen `null` für Bearbeitungsbefehle.</span><span class="sxs-lookup"><span data-stu-id="6b478-233">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="6b478-234">Das zweite Argument gibt das Objekt, an dem der Befehl weitergeleitet werden.</span><span class="sxs-lookup"><span data-stu-id="6b478-234">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="6b478-235">Dieses Objekt muss implementieren die <xref:System.Windows.IInputElement> Schnittstelle, und sollte einen Handler für den angegebenen Befehl einschließen.</span><span class="sxs-lookup"><span data-stu-id="6b478-235">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="6b478-236">Im Allgemeinen wird ein Befehl ignoriert, wenn für ein Objekt aufgerufen, die den Befehl nicht behandelt.</span><span class="sxs-lookup"><span data-stu-id="6b478-236">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.IncreaseFontSize" />
      </Docs>
    </Member>
    <Member MemberName="DecreaseIndentation">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand DecreaseIndentation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand DecreaseIndentation" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.DecreaseIndentation" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property DecreaseIndentation As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ DecreaseIndentation { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DecreaseIndentation : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.DecreaseIndentation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6b478-237">Stellt den <see cref="P:System.Windows.Documents.EditingCommands.DecreaseIndentation" />-Befehl dar, mit dem angefordert wird, dass der Einzug des aktuellen Absatzes um einen Tabstopp verringert wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b478-237">Represents the <see cref="P:System.Windows.Documents.EditingCommands.DecreaseIndentation" /> command, which requests that indentation for the current paragraph be decreased by one tab stop.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6b478-238">Der angeforderte Befehl.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b478-238">The requested command.</span>
          </span>
          <span data-ttu-id="6b478-239">Die standardmäßige Tastenkombination für diesen Befehl wird <see langword="Ctrl" /> + <see langword="Shift" /> + <see langword="T" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b478-239">The default key gesture for this command is <see langword="Ctrl" />+<see langword="Shift" />+<see langword="T" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6b478-240">Es ist nicht notwendigerweise eine tatsächliche Implementierung, die für diesen Befehl für ein angegebenes Objekt reagiert. in vielen Fällen ist die Implementierung, die an einen Befehl antwortet der Verantwortung des Anwendungs-Writer.</span><span class="sxs-lookup"><span data-stu-id="6b478-240">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="6b478-241">Mit diesem Befehl wird eine systemeigene Unterstützung durch <xref:System.Windows.Controls.RichTextBox>.</span><span class="sxs-lookup"><span data-stu-id="6b478-241">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="6b478-242">Dieser Befehl hat keine Auswirkungen auf ein Textelement, es sei denn, die <xref:System.Windows.Controls.Primitives.TextBoxBase.AcceptsTab%2A> des Textelements ist-Eigenschaftensatz auf `true`.</span><span class="sxs-lookup"><span data-stu-id="6b478-242">This command has no effect on a text element unless the <xref:System.Windows.Controls.Primitives.TextBoxBase.AcceptsTab%2A> property of the text element is set to `true`.</span></span>  
  
<a name="xamlAttributeUsage_DecreaseIndentation"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="6b478-243">Verwendung von XAML-Attributen</span><span class="sxs-lookup"><span data-stu-id="6b478-243">XAML Attribute Usage</span></span>  
  
```  
<object property="DecreaseIndentation"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="6b478-244">Im folgenden Beispiel wird veranschaulicht, wie auf einen Befehl für ein Objekt aufrufen, die der Befehl unterstützt wird.</span><span class="sxs-lookup"><span data-stu-id="6b478-244">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="6b478-245">In diesem Beispiel eine <xref:System.Windows.Controls.RichTextBox> dient als das Befehlsziel.</span><span class="sxs-lookup"><span data-stu-id="6b478-245">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="6b478-246">Beachten Sie, dass <xref:System.Windows.Controls.RichTextBox> implementiert die <xref:System.Windows.IInputElement> Schnittstelle (geerbt von <xref:System.Windows.FrameworkElement>), und bietet systemeigene Unterstützung für viele Bearbeitungsbefehle.</span><span class="sxs-lookup"><span data-stu-id="6b478-246">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="6b478-247">Das erste Argument für die <xref:System.Windows.Input.RoutedCommand.Execute%2A> Methode ist ein Befehlsparameter.</span><span class="sxs-lookup"><span data-stu-id="6b478-247">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="6b478-248">Die meisten Befehle ignorieren Befehlsparameter. Dieser Parameter sollte im allgemeinen `null` für Bearbeitungsbefehle.</span><span class="sxs-lookup"><span data-stu-id="6b478-248">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="6b478-249">Das zweite Argument gibt das Objekt, an dem der Befehl weitergeleitet werden.</span><span class="sxs-lookup"><span data-stu-id="6b478-249">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="6b478-250">Dieses Objekt muss implementieren die <xref:System.Windows.IInputElement> Schnittstelle, und sollte einen Handler für den angegebenen Befehl einschließen.</span><span class="sxs-lookup"><span data-stu-id="6b478-250">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="6b478-251">Im Allgemeinen wird ein Befehl ignoriert, wenn für ein Objekt aufgerufen, die den Befehl nicht behandelt.</span><span class="sxs-lookup"><span data-stu-id="6b478-251">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.IncreaseIndentation" />
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand Delete { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand Delete" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.Delete" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Delete As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ Delete { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Delete : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.Delete" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6b478-252">Stellt den <see cref="P:System.Windows.Documents.EditingCommands.Delete" />-Befehl dar, mit dem angefordert wird, dass die aktuelle Auswahl gelöscht wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b478-252">Represents the <see cref="P:System.Windows.Documents.EditingCommands.Delete" /> command, which requests that the current selection be deleted.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6b478-253">Der angeforderte Befehl.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b478-253">The requested command.</span>
          </span>
          <span data-ttu-id="6b478-254">Die Standardtastenkombination für diesen Befehl ist <see langword="Delete" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b478-254">The default key gesture for this command is <see langword="Delete" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6b478-255">Dieser Befehl verwirft alle Formatierungen aus der gelöschten Auswahl.</span><span class="sxs-lookup"><span data-stu-id="6b478-255">This command discards any formatting from the deleted selection.</span></span>  <span data-ttu-id="6b478-256">Im Gegensatz dazu die <xref:System.Windows.Documents.EditingCommands.Backspace%2A> Befehl, der behält die Formatierung aus der gelöschten Auswahl für den Inhalt sofort an derselben Position eingefügt, nachdem dieser Befehl aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="6b478-256">Contrast with the <xref:System.Windows.Documents.EditingCommands.Backspace%2A> command, which retains any formatting from the deleted selection for content immediately inserted at the same location after this command is invoked.</span></span>  
  
 <span data-ttu-id="6b478-257">Es ist nicht notwendigerweise eine tatsächliche Implementierung, die für diesen Befehl für ein angegebenes Objekt reagiert. in vielen Fällen ist die Implementierung, die an einen Befehl antwortet der Verantwortung des Anwendungs-Writer.</span><span class="sxs-lookup"><span data-stu-id="6b478-257">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="6b478-258">Mit diesem Befehl wird eine systemeigene Unterstützung durch <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, und <xref:System.Windows.Controls.PasswordBox>.</span><span class="sxs-lookup"><span data-stu-id="6b478-258">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_Delete"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="6b478-259">Verwendung von XAML-Attributen</span><span class="sxs-lookup"><span data-stu-id="6b478-259">XAML Attribute Usage</span></span>  
  
```  
<object property="Delete"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="6b478-260">Im folgenden Beispiel wird veranschaulicht, wie auf einen Befehl für ein Objekt aufrufen, die der Befehl unterstützt wird.</span><span class="sxs-lookup"><span data-stu-id="6b478-260">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="6b478-261">In diesem Beispiel eine <xref:System.Windows.Controls.RichTextBox> dient als das Befehlsziel.</span><span class="sxs-lookup"><span data-stu-id="6b478-261">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="6b478-262">Beachten Sie, dass <xref:System.Windows.Controls.RichTextBox> implementiert die <xref:System.Windows.IInputElement> Schnittstelle (geerbt von <xref:System.Windows.FrameworkElement>), und bietet systemeigene Unterstützung für viele Bearbeitungsbefehle.</span><span class="sxs-lookup"><span data-stu-id="6b478-262">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="6b478-263">Das erste Argument für die <xref:System.Windows.Input.RoutedCommand.Execute%2A> Methode ist ein Befehlsparameter.</span><span class="sxs-lookup"><span data-stu-id="6b478-263">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="6b478-264">Die meisten Befehle ignorieren Befehlsparameter. Dieser Parameter sollte im allgemeinen `null` für Bearbeitungsbefehle.</span><span class="sxs-lookup"><span data-stu-id="6b478-264">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="6b478-265">Das zweite Argument gibt das Objekt, an dem der Befehl weitergeleitet werden.</span><span class="sxs-lookup"><span data-stu-id="6b478-265">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="6b478-266">Dieses Objekt muss implementieren die <xref:System.Windows.IInputElement> Schnittstelle, und sollte einen Handler für den angegebenen Befehl einschließen.</span><span class="sxs-lookup"><span data-stu-id="6b478-266">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="6b478-267">Im Allgemeinen wird ein Befehl ignoriert, wenn für ein Objekt aufgerufen, die den Befehl nicht behandelt.</span><span class="sxs-lookup"><span data-stu-id="6b478-267">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteNextWord">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand DeleteNextWord { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand DeleteNextWord" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.DeleteNextWord" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property DeleteNextWord As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ DeleteNextWord { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DeleteNextWord : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.DeleteNextWord" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6b478-268">Stellt den <see cref="P:System.Windows.Documents.EditingCommands.DeleteNextWord" />-Befehl dar, mit dem angefordert wird, dass das relativ zur aktuellen Position nächste Wort gelöscht wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b478-268">Represents the <see cref="P:System.Windows.Documents.EditingCommands.DeleteNextWord" /> command, which requests that the next word (relative to a current position) be deleted.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6b478-269">Der angeforderte Befehl.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b478-269">The requested command.</span>
          </span>
          <span data-ttu-id="6b478-270">Die standardmäßige Tastenkombination für diesen Befehl wird <see langword="Ctrl" /> + <see langword="Delete" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b478-270">The default key gesture for this command is <see langword="Ctrl" />+<see langword="Delete" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6b478-271">Wenn die Einfügemarke innerhalb eines Worts ist, wird der Rest des Worts zwischen der aktuellen Position und dem Ende des Worts gelöscht.</span><span class="sxs-lookup"><span data-stu-id="6b478-271">If the caret is within a word, the remainder of the word between the current position and the end of the word is deleted.</span></span>  
  
 <span data-ttu-id="6b478-272">Es ist nicht notwendigerweise eine tatsächliche Implementierung, die für diesen Befehl für ein angegebenes Objekt reagiert. in vielen Fällen ist die Implementierung, die an einen Befehl antwortet der Verantwortung des Anwendungs-Writer.</span><span class="sxs-lookup"><span data-stu-id="6b478-272">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="6b478-273">Mit diesem Befehl wird eine systemeigene Unterstützung durch <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, und <xref:System.Windows.Controls.PasswordBox>.</span><span class="sxs-lookup"><span data-stu-id="6b478-273">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_DeleteNextWord"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="6b478-274">Verwendung von XAML-Attributen</span><span class="sxs-lookup"><span data-stu-id="6b478-274">XAML Attribute Usage</span></span>  
  
```  
<object property="DeleteNextWord"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="6b478-275">Im folgenden Beispiel wird veranschaulicht, wie auf einen Befehl für ein Objekt aufrufen, die der Befehl unterstützt wird.</span><span class="sxs-lookup"><span data-stu-id="6b478-275">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="6b478-276">In diesem Beispiel eine <xref:System.Windows.Controls.RichTextBox> dient als das Befehlsziel.</span><span class="sxs-lookup"><span data-stu-id="6b478-276">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="6b478-277">Beachten Sie, dass <xref:System.Windows.Controls.RichTextBox> implementiert die <xref:System.Windows.IInputElement> Schnittstelle (geerbt von <xref:System.Windows.FrameworkElement>), und bietet systemeigene Unterstützung für viele Bearbeitungsbefehle.</span><span class="sxs-lookup"><span data-stu-id="6b478-277">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="6b478-278">Das erste Argument für die <xref:System.Windows.Input.RoutedCommand.Execute%2A> Methode ist ein Befehlsparameter.</span><span class="sxs-lookup"><span data-stu-id="6b478-278">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="6b478-279">Die meisten Befehle ignorieren Befehlsparameter. Dieser Parameter sollte im allgemeinen `null` für Bearbeitungsbefehle.</span><span class="sxs-lookup"><span data-stu-id="6b478-279">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="6b478-280">Das zweite Argument gibt das Objekt, an dem der Befehl weitergeleitet werden.</span><span class="sxs-lookup"><span data-stu-id="6b478-280">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="6b478-281">Dieses Objekt muss implementieren die <xref:System.Windows.IInputElement> Schnittstelle, und sollte einen Handler für den angegebenen Befehl einschließen.</span><span class="sxs-lookup"><span data-stu-id="6b478-281">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="6b478-282">Im Allgemeinen wird ein Befehl ignoriert, wenn für ein Objekt aufgerufen, die den Befehl nicht behandelt.</span><span class="sxs-lookup"><span data-stu-id="6b478-282">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.DeletePreviousWord" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveLeftByWord" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveRightByWord" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectLeftByWord" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectRightByWord" />
      </Docs>
    </Member>
    <Member MemberName="DeletePreviousWord">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand DeletePreviousWord { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand DeletePreviousWord" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.DeletePreviousWord" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property DeletePreviousWord As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ DeletePreviousWord { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DeletePreviousWord : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.DeletePreviousWord" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6b478-283">Stellt den <see cref="P:System.Windows.Documents.EditingCommands.DeletePreviousWord" />-Befehl dar, mit dem angefordert wird, dass das relativ zur aktuellen Position vorhergehende Wort gelöscht wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b478-283">Represents the <see cref="P:System.Windows.Documents.EditingCommands.DeletePreviousWord" /> command, which requests that the previous word (relative to a current position) be deleted.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6b478-284">Der angeforderte Befehl.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b478-284">The requested command.</span>
          </span>
          <span data-ttu-id="6b478-285">Die standardmäßige Tastenkombination für diesen Befehl wird <see langword="Ctrl" /> + <see langword="Backspace" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b478-285">The default key gesture for this command is <see langword="Ctrl" />+<see langword="Backspace" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6b478-286">Wenn die Einfügemarke innerhalb eines Worts befindet, wird der Rest des Worts zwischen der aktuellen Position und die Wortanfang gelöscht.</span><span class="sxs-lookup"><span data-stu-id="6b478-286">If the caret is within a word, the remainder of the word between the current position and the beginning of the word is deleted.</span></span>  
  
 <span data-ttu-id="6b478-287">Es ist nicht notwendigerweise eine tatsächliche Implementierung, die für diesen Befehl für ein angegebenes Objekt reagiert. in vielen Fällen ist die Implementierung, die an einen Befehl antwortet der Verantwortung des Anwendungs-Writer.</span><span class="sxs-lookup"><span data-stu-id="6b478-287">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="6b478-288">Mit diesem Befehl wird eine systemeigene Unterstützung durch <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, und <xref:System.Windows.Controls.PasswordBox>.</span><span class="sxs-lookup"><span data-stu-id="6b478-288">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_DeletePreviousWord"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="6b478-289">Verwendung von XAML-Attributen</span><span class="sxs-lookup"><span data-stu-id="6b478-289">XAML Attribute Usage</span></span>  
  
```  
<object property="DeletePreviousWord"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="6b478-290">Im folgenden Beispiel wird veranschaulicht, wie auf einen Befehl für ein Objekt aufrufen, die der Befehl unterstützt wird.</span><span class="sxs-lookup"><span data-stu-id="6b478-290">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="6b478-291">In diesem Beispiel eine <xref:System.Windows.Controls.RichTextBox> dient als das Befehlsziel.</span><span class="sxs-lookup"><span data-stu-id="6b478-291">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="6b478-292">Beachten Sie, dass <xref:System.Windows.Controls.RichTextBox> implementiert die <xref:System.Windows.IInputElement> Schnittstelle (geerbt von <xref:System.Windows.FrameworkElement>), und bietet systemeigene Unterstützung für viele Bearbeitungsbefehle.</span><span class="sxs-lookup"><span data-stu-id="6b478-292">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="6b478-293">Das erste Argument für die <xref:System.Windows.Input.RoutedCommand.Execute%2A> Methode ist ein Befehlsparameter.</span><span class="sxs-lookup"><span data-stu-id="6b478-293">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="6b478-294">Die meisten Befehle ignorieren Befehlsparameter. Dieser Parameter sollte im allgemeinen `null` für Bearbeitungsbefehle.</span><span class="sxs-lookup"><span data-stu-id="6b478-294">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="6b478-295">Das zweite Argument gibt das Objekt, an dem der Befehl weitergeleitet werden.</span><span class="sxs-lookup"><span data-stu-id="6b478-295">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="6b478-296">Dieses Objekt muss implementieren die <xref:System.Windows.IInputElement> Schnittstelle, und sollte einen Handler für den angegebenen Befehl einschließen.</span><span class="sxs-lookup"><span data-stu-id="6b478-296">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="6b478-297">Im Allgemeinen wird ein Befehl ignoriert, wenn für ein Objekt aufgerufen, die den Befehl nicht behandelt.</span><span class="sxs-lookup"><span data-stu-id="6b478-297">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.DeleteNextWord" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveLeftByWord" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveRightByWord" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectLeftByWord" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectRightByWord" />
      </Docs>
    </Member>
    <Member MemberName="EnterLineBreak">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand EnterLineBreak { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand EnterLineBreak" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.EnterLineBreak" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property EnterLineBreak As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ EnterLineBreak { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.EnterLineBreak : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.EnterLineBreak" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6b478-298">Stellt den <see cref="P:System.Windows.Documents.EditingCommands.EnterLineBreak" />-Befehl dar, mit dem angefordert wird, dass ein Zeilenumbruch an der aktuellen Position oder über der aktuellen Auswahl eingefügt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b478-298">Represents the <see cref="P:System.Windows.Documents.EditingCommands.EnterLineBreak" /> command, which requests that a line break be inserted at the current position or over the current selection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6b478-299">Der angeforderte Befehl.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b478-299">The requested command.</span>
          </span>
          <span data-ttu-id="6b478-300">Die standardmäßige Tastenkombination für diesen Befehl wird <see langword="Shift" /> + <see langword="Enter" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b478-300">The default key gesture for this command is <see langword="Shift" />+<see langword="Enter" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6b478-301">Editoren, in denen fortlaufendem Inhalt, z. B. unterstützen <xref:System.Windows.Controls.RichTextBox>, gibt diese Ursachen Befehl eine <xref:System.Windows.Documents.LineBreak> Element an der aktuellen Position eingefügt werden.</span><span class="sxs-lookup"><span data-stu-id="6b478-301">For editors that support flow content, such as <xref:System.Windows.Controls.RichTextBox>, this command causes a <xref:System.Windows.Documents.LineBreak> element to be inserted at the current position.</span></span>  
  
 <span data-ttu-id="6b478-302">Es ist nicht notwendigerweise eine tatsächliche Implementierung, die für diesen Befehl für ein angegebenes Objekt reagiert. in vielen Fällen ist die Implementierung, die an einen Befehl antwortet der Verantwortung des Anwendungs-Writer.</span><span class="sxs-lookup"><span data-stu-id="6b478-302">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="6b478-303">Mit diesem Befehl wird eine systemeigene Unterstützung durch <xref:System.Windows.Controls.RichTextBox> und <xref:System.Windows.Controls.TextBox>.</span><span class="sxs-lookup"><span data-stu-id="6b478-303">This command is natively supported by <xref:System.Windows.Controls.RichTextBox> and <xref:System.Windows.Controls.TextBox>.</span></span>  
  
<a name="xamlAttributeUsage_EnterLineBreak"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="6b478-304">Verwendung von XAML-Attributen</span><span class="sxs-lookup"><span data-stu-id="6b478-304">XAML Attribute Usage</span></span>  
  
```  
<object property="EnterLineBreak"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="6b478-305">Im folgenden Beispiel wird veranschaulicht, wie auf einen Befehl für ein Objekt aufrufen, die der Befehl unterstützt wird.</span><span class="sxs-lookup"><span data-stu-id="6b478-305">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="6b478-306">In diesem Beispiel eine <xref:System.Windows.Controls.RichTextBox> dient als das Befehlsziel.</span><span class="sxs-lookup"><span data-stu-id="6b478-306">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="6b478-307">Beachten Sie, dass <xref:System.Windows.Controls.RichTextBox> implementiert die <xref:System.Windows.IInputElement> Schnittstelle (geerbt von <xref:System.Windows.FrameworkElement>), und bietet systemeigene Unterstützung für viele Bearbeitungsbefehle.</span><span class="sxs-lookup"><span data-stu-id="6b478-307">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="6b478-308">Das erste Argument für die <xref:System.Windows.Input.RoutedCommand.Execute%2A> Methode ist ein Befehlsparameter.</span><span class="sxs-lookup"><span data-stu-id="6b478-308">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="6b478-309">Die meisten Befehle ignorieren Befehlsparameter. Dieser Parameter sollte im allgemeinen `null` für Bearbeitungsbefehle.</span><span class="sxs-lookup"><span data-stu-id="6b478-309">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="6b478-310">Das zweite Argument gibt das Objekt, an dem der Befehl weitergeleitet werden.</span><span class="sxs-lookup"><span data-stu-id="6b478-310">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="6b478-311">Dieses Objekt muss implementieren die <xref:System.Windows.IInputElement> Schnittstelle, und sollte einen Handler für den angegebenen Befehl einschließen.</span><span class="sxs-lookup"><span data-stu-id="6b478-311">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="6b478-312">Im Allgemeinen wird ein Befehl ignoriert, wenn für ein Objekt aufgerufen, die den Befehl nicht behandelt.</span><span class="sxs-lookup"><span data-stu-id="6b478-312">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.EnterParagraphBreak" />
      </Docs>
    </Member>
    <Member MemberName="EnterParagraphBreak">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand EnterParagraphBreak { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand EnterParagraphBreak" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.EnterParagraphBreak" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property EnterParagraphBreak As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ EnterParagraphBreak { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.EnterParagraphBreak : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.EnterParagraphBreak" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6b478-313">Stellt den <see cref="P:System.Windows.Documents.EditingCommands.EnterParagraphBreak" />-Befehl dar, mit dem angefordert wird, dass ein Absatzwechsel an der aktuellen Position oder über der aktuellen Auswahl eingefügt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b478-313">Represents the <see cref="P:System.Windows.Documents.EditingCommands.EnterParagraphBreak" /> command, which requests that a paragraph break be inserted at the current position or over the current selection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6b478-314">Der angeforderte Befehl.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b478-314">The requested command.</span>
          </span>
          <span data-ttu-id="6b478-315">Die Standardtastenkombination für diesen Befehl ist <see langword="Enter" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b478-315">The default key gesture for this command is <see langword="Enter" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6b478-316">Dieser Befehl entspricht der Benutzer die EINGABETASTE drücken.</span><span class="sxs-lookup"><span data-stu-id="6b478-316">This command is equivalent to the user pressing the ENTER key.</span></span>  
  
 <span data-ttu-id="6b478-317">Es ist nicht notwendigerweise eine tatsächliche Implementierung, die für diesen Befehl für ein angegebenes Objekt reagiert. in vielen Fällen ist die Implementierung, die an einen Befehl antwortet der Verantwortung des Anwendungs-Writer.</span><span class="sxs-lookup"><span data-stu-id="6b478-317">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="6b478-318">Mit diesem Befehl wird eine systemeigene Unterstützung durch <xref:System.Windows.Controls.RichTextBox> und <xref:System.Windows.Controls.TextBox> (wenn die <xref:System.Windows.Controls.Primitives.TextBoxBase.AcceptsReturn%2A> Eigenschaft ist `true`).</span><span class="sxs-lookup"><span data-stu-id="6b478-318">This command is natively supported by <xref:System.Windows.Controls.RichTextBox> and <xref:System.Windows.Controls.TextBox> (when the <xref:System.Windows.Controls.Primitives.TextBoxBase.AcceptsReturn%2A> property is `true`).</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="6b478-319">Dieser Befehl hat keine Auswirkungen auf ein Textelement, es sei denn, die <xref:System.Windows.Controls.Primitives.TextBoxBase.AcceptsReturn%2A> des Textelements ist-Eigenschaftensatz auf `true`.</span><span class="sxs-lookup"><span data-stu-id="6b478-319">This command has no effect on a text element unless the <xref:System.Windows.Controls.Primitives.TextBoxBase.AcceptsReturn%2A> property of the text element is set to `true`.</span></span>  
  
<a name="xamlAttributeUsage_EnterParagraphBreak"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="6b478-320">Verwendung von XAML-Attributen</span><span class="sxs-lookup"><span data-stu-id="6b478-320">XAML Attribute Usage</span></span>  
  
```  
<object property="EnterParagraphBreak"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="6b478-321">Im folgenden Beispiel wird veranschaulicht, wie auf einen Befehl für ein Objekt aufrufen, die der Befehl unterstützt wird.</span><span class="sxs-lookup"><span data-stu-id="6b478-321">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="6b478-322">In diesem Beispiel eine <xref:System.Windows.Controls.RichTextBox> dient als das Befehlsziel.</span><span class="sxs-lookup"><span data-stu-id="6b478-322">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="6b478-323">Beachten Sie, dass <xref:System.Windows.Controls.RichTextBox> implementiert die <xref:System.Windows.IInputElement> Schnittstelle (geerbt von <xref:System.Windows.FrameworkElement>), und bietet systemeigene Unterstützung für viele Bearbeitungsbefehle.</span><span class="sxs-lookup"><span data-stu-id="6b478-323">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="6b478-324">Das erste Argument für die <xref:System.Windows.Input.RoutedCommand.Execute%2A> Methode ist ein Befehlsparameter.</span><span class="sxs-lookup"><span data-stu-id="6b478-324">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="6b478-325">Die meisten Befehle ignorieren Befehlsparameter. Dieser Parameter sollte im allgemeinen `null` für Bearbeitungsbefehle.</span><span class="sxs-lookup"><span data-stu-id="6b478-325">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="6b478-326">Das zweite Argument gibt das Objekt, an dem der Befehl weitergeleitet werden.</span><span class="sxs-lookup"><span data-stu-id="6b478-326">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="6b478-327">Dieses Objekt muss implementieren die <xref:System.Windows.IInputElement> Schnittstelle, und sollte einen Handler für den angegebenen Befehl einschließen.</span><span class="sxs-lookup"><span data-stu-id="6b478-327">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="6b478-328">Im Allgemeinen wird ein Befehl ignoriert, wenn für ein Objekt aufgerufen, die den Befehl nicht behandelt.</span><span class="sxs-lookup"><span data-stu-id="6b478-328">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.EnterLineBreak" />
      </Docs>
    </Member>
    <Member MemberName="IgnoreSpellingError">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand IgnoreSpellingError { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand IgnoreSpellingError" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.IgnoreSpellingError" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property IgnoreSpellingError As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ IgnoreSpellingError { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.IgnoreSpellingError : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.IgnoreSpellingError" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6b478-329">Stellt den <see cref="P:System.Windows.Documents.EditingCommands.IgnoreSpellingError" />-Befehl dar, mit dem angefordert wird, dass sämtliche Instanzen falsch geschriebener Wörter an der aktuellen Position oder in der aktuellen Auswahl ignoriert werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b478-329">Represents the <see cref="P:System.Windows.Documents.EditingCommands.IgnoreSpellingError" /> command, which requests that any instances of misspelled words at the current position or in the current selection be ignored.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6b478-330">Der angeforderte Befehl.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b478-330">The requested command.</span>
          </span>
          <span data-ttu-id="6b478-331">Für diesen Befehl gibt es keine Standardtastenkombination.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b478-331">This command has no default key gesture.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6b478-332">Es ist nicht notwendigerweise eine tatsächliche Implementierung, die für diesen Befehl für ein angegebenes Objekt reagiert. in vielen Fällen ist die Implementierung, die an einen Befehl antwortet der Verantwortung des Anwendungs-Writer.</span><span class="sxs-lookup"><span data-stu-id="6b478-332">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
<a name="xamlAttributeUsage_IgnoreSpellingError"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="6b478-333">Verwendung von XAML-Attributen</span><span class="sxs-lookup"><span data-stu-id="6b478-333">XAML Attribute Usage</span></span>  
  
```  
<object property="IgnoreSpellingError"/>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.CorrectSpellingError" />
      </Docs>
    </Member>
    <Member MemberName="IncreaseFontSize">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand IncreaseFontSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand IncreaseFontSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.IncreaseFontSize" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property IncreaseFontSize As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ IncreaseFontSize { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.IncreaseFontSize : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.IncreaseFontSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6b478-334">Stellt den <see cref="P:System.Windows.Documents.EditingCommands.IncreaseFontSize" />-Befehl dar, mit dem angefordert wird, dass die Schriftgröße für die aktuelle Auswahl um 1 Punkt erhöht wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b478-334">Represents the <see cref="P:System.Windows.Documents.EditingCommands.IncreaseFontSize" /> command, which requests that the font size for the current selection be increased by 1 point.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6b478-335">Der angeforderte Befehl.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b478-335">The requested command.</span>
          </span>
          <span data-ttu-id="6b478-336">Die standardmäßige Tastenkombination für diesen Befehl wird <see langword="Ctrl" /> + <see langword="OemCloseBrackets" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b478-336">The default key gesture for this command is <see langword="Ctrl" />+<see langword="OemCloseBrackets" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6b478-337">Wenn dieser Befehl für eine leere Auswahl aufgerufen wird, in dem sich die Einfügemarke innerhalb eines Worts ist, wird die Auswahl erweitert, um den Befehl für das ganze Wort gelten.</span><span class="sxs-lookup"><span data-stu-id="6b478-337">If this command is invoked on an empty selection where the caret is within a word, the selection is expanded to apply the command to the entire word.</span></span>  
  
 <span data-ttu-id="6b478-338">Es ist nicht notwendigerweise eine tatsächliche Implementierung, die für diesen Befehl für ein angegebenes Objekt reagiert. in vielen Fällen ist die Implementierung, die an einen Befehl antwortet der Verantwortung des Anwendungs-Writer.</span><span class="sxs-lookup"><span data-stu-id="6b478-338">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="6b478-339">Mit diesem Befehl wird eine systemeigene Unterstützung durch <xref:System.Windows.Controls.RichTextBox>.</span><span class="sxs-lookup"><span data-stu-id="6b478-339">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>.</span></span>  
  
<a name="xamlAttributeUsage_IncreaseFontSize"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="6b478-340">Verwendung von XAML-Attributen</span><span class="sxs-lookup"><span data-stu-id="6b478-340">XAML Attribute Usage</span></span>  
  
```  
<object property="IncreaseFontSize"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="6b478-341">Im folgenden Beispiel wird veranschaulicht, wie auf einen Befehl für ein Objekt aufrufen, die der Befehl unterstützt wird.</span><span class="sxs-lookup"><span data-stu-id="6b478-341">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="6b478-342">In diesem Beispiel eine <xref:System.Windows.Controls.RichTextBox> dient als das Befehlsziel.</span><span class="sxs-lookup"><span data-stu-id="6b478-342">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="6b478-343">Beachten Sie, dass <xref:System.Windows.Controls.RichTextBox> implementiert die <xref:System.Windows.IInputElement> Schnittstelle (geerbt von <xref:System.Windows.FrameworkElement>), und bietet systemeigene Unterstützung für viele Bearbeitungsbefehle.</span><span class="sxs-lookup"><span data-stu-id="6b478-343">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="6b478-344">Das erste Argument für die <xref:System.Windows.Input.RoutedCommand.Execute%2A> Methode ist ein Befehlsparameter.</span><span class="sxs-lookup"><span data-stu-id="6b478-344">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="6b478-345">Die meisten Befehle ignorieren Befehlsparameter. Dieser Parameter sollte im allgemeinen `null` für Bearbeitungsbefehle.</span><span class="sxs-lookup"><span data-stu-id="6b478-345">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="6b478-346">Das zweite Argument gibt das Objekt, an dem der Befehl weitergeleitet werden.</span><span class="sxs-lookup"><span data-stu-id="6b478-346">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="6b478-347">Dieses Objekt muss implementieren die <xref:System.Windows.IInputElement> Schnittstelle, und sollte einen Handler für den angegebenen Befehl einschließen.</span><span class="sxs-lookup"><span data-stu-id="6b478-347">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="6b478-348">Im Allgemeinen wird ein Befehl ignoriert, wenn für ein Objekt aufgerufen, die den Befehl nicht behandelt.</span><span class="sxs-lookup"><span data-stu-id="6b478-348">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.DecreaseFontSize" />
      </Docs>
    </Member>
    <Member MemberName="IncreaseIndentation">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand IncreaseIndentation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand IncreaseIndentation" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.IncreaseIndentation" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property IncreaseIndentation As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ IncreaseIndentation { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.IncreaseIndentation : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.IncreaseIndentation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6b478-349">Stellt den <see cref="P:System.Windows.Documents.EditingCommands.IncreaseIndentation" />-Befehl dar, mit dem angefordert wird, dass der Einzug des aktuellen Absatzes um einen Tabstopp vergrößert wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b478-349">Represents the <see cref="P:System.Windows.Documents.EditingCommands.IncreaseIndentation" /> command, which requests that indentation for the current paragraph be increased by one tab stop.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6b478-350">Der angeforderte Befehl.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b478-350">The requested command.</span>
          </span>
          <span data-ttu-id="6b478-351">Die standardmäßige Tastenkombination für diesen Befehl wird <see langword="Ctrl" /> + <see langword="T" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b478-351">The default key gesture for this command is <see langword="Ctrl" />+<see langword="T" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6b478-352">Es ist nicht notwendigerweise eine tatsächliche Implementierung, die für diesen Befehl für ein angegebenes Objekt reagiert. in vielen Fällen ist die Implementierung, die an einen Befehl antwortet der Verantwortung des Anwendungs-Writer.</span><span class="sxs-lookup"><span data-stu-id="6b478-352">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="6b478-353">Mit diesem Befehl wird eine systemeigene Unterstützung durch <xref:System.Windows.Controls.RichTextBox>.</span><span class="sxs-lookup"><span data-stu-id="6b478-353">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="6b478-354">Dieser Befehl hat keine Auswirkungen auf ein Textelement, es sei denn, die <xref:System.Windows.Controls.Primitives.TextBoxBase.AcceptsTab%2A> des Textelements ist-Eigenschaftensatz auf `true`.</span><span class="sxs-lookup"><span data-stu-id="6b478-354">This command has no effect on a text element unless the <xref:System.Windows.Controls.Primitives.TextBoxBase.AcceptsTab%2A> property of the text element is set to `true`.</span></span>  
  
<a name="xamlAttributeUsage_IncreaseIndentation"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="6b478-355">Verwendung von XAML-Attributen</span><span class="sxs-lookup"><span data-stu-id="6b478-355">XAML Attribute Usage</span></span>  
  
```  
<object property="IncreaseIndentation"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="6b478-356">Im folgenden Beispiel wird veranschaulicht, wie auf einen Befehl für ein Objekt aufrufen, die der Befehl unterstützt wird.</span><span class="sxs-lookup"><span data-stu-id="6b478-356">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="6b478-357">In diesem Beispiel eine <xref:System.Windows.Controls.RichTextBox> dient als das Befehlsziel.</span><span class="sxs-lookup"><span data-stu-id="6b478-357">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="6b478-358">Beachten Sie, dass <xref:System.Windows.Controls.RichTextBox> implementiert die <xref:System.Windows.IInputElement> Schnittstelle (geerbt von <xref:System.Windows.FrameworkElement>), und bietet systemeigene Unterstützung für viele Bearbeitungsbefehle.</span><span class="sxs-lookup"><span data-stu-id="6b478-358">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="6b478-359">Das erste Argument für die <xref:System.Windows.Input.RoutedCommand.Execute%2A> Methode ist ein Befehlsparameter.</span><span class="sxs-lookup"><span data-stu-id="6b478-359">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="6b478-360">Die meisten Befehle ignorieren Befehlsparameter. Dieser Parameter sollte im allgemeinen `null` für Bearbeitungsbefehle.</span><span class="sxs-lookup"><span data-stu-id="6b478-360">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="6b478-361">Das zweite Argument gibt das Objekt, an dem der Befehl weitergeleitet werden.</span><span class="sxs-lookup"><span data-stu-id="6b478-361">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="6b478-362">Dieses Objekt muss implementieren die <xref:System.Windows.IInputElement> Schnittstelle, und sollte einen Handler für den angegebenen Befehl einschließen.</span><span class="sxs-lookup"><span data-stu-id="6b478-362">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="6b478-363">Im Allgemeinen wird ein Befehl ignoriert, wenn für ein Objekt aufgerufen, die den Befehl nicht behandelt.</span><span class="sxs-lookup"><span data-stu-id="6b478-363">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.DecreaseIndentation" />
      </Docs>
    </Member>
    <Member MemberName="MoveDownByLine">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand MoveDownByLine { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand MoveDownByLine" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.MoveDownByLine" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property MoveDownByLine As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ MoveDownByLine { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MoveDownByLine : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.MoveDownByLine" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6b478-364">Stellt den <see cref="P:System.Windows.Documents.EditingCommands.MoveDownByLine" />-Befehl dar, mit dem angefordert wird, dass die Einfügemarke um eine Zeile nach unten verschoben wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b478-364">Represents the <see cref="P:System.Windows.Documents.EditingCommands.MoveDownByLine" /> command, which requests that the caret move down by one line.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6b478-365">Der angeforderte Befehl.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b478-365">The requested command.</span>
          </span>
          <span data-ttu-id="6b478-366">Die Standardtastenkombination für diesen Befehl ist <see langword="Down" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b478-366">The default key gesture for this command is <see langword="Down" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6b478-367">Es ist nicht notwendigerweise eine tatsächliche Implementierung, die für diesen Befehl für ein angegebenes Objekt reagiert. in vielen Fällen ist die Implementierung, die an einen Befehl antwortet der Verantwortung des Anwendungs-Writer.</span><span class="sxs-lookup"><span data-stu-id="6b478-367">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="6b478-368">Mit diesem Befehl wird eine systemeigene Unterstützung durch <xref:System.Windows.Controls.RichTextBox> und <xref:System.Windows.Controls.TextBox>.</span><span class="sxs-lookup"><span data-stu-id="6b478-368">This command is natively supported by <xref:System.Windows.Controls.RichTextBox> and <xref:System.Windows.Controls.TextBox>.</span></span>  
  
<a name="xamlAttributeUsage_MoveDownByLine"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="6b478-369">Verwendung von XAML-Attributen</span><span class="sxs-lookup"><span data-stu-id="6b478-369">XAML Attribute Usage</span></span>  
  
```  
<object property="MoveDownByLine"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="6b478-370">Im folgenden Beispiel wird veranschaulicht, wie auf einen Befehl für ein Objekt aufrufen, die der Befehl unterstützt wird.</span><span class="sxs-lookup"><span data-stu-id="6b478-370">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="6b478-371">In diesem Beispiel eine <xref:System.Windows.Controls.RichTextBox> dient als das Befehlsziel.</span><span class="sxs-lookup"><span data-stu-id="6b478-371">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="6b478-372">Beachten Sie, dass <xref:System.Windows.Controls.RichTextBox> implementiert die <xref:System.Windows.IInputElement> Schnittstelle (geerbt von <xref:System.Windows.FrameworkElement>), und bietet systemeigene Unterstützung für viele Bearbeitungsbefehle.</span><span class="sxs-lookup"><span data-stu-id="6b478-372">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="6b478-373">Das erste Argument für die <xref:System.Windows.Input.RoutedCommand.Execute%2A> Methode ist ein Befehlsparameter.</span><span class="sxs-lookup"><span data-stu-id="6b478-373">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="6b478-374">Die meisten Befehle ignorieren Befehlsparameter. Dieser Parameter sollte im allgemeinen `null` für Bearbeitungsbefehle.</span><span class="sxs-lookup"><span data-stu-id="6b478-374">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="6b478-375">Das zweite Argument gibt das Objekt, an dem der Befehl weitergeleitet werden.</span><span class="sxs-lookup"><span data-stu-id="6b478-375">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="6b478-376">Dieses Objekt muss implementieren die <xref:System.Windows.IInputElement> Schnittstelle, und sollte einen Handler für den angegebenen Befehl einschließen.</span><span class="sxs-lookup"><span data-stu-id="6b478-376">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="6b478-377">Im Allgemeinen wird ein Befehl ignoriert, wenn für ein Objekt aufgerufen, die den Befehl nicht behandelt.</span><span class="sxs-lookup"><span data-stu-id="6b478-377">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveUpByLine" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveDownByPage" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveDownByParagraph" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectDownByLine" />
      </Docs>
    </Member>
    <Member MemberName="MoveDownByPage">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand MoveDownByPage { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand MoveDownByPage" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.MoveDownByPage" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property MoveDownByPage As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ MoveDownByPage { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MoveDownByPage : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.MoveDownByPage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6b478-378">Stellt den <see cref="P:System.Windows.Documents.EditingCommands.MoveDownByPage" />-Befehl dar, mit dem angefordert wird, dass die Einfügemarke um eine Seite nach unten verschoben wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b478-378">Represents the <see cref="P:System.Windows.Documents.EditingCommands.MoveDownByPage" /> command, which requests that the caret move down by one page.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6b478-379">Der angeforderte Befehl.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b478-379">The requested command.</span>
          </span>
          <span data-ttu-id="6b478-380">Die Standardtastenkombination für diesen Befehl ist <see langword="PageDown" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b478-380">The default key gesture for this command is <see langword="PageDown" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6b478-381">Es ist nicht notwendigerweise eine tatsächliche Implementierung, die für diesen Befehl für ein angegebenes Objekt reagiert. in vielen Fällen ist die Implementierung, die an einen Befehl antwortet der Verantwortung des Anwendungs-Writer.</span><span class="sxs-lookup"><span data-stu-id="6b478-381">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="6b478-382">Mit diesem Befehl wird eine systemeigene Unterstützung durch <xref:System.Windows.Controls.RichTextBox> und <xref:System.Windows.Controls.TextBox>.</span><span class="sxs-lookup"><span data-stu-id="6b478-382">This command is natively supported by <xref:System.Windows.Controls.RichTextBox> and <xref:System.Windows.Controls.TextBox>.</span></span>  
  
<a name="xamlAttributeUsage_MoveDownByPage"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="6b478-383">Verwendung von XAML-Attributen</span><span class="sxs-lookup"><span data-stu-id="6b478-383">XAML Attribute Usage</span></span>  
  
```  
<object property="MoveDownByPage"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="6b478-384">Im folgenden Beispiel wird veranschaulicht, wie auf einen Befehl für ein Objekt aufrufen, die der Befehl unterstützt wird.</span><span class="sxs-lookup"><span data-stu-id="6b478-384">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="6b478-385">In diesem Beispiel eine <xref:System.Windows.Controls.RichTextBox> dient als das Befehlsziel.</span><span class="sxs-lookup"><span data-stu-id="6b478-385">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="6b478-386">Beachten Sie, dass <xref:System.Windows.Controls.RichTextBox> implementiert die <xref:System.Windows.IInputElement> Schnittstelle (geerbt von <xref:System.Windows.FrameworkElement>), und bietet systemeigene Unterstützung für viele Bearbeitungsbefehle.</span><span class="sxs-lookup"><span data-stu-id="6b478-386">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="6b478-387">Das erste Argument für die <xref:System.Windows.Input.RoutedCommand.Execute%2A> Methode ist ein Befehlsparameter.</span><span class="sxs-lookup"><span data-stu-id="6b478-387">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="6b478-388">Die meisten Befehle ignorieren Befehlsparameter. Dieser Parameter sollte im allgemeinen `null` für Bearbeitungsbefehle.</span><span class="sxs-lookup"><span data-stu-id="6b478-388">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="6b478-389">Das zweite Argument gibt das Objekt, an dem der Befehl weitergeleitet werden.</span><span class="sxs-lookup"><span data-stu-id="6b478-389">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="6b478-390">Dieses Objekt muss implementieren die <xref:System.Windows.IInputElement> Schnittstelle, und sollte einen Handler für den angegebenen Befehl einschließen.</span><span class="sxs-lookup"><span data-stu-id="6b478-390">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="6b478-391">Im Allgemeinen wird ein Befehl ignoriert, wenn für ein Objekt aufgerufen, die den Befehl nicht behandelt.</span><span class="sxs-lookup"><span data-stu-id="6b478-391">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveUpByPage" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveDownByLine" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveDownByParagraph" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectDownByPage" />
      </Docs>
    </Member>
    <Member MemberName="MoveDownByParagraph">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand MoveDownByParagraph { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand MoveDownByParagraph" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.MoveDownByParagraph" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property MoveDownByParagraph As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ MoveDownByParagraph { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MoveDownByParagraph : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.MoveDownByParagraph" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6b478-392">Stellt den <see cref="P:System.Windows.Documents.EditingCommands.MoveDownByParagraph" />-Befehl dar, mit dem angefordert wird, dass die Einfügemarke um einen Absatz nach unten verschoben wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b478-392">Represents the <see cref="P:System.Windows.Documents.EditingCommands.MoveDownByParagraph" /> command, which requests that the caret move down by one paragraph.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6b478-393">Der angeforderte Befehl.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b478-393">The requested command.</span>
          </span>
          <span data-ttu-id="6b478-394">Die standardmäßige Tastenkombination für diesen Befehl wird <see langword="Ctrl" /> + <see langword="Down" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b478-394">The default key gesture for this command is <see langword="Ctrl" />+<see langword="Down" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6b478-395">Mit diesem Befehl positioniert die Einfügemarke am Anfang des nächsten Absatzes an.</span><span class="sxs-lookup"><span data-stu-id="6b478-395">This command positions the caret at the beginning of the next paragraph.</span></span>  
  
 <span data-ttu-id="6b478-396">Dieser Befehl verhält sich wie <xref:System.Windows.Documents.EditingCommands.MoveToDocumentEnd%2A> beim Aufrufen einer <xref:System.Windows.Controls.TextBox>.</span><span class="sxs-lookup"><span data-stu-id="6b478-396">This command behaves like <xref:System.Windows.Documents.EditingCommands.MoveToDocumentEnd%2A> when invoked on a <xref:System.Windows.Controls.TextBox>.</span></span>  
  
 <span data-ttu-id="6b478-397">Es ist nicht notwendigerweise eine tatsächliche Implementierung, die für diesen Befehl für ein angegebenes Objekt reagiert. in vielen Fällen ist die Implementierung, die an einen Befehl antwortet der Verantwortung des Anwendungs-Writer.</span><span class="sxs-lookup"><span data-stu-id="6b478-397">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="6b478-398">Mit diesem Befehl wird eine systemeigene Unterstützung durch <xref:System.Windows.Controls.RichTextBox> und <xref:System.Windows.Controls.TextBox>.</span><span class="sxs-lookup"><span data-stu-id="6b478-398">This command is natively supported by <xref:System.Windows.Controls.RichTextBox> and <xref:System.Windows.Controls.TextBox>.</span></span>  
  
<a name="xamlAttributeUsage_MoveDownByParagraph"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="6b478-399">Verwendung von XAML-Attributen</span><span class="sxs-lookup"><span data-stu-id="6b478-399">XAML Attribute Usage</span></span>  
  
```  
<object property="MoveDownByParagraph"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="6b478-400">Im folgenden Beispiel wird veranschaulicht, wie auf einen Befehl für ein Objekt aufrufen, die der Befehl unterstützt wird.</span><span class="sxs-lookup"><span data-stu-id="6b478-400">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="6b478-401">In diesem Beispiel eine <xref:System.Windows.Controls.RichTextBox> dient als das Befehlsziel.</span><span class="sxs-lookup"><span data-stu-id="6b478-401">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="6b478-402">Beachten Sie, dass <xref:System.Windows.Controls.RichTextBox> implementiert die <xref:System.Windows.IInputElement> Schnittstelle (geerbt von <xref:System.Windows.FrameworkElement>), und bietet systemeigene Unterstützung für viele Bearbeitungsbefehle.</span><span class="sxs-lookup"><span data-stu-id="6b478-402">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="6b478-403">Das erste Argument für die <xref:System.Windows.Input.RoutedCommand.Execute%2A> Methode ist ein Befehlsparameter.</span><span class="sxs-lookup"><span data-stu-id="6b478-403">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="6b478-404">Die meisten Befehle ignorieren Befehlsparameter. Dieser Parameter sollte im allgemeinen `null` für Bearbeitungsbefehle.</span><span class="sxs-lookup"><span data-stu-id="6b478-404">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="6b478-405">Das zweite Argument gibt das Objekt, an dem der Befehl weitergeleitet werden.</span><span class="sxs-lookup"><span data-stu-id="6b478-405">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="6b478-406">Dieses Objekt muss implementieren die <xref:System.Windows.IInputElement> Schnittstelle, und sollte einen Handler für den angegebenen Befehl einschließen.</span><span class="sxs-lookup"><span data-stu-id="6b478-406">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="6b478-407">Im Allgemeinen wird ein Befehl ignoriert, wenn für ein Objekt aufgerufen, die den Befehl nicht behandelt.</span><span class="sxs-lookup"><span data-stu-id="6b478-407">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveUpByParagraph" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveDownByLine" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveDownByPage" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectDownByParagraph" />
      </Docs>
    </Member>
    <Member MemberName="MoveLeftByCharacter">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand MoveLeftByCharacter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand MoveLeftByCharacter" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.MoveLeftByCharacter" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property MoveLeftByCharacter As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ MoveLeftByCharacter { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MoveLeftByCharacter : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.MoveLeftByCharacter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6b478-408">Stellt den <see cref="P:System.Windows.Documents.EditingCommands.MoveLeftByCharacter" />-Befehl dar, mit dem angefordert wird, dass die Einfügemarke um ein Zeichen nach links verschoben wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b478-408">Represents the <see cref="P:System.Windows.Documents.EditingCommands.MoveLeftByCharacter" /> command, which requests that the caret move one character left.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6b478-409">Der angeforderte Befehl.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b478-409">The requested command.</span>
          </span>
          <span data-ttu-id="6b478-410">Die Standardtastenkombination für diesen Befehl ist <see langword="Left" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b478-410">The default key gesture for this command is <see langword="Left" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6b478-411">Es ist nicht notwendigerweise eine tatsächliche Implementierung, die für diesen Befehl für ein angegebenes Objekt reagiert. in vielen Fällen ist die Implementierung, die an einen Befehl antwortet der Verantwortung des Anwendungs-Writer.</span><span class="sxs-lookup"><span data-stu-id="6b478-411">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="6b478-412">Mit diesem Befehl wird eine systemeigene Unterstützung durch <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, und <xref:System.Windows.Controls.PasswordBox>.</span><span class="sxs-lookup"><span data-stu-id="6b478-412">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_MoveLeftByCharacter"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="6b478-413">Verwendung von XAML-Attributen</span><span class="sxs-lookup"><span data-stu-id="6b478-413">XAML Attribute Usage</span></span>  
  
```  
<object property="MoveLeftByCharacter"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="6b478-414">Im folgenden Beispiel wird veranschaulicht, wie auf einen Befehl für ein Objekt aufrufen, die der Befehl unterstützt wird.</span><span class="sxs-lookup"><span data-stu-id="6b478-414">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="6b478-415">In diesem Beispiel eine <xref:System.Windows.Controls.RichTextBox> dient als das Befehlsziel.</span><span class="sxs-lookup"><span data-stu-id="6b478-415">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="6b478-416">Beachten Sie, dass <xref:System.Windows.Controls.RichTextBox> implementiert die <xref:System.Windows.IInputElement> Schnittstelle (geerbt von <xref:System.Windows.FrameworkElement>), und bietet systemeigene Unterstützung für viele Bearbeitungsbefehle.</span><span class="sxs-lookup"><span data-stu-id="6b478-416">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="6b478-417">Das erste Argument für die <xref:System.Windows.Input.RoutedCommand.Execute%2A> Methode ist ein Befehlsparameter.</span><span class="sxs-lookup"><span data-stu-id="6b478-417">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="6b478-418">Die meisten Befehle ignorieren Befehlsparameter. Dieser Parameter sollte im allgemeinen `null` für Bearbeitungsbefehle.</span><span class="sxs-lookup"><span data-stu-id="6b478-418">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="6b478-419">Das zweite Argument gibt das Objekt, an dem der Befehl weitergeleitet werden.</span><span class="sxs-lookup"><span data-stu-id="6b478-419">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="6b478-420">Dieses Objekt muss implementieren die <xref:System.Windows.IInputElement> Schnittstelle, und sollte einen Handler für den angegebenen Befehl einschließen.</span><span class="sxs-lookup"><span data-stu-id="6b478-420">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="6b478-421">Im Allgemeinen wird ein Befehl ignoriert, wenn für ein Objekt aufgerufen, die den Befehl nicht behandelt.</span><span class="sxs-lookup"><span data-stu-id="6b478-421">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveRightByCharacter" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveLeftByWord" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectLeftByCharacter" />
      </Docs>
    </Member>
    <Member MemberName="MoveLeftByWord">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand MoveLeftByWord { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand MoveLeftByWord" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.MoveLeftByWord" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property MoveLeftByWord As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ MoveLeftByWord { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MoveLeftByWord : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.MoveLeftByWord" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6b478-422">Stellt den <see cref="P:System.Windows.Documents.EditingCommands.MoveLeftByWord" />-Befehl dar, mit dem angefordert wird, dass die Einfügemarke um ein Wort nach links verschoben wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b478-422">Represents the <see cref="P:System.Windows.Documents.EditingCommands.MoveLeftByWord" /> command, which requests that the caret move one word left.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6b478-423">Der angeforderte Befehl.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b478-423">The requested command.</span>
          </span>
          <span data-ttu-id="6b478-424">Die standardmäßige Tastenkombination für diesen Befehl wird <see langword="Ctrl" /> + <see langword="Left" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b478-424">The default key gesture for this command is <see langword="Ctrl" />+<see langword="Left" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6b478-425">Wenn die Einfügemarke innerhalb eines Worts ist, verschiebt mit diesem Befehl die Einfügemarke an den Anfang des Begriffs an.</span><span class="sxs-lookup"><span data-stu-id="6b478-425">If the caret is within a word, this command moves the caret to the beginning of that word.</span></span>  <span data-ttu-id="6b478-426">Andernfalls: mit diesem Befehl verschiebt die Einfügemarke an den Anfang des vorherigen Worts.</span><span class="sxs-lookup"><span data-stu-id="6b478-426">Otherwise, this command moves the caret to the beginning of the previous word.</span></span>  
  
 <span data-ttu-id="6b478-427">Es ist nicht notwendigerweise eine tatsächliche Implementierung, die für diesen Befehl für ein angegebenes Objekt reagiert. in vielen Fällen ist die Implementierung, die an einen Befehl antwortet der Verantwortung des Anwendungs-Writer.</span><span class="sxs-lookup"><span data-stu-id="6b478-427">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="6b478-428">Mit diesem Befehl wird eine systemeigene Unterstützung durch <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, und <xref:System.Windows.Controls.PasswordBox>.</span><span class="sxs-lookup"><span data-stu-id="6b478-428">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_MoveLeftByWord"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="6b478-429">Verwendung von XAML-Attributen</span><span class="sxs-lookup"><span data-stu-id="6b478-429">XAML Attribute Usage</span></span>  
  
```  
<object property="MoveLeftByWord"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="6b478-430">Im folgenden Beispiel wird veranschaulicht, wie auf einen Befehl für ein Objekt aufrufen, die der Befehl unterstützt wird.</span><span class="sxs-lookup"><span data-stu-id="6b478-430">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="6b478-431">In diesem Beispiel eine <xref:System.Windows.Controls.RichTextBox> dient als das Befehlsziel.</span><span class="sxs-lookup"><span data-stu-id="6b478-431">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="6b478-432">Beachten Sie, dass <xref:System.Windows.Controls.RichTextBox> implementiert die <xref:System.Windows.IInputElement> Schnittstelle (geerbt von <xref:System.Windows.FrameworkElement>), und bietet systemeigene Unterstützung für viele Bearbeitungsbefehle.</span><span class="sxs-lookup"><span data-stu-id="6b478-432">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="6b478-433">Das erste Argument für die <xref:System.Windows.Input.RoutedCommand.Execute%2A> Methode ist ein Befehlsparameter.</span><span class="sxs-lookup"><span data-stu-id="6b478-433">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="6b478-434">Die meisten Befehle ignorieren Befehlsparameter. Dieser Parameter sollte im allgemeinen `null` für Bearbeitungsbefehle.</span><span class="sxs-lookup"><span data-stu-id="6b478-434">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="6b478-435">Das zweite Argument gibt das Objekt, an dem der Befehl weitergeleitet werden.</span><span class="sxs-lookup"><span data-stu-id="6b478-435">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="6b478-436">Dieses Objekt muss implementieren die <xref:System.Windows.IInputElement> Schnittstelle, und sollte einen Handler für den angegebenen Befehl einschließen.</span><span class="sxs-lookup"><span data-stu-id="6b478-436">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="6b478-437">Im Allgemeinen wird ein Befehl ignoriert, wenn für ein Objekt aufgerufen, die den Befehl nicht behandelt.</span><span class="sxs-lookup"><span data-stu-id="6b478-437">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveRightByWord" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveLeftByCharacter" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectLeftByWord" />
      </Docs>
    </Member>
    <Member MemberName="MoveRightByCharacter">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand MoveRightByCharacter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand MoveRightByCharacter" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.MoveRightByCharacter" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property MoveRightByCharacter As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ MoveRightByCharacter { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MoveRightByCharacter : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.MoveRightByCharacter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6b478-438">Stellt den <see cref="P:System.Windows.Documents.EditingCommands.MoveRightByCharacter" />-Befehl dar, mit dem angefordert wird, dass die Einfügemarke um ein Zeichen nach rechts verschoben wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b478-438">Represents the <see cref="P:System.Windows.Documents.EditingCommands.MoveRightByCharacter" /> command, which requests that the caret move one character right.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6b478-439">Der angeforderte Befehl.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b478-439">The requested command.</span>
          </span>
          <span data-ttu-id="6b478-440">Die Standardtastenkombination für diesen Befehl ist <see langword="Right" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b478-440">The default key gesture for this command is <see langword="Right" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6b478-441">Es ist nicht notwendigerweise eine tatsächliche Implementierung, die für diesen Befehl für ein angegebenes Objekt reagiert. in vielen Fällen ist die Implementierung, die an einen Befehl antwortet der Verantwortung des Anwendungs-Writer.</span><span class="sxs-lookup"><span data-stu-id="6b478-441">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="6b478-442">Mit diesem Befehl wird eine systemeigene Unterstützung durch <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, und <xref:System.Windows.Controls.PasswordBox>.</span><span class="sxs-lookup"><span data-stu-id="6b478-442">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_MoveRightByCharacter"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="6b478-443">Verwendung von XAML-Attributen</span><span class="sxs-lookup"><span data-stu-id="6b478-443">XAML Attribute Usage</span></span>  
  
```  
<object property="MoveRightByCharacter"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="6b478-444">Im folgenden Beispiel wird veranschaulicht, wie auf einen Befehl für ein Objekt aufrufen, die der Befehl unterstützt wird.</span><span class="sxs-lookup"><span data-stu-id="6b478-444">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="6b478-445">In diesem Beispiel eine <xref:System.Windows.Controls.RichTextBox> dient als das Befehlsziel.</span><span class="sxs-lookup"><span data-stu-id="6b478-445">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="6b478-446">Beachten Sie, dass <xref:System.Windows.Controls.RichTextBox> implementiert die <xref:System.Windows.IInputElement> Schnittstelle (geerbt von <xref:System.Windows.FrameworkElement>), und bietet systemeigene Unterstützung für viele Bearbeitungsbefehle.</span><span class="sxs-lookup"><span data-stu-id="6b478-446">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="6b478-447">Das erste Argument für die <xref:System.Windows.Input.RoutedCommand.Execute%2A> Methode ist ein Befehlsparameter.</span><span class="sxs-lookup"><span data-stu-id="6b478-447">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="6b478-448">Die meisten Befehle ignorieren Befehlsparameter. Dieser Parameter sollte im allgemeinen `null` für Bearbeitungsbefehle.</span><span class="sxs-lookup"><span data-stu-id="6b478-448">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="6b478-449">Das zweite Argument gibt das Objekt, an dem der Befehl weitergeleitet werden.</span><span class="sxs-lookup"><span data-stu-id="6b478-449">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="6b478-450">Dieses Objekt muss implementieren die <xref:System.Windows.IInputElement> Schnittstelle, und sollte einen Handler für den angegebenen Befehl einschließen.</span><span class="sxs-lookup"><span data-stu-id="6b478-450">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="6b478-451">Im Allgemeinen wird ein Befehl ignoriert, wenn für ein Objekt aufgerufen, die den Befehl nicht behandelt.</span><span class="sxs-lookup"><span data-stu-id="6b478-451">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveLeftByCharacter" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveRightByWord" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectRightByCharacter" />
      </Docs>
    </Member>
    <Member MemberName="MoveRightByWord">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand MoveRightByWord { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand MoveRightByWord" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.MoveRightByWord" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property MoveRightByWord As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ MoveRightByWord { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MoveRightByWord : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.MoveRightByWord" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6b478-452">Stellt den <see cref="P:System.Windows.Documents.EditingCommands.MoveRightByWord" />-Befehl dar, mit dem angefordert wird, dass die Einfügemarke um ein Wort nach rechts verschoben wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b478-452">Represents the <see cref="P:System.Windows.Documents.EditingCommands.MoveRightByWord" /> command, which requests that the caret move right by one word.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6b478-453">Der angeforderte Befehl.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b478-453">The requested command.</span>
          </span>
          <span data-ttu-id="6b478-454">Die standardmäßige Tastenkombination für diesen Befehl wird <see langword="Ctrl" /> + <see langword="Right" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b478-454">The default key gesture for this command is <see langword="Ctrl" />+<see langword="Right" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6b478-455">Wenn die Einfügemarke innerhalb eines Worts ist, verschiebt mit diesem Befehl die Einfügemarke bis zum Ende des Worts an.</span><span class="sxs-lookup"><span data-stu-id="6b478-455">If the caret is within a word, this command moves the caret to the end of that word.</span></span>  <span data-ttu-id="6b478-456">Andernfalls: mit diesem Befehl verschiebt die Einfügemarke an den Anfang des nächsten Worts.</span><span class="sxs-lookup"><span data-stu-id="6b478-456">Otherwise, this command moves the caret to the beginning of the next word.</span></span>  
  
 <span data-ttu-id="6b478-457">Es ist nicht notwendigerweise eine tatsächliche Implementierung, die für diesen Befehl für ein angegebenes Objekt reagiert. in vielen Fällen ist die Implementierung, die an einen Befehl antwortet der Verantwortung des Anwendungs-Writer.</span><span class="sxs-lookup"><span data-stu-id="6b478-457">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="6b478-458">Mit diesem Befehl wird eine systemeigene Unterstützung durch <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, und <xref:System.Windows.Controls.PasswordBox>.</span><span class="sxs-lookup"><span data-stu-id="6b478-458">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_MoveRightByWord"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="6b478-459">Verwendung von XAML-Attributen</span><span class="sxs-lookup"><span data-stu-id="6b478-459">XAML Attribute Usage</span></span>  
  
```  
<object property="MoveRightByWord"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="6b478-460">Im folgenden Beispiel wird veranschaulicht, wie auf einen Befehl für ein Objekt aufrufen, die der Befehl unterstützt wird.</span><span class="sxs-lookup"><span data-stu-id="6b478-460">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="6b478-461">In diesem Beispiel eine <xref:System.Windows.Controls.RichTextBox> dient als das Befehlsziel.</span><span class="sxs-lookup"><span data-stu-id="6b478-461">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="6b478-462">Beachten Sie, dass <xref:System.Windows.Controls.RichTextBox> implementiert die <xref:System.Windows.IInputElement> Schnittstelle (geerbt von <xref:System.Windows.FrameworkElement>), und bietet systemeigene Unterstützung für viele Bearbeitungsbefehle.</span><span class="sxs-lookup"><span data-stu-id="6b478-462">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="6b478-463">Das erste Argument für die <xref:System.Windows.Input.RoutedCommand.Execute%2A> Methode ist ein Befehlsparameter.</span><span class="sxs-lookup"><span data-stu-id="6b478-463">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="6b478-464">Die meisten Befehle ignorieren Befehlsparameter. Dieser Parameter sollte im allgemeinen `null` für Bearbeitungsbefehle.</span><span class="sxs-lookup"><span data-stu-id="6b478-464">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="6b478-465">Das zweite Argument gibt das Objekt, an dem der Befehl weitergeleitet werden.</span><span class="sxs-lookup"><span data-stu-id="6b478-465">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="6b478-466">Dieses Objekt muss implementieren die <xref:System.Windows.IInputElement> Schnittstelle, und sollte einen Handler für den angegebenen Befehl einschließen.</span><span class="sxs-lookup"><span data-stu-id="6b478-466">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="6b478-467">Im Allgemeinen wird ein Befehl ignoriert, wenn für ein Objekt aufgerufen, die den Befehl nicht behandelt.</span><span class="sxs-lookup"><span data-stu-id="6b478-467">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveLeftByWord" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveRightByCharacter" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectRightByWord" />
      </Docs>
    </Member>
    <Member MemberName="MoveToDocumentEnd">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand MoveToDocumentEnd { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand MoveToDocumentEnd" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.MoveToDocumentEnd" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property MoveToDocumentEnd As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ MoveToDocumentEnd { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MoveToDocumentEnd : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.MoveToDocumentEnd" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6b478-468">Stellt den <see cref="P:System.Windows.Documents.EditingCommands.MoveToDocumentEnd" />-Befehl dar, mit dem angefordert wird, dass die Einfügemarke an das Ende des Inhalts verschoben wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b478-468">Represents the <see cref="P:System.Windows.Documents.EditingCommands.MoveToDocumentEnd" /> command, which requests that the caret move to the very end of content.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6b478-469">Der angeforderte Befehl.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b478-469">The requested command.</span>
          </span>
          <span data-ttu-id="6b478-470">Die standardmäßige Tastenkombination für diesen Befehl wird <see langword="Ctrl" /> + <see langword="End" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b478-470">The default key gesture for this command is <see langword="Ctrl" />+<see langword="End" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6b478-471">Ein *Textcontainer* ist das Element, das den äußeren Rahmen für den Inhalt zur hand bildet.</span><span class="sxs-lookup"><span data-stu-id="6b478-471">A *text container* is the element that forms the ultimate border for the content at hand.</span></span>  <span data-ttu-id="6b478-472"><xref:System.Windows.Controls.TextBlock> und <xref:System.Windows.Documents.FlowDocument> sind Beispiele für Textcontainer.</span><span class="sxs-lookup"><span data-stu-id="6b478-472"><xref:System.Windows.Controls.TextBlock> and <xref:System.Windows.Documents.FlowDocument> are examples of text containers.</span></span>  <span data-ttu-id="6b478-473">Der Inhalt zusammen in einem Textcontainer wird als bezeichnet eine *Dokument*.</span><span class="sxs-lookup"><span data-stu-id="6b478-473">The content collectively contained within a text container is referred to as a *document*.</span></span>  
  
 <span data-ttu-id="6b478-474">Es ist nicht notwendigerweise eine tatsächliche Implementierung, die für diesen Befehl für ein angegebenes Objekt reagiert. in vielen Fällen ist die Implementierung, die an einen Befehl antwortet der Verantwortung des Anwendungs-Writer.</span><span class="sxs-lookup"><span data-stu-id="6b478-474">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="6b478-475">Mit diesem Befehl wird eine systemeigene Unterstützung durch <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, und <xref:System.Windows.Controls.PasswordBox>.</span><span class="sxs-lookup"><span data-stu-id="6b478-475">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_MoveToDocumentEnd"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="6b478-476">Verwendung von XAML-Attributen</span><span class="sxs-lookup"><span data-stu-id="6b478-476">XAML Attribute Usage</span></span>  
  
```  
<object property="MoveToDocumentEnd"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="6b478-477">Im folgenden Beispiel wird veranschaulicht, wie auf einen Befehl für ein Objekt aufrufen, die der Befehl unterstützt wird.</span><span class="sxs-lookup"><span data-stu-id="6b478-477">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="6b478-478">In diesem Beispiel eine <xref:System.Windows.Controls.RichTextBox> dient als das Befehlsziel.</span><span class="sxs-lookup"><span data-stu-id="6b478-478">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="6b478-479">Beachten Sie, dass <xref:System.Windows.Controls.RichTextBox> implementiert die <xref:System.Windows.IInputElement> Schnittstelle (geerbt von <xref:System.Windows.FrameworkElement>), und bietet systemeigene Unterstützung für viele Bearbeitungsbefehle.</span><span class="sxs-lookup"><span data-stu-id="6b478-479">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="6b478-480">Das erste Argument für die <xref:System.Windows.Input.RoutedCommand.Execute%2A> Methode ist ein Befehlsparameter.</span><span class="sxs-lookup"><span data-stu-id="6b478-480">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="6b478-481">Die meisten Befehle ignorieren Befehlsparameter. Dieser Parameter sollte im allgemeinen `null` für Bearbeitungsbefehle.</span><span class="sxs-lookup"><span data-stu-id="6b478-481">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="6b478-482">Das zweite Argument gibt das Objekt, an dem der Befehl weitergeleitet werden.</span><span class="sxs-lookup"><span data-stu-id="6b478-482">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="6b478-483">Dieses Objekt muss implementieren die <xref:System.Windows.IInputElement> Schnittstelle, und sollte einen Handler für den angegebenen Befehl einschließen.</span><span class="sxs-lookup"><span data-stu-id="6b478-483">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="6b478-484">Im Allgemeinen wird ein Befehl ignoriert, wenn für ein Objekt aufgerufen, die den Befehl nicht behandelt.</span><span class="sxs-lookup"><span data-stu-id="6b478-484">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectToDocumentStart" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectToDocumentEnd" />
      </Docs>
    </Member>
    <Member MemberName="MoveToDocumentStart">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand MoveToDocumentStart { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand MoveToDocumentStart" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.MoveToDocumentStart" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property MoveToDocumentStart As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ MoveToDocumentStart { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MoveToDocumentStart : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.MoveToDocumentStart" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6b478-485">Stellt den <see cref="P:System.Windows.Documents.EditingCommands.MoveToDocumentStart" />-Befehl dar, mit dem angefordert wird, dass die Einfügemarke an den Anfang des Inhalts verschoben wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b478-485">Represents the <see cref="P:System.Windows.Documents.EditingCommands.MoveToDocumentStart" /> command, which requests that the caret move to the very beginning of content.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6b478-486">Der angeforderte Befehl.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b478-486">The requested command.</span>
          </span>
          <span data-ttu-id="6b478-487">Die standardmäßige Tastenkombination für diesen Befehl wird <see langword="Ctrl" /> + <see langword="Home" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b478-487">The default key gesture for this command is <see langword="Ctrl" />+<see langword="Home" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6b478-488">Ein *Textcontainer* ist das Element, das den äußeren Rahmen für den Inhalt zur hand bildet.</span><span class="sxs-lookup"><span data-stu-id="6b478-488">A *text container* is the element that forms the ultimate border for the content at hand.</span></span>  <span data-ttu-id="6b478-489"><xref:System.Windows.Controls.TextBlock> und <xref:System.Windows.Documents.FlowDocument> sind Beispiele für Textcontainer.</span><span class="sxs-lookup"><span data-stu-id="6b478-489"><xref:System.Windows.Controls.TextBlock> and <xref:System.Windows.Documents.FlowDocument> are examples of text containers.</span></span>  <span data-ttu-id="6b478-490">Der Inhalt zusammen in einem Textcontainer wird als bezeichnet eine *Dokument*.</span><span class="sxs-lookup"><span data-stu-id="6b478-490">The content collectively contained within a text container is referred to as a *document*.</span></span>  
  
 <span data-ttu-id="6b478-491">Es ist nicht notwendigerweise eine tatsächliche Implementierung, die für diesen Befehl für ein angegebenes Objekt reagiert. in vielen Fällen ist die Implementierung, die an einen Befehl antwortet der Verantwortung des Anwendungs-Writer.</span><span class="sxs-lookup"><span data-stu-id="6b478-491">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="6b478-492">Mit diesem Befehl wird eine systemeigene Unterstützung durch <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, und <xref:System.Windows.Controls.PasswordBox>.</span><span class="sxs-lookup"><span data-stu-id="6b478-492">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_MoveToDocumentStart"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="6b478-493">Verwendung von XAML-Attributen</span><span class="sxs-lookup"><span data-stu-id="6b478-493">XAML Attribute Usage</span></span>  
  
```  
<object property="MoveToDocumentStart"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="6b478-494">Im folgenden Beispiel wird veranschaulicht, wie auf einen Befehl für ein Objekt aufrufen, die der Befehl unterstützt wird.</span><span class="sxs-lookup"><span data-stu-id="6b478-494">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="6b478-495">In diesem Beispiel eine <xref:System.Windows.Controls.RichTextBox> dient als das Befehlsziel.</span><span class="sxs-lookup"><span data-stu-id="6b478-495">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="6b478-496">Beachten Sie, dass <xref:System.Windows.Controls.RichTextBox> implementiert die <xref:System.Windows.IInputElement> Schnittstelle (geerbt von <xref:System.Windows.FrameworkElement>), und bietet systemeigene Unterstützung für viele Bearbeitungsbefehle.</span><span class="sxs-lookup"><span data-stu-id="6b478-496">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="6b478-497">Das erste Argument für die <xref:System.Windows.Input.RoutedCommand.Execute%2A> Methode ist ein Befehlsparameter.</span><span class="sxs-lookup"><span data-stu-id="6b478-497">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="6b478-498">Die meisten Befehle ignorieren Befehlsparameter. Dieser Parameter sollte im allgemeinen `null` für Bearbeitungsbefehle.</span><span class="sxs-lookup"><span data-stu-id="6b478-498">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="6b478-499">Das zweite Argument gibt das Objekt, an dem der Befehl weitergeleitet werden.</span><span class="sxs-lookup"><span data-stu-id="6b478-499">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="6b478-500">Dieses Objekt muss implementieren die <xref:System.Windows.IInputElement> Schnittstelle, und sollte einen Handler für den angegebenen Befehl einschließen.</span><span class="sxs-lookup"><span data-stu-id="6b478-500">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="6b478-501">Im Allgemeinen wird ein Befehl ignoriert, wenn für ein Objekt aufgerufen, die den Befehl nicht behandelt.</span><span class="sxs-lookup"><span data-stu-id="6b478-501">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveToDocumentEnd" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectToDocumentStart" />
      </Docs>
    </Member>
    <Member MemberName="MoveToLineEnd">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand MoveToLineEnd { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand MoveToLineEnd" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.MoveToLineEnd" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property MoveToLineEnd As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ MoveToLineEnd { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MoveToLineEnd : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.MoveToLineEnd" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6b478-502">Stellt den <see cref="P:System.Windows.Documents.EditingCommands.MoveToLineEnd" />-Befehl dar, mit dem angefordert wird, dass die Einfügemarke an das Ende der aktuellen Zeile verschoben wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b478-502">Represents the <see cref="P:System.Windows.Documents.EditingCommands.MoveToLineEnd" /> command, which requests that the caret move to the end of the current line.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6b478-503">Der angeforderte Befehl.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b478-503">The requested command.</span>
          </span>
          <span data-ttu-id="6b478-504">Die Standardtastenkombination für diesen Befehl ist <see langword="End" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b478-504">The default key gesture for this command is <see langword="End" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6b478-505">Es ist nicht notwendigerweise eine tatsächliche Implementierung, die für diesen Befehl für ein angegebenes Objekt reagiert. in vielen Fällen ist die Implementierung, die an einen Befehl antwortet der Verantwortung des Anwendungs-Writer.</span><span class="sxs-lookup"><span data-stu-id="6b478-505">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="6b478-506">Mit diesem Befehl wird eine systemeigene Unterstützung durch <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, und <xref:System.Windows.Controls.PasswordBox>.</span><span class="sxs-lookup"><span data-stu-id="6b478-506">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_MoveToLineEnd"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="6b478-507">Verwendung von XAML-Attributen</span><span class="sxs-lookup"><span data-stu-id="6b478-507">XAML Attribute Usage</span></span>  
  
```  
<object property="MoveToLineEnd"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="6b478-508">Im folgenden Beispiel wird veranschaulicht, wie auf einen Befehl für ein Objekt aufrufen, die der Befehl unterstützt wird.</span><span class="sxs-lookup"><span data-stu-id="6b478-508">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="6b478-509">In diesem Beispiel eine <xref:System.Windows.Controls.RichTextBox> dient als das Befehlsziel.</span><span class="sxs-lookup"><span data-stu-id="6b478-509">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="6b478-510">Beachten Sie, dass <xref:System.Windows.Controls.RichTextBox> implementiert die <xref:System.Windows.IInputElement> Schnittstelle (geerbt von <xref:System.Windows.FrameworkElement>), und bietet systemeigene Unterstützung für viele Bearbeitungsbefehle.</span><span class="sxs-lookup"><span data-stu-id="6b478-510">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="6b478-511">Das erste Argument für die <xref:System.Windows.Input.RoutedCommand.Execute%2A> Methode ist ein Befehlsparameter.</span><span class="sxs-lookup"><span data-stu-id="6b478-511">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="6b478-512">Die meisten Befehle ignorieren Befehlsparameter. Dieser Parameter sollte im allgemeinen `null` für Bearbeitungsbefehle.</span><span class="sxs-lookup"><span data-stu-id="6b478-512">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="6b478-513">Das zweite Argument gibt das Objekt, an dem der Befehl weitergeleitet werden.</span><span class="sxs-lookup"><span data-stu-id="6b478-513">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="6b478-514">Dieses Objekt muss implementieren die <xref:System.Windows.IInputElement> Schnittstelle, und sollte einen Handler für den angegebenen Befehl einschließen.</span><span class="sxs-lookup"><span data-stu-id="6b478-514">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="6b478-515">Im Allgemeinen wird ein Befehl ignoriert, wenn für ein Objekt aufgerufen, die den Befehl nicht behandelt.</span><span class="sxs-lookup"><span data-stu-id="6b478-515">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveToLineStart" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectToLineEnd" />
      </Docs>
    </Member>
    <Member MemberName="MoveToLineStart">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand MoveToLineStart { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand MoveToLineStart" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.MoveToLineStart" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property MoveToLineStart As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ MoveToLineStart { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MoveToLineStart : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.MoveToLineStart" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6b478-516">Stellt den <see cref="P:System.Windows.Documents.EditingCommands.MoveToLineStart" />-Befehl dar, mit dem angefordert wird, dass die Einfügemarke an den Anfang der aktuellen Zeile verschoben wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b478-516">Represents the <see cref="P:System.Windows.Documents.EditingCommands.MoveToLineStart" /> command, which requests that the caret move to the beginning of the current line.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6b478-517">Der angeforderte Befehl.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b478-517">The requested command.</span>
          </span>
          <span data-ttu-id="6b478-518">Die Standardtastenkombination für diesen Befehl ist <see langword="Home" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b478-518">The default key gesture for this command is <see langword="Home" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6b478-519">Es ist nicht notwendigerweise eine tatsächliche Implementierung, die für diesen Befehl für ein angegebenes Objekt reagiert. in vielen Fällen ist die Implementierung, die an einen Befehl antwortet der Verantwortung des Anwendungs-Writer.</span><span class="sxs-lookup"><span data-stu-id="6b478-519">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="6b478-520">Mit diesem Befehl wird eine systemeigene Unterstützung durch <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, und <xref:System.Windows.Controls.PasswordBox>.</span><span class="sxs-lookup"><span data-stu-id="6b478-520">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_MoveToLineStart"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="6b478-521">Verwendung von XAML-Attributen</span><span class="sxs-lookup"><span data-stu-id="6b478-521">XAML Attribute Usage</span></span>  
  
```  
<object property="MoveToLineStart"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="6b478-522">Im folgenden Beispiel wird veranschaulicht, wie auf einen Befehl für ein Objekt aufrufen, die der Befehl unterstützt wird.</span><span class="sxs-lookup"><span data-stu-id="6b478-522">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="6b478-523">In diesem Beispiel eine <xref:System.Windows.Controls.RichTextBox> dient als das Befehlsziel.</span><span class="sxs-lookup"><span data-stu-id="6b478-523">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="6b478-524">Beachten Sie, dass <xref:System.Windows.Controls.RichTextBox> implementiert die <xref:System.Windows.IInputElement> Schnittstelle (geerbt von <xref:System.Windows.FrameworkElement>), und bietet systemeigene Unterstützung für viele Bearbeitungsbefehle.</span><span class="sxs-lookup"><span data-stu-id="6b478-524">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="6b478-525">Das erste Argument für die <xref:System.Windows.Input.RoutedCommand.Execute%2A> Methode ist ein Befehlsparameter.</span><span class="sxs-lookup"><span data-stu-id="6b478-525">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="6b478-526">Die meisten Befehle ignorieren Befehlsparameter. Dieser Parameter sollte im allgemeinen `null` für Bearbeitungsbefehle.</span><span class="sxs-lookup"><span data-stu-id="6b478-526">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="6b478-527">Das zweite Argument gibt das Objekt, an dem der Befehl weitergeleitet werden.</span><span class="sxs-lookup"><span data-stu-id="6b478-527">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="6b478-528">Dieses Objekt muss implementieren die <xref:System.Windows.IInputElement> Schnittstelle, und sollte einen Handler für den angegebenen Befehl einschließen.</span><span class="sxs-lookup"><span data-stu-id="6b478-528">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="6b478-529">Im Allgemeinen wird ein Befehl ignoriert, wenn für ein Objekt aufgerufen, die den Befehl nicht behandelt.</span><span class="sxs-lookup"><span data-stu-id="6b478-529">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveToLineEnd" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectToLineEnd" />
      </Docs>
    </Member>
    <Member MemberName="MoveUpByLine">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand MoveUpByLine { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand MoveUpByLine" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.MoveUpByLine" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property MoveUpByLine As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ MoveUpByLine { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MoveUpByLine : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.MoveUpByLine" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6b478-530">Stellt den <see cref="P:System.Windows.Documents.EditingCommands.MoveUpByLine" />-Befehl dar, mit dem angefordert wird, dass die Einfügemarke um eine Zeile nach oben verschoben wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b478-530">Represents the <see cref="P:System.Windows.Documents.EditingCommands.MoveUpByLine" /> command, which requests that the caret move up by one line.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6b478-531">Der angeforderte Befehl.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b478-531">The requested command.</span>
          </span>
          <span data-ttu-id="6b478-532">Die Standardtastenkombination für diesen Befehl ist <see langword="Up" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b478-532">The default key gesture for this command is <see langword="Up" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6b478-533">Es ist nicht notwendigerweise eine tatsächliche Implementierung, die für diesen Befehl für ein angegebenes Objekt reagiert. in vielen Fällen ist die Implementierung, die an einen Befehl antwortet der Verantwortung des Anwendungs-Writer.</span><span class="sxs-lookup"><span data-stu-id="6b478-533">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="6b478-534">Mit diesem Befehl wird eine systemeigene Unterstützung durch <xref:System.Windows.Controls.RichTextBox> und <xref:System.Windows.Controls.TextBox>.</span><span class="sxs-lookup"><span data-stu-id="6b478-534">This command is natively supported by <xref:System.Windows.Controls.RichTextBox> and <xref:System.Windows.Controls.TextBox>.</span></span>  
  
<a name="xamlAttributeUsage_MoveUpByLine"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="6b478-535">Verwendung von XAML-Attributen</span><span class="sxs-lookup"><span data-stu-id="6b478-535">XAML Attribute Usage</span></span>  
  
```  
<object property="MoveUpByLine"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="6b478-536">Im folgenden Beispiel wird veranschaulicht, wie auf einen Befehl für ein Objekt aufrufen, die der Befehl unterstützt wird.</span><span class="sxs-lookup"><span data-stu-id="6b478-536">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="6b478-537">In diesem Beispiel eine <xref:System.Windows.Controls.RichTextBox> dient als das Befehlsziel.</span><span class="sxs-lookup"><span data-stu-id="6b478-537">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="6b478-538">Beachten Sie, dass <xref:System.Windows.Controls.RichTextBox> implementiert die <xref:System.Windows.IInputElement> Schnittstelle (geerbt von <xref:System.Windows.FrameworkElement>), und bietet systemeigene Unterstützung für viele Bearbeitungsbefehle.</span><span class="sxs-lookup"><span data-stu-id="6b478-538">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="6b478-539">Das erste Argument für die <xref:System.Windows.Input.RoutedCommand.Execute%2A> Methode ist ein Befehlsparameter.</span><span class="sxs-lookup"><span data-stu-id="6b478-539">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="6b478-540">Die meisten Befehle ignorieren Befehlsparameter. Dieser Parameter sollte im allgemeinen `null` für Bearbeitungsbefehle.</span><span class="sxs-lookup"><span data-stu-id="6b478-540">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="6b478-541">Das zweite Argument gibt das Objekt, an dem der Befehl weitergeleitet werden.</span><span class="sxs-lookup"><span data-stu-id="6b478-541">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="6b478-542">Dieses Objekt muss implementieren die <xref:System.Windows.IInputElement> Schnittstelle, und sollte einen Handler für den angegebenen Befehl einschließen.</span><span class="sxs-lookup"><span data-stu-id="6b478-542">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="6b478-543">Im Allgemeinen wird ein Befehl ignoriert, wenn für ein Objekt aufgerufen, die den Befehl nicht behandelt.</span><span class="sxs-lookup"><span data-stu-id="6b478-543">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveDownByLine" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveUpByPage" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveUpByParagraph" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectUpByLine" />
      </Docs>
    </Member>
    <Member MemberName="MoveUpByPage">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand MoveUpByPage { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand MoveUpByPage" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.MoveUpByPage" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property MoveUpByPage As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ MoveUpByPage { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MoveUpByPage : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.MoveUpByPage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6b478-544">Stellt den <see cref="P:System.Windows.Documents.EditingCommands.MoveUpByPage" />-Befehl dar, mit dem angefordert wird, dass die Einfügemarke um eine Seite nach oben verschoben wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b478-544">Represents the <see cref="P:System.Windows.Documents.EditingCommands.MoveUpByPage" /> command, which requests that the caret move up by one page.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6b478-545">Der angeforderte Befehl.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b478-545">The requested command.</span>
          </span>
          <span data-ttu-id="6b478-546">Die Standardtastenkombination für diesen Befehl ist <see langword="PageUp" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b478-546">The default key gesture for this command is <see langword="PageUp" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6b478-547">Es ist nicht notwendigerweise eine tatsächliche Implementierung, die für diesen Befehl für ein angegebenes Objekt reagiert. in vielen Fällen ist die Implementierung, die an einen Befehl antwortet der Verantwortung des Anwendungs-Writer.</span><span class="sxs-lookup"><span data-stu-id="6b478-547">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="6b478-548">Mit diesem Befehl wird eine systemeigene Unterstützung durch <xref:System.Windows.Controls.RichTextBox> und <xref:System.Windows.Controls.TextBox>.</span><span class="sxs-lookup"><span data-stu-id="6b478-548">This command is natively supported by <xref:System.Windows.Controls.RichTextBox> and <xref:System.Windows.Controls.TextBox>.</span></span>  
  
<a name="xamlAttributeUsage_MoveUpByPage"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="6b478-549">Verwendung von XAML-Attributen</span><span class="sxs-lookup"><span data-stu-id="6b478-549">XAML Attribute Usage</span></span>  
  
```  
<object property="MoveUpByPage"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="6b478-550">Im folgenden Beispiel wird veranschaulicht, wie auf einen Befehl für ein Objekt aufrufen, die der Befehl unterstützt wird.</span><span class="sxs-lookup"><span data-stu-id="6b478-550">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="6b478-551">In diesem Beispiel eine <xref:System.Windows.Controls.RichTextBox> dient als das Befehlsziel.</span><span class="sxs-lookup"><span data-stu-id="6b478-551">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="6b478-552">Beachten Sie, dass <xref:System.Windows.Controls.RichTextBox> implementiert die <xref:System.Windows.IInputElement> Schnittstelle (geerbt von <xref:System.Windows.FrameworkElement>), und bietet systemeigene Unterstützung für viele Bearbeitungsbefehle.</span><span class="sxs-lookup"><span data-stu-id="6b478-552">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="6b478-553">Das erste Argument für die <xref:System.Windows.Input.RoutedCommand.Execute%2A> Methode ist ein Befehlsparameter.</span><span class="sxs-lookup"><span data-stu-id="6b478-553">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="6b478-554">Die meisten Befehle ignorieren Befehlsparameter. Dieser Parameter sollte im allgemeinen `null` für Bearbeitungsbefehle.</span><span class="sxs-lookup"><span data-stu-id="6b478-554">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="6b478-555">Das zweite Argument gibt das Objekt, an dem der Befehl weitergeleitet werden.</span><span class="sxs-lookup"><span data-stu-id="6b478-555">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="6b478-556">Dieses Objekt muss implementieren die <xref:System.Windows.IInputElement> Schnittstelle, und sollte einen Handler für den angegebenen Befehl einschließen.</span><span class="sxs-lookup"><span data-stu-id="6b478-556">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="6b478-557">Im Allgemeinen wird ein Befehl ignoriert, wenn für ein Objekt aufgerufen, die den Befehl nicht behandelt.</span><span class="sxs-lookup"><span data-stu-id="6b478-557">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveDownByPage" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveUpByLine" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveUpByParagraph" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectUpByPage" />
      </Docs>
    </Member>
    <Member MemberName="MoveUpByParagraph">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand MoveUpByParagraph { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand MoveUpByParagraph" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.MoveUpByParagraph" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property MoveUpByParagraph As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ MoveUpByParagraph { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MoveUpByParagraph : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.MoveUpByParagraph" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6b478-558">Stellt den <see cref="P:System.Windows.Documents.EditingCommands.MoveUpByParagraph" />-Befehl dar, mit dem angefordert wird, dass die Einfügemarke um einen Absatz nach oben verschoben wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b478-558">Represents the <see cref="P:System.Windows.Documents.EditingCommands.MoveUpByParagraph" /> command, which requests that the caret move up by one paragraph.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6b478-559">Der angeforderte Befehl.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b478-559">The requested command.</span>
          </span>
          <span data-ttu-id="6b478-560">Die standardmäßige Tastenkombination für diesen Befehl wird <see langword="Ctrl" /> + <see langword="Up" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b478-560">The default key gesture for this command is <see langword="Ctrl" />+<see langword="Up" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6b478-561">Mit diesem Befehl positioniert die Einfügemarke am Anfang des nächsten Absatzes an.</span><span class="sxs-lookup"><span data-stu-id="6b478-561">This command positions the caret at the beginning of the next paragraph.</span></span>  
  
 <span data-ttu-id="6b478-562">Dieser Befehl verhält sich wie <xref:System.Windows.Documents.EditingCommands.MoveToDocumentStart%2A> beim Aufrufen einer <xref:System.Windows.Controls.TextBox>.</span><span class="sxs-lookup"><span data-stu-id="6b478-562">This command behaves like <xref:System.Windows.Documents.EditingCommands.MoveToDocumentStart%2A> when invoked on a <xref:System.Windows.Controls.TextBox>.</span></span>  
  
 <span data-ttu-id="6b478-563">Es ist nicht notwendigerweise eine tatsächliche Implementierung, die für diesen Befehl für ein angegebenes Objekt reagiert. in vielen Fällen ist die Implementierung, die an einen Befehl antwortet der Verantwortung des Anwendungs-Writer.</span><span class="sxs-lookup"><span data-stu-id="6b478-563">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="6b478-564">Mit diesem Befehl wird eine systemeigene Unterstützung durch <xref:System.Windows.Controls.RichTextBox> und <xref:System.Windows.Controls.TextBox>.</span><span class="sxs-lookup"><span data-stu-id="6b478-564">This command is natively supported by <xref:System.Windows.Controls.RichTextBox> and <xref:System.Windows.Controls.TextBox>.</span></span>  
  
<a name="xamlAttributeUsage_MoveUpByParagraph"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="6b478-565">Verwendung von XAML-Attributen</span><span class="sxs-lookup"><span data-stu-id="6b478-565">XAML Attribute Usage</span></span>  
  
```  
<object property="MoveUpByParagraph"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="6b478-566">Im folgenden Beispiel wird veranschaulicht, wie auf einen Befehl für ein Objekt aufrufen, die der Befehl unterstützt wird.</span><span class="sxs-lookup"><span data-stu-id="6b478-566">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="6b478-567">In diesem Beispiel eine <xref:System.Windows.Controls.RichTextBox> dient als das Befehlsziel.</span><span class="sxs-lookup"><span data-stu-id="6b478-567">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="6b478-568">Beachten Sie, dass <xref:System.Windows.Controls.RichTextBox> implementiert die <xref:System.Windows.IInputElement> Schnittstelle (geerbt von <xref:System.Windows.FrameworkElement>), und bietet systemeigene Unterstützung für viele Bearbeitungsbefehle.</span><span class="sxs-lookup"><span data-stu-id="6b478-568">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="6b478-569">Das erste Argument für die <xref:System.Windows.Input.RoutedCommand.Execute%2A> Methode ist ein Befehlsparameter.</span><span class="sxs-lookup"><span data-stu-id="6b478-569">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="6b478-570">Die meisten Befehle ignorieren Befehlsparameter. Dieser Parameter sollte im allgemeinen `null` für Bearbeitungsbefehle.</span><span class="sxs-lookup"><span data-stu-id="6b478-570">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="6b478-571">Das zweite Argument gibt das Objekt, an dem der Befehl weitergeleitet werden.</span><span class="sxs-lookup"><span data-stu-id="6b478-571">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="6b478-572">Dieses Objekt muss implementieren die <xref:System.Windows.IInputElement> Schnittstelle, und sollte einen Handler für den angegebenen Befehl einschließen.</span><span class="sxs-lookup"><span data-stu-id="6b478-572">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="6b478-573">Im Allgemeinen wird ein Befehl ignoriert, wenn für ein Objekt aufgerufen, die den Befehl nicht behandelt.</span><span class="sxs-lookup"><span data-stu-id="6b478-573">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveDownByParagraph" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveUpByLine" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveUpByPage" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectUpByParagraph" />
      </Docs>
    </Member>
    <Member MemberName="SelectDownByLine">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand SelectDownByLine { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand SelectDownByLine" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.SelectDownByLine" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property SelectDownByLine As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ SelectDownByLine { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectDownByLine : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.SelectDownByLine" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6b478-574">Stellt den <see cref="P:System.Windows.Documents.EditingCommands.SelectDownByLine" />-Befehl dar, mit dem angefordert wird, dass die aktuelle Auswahl um eine Zeile nach unten erweitert wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b478-574">Represents the <see cref="P:System.Windows.Documents.EditingCommands.SelectDownByLine" /> command, which requests that the current selection be expanded down by one line.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6b478-575">Der angeforderte Befehl.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b478-575">The requested command.</span>
          </span>
          <span data-ttu-id="6b478-576">Die standardmäßige Tastenkombination für diesen Befehl wird <see langword="Shift" /> + <see langword="Down" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b478-576">The default key gesture for this command is <see langword="Shift" />+<see langword="Down" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6b478-577">Es ist nicht notwendigerweise eine tatsächliche Implementierung, die für diesen Befehl für ein angegebenes Objekt reagiert. in vielen Fällen ist die Implementierung, die an einen Befehl antwortet der Verantwortung des Anwendungs-Writer.</span><span class="sxs-lookup"><span data-stu-id="6b478-577">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="6b478-578">Mit diesem Befehl wird eine systemeigene Unterstützung durch <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, und <xref:System.Windows.Controls.PasswordBox>.</span><span class="sxs-lookup"><span data-stu-id="6b478-578">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_SelectDownByLine"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="6b478-579">Verwendung von XAML-Attributen</span><span class="sxs-lookup"><span data-stu-id="6b478-579">XAML Attribute Usage</span></span>  
  
```  
<object property="SelectDownByLine"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="6b478-580">Im folgenden Beispiel wird veranschaulicht, wie auf einen Befehl für ein Objekt aufrufen, die der Befehl unterstützt wird.</span><span class="sxs-lookup"><span data-stu-id="6b478-580">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="6b478-581">In diesem Beispiel eine <xref:System.Windows.Controls.RichTextBox> dient als das Befehlsziel.</span><span class="sxs-lookup"><span data-stu-id="6b478-581">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="6b478-582">Beachten Sie, dass <xref:System.Windows.Controls.RichTextBox> implementiert die <xref:System.Windows.IInputElement> Schnittstelle (geerbt von <xref:System.Windows.FrameworkElement>), und bietet systemeigene Unterstützung für viele Bearbeitungsbefehle.</span><span class="sxs-lookup"><span data-stu-id="6b478-582">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="6b478-583">Das erste Argument für die <xref:System.Windows.Input.RoutedCommand.Execute%2A> Methode ist ein Befehlsparameter.</span><span class="sxs-lookup"><span data-stu-id="6b478-583">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="6b478-584">Die meisten Befehle ignorieren Befehlsparameter. Dieser Parameter sollte im allgemeinen `null` für Bearbeitungsbefehle.</span><span class="sxs-lookup"><span data-stu-id="6b478-584">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="6b478-585">Das zweite Argument gibt das Objekt, an dem der Befehl weitergeleitet werden.</span><span class="sxs-lookup"><span data-stu-id="6b478-585">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="6b478-586">Dieses Objekt muss implementieren die <xref:System.Windows.IInputElement> Schnittstelle, und sollte einen Handler für den angegebenen Befehl einschließen.</span><span class="sxs-lookup"><span data-stu-id="6b478-586">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="6b478-587">Im Allgemeinen wird ein Befehl ignoriert, wenn für ein Objekt aufgerufen, die den Befehl nicht behandelt.</span><span class="sxs-lookup"><span data-stu-id="6b478-587">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectUpByLine" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectDownByPage" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectDownByParagraph" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveDownByLine" />
      </Docs>
    </Member>
    <Member MemberName="SelectDownByPage">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand SelectDownByPage { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand SelectDownByPage" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.SelectDownByPage" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property SelectDownByPage As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ SelectDownByPage { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectDownByPage : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.SelectDownByPage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6b478-588">Stellt den <see cref="P:System.Windows.Documents.EditingCommands.SelectDownByPage" />-Befehl dar, mit dem angefordert wird, dass die aktuelle Auswahl um eine Seite nach unten erweitert wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b478-588">Represents the <see cref="P:System.Windows.Documents.EditingCommands.SelectDownByPage" /> command, which requests that the current selection be expanded down by one page.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6b478-589">Der angeforderte Befehl.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b478-589">The requested command.</span>
          </span>
          <span data-ttu-id="6b478-590">Die standardmäßige Tastenkombination für diesen Befehl wird <see langword="Shift" /> + <see langword="PageDown" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b478-590">The default key gesture for this command is <see langword="Shift" />+<see langword="PageDown" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6b478-591">Es ist nicht notwendigerweise eine tatsächliche Implementierung, die für diesen Befehl für ein angegebenes Objekt reagiert. in vielen Fällen ist die Implementierung, die an einen Befehl antwortet der Verantwortung des Anwendungs-Writer.</span><span class="sxs-lookup"><span data-stu-id="6b478-591">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="6b478-592">Mit diesem Befehl wird eine systemeigene Unterstützung durch <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, und <xref:System.Windows.Controls.PasswordBox>.</span><span class="sxs-lookup"><span data-stu-id="6b478-592">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_SelectDownByPage"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="6b478-593">Verwendung von XAML-Attributen</span><span class="sxs-lookup"><span data-stu-id="6b478-593">XAML Attribute Usage</span></span>  
  
```  
<object property="SelectDownByPage"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="6b478-594">Im folgenden Beispiel wird veranschaulicht, wie auf einen Befehl für ein Objekt aufrufen, die der Befehl unterstützt wird.</span><span class="sxs-lookup"><span data-stu-id="6b478-594">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="6b478-595">In diesem Beispiel eine <xref:System.Windows.Controls.RichTextBox> dient als das Befehlsziel.</span><span class="sxs-lookup"><span data-stu-id="6b478-595">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="6b478-596">Beachten Sie, dass <xref:System.Windows.Controls.RichTextBox> implementiert die <xref:System.Windows.IInputElement> Schnittstelle (geerbt von <xref:System.Windows.FrameworkElement>), und bietet systemeigene Unterstützung für viele Bearbeitungsbefehle.</span><span class="sxs-lookup"><span data-stu-id="6b478-596">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="6b478-597">Das erste Argument für die <xref:System.Windows.Input.RoutedCommand.Execute%2A> Methode ist ein Befehlsparameter.</span><span class="sxs-lookup"><span data-stu-id="6b478-597">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="6b478-598">Die meisten Befehle ignorieren Befehlsparameter. Dieser Parameter sollte im allgemeinen `null` für Bearbeitungsbefehle.</span><span class="sxs-lookup"><span data-stu-id="6b478-598">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="6b478-599">Das zweite Argument gibt das Objekt, an dem der Befehl weitergeleitet werden.</span><span class="sxs-lookup"><span data-stu-id="6b478-599">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="6b478-600">Dieses Objekt muss implementieren die <xref:System.Windows.IInputElement> Schnittstelle, und sollte einen Handler für den angegebenen Befehl einschließen.</span><span class="sxs-lookup"><span data-stu-id="6b478-600">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="6b478-601">Im Allgemeinen wird ein Befehl ignoriert, wenn für ein Objekt aufgerufen, die den Befehl nicht behandelt.</span><span class="sxs-lookup"><span data-stu-id="6b478-601">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectUpByPage" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectDownByLine" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectDownByParagraph" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveDownByPage" />
      </Docs>
    </Member>
    <Member MemberName="SelectDownByParagraph">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand SelectDownByParagraph { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand SelectDownByParagraph" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.SelectDownByParagraph" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property SelectDownByParagraph As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ SelectDownByParagraph { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectDownByParagraph : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.SelectDownByParagraph" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6b478-602">Stellt den <see cref="P:System.Windows.Documents.EditingCommands.SelectDownByParagraph" />-Befehl dar, mit dem angefordert wird, dass die aktuelle Auswahl um einen Absatz nach unten erweitert wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b478-602">Represents the <see cref="P:System.Windows.Documents.EditingCommands.SelectDownByParagraph" /> command, which requests that the current selection be expanded down by one paragraph.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6b478-603">Der angeforderte Befehl.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b478-603">The requested command.</span>
          </span>
          <span data-ttu-id="6b478-604">Die standardmäßige Tastenkombination für diesen Befehl wird <see langword="Ctrl" /> + <see langword="Shift" /> + <see langword="Down" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b478-604">The default key gesture for this command is <see langword="Ctrl" />+<see langword="Shift" />+<see langword="Down" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6b478-605">Mit diesem Befehl wird die Auswahl auf den Anfang des nächsten Absatzes erweitert.</span><span class="sxs-lookup"><span data-stu-id="6b478-605">This command expands the selection to the beginning of the next paragraph.</span></span>  <span data-ttu-id="6b478-606">Andernfalls wird mit diesem Befehl die Auswahl bis zum Ende des aktuellen Absatzes erweitert.</span><span class="sxs-lookup"><span data-stu-id="6b478-606">Otherwise, this command expands the selection to the end of the current paragraph.</span></span>  <span data-ttu-id="6b478-607">Die erweiterte Auswahl schließt die Absatzmarke, die das Ende des Absatzes markiert.</span><span class="sxs-lookup"><span data-stu-id="6b478-607">The expanded selection includes the paragraph break that marks the end of the paragraph.</span></span>  
  
 <span data-ttu-id="6b478-608">Es ist nicht notwendigerweise eine tatsächliche Implementierung, die für diesen Befehl für ein angegebenes Objekt reagiert. in vielen Fällen ist die Implementierung, die an einen Befehl antwortet der Verantwortung des Anwendungs-Writer.</span><span class="sxs-lookup"><span data-stu-id="6b478-608">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="6b478-609">Mit diesem Befehl wird eine systemeigene Unterstützung durch <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, und <xref:System.Windows.Controls.PasswordBox>.</span><span class="sxs-lookup"><span data-stu-id="6b478-609">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_SelectDownByParagraph"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="6b478-610">Verwendung von XAML-Attributen</span><span class="sxs-lookup"><span data-stu-id="6b478-610">XAML Attribute Usage</span></span>  
  
```  
<object property="SelectDownByParagraph"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="6b478-611">Im folgenden Beispiel wird veranschaulicht, wie auf einen Befehl für ein Objekt aufrufen, die der Befehl unterstützt wird.</span><span class="sxs-lookup"><span data-stu-id="6b478-611">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="6b478-612">In diesem Beispiel eine <xref:System.Windows.Controls.RichTextBox> dient als das Befehlsziel.</span><span class="sxs-lookup"><span data-stu-id="6b478-612">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="6b478-613">Beachten Sie, dass <xref:System.Windows.Controls.RichTextBox> implementiert die <xref:System.Windows.IInputElement> Schnittstelle (geerbt von <xref:System.Windows.FrameworkElement>), und bietet systemeigene Unterstützung für viele Bearbeitungsbefehle.</span><span class="sxs-lookup"><span data-stu-id="6b478-613">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="6b478-614">Das erste Argument für die <xref:System.Windows.Input.RoutedCommand.Execute%2A> Methode ist ein Befehlsparameter.</span><span class="sxs-lookup"><span data-stu-id="6b478-614">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="6b478-615">Die meisten Befehle ignorieren Befehlsparameter. Dieser Parameter sollte im allgemeinen `null` für Bearbeitungsbefehle.</span><span class="sxs-lookup"><span data-stu-id="6b478-615">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="6b478-616">Das zweite Argument gibt das Objekt, an dem der Befehl weitergeleitet werden.</span><span class="sxs-lookup"><span data-stu-id="6b478-616">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="6b478-617">Dieses Objekt muss implementieren die <xref:System.Windows.IInputElement> Schnittstelle, und sollte einen Handler für den angegebenen Befehl einschließen.</span><span class="sxs-lookup"><span data-stu-id="6b478-617">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="6b478-618">Im Allgemeinen wird ein Befehl ignoriert, wenn für ein Objekt aufgerufen, die den Befehl nicht behandelt.</span><span class="sxs-lookup"><span data-stu-id="6b478-618">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectUpByParagraph" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectDownByLine" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectDownByPage" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveDownByParagraph" />
      </Docs>
    </Member>
    <Member MemberName="SelectLeftByCharacter">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand SelectLeftByCharacter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand SelectLeftByCharacter" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.SelectLeftByCharacter" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property SelectLeftByCharacter As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ SelectLeftByCharacter { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectLeftByCharacter : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.SelectLeftByCharacter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6b478-619">Stellt den <see cref="P:System.Windows.Documents.EditingCommands.SelectLeftByCharacter" />-Befehl dar, mit dem angefordert wird, dass die aktuelle Auswahl um ein Zeichen nach links erweitert wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b478-619">Represents the <see cref="P:System.Windows.Documents.EditingCommands.SelectLeftByCharacter" /> command, which requests that the current selection be expanded left by one character.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6b478-620">Der angeforderte Befehl.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b478-620">The requested command.</span>
          </span>
          <span data-ttu-id="6b478-621">Die standardmäßige Tastenkombination für diesen Befehl wird <see langword="Shift" /> + <see langword="Left" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b478-621">The default key gesture for this command is <see langword="Shift" />+<see langword="Left" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6b478-622">Es ist nicht notwendigerweise eine tatsächliche Implementierung, die für diesen Befehl für ein angegebenes Objekt reagiert. in vielen Fällen ist die Implementierung, die an einen Befehl antwortet der Verantwortung des Anwendungs-Writer.</span><span class="sxs-lookup"><span data-stu-id="6b478-622">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="6b478-623">Mit diesem Befehl wird eine systemeigene Unterstützung durch <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, und <xref:System.Windows.Controls.PasswordBox>.</span><span class="sxs-lookup"><span data-stu-id="6b478-623">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_SelectLeftByCharacter"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="6b478-624">Verwendung von XAML-Attributen</span><span class="sxs-lookup"><span data-stu-id="6b478-624">XAML Attribute Usage</span></span>  
  
```  
<object property="SelectLeftByCharacter"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="6b478-625">Im folgenden Beispiel wird veranschaulicht, wie auf einen Befehl für ein Objekt aufrufen, die der Befehl unterstützt wird.</span><span class="sxs-lookup"><span data-stu-id="6b478-625">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="6b478-626">In diesem Beispiel eine <xref:System.Windows.Controls.RichTextBox> dient als das Befehlsziel.</span><span class="sxs-lookup"><span data-stu-id="6b478-626">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="6b478-627">Beachten Sie, dass <xref:System.Windows.Controls.RichTextBox> implementiert die <xref:System.Windows.IInputElement> Schnittstelle (geerbt von <xref:System.Windows.FrameworkElement>), und bietet systemeigene Unterstützung für viele Bearbeitungsbefehle.</span><span class="sxs-lookup"><span data-stu-id="6b478-627">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="6b478-628">Das erste Argument für die <xref:System.Windows.Input.RoutedCommand.Execute%2A> Methode ist ein Befehlsparameter.</span><span class="sxs-lookup"><span data-stu-id="6b478-628">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="6b478-629">Die meisten Befehle ignorieren Befehlsparameter. Dieser Parameter sollte im allgemeinen `null` für Bearbeitungsbefehle.</span><span class="sxs-lookup"><span data-stu-id="6b478-629">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="6b478-630">Das zweite Argument gibt das Objekt, an dem der Befehl weitergeleitet werden.</span><span class="sxs-lookup"><span data-stu-id="6b478-630">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="6b478-631">Dieses Objekt muss implementieren die <xref:System.Windows.IInputElement> Schnittstelle, und sollte einen Handler für den angegebenen Befehl einschließen.</span><span class="sxs-lookup"><span data-stu-id="6b478-631">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="6b478-632">Im Allgemeinen wird ein Befehl ignoriert, wenn für ein Objekt aufgerufen, die den Befehl nicht behandelt.</span><span class="sxs-lookup"><span data-stu-id="6b478-632">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectRightByCharacter" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectLeftByWord" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveLeftByCharacter" />
      </Docs>
    </Member>
    <Member MemberName="SelectLeftByWord">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand SelectLeftByWord { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand SelectLeftByWord" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.SelectLeftByWord" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property SelectLeftByWord As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ SelectLeftByWord { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectLeftByWord : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.SelectLeftByWord" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6b478-633">Stellt den <see cref="P:System.Windows.Documents.EditingCommands.SelectLeftByWord" />-Befehl dar, mit dem angefordert wird, dass die aktuelle Auswahl um ein Wort nach links erweitert wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b478-633">Represents the <see cref="P:System.Windows.Documents.EditingCommands.SelectLeftByWord" /> command, which requests that the current selection be expanded left by one word.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6b478-634">Der angeforderte Befehl.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b478-634">The requested command.</span>
          </span>
          <span data-ttu-id="6b478-635">Die standardmäßige Tastenkombination für diesen Befehl wird <see langword="Ctrl" /> + <see langword="Shift" /> + <see langword="Left" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b478-635">The default key gesture for this command is <see langword="Ctrl" />+<see langword="Shift" />+<see langword="Left" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6b478-636">Wenn die Einfügemarke innerhalb eines Worts ist, wird mit diesem Befehl die Auswahl auf den Anfang des Begriffs erweitert.</span><span class="sxs-lookup"><span data-stu-id="6b478-636">If the caret is within a word, this command expands the selection to the beginning of that word.</span></span>  <span data-ttu-id="6b478-637">Andernfalls wird mit diesem Befehl die Auswahl auf den Anfang des vorherigen Worts erweitert.</span><span class="sxs-lookup"><span data-stu-id="6b478-637">Otherwise, this command expands the selection to the beginning of the previous word.</span></span>  
  
 <span data-ttu-id="6b478-638">Die erweiterte Auswahl umfasst nicht das Word-Trennzeichen.</span><span class="sxs-lookup"><span data-stu-id="6b478-638">The expanded selection does not include the word delimiter.</span></span>  <span data-ttu-id="6b478-639">Im Gegensatz dazu <xref:System.Windows.Documents.EditingCommands.SelectRightByWord%2A>, das Word-Trennzeichen in der erweiterten Auswahl eingeschlossen.</span><span class="sxs-lookup"><span data-stu-id="6b478-639">Contrast with <xref:System.Windows.Documents.EditingCommands.SelectRightByWord%2A>, which does include the word delimiter in the expanded selection.</span></span>  
  
 <span data-ttu-id="6b478-640">Es ist nicht notwendigerweise eine tatsächliche Implementierung, die für diesen Befehl für ein angegebenes Objekt reagiert. in vielen Fällen ist die Implementierung, die an einen Befehl antwortet der Verantwortung des Anwendungs-Writer.</span><span class="sxs-lookup"><span data-stu-id="6b478-640">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="6b478-641">Mit diesem Befehl wird eine systemeigene Unterstützung durch <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, und <xref:System.Windows.Controls.PasswordBox>.</span><span class="sxs-lookup"><span data-stu-id="6b478-641">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_SelectLeftByWord"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="6b478-642">Verwendung von XAML-Attributen</span><span class="sxs-lookup"><span data-stu-id="6b478-642">XAML Attribute Usage</span></span>  
  
```  
<object property="SelectLeftByWord"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="6b478-643">Im folgenden Beispiel wird veranschaulicht, wie auf einen Befehl für ein Objekt aufrufen, die der Befehl unterstützt wird.</span><span class="sxs-lookup"><span data-stu-id="6b478-643">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="6b478-644">In diesem Beispiel eine <xref:System.Windows.Controls.RichTextBox> dient als das Befehlsziel.</span><span class="sxs-lookup"><span data-stu-id="6b478-644">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="6b478-645">Beachten Sie, dass <xref:System.Windows.Controls.RichTextBox> implementiert die <xref:System.Windows.IInputElement> Schnittstelle (geerbt von <xref:System.Windows.FrameworkElement>), und bietet systemeigene Unterstützung für viele Bearbeitungsbefehle.</span><span class="sxs-lookup"><span data-stu-id="6b478-645">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="6b478-646">Das erste Argument für die <xref:System.Windows.Input.RoutedCommand.Execute%2A> Methode ist ein Befehlsparameter.</span><span class="sxs-lookup"><span data-stu-id="6b478-646">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="6b478-647">Die meisten Befehle ignorieren Befehlsparameter. Dieser Parameter sollte im allgemeinen `null` für Bearbeitungsbefehle.</span><span class="sxs-lookup"><span data-stu-id="6b478-647">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="6b478-648">Das zweite Argument gibt das Objekt, an dem der Befehl weitergeleitet werden.</span><span class="sxs-lookup"><span data-stu-id="6b478-648">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="6b478-649">Dieses Objekt muss implementieren die <xref:System.Windows.IInputElement> Schnittstelle, und sollte einen Handler für den angegebenen Befehl einschließen.</span><span class="sxs-lookup"><span data-stu-id="6b478-649">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="6b478-650">Im Allgemeinen wird ein Befehl ignoriert, wenn für ein Objekt aufgerufen, die den Befehl nicht behandelt.</span><span class="sxs-lookup"><span data-stu-id="6b478-650">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectRightByWord" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectLeftByCharacter" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveLeftByWord" />
      </Docs>
    </Member>
    <Member MemberName="SelectRightByCharacter">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand SelectRightByCharacter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand SelectRightByCharacter" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.SelectRightByCharacter" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property SelectRightByCharacter As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ SelectRightByCharacter { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectRightByCharacter : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.SelectRightByCharacter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6b478-651">Stellt den <see cref="P:System.Windows.Documents.EditingCommands.SelectRightByCharacter" />-Befehl dar, mit dem angefordert wird, dass die aktuelle Auswahl um ein Zeichen nach rechts erweitert wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b478-651">Represents the <see cref="P:System.Windows.Documents.EditingCommands.SelectRightByCharacter" /> command, which requests that the current selection be expanded right by one character.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6b478-652">Der angeforderte Befehl.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b478-652">The requested command.</span>
          </span>
          <span data-ttu-id="6b478-653">Die standardmäßige Tastenkombination für diesen Befehl wird <see langword="Shift" /> + <see langword="Right" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b478-653">The default key gesture for this command is <see langword="Shift" />+<see langword="Right" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6b478-654">Es ist nicht notwendigerweise eine tatsächliche Implementierung, die für diesen Befehl für ein angegebenes Objekt reagiert. in vielen Fällen ist die Implementierung, die an einen Befehl antwortet der Verantwortung des Anwendungs-Writer.</span><span class="sxs-lookup"><span data-stu-id="6b478-654">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="6b478-655">Mit diesem Befehl wird eine systemeigene Unterstützung durch <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, und <xref:System.Windows.Controls.PasswordBox>.</span><span class="sxs-lookup"><span data-stu-id="6b478-655">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_SelectRightByCharacter"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="6b478-656">Verwendung von XAML-Attributen</span><span class="sxs-lookup"><span data-stu-id="6b478-656">XAML Attribute Usage</span></span>  
  
```  
<object property="SelectRightByCharacter"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="6b478-657">Im folgenden Beispiel wird veranschaulicht, wie auf einen Befehl für ein Objekt aufrufen, die der Befehl unterstützt wird.</span><span class="sxs-lookup"><span data-stu-id="6b478-657">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="6b478-658">In diesem Beispiel eine <xref:System.Windows.Controls.RichTextBox> dient als das Befehlsziel.</span><span class="sxs-lookup"><span data-stu-id="6b478-658">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="6b478-659">Beachten Sie, dass <xref:System.Windows.Controls.RichTextBox> implementiert die <xref:System.Windows.IInputElement> Schnittstelle (geerbt von <xref:System.Windows.FrameworkElement>), und bietet systemeigene Unterstützung für viele Bearbeitungsbefehle.</span><span class="sxs-lookup"><span data-stu-id="6b478-659">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="6b478-660">Das erste Argument für die <xref:System.Windows.Input.RoutedCommand.Execute%2A> Methode ist ein Befehlsparameter.</span><span class="sxs-lookup"><span data-stu-id="6b478-660">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="6b478-661">Die meisten Befehle ignorieren Befehlsparameter. Dieser Parameter sollte im allgemeinen `null` für Bearbeitungsbefehle.</span><span class="sxs-lookup"><span data-stu-id="6b478-661">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="6b478-662">Das zweite Argument gibt das Objekt, an dem der Befehl weitergeleitet werden.</span><span class="sxs-lookup"><span data-stu-id="6b478-662">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="6b478-663">Dieses Objekt muss implementieren die <xref:System.Windows.IInputElement> Schnittstelle, und sollte einen Handler für den angegebenen Befehl einschließen.</span><span class="sxs-lookup"><span data-stu-id="6b478-663">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="6b478-664">Im Allgemeinen wird ein Befehl ignoriert, wenn für ein Objekt aufgerufen, die den Befehl nicht behandelt.</span><span class="sxs-lookup"><span data-stu-id="6b478-664">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectLeftByCharacter" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectRightByWord" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveRightByCharacter" />
      </Docs>
    </Member>
    <Member MemberName="SelectRightByWord">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand SelectRightByWord { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand SelectRightByWord" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.SelectRightByWord" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property SelectRightByWord As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ SelectRightByWord { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectRightByWord : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.SelectRightByWord" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6b478-665">Stellt den <see cref="P:System.Windows.Documents.EditingCommands.SelectRightByWord" />-Befehl dar, mit dem angefordert wird, dass die aktuelle Auswahl um ein Wort nach rechts erweitert wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b478-665">Represents the <see cref="P:System.Windows.Documents.EditingCommands.SelectRightByWord" /> command, which requests that the current selection be expanded right by one word.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6b478-666">Der angeforderte Befehl.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b478-666">The requested command.</span>
          </span>
          <span data-ttu-id="6b478-667">Die standardmäßige Tastenkombination für diesen Befehl wird <see langword="Ctrl" /> + <see langword="Shift" /> + <see langword="Right" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b478-667">The default key gesture for this command is <see langword="Ctrl" />+<see langword="Shift" />+<see langword="Right" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6b478-668">Wenn die Einfügemarke innerhalb eines Worts ist, wird mit diesem Befehl die Auswahl bis zum Ende des Begriffs erweitert.</span><span class="sxs-lookup"><span data-stu-id="6b478-668">If the caret is within a word, this command expands the selection to the end of that word.</span></span>  <span data-ttu-id="6b478-669">Andernfalls wird mit diesem Befehl die Auswahl bis zum Ende des Worts weiter erweitert.</span><span class="sxs-lookup"><span data-stu-id="6b478-669">Otherwise, this command expands the selection to the end of the next word.</span></span>  
  
 <span data-ttu-id="6b478-670">Die erweiterte Auswahl schließt das Word-Trennzeichen.</span><span class="sxs-lookup"><span data-stu-id="6b478-670">The expanded selection includes the word delimiter.</span></span>  <span data-ttu-id="6b478-671">Im Gegensatz dazu <xref:System.Windows.Documents.EditingCommands.SelectLeftByWord%2A> , das Word-Trennzeichen in der erweiterten Auswahl nicht eingeschlossen.</span><span class="sxs-lookup"><span data-stu-id="6b478-671">Contrast with <xref:System.Windows.Documents.EditingCommands.SelectLeftByWord%2A> which does not include the word delimiter in the expanded selection.</span></span>  
  
 <span data-ttu-id="6b478-672">Es ist nicht notwendigerweise eine tatsächliche Implementierung, die für diesen Befehl für ein angegebenes Objekt reagiert. in vielen Fällen ist die Implementierung, die an einen Befehl antwortet der Verantwortung des Anwendungs-Writer.</span><span class="sxs-lookup"><span data-stu-id="6b478-672">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="6b478-673">Mit diesem Befehl wird eine systemeigene Unterstützung durch <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, und <xref:System.Windows.Controls.PasswordBox>.</span><span class="sxs-lookup"><span data-stu-id="6b478-673">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_SelectRightByWord"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="6b478-674">Verwendung von XAML-Attributen</span><span class="sxs-lookup"><span data-stu-id="6b478-674">XAML Attribute Usage</span></span>  
  
```  
<object property="SelectRightByWord"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="6b478-675">Im folgenden Beispiel wird veranschaulicht, wie auf einen Befehl für ein Objekt aufrufen, die der Befehl unterstützt wird.</span><span class="sxs-lookup"><span data-stu-id="6b478-675">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="6b478-676">In diesem Beispiel eine <xref:System.Windows.Controls.RichTextBox> dient als das Befehlsziel.</span><span class="sxs-lookup"><span data-stu-id="6b478-676">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="6b478-677">Beachten Sie, dass <xref:System.Windows.Controls.RichTextBox> implementiert die <xref:System.Windows.IInputElement> Schnittstelle (geerbt von <xref:System.Windows.FrameworkElement>), und bietet systemeigene Unterstützung für viele Bearbeitungsbefehle.</span><span class="sxs-lookup"><span data-stu-id="6b478-677">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="6b478-678">Das erste Argument für die <xref:System.Windows.Input.RoutedCommand.Execute%2A> Methode ist ein Befehlsparameter.</span><span class="sxs-lookup"><span data-stu-id="6b478-678">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="6b478-679">Die meisten Befehle ignorieren Befehlsparameter. Dieser Parameter sollte im allgemeinen `null` für Bearbeitungsbefehle.</span><span class="sxs-lookup"><span data-stu-id="6b478-679">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="6b478-680">Das zweite Argument gibt das Objekt, an dem der Befehl weitergeleitet werden.</span><span class="sxs-lookup"><span data-stu-id="6b478-680">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="6b478-681">Dieses Objekt muss implementieren die <xref:System.Windows.IInputElement> Schnittstelle, und sollte einen Handler für den angegebenen Befehl einschließen.</span><span class="sxs-lookup"><span data-stu-id="6b478-681">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="6b478-682">Im Allgemeinen wird ein Befehl ignoriert, wenn für ein Objekt aufgerufen, die den Befehl nicht behandelt.</span><span class="sxs-lookup"><span data-stu-id="6b478-682">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectLeftByWord" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectRightByCharacter" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveRightByWord" />
      </Docs>
    </Member>
    <Member MemberName="SelectToDocumentEnd">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand SelectToDocumentEnd { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand SelectToDocumentEnd" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.SelectToDocumentEnd" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property SelectToDocumentEnd As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ SelectToDocumentEnd { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectToDocumentEnd : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.SelectToDocumentEnd" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6b478-683">Stellt den <see cref="P:System.Windows.Documents.EditingCommands.SelectToDocumentEnd" />-Befehl dar, mit dem angefordert wird, dass die aktuelle Auswahl bis an das Ende des Inhalts erweitert wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b478-683">Represents the <see cref="P:System.Windows.Documents.EditingCommands.SelectToDocumentEnd" /> command, which requests that the current selection be expanded to the very end of content.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6b478-684">Der angeforderte Befehl.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b478-684">The requested command.</span>
          </span>
          <span data-ttu-id="6b478-685">Die standardmäßige Tastenkombination für diesen Befehl wird <see langword="Ctrl" /> + <see langword="Shift" /> + <see langword="End" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b478-685">The default key gesture for this command is <see langword="Ctrl" />+<see langword="Shift" />+<see langword="End" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6b478-686">Ein *Textcontainer* ist das Element, das den äußeren Rahmen für den Inhalt zur hand bildet.</span><span class="sxs-lookup"><span data-stu-id="6b478-686">A *text container* is the element that forms the ultimate border for the content at hand.</span></span>  <span data-ttu-id="6b478-687"><xref:System.Windows.Controls.TextBlock> und <xref:System.Windows.Documents.FlowDocument> sind Beispiele für Textcontainer.</span><span class="sxs-lookup"><span data-stu-id="6b478-687"><xref:System.Windows.Controls.TextBlock> and <xref:System.Windows.Documents.FlowDocument> are examples of text containers.</span></span>  <span data-ttu-id="6b478-688">Der Inhalt zusammen in einem Textcontainer wird als bezeichnet eine *Dokument*.</span><span class="sxs-lookup"><span data-stu-id="6b478-688">The content collectively contained within a text container is referred to as a *document*.</span></span>  
  
 <span data-ttu-id="6b478-689">Es ist nicht notwendigerweise eine tatsächliche Implementierung, die für diesen Befehl für ein angegebenes Objekt reagiert. in vielen Fällen ist die Implementierung, die an einen Befehl antwortet der Verantwortung des Anwendungs-Writer.</span><span class="sxs-lookup"><span data-stu-id="6b478-689">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="6b478-690">Mit diesem Befehl wird eine systemeigene Unterstützung durch <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, und <xref:System.Windows.Controls.PasswordBox>.</span><span class="sxs-lookup"><span data-stu-id="6b478-690">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_SelectToDocumentEnd"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="6b478-691">Verwendung von XAML-Attributen</span><span class="sxs-lookup"><span data-stu-id="6b478-691">XAML Attribute Usage</span></span>  
  
```  
<object property="SelectToDocumentEnd"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="6b478-692">Im folgenden Beispiel wird veranschaulicht, wie auf einen Befehl für ein Objekt aufrufen, die der Befehl unterstützt wird.</span><span class="sxs-lookup"><span data-stu-id="6b478-692">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="6b478-693">In diesem Beispiel eine <xref:System.Windows.Controls.RichTextBox> dient als das Befehlsziel.</span><span class="sxs-lookup"><span data-stu-id="6b478-693">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="6b478-694">Beachten Sie, dass <xref:System.Windows.Controls.RichTextBox> implementiert die <xref:System.Windows.IInputElement> Schnittstelle (geerbt von <xref:System.Windows.FrameworkElement>), und bietet systemeigene Unterstützung für viele Bearbeitungsbefehle.</span><span class="sxs-lookup"><span data-stu-id="6b478-694">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="6b478-695">Das erste Argument für die <xref:System.Windows.Input.RoutedCommand.Execute%2A> Methode ist ein Befehlsparameter.</span><span class="sxs-lookup"><span data-stu-id="6b478-695">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="6b478-696">Die meisten Befehle ignorieren Befehlsparameter. Dieser Parameter sollte im allgemeinen `null` für Bearbeitungsbefehle.</span><span class="sxs-lookup"><span data-stu-id="6b478-696">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="6b478-697">Das zweite Argument gibt das Objekt, an dem der Befehl weitergeleitet werden.</span><span class="sxs-lookup"><span data-stu-id="6b478-697">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="6b478-698">Dieses Objekt muss implementieren die <xref:System.Windows.IInputElement> Schnittstelle, und sollte einen Handler für den angegebenen Befehl einschließen.</span><span class="sxs-lookup"><span data-stu-id="6b478-698">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="6b478-699">Im Allgemeinen wird ein Befehl ignoriert, wenn für ein Objekt aufgerufen, die den Befehl nicht behandelt.</span><span class="sxs-lookup"><span data-stu-id="6b478-699">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectToDocumentStart" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveToDocumentEnd" />
      </Docs>
    </Member>
    <Member MemberName="SelectToDocumentStart">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand SelectToDocumentStart { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand SelectToDocumentStart" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.SelectToDocumentStart" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property SelectToDocumentStart As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ SelectToDocumentStart { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectToDocumentStart : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.SelectToDocumentStart" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6b478-700">Stellt den <see cref="P:System.Windows.Documents.EditingCommands.SelectToDocumentStart" />-Befehl dar, mit dem angefordert wird, dass die aktuelle Auswahl bis an den Anfang des Inhalts erweitert wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b478-700">Represents the <see cref="P:System.Windows.Documents.EditingCommands.SelectToDocumentStart" /> command, which requests that the current selection be expanded to the very beginning of content.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6b478-701">Der angeforderte Befehl.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b478-701">The requested command.</span>
          </span>
          <span data-ttu-id="6b478-702">Die standardmäßige Tastenkombination für diesen Befehl wird <see langword="Ctrl" /> + <see langword="Shift" /> + <see langword="Home" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b478-702">The default key gesture for this command is <see langword="Ctrl" />+<see langword="Shift" />+<see langword="Home" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6b478-703">Ein *Textcontainer* ist das Element, das den äußeren Rahmen für den Inhalt zur hand bildet.</span><span class="sxs-lookup"><span data-stu-id="6b478-703">A *text container* is the element that forms the ultimate border for the content at hand.</span></span>  <span data-ttu-id="6b478-704"><xref:System.Windows.Controls.TextBlock> und <xref:System.Windows.Documents.FlowDocument> sind Beispiele für Textcontainer.</span><span class="sxs-lookup"><span data-stu-id="6b478-704"><xref:System.Windows.Controls.TextBlock> and <xref:System.Windows.Documents.FlowDocument> are examples of text containers.</span></span>  <span data-ttu-id="6b478-705">Der Inhalt zusammen in einem Textcontainer wird als bezeichnet eine *Dokument*.</span><span class="sxs-lookup"><span data-stu-id="6b478-705">The content collectively contained within a text container is referred to as a *document*.</span></span>  
  
 <span data-ttu-id="6b478-706">Es ist nicht notwendigerweise eine tatsächliche Implementierung, die für diesen Befehl für ein angegebenes Objekt reagiert. in vielen Fällen ist die Implementierung, die an einen Befehl antwortet der Verantwortung des Anwendungs-Writer.</span><span class="sxs-lookup"><span data-stu-id="6b478-706">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="6b478-707">Mit diesem Befehl wird eine systemeigene Unterstützung durch <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, und <xref:System.Windows.Controls.PasswordBox>.</span><span class="sxs-lookup"><span data-stu-id="6b478-707">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_SelectToDocumentStart"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="6b478-708">Verwendung von XAML-Attributen</span><span class="sxs-lookup"><span data-stu-id="6b478-708">XAML Attribute Usage</span></span>  
  
```  
<object property="SelectToDocumentStart"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="6b478-709">Im folgenden Beispiel wird veranschaulicht, wie auf einen Befehl für ein Objekt aufrufen, die der Befehl unterstützt wird.</span><span class="sxs-lookup"><span data-stu-id="6b478-709">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="6b478-710">In diesem Beispiel eine <xref:System.Windows.Controls.RichTextBox> dient als das Befehlsziel.</span><span class="sxs-lookup"><span data-stu-id="6b478-710">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="6b478-711">Beachten Sie, dass <xref:System.Windows.Controls.RichTextBox> implementiert die <xref:System.Windows.IInputElement> Schnittstelle (geerbt von <xref:System.Windows.FrameworkElement>), und bietet systemeigene Unterstützung für viele Bearbeitungsbefehle.</span><span class="sxs-lookup"><span data-stu-id="6b478-711">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="6b478-712">Das erste Argument für die <xref:System.Windows.Input.RoutedCommand.Execute%2A> Methode ist ein Befehlsparameter.</span><span class="sxs-lookup"><span data-stu-id="6b478-712">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="6b478-713">Die meisten Befehle ignorieren Befehlsparameter. Dieser Parameter sollte im allgemeinen `null` für Bearbeitungsbefehle.</span><span class="sxs-lookup"><span data-stu-id="6b478-713">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="6b478-714">Das zweite Argument gibt das Objekt, an dem der Befehl weitergeleitet werden.</span><span class="sxs-lookup"><span data-stu-id="6b478-714">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="6b478-715">Dieses Objekt muss implementieren die <xref:System.Windows.IInputElement> Schnittstelle, und sollte einen Handler für den angegebenen Befehl einschließen.</span><span class="sxs-lookup"><span data-stu-id="6b478-715">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="6b478-716">Im Allgemeinen wird ein Befehl ignoriert, wenn für ein Objekt aufgerufen, die den Befehl nicht behandelt.</span><span class="sxs-lookup"><span data-stu-id="6b478-716">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectToDocumentEnd" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveToDocumentStart" />
      </Docs>
    </Member>
    <Member MemberName="SelectToLineEnd">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand SelectToLineEnd { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand SelectToLineEnd" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.SelectToLineEnd" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property SelectToLineEnd As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ SelectToLineEnd { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectToLineEnd : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.SelectToLineEnd" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6b478-717">Stellt den <see cref="P:System.Windows.Documents.EditingCommands.SelectToLineEnd" />-Befehl dar, mit dem angefordert wird, dass die aktuelle Auswahl bis an das Ende der aktuellen Zeile erweitert wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b478-717">Represents the <see cref="P:System.Windows.Documents.EditingCommands.SelectToLineEnd" /> command, which requests that the current selection be expanded to the end of the current line.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6b478-718">Der angeforderte Befehl.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b478-718">The requested command.</span>
          </span>
          <span data-ttu-id="6b478-719">Die standardmäßige Tastenkombination für diesen Befehl wird <see langword="Shift" /> + <see langword="End" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b478-719">The default key gesture for this command is <see langword="Shift" />+<see langword="End" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6b478-720">Es ist nicht notwendigerweise eine tatsächliche Implementierung, die für diesen Befehl für ein angegebenes Objekt reagiert. in vielen Fällen ist die Implementierung, die an einen Befehl antwortet der Verantwortung des Anwendungs-Writer.</span><span class="sxs-lookup"><span data-stu-id="6b478-720">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="6b478-721">Mit diesem Befehl wird eine systemeigene Unterstützung durch <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, und <xref:System.Windows.Controls.PasswordBox>.</span><span class="sxs-lookup"><span data-stu-id="6b478-721">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_SelectToLineEnd"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="6b478-722">Verwendung von XAML-Attributen</span><span class="sxs-lookup"><span data-stu-id="6b478-722">XAML Attribute Usage</span></span>  
  
```  
<object property="SelectToLineEnd"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="6b478-723">Im folgenden Beispiel wird veranschaulicht, wie auf einen Befehl für ein Objekt aufrufen, die der Befehl unterstützt wird.</span><span class="sxs-lookup"><span data-stu-id="6b478-723">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="6b478-724">In diesem Beispiel eine <xref:System.Windows.Controls.RichTextBox> dient als das Befehlsziel.</span><span class="sxs-lookup"><span data-stu-id="6b478-724">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="6b478-725">Beachten Sie, dass <xref:System.Windows.Controls.RichTextBox> implementiert die <xref:System.Windows.IInputElement> Schnittstelle (geerbt von <xref:System.Windows.FrameworkElement>), und bietet systemeigene Unterstützung für viele Bearbeitungsbefehle.</span><span class="sxs-lookup"><span data-stu-id="6b478-725">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="6b478-726">Das erste Argument für die <xref:System.Windows.Input.RoutedCommand.Execute%2A> Methode ist ein Befehlsparameter.</span><span class="sxs-lookup"><span data-stu-id="6b478-726">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="6b478-727">Die meisten Befehle ignorieren Befehlsparameter. Dieser Parameter sollte im allgemeinen `null` für Bearbeitungsbefehle.</span><span class="sxs-lookup"><span data-stu-id="6b478-727">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="6b478-728">Das zweite Argument gibt das Objekt, an dem der Befehl weitergeleitet werden.</span><span class="sxs-lookup"><span data-stu-id="6b478-728">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="6b478-729">Dieses Objekt muss implementieren die <xref:System.Windows.IInputElement> Schnittstelle, und sollte einen Handler für den angegebenen Befehl einschließen.</span><span class="sxs-lookup"><span data-stu-id="6b478-729">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="6b478-730">Im Allgemeinen wird ein Befehl ignoriert, wenn für ein Objekt aufgerufen, die den Befehl nicht behandelt.</span><span class="sxs-lookup"><span data-stu-id="6b478-730">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectToLineStart" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveToLineEnd" />
      </Docs>
    </Member>
    <Member MemberName="SelectToLineStart">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand SelectToLineStart { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand SelectToLineStart" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.SelectToLineStart" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property SelectToLineStart As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ SelectToLineStart { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectToLineStart : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.SelectToLineStart" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6b478-731">Stellt den <see cref="P:System.Windows.Documents.EditingCommands.SelectToLineStart" />-Befehl dar, mit dem angefordert wird, dass die aktuelle Auswahl bis an den Anfang der aktuellen Zeile erweitert wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b478-731">Represents the <see cref="P:System.Windows.Documents.EditingCommands.SelectToLineStart" /> command, which requests that the current selection be expanded to the beginning of the current line.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6b478-732">Der angeforderte Befehl.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b478-732">The requested command.</span>
          </span>
          <span data-ttu-id="6b478-733">Die standardmäßige Tastenkombination für diesen Befehl wird <see langword="Shift" /> + <see langword="Home" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b478-733">The default key gesture for this command is <see langword="Shift" />+<see langword="Home" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6b478-734">Es ist nicht notwendigerweise eine tatsächliche Implementierung, die für diesen Befehl für ein angegebenes Objekt reagiert. in vielen Fällen ist die Implementierung, die an einen Befehl antwortet der Verantwortung des Anwendungs-Writer.</span><span class="sxs-lookup"><span data-stu-id="6b478-734">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="6b478-735">Mit diesem Befehl wird eine systemeigene Unterstützung durch <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, und <xref:System.Windows.Controls.PasswordBox>.</span><span class="sxs-lookup"><span data-stu-id="6b478-735">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_SelectToLineStart"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="6b478-736">Verwendung von XAML-Attributen</span><span class="sxs-lookup"><span data-stu-id="6b478-736">XAML Attribute Usage</span></span>  
  
```  
<object property="SelectToLineStart"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="6b478-737">Im folgenden Beispiel wird veranschaulicht, wie auf einen Befehl für ein Objekt aufrufen, die der Befehl unterstützt wird.</span><span class="sxs-lookup"><span data-stu-id="6b478-737">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="6b478-738">In diesem Beispiel eine <xref:System.Windows.Controls.RichTextBox> dient als das Befehlsziel.</span><span class="sxs-lookup"><span data-stu-id="6b478-738">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="6b478-739">Beachten Sie, dass <xref:System.Windows.Controls.RichTextBox> implementiert die <xref:System.Windows.IInputElement> Schnittstelle (geerbt von <xref:System.Windows.FrameworkElement>), und bietet systemeigene Unterstützung für viele Bearbeitungsbefehle.</span><span class="sxs-lookup"><span data-stu-id="6b478-739">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="6b478-740">Das erste Argument für die <xref:System.Windows.Input.RoutedCommand.Execute%2A> Methode ist ein Befehlsparameter.</span><span class="sxs-lookup"><span data-stu-id="6b478-740">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="6b478-741">Die meisten Befehle ignorieren Befehlsparameter. Dieser Parameter sollte im allgemeinen `null` für Bearbeitungsbefehle.</span><span class="sxs-lookup"><span data-stu-id="6b478-741">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="6b478-742">Das zweite Argument gibt das Objekt, an dem der Befehl weitergeleitet werden.</span><span class="sxs-lookup"><span data-stu-id="6b478-742">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="6b478-743">Dieses Objekt muss implementieren die <xref:System.Windows.IInputElement> Schnittstelle, und sollte einen Handler für den angegebenen Befehl einschließen.</span><span class="sxs-lookup"><span data-stu-id="6b478-743">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="6b478-744">Im Allgemeinen wird ein Befehl ignoriert, wenn für ein Objekt aufgerufen, die den Befehl nicht behandelt.</span><span class="sxs-lookup"><span data-stu-id="6b478-744">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectToLineEnd" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveToLineStart" />
      </Docs>
    </Member>
    <Member MemberName="SelectUpByLine">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand SelectUpByLine { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand SelectUpByLine" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.SelectUpByLine" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property SelectUpByLine As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ SelectUpByLine { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectUpByLine : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.SelectUpByLine" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6b478-745">Stellt den <see cref="P:System.Windows.Documents.EditingCommands.SelectUpByLine" />-Befehl dar, mit dem angefordert wird, dass die aktuelle Auswahl um eine Zeile nach oben erweitert wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b478-745">Represents the <see cref="P:System.Windows.Documents.EditingCommands.SelectUpByLine" /> command, which requests that the current selection be expanded up by one line.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6b478-746">Der angeforderte Befehl.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b478-746">The requested command.</span>
          </span>
          <span data-ttu-id="6b478-747">Die standardmäßige Tastenkombination für diesen Befehl wird <see langword="Shift" /> + <see langword="Up" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b478-747">The default key gesture for this command is <see langword="Shift" />+<see langword="Up" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6b478-748">Es ist nicht notwendigerweise eine tatsächliche Implementierung, die für diesen Befehl für ein angegebenes Objekt reagiert. in vielen Fällen ist die Implementierung, die an einen Befehl antwortet der Verantwortung des Anwendungs-Writer.</span><span class="sxs-lookup"><span data-stu-id="6b478-748">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="6b478-749">Mit diesem Befehl wird eine systemeigene Unterstützung durch <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, und <xref:System.Windows.Controls.PasswordBox>.</span><span class="sxs-lookup"><span data-stu-id="6b478-749">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_SelectUpByLine"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="6b478-750">Verwendung von XAML-Attributen</span><span class="sxs-lookup"><span data-stu-id="6b478-750">XAML Attribute Usage</span></span>  
  
```  
<object property="SelectUpByLine"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="6b478-751">Im folgenden Beispiel wird veranschaulicht, wie auf einen Befehl für ein Objekt aufrufen, die der Befehl unterstützt wird.</span><span class="sxs-lookup"><span data-stu-id="6b478-751">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="6b478-752">In diesem Beispiel eine <xref:System.Windows.Controls.RichTextBox> dient als das Befehlsziel.</span><span class="sxs-lookup"><span data-stu-id="6b478-752">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="6b478-753">Beachten Sie, dass <xref:System.Windows.Controls.RichTextBox> implementiert die <xref:System.Windows.IInputElement> Schnittstelle (geerbt von <xref:System.Windows.FrameworkElement>), und bietet systemeigene Unterstützung für viele Bearbeitungsbefehle.</span><span class="sxs-lookup"><span data-stu-id="6b478-753">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="6b478-754">Das erste Argument für die <xref:System.Windows.Input.RoutedCommand.Execute%2A> Methode ist ein Befehlsparameter.</span><span class="sxs-lookup"><span data-stu-id="6b478-754">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="6b478-755">Die meisten Befehle ignorieren Befehlsparameter. Dieser Parameter sollte im allgemeinen `null` für Bearbeitungsbefehle.</span><span class="sxs-lookup"><span data-stu-id="6b478-755">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="6b478-756">Das zweite Argument gibt das Objekt, an dem der Befehl weitergeleitet werden.</span><span class="sxs-lookup"><span data-stu-id="6b478-756">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="6b478-757">Dieses Objekt muss implementieren die <xref:System.Windows.IInputElement> Schnittstelle, und sollte einen Handler für den angegebenen Befehl einschließen.</span><span class="sxs-lookup"><span data-stu-id="6b478-757">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="6b478-758">Im Allgemeinen wird ein Befehl ignoriert, wenn für ein Objekt aufgerufen, die den Befehl nicht behandelt.</span><span class="sxs-lookup"><span data-stu-id="6b478-758">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectDownByLine" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectUpByPage" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectUpByParagraph" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveUpByLine" />
      </Docs>
    </Member>
    <Member MemberName="SelectUpByPage">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand SelectUpByPage { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand SelectUpByPage" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.SelectUpByPage" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property SelectUpByPage As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ SelectUpByPage { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectUpByPage : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.SelectUpByPage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6b478-759">Stellt den <see cref="P:System.Windows.Documents.EditingCommands.SelectUpByPage" />-Befehl dar, mit dem angefordert wird, dass die aktuelle Auswahl um eine Seite nach oben erweitert wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b478-759">Represents the <see cref="P:System.Windows.Documents.EditingCommands.SelectUpByPage" /> command, which requests that the current selection be expanded  up by one page.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6b478-760">Der angeforderte Befehl.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b478-760">The requested command.</span>
          </span>
          <span data-ttu-id="6b478-761">Die standardmäßige Tastenkombination für diesen Befehl wird <see langword="Shift" /> + <see langword="PageUp" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b478-761">The default key gesture for this command is <see langword="Shift" />+<see langword="PageUp" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6b478-762">Es ist nicht notwendigerweise eine tatsächliche Implementierung, die für diesen Befehl für ein angegebenes Objekt reagiert. in vielen Fällen ist die Implementierung, die an einen Befehl antwortet der Verantwortung des Anwendungs-Writer.</span><span class="sxs-lookup"><span data-stu-id="6b478-762">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="6b478-763">Mit diesem Befehl wird eine systemeigene Unterstützung durch <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, und <xref:System.Windows.Controls.PasswordBox>.</span><span class="sxs-lookup"><span data-stu-id="6b478-763">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_SelectUpByPage"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="6b478-764">Verwendung von XAML-Attributen</span><span class="sxs-lookup"><span data-stu-id="6b478-764">XAML Attribute Usage</span></span>  
  
```  
<object property="SelectUpByPage"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="6b478-765">Im folgenden Beispiel wird veranschaulicht, wie auf einen Befehl für ein Objekt aufrufen, die der Befehl unterstützt wird.</span><span class="sxs-lookup"><span data-stu-id="6b478-765">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="6b478-766">In diesem Beispiel eine <xref:System.Windows.Controls.RichTextBox> dient als das Befehlsziel.</span><span class="sxs-lookup"><span data-stu-id="6b478-766">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="6b478-767">Beachten Sie, dass <xref:System.Windows.Controls.RichTextBox> implementiert die <xref:System.Windows.IInputElement> Schnittstelle (geerbt von <xref:System.Windows.FrameworkElement>), und bietet systemeigene Unterstützung für viele Bearbeitungsbefehle.</span><span class="sxs-lookup"><span data-stu-id="6b478-767">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="6b478-768">Das erste Argument für die <xref:System.Windows.Input.RoutedCommand.Execute%2A> Methode ist ein Befehlsparameter.</span><span class="sxs-lookup"><span data-stu-id="6b478-768">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="6b478-769">Die meisten Befehle ignorieren Befehlsparameter. Dieser Parameter sollte im allgemeinen `null` für Bearbeitungsbefehle.</span><span class="sxs-lookup"><span data-stu-id="6b478-769">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="6b478-770">Das zweite Argument gibt das Objekt, an dem der Befehl weitergeleitet werden.</span><span class="sxs-lookup"><span data-stu-id="6b478-770">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="6b478-771">Dieses Objekt muss implementieren die <xref:System.Windows.IInputElement> Schnittstelle, und sollte einen Handler für den angegebenen Befehl einschließen.</span><span class="sxs-lookup"><span data-stu-id="6b478-771">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="6b478-772">Im Allgemeinen wird ein Befehl ignoriert, wenn für ein Objekt aufgerufen, die den Befehl nicht behandelt.</span><span class="sxs-lookup"><span data-stu-id="6b478-772">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectDownByPage" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectUpByParagraph" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectUpByLine" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveUpByPage" />
      </Docs>
    </Member>
    <Member MemberName="SelectUpByParagraph">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand SelectUpByParagraph { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand SelectUpByParagraph" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.SelectUpByParagraph" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property SelectUpByParagraph As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ SelectUpByParagraph { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectUpByParagraph : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.SelectUpByParagraph" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6b478-773">Stellt den <see cref="P:System.Windows.Documents.EditingCommands.SelectUpByParagraph" />-Befehl dar, mit dem angefordert wird, dass die aktuelle Auswahl um einen Absatz nach oben erweitert wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b478-773">Represents the <see cref="P:System.Windows.Documents.EditingCommands.SelectUpByParagraph" /> command, which requests that the current selection be expanded up by one paragraph.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6b478-774">Der angeforderte Befehl.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b478-774">The requested command.</span>
          </span>
          <span data-ttu-id="6b478-775">Die standardmäßige Tastenkombination für diesen Befehl wird <see langword="Ctrl" /> + <see langword="Shift" /> + <see langword="Up" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b478-775">The default key gesture for this command is <see langword="Ctrl" />+<see langword="Shift" />+<see langword="Up" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6b478-776">Wenn die Einfügemarke am Anfang eines Absatzes ist, wird mit diesem Befehl die Auswahl an den Anfang des vorhergehenden Absatzes erweitert.</span><span class="sxs-lookup"><span data-stu-id="6b478-776">If the caret is at the beginning of a paragraph, this command expands the selection to the beginning of the previous paragraph.</span></span>  <span data-ttu-id="6b478-777">Andernfalls wird mit diesem Befehl die Auswahl auf den Anfang des aktuellen Absatzes erweitert.</span><span class="sxs-lookup"><span data-stu-id="6b478-777">Otherwise, this command expands the selection to the beginning of the current paragraph.</span></span>  
  
 <span data-ttu-id="6b478-778">Es ist nicht notwendigerweise eine tatsächliche Implementierung, die für diesen Befehl für ein angegebenes Objekt reagiert. in vielen Fällen ist die Implementierung, die an einen Befehl antwortet der Verantwortung des Anwendungs-Writer.</span><span class="sxs-lookup"><span data-stu-id="6b478-778">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="6b478-779">Mit diesem Befehl wird eine systemeigene Unterstützung durch <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, und <xref:System.Windows.Controls.PasswordBox>.</span><span class="sxs-lookup"><span data-stu-id="6b478-779">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_SelectUpByParagraph"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="6b478-780">Verwendung von XAML-Attributen</span><span class="sxs-lookup"><span data-stu-id="6b478-780">XAML Attribute Usage</span></span>  
  
```  
<object property="SelectUpByParagraph"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="6b478-781">Im folgenden Beispiel wird veranschaulicht, wie auf einen Befehl für ein Objekt aufrufen, die der Befehl unterstützt wird.</span><span class="sxs-lookup"><span data-stu-id="6b478-781">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="6b478-782">In diesem Beispiel eine <xref:System.Windows.Controls.RichTextBox> dient als das Befehlsziel.</span><span class="sxs-lookup"><span data-stu-id="6b478-782">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="6b478-783">Beachten Sie, dass <xref:System.Windows.Controls.RichTextBox> implementiert die <xref:System.Windows.IInputElement> Schnittstelle (geerbt von <xref:System.Windows.FrameworkElement>), und bietet systemeigene Unterstützung für viele Bearbeitungsbefehle.</span><span class="sxs-lookup"><span data-stu-id="6b478-783">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="6b478-784">Das erste Argument für die <xref:System.Windows.Input.RoutedCommand.Execute%2A> Methode ist ein Befehlsparameter.</span><span class="sxs-lookup"><span data-stu-id="6b478-784">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="6b478-785">Die meisten Befehle ignorieren Befehlsparameter. Dieser Parameter sollte im allgemeinen `null` für Bearbeitungsbefehle.</span><span class="sxs-lookup"><span data-stu-id="6b478-785">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="6b478-786">Das zweite Argument gibt das Objekt, an dem der Befehl weitergeleitet werden.</span><span class="sxs-lookup"><span data-stu-id="6b478-786">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="6b478-787">Dieses Objekt muss implementieren die <xref:System.Windows.IInputElement> Schnittstelle, und sollte einen Handler für den angegebenen Befehl einschließen.</span><span class="sxs-lookup"><span data-stu-id="6b478-787">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="6b478-788">Im Allgemeinen wird ein Befehl ignoriert, wenn für ein Objekt aufgerufen, die den Befehl nicht behandelt.</span><span class="sxs-lookup"><span data-stu-id="6b478-788">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectDownByParagraph" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectUpByLine" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectUpByPage" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveUpByParagraph" />
      </Docs>
    </Member>
    <Member MemberName="TabBackward">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand TabBackward { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand TabBackward" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.TabBackward" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property TabBackward As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ TabBackward { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TabBackward : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.TabBackward" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6b478-789">Stellt den <see cref="P:System.Windows.Documents.EditingCommands.TabBackward" />-Befehl dar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b478-789">Represents the <see cref="P:System.Windows.Documents.EditingCommands.TabBackward" /> command.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6b478-790">Der angeforderte Befehl.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b478-790">The requested command.</span>
          </span>
          <span data-ttu-id="6b478-791">Die standardmäßige Tastenkombination für diesen Befehl wird <see langword="Shift" /> + <see langword="Tab" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b478-791">The default key gesture for this command is <see langword="Shift" />+<see langword="Tab" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6b478-792">Das Verhalten für diesen Befehl hängt von der aktuellen Auswahl ab.</span><span class="sxs-lookup"><span data-stu-id="6b478-792">The behavior for this command depends on the current selection.</span></span> <span data-ttu-id="6b478-793">Wenn die Auswahl nicht leer ist, entspricht dieser Befehl <xref:System.Windows.Documents.EditingCommands.DecreaseIndentation%2A>.</span><span class="sxs-lookup"><span data-stu-id="6b478-793">If the selection is non-empty, this command is equivalent to <xref:System.Windows.Documents.EditingCommands.DecreaseIndentation%2A>.</span></span> <span data-ttu-id="6b478-794">Wenn die Einfügemarke in eine Tabellenzelle wird (dargestellt durch die <xref:System.Windows.Documents.TableCell> Element), mit diesem Befehl verschiebt die Einfügemarke in die vorherige Zelle.</span><span class="sxs-lookup"><span data-stu-id="6b478-794">If the caret is in a table cell (represented by the <xref:System.Windows.Documents.TableCell> element), this command moves the caret to the previous cell.</span></span> <span data-ttu-id="6b478-795">Anderenfalls wird ein Tabstoppzeichen in der aktuellen Position eingefügt.</span><span class="sxs-lookup"><span data-stu-id="6b478-795">Otherwise, a tab character is inserted in current position.</span></span>  
  
 <span data-ttu-id="6b478-796">Es ist nicht notwendigerweise eine tatsächliche Implementierung, die für diesen Befehl für ein angegebenes Objekt reagiert. in vielen Fällen ist die Implementierung, die an einen Befehl antwortet der Verantwortung des Anwendungs-Writer.</span><span class="sxs-lookup"><span data-stu-id="6b478-796">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="6b478-797">Mit diesem Befehl wird eine systemeigene Unterstützung durch <xref:System.Windows.Controls.RichTextBox> und <xref:System.Windows.Controls.TextBox> (wenn die <xref:System.Windows.Controls.Primitives.TextBoxBase.AcceptsTab%2A> Eigenschaft ist `true`).</span><span class="sxs-lookup"><span data-stu-id="6b478-797">This command is natively supported by <xref:System.Windows.Controls.RichTextBox> and <xref:System.Windows.Controls.TextBox> (when the <xref:System.Windows.Controls.Primitives.TextBoxBase.AcceptsTab%2A> property is `true`).</span></span>  
  
<a name="xamlAttributeUsage_TabBackward"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="6b478-798">Verwendung von XAML-Attributen</span><span class="sxs-lookup"><span data-stu-id="6b478-798">XAML Attribute Usage</span></span>  
  
```  
<object property="TabBackward"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="6b478-799">Im folgenden Beispiel wird veranschaulicht, wie auf einen Befehl für ein Objekt aufrufen, die der Befehl unterstützt wird.</span><span class="sxs-lookup"><span data-stu-id="6b478-799">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="6b478-800">In diesem Beispiel eine <xref:System.Windows.Controls.RichTextBox> dient als das Befehlsziel.</span><span class="sxs-lookup"><span data-stu-id="6b478-800">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="6b478-801">Beachten Sie, dass <xref:System.Windows.Controls.RichTextBox> implementiert die <xref:System.Windows.IInputElement> Schnittstelle (geerbt von <xref:System.Windows.FrameworkElement>), und bietet systemeigene Unterstützung für viele Bearbeitungsbefehle.</span><span class="sxs-lookup"><span data-stu-id="6b478-801">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="6b478-802">Das erste Argument für die <xref:System.Windows.Input.RoutedCommand.Execute%2A> Methode ist ein Befehlsparameter.</span><span class="sxs-lookup"><span data-stu-id="6b478-802">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="6b478-803">Die meisten Befehle ignorieren Befehlsparameter. Dieser Parameter sollte im allgemeinen `null` für Bearbeitungsbefehle.</span><span class="sxs-lookup"><span data-stu-id="6b478-803">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="6b478-804">Das zweite Argument gibt das Objekt, an dem der Befehl weitergeleitet werden.</span><span class="sxs-lookup"><span data-stu-id="6b478-804">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="6b478-805">Dieses Objekt muss implementieren die <xref:System.Windows.IInputElement> Schnittstelle, und sollte einen Handler für den angegebenen Befehl einschließen.</span><span class="sxs-lookup"><span data-stu-id="6b478-805">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="6b478-806">Im Allgemeinen wird ein Befehl ignoriert, wenn für ein Objekt aufgerufen, die den Befehl nicht behandelt.</span><span class="sxs-lookup"><span data-stu-id="6b478-806">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
```csharp  
RichTextBox rTB = new RichTextBox();  
  
EditingCommands.ToggleInsert.Execute(null, rTB);  
  
```  
  
```vb  
            Dim rTB As New RichTextBox()  
  
            EditingCommands.ToggleInsert.Execute(Nothing, rTB)  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.TabForward" />
      </Docs>
    </Member>
    <Member MemberName="TabForward">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand TabForward { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand TabForward" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.TabForward" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property TabForward As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ TabForward { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TabForward : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.TabForward" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6b478-807">Stellt den <see cref="P:System.Windows.Documents.EditingCommands.TabForward" />-Befehl dar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b478-807">Represents the <see cref="P:System.Windows.Documents.EditingCommands.TabForward" /> command.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6b478-808">Der angeforderte Befehl.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b478-808">The requested command.</span>
          </span>
          <span data-ttu-id="6b478-809">Die Standardtastenkombination für diesen Befehl ist <see langword="Tab" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b478-809">The default key gesture for this command is <see langword="Tab" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6b478-810">Das Verhalten für diesen Befehl hängt von der aktuellen Auswahl ab.</span><span class="sxs-lookup"><span data-stu-id="6b478-810">The behavior for this command depends on the current selection.</span></span> <span data-ttu-id="6b478-811">Wenn die Auswahl nicht leer ist, oder wenn die Auswahl leer ist, und der aktuellen Position der Einfügemarke befindet sich am Anfang eines Absatzes, dieser Befehl entspricht <xref:System.Windows.Documents.EditingCommands.IncreaseIndentation%2A>.</span><span class="sxs-lookup"><span data-stu-id="6b478-811">If the selection is non-empty, or if the selection is empty and the current caret position is at the beginning of a  paragraph, this command is equivalent to <xref:System.Windows.Documents.EditingCommands.IncreaseIndentation%2A>.</span></span> <span data-ttu-id="6b478-812">Wenn die Einfügemarke in eine Tabellenzelle wird (dargestellt durch die <xref:System.Windows.Documents.TableCell> Element), mit diesem Befehl verschiebt die Einfügemarke in die nächste Zelle.</span><span class="sxs-lookup"><span data-stu-id="6b478-812">If the caret is in a table cell (represented by the <xref:System.Windows.Documents.TableCell> element), this command moves the caret to the next cell.</span></span> <span data-ttu-id="6b478-813">Wenn die Einfügemarke in der letzten Zelle einer Tabelle ist, bewirkt, dass dieser Befehl eine neue Zeile, die Tabelle mit der Einfügemarke in der ersten Zelle der neuen Zeile positioniert angefügt werden soll.</span><span class="sxs-lookup"><span data-stu-id="6b478-813">If the caret is in the last cell of a table, this command causes a new row to be appended to the table, with the caret positioned in the first cell of the new row.</span></span>  <span data-ttu-id="6b478-814">Anderenfalls wird ein Tabstoppzeichen in der aktuellen Position eingefügt.</span><span class="sxs-lookup"><span data-stu-id="6b478-814">Otherwise, a tab character is inserted in current position.</span></span>  
  
 <span data-ttu-id="6b478-815">Es ist nicht notwendigerweise eine tatsächliche Implementierung, die für diesen Befehl für ein angegebenes Objekt reagiert. in vielen Fällen ist die Implementierung, die an einen Befehl antwortet der Verantwortung des Anwendungs-Writer.</span><span class="sxs-lookup"><span data-stu-id="6b478-815">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="6b478-816">Mit diesem Befehl wird eine systemeigene Unterstützung durch <xref:System.Windows.Controls.RichTextBox> und <xref:System.Windows.Controls.TextBox> (wenn die <xref:System.Windows.Controls.Primitives.TextBoxBase.AcceptsTab%2A> Eigenschaft ist `true`).</span><span class="sxs-lookup"><span data-stu-id="6b478-816">This command is natively supported by <xref:System.Windows.Controls.RichTextBox> and <xref:System.Windows.Controls.TextBox> (when the <xref:System.Windows.Controls.Primitives.TextBoxBase.AcceptsTab%2A> property is `true`).</span></span>  
  
<a name="xamlAttributeUsage_TabForward"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="6b478-817">Verwendung von XAML-Attributen</span><span class="sxs-lookup"><span data-stu-id="6b478-817">XAML Attribute Usage</span></span>  
  
```  
<object property="TabForward"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="6b478-818">Im folgenden Beispiel wird veranschaulicht, wie auf einen Befehl für ein Objekt aufrufen, die der Befehl unterstützt wird.</span><span class="sxs-lookup"><span data-stu-id="6b478-818">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="6b478-819">In diesem Beispiel eine <xref:System.Windows.Controls.RichTextBox> dient als das Befehlsziel.</span><span class="sxs-lookup"><span data-stu-id="6b478-819">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="6b478-820">Beachten Sie, dass <xref:System.Windows.Controls.RichTextBox> implementiert die <xref:System.Windows.IInputElement> Schnittstelle (geerbt von <xref:System.Windows.FrameworkElement>), und bietet systemeigene Unterstützung für viele Bearbeitungsbefehle.</span><span class="sxs-lookup"><span data-stu-id="6b478-820">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="6b478-821">Das erste Argument für die <xref:System.Windows.Input.RoutedCommand.Execute%2A> Methode ist ein Befehlsparameter.</span><span class="sxs-lookup"><span data-stu-id="6b478-821">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="6b478-822">Die meisten Befehle ignorieren Befehlsparameter. Dieser Parameter sollte im allgemeinen `null` für Bearbeitungsbefehle.</span><span class="sxs-lookup"><span data-stu-id="6b478-822">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="6b478-823">Das zweite Argument gibt das Objekt, an dem der Befehl weitergeleitet werden.</span><span class="sxs-lookup"><span data-stu-id="6b478-823">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="6b478-824">Dieses Objekt muss implementieren die <xref:System.Windows.IInputElement> Schnittstelle, und sollte einen Handler für den angegebenen Befehl einschließen.</span><span class="sxs-lookup"><span data-stu-id="6b478-824">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="6b478-825">Im Allgemeinen wird ein Befehl ignoriert, wenn für ein Objekt aufgerufen, die den Befehl nicht behandelt.</span><span class="sxs-lookup"><span data-stu-id="6b478-825">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
```csharp  
RichTextBox rTB = new RichTextBox();  
  
EditingCommands.ToggleInsert.Execute(null, rTB);  
  
```  
  
```vb  
            Dim rTB As New RichTextBox()  
  
            EditingCommands.ToggleInsert.Execute(Nothing, rTB)  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.TabBackward" />
      </Docs>
    </Member>
    <Member MemberName="ToggleBold">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand ToggleBold { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand ToggleBold" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.ToggleBold" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ToggleBold As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ ToggleBold { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ToggleBold : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.ToggleBold" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6b478-826">Stellt den <see cref="P:System.Windows.Documents.EditingCommands.ToggleBold" />-Befehl dar, mit dem angefordert wird, dass die <see cref="T:System.Windows.Documents.Bold" />-Formatierung für die aktuelle Auswahl umgeschaltet wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b478-826">Represents the <see cref="P:System.Windows.Documents.EditingCommands.ToggleBold" /> command, which requests that <see cref="T:System.Windows.Documents.Bold" /> formatting be toggled on the current selection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6b478-827">Der angeforderte Befehl.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b478-827">The requested command.</span>
          </span>
          <span data-ttu-id="6b478-828">Die standardmäßige Tastenkombination für diesen Befehl wird <see langword="Ctrl" /> + <see langword="B" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b478-828">The default key gesture for this command is <see langword="Ctrl" />+<see langword="B" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6b478-829">Wenn die <xref:System.Windows.FontWeight> für die aktuelle Auswahl im Bereich von <xref:System.Windows.FontWeights.Thin%2A> auf <xref:System.Windows.FontWeights.SemiBold%2A>, <xref:System.Windows.FontWeights.Bold%2A> auf die aktuelle Auswahl angewendet wird.</span><span class="sxs-lookup"><span data-stu-id="6b478-829">If the <xref:System.Windows.FontWeight> for the current selection is in the range from <xref:System.Windows.FontWeights.Thin%2A> to <xref:System.Windows.FontWeights.SemiBold%2A>, <xref:System.Windows.FontWeights.Bold%2A> is applied to the current selection.</span></span>  <span data-ttu-id="6b478-830">Andernfalls <xref:System.Windows.FontWeights.Normal%2A> angewendet wird.</span><span class="sxs-lookup"><span data-stu-id="6b478-830">Otherwise, <xref:System.Windows.FontWeights.Normal%2A> is applied.</span></span>  <span data-ttu-id="6b478-831">Für eine vergleichende Übersicht <xref:System.Windows.FontWeight> -Werte finden Sie in <xref:System.Windows.FontWeights>.</span><span class="sxs-lookup"><span data-stu-id="6b478-831">For a comparative list of <xref:System.Windows.FontWeight> values, see <xref:System.Windows.FontWeights>.</span></span>  
  
 <span data-ttu-id="6b478-832">Wenn die Auswahl leer ist, und die Einfügemarke innerhalb eines Worts angezeigt wird, wird die Auswahl erweitert, um das ganze Wort enthalten.</span><span class="sxs-lookup"><span data-stu-id="6b478-832">When the selection is empty and the caret is within a word, the selection is expanded to include the entire word.</span></span>  
  
 <span data-ttu-id="6b478-833">Es ist nicht notwendigerweise eine tatsächliche Implementierung, die für diesen Befehl für ein angegebenes Objekt reagiert. in vielen Fällen ist die Implementierung, die an einen Befehl antwortet der Verantwortung des Anwendungs-Writer.</span><span class="sxs-lookup"><span data-stu-id="6b478-833">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="6b478-834">Mit diesem Befehl wird eine systemeigene Unterstützung durch <xref:System.Windows.Controls.RichTextBox>.</span><span class="sxs-lookup"><span data-stu-id="6b478-834">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>.</span></span>  
  
<a name="xamlAttributeUsage_ToggleBold"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="6b478-835">Verwendung von XAML-Attributen</span><span class="sxs-lookup"><span data-stu-id="6b478-835">XAML Attribute Usage</span></span>  
  
```  
<object property="ToggleBold"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="6b478-836">Im folgenden Beispiel wird veranschaulicht, wie auf einen Befehl für ein Objekt aufrufen, die der Befehl unterstützt wird.</span><span class="sxs-lookup"><span data-stu-id="6b478-836">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="6b478-837">In diesem Beispiel eine <xref:System.Windows.Controls.RichTextBox> dient als das Befehlsziel.</span><span class="sxs-lookup"><span data-stu-id="6b478-837">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="6b478-838">Beachten Sie, dass <xref:System.Windows.Controls.RichTextBox> implementiert die <xref:System.Windows.IInputElement> Schnittstelle (geerbt von <xref:System.Windows.FrameworkElement>), und bietet systemeigene Unterstützung für viele Bearbeitungsbefehle.</span><span class="sxs-lookup"><span data-stu-id="6b478-838">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="6b478-839">Das erste Argument für die <xref:System.Windows.Input.RoutedCommand.Execute%2A> Methode ist ein Befehlsparameter.</span><span class="sxs-lookup"><span data-stu-id="6b478-839">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="6b478-840">Die meisten Befehle ignorieren Befehlsparameter. Dieser Parameter sollte im allgemeinen `null` für Bearbeitungsbefehle.</span><span class="sxs-lookup"><span data-stu-id="6b478-840">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="6b478-841">Das zweite Argument gibt das Objekt, an dem der Befehl weitergeleitet werden.</span><span class="sxs-lookup"><span data-stu-id="6b478-841">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="6b478-842">Dieses Objekt muss implementieren die <xref:System.Windows.IInputElement> Schnittstelle, und sollte einen Handler für den angegebenen Befehl einschließen.</span><span class="sxs-lookup"><span data-stu-id="6b478-842">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="6b478-843">Im Allgemeinen wird ein Befehl ignoriert, wenn für ein Objekt aufgerufen, die den Befehl nicht behandelt.</span><span class="sxs-lookup"><span data-stu-id="6b478-843">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.ToggleItalic" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.ToggleUnderline" />
      </Docs>
    </Member>
    <Member MemberName="ToggleBullets">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand ToggleBullets { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand ToggleBullets" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.ToggleBullets" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ToggleBullets As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ ToggleBullets { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ToggleBullets : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.ToggleBullets" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6b478-844">Stellt den <see cref="P:System.Windows.Documents.EditingCommands.ToggleBullets" />-Befehl dar, mit dem angefordert wird, dass die Formatierung als ungeordnete Liste (auch als Aufzählung bezeichnet) für die aktuelle Auswahl umgeschaltet wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b478-844">Represents the <see cref="P:System.Windows.Documents.EditingCommands.ToggleBullets" /> command, which requests that unordered list (also referred to as bulleted list) formatting be toggled on the current selection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6b478-845">Der angeforderte Befehl.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b478-845">The requested command.</span>
          </span>
          <span data-ttu-id="6b478-846">Die standardmäßige Tastenkombination für diesen Befehl wird <see langword="Ctrl" /> + <see langword="Shift" /> + <see langword="L" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b478-846">The default key gesture for this command is <see langword="Ctrl" />+<see langword="Shift" />+<see langword="L" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6b478-847">Mit diesem Befehl bezieht sich immer nur die <xref:System.Windows.Documents.Paragraph> Ebene.</span><span class="sxs-lookup"><span data-stu-id="6b478-847">This command operates at the <xref:System.Windows.Documents.Paragraph> level.</span></span>  <span data-ttu-id="6b478-848">Wenn dieser Befehl aufgerufen wird, für einen ausgewählten Teil des Inhalts innerhalb eines Absatzes (einschließlich eine leere Auswahl, in dem sich die Einfügemarke innerhalb eines Absatzes wird), wird die angeforderte Auswirkungen auf den gesamten Absatz angewendet.</span><span class="sxs-lookup"><span data-stu-id="6b478-848">If this command is invoked on a partial selection of content within a paragraph (including an empty selection where the caret is within a paragraph), the requested effect is applied to the entire paragraph.</span></span>  <span data-ttu-id="6b478-849">Wenn Sie diesen Befehl für eine Auswahl aufgerufen wird, die mehrere Absätze umfasst, wird die Auswirkung auf den gesamten Inhalt der einzelnen Absätze angewendet, die in der Auswahl beteiligt ist.</span><span class="sxs-lookup"><span data-stu-id="6b478-849">If this command is invoked on a selection that spans multiple paragraphs, the effect is applied to the entire contents of each paragraph that participates in the selection.</span></span>  
  
 <span data-ttu-id="6b478-850">Es ist nicht notwendigerweise eine tatsächliche Implementierung, die für diesen Befehl für ein angegebenes Objekt reagiert. in vielen Fällen ist die Implementierung, die an einen Befehl antwortet der Verantwortung des Anwendungs-Writer.</span><span class="sxs-lookup"><span data-stu-id="6b478-850">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="6b478-851">Mit diesem Befehl wird eine systemeigene Unterstützung durch <xref:System.Windows.Controls.RichTextBox>.</span><span class="sxs-lookup"><span data-stu-id="6b478-851">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>.</span></span>  
  
<a name="xamlAttributeUsage_ToggleBullets"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="6b478-852">Verwendung von XAML-Attributen</span><span class="sxs-lookup"><span data-stu-id="6b478-852">XAML Attribute Usage</span></span>  
  
```  
<object property="ToggleBullets"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="6b478-853">Im folgenden Beispiel wird veranschaulicht, wie auf einen Befehl für ein Objekt aufrufen, die der Befehl unterstützt wird.</span><span class="sxs-lookup"><span data-stu-id="6b478-853">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="6b478-854">In diesem Beispiel eine <xref:System.Windows.Controls.RichTextBox> dient als das Befehlsziel.</span><span class="sxs-lookup"><span data-stu-id="6b478-854">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="6b478-855">Beachten Sie, dass <xref:System.Windows.Controls.RichTextBox> implementiert die <xref:System.Windows.IInputElement> Schnittstelle (geerbt von <xref:System.Windows.FrameworkElement>), und bietet systemeigene Unterstützung für viele Bearbeitungsbefehle.</span><span class="sxs-lookup"><span data-stu-id="6b478-855">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="6b478-856">Das erste Argument für die <xref:System.Windows.Input.RoutedCommand.Execute%2A> Methode ist ein Befehlsparameter.</span><span class="sxs-lookup"><span data-stu-id="6b478-856">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="6b478-857">Die meisten Befehle ignorieren Befehlsparameter. Dieser Parameter sollte im allgemeinen `null` für Bearbeitungsbefehle.</span><span class="sxs-lookup"><span data-stu-id="6b478-857">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="6b478-858">Das zweite Argument gibt das Objekt, an dem der Befehl weitergeleitet werden.</span><span class="sxs-lookup"><span data-stu-id="6b478-858">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="6b478-859">Dieses Objekt muss implementieren die <xref:System.Windows.IInputElement> Schnittstelle, und sollte einen Handler für den angegebenen Befehl einschließen.</span><span class="sxs-lookup"><span data-stu-id="6b478-859">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="6b478-860">Im Allgemeinen wird ein Befehl ignoriert, wenn für ein Objekt aufgerufen, die den Befehl nicht behandelt.</span><span class="sxs-lookup"><span data-stu-id="6b478-860">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.ToggleNumbering" />
      </Docs>
    </Member>
    <Member MemberName="ToggleInsert">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand ToggleInsert { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand ToggleInsert" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.ToggleInsert" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ToggleInsert As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ ToggleInsert { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ToggleInsert : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.ToggleInsert" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6b478-861">Stellt den <see cref="P:System.Windows.Documents.EditingCommands.ToggleInsert" />-Befehl dar, mit dem der Eingabemodus zwischen Einfügen und Überschreiben umgeschaltet wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b478-861">Represents the <see cref="P:System.Windows.Documents.EditingCommands.ToggleInsert" /> command, which toggles the typing mode between Insert and Overtype.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6b478-862">Der angeforderte Befehl.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b478-862">The requested command.</span>
          </span>
          <span data-ttu-id="6b478-863">Die Standardtastenkombination für diesen Befehl ist <see langword="Insert" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b478-863">The default key gesture for this command is <see langword="Insert" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6b478-864">Es ist nicht notwendigerweise eine tatsächliche Implementierung, die für diesen Befehl für ein angegebenes Objekt reagiert. in vielen Fällen ist die Implementierung, die an einen Befehl antwortet der Verantwortung des Anwendungs-Writer.</span><span class="sxs-lookup"><span data-stu-id="6b478-864">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="6b478-865">Mit diesem Befehl wird eine systemeigene Unterstützung durch <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, und <xref:System.Windows.Controls.PasswordBox>.</span><span class="sxs-lookup"><span data-stu-id="6b478-865">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_ToggleInsert"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="6b478-866">Verwendung von XAML-Attributen</span><span class="sxs-lookup"><span data-stu-id="6b478-866">XAML Attribute Usage</span></span>  
  
```  
<object property="ToggleInsert"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="6b478-867">Im folgenden Beispiel wird veranschaulicht, wie auf einen Befehl für ein Objekt aufrufen, die der Befehl unterstützt wird.</span><span class="sxs-lookup"><span data-stu-id="6b478-867">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="6b478-868">In diesem Beispiel eine <xref:System.Windows.Controls.RichTextBox> dient als das Befehlsziel.</span><span class="sxs-lookup"><span data-stu-id="6b478-868">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="6b478-869">Beachten Sie, dass <xref:System.Windows.Controls.RichTextBox> implementiert die <xref:System.Windows.IInputElement> Schnittstelle (geerbt von <xref:System.Windows.FrameworkElement>), und bietet systemeigene Unterstützung für viele Bearbeitungsbefehle.</span><span class="sxs-lookup"><span data-stu-id="6b478-869">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="6b478-870">Das erste Argument für die <xref:System.Windows.Input.RoutedCommand.Execute%2A> Methode ist ein Befehlsparameter.</span><span class="sxs-lookup"><span data-stu-id="6b478-870">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="6b478-871">Die meisten Befehle ignorieren Befehlsparameter. Dieser Parameter sollte im allgemeinen `null` für Bearbeitungsbefehle.</span><span class="sxs-lookup"><span data-stu-id="6b478-871">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="6b478-872">Das zweite Argument gibt das Objekt, an dem der Befehl weitergeleitet werden.</span><span class="sxs-lookup"><span data-stu-id="6b478-872">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="6b478-873">Dieses Objekt muss implementieren die <xref:System.Windows.IInputElement> Schnittstelle, und sollte einen Handler für den angegebenen Befehl einschließen.</span><span class="sxs-lookup"><span data-stu-id="6b478-873">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="6b478-874">Im Allgemeinen wird ein Befehl ignoriert, wenn für ein Objekt aufgerufen, die den Befehl nicht behandelt.</span><span class="sxs-lookup"><span data-stu-id="6b478-874">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToggleItalic">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand ToggleItalic { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand ToggleItalic" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.ToggleItalic" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ToggleItalic As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ ToggleItalic { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ToggleItalic : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.ToggleItalic" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6b478-875">Stellt den <see cref="P:System.Windows.Documents.EditingCommands.ToggleItalic" />-Befehl dar, mit dem angefordert wird, dass die <see cref="T:System.Windows.Documents.Italic" />-Formatierung für die aktuelle Auswahl umgeschaltet wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b478-875">Represents the <see cref="P:System.Windows.Documents.EditingCommands.ToggleItalic" /> command, which requests that <see cref="T:System.Windows.Documents.Italic" /> formatting be toggled on the current selection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6b478-876">Der angeforderte Befehl.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b478-876">The requested command.</span>
          </span>
          <span data-ttu-id="6b478-877">Die standardmäßige Tastenkombination für diesen Befehl wird <see langword="Ctrl" /> + <see langword="I" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b478-877">The default key gesture for this command is <see langword="Ctrl" />+<see langword="I" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6b478-878">Wenn die <xref:System.Windows.FontStyle> für die aktuelle Auswahl ist <xref:System.Windows.FontStyles.Normal%2A>, <xref:System.Windows.FontStyles.Italic%2A> auf die aktuelle Auswahl angewendet wird.</span><span class="sxs-lookup"><span data-stu-id="6b478-878">If the <xref:System.Windows.FontStyle> for the current selection is <xref:System.Windows.FontStyles.Normal%2A>, <xref:System.Windows.FontStyles.Italic%2A> is applied to the current selection.</span></span>  <span data-ttu-id="6b478-879">Andernfalls <xref:System.Windows.FontStyles.Normal%2A> angewendet wird.</span><span class="sxs-lookup"><span data-stu-id="6b478-879">Otherwise, <xref:System.Windows.FontStyles.Normal%2A> is applied.</span></span>  
  
 <span data-ttu-id="6b478-880">Wenn die Auswahl leer ist, und die Einfügemarke innerhalb eines Worts angezeigt wird, wird die Auswahl erweitert, um das ganze Wort enthalten.</span><span class="sxs-lookup"><span data-stu-id="6b478-880">When the selection is empty and the caret is within a word, the selection is expanded to include the entire word.</span></span>  
  
 <span data-ttu-id="6b478-881">Es ist nicht notwendigerweise eine tatsächliche Implementierung, die für diesen Befehl für ein angegebenes Objekt reagiert. in vielen Fällen ist die Implementierung, die an einen Befehl antwortet der Verantwortung des Anwendungs-Writer.</span><span class="sxs-lookup"><span data-stu-id="6b478-881">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="6b478-882">Mit diesem Befehl wird eine systemeigene Unterstützung durch <xref:System.Windows.Controls.RichTextBox>.</span><span class="sxs-lookup"><span data-stu-id="6b478-882">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>.</span></span>  
  
<a name="xamlAttributeUsage_ToggleItalic"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="6b478-883">Verwendung von XAML-Attributen</span><span class="sxs-lookup"><span data-stu-id="6b478-883">XAML Attribute Usage</span></span>  
  
```  
<object property="ToggleItalic"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="6b478-884">Im folgenden Beispiel wird veranschaulicht, wie auf einen Befehl für ein Objekt aufrufen, die der Befehl unterstützt wird.</span><span class="sxs-lookup"><span data-stu-id="6b478-884">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="6b478-885">In diesem Beispiel eine <xref:System.Windows.Controls.RichTextBox> dient als das Befehlsziel.</span><span class="sxs-lookup"><span data-stu-id="6b478-885">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="6b478-886">Beachten Sie, dass <xref:System.Windows.Controls.RichTextBox> implementiert die <xref:System.Windows.IInputElement> Schnittstelle (geerbt von <xref:System.Windows.FrameworkElement>), und bietet systemeigene Unterstützung für viele Bearbeitungsbefehle.</span><span class="sxs-lookup"><span data-stu-id="6b478-886">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="6b478-887">Das erste Argument für die <xref:System.Windows.Input.RoutedCommand.Execute%2A> Methode ist ein Befehlsparameter.</span><span class="sxs-lookup"><span data-stu-id="6b478-887">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="6b478-888">Die meisten Befehle ignorieren Befehlsparameter. Dieser Parameter sollte im allgemeinen `null` für Bearbeitungsbefehle.</span><span class="sxs-lookup"><span data-stu-id="6b478-888">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="6b478-889">Das zweite Argument gibt das Objekt, an dem der Befehl weitergeleitet werden.</span><span class="sxs-lookup"><span data-stu-id="6b478-889">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="6b478-890">Dieses Objekt muss implementieren die <xref:System.Windows.IInputElement> Schnittstelle, und sollte einen Handler für den angegebenen Befehl einschließen.</span><span class="sxs-lookup"><span data-stu-id="6b478-890">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="6b478-891">Im Allgemeinen wird ein Befehl ignoriert, wenn für ein Objekt aufgerufen, die den Befehl nicht behandelt.</span><span class="sxs-lookup"><span data-stu-id="6b478-891">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.ToggleBold" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.ToggleUnderline" />
      </Docs>
    </Member>
    <Member MemberName="ToggleNumbering">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand ToggleNumbering { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand ToggleNumbering" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.ToggleNumbering" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ToggleNumbering As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ ToggleNumbering { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ToggleNumbering : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.ToggleNumbering" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6b478-892">Stellt den <see cref="P:System.Windows.Documents.EditingCommands.ToggleNumbering" />-Befehl dar, mit dem angefordert wird, dass die Formatierung als geordnete Liste (auch als nummerierte Liste bezeichnet) für die aktuelle Auswahl umgeschaltet wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b478-892">Represents the <see cref="P:System.Windows.Documents.EditingCommands.ToggleNumbering" /> command, which requests that ordered list (also referred to as numbered list) formatting be toggled on the current selection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6b478-893">Der angeforderte Befehl.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b478-893">The requested command.</span>
          </span>
          <span data-ttu-id="6b478-894">Die standardmäßige Tastenkombination für diesen Befehl wird <see langword="Ctrl" /> + <see langword="Shift" /> + <see langword="N" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b478-894">The default key gesture for this command is <see langword="Ctrl" />+<see langword="Shift" />+<see langword="N" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6b478-895">Mit diesem Befehl bezieht sich immer nur die <xref:System.Windows.Documents.Paragraph> Ebene.</span><span class="sxs-lookup"><span data-stu-id="6b478-895">This command operates at the <xref:System.Windows.Documents.Paragraph> level.</span></span>  <span data-ttu-id="6b478-896">Wenn dieser Befehl aufgerufen wird, für einen ausgewählten Teil des Inhalts innerhalb eines Absatzes (einschließlich eine leere Auswahl, in dem sich die Einfügemarke innerhalb eines Absatzes wird), wird die angeforderte Auswirkungen auf den gesamten Absatz angewendet.</span><span class="sxs-lookup"><span data-stu-id="6b478-896">If this command is invoked on a partial selection of content within a paragraph (including an empty selection where the caret is within a paragraph), the requested effect is applied to the entire paragraph.</span></span>  <span data-ttu-id="6b478-897">Wenn Sie diesen Befehl für eine Auswahl aufgerufen wird, die mehrere Absätze umfasst, wird die Auswirkung auf den gesamten Inhalt der einzelnen Absätze angewendet, die in der Auswahl beteiligt ist.</span><span class="sxs-lookup"><span data-stu-id="6b478-897">If this command is invoked on a selection that spans multiple paragraphs, the effect is applied to the entire contents of each paragraph that participates in the selection.</span></span>  
  
 <span data-ttu-id="6b478-898">Es ist nicht notwendigerweise eine tatsächliche Implementierung, die für diesen Befehl für ein angegebenes Objekt reagiert. in vielen Fällen ist die Implementierung, die an einen Befehl antwortet der Verantwortung des Anwendungs-Writer.</span><span class="sxs-lookup"><span data-stu-id="6b478-898">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="6b478-899">Mit diesem Befehl wird eine systemeigene Unterstützung durch <xref:System.Windows.Controls.RichTextBox>.</span><span class="sxs-lookup"><span data-stu-id="6b478-899">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>.</span></span>  
  
<a name="xamlAttributeUsage_ToggleNumbering"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="6b478-900">Verwendung von XAML-Attributen</span><span class="sxs-lookup"><span data-stu-id="6b478-900">XAML Attribute Usage</span></span>  
  
```  
<object property="ToggleNumbering"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="6b478-901">Im folgenden Beispiel wird veranschaulicht, wie auf einen Befehl für ein Objekt aufrufen, die der Befehl unterstützt wird.</span><span class="sxs-lookup"><span data-stu-id="6b478-901">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="6b478-902">In diesem Beispiel eine <xref:System.Windows.Controls.RichTextBox> dient als das Befehlsziel.</span><span class="sxs-lookup"><span data-stu-id="6b478-902">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="6b478-903">Beachten Sie, dass <xref:System.Windows.Controls.RichTextBox> implementiert die <xref:System.Windows.IInputElement> Schnittstelle (geerbt von <xref:System.Windows.FrameworkElement>), und bietet systemeigene Unterstützung für viele Bearbeitungsbefehle.</span><span class="sxs-lookup"><span data-stu-id="6b478-903">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="6b478-904">Das erste Argument für die <xref:System.Windows.Input.RoutedCommand.Execute%2A> Methode ist ein Befehlsparameter.</span><span class="sxs-lookup"><span data-stu-id="6b478-904">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="6b478-905">Die meisten Befehle ignorieren Befehlsparameter. Dieser Parameter sollte im allgemeinen `null` für Bearbeitungsbefehle.</span><span class="sxs-lookup"><span data-stu-id="6b478-905">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="6b478-906">Das zweite Argument gibt das Objekt, an dem der Befehl weitergeleitet werden.</span><span class="sxs-lookup"><span data-stu-id="6b478-906">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="6b478-907">Dieses Objekt muss implementieren die <xref:System.Windows.IInputElement> Schnittstelle, und sollte einen Handler für den angegebenen Befehl einschließen.</span><span class="sxs-lookup"><span data-stu-id="6b478-907">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="6b478-908">Im Allgemeinen wird ein Befehl ignoriert, wenn für ein Objekt aufgerufen, die den Befehl nicht behandelt.</span><span class="sxs-lookup"><span data-stu-id="6b478-908">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.ToggleItalic" />
      </Docs>
    </Member>
    <Member MemberName="ToggleSubscript">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand ToggleSubscript { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand ToggleSubscript" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.ToggleSubscript" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ToggleSubscript As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ ToggleSubscript { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ToggleSubscript : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.ToggleSubscript" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6b478-909">Stellt den <see cref="P:System.Windows.Documents.EditingCommands.ToggleSubscript" />-Befehl dar, mit dem angefordert wird, dass die Formatierung als tiefgestellt für die aktuelle Auswahl umgeschaltet wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b478-909">Represents the <see cref="P:System.Windows.Documents.EditingCommands.ToggleSubscript" /> command, which requests that subscript formatting be toggled on the current selection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6b478-910">Der angeforderte Befehl.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b478-910">The requested command.</span>
          </span>
          <span data-ttu-id="6b478-911">Die standardmäßige Tastenkombination für diesen Befehl wird <see langword="Ctrl" /> + <see langword="OemPlus" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b478-911">The default key gesture for this command is <see langword="Ctrl" />+<see langword="OemPlus" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6b478-912">Es ist nicht notwendigerweise eine tatsächliche Implementierung, die für diesen Befehl für ein angegebenes Objekt reagiert. in vielen Fällen ist die Implementierung, die an einen Befehl antwortet der Verantwortung des Anwendungs-Writer.</span><span class="sxs-lookup"><span data-stu-id="6b478-912">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
<a name="xamlAttributeUsage_ToggleSubscript"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="6b478-913">Verwendung von XAML-Attributen</span><span class="sxs-lookup"><span data-stu-id="6b478-913">XAML Attribute Usage</span></span>  
  
```  
<object property="ToggleSubscript"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="6b478-914">Im folgenden Beispiel wird veranschaulicht, wie auf einen Befehl für ein Objekt aufrufen, die der Befehl unterstützt wird.</span><span class="sxs-lookup"><span data-stu-id="6b478-914">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="6b478-915">In diesem Beispiel eine <xref:System.Windows.Controls.RichTextBox> dient als das Befehlsziel.</span><span class="sxs-lookup"><span data-stu-id="6b478-915">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="6b478-916">Beachten Sie, dass <xref:System.Windows.Controls.RichTextBox> implementiert die <xref:System.Windows.IInputElement> Schnittstelle (geerbt von <xref:System.Windows.FrameworkElement>), und bietet systemeigene Unterstützung für viele Bearbeitungsbefehle.</span><span class="sxs-lookup"><span data-stu-id="6b478-916">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="6b478-917">Das erste Argument für die <xref:System.Windows.Input.RoutedCommand.Execute%2A> Methode ist ein Befehlsparameter.</span><span class="sxs-lookup"><span data-stu-id="6b478-917">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="6b478-918">Die meisten Befehle ignorieren Befehlsparameter. Dieser Parameter sollte im allgemeinen `null` für Bearbeitungsbefehle.</span><span class="sxs-lookup"><span data-stu-id="6b478-918">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="6b478-919">Das zweite Argument gibt das Objekt, an dem der Befehl weitergeleitet werden.</span><span class="sxs-lookup"><span data-stu-id="6b478-919">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="6b478-920">Dieses Objekt muss implementieren die <xref:System.Windows.IInputElement> Schnittstelle, und sollte einen Handler für den angegebenen Befehl einschließen.</span><span class="sxs-lookup"><span data-stu-id="6b478-920">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="6b478-921">Im Allgemeinen wird ein Befehl ignoriert, wenn für ein Objekt aufgerufen, die den Befehl nicht behandelt.</span><span class="sxs-lookup"><span data-stu-id="6b478-921">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.ToggleSuperscript" />
      </Docs>
    </Member>
    <Member MemberName="ToggleSuperscript">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand ToggleSuperscript { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand ToggleSuperscript" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.ToggleSuperscript" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ToggleSuperscript As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ ToggleSuperscript { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ToggleSuperscript : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.ToggleSuperscript" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6b478-922">Stellt den <see cref="P:System.Windows.Documents.EditingCommands.ToggleSuperscript" />-Befehl dar, mit dem angefordert wird, dass die Formatierung als hochgestellt für die aktuelle Auswahl umgeschaltet wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b478-922">Represents the <see cref="P:System.Windows.Documents.EditingCommands.ToggleSuperscript" /> command, which requests that superscript formatting be toggled on the current selection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6b478-923">Der angeforderte Befehl.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b478-923">The requested command.</span>
          </span>
          <span data-ttu-id="6b478-924">Die standardmäßige Tastenkombination für diesen Befehl wird <see langword="Ctrl" /> + <see langword="Shift" /> + <see langword="OemPlus" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b478-924">The default key gesture for this command is <see langword="Ctrl" />+<see langword="Shift" />+<see langword="OemPlus" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6b478-925">Es ist nicht notwendigerweise eine tatsächliche Implementierung, die für diesen Befehl für ein angegebenes Objekt reagiert. in vielen Fällen ist die Implementierung, die an einen Befehl antwortet der Verantwortung des Anwendungs-Writer.</span><span class="sxs-lookup"><span data-stu-id="6b478-925">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
<a name="xamlAttributeUsage_ToggleSuperscript"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="6b478-926">Verwendung von XAML-Attributen</span><span class="sxs-lookup"><span data-stu-id="6b478-926">XAML Attribute Usage</span></span>  
  
```  
<object property="ToggleSuperscript"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="6b478-927">Im folgenden Beispiel wird veranschaulicht, wie auf einen Befehl für ein Objekt aufrufen, die der Befehl unterstützt wird.</span><span class="sxs-lookup"><span data-stu-id="6b478-927">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="6b478-928">In diesem Beispiel eine <xref:System.Windows.Controls.RichTextBox> dient als das Befehlsziel.</span><span class="sxs-lookup"><span data-stu-id="6b478-928">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="6b478-929">Beachten Sie, dass <xref:System.Windows.Controls.RichTextBox> implementiert die <xref:System.Windows.IInputElement> Schnittstelle (geerbt von <xref:System.Windows.FrameworkElement>), und bietet systemeigene Unterstützung für viele Bearbeitungsbefehle.</span><span class="sxs-lookup"><span data-stu-id="6b478-929">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="6b478-930">Das erste Argument für die <xref:System.Windows.Input.RoutedCommand.Execute%2A> Methode ist ein Befehlsparameter.</span><span class="sxs-lookup"><span data-stu-id="6b478-930">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="6b478-931">Die meisten Befehle ignorieren Befehlsparameter. Dieser Parameter sollte im allgemeinen `null` für Bearbeitungsbefehle.</span><span class="sxs-lookup"><span data-stu-id="6b478-931">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="6b478-932">Das zweite Argument gibt das Objekt, an dem der Befehl weitergeleitet werden.</span><span class="sxs-lookup"><span data-stu-id="6b478-932">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="6b478-933">Dieses Objekt muss implementieren die <xref:System.Windows.IInputElement> Schnittstelle, und sollte einen Handler für den angegebenen Befehl einschließen.</span><span class="sxs-lookup"><span data-stu-id="6b478-933">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="6b478-934">Im Allgemeinen wird ein Befehl ignoriert, wenn für ein Objekt aufgerufen, die den Befehl nicht behandelt.</span><span class="sxs-lookup"><span data-stu-id="6b478-934">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.ToggleSubscript" />
      </Docs>
    </Member>
    <Member MemberName="ToggleUnderline">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand ToggleUnderline { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand ToggleUnderline" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.ToggleUnderline" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ToggleUnderline As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ ToggleUnderline { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ToggleUnderline : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.ToggleUnderline" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6b478-935">Stellt den <see cref="P:System.Windows.Documents.EditingCommands.ToggleUnderline" />-Befehl dar, mit dem angefordert wird, dass die <see cref="T:System.Windows.Documents.Underline" />-Formatierung für die aktuelle Auswahl umgeschaltet wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b478-935">Represents the <see cref="P:System.Windows.Documents.EditingCommands.ToggleUnderline" /> command, which requests that <see cref="T:System.Windows.Documents.Underline" /> formatting be toggled on the current selection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6b478-936">Der angeforderte Befehl.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b478-936">The requested command.</span>
          </span>
          <span data-ttu-id="6b478-937">Die standardmäßige Tastenkombination für diesen Befehl wird <see langword="Ctrl" /> + <see langword="U" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b478-937">The default key gesture for this command is <see langword="Ctrl" />+<see langword="U" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6b478-938">Wenn die Auswahl leer ist, und die Einfügemarke innerhalb eines Worts angezeigt wird, wird die Auswahl erweitert, um das ganze Wort enthalten.</span><span class="sxs-lookup"><span data-stu-id="6b478-938">When the selection is empty and the caret is within a word, the selection is expanded to include the entire word.</span></span>  
  
 <span data-ttu-id="6b478-939">Es ist nicht notwendigerweise eine tatsächliche Implementierung, die für diesen Befehl für ein angegebenes Objekt reagiert. in vielen Fällen ist die Implementierung, die an einen Befehl antwortet der Verantwortung des Anwendungs-Writer.</span><span class="sxs-lookup"><span data-stu-id="6b478-939">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="6b478-940">Mit diesem Befehl wird eine systemeigene Unterstützung durch <xref:System.Windows.Controls.RichTextBox>.</span><span class="sxs-lookup"><span data-stu-id="6b478-940">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>.</span></span>  
  
<a name="xamlAttributeUsage_ToggleUnderline"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="6b478-941">Verwendung von XAML-Attributen</span><span class="sxs-lookup"><span data-stu-id="6b478-941">XAML Attribute Usage</span></span>  
  
```  
<object property="ToggleUnderline"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="6b478-942">Im folgenden Beispiel wird veranschaulicht, wie auf einen Befehl für ein Objekt aufrufen, die der Befehl unterstützt wird.</span><span class="sxs-lookup"><span data-stu-id="6b478-942">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="6b478-943">In diesem Beispiel eine <xref:System.Windows.Controls.RichTextBox> dient als das Befehlsziel.</span><span class="sxs-lookup"><span data-stu-id="6b478-943">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="6b478-944">Beachten Sie, dass <xref:System.Windows.Controls.RichTextBox> implementiert die <xref:System.Windows.IInputElement> Schnittstelle (geerbt von <xref:System.Windows.FrameworkElement>), und bietet systemeigene Unterstützung für viele Bearbeitungsbefehle.</span><span class="sxs-lookup"><span data-stu-id="6b478-944">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="6b478-945">Das erste Argument für die <xref:System.Windows.Input.RoutedCommand.Execute%2A> Methode ist ein Befehlsparameter.</span><span class="sxs-lookup"><span data-stu-id="6b478-945">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="6b478-946">Die meisten Befehle ignorieren Befehlsparameter. Dieser Parameter sollte im allgemeinen `null` für Bearbeitungsbefehle.</span><span class="sxs-lookup"><span data-stu-id="6b478-946">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="6b478-947">Das zweite Argument gibt das Objekt, an dem der Befehl weitergeleitet werden.</span><span class="sxs-lookup"><span data-stu-id="6b478-947">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="6b478-948">Dieses Objekt muss implementieren die <xref:System.Windows.IInputElement> Schnittstelle, und sollte einen Handler für den angegebenen Befehl einschließen.</span><span class="sxs-lookup"><span data-stu-id="6b478-948">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="6b478-949">Im Allgemeinen wird ein Befehl ignoriert, wenn für ein Objekt aufgerufen, die den Befehl nicht behandelt.</span><span class="sxs-lookup"><span data-stu-id="6b478-949">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.ToggleBold" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.ToggleItalic" />
      </Docs>
    </Member>
  </Members>
</Type>