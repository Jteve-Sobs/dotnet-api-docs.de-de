<Type Name="TextElementEditingBehaviorAttribute" FullName="System.Windows.Documents.TextElementEditingBehaviorAttribute">
  <Metadata><Meta Name="ms.openlocfilehash" Value="987c030d71dbe598dfefe70a8e2bbb44ec43cf12" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86821581" /></Metadata><TypeSignature Language="C#" Value="public sealed class TextElementEditingBehaviorAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit TextElementEditingBehaviorAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Documents.TextElementEditingBehaviorAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class TextElementEditingBehaviorAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class TextElementEditingBehaviorAttribute sealed : Attribute" />
  <TypeSignature Language="F#" Value="type TextElementEditingBehaviorAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.AttributeUsage(System.AttributeTargets.Class)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.AttributeUsage(System.AttributeTargets.Class)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Gibt an, wie eine <see cref="T:System.Windows.Controls.RichTextBox" /> ein benutzerdefiniertes Textelement behandeln soll.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn Sie ein benutzerdefiniertes Textelement erstellen, können Sie das-Attribut verwenden, <xref:System.Windows.Documents.TextElementEditingBehaviorAttribute> um anzugeben, dass das Element als einzelne, nicht breakable Entität behandelt werden soll.  Wenn die <xref:System.Windows.Documents.TextElementEditingBehaviorAttribute.IsMergeable%2A> -Eigenschaft und die-Eigenschaft <xref:System.Windows.Documents.TextElementEditingBehaviorAttribute.IsTypographicOnly%2A> auf festgelegt sind `false` , <xref:System.Windows.Controls.RichTextBox> behält eine die Grenzen und den Inhalt des-Elements bei, wenn der Benutzer den bearbeitet <xref:System.Windows.Controls.RichTextBox> .  Im allgemeinen verhält sich das benutzerdefinierte Element ähnlich wie <xref:System.Windows.Documents.Hyperlink> .  Das folgende Verhalten tritt auf, wenn Sie diese Klasse verwenden und die beiden Eigenschaften auf festlegen `false` :  
  
-   Wenn ein Benutzer einen Teil des Inhalts in ein benutzerdefiniertes Element kopiert und einfügt, wird die Formatierung des kopierten Texts nicht beibehalten.  
  
-   Wenn ein Benutzer vor oder nach dem Inhalt des benutzerdefinierten Elements tippt, ruft der neue Inhalt nicht die Formatierungsinformationen des benutzerdefinierten Elements ab.  
  
-   Der Benutzer kann keinen Zeilenumbruch in das benutzerdefinierte Element einfügen.  
  
 Verwenden Sie beim Erstellen eines benutzerdefinierten Elements der <xref:System.Windows.Documents.TextRange.Save%28System.IO.Stream%2CSystem.String%2CSystem.Boolean%29?displayProperty=nameWithType> -Methode und Set `preserveTextElements` zu `true` das benutzerdefinierte Element und die Eigenschaftswerte erhalten bleiben, wenn Sie auf den Datenträger oder die Zwischenablage serialisieren.  
  
 <xref:System.Windows.Documents.TextElementEditingBehaviorAttribute> wird in der .NET Framework Version 3,5 eingeführt.  Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](/dotnet/framework/migration-guide/versions-and-dependencies).  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TextElementEditingBehaviorAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.TextElementEditingBehaviorAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TextElementEditingBehaviorAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Windows.Documents.TextElementEditingBehaviorAttribute" />-Klasse.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Documents.TextElementEditingBehaviorAttribute> wird in der .NET Framework Version 3,5 eingeführt.  Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](/dotnet/framework/migration-guide/versions-and-dependencies).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsMergeable">
      <MemberSignature Language="C#" Value="public bool IsMergeable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsMergeable" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.TextElementEditingBehaviorAttribute.IsMergeable" />
      <MemberSignature Language="VB.NET" Value="Public Property IsMergeable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsMergeable { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsMergeable : bool with get, set" Usage="System.Windows.Documents.TextElementEditingBehaviorAttribute.IsMergeable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob die <see cref="T:System.Windows.Controls.RichTextBox" /> zwei angrenzende Textelemente zusammenführen kann, oder legt diesen fest.</summary>
        <value><see langword="true" />, wenn eine <see cref="T:System.Windows.Controls.RichTextBox" /> angrenzende benutzerdefinierte Textelemente mit identischen Eigenschaftswerten zusammenführen kann, andernfalls <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn <xref:System.Windows.Documents.TextElementEditingBehaviorAttribute.IsMergeable%2A> `true` den Wert hat, wird die Entscheidung, benachbarte Textelemente zu kombinieren, die identische Eigenschaftswerte aufweisen, auf dem beibehalten <xref:System.Windows.Controls.RichTextBox> .  Wenn <xref:System.Windows.Documents.TextElementEditingBehaviorAttribute.IsMergeable%2A> ist `false` , <xref:System.Windows.Controls.RichTextBox> kombiniert eine nicht zwei angrenzende Textelemente.  
  
 <xref:System.Windows.Documents.TextElementEditingBehaviorAttribute> wird in der .NET Framework Version 3,5 eingeführt.  Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](/dotnet/framework/migration-guide/versions-and-dependencies).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsTypographicOnly">
      <MemberSignature Language="C#" Value="public bool IsTypographicOnly { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsTypographicOnly" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.TextElementEditingBehaviorAttribute.IsTypographicOnly" />
      <MemberSignature Language="VB.NET" Value="Public Property IsTypographicOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsTypographicOnly { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsTypographicOnly : bool with get, set" Usage="System.Windows.Documents.TextElementEditingBehaviorAttribute.IsTypographicOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob das Textelement die Formatierung auf Zeichenbasis bereitstellt oder ob die Formatierung auf das gesamte Element angewendet wird, oder legt diesen Wert fest.</summary>
        <value><see langword="true" />, wenn die Formatierung auf die einzelnen Zeichen angewendet werden soll. <see langword="false" />, wenn die Formatierung auf das gesamte Element angewendet werden soll.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn <xref:System.Windows.Documents.TextElementEditingBehaviorAttribute.IsTypographicOnly%2A> ist `true` und der Benutzer einen Teil des Inhalts eines benutzerdefinierten Text Elements kopiert und einfügt, wird die Formatierung beibehalten.  Wenn den Wert <xref:System.Windows.Documents.TextElementEditingBehaviorAttribute.IsTypographicOnly%2A> `false` hat, wird die Formatierung nur beibehalten, wenn der Benutzer den gesamten Inhalt des benutzerdefinierten Text Elements kopiert und einfügt.  
  
 <xref:System.Windows.Documents.TextElementEditingBehaviorAttribute> wird in der .NET Framework Version 3,5 eingeführt.  Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](/dotnet/framework/migration-guide/versions-and-dependencies).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
