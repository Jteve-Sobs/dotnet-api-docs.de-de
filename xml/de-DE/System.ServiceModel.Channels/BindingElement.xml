<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="BindingElement.xml" source-language="en-US" target-language="de-DE">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-efd8310" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">73cd4428-9abd-4836-b1ef-ba70fe2e0b722e0ca89517c4246869de272c64d328dbfb50b318.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2e0ca89517c4246869de272c64d328dbfb50b318</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">cc0c87a2e12b0fb9ba9ecdd3d4950f0572524db8</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">05/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7.2,netframework-4.7,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.ServiceModel.Channels.BindingElement">
          <source>The elements of the bindings that build the channel factories and channel listeners for various types of channels that are used to process outgoing and incoming messages.</source>
          <target state="translated">Die Bindungselemente, die Kanalfactorys und Kanallistener für verschiedene Kanaltypen erstellen, die notwendig sind, um ausgehende und eingehende Nachrichten zu verarbeiten.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.BindingElement">
          <source>A binding consists of an ordered set of binding elements that inherit from this abstract base class.</source>
          <target state="translated">Eine Bindung besteht aus einer geordneten Menge von Bindungselementen, die von dieser abstrakten Basisklasse erben.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.BindingElement">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Channels.TransportBindingElement&gt;</ph> class inherits from the <ph id="ph2">&lt;xref:System.ServiceModel.Channels.BindingElement&gt;</ph> class.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.ServiceModel.Channels.TransportBindingElement&gt;</ph>-Klasse erbt von der <ph id="ph2">&lt;xref:System.ServiceModel.Channels.BindingElement&gt;</ph>-Klasse.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.BindingElement">
          <source>Creating a binding and binding element for your transport is optional if you are just using the channel model.</source>
          <target state="translated">Das Erstellen einer Bindung und eines Bindungselements für den Transport ist optional, wenn Sie nur das Kanalmodell verwenden.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.BindingElement">
          <source>It is possible to do everything you need through the channel factory and listener as long as they are made public.</source>
          <target state="translated">Es ist möglich, alles Nötige über die Kanalfactory und den Listener zu erledigen, solange sie öffentlich gemacht werden.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.BindingElement">
          <source>The <ph id="ph1">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph> service model uses a factory pattern where the binding is used to create the channel stack.</source>
          <target state="translated">Das <ph id="ph1">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph>-Dienstmodell verwendet ein Factorymuster, wo die Bindung verwendet wird, um den Kanalstapel zu erstellen.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.BindingElement">
          <source>If you want to use the WCF service model, then using a transport binding element is required.</source>
          <target state="translated">Wenn Sie das Modell der WCF-Dienst verwenden möchten, ist die Verwendung dann einen Transport-Bindungselement erforderlich.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.BindingElement">
          <source>Placing this binding element into a binding is a good practice because it removes the requirement for users to create their own custom binding for your transport.</source>
          <target state="translated">Es ist von Vorteil, wenn Sie dieses Bindungselement in eine Bindung einfügen, da Benutzer dann keine eigene benutzerdefinierte Bindung für den Transport erstellen müssen.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.BindingElement">
          <source>It is best to create both a binding and binding element, and hide the channel factory and listener inside the assembly.</source>
          <target state="translated">Sie sollten sowohl eine Bindung als auch ein Bindungselement erstellen und Kanalfactory und -listener in der Assembly verstecken.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.BindingElement">
          <source>On the sending side, a binding is used to build a <ph id="ph1">&lt;xref:System.ServiceModel.Channels.IChannelFactory&gt;</ph>, which in turn builds a channel stack and returns a reference to the top channel in the stack.</source>
          <target state="translated">Auf der Senderseite wird eine Bindung zum Erstellen einer <ph id="ph1">&lt;xref:System.ServiceModel.Channels.IChannelFactory&gt;</ph> verwendet, die wiederum einen Kanalstapel erstellt und einen Verweis auf den obersten Kanal im Stapel zurückgibt.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.BindingElement">
          <source>The application can then use this channel to send messages.</source>
          <target state="translated">Die Anwendung kann dann diesen Kanal verwenden, um Nachrichten zu senden.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.BindingElement">
          <source>Similarly, on the receiving side a binding is used to build a <ph id="ph1">&lt;xref:System.ServiceModel.Channels.IChannelListener&gt;</ph>, which listens for incoming messages.</source>
          <target state="translated">Auf der Empfängerseite wird genauso eine Bindung verwendet, um einen <ph id="ph1">&lt;xref:System.ServiceModel.Channels.IChannelListener&gt;</ph> zu erstellen, der eingehende Nachrichten überwacht.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.BindingElement">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Channels.IChannelListener&gt;</ph> provides messages to the listening application by creating channel stacks and handing the application a reference to the top channel.</source>
          <target state="translated">Der <ph id="ph1">&lt;xref:System.ServiceModel.Channels.IChannelListener&gt;</ph> stellt der überwachenden Anwendung Nachrichten zur Verfügung, indem ein Kanalstapel erstellt und der Anwendungsverweis an den oberen Kanal übergeben wird.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.BindingElement">
          <source>The application then uses this channel to receive incoming messages.</source>
          <target state="translated">Die Anwendung verwendet diesen Kanal dann zum Empfangen eingehender Nachrichten.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.BindingElement">
          <source>If you are adding message headers that must be encrypted you must return a <ph id="ph1">&lt;xref:System.ServiceModel.Security.ChannelProtectionRequirements&gt;</ph> instance with your requirements from the <ph id="ph2">&lt;xref:System.ServiceModel.Channels.BindingElement.GetProperty%60%601%28System.ServiceModel.Channels.BindingContext%29&gt;</ph> method when asked for <ph id="ph3">&lt;xref:System.ServiceModel.Security.ChannelProtectionRequirements&gt;</ph>.</source>
          <target state="translated">Falls Sie Nachrichtenheader hinzufügen, die verschlüsselt werden müssen, müssen Sie eine <ph id="ph1">&lt;xref:System.ServiceModel.Security.ChannelProtectionRequirements&gt;</ph>-Instanz mit Ihren Anforderungen an die <ph id="ph2">&lt;xref:System.ServiceModel.Channels.BindingElement.GetProperty%60%601%28System.ServiceModel.Channels.BindingContext%29&gt;</ph>-Methode zurückgeben, wenn Sie nach <ph id="ph3">&lt;xref:System.ServiceModel.Security.ChannelProtectionRequirements&gt;</ph> gefragt werden.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.BindingElement">
          <source>The following example shows how to add a transport binding element to a custom binding and then build a channel listener that can accept incoming messages.</source>
          <target state="translated">Im folgenden Beispiel wird gezeigt, wie Sie ein Transportbindungselement zu einer benutzerdefinierten Bindung hinzufügen und dann einen Kanallistener erstellen, der eingehende Nachrichten akzeptieren kann.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="T:System.ServiceModel.Channels.BindingElement">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.BindingElement" /&gt;</ph> class.</source>
          <target state="translated">Initialisiert eine neue Instanz der <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.BindingElement" /&gt;</ph>-Klasse.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.BindingElement.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.BindingElement" /&gt;</ph> class.</source>
          <target state="translated">Initialisiert eine neue Instanz der <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.BindingElement" /&gt;</ph>-Klasse.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.BindingElement.#ctor(System.ServiceModel.Channels.BindingElement)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.BindingElement" /&gt;</ph> to be cloned.</source>
          <target state="translated">Der <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.BindingElement" /&gt;</ph>, der geklont werden soll.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.BindingElement.#ctor(System.ServiceModel.Channels.BindingElement)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.BindingElement" /&gt;</ph> class from a specified binding element.</source>
          <target state="translated">Initialisiert eine neue Instanz der <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.BindingElement" /&gt;</ph>-Klasse aus einem angegebenen Bindungselement.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.BindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
          <source>The type of channel the factory builds.</source>
          <target state="translated">Der Typ des Kanals, der von der Factory erstellt wird.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.BindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.BindingContext" /&gt;</ph> that provides context for the binding element.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.BindingContext" /&gt;</ph>, der den Kontext für das Bindungselement bereitstellt.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.BindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
          <source>Initializes a channel factory for producing channels of a specified type from the binding context.</source>
          <target state="translated">Initialisiert eine Kanalfactory zum Erstellen von Kanälen eines bestimmten Typs aus dem Bindungskontext.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.BindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.IChannelFactory`1" /&gt;</ph> of type <ph id="ph2">&lt;paramref name="TChannel" /&gt;</ph> initialized from the <ph id="ph3">&lt;paramref name="context" /&gt;</ph>.</source>
          <target state="translated">Der <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.IChannelFactory`1" /&gt;</ph> des Typs <ph id="ph2">&lt;paramref name="TChannel" /&gt;</ph>, initialisiert aus dem <ph id="ph3">&lt;paramref name="context" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.BindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
          <source><ph id="ph1">&lt;paramref name="context" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="context" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.BindingElement.BuildChannelListener``1(System.ServiceModel.Channels.BindingContext)">
          <source>The type of channel the listener is built to accept.</source>
          <target state="translated">Der Kanaltyp, den der Kanallistener akzeptiert.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.BindingElement.BuildChannelListener``1(System.ServiceModel.Channels.BindingContext)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.BindingContext" /&gt;</ph> that provides context for the binding element.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.BindingContext" /&gt;</ph>, der den Kontext für das Bindungselement bereitstellt.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.BindingElement.BuildChannelListener``1(System.ServiceModel.Channels.BindingContext)">
          <source>Initializes a channel listener to accept channels of a specified type from the binding context.</source>
          <target state="translated">Initialisiert einen Kanallistener, der Kanäle eines bestimmten Typs aus dem Bindungskontext annimmt.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.BindingElement.BuildChannelListener``1(System.ServiceModel.Channels.BindingContext)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.IChannelListener`1" /&gt;</ph> of type <ph id="ph2">&lt;see cref="T:System.ServiceModel.Channels.IChannel" /&gt;</ph> initialized from the <ph id="ph3">&lt;paramref name="context" /&gt;</ph>.</source>
          <target state="translated">Der <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.IChannelListener`1" /&gt;</ph> des Typs <ph id="ph2">&lt;see cref="T:System.ServiceModel.Channels.IChannel" /&gt;</ph>, initialisiert aus dem <ph id="ph3">&lt;paramref name="context" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.BindingElement.BuildChannelListener``1(System.ServiceModel.Channels.BindingContext)">
          <source><ph id="ph1">&lt;paramref name="context" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="context" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.BindingElement.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
          <source>The type of channel the channel factory produces.</source>
          <target state="translated">Der Kanaltyp, der von der Kanalfactory erzeugt wird.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.BindingElement.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.BindingContext" /&gt;</ph> that provides context for the binding element.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.BindingContext" /&gt;</ph>, der den Kontext für das Bindungselement bereitstellt.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.BindingElement.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
          <source>Returns a value that indicates whether the binding element can build a channel factory for a specific type of channel.</source>
          <target state="translated">Gibt einen Wert zurück, der angibt, ob das Bindungselement eine Kanalfactory für einen bestimmten Typ von Kanälen erstellen kann.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.BindingElement.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.ServiceModel.Channels.IChannelFactory`1" /&gt;</ph> of type <ph id="ph3">&lt;paramref name="TChannel" /&gt;</ph> can be built by the binding element; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, wenn der <ph id="ph2">&lt;see cref="T:System.ServiceModel.Channels.IChannelFactory`1" /&gt;</ph> vom Typ <ph id="ph3">&lt;paramref name="TChannel" /&gt;</ph> durch das Bindungselement erstellt werden kann, andernfalls <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.BindingElement.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
          <source>Use this method if you want to check that the channel factory for channels of type <ph id="ph1">`TChannel`</ph> can be build for the <ph id="ph2">`context`</ph> provided before attempting to build the factory.</source>
          <target state="translated">Überprüfen Sie mit dieser Methode, ob die Kanalfactory für Kanäle vom Typ <ph id="ph1">`TChannel`</ph> für den bereitgestellten <ph id="ph2">`context`</ph> erstellt werden kann, bevor versucht wird, die Factory zu erstellen.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.BindingElement.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
          <source>Alternatively, build the channel factory by calling <ph id="ph1">&lt;xref:System.ServiceModel.Channels.BindingElement.BuildChannelFactory%2A&gt;</ph> and catch the exception generated if it cannot be built.</source>
          <target state="translated">Alternativ können Sie die Kanalfactory erstellen, indem Sie <ph id="ph1">&lt;xref:System.ServiceModel.Channels.BindingElement.BuildChannelFactory%2A&gt;</ph> aufrufen und die Ausnahme abrufen, falls eine Erstellung fehlschlägt.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.BindingElement.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
          <source><ph id="ph1">&lt;paramref name="context" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="context" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.BindingElement.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingContext)">
          <source>The type of channel the listener accepts.</source>
          <target state="translated">Der Kanaltyp, den der Listener akzeptiert.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.BindingElement.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingContext)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.BindingContext" /&gt;</ph> that provides context for the binding element.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.BindingContext" /&gt;</ph>, der den Kontext für das Bindungselement bereitstellt.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.BindingElement.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingContext)">
          <source>Returns a value that indicates whether the binding element can build a listener for a specific type of channel.</source>
          <target state="translated">Gibt einen Wert zurück, der angibt, ob das Bindungselement einen Listener für einen bestimmten Typ von Kanal erstellen kann.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.BindingElement.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingContext)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.ServiceModel.Channels.IChannelListener`1" /&gt;</ph> of type <ph id="ph3">&lt;see cref="T:System.ServiceModel.Channels.IChannel" /&gt;</ph> can be built by the binding element; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, wenn der <ph id="ph2">&lt;see cref="T:System.ServiceModel.Channels.IChannelListener`1" /&gt;</ph> vom Typ <ph id="ph3">&lt;see cref="T:System.ServiceModel.Channels.IChannel" /&gt;</ph> durch das Bindungselement erstellt werden kann, andernfalls <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.BindingElement.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingContext)">
          <source>Use this method if you want to check that the channel listener for channels of type <ph id="ph1">`TChannel`</ph> can be build for the <ph id="ph2">`context`</ph> provided before attempting to build the listener.</source>
          <target state="translated">Überprüfen Sie mit dieser Methode, ob der Kanallistener für Kanäle vom Typ <ph id="ph1">`TChannel`</ph> für den bereitgestellten <ph id="ph2">`context`</ph> erstellt werden kann, bevor versucht wird, den Listener zu erstellen.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.BindingElement.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingContext)">
          <source>Alternatively, build the channel listener by calling <ph id="ph1">&lt;xref:System.ServiceModel.Channels.BindingElement.BuildChannelListener%2A&gt;</ph> and catch the exception generated if it cannot be built.</source>
          <target state="translated">Alternativ können Sie versuchen, den Kanallistener zu erstellen, indem Sie <ph id="ph1">&lt;xref:System.ServiceModel.Channels.BindingElement.BuildChannelListener%2A&gt;</ph> aufrufen und die Ausnahme abrufen, falls eine Erstellung fehlschlägt.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.BindingElement.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingContext)">
          <source><ph id="ph1">&lt;paramref name="context" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="context" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.BindingElement.Clone">
          <source>When overridden in a derived class, returns a copy of the binding element object.</source>
          <target state="translated">Gibt beim Überschreiben in einer abgeleiteten Klasse eine Kopie des Bindungselementobjekts zurück.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.BindingElement.Clone">
          <source>A <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.BindingElement" /&gt;</ph> object that is a deep clone of the original.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.BindingElement" /&gt;</ph>-Objekt, bei dem es sich um einen tiefen Klon des Originals handelt.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.BindingElement.Clone">
          <source>Implement the <ph id="ph1">&lt;xref:System.ServiceModel.Channels.BindingElement.Clone%2A&gt;</ph> method to return a deep clone of your binding element.</source>
          <target state="translated">Implementieren Sie die <ph id="ph1">&lt;xref:System.ServiceModel.Channels.BindingElement.Clone%2A&gt;</ph>-Methode, um einen tiefen Klon des Bindungselements zurückzugeben.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.BindingElement.Clone">
          <source>Returning a clone enables the runtime to support the case in which multiple custom bindings share a custom binding element.</source>
          <target state="translated">Durch das Zurückgeben eines Klons kann zur Laufzeit der Fall unterstützt werden, in dem mehrere benutzerdefinierte Bindungen ein benutzerdefiniertes Bindungselement gemeinsam nutzen.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.BindingElement.Clone">
          <source>If a clone is not returned, the run-time behavior is undefined.</source>
          <target state="translated">Wenn ein Klon nicht zurückgegeben wird, ist das Laufzeitverhalten nicht definiert.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.BindingElement.Clone">
          <source>A deep clone of an object creates a copy of the object and a copy of everything directly or indirectly referenced by that object.</source>
          <target state="translated">Mit einem tiefen Klon eines Objekts wird neben der Kopie des Objekts eine Kopie aller Elemente erstellt, auf die das betreffende Objekt direkt oder indirekt verweist.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.BindingElement.Clone">
          <source>(This is also called copying the entire object graph.) A shallow clone of an object, by contrast, is a copy of the object only.</source>
          <target state="translated">(Dieser Vorgang wird auch als Kopieren des gesamten Objektdiagramms bezeichnet.) Ein flacher Klon eines Objekts stellt im Gegensatz dazu nur eine Kopie des Objekts dar.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.BindingElement.Clone">
          <source>If the object contains references to other objects, the shallow copy does not create copies of the referred objects; instead, it copies only the references to the original objects.</source>
          <target state="translated">Wenn das Objekt Verweise auf andere Objekte enthält, werden von der flachen Kopie keine Kopien der Objekte erstellt, auf die verwiesen wird. Stattdessen werden nur die Verweise auf die ursprünglichen Objekte kopiert.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.BindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
          <source>The typed object for which the method is querying.</source>
          <target state="translated">Das typisierte Objekt, das von der Methode abgefragt wird.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.BindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.BindingContext" /&gt;</ph> for the binding element.</source>
          <target state="translated">Der <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.BindingContext" /&gt;</ph> für das Bindungselement.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.BindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
          <source>When overridden in a derived class, returns a typed object requested, if present, from the appropriate layer in the binding stack.</source>
          <target state="translated">Gibt beim Überschreiben in einer abgeleiteten Klasse ggf. ein angefordertes typisiertes Objekt von der entsprechenden Ebene im Bindungsstapel zurück.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.BindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
          <source>The typed object <ph id="ph1">&lt;paramref name="T" /&gt;</ph> requested if it is present or <ph id="ph2">&lt;see langword="null" /&gt;</ph> if it is not present.</source>
          <target state="translated">Das von <ph id="ph1">&lt;paramref name="T" /&gt;</ph> angeforderte typisierte Objekt, falls vorhanden, oder <ph id="ph2">&lt;see langword="null" /&gt;</ph>, falls das Objekt nicht vorhanden ist.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.BindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
          <source>Use this to retrieve capabilities, requirements and parameters from the binding element stack.</source>
          <target state="translated">Rufen Sie hiermit die Funktionalität, Anforderungen und Parameter vom Bindungselementstapel ab.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.BindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
          <source>If a binding element supports returning the requested object, it returns it.</source>
          <target state="translated">Wenn ein Bindungselement das Zurückgeben des angeforderten Objekts unterstützt, wird der Vorgang ausgeführt.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.BindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
          <source>If not, it delegates the call down to the next binding element in the stack.</source>
          <target state="translated">Andernfalls wird der Aufruf an das nächste Bindungselement im Stapel delegiert.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.BindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
          <source>If it gets to the bottom of the stack and no binding element supported the requested object, then the method returns <ph id="ph1">`null`</ph>.</source>
          <target state="translated">Wenn die letzte Ebene erreicht ist und das angeforderte Objekt von keinem Bindungselement unterstützt wird, gibt die Methode <ph id="ph1">`null`</ph> zurück.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.BindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
          <source>If you are adding message headers that must be encrypted you must return a <ph id="ph1">&lt;xref:System.ServiceModel.Security.ChannelProtectionRequirements&gt;</ph> instance with your requirements from this method when asked for <ph id="ph2">&lt;xref:System.ServiceModel.Security.ChannelProtectionRequirements&gt;</ph>.</source>
          <target state="translated">Falls Sie Nachrichtenheader hinzufügen, die verschlüsselt werden müssen, müssen Sie eine <ph id="ph1">&lt;xref:System.ServiceModel.Security.ChannelProtectionRequirements&gt;</ph>-Instanz mit Ihren Anforderungen an diese Methode zurückgeben, wenn Sie nach <ph id="ph2">&lt;xref:System.ServiceModel.Security.ChannelProtectionRequirements&gt;</ph> gefragt werden.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>