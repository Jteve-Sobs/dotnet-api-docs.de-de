<Type Name="IsExplicitlyDereferenced" FullName="System.Runtime.CompilerServices.IsExplicitlyDereferenced">
  <Metadata><Meta Name="ms.openlocfilehash" Value="7d7ec0151999bd2cb137f32f3e36302e4f1be67d" /><Meta Name="ms.sourcegitcommit" Value="b0947fed0227b6b2e292d7efb43705b488b130aa" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="04/29/2020" /><Meta Name="ms.locfileid" Value="82381970" /></Metadata><TypeSignature Language="C#" Value="public static class IsExplicitlyDereferenced" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit IsExplicitlyDereferenced extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.CompilerServices.IsExplicitlyDereferenced" />
  <TypeSignature Language="VB.NET" Value="Public Class IsExplicitlyDereferenced" />
  <TypeSignature Language="C++ CLI" Value="public ref class IsExplicitlyDereferenced abstract sealed" />
  <TypeSignature Language="F#" Value="type IsExplicitlyDereferenced = class" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.CompilerServices.VisualC</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="d7fff-101">Gibt an, dass ein verwalteter Zeiger einen Zeigerparameter in einer Methodensignatur darstellt.</span><span class="sxs-lookup"><span data-stu-id="d7fff-101">Indicates that a managed pointer represents a pointer parameter within a method signature.</span></span> <span data-ttu-id="d7fff-102">Diese Klasse kann nicht vererbt werden.</span><span class="sxs-lookup"><span data-stu-id="d7fff-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d7fff-103">In C++werden verwaltete Zeiger und verwaltete Verweise als Zeiger in Metadaten ausgegeben.</span><span class="sxs-lookup"><span data-stu-id="d7fff-103">In C++, managed pointers and managed references are emitted into metadata as pointers.</span></span>  <span data-ttu-id="d7fff-104">Um zwischen den beiden Typen in den Metadaten zu unterscheiden C++ , wendet der Microsoft-Compiler diesen Modifizierer auf verwaltete Zeiger an.</span><span class="sxs-lookup"><span data-stu-id="d7fff-104">To distinguish between the two types in metadata, the Microsoft  C++ compiler applies this modifier to managed pointers.</span></span>  <span data-ttu-id="d7fff-105">Er gibt keinen Modifizierer für verwaltete Verweis Typen aus.</span><span class="sxs-lookup"><span data-stu-id="d7fff-105">It emits no modifier on managed reference types.</span></span>  <span data-ttu-id="d7fff-106">Compiler müssen die korrekte aufrufende Syntax beim Importieren einer Methode aus dem Metadatenbereich kennen.</span><span class="sxs-lookup"><span data-stu-id="d7fff-106">Compilers need to know the correct calling syntax when importing a method from metadata scope.</span></span>  <span data-ttu-id="d7fff-107">Die <xref:System.Runtime.CompilerServices.IsExplicitlyDereferenced>-Klasse und Ihr Partner, die <xref:System.Runtime.CompilerServices.IsImplicitlyDereferenced>-Klasse, unterscheiden Verweis Parameter von Zeiger Parametern.</span><span class="sxs-lookup"><span data-stu-id="d7fff-107">The <xref:System.Runtime.CompilerServices.IsExplicitlyDereferenced> class and its partner, the <xref:System.Runtime.CompilerServices.IsImplicitlyDereferenced> class, disambiguate reference parameters from pointer parameters.</span></span>  
  
 <span data-ttu-id="d7fff-108">Compiler geben benutzerdefinierte Modifizierer innerhalb von Metadaten aus, um die Art und Weise zu ändern, wie der JIT-Compiler (Just-in-Time) Werte verarbeitet, wenn das Standardverhalten nicht geeignet ist.</span><span class="sxs-lookup"><span data-stu-id="d7fff-108">Compilers emit custom modifiers within metadata to change the way that the just-in-time (JIT) compiler handles values when the default behavior is not appropriate.</span></span>  <span data-ttu-id="d7fff-109">Wenn der JIT-Compiler auf einen benutzerdefinierten Modifizierer trifft, verarbeitet er den Wert in der Art und Weise, wie der-Modifizierer angibt.</span><span class="sxs-lookup"><span data-stu-id="d7fff-109">When the JIT compiler encounters a custom modifier, it handles the value in the way that the modifier specifies.</span></span>  <span data-ttu-id="d7fff-110">Compiler können benutzerdefinierte Modifizierern auf Methoden, Parameter und Rückgabewerte anwenden.</span><span class="sxs-lookup"><span data-stu-id="d7fff-110">Compilers can apply custom modifiers to methods, parameters, and return values.</span></span>  <span data-ttu-id="d7fff-111">Der JIT-Compiler muss auf erforderliche Modifizierer Antworten, kann jedoch optionale modifiziererer ignorieren.</span><span class="sxs-lookup"><span data-stu-id="d7fff-111">The JIT compiler must respond to required modifiers but can ignore optional modifiers.</span></span>  
  
 <span data-ttu-id="d7fff-112">Mithilfe einer der folgenden Verfahren können Sie benutzerdefinierte modifiziererer in Metadaten ausgeben:</span><span class="sxs-lookup"><span data-stu-id="d7fff-112">You can emit custom modifiers into metadata using one of the following techniques:</span></span>  
  
-   <span data-ttu-id="d7fff-113">Verwenden von Methoden in der <xref:System.Reflection.Emit.TypeBuilder>-Klasse, z. b. <xref:System.Reflection.Emit.TypeBuilder.DefineMethod%2A>, <xref:System.Reflection.Emit.TypeBuilder.DefineField%2A>, <xref:System.Reflection.Emit.TypeBuilder.DefineConstructor%2A>und <xref:System.Reflection.Emit.TypeBuilder.DefineProperty%2A>.</span><span class="sxs-lookup"><span data-stu-id="d7fff-113">Using methods in the <xref:System.Reflection.Emit.TypeBuilder> class such as <xref:System.Reflection.Emit.TypeBuilder.DefineMethod%2A>, <xref:System.Reflection.Emit.TypeBuilder.DefineField%2A>, <xref:System.Reflection.Emit.TypeBuilder.DefineConstructor%2A>, and <xref:System.Reflection.Emit.TypeBuilder.DefineProperty%2A>.</span></span>  
  
-   <span data-ttu-id="d7fff-114">Erstellen einer MSIL-Anweisungs Datei (Microsoft Intermediate Language), die Aufrufe von `modopt` und `modreq`enthält und die Datei mit dem [Ilasm. exe (Il-Assembler)](~/docs/framework/tools/ilasm-exe-il-assembler.md)zusammenführt.</span><span class="sxs-lookup"><span data-stu-id="d7fff-114">Generating a Microsoft intermediate language (MSIL) instruction file that contains calls to `modopt` and `modreq`, and assembling the file with the [Ilasm.exe (IL Assembler)](~/docs/framework/tools/ilasm-exe-il-assembler.md).</span></span>  
  
-   <span data-ttu-id="d7fff-115">Verwenden der nicht verwalteten Reflection-API.</span><span class="sxs-lookup"><span data-stu-id="d7fff-115">Using the unmanaged reflection API.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d7fff-116">Im folgenden Beispiel wird veranschaulicht, wie ein <xref:System.Runtime.CompilerServices.IsExplicitlyDereferenced>-Objekt mithilfe von Reflektion in eine Assembly ausgegeben wird.</span><span class="sxs-lookup"><span data-stu-id="d7fff-116">The following example demonstrates how to emit an <xref:System.Runtime.CompilerServices.IsExplicitlyDereferenced> object into an assembly using reflection.</span></span>  
  
 [!code-cpp[Runtime.CompilerServices.IsExplicitlyDereferenced#1](~/samples/snippets/cpp/VS_Snippets_CLR/Runtime.CompilerServices.IsExplicitlyDereferenced/cpp/sample.cpp#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members />
</Type>
