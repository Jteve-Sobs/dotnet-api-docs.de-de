<Type Name="IsPinned" FullName="System.Runtime.CompilerServices.IsPinned">
  <Metadata><Meta Name="ms.openlocfilehash" Value="94372072efd918d923770017c99b3a7b5bd94e89" /><Meta Name="ms.sourcegitcommit" Value="a3e01ec36374fac54a55add0dcc1e754e394abeb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="03/30/2019" /><Meta Name="ms.locfileid" Value="58714479" /></Metadata><TypeSignature Language="C#" Value="public static class IsPinned" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit IsPinned extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.CompilerServices.IsPinned" />
  <TypeSignature Language="VB.NET" Value="Public Class IsPinned" />
  <TypeSignature Language="C++ CLI" Value="public ref class IsPinned abstract sealed" />
  <TypeSignature Language="F#" Value="type IsPinned = class" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime.CompilerServices.VisualC</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Gibt an, dass eine geänderte Instanz im Arbeitsspeicher fixiert ist. Diese Klasse kann nicht vererbt werden.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Compiler geben benutzerdefinierte Modifizierer innerhalb der Metadaten, die die Art ändern, der just-in-Time-Compiler (JIT)-Werte behandelt, wenn das Standardverhalten nicht zulässig ist.  Wenn der JIT-Compiler einen benutzerdefinierten Modifizierer trifft, verarbeitet sie den Wert in der Weise, die den Modifizierer gibt an.  Compiler können Anwenden von benutzerdefinierten Modifizierer auf Methoden, Parameter und Rückgabewerte.  Der JIT-Compiler, erforderlichen Modifizierern reagieren muss, jedoch optionale Modifizierer ignorieren kann.  Ein C++-Compiler konnte einen benutzerdefinierten Modifizierer beschrieben, wie ein Byte behandelt werden sollte in Fällen, in dem der JIT-Compiler Bytes in einer Weise behandelt, die nicht kompatibel mit C++ ist, standardmäßig ausgeben.  
  
 Sie können benutzerdefinierte Modifizierer in Metadaten mit einer der folgenden Methoden auszugeben:  
  
-   Verwendung von Methoden in der <xref:System.Reflection.Emit.TypeBuilder> Klasse, z. B. <xref:System.Reflection.Emit.TypeBuilder.DefineMethod%2A>, <xref:System.Reflection.Emit.TypeBuilder.DefineField%2A>, <xref:System.Reflection.Emit.TypeBuilder.DefineConstructor%2A>, und <xref:System.Reflection.Emit.TypeBuilder.DefineProperty%2A>.  
  
-   Generieren einer Anweisungsdatei Microsoft intermediate Language (MSIL), die Aufrufe von enthält `modopt` und `modreq`, und die Datei mit Zusammenstellen der [Ilasm.exe (IL-Assembler)](~/docs/framework/tools/ilasm-exe-il-assembler.md).  
  
-   Verwenden die nicht verwaltete Reflektions-API.  
  
   
  
## Examples  
 Im folgende Beispiel wird veranschaulicht, wie zum Ausgeben einer <xref:System.Runtime.CompilerServices.IsPinned> Objekt in eine Assembly mit Reflektion.  
  
 [!code-cpp[Runtime.CompilerServices.IsPinned#1](~/samples/snippets/cpp/VS_Snippets_CLR/Runtime.CompilerServices.IsPinned/cpp/sample.cpp#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members />
</Type>