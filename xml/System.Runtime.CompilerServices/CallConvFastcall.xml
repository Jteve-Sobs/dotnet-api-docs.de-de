<Type Name="CallConvFastcall" FullName="System.Runtime.CompilerServices.CallConvFastcall">
  <Metadata><Meta Name="ms.openlocfilehash" Value="464c9e1e830626b697929fb66fd9d9748e0f4390" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70678502" /></Metadata><TypeSignature Language="C#" Value="public class CallConvFastcall" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CallConvFastcall extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.CompilerServices.CallConvFastcall" />
  <TypeSignature Language="VB.NET" Value="Public Class CallConvFastcall" />
  <TypeSignature Language="C++ CLI" Value="public ref class CallConvFastcall" />
  <TypeSignature Language="F#" Value="type CallConvFastcall = class" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.CompilerServices.VisualC</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Diese Aufrufkonvention wird in der vorliegenden Version von .NET Framework nicht unterstützt.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die `__fastcall` -Aufruf Konvention gibt an, dass Argumente für Funktionen, sofern möglich, in Registern übermittelt werden.  
  
 Die Klassen in <xref:System.Runtime.CompilerServices> dienen nur der Verwendung von compilerwritern.  
  
 Compiler geben benutzerdefinierte Modifizierer innerhalb von Metadaten aus, um die Art und Weise zu ändern, wie der JIT-Compiler (Just-in-Time) Werte verarbeitet, wenn das Standardverhalten nicht geeignet ist.  Wenn der JIT-Compiler auf einen benutzerdefinierten Modifizierer trifft, verarbeitet er den Wert in der Art und Weise, wie der-Modifizierer angibt.  Compiler können benutzerdefinierte Modifizierern auf Methoden, Parameter und Rückgabewerte anwenden.  Der JIT-Compiler muss auf erforderliche Modifizierer Antworten, kann jedoch optionale modifiziererer ignorieren.  Ein C++ Compiler könnte einen benutzerdefinierten Modifizierer ausgeben, um zu beschreiben, wie ein Byte behandelt werden soll, wenn der JIT-Compiler Bytes so behandelt, C++ dass diese standardmäßig nicht kompatibel sind.  
  
 Mithilfe einer der folgenden Verfahren können Sie benutzerdefinierte modifiziererer in Metadaten ausgeben:  
  
-   Verwenden von Methoden in <xref:System.Reflection.Emit.TypeBuilder> der- <xref:System.Reflection.Emit.TypeBuilder.DefineMethod%2A>Klasse <xref:System.Reflection.Emit.TypeBuilder.DefineField%2A>wie <xref:System.Reflection.Emit.TypeBuilder.DefineConstructor%2A>,, <xref:System.Reflection.Emit.TypeBuilder.DefineProperty%2A>und.  
  
-   Erstellen einer MSIL-Anweisungs Datei (Microsoft Intermediate Language), die `modopt` Aufrufe `modreq`von und enthält und die Datei mit dem [Ilasm. exe (Il-Assembler)](~/docs/framework/tools/ilasm-exe-il-assembler.md)zusammenführt.  
  
-   Verwenden der nicht verwalteten Reflection-API.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CallConvFastcall ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.CompilerServices.CallConvFastcall.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CallConvFastcall();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.CompilerServices.VisualC</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Runtime.CompilerServices.CallConvFastcall" />-Klasse.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die Klassen in <xref:System.Runtime.CompilerServices> dienen nur der Verwendung von compilerwritern.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
