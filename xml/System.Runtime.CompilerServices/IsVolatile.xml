<Type Name="IsVolatile" FullName="System.Runtime.CompilerServices.IsVolatile">
  <Metadata><Meta Name="ms.openlocfilehash" Value="13e3e09c2fcdc7f4812f5c0165f44c88a9afcfa5" /><Meta Name="ms.sourcegitcommit" Value="a3e01ec36374fac54a55add0dcc1e754e394abeb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="03/30/2019" /><Meta Name="ms.locfileid" Value="58714964" /></Metadata><TypeSignature Language="C#" Value="public static class IsVolatile" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit IsVolatile extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.CompilerServices.IsVolatile" />
  <TypeSignature Language="VB.NET" Value="Public Class IsVolatile" />
  <TypeSignature Language="C++ CLI" Value="public ref class IsVolatile abstract sealed" />
  <TypeSignature Language="F#" Value="type IsVolatile = class" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="dc454-101">Markiert ein Feld als flüchtig.</span><span class="sxs-lookup"><span data-stu-id="dc454-101">Marks a field as volatile.</span></span> <span data-ttu-id="dc454-102">Diese Klasse kann nicht vererbt werden.</span><span class="sxs-lookup"><span data-stu-id="dc454-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc454-103">`IsVolatile` wird verwendet, um anzugeben, dass das Feld aus, die markiert "volatile" ist nur in benutzerdefinierten Modifizierer der Methodensignaturen.</span><span class="sxs-lookup"><span data-stu-id="dc454-103">`IsVolatile` is used only in custom modifiers of method signatures to indicate that the field it marks is volatile.</span></span> <span data-ttu-id="dc454-104">Alle Compiler, der mit einem oder mehreren Feldern, die als flüchtig gekennzeichnet Metadaten importiert muss Anweisungen, die mit dem Präfix verwenden `volatile.` auf solche Felder zugreifen.</span><span class="sxs-lookup"><span data-stu-id="dc454-104">Any compiler that imports metadata with one or more fields marked as volatile must use instructions prefixed with `volatile.` to access such fields.</span></span>  
  
 <span data-ttu-id="dc454-105">Die Klassen im <xref:System.Runtime.CompilerServices> Compilerautoren nur zur Verwendung sind.</span><span class="sxs-lookup"><span data-stu-id="dc454-105">The classes in <xref:System.Runtime.CompilerServices> are for compiler writers' use only.</span></span>  
  
 <span data-ttu-id="dc454-106">Compiler geben benutzerdefinierte Modifizierer innerhalb der Metadaten, die die Art ändern, der just-in-Time-Compiler (JIT)-Werte behandelt, wenn das Standardverhalten nicht zulässig ist.</span><span class="sxs-lookup"><span data-stu-id="dc454-106">Compilers emit custom modifiers within metadata to change the way that the just-in-time (JIT) compiler handles values when the default behavior is not appropriate.</span></span>  <span data-ttu-id="dc454-107">Wenn der JIT-Compiler einen benutzerdefinierten Modifizierer trifft, verarbeitet sie den Wert in der Weise, die den Modifizierer gibt an.</span><span class="sxs-lookup"><span data-stu-id="dc454-107">When the JIT compiler encounters a custom modifier, it handles the value in the way that the modifier specifies.</span></span>  <span data-ttu-id="dc454-108">Compiler können Anwenden von benutzerdefinierten Modifizierer auf Methoden, Parameter und Rückgabewerte.</span><span class="sxs-lookup"><span data-stu-id="dc454-108">Compilers can apply custom modifiers to methods, parameters, and return values.</span></span>  <span data-ttu-id="dc454-109">Der JIT-Compiler, erforderlichen Modifizierern reagieren muss, jedoch optionale Modifizierer ignorieren kann.</span><span class="sxs-lookup"><span data-stu-id="dc454-109">The JIT compiler must respond to required modifiers but can ignore optional modifiers.</span></span>  <span data-ttu-id="dc454-110">Ein C++-Compiler konnte einen benutzerdefinierten Modifizierer beschrieben, wie ein Byte behandelt werden sollte in Fällen, in dem der JIT-Compiler Bytes in einer Weise behandelt, die nicht kompatibel mit C++ ist, standardmäßig ausgeben.</span><span class="sxs-lookup"><span data-stu-id="dc454-110">A C++ compiler could emit a custom modifier to describe how a byte should be treated in cases where the JIT compiler treats bytes in a manner that is not compatible with C++ by default.</span></span>  
  
 <span data-ttu-id="dc454-111">Sie können benutzerdefinierte Modifizierer in Metadaten mit einer der folgenden Methoden auszugeben:</span><span class="sxs-lookup"><span data-stu-id="dc454-111">You can emit custom modifiers into metadata using one of the following techniques:</span></span>  
  
-   <span data-ttu-id="dc454-112">Verwendung von Methoden in der <xref:System.Reflection.Emit.TypeBuilder> Klasse, z. B. <xref:System.Reflection.Emit.TypeBuilder.DefineMethod%2A>, <xref:System.Reflection.Emit.TypeBuilder.DefineField%2A>, <xref:System.Reflection.Emit.TypeBuilder.DefineConstructor%2A>, und <xref:System.Reflection.Emit.TypeBuilder.DefineProperty%2A>.</span><span class="sxs-lookup"><span data-stu-id="dc454-112">Using methods in the <xref:System.Reflection.Emit.TypeBuilder> class such as <xref:System.Reflection.Emit.TypeBuilder.DefineMethod%2A>, <xref:System.Reflection.Emit.TypeBuilder.DefineField%2A>, <xref:System.Reflection.Emit.TypeBuilder.DefineConstructor%2A>, and <xref:System.Reflection.Emit.TypeBuilder.DefineProperty%2A>.</span></span>  
  
-   <span data-ttu-id="dc454-113">Generieren einer Anweisungsdatei Microsoft intermediate Language (MSIL), die Aufrufe von enthält `modopt` und `modreq`, und die Datei mit Zusammenstellen der [Ilasm.exe (IL-Assembler)](~/docs/framework/tools/ilasm-exe-il-assembler.md).</span><span class="sxs-lookup"><span data-stu-id="dc454-113">Generating a Microsoft intermediate language (MSIL) instruction file that contains calls to `modopt` and `modreq`, and assembling the file with the [Ilasm.exe (IL Assembler)](~/docs/framework/tools/ilasm-exe-il-assembler.md).</span></span>  
  
-   <span data-ttu-id="dc454-114">Verwenden die nicht verwaltete Reflektions-API.</span><span class="sxs-lookup"><span data-stu-id="dc454-114">Using the unmanaged reflection API.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members />
</Type>