<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="IteratorStateMachineAttribute.xml" source-language="en-US" target-language="de-DE">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5cadcb56fea16e89f978e07aeb7b94eff562ca547.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">cadcb56fea16e89f978e07aeb7b94eff562ca547</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.5,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Runtime.CompilerServices.IteratorStateMachineAttribute">
          <source>Indicates whether a method in Visual Basic is marked with the <ph id="ph1">&lt;see langword="Iterator" /&gt;</ph> modifier.</source>
          <target state="translated">Gibt an, ob eine Methode in Visual Basic mit dem <ph id="ph1">&lt;see langword="Iterator" /&gt;</ph> markiert ist.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.CompilerServices.IteratorStateMachineAttribute">
          <source>You shouldn't apply the <ph id="ph1">`IteratorStateMachine`</ph> attribute to methods in your code.</source>
          <target state="translated">Sie sollten nicht anwenden, die <ph id="ph1">`IteratorStateMachine`</ph> -Attribut auf Methoden im Code.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.CompilerServices.IteratorStateMachineAttribute">
          <source>For methods in Visual Basic that have the <bpt id="p1">[</bpt>Iterator<ept id="p1">](~/docs/visual-basic/language-reference/modifiers/iterator.md)</ept> modifier, the compiler will apply the <ph id="ph1">`IteratorStateMachine`</ph> attribute in the IL that it emits.</source>
          <target state="translated">Für Methoden in Visual Basic, die über die <bpt id="p1">[</bpt>Iterator<ept id="p1">](~/docs/visual-basic/language-reference/modifiers/iterator.md)</ept> Modifizierer, der Compiler gelten die <ph id="ph1">`IteratorStateMachine`</ph> -Attribut in die IL aus, die ihn ausgibt.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.CompilerServices.IteratorStateMachineAttribute">
          <source>When a method (<bpt id="p1">*</bpt>MethodName<ept id="p1">*</ept>) in Visual Basic has the <ph id="ph1">`Iterator`</ph> modifier, the compiler emits IL that includes a state machine structure.</source>
          <target state="translated">Wenn eine Methode (<bpt id="p1">*</bpt>MethodName<ept id="p1">*</ept>) in Visual Basic hat die <ph id="ph1">`Iterator`</ph> Modifizierer verwenden, gibt der Compiler die IL aus, die eine Computer Zustandsstruktur enthält.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.CompilerServices.IteratorStateMachineAttribute">
          <source>That structure contains the code in the method.</source>
          <target state="translated">Diese Struktur enthält den Code in der Methode.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.CompilerServices.IteratorStateMachineAttribute">
          <source>That IL also contains a stub method (<bpt id="p1">*</bpt>MethodName<ept id="p1">*</ept>) that calls into the state machine.</source>
          <target state="translated">IL auch eine Stub-Methode enthält (<bpt id="p1">*</bpt>MethodName<ept id="p1">*</ept>) in der Zustandsautomat aufruft.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.CompilerServices.IteratorStateMachineAttribute">
          <source>The compiler adds the <ph id="ph1">`IteratorStateMachine`</ph> attribute to the stub method so that tools can identify the corresponding state machine.</source>
          <target state="translated">Der Compiler fügt den <ph id="ph1">`IteratorStateMachine`</ph> -Attribut auf die Stubmethode, sodass Tools das entsprechenden Zustandsautomat ermitteln können.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.CompilerServices.IteratorStateMachineAttribute">
          <source>Details of the emitted IL might change in future releases of the compilers.</source>
          <target state="translated">Details zu den ausgegebenen IL-Code können in zukünftigen Versionen der Compiler ändern.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.CompilerServices.IteratorStateMachineAttribute">
          <source>An iterator method performs a custom iteration over a collection by using the <ph id="ph1">`Yield`</ph> (Visual Basic) statement to return each element one at a time.</source>
          <target state="translated">Eine Iterator-Methode führt eine benutzerdefinierte Iteration durch eine Auflistung mit den <ph id="ph1">`Yield`</ph> -Anweisung (Visual Basic), um jedes Element einzeln nacheinander zurückzugeben.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.CompilerServices.IteratorStateMachineAttribute">
          <source>For more information, see <bpt id="p1">[</bpt>Iterators<ept id="p1">](http://msdn.microsoft.com/library/f45331db-d595-46ec-9142-551d3d1eb1a7)</ept>.</source>
          <target state="translated">Weitere Informationen finden Sie unter <bpt id="p1">[</bpt>Iteratoren<ept id="p1">](http://msdn.microsoft.com/library/f45331db-d595-46ec-9142-551d3d1eb1a7)</ept>.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.CompilerServices.IteratorStateMachineAttribute">
          <source>You can't use <ph id="ph1">`IteratorStateMachineAttribute`</ph> to test whether a method is an iterator method in C#.</source>
          <target state="translated">Sie können keine <ph id="ph1">`IteratorStateMachineAttribute`</ph> zu prüfen, ob eine Methode eine Iteratormethode in C# geschrieben ist.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.CompilerServices.IteratorStateMachineAttribute">
          <source>The following example shows how to determine whether a method is an iterator method.</source>
          <target state="translated">Das folgende Beispiel zeigt, wie zu bestimmen, ob eine Methode eine Iteratormethode ist.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.CompilerServices.IteratorStateMachineAttribute">
          <source>In the example, <ph id="ph1">`IsIteratorMethod`</ph> performs the following steps:</source>
          <target state="translated">Im Beispiel <ph id="ph1">`IsIteratorMethod`</ph> führt die folgenden Schritte aus:</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.CompilerServices.IteratorStateMachineAttribute">
          <source>Obtains a <ph id="ph1">&lt;xref:System.Reflection.MethodInfo&gt;</ph> object for the method name by using <ph id="ph2">&lt;xref:System.Type.GetMethod%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Ruft eine <ph id="ph1">&lt;xref:System.Reflection.MethodInfo&gt;</ph> Objekt für den Methodennamen mit <ph id="ph2">&lt;xref:System.Type.GetMethod%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.CompilerServices.IteratorStateMachineAttribute">
          <source>Obtains a <ph id="ph1">&lt;xref:System.Type&gt;</ph> object for the attribute by using <bpt id="p1">[</bpt>GetType Operator<ept id="p1">](~/docs/visual-basic/language-reference/operators/gettype-operator.md)</ept>.</source>
          <target state="translated">Ruft eine <ph id="ph1">&lt;xref:System.Type&gt;</ph> Objekt für das Attribut mit <bpt id="p1">[</bpt>Operators "GetType"<ept id="p1">](~/docs/visual-basic/language-reference/operators/gettype-operator.md)</ept>.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.CompilerServices.IteratorStateMachineAttribute">
          <source>Obtains an attribute object for the method and attribute type by using <ph id="ph1">`MethodInfo.GetCustomAttribute`</ph>.</source>
          <target state="translated">Erhält ein Attributobjekt für die Methode und Attribut mit <ph id="ph1">`MethodInfo.GetCustomAttribute`</ph>.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.CompilerServices.IteratorStateMachineAttribute">
          <source>If <ph id="ph1">`GetCustomAttribute`</ph> returns <ph id="ph2">`Nothing`</ph> (Visual Basic), the method doesn't contain the attribute.</source>
          <target state="translated">Wenn <ph id="ph1">`GetCustomAttribute`</ph> gibt <ph id="ph2">`Nothing`</ph> (Visual Basic), die Methode nicht das Attribut enthalten.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Runtime.CompilerServices.IteratorStateMachineAttribute.#ctor(System.Type)">
          <source>The type object for the underlying state machine type that's used to implement a state machine method.</source>
          <target state="translated">Das Typobjekt für den zugrundeliegenden Typ des Zustandsautomaten, das verwendet wird, um eine Zustandsautomatenmethode zu implementieren.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Runtime.CompilerServices.IteratorStateMachineAttribute.#ctor(System.Type)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Runtime.CompilerServices.IteratorStateMachineAttribute" /&gt;</ph> class.</source>
          <target state="translated">Initialisiert eine neue Instanz der <ph id="ph1">&lt;see cref="T:System.Runtime.CompilerServices.IteratorStateMachineAttribute" /&gt;</ph>-Klasse.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>