<Type Name="ConditionalWeakTable&lt;TKey,TValue&gt;" FullName="System.Runtime.CompilerServices.ConditionalWeakTable&lt;TKey,TValue&gt;">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="dbf347a600196f6012ffdb19e1733f7b6934173d" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36541727" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class ConditionalWeakTable&lt;TKey,TValue&gt; where TKey : class where TValue : class" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ConditionalWeakTable`2&lt;class TKey, class TValue&gt; extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.CompilerServices.ConditionalWeakTable`2" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ConditionalWeakTable(Of TKey, TValue)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename TKey, typename TValue&gt;&#xA; where TKey : class where TValue : classpublic ref class ConditionalWeakTable sealed" />
  <TypeSignature Language="F#" Value="type ConditionalWeakTable&lt;'Key, 'Value (requires 'Key : null and 'Value : null)&gt; = class" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TKey">
      <Constraints>
        <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
      </Constraints>
    </TypeParameter>
    <TypeParameter Name="TValue">
      <Constraints>
        <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces></Interfaces>
  <Docs>
    <typeparam name="TKey">
      <span data-ttu-id="4a024-101">Der Verweistyp, an den das Feld angefügt ist.</span>
      <span class="sxs-lookup">
        <span data-stu-id="4a024-101">The reference type to which the field is attached.</span>
      </span>
    </typeparam>
    <typeparam name="TValue">
      <span data-ttu-id="4a024-102">Der Typ des Felds.</span>
      <span class="sxs-lookup">
        <span data-stu-id="4a024-102">The field's type.</span>
      </span>
      <span data-ttu-id="4a024-103">Dieser Typ muss ein Referenztyp sein.</span>
      <span class="sxs-lookup">
        <span data-stu-id="4a024-103">This must be a reference type.</span>
      </span>
    </typeparam>
    <summary>
      <span data-ttu-id="4a024-104">Ermöglicht, dass Compiler dynamisch Objektfelder an verwaltete Objekte anfügen können.</span>
      <span class="sxs-lookup">
        <span data-stu-id="4a024-104">Enables compilers to dynamically attach object fields to managed objects.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a024-105">Die <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602> Klasse Sprachcompilern auf beliebige Eigenschaften zur Laufzeit an verwaltete Objekte anfügen.</span><span class="sxs-lookup"><span data-stu-id="4a024-105">The <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602> class enables language compilers to attach arbitrary properties to managed objects at run time.</span></span> <span data-ttu-id="4a024-106">Ein <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602> Objekt ist ein Wörterbuch, das ein verwaltetes Objekt, das durch einen Schlüssel dargestellt wird an die angefügte Eigenschaft bindet, der durch einen Wert dargestellt wird.</span><span class="sxs-lookup"><span data-stu-id="4a024-106">A <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602> object is a dictionary that binds a managed object, which is represented by a key, to its attached property, which is represented by a value.</span></span> <span data-ttu-id="4a024-107">Die Schlüssel des Objekts sind die einzelnen Instanzen von der `TKey` Klasse, zu denen die Eigenschaft angefügt ist, und seine Werte sind die Eigenschaftswerte, die den entsprechenden Objekten zugewiesen werden.</span><span class="sxs-lookup"><span data-stu-id="4a024-107">The object's keys are the individual instances of the `TKey` class to which the property is attached, and its values are the property values that are assigned to the corresponding objects.</span></span>  
  
 <span data-ttu-id="4a024-108">Schlüssel müssen eindeutig sein; Das heißt, die <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602> -Klasse unterstützt einen angefügten Wert pro verwaltetes Objekt.</span><span class="sxs-lookup"><span data-stu-id="4a024-108">Keys must be unique; in other words, the <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602> class supports one attached value per managed object.</span></span> <span data-ttu-id="4a024-109">Zwei Schlüssel sind gleich, wenn sie zum Übergeben der <xref:System.Object.ReferenceEquals%2A?displayProperty=nameWithType> -Methode zurückkehrt `true`.</span><span class="sxs-lookup"><span data-stu-id="4a024-109">Two keys are equal if passing them to the <xref:System.Object.ReferenceEquals%2A?displayProperty=nameWithType> method returns `true`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4a024-110">Sie können nicht steuern Übereinstimmungsvergleiche durch Außerkraftsetzen <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType> explizit den Hashcode für einen Schlüssel festzulegen.</span><span class="sxs-lookup"><span data-stu-id="4a024-110">You cannot control equality comparisons by overriding <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType> to explicitly set the hash code for a key.</span></span> <span data-ttu-id="4a024-111">Die <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602> Klasse verwendet nicht die <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType> Methode zur Berechnung Hashcodes und daher nicht rufen <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType> überschreibt.</span><span class="sxs-lookup"><span data-stu-id="4a024-111">The <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602> class does not use the <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType> method to compute hash codes, and therefore does not invoke <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType> overrides.</span></span>  
  
 <span data-ttu-id="4a024-112">Obwohl die <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602> Klasse enthält eine Auflistung von Schlüssel/Wert-Paaren, es ist am besten betrachtet eine Tabelle, sondern als ein Dictionary-Objekt.</span><span class="sxs-lookup"><span data-stu-id="4a024-112">Although the <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602> class holds a collection of key/value pairs, it is best thought of as a table rather than a dictionary object.</span></span> <span data-ttu-id="4a024-113">Die <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602> Klasse unterscheidet sich von einem Wörterbuch auf verschiedene Weise:</span><span class="sxs-lookup"><span data-stu-id="4a024-113">The <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602> class differs from a dictionary in several ways:</span></span>  
  
-   <span data-ttu-id="4a024-114">Schlüssel werden nicht beibehalten.</span><span class="sxs-lookup"><span data-stu-id="4a024-114">It does not persist keys.</span></span> <span data-ttu-id="4a024-115">Ein Schlüssel ist, also nicht aktiv beibehalten, da es sich um ein Element der Auflistung ist.</span><span class="sxs-lookup"><span data-stu-id="4a024-115">That is, a key is not kept alive only because it is a member of the collection.</span></span>  
  
-   <span data-ttu-id="4a024-116">Es umfasst nicht alle Methoden (z. B. `GetEnumerator` oder `Contains`), die in der Regel ein Wörterbuch verfügt.</span><span class="sxs-lookup"><span data-stu-id="4a024-116">It does not include all the methods (such as `GetEnumerator` or `Contains`) that a dictionary typically has.</span></span>  
  
-   <span data-ttu-id="4a024-117">Es implementiert nicht die <xref:System.Collections.Generic.IDictionary%602> Schnittstelle.</span><span class="sxs-lookup"><span data-stu-id="4a024-117">It does not implement the <xref:System.Collections.Generic.IDictionary%602> interface.</span></span>  
  
 <span data-ttu-id="4a024-118">Die <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602> Klasse unterscheidet sich von anderen Auflistungsobjekte in ihrer Verwaltung der Objektlebensdauer, der in der Auflistung gespeicherten Schlüssel.</span><span class="sxs-lookup"><span data-stu-id="4a024-118">The <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602> class differs from other collection objects in its management of the object lifetime of keys stored in the collection.</span></span> <span data-ttu-id="4a024-119">Wenn ein Objekt in einer Auflistung gespeichert wird, dauert seiner Lebensdauer normalerweise, bis er entfernt wird (und keine weiteren Verweise auf das Objekt vorhanden sind) oder das Auflistungsobjekt selbst zerstört wird.</span><span class="sxs-lookup"><span data-stu-id="4a024-119">Ordinarily, when an object is stored in a collection, its lifetime lasts until it is removed (and there are no additional references to the object) or until the collection object itself is destroyed.</span></span> <span data-ttu-id="4a024-120">Allerdings in der <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602> -Klasse, indem ein Schlüssel/Wert-Paar in die Tabelle wird nicht sichergestellt, dass der Schlüssel beibehalten wird, auch wenn er direkt aus einem Wert in der Tabelle (z. B., wenn die Tabelle einen Schlüssel, ein, mit dem Wert V1 enthält gespeicherten erreicht werden kann und einen zweiten Schlüssel B mit einem Wert von P2, die einen Verweis auf ein enthält).</span><span class="sxs-lookup"><span data-stu-id="4a024-120">However, in the <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602> class, adding a key/value pair to the table does not ensure that the key will persist, even if it can be reached directly from a value stored in the table (for example, if the table contains one key, A, with a value V1, and a second key, B, with a value P2 that contains a reference to A).</span></span> <span data-ttu-id="4a024-121">Stattdessen <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602> automatisch entfernt den Schlüssel/Wert-Eintrag, als keine weiteren Verweise auf einen Schlüssel außerhalb der Tabelle vorhanden sind.</span><span class="sxs-lookup"><span data-stu-id="4a024-121">Instead, <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602> automatically removes the key/value entry as soon as no other references to a key exist outside the table.</span></span> <span data-ttu-id="4a024-122">Dies wird im Beispiel veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="4a024-122">The example provides an illustration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4a024-123">Das folgende Beispiel veranschaulicht, dass ein Schlüssel, in gespeichert der <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602> nach Verweise darauf außerhalb der Tabelle zerstört werden, wird die Tabelle nicht beibehalten.</span><span class="sxs-lookup"><span data-stu-id="4a024-123">The following example illustrates that a key stored in the <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602> table does not persist after references to it outside the table are destroyed.</span></span> <span data-ttu-id="4a024-124">Im Beispiel werden zwei Klassen definiert: `ManagedClass`, die die Schlüssel in der Tabelle darstellt und `ClassData`, die die Schlüssel-Wert darstellt.</span><span class="sxs-lookup"><span data-stu-id="4a024-124">The example defines two classes: `ManagedClass`, which represents the key in the table, and `ClassData`, which represents the key's value.</span></span> <span data-ttu-id="4a024-125">Im Beispiel werden drei Objekte jedes Typs instanziiert.</span><span class="sxs-lookup"><span data-stu-id="4a024-125">The example instantiates three objects of each type.</span></span> <span data-ttu-id="4a024-126">Auch instanziiert einen <xref:System.WeakReference> -Objekt, das die Sekunde darstellt `ManagedClass`, und klicken Sie dann die zweite zerstört `ManagedClass` Instanz.</span><span class="sxs-lookup"><span data-stu-id="4a024-126">It also instantiates a <xref:System.WeakReference> object that represents the second `ManagedClass`, and then destroys the second `ManagedClass` instance.</span></span> <span data-ttu-id="4a024-127">Beim Abrufen der zweiten `ManagedClass` -Objekt aus der <xref:System.WeakReference.Target%2A> Eigenschaft gibt an, dass keine Verweise auf das Objekt bleiben.</span><span class="sxs-lookup"><span data-stu-id="4a024-127">The attempt to retrieve the second `ManagedClass` object from the <xref:System.WeakReference.Target%2A> property indicates that no references to the object remain.</span></span>  
  
 [!code-csharp[System.Runtime.CompilerServices.ConditionalWeakTable.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.compilerservices.conditionalweaktable.class/cs/example1.cs#1)]
 [!code-vb[System.Runtime.CompilerServices.ConditionalWeakTable.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.runtime.compilerservices.conditionalweaktable.class/vb/example1.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe>
      <span data-ttu-id="4a024-128">Instanzen der <see cref="T:System.Runtime.CompilerServices.ConditionalWeakTable`2" /> Klasse sind threadsicher.</span>
      <span class="sxs-lookup">
        <span data-stu-id="4a024-128">Instances of the <see cref="T:System.Runtime.CompilerServices.ConditionalWeakTable`2" /> class are thread safe.</span>
      </span>
      <span data-ttu-id="4a024-129">Sie benötigen keine Aufrufer zusätzliches sperren möchten.</span>
      <span class="sxs-lookup">
        <span data-stu-id="4a024-129">They do not require callers to do any additional locking.</span>
      </span>
    </threadsafe>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ConditionalWeakTable ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ConditionalWeakTable();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4a024-130">Initialisiert eine neue Instanz der <see cref="T:System.Runtime.CompilerServices.ConditionalWeakTable`2" />-Klasse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a024-130">Initializes a new instance of the <see cref="T:System.Runtime.CompilerServices.ConditionalWeakTable`2" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a024-131">Die <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.%23ctor%2A> -Konstruktor instanziiert eine leere <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602> Tabelle; d. h., der die Tabelle keine Schlüssel/Wert-Paare enthält.</span><span class="sxs-lookup"><span data-stu-id="4a024-131">The <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.%23ctor%2A> constructor instantiates an empty <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602> table; that is, the table contains no key/value pairs.</span></span> <span data-ttu-id="4a024-132">Sie können Schlüssel/Wert-Paare hinzufügen, durch Aufrufen der <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.Add%2A>, <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetValue%2A>, oder <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetOrCreateValue%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="4a024-132">You can add key/value pairs by calling the <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.Add%2A>, <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetValue%2A>, or <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetOrCreateValue%2A> method.</span></span>  
  
 <span data-ttu-id="4a024-133">Jeder Schlüssel im einem <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602> Objekt muss eindeutig sein.</span><span class="sxs-lookup"><span data-stu-id="4a024-133">Every key in a <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602> object must be unique.</span></span> <span data-ttu-id="4a024-134">Schlüssel sind nicht eindeutig, wenn sie auf dasselbe Objekt verweisen (d. h., wenn sie übergeben als Argumente an die <xref:System.Object.ReferenceEquals%2A?displayProperty=nameWithType> -Methode zurückkehrt `true`).</span><span class="sxs-lookup"><span data-stu-id="4a024-134">Keys are not unique if they refer to the same object (that is, if passing them as arguments to the <xref:System.Object.ReferenceEquals%2A?displayProperty=nameWithType> method returns `true`).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (TKey key, TValue value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(!TKey key, !TValue value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.Add(`0,`1)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (key As TKey, value As TValue)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Add(TKey key, TValue value);" />
      <MemberSignature Language="F#" Value="member this.Add : 'Key * 'Value -&gt; unit" Usage="conditionalWeakTable.Add (key, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="TKey" />
        <Parameter Name="value" Type="TValue" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="4a024-135">Der hinzuzufügende Schlüssel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a024-135">The key to add.</span>
          </span>
          <span data-ttu-id="4a024-136">
            <c>key</c> stellt das Objekt dar, an das die Eigenschaft angefügt ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a024-136">
              <c>key</c> represents the object to which the property is attached.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="4a024-137">Der Eigenschaftswert des Schlüssels.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a024-137">The key's property value.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a024-138">Fügt der Tabelle einen Schlüssel hinzu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a024-138">Adds a key to the table.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a024-139">Jeder Schlüssel im einem <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602> Objekt muss eindeutig sein.</span><span class="sxs-lookup"><span data-stu-id="4a024-139">Every key in a <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602> object must be unique.</span></span> <span data-ttu-id="4a024-140">Schlüssel sind nicht eindeutig, wenn sie auf dasselbe Objekt verweisen (d. h., wenn sie übergeben als Argumente an die <xref:System.Object.ReferenceEquals%2A?displayProperty=nameWithType> -Methode zurückkehrt `true`).</span><span class="sxs-lookup"><span data-stu-id="4a024-140">Keys are not unique if they refer to the same object (that is, if passing them as arguments to the <xref:System.Object.ReferenceEquals%2A?displayProperty=nameWithType> method returns `true`).</span></span>  
  
 <span data-ttu-id="4a024-141">Wenn der Schlüssel Garbage collection während der Addition, vorhandene Schlüssel/Wert-Paar entfernt wird, und neue Schlüssel/Wert-Paar wird hinzugefügt, ohne eine Ausnahme ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="4a024-141">If the key is garbage-collected during the addition operation, the existing key/value pair is removed and the new key/value pair is added without an exception being thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4a024-142">Das folgende Beispiel definiert eine `MainClass` Klasse und ein `MainInfo` -Klasse, die Informationen zu den `MainClass` Instanz.</span><span class="sxs-lookup"><span data-stu-id="4a024-142">The following example defines a `MainClass` class and a `MainInfo` class, which provides information about the `MainClass` instance.</span></span> <span data-ttu-id="4a024-143">Im Beispiel ruft dann die <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.Add%2A> -Methode zum Hinzufügen einer `MainClass` -Objekt und seine angefügten `MainInfo` -Objekt an eine <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602> Tabelle.</span><span class="sxs-lookup"><span data-stu-id="4a024-143">The example then calls the <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.Add%2A> method to add a `MainClass` object and its attached `MainInfo` object to a <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602> table.</span></span> <span data-ttu-id="4a024-144">Das Beispiel veranschaulicht auch Aufrufe an die <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetOrCreateValue%2A> und <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetValue%2A> Methoden zum Hinzufügen von Schlüssel/Wert-Paare in der Tabelle, und klicken Sie auf die <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.TryGetValue%2A> Methode zum Abrufen des Werts eines vorhandenen Schlüssels.</span><span class="sxs-lookup"><span data-stu-id="4a024-144">The example also illustrates calls to the <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetOrCreateValue%2A> and <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetValue%2A> methods to add key/value pairs to the table, and to the <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.TryGetValue%2A> method to retrieve the value of an existing key.</span></span>  
  
 [!code-csharp[System.Runtime.CompilerServices.ConditionalWeakTable.GetValue#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.compilerservices.conditionalweaktable.getvalue/cs/getvalue1.cs#1)]
 [!code-vb[System.Runtime.CompilerServices.ConditionalWeakTable.GetValue#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.runtime.compilerservices.conditionalweaktable.getvalue/vb/getvalue1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4a024-145">
            <paramref name="key" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a024-145">
              <paramref name="key" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="4a024-146">
            <paramref name="key" /> ist bereits vorhanden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a024-146">
              <paramref name="key" /> already exists.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="4a024-147">erfordert volle Vertrauenswürdigkeit für den unmittelbaren Aufrufer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a024-147">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="4a024-148">Dieser Member kann nicht von teilweise vertrauenswürdigem oder transparentem Code verwendet werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a024-148">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.GetOrCreateValue(`0)" />
      </Docs>
    </Member>
    <Member MemberName="AddOrUpdate">
      <MemberSignature Language="C#" Value="public void AddOrUpdate (TKey key, TValue value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddOrUpdate(!TKey key, !TValue value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.AddOrUpdate(`0,`1)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddOrUpdate (key As TKey, value As TValue)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddOrUpdate(TKey key, TValue value);" />
      <MemberSignature Language="F#" Value="member this.AddOrUpdate : 'Key * 'Value -&gt; unit" Usage="conditionalWeakTable.AddOrUpdate (key, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="TKey" />
        <Parameter Name="value" Type="TValue" />
      </Parameters>
      <Docs>
        <param name="key">To be added.</param>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Clear();" />
      <MemberSignature Language="F#" Value="member this.Clear : unit -&gt; unit" Usage="conditionalWeakTable.Clear " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~ConditionalWeakTable ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!ConditionalWeakTable`2 ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="conditionalWeakTable.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4a024-149">Stellt das Freigeben von Ressourcen und das Ausführen anderer Garbage Collector-Vorgänge sicher, wenn der Garbage Collector das <see cref="T:System.Runtime.CompilerServices.ConditionalWeakTable`2" />-Objekt verarbeitet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a024-149">Ensures that resources are freed and other cleanup operations are performed when the garbage collector reclaims the <see cref="T:System.Runtime.CompilerServices.ConditionalWeakTable`2" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a024-150">Der Garbage Collector ruft <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.Finalize%2A> Wenn das aktuelle Objekt wird finalisiert werden.</span><span class="sxs-lookup"><span data-stu-id="4a024-150">The garbage collector calls <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.Finalize%2A> when the current object is ready to be finalized.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Object.Finalize" />
      </Docs>
    </Member>
    <Member MemberName="GetOrCreateValue">
      <MemberSignature Language="C#" Value="public TValue GetOrCreateValue (TKey key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !TValue GetOrCreateValue(!TKey key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.GetOrCreateValue(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetOrCreateValue (key As TKey) As TValue" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TValue GetOrCreateValue(TKey key);" />
      <MemberSignature Language="F#" Value="member this.GetOrCreateValue : 'Key -&gt; 'Value" Usage="conditionalWeakTable.GetOrCreateValue key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TValue</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="TKey" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="4a024-151">Der zu suchende Schlüssel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a024-151">The key to search for.</span>
          </span>
          <span data-ttu-id="4a024-152">
            <c>key</c> stellt das Objekt dar, an das die Eigenschaft angefügt ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a024-152">
              <c>key</c> represents the object to which the property is attached.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a024-153">Sucht atomar nach einem angegebenen Schlüssel in der Tabelle und gibt den entsprechenden Wert zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a024-153">Atomically searches for a specified key in the table and returns the corresponding value.</span>
          </span>
          <span data-ttu-id="4a024-154">Wenn der Schlüssel in der Tabelle nicht vorhanden ist, ruft die Methode den Standardkonstruktor der Klasse auf, die den Wert der Tabelle darstellt, um einen Wert zu erstellen, der an den angegebenen Schlüssel gebunden wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a024-154">If the key does not exist in the table, the method invokes the default constructor of the class that represents the table's value to create a value that is bound to the specified key.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a024-155">Der Wert, der <paramref name="key" /> entspricht, wenn <paramref name="key" /> bereits in der Tabelle vorhanden ist, andernfalls ein von dem vom generischen <paramref name="TValue" />-Typparameter definierten Standardkonstruktor der Klasse erstellter neuer Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a024-155">The value that corresponds to <paramref name="key" />, if <paramref name="key" /> already exists in the table; otherwise, a new value created by the default constructor of the class defined by the <paramref name="TValue" /> generic type parameter.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a024-156">Wenn `key` existiert nicht in der Tabelle, die Methode hinzugefügt, zusammen mit dem Objekt, das instanziiert wird, indem Sie den Standardkonstruktor der Klasse definiert, die durch Aufrufen der `TValue` generischen Typparameter.</span><span class="sxs-lookup"><span data-stu-id="4a024-156">If `key` does not exist in the table, the method adds it, along with the object that is instantiated by calling the default constructor of the class defined by the `TValue` generic type parameter.</span></span> <span data-ttu-id="4a024-157">Wenn die `TValue` -Klasse verfügt über keinen Standardkonstruktor eine <xref:System.MissingMethodException> ausgelöst wird.</span><span class="sxs-lookup"><span data-stu-id="4a024-157">If the `TValue` class has no default constructor, a <xref:System.MissingMethodException> is thrown.</span></span>  
  
 <span data-ttu-id="4a024-158">Dies ist die empfohlene Methode zum Abrufen eines vorhandenen Werts oder Hinzufügen eines neuen Werts auf die <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602> Tabelle, wenn die Klasse der Wert der Tabelle einen Standardkonstruktor definiert.</span><span class="sxs-lookup"><span data-stu-id="4a024-158">This is the recommended method of retrieving an existing value or adding a new value to the <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602> table if the class of the table's value defines a default constructor.</span></span> <span data-ttu-id="4a024-159">Wenn sie einen Standardkonstruktor nicht definiert, können Sie stattdessen Aufrufen der <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetValue%2A> -Methode, die abhängt, eine Methode bereitgestellten Rückruf zum Instanziieren des Objekts, das den Wert der Tabelle darstellt.</span><span class="sxs-lookup"><span data-stu-id="4a024-159">If it does not define a default constructor, you can instead call the <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetValue%2A> method, which relies on a callback-provided method to instantiate the object representing the table's value</span></span>  
  
 <span data-ttu-id="4a024-160">Zum Abrufen des Werts eines vorhandenen Schlüssels ohne Hinzufügen von Schlüssel/Wert-Paar aufrufen, wenn der Schlüssel in der Tabelle nicht gefunden wird die <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.TryGetValue%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="4a024-160">To retrieve the value of an existing key without adding the key/value pair if the key is not found in the table, call the <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.TryGetValue%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4a024-161">Das folgende Beispiel definiert eine `MainClass` Klasse und ein `MainInfo` -Klasse, die Informationen zu den `MainClass` Instanz.</span><span class="sxs-lookup"><span data-stu-id="4a024-161">The following example defines a `MainClass` class and a `MainInfo` class, which provides information about the `MainClass` instance.</span></span> <span data-ttu-id="4a024-162">Im Beispiel wird die <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetOrCreateValue%2A> -Methode zum Hinzufügen einer `MainClass` -Objekt und seine angefügten `MainInfo` -Objekt an eine <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602> Tabelle.</span><span class="sxs-lookup"><span data-stu-id="4a024-162">The example calls the <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetOrCreateValue%2A> method to add a `MainClass` object and its attached `MainInfo` object to a <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602> table.</span></span> <span data-ttu-id="4a024-163">Das Beispiel veranschaulicht auch Aufrufe an die <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.Add%2A> und <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetValue%2A> Methoden zum Hinzufügen von Schlüssel/Wert-Paare in der Tabelle, und klicken Sie auf die <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.TryGetValue%2A> Methode zum Abrufen des Werts eines vorhandenen Schlüssels.</span><span class="sxs-lookup"><span data-stu-id="4a024-163">The example also illustrates calls to the <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.Add%2A> and <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetValue%2A> methods to add key/value pairs to the table, and to the <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.TryGetValue%2A> method to retrieve the value of an existing key.</span></span>  
  
 [!code-csharp[System.Runtime.CompilerServices.ConditionalWeakTable.GetValue#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.compilerservices.conditionalweaktable.getvalue/cs/getvalue1.cs#1)]
 [!code-vb[System.Runtime.CompilerServices.ConditionalWeakTable.GetValue#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.runtime.compilerservices.conditionalweaktable.getvalue/vb/getvalue1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4a024-164">
            <paramref name="key" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a024-164">
              <paramref name="key" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.MissingMethodException">
          <span data-ttu-id="4a024-165">
            <block subset="none" type="note">
              <para> Fangen Sie in [.NET für Windows Store-Apps](http://go.microsoft.com/fwlink/?LinkID=247912) oder der [portablen Klassenbibliothek](~/docs/standard/cross-platform/cross-platform-development-with-the-portable-class-library.md) stattdessen die Basisklassenausnahme <see cref="T:System.MissingMemberException" /> ab.  </para>
            </block>  Die Klasse, die den Wert der Tabelle darstellt, definiert keinen Standardkonstruktor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a024-165">
              <block subset="none" type="note">
                <para> In the [.NET for Windows Store apps](http://go.microsoft.com/fwlink/?LinkID=247912) or the [Portable Class Library](~/docs/standard/cross-platform/cross-platform-development-with-the-portable-class-library.md), catch the base class exception, <see cref="T:System.MissingMemberException" />, instead.  </para>
              </block>  The class that represents the table's value does not define a default constructor.</span>
          </span>
        </exception>
        <altmember cref="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.GetValue(`0,System.Runtime.CompilerServices.ConditionalWeakTable{`0,`1}.CreateValueCallback)" />
        <altmember cref="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.TryGetValue(`0,`1@)" />
      </Docs>
    </Member>
    <Member MemberName="GetValue">
      <MemberSignature Language="C#" Value="public TValue GetValue (TKey key, System.Runtime.CompilerServices.ConditionalWeakTable&lt;TKey,TValue&gt;.CreateValueCallback createValueCallback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !TValue GetValue(!TKey key, class System.Runtime.CompilerServices.ConditionalWeakTable`2/CreateValueCallback&lt;!TKey, !TValue&gt; createValueCallback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.GetValue(`0,System.Runtime.CompilerServices.ConditionalWeakTable`2.CreateValueCallback{`0,`1})" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TValue GetValue(TKey key, System::Runtime::CompilerServices::ConditionalWeakTable&lt;TKey, TValue&gt;::CreateValueCallback ^ createValueCallback);" />
      <MemberSignature Language="F#" Value="member this.GetValue : 'Key * System.Runtime.CompilerServices.ConditionalWeakTable&lt;'Key, 'Value (requires 'Key : null and 'Value : null)&gt;.CreateValueCallback -&gt; 'Value" Usage="conditionalWeakTable.GetValue (key, createValueCallback)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TValue</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="TKey" />
        <Parameter Name="createValueCallback" Type="System.Runtime.CompilerServices.ConditionalWeakTable&lt;TKey,TValue&gt;+CreateValueCallback" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="4a024-166">Der zu suchende Schlüssel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a024-166">The key to search for.</span>
          </span>
          <span data-ttu-id="4a024-167">
            <c>key</c> stellt das Objekt dar, an das die Eigenschaft angefügt ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a024-167">
              <c>key</c> represents the object to which the property is attached.</span>
          </span>
        </param>
        <param name="createValueCallback">
          <span data-ttu-id="4a024-168">Ein Delegat zu einer Methode, die einen Wert für den angegebenen <c>key</c> erstellen kann.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a024-168">A delegate to a method that can create a value for the given <c>key</c>.</span>
          </span>
          <span data-ttu-id="4a024-169">Er verfügt über einen einzelnen Parameter vom Typ <c>TKey</c> und gibt einen Wert vom Typ <c>TValue</c> zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a024-169">It has a single parameter of type <c>TKey</c>, and returns a value of type <c>TValue</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a024-170">Sucht atomar nach einem angegebenen Schlüssel in der Tabelle und gibt den entsprechenden Wert zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a024-170">Atomically searches for a specified key in the table and returns the corresponding value.</span>
          </span>
          <span data-ttu-id="4a024-171">Wenn der Schlüssel in der Tabelle nicht vorhanden ist, ruft die Methode eine Rückrufmethode auf, um einen Wert zu erstellen, der an den angegebenen Schlüssel gebunden ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a024-171">If the key does not exist in the table, the method invokes a callback method to create a value that is bound to the specified key.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a024-172">Der an <paramref name="key" /> angefügte Wert, wenn <paramref name="key" /> bereits in der Tabelle vorhanden ist, andernfalls der vom <paramref name="createValueCallback" />-Delegaten zurückgegebene neue Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a024-172">The value attached to <paramref name="key" />, if <paramref name="key" /> already exists in the table; otherwise, the new value returned by the <paramref name="createValueCallback" /> delegate.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a024-173">Wenn `key` existiert nicht in der Tabelle <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetValue%2A> Ruft die Methode, die von definiert ist die `createValueCallback` Parameter und übergibt sie den Schlüssel.</span><span class="sxs-lookup"><span data-stu-id="4a024-173">If `key` does not exist in the table, <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetValue%2A> invokes the method that is defined by the `createValueCallback` parameter and passes it the key.</span></span> <span data-ttu-id="4a024-174">Ein neuer Wert wird auf den Schlüssel in der Tabelle gebunden und als Ergebnis zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="4a024-174">A new value is bound to the key in the table and returned as a result.</span></span>  
  
 <span data-ttu-id="4a024-175">Verwenden Sie diese Methode nur, wenn die Klasse, die den Wert der Tabelle stellt einen Standardkonstruktor nicht definiert ist.</span><span class="sxs-lookup"><span data-stu-id="4a024-175">Use this method only when the class that represents the table's value does not define a default constructor.</span></span> <span data-ttu-id="4a024-176">Wenn sie einen Standardkonstruktor definiert, verwenden die <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetOrCreateValue%2A> Methode stattdessen.</span><span class="sxs-lookup"><span data-stu-id="4a024-176">If it does define a default constructor, use the <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetOrCreateValue%2A> method instead.</span></span> <span data-ttu-id="4a024-177">Zum Abrufen des Werts eines vorhandenen Schlüssels ohne Hinzufügen von Schlüssel/Wert-Paar aufrufen, wenn der Schlüssel in der Tabelle nicht gefunden wird die <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.TryGetValue%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="4a024-177">To retrieve the value of an existing key without adding the key/value pair if the key is not found in the table, call the <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.TryGetValue%2A> method.</span></span>  
  
 <span data-ttu-id="4a024-178">Wenn mehrere Threads versuchen, den gleichen Schlüssel erstellen `createValueCallback` mit demselben Schlüssel mehrmals aufgerufen werden kann.</span><span class="sxs-lookup"><span data-stu-id="4a024-178">If multiple threads try to create the same key, `createValueCallback` may be invoked multiple times with the same key.</span></span> <span data-ttu-id="4a024-179">Nur eine dieser Aufrufe ist erfolgreich, und der zurückgegebene Wert wird in der Tabelle hinzugefügt werden.</span><span class="sxs-lookup"><span data-stu-id="4a024-179">Only one of these calls will succeed, and its returned value will be added to the table.</span></span> <span data-ttu-id="4a024-180">Bestimmung des Threads kann erfolgreich beim Erstellen des Werts ist unbestimmt.</span><span class="sxs-lookup"><span data-stu-id="4a024-180">Which thread succeeds in creating the value is indeterminate.</span></span> <span data-ttu-id="4a024-181">Diese Regel erlaubt, die Tabelle aufzurufenden `createValueCallback` außerhalb der internen Tabellensperre, um Deadlocks zu verhindern.</span><span class="sxs-lookup"><span data-stu-id="4a024-181">This rule permits the table to invoke `createValueCallback` outside the internal table lock to prevent deadlocks.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4a024-182">Das folgende Beispiel definiert eine `MainClass` Klasse und ein `MainInfo` -Klasse, die Informationen zu den `MainClass` Instanz.</span><span class="sxs-lookup"><span data-stu-id="4a024-182">The following example defines a `MainClass` class and a `MainInfo` class, which provides information about the `MainClass` instance.</span></span> <span data-ttu-id="4a024-183">Es definiert auch eine statische (`Shared` in Visual Basic) `CreateAttachedValue` -Methode, die zugewiesen werden kann die <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.CreateValueCallback> delegieren und an die <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetValue%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="4a024-183">It also defines a static (`Shared` in Visual Basic) `CreateAttachedValue` method that can be assigned to the <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.CreateValueCallback> delegate and passed to the <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetValue%2A> method.</span></span> <span data-ttu-id="4a024-184">Im Beispiel wird die <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetValue%2A> -Methode zum Hinzufügen einer `MainClass` -Objekt und seine angefügten `MainInfo` -Objekt an eine <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602> Tabelle.</span><span class="sxs-lookup"><span data-stu-id="4a024-184">The example calls the <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetValue%2A> method to add a `MainClass` object and its attached `MainInfo` object to a <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602> table.</span></span> <span data-ttu-id="4a024-185">Das Beispiel veranschaulicht auch Aufrufe an die <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.Add%2A> und <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetOrCreateValue%2A> Methoden zum Hinzufügen von Schlüssel/Wert-Paare in der Tabelle, und klicken Sie auf die <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.TryGetValue%2A> Methode zum Abrufen des Werts eines vorhandenen Schlüssels.</span><span class="sxs-lookup"><span data-stu-id="4a024-185">The example also illustrates calls to the <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.Add%2A> and <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetOrCreateValue%2A> methods to add key/value pairs to the table, and to the <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.TryGetValue%2A> method to retrieve the value of an existing key.</span></span>  
  
 [!code-csharp[System.Runtime.CompilerServices.ConditionalWeakTable.GetValue#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.compilerservices.conditionalweaktable.getvalue/cs/getvalue1.cs#1)]
 [!code-vb[System.Runtime.CompilerServices.ConditionalWeakTable.GetValue#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.runtime.compilerservices.conditionalweaktable.getvalue/vb/getvalue1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4a024-186">
            <paramref name="key" /> oder <paramref name="createValueCallback" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a024-186">
              <paramref name="key" /> or <paramref name="createValueCallback" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="4a024-187">erfordert volle Vertrauenswürdigkeit für den unmittelbaren Aufrufer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a024-187">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="4a024-188">Dieser Member kann nicht von teilweise vertrauenswürdigem oder transparentem Code verwendet werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a024-188">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.GetOrCreateValue(`0)" />
        <altmember cref="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.TryGetValue(`0,`1@)" />
        <altmember cref="T:System.Runtime.CompilerServices.ConditionalWeakTable`2.CreateValueCallback" />
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public bool Remove (TKey key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Remove(!TKey key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.Remove(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function Remove (key As TKey) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Remove(TKey key);" />
      <MemberSignature Language="F#" Value="member this.Remove : 'Key -&gt; bool" Usage="conditionalWeakTable.Remove key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="TKey" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="4a024-189">Der zu entfernende Schlüssel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a024-189">The key to remove.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a024-190">Entfernt einen Schlüssel und seinen Wert aus der Tabelle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a024-190">Removes a key and its value from the table.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a024-191">
            <see langword="true" />, wenn der Schlüssel gefunden und entfernt wurde, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a024-191">
              <see langword="true" /> if the key is found and removed; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a024-192">Wenn der Schlüssel Garbage collection während dieses Vorgangs ist, die Methode löst eine Ausnahme aus, und der Rückgabewert ist nicht definiert.</span><span class="sxs-lookup"><span data-stu-id="4a024-192">If the key is garbage-collected during this operation, the method does not raise an exception and the return value is undefined.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4a024-193">
            <paramref name="key" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a024-193">
              <paramref name="key" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="4a024-194">erfordert volle Vertrauenswürdigkeit für den unmittelbaren Aufrufer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a024-194">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="4a024-195">Dieser Member kann nicht von teilweise vertrauenswürdigem oder transparentem Code verwendet werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a024-195">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.Generic.IEnumerator&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt; IEnumerable&lt;KeyValuePair&lt;TKey,TValue&gt;&gt;.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.Generic.IEnumerator`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;!TKey, !TValue&gt;&gt; System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.System#Collections#Generic#IEnumerable&lt;System#Collections#Generic#KeyValuePair&lt;TKey,TValue&gt;&gt;#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator(Of KeyValuePair(Of TKey, TValue)) Implements IEnumerable(Of KeyValuePair(Of TKey, TValue)).GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::Generic::IEnumerator&lt;System::Collections::Generic::KeyValuePair&lt;TKey, TValue&gt;&gt; ^ System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.GetEnumerator() = System::Collections::Generic::IEnumerable&lt;System::Collections::Generic::KeyValuePair&lt;TKey, TValue&gt;&gt;::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEnumerable`1.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerator&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGetValue">
      <MemberSignature Language="C#" Value="public bool TryGetValue (TKey key, out TValue value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetValue(!TKey key, [out] !TValue&amp; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.TryGetValue(`0,`1@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetValue (key As TKey, ByRef value As TValue) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryGetValue(TKey key, [Runtime::InteropServices::Out] TValue % value);" />
      <MemberSignature Language="F#" Value="member this.TryGetValue : 'Key *  -&gt; bool" Usage="conditionalWeakTable.TryGetValue (key, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="TKey" />
        <Parameter Name="value" Type="TValue&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="4a024-196">Der Schlüssel, der ein Objekt mit einer angefügten Eigenschaft darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a024-196">The key that represents an object with an attached property.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="4a024-197">Enthält nach dem Beenden dieser Methode den angefügten Eigenschaftswert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a024-197">When this method returns, contains the attached property value.</span>
          </span>
          <span data-ttu-id="4a024-198">
            <c>value</c> enthält den Standardwert, wenn <c>key</c> nicht gefunden wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a024-198">If <c>key</c> is not found, <c>value</c> contains the default value.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a024-199">Ruft den Wert des angegebenen Schlüssels ab.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a024-199">Gets the value of the specified key.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a024-200">
            <see langword="true" />, wenn <paramref name="key" /> gefunden wurde, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a024-200">
              <see langword="true" /> if <paramref name="key" /> is found; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a024-201">Wenn der Schlüssel Garbage collection während dieses Vorgangs ist, kann die Methode zurückgeben `false` und legen Sie `value` auf den Standardwert Wert (als ob der Schlüssel nicht vorhanden waren).</span><span class="sxs-lookup"><span data-stu-id="4a024-201">If the key is garbage-collected during this operation, the method may return `false` and set `value` to the default value (as if the key were not present).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4a024-202">Das folgende Beispiel definiert eine `MainClass` Klasse und ein `MainInfo` -Klasse, die Informationen zu den `MainClass` Instanz.</span><span class="sxs-lookup"><span data-stu-id="4a024-202">The following example defines a `MainClass` class and a `MainInfo` class, which provides information about the `MainClass` instance.</span></span> <span data-ttu-id="4a024-203">Im Beispiel wird die <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.Add%2A>, <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetOrCreateValue%2A>, und <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetValue%2A> Methoden zum Hinzufügen von Schlüssel/Wert-Paare zu einer <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602> Tabelle.</span><span class="sxs-lookup"><span data-stu-id="4a024-203">The example calls the <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.Add%2A>, <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetOrCreateValue%2A>, and <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetValue%2A> methods to add key/value pairs to a <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602> table.</span></span> <span data-ttu-id="4a024-204">In jedem Fall im Beispiel wird die <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.TryGetValue%2A> Methode, um sicherzustellen, dass das Schlüssel/Wert-Paar in der Tabelle hinzugefügt wurde.</span><span class="sxs-lookup"><span data-stu-id="4a024-204">In each case, the example calls the <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.TryGetValue%2A> method to confirm that the key/value pair has been added to the table.</span></span>  
  
 [!code-csharp[System.Runtime.CompilerServices.ConditionalWeakTable.GetValue#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.compilerservices.conditionalweaktable.getvalue/cs/getvalue1.cs#1)]
 [!code-vb[System.Runtime.CompilerServices.ConditionalWeakTable.GetValue#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.runtime.compilerservices.conditionalweaktable.getvalue/vb/getvalue1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4a024-205">
            <paramref name="key" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a024-205">
              <paramref name="key" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="4a024-206">erfordert volle Vertrauenswürdigkeit für den unmittelbaren Aufrufer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a024-206">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="4a024-207">Dieser Member kann nicht von teilweise vertrauenswürdigem oder transparentem Code verwendet werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a024-207">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.GetOrCreateValue(`0)" />
        <altmember cref="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.GetValue(`0,System.Runtime.CompilerServices.ConditionalWeakTable{`0,`1}.CreateValueCallback)" />
      </Docs>
    </Member>
  </Members>
</Type>