<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ConditionalWeakTable`2.xml" source-language="en-US" target-language="de-DE">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac575a1ca0bc007b584e93073f8cc318bd920092d8d.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">75a1ca0bc007b584e93073f8cc318bd920092d8d</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.3,netstandard-1.4,netstandard-1.5,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.CompilerServices.ConditionalWeakTable`2">
          <source>The reference type to which the field is attached.</source>
          <target state="translated">Der Verweistyp, an den das Feld angefügt ist.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.CompilerServices.ConditionalWeakTable`2">
          <source>The field's type.</source>
          <target state="translated">Der Typ des Felds.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.CompilerServices.ConditionalWeakTable`2">
          <source>This must be a reference type.</source>
          <target state="translated">Dieser Typ muss ein Referenztyp sein.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" uid="T:System.Runtime.CompilerServices.ConditionalWeakTable`2">
          <source>Enables compilers to dynamically attach object fields to managed objects.</source>
          <target state="translated">Ermöglicht, dass Compiler dynamisch Objektfelder an verwaltete Objekte anfügen können.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.CompilerServices.ConditionalWeakTable`2">
          <source>The <ph id="ph1">&lt;xref:System.Runtime.CompilerServices.ConditionalWeakTable%602&gt;</ph> class enables language compilers to attach arbitrary properties to managed objects at run time.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Runtime.CompilerServices.ConditionalWeakTable%602&gt;</ph> Klasse Sprachcompilern auf beliebige Eigenschaften zur Laufzeit an verwaltete Objekte anfügen.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.CompilerServices.ConditionalWeakTable`2">
          <source>A <ph id="ph1">&lt;xref:System.Runtime.CompilerServices.ConditionalWeakTable%602&gt;</ph> object is a dictionary that binds a managed object, which is represented by a key, to its attached property, which is represented by a value.</source>
          <target state="translated">Ein <ph id="ph1">&lt;xref:System.Runtime.CompilerServices.ConditionalWeakTable%602&gt;</ph> Objekt ist ein Wörterbuch, das ein verwaltetes Objekt, das durch einen Schlüssel dargestellt wird an die angefügte Eigenschaft bindet, der durch einen Wert dargestellt wird.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.CompilerServices.ConditionalWeakTable`2">
          <source>The object's keys are the individual instances of the <ph id="ph1">`TKey`</ph> class to which the property is attached, and its values are the property values that are assigned to the corresponding objects.</source>
          <target state="translated">Die Schlüssel des Objekts sind die einzelnen Instanzen von der <ph id="ph1">`TKey`</ph> Klasse, zu denen die Eigenschaft angefügt ist, und seine Werte sind die Eigenschaftswerte, die den entsprechenden Objekten zugewiesen werden.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.CompilerServices.ConditionalWeakTable`2">
          <source>Keys must be unique; in other words, the <ph id="ph1">&lt;xref:System.Runtime.CompilerServices.ConditionalWeakTable%602&gt;</ph> class supports one attached value per managed object.</source>
          <target state="translated">Schlüssel müssen eindeutig sein; Das heißt, die <ph id="ph1">&lt;xref:System.Runtime.CompilerServices.ConditionalWeakTable%602&gt;</ph> -Klasse unterstützt einen angefügten Wert pro verwaltetes Objekt.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.CompilerServices.ConditionalWeakTable`2">
          <source>Two keys are equal if passing them to the <ph id="ph1">&lt;xref:System.Object.ReferenceEquals%2A?displayProperty=nameWithType&gt;</ph> method returns <ph id="ph2">`true`</ph>.</source>
          <target state="translated">Zwei Schlüssel sind gleich, wenn sie zum Übergeben der <ph id="ph1">&lt;xref:System.Object.ReferenceEquals%2A?displayProperty=nameWithType&gt;</ph> -Methode zurückkehrt <ph id="ph2">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.CompilerServices.ConditionalWeakTable`2">
          <source>You cannot control equality comparisons by overriding <ph id="ph1">&lt;xref:System.Object.GetHashCode%2A?displayProperty=nameWithType&gt;</ph> to explicitly set the hash code for a key.</source>
          <target state="translated">Sie können nicht steuern Übereinstimmungsvergleiche durch Außerkraftsetzen <ph id="ph1">&lt;xref:System.Object.GetHashCode%2A?displayProperty=nameWithType&gt;</ph> explizit den Hashcode für einen Schlüssel festzulegen.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.CompilerServices.ConditionalWeakTable`2">
          <source>The <ph id="ph1">&lt;xref:System.Runtime.CompilerServices.ConditionalWeakTable%602&gt;</ph> class does not use the <ph id="ph2">&lt;xref:System.Object.GetHashCode%2A?displayProperty=nameWithType&gt;</ph> method to compute hash codes, and therefore does not invoke <ph id="ph3">&lt;xref:System.Object.GetHashCode%2A?displayProperty=nameWithType&gt;</ph> overrides.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Runtime.CompilerServices.ConditionalWeakTable%602&gt;</ph> Klasse verwendet nicht die <ph id="ph2">&lt;xref:System.Object.GetHashCode%2A?displayProperty=nameWithType&gt;</ph> Methode zur Berechnung Hashcodes und daher nicht rufen <ph id="ph3">&lt;xref:System.Object.GetHashCode%2A?displayProperty=nameWithType&gt;</ph> überschreibt.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.CompilerServices.ConditionalWeakTable`2">
          <source>Although the <ph id="ph1">&lt;xref:System.Runtime.CompilerServices.ConditionalWeakTable%602&gt;</ph> class holds a collection of key/value pairs, it is best thought of as a table rather than a dictionary object.</source>
          <target state="translated">Obwohl die <ph id="ph1">&lt;xref:System.Runtime.CompilerServices.ConditionalWeakTable%602&gt;</ph> Klasse enthält eine Auflistung von Schlüssel/Wert-Paaren, es ist am besten betrachtet eine Tabelle, sondern als ein Dictionary-Objekt.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.CompilerServices.ConditionalWeakTable`2">
          <source>The <ph id="ph1">&lt;xref:System.Runtime.CompilerServices.ConditionalWeakTable%602&gt;</ph> class differs from a dictionary in several ways:</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Runtime.CompilerServices.ConditionalWeakTable%602&gt;</ph> Klasse unterscheidet sich von einem Wörterbuch auf verschiedene Weise:</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.CompilerServices.ConditionalWeakTable`2">
          <source>It does not persist keys.</source>
          <target state="translated">Schlüssel werden nicht beibehalten.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.CompilerServices.ConditionalWeakTable`2">
          <source>That is, a key is not kept alive only because it is a member of the collection.</source>
          <target state="translated">Ein Schlüssel ist, also nicht aktiv beibehalten, da es sich um ein Element der Auflistung ist.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.CompilerServices.ConditionalWeakTable`2">
          <source>It does not include all the methods (such as <ph id="ph1">`GetEnumerator`</ph> or <ph id="ph2">`Contains`</ph>) that a dictionary typically has.</source>
          <target state="translated">Es umfasst nicht alle Methoden (z. B. <ph id="ph1">`GetEnumerator`</ph> oder <ph id="ph2">`Contains`</ph>), die in der Regel ein Wörterbuch verfügt.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.CompilerServices.ConditionalWeakTable`2">
          <source>It does not implement the <ph id="ph1">&lt;xref:System.Collections.Generic.IDictionary%602&gt;</ph> interface.</source>
          <target state="translated">Es implementiert nicht die <ph id="ph1">&lt;xref:System.Collections.Generic.IDictionary%602&gt;</ph> Schnittstelle.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.CompilerServices.ConditionalWeakTable`2">
          <source>The <ph id="ph1">&lt;xref:System.Runtime.CompilerServices.ConditionalWeakTable%602&gt;</ph> class differs from other collection objects in its management of the object lifetime of keys stored in the collection.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Runtime.CompilerServices.ConditionalWeakTable%602&gt;</ph> Klasse unterscheidet sich von anderen Auflistungsobjekte in ihrer Verwaltung der Objektlebensdauer, der in der Auflistung gespeicherten Schlüssel.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.CompilerServices.ConditionalWeakTable`2">
          <source>Ordinarily, when an object is stored in a collection, its lifetime lasts until it is removed (and there are no additional references to the object) or until the collection object itself is destroyed.</source>
          <target state="translated">Wenn ein Objekt in einer Auflistung gespeichert wird, dauert seiner Lebensdauer normalerweise, bis er entfernt wird (und keine weiteren Verweise auf das Objekt vorhanden sind) oder das Auflistungsobjekt selbst zerstört wird.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.CompilerServices.ConditionalWeakTable`2">
          <source>However, in the <ph id="ph1">&lt;xref:System.Runtime.CompilerServices.ConditionalWeakTable%602&gt;</ph> class, adding a key/value pair to the table does not ensure that the key will persist, even if it can be reached directly from a value stored in the table (for example, if the table contains one key, A, with a value V1, and a second key, B, with a value P2 that contains a reference to A).</source>
          <target state="translated">Allerdings in der <ph id="ph1">&lt;xref:System.Runtime.CompilerServices.ConditionalWeakTable%602&gt;</ph> -Klasse, indem ein Schlüssel/Wert-Paar in die Tabelle wird nicht sichergestellt, dass der Schlüssel beibehalten wird, auch wenn er direkt aus einem Wert in der Tabelle (z. B., wenn die Tabelle einen Schlüssel, ein, mit dem Wert V1 enthält gespeicherten erreicht werden kann und einen zweiten Schlüssel B mit einem Wert von P2, die einen Verweis auf ein enthält).</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.CompilerServices.ConditionalWeakTable`2">
          <source>Instead, <ph id="ph1">&lt;xref:System.Runtime.CompilerServices.ConditionalWeakTable%602&gt;</ph> automatically removes the key/value entry as soon as no other references to a key exist outside the table.</source>
          <target state="translated">Stattdessen <ph id="ph1">&lt;xref:System.Runtime.CompilerServices.ConditionalWeakTable%602&gt;</ph> automatisch entfernt den Schlüssel/Wert-Eintrag, als keine weiteren Verweise auf einen Schlüssel außerhalb der Tabelle vorhanden sind.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.CompilerServices.ConditionalWeakTable`2">
          <source>The example provides an illustration.</source>
          <target state="translated">Dies wird im Beispiel veranschaulicht.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.CompilerServices.ConditionalWeakTable`2">
          <source>The following example illustrates that a key stored in the <ph id="ph1">&lt;xref:System.Runtime.CompilerServices.ConditionalWeakTable%602&gt;</ph> table does not persist after references to it outside the table are destroyed.</source>
          <target state="translated">Das folgende Beispiel veranschaulicht, dass ein Schlüssel, in gespeichert der <ph id="ph1">&lt;xref:System.Runtime.CompilerServices.ConditionalWeakTable%602&gt;</ph> nach Verweise darauf außerhalb der Tabelle zerstört werden, wird die Tabelle nicht beibehalten.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.CompilerServices.ConditionalWeakTable`2">
          <source>The example defines two classes: <ph id="ph1">`ManagedClass`</ph>, which represents the key in the table, and <ph id="ph2">`ClassData`</ph>, which represents the key's value.</source>
          <target state="translated">Im Beispiel werden zwei Klassen definiert: <ph id="ph1">`ManagedClass`</ph>, die die Schlüssel in der Tabelle darstellt und <ph id="ph2">`ClassData`</ph>, die die Schlüssel-Wert darstellt.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.CompilerServices.ConditionalWeakTable`2">
          <source>The example instantiates three objects of each type.</source>
          <target state="translated">Im Beispiel werden drei Objekte jedes Typs instanziiert.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.CompilerServices.ConditionalWeakTable`2">
          <source>It also instantiates a <ph id="ph1">&lt;xref:System.WeakReference&gt;</ph> object that represents the second <ph id="ph2">`ManagedClass`</ph>, and then destroys the second <ph id="ph3">`ManagedClass`</ph> instance.</source>
          <target state="translated">Auch instanziiert einen <ph id="ph1">&lt;xref:System.WeakReference&gt;</ph> -Objekt, das die Sekunde darstellt <ph id="ph2">`ManagedClass`</ph>, und klicken Sie dann die zweite zerstört <ph id="ph3">`ManagedClass`</ph> Instanz.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.CompilerServices.ConditionalWeakTable`2">
          <source>The attempt to retrieve the second <ph id="ph1">`ManagedClass`</ph> object from the <ph id="ph2">&lt;xref:System.WeakReference.Target%2A&gt;</ph> property indicates that no references to the object remain.</source>
          <target state="translated">Beim Abrufen der zweiten <ph id="ph1">`ManagedClass`</ph> -Objekt aus der <ph id="ph2">&lt;xref:System.WeakReference.Target%2A&gt;</ph> Eigenschaft gibt an, dass keine Verweise auf das Objekt bleiben.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.CompilerServices.ConditionalWeakTable`2">
          <source>Instances of the <ph id="ph1">&lt;see cref="T:System.Runtime.CompilerServices.ConditionalWeakTable`2" /&gt;</ph> class are thread safe.</source>
          <target state="translated">Instanzen der <ph id="ph1">&lt;see cref="T:System.Runtime.CompilerServices.ConditionalWeakTable`2" /&gt;</ph> Klasse sind threadsicher.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.CompilerServices.ConditionalWeakTable`2">
          <source>They do not require callers to do any additional locking.</source>
          <target state="translated">Sie benötigen keine Aufrufer zusätzliches sperren möchten.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Runtime.CompilerServices.ConditionalWeakTable`2" /&gt;</ph> class.</source>
          <target state="translated">Initialisiert eine neue Instanz der <ph id="ph1">&lt;see cref="T:System.Runtime.CompilerServices.ConditionalWeakTable`2" /&gt;</ph>-Klasse.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.#ctor">
          <source>The <ph id="ph1">&lt;xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.%23ctor%2A&gt;</ph> constructor instantiates an empty <ph id="ph2">&lt;xref:System.Runtime.CompilerServices.ConditionalWeakTable%602&gt;</ph> table; that is, the table contains no key/value pairs.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.%23ctor%2A&gt;</ph> -Konstruktor instanziiert eine leere <ph id="ph2">&lt;xref:System.Runtime.CompilerServices.ConditionalWeakTable%602&gt;</ph> Tabelle; d. h., der die Tabelle keine Schlüssel/Wert-Paare enthält.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.#ctor">
          <source>You can add key/value pairs by calling the <ph id="ph1">&lt;xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.Add%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetValue%2A&gt;</ph>, or <ph id="ph3">&lt;xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetOrCreateValue%2A&gt;</ph> method.</source>
          <target state="translated">Sie können Schlüssel/Wert-Paare hinzufügen, durch Aufrufen der <ph id="ph1">&lt;xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.Add%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetValue%2A&gt;</ph>, oder <ph id="ph3">&lt;xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetOrCreateValue%2A&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.#ctor">
          <source>Every key in a <ph id="ph1">&lt;xref:System.Runtime.CompilerServices.ConditionalWeakTable%602&gt;</ph> object must be unique.</source>
          <target state="translated">Jeder Schlüssel im einem <ph id="ph1">&lt;xref:System.Runtime.CompilerServices.ConditionalWeakTable%602&gt;</ph> Objekt muss eindeutig sein.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.#ctor">
          <source>Keys are not unique if they refer to the same object (that is, if passing them as arguments to the <ph id="ph1">&lt;xref:System.Object.ReferenceEquals%2A?displayProperty=nameWithType&gt;</ph> method returns <ph id="ph2">`true`</ph>).</source>
          <target state="translated">Schlüssel sind nicht eindeutig, wenn sie auf dasselbe Objekt verweisen (d. h., wenn sie übergeben als Argumente an die <ph id="ph1">&lt;xref:System.Object.ReferenceEquals%2A?displayProperty=nameWithType&gt;</ph> -Methode zurückkehrt <ph id="ph2">`true`</ph>).</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.Add(`0,`1)">
          <source>The key to add.</source>
          <target state="translated">Der hinzuzufügende Schlüssel.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.Add(`0,`1)">
          <source><bpt id="p1">&lt;c&gt;</bpt>key<ept id="p1">&lt;/c&gt;</ept> represents the object to which the property is attached.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>key<ept id="p1">&lt;/c&gt;</ept> stellt das Objekt dar, an das die Eigenschaft angefügt ist.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.Add(`0,`1)">
          <source>The key's property value.</source>
          <target state="translated">Der Eigenschaftswert des Schlüssels.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.Add(`0,`1)">
          <source>Adds a key to the table.</source>
          <target state="translated">Fügt der Tabelle einen Schlüssel hinzu.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.Add(`0,`1)">
          <source>Every key in a <ph id="ph1">&lt;xref:System.Runtime.CompilerServices.ConditionalWeakTable%602&gt;</ph> object must be unique.</source>
          <target state="translated">Jeder Schlüssel im einem <ph id="ph1">&lt;xref:System.Runtime.CompilerServices.ConditionalWeakTable%602&gt;</ph> Objekt muss eindeutig sein.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.Add(`0,`1)">
          <source>Keys are not unique if they refer to the same object (that is, if passing them as arguments to the <ph id="ph1">&lt;xref:System.Object.ReferenceEquals%2A?displayProperty=nameWithType&gt;</ph> method returns <ph id="ph2">`true`</ph>).</source>
          <target state="translated">Schlüssel sind nicht eindeutig, wenn sie auf dasselbe Objekt verweisen (d. h., wenn sie übergeben als Argumente an die <ph id="ph1">&lt;xref:System.Object.ReferenceEquals%2A?displayProperty=nameWithType&gt;</ph> -Methode zurückkehrt <ph id="ph2">`true`</ph>).</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.Add(`0,`1)">
          <source>If the key is garbage-collected during the addition operation, the existing key/value pair is removed and the new key/value pair is added without an exception being thrown.</source>
          <target state="translated">Wenn der Schlüssel Garbage collection während der Addition, vorhandene Schlüssel/Wert-Paar entfernt wird, und neue Schlüssel/Wert-Paar wird hinzugefügt, ohne eine Ausnahme ausgelöst.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.Add(`0,`1)">
          <source>The following example defines a <ph id="ph1">`MainClass`</ph> class and a <ph id="ph2">`MainInfo`</ph> class, which provides information about the <ph id="ph3">`MainClass`</ph> instance.</source>
          <target state="translated">Das folgende Beispiel definiert eine <ph id="ph1">`MainClass`</ph> Klasse und ein <ph id="ph2">`MainInfo`</ph> -Klasse, die Informationen zu den <ph id="ph3">`MainClass`</ph> Instanz.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.Add(`0,`1)">
          <source>The example then calls the <ph id="ph1">&lt;xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.Add%2A&gt;</ph> method to add a <ph id="ph2">`MainClass`</ph> object and its attached <ph id="ph3">`MainInfo`</ph> object to a <ph id="ph4">&lt;xref:System.Runtime.CompilerServices.ConditionalWeakTable%602&gt;</ph> table.</source>
          <target state="translated">Im Beispiel ruft dann die <ph id="ph1">&lt;xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.Add%2A&gt;</ph> -Methode zum Hinzufügen einer <ph id="ph2">`MainClass`</ph> -Objekt und seine angefügten <ph id="ph3">`MainInfo`</ph> -Objekt an eine <ph id="ph4">&lt;xref:System.Runtime.CompilerServices.ConditionalWeakTable%602&gt;</ph> Tabelle.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.Add(`0,`1)">
          <source>The example also illustrates calls to the <ph id="ph1">&lt;xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetOrCreateValue%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetValue%2A&gt;</ph> methods to add key/value pairs to the table, and to the <ph id="ph3">&lt;xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.TryGetValue%2A&gt;</ph> method to retrieve the value of an existing key.</source>
          <target state="translated">Das Beispiel veranschaulicht auch Aufrufe an die <ph id="ph1">&lt;xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetOrCreateValue%2A&gt;</ph> und <ph id="ph2">&lt;xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetValue%2A&gt;</ph> Methoden zum Hinzufügen von Schlüssel/Wert-Paare in der Tabelle, und klicken Sie auf die <ph id="ph3">&lt;xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.TryGetValue%2A&gt;</ph> Methode zum Abrufen des Werts eines vorhandenen Schlüssels.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.Add(`0,`1)">
          <source><ph id="ph1">&lt;paramref name="key" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="key" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.Add(`0,`1)">
          <source><ph id="ph1">&lt;paramref name="key" /&gt;</ph> already exists.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="key" /&gt;</ph> ist bereits vorhanden.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.Add(`0,`1)">
          <source>requires full trust for the immediate caller.</source>
          <target state="translated">erfordert volle Vertrauenswürdigkeit für den unmittelbaren Aufrufer.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.Add(`0,`1)">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">Dieser Member kann nicht von teilweise vertrauenswürdigem oder transparentem Code verwendet werden.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.Finalize">
          <source>Ensures that resources are freed and other cleanup operations are performed when the garbage collector reclaims the <ph id="ph1">&lt;see cref="T:System.Runtime.CompilerServices.ConditionalWeakTable`2" /&gt;</ph> object.</source>
          <target state="translated">Stellt das Freigeben von Ressourcen und das Ausführen anderer Garbage Collector-Vorgänge sicher, wenn der Garbage Collector das <ph id="ph1">&lt;see cref="T:System.Runtime.CompilerServices.ConditionalWeakTable`2" /&gt;</ph>-Objekt verarbeitet.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.Finalize">
          <source>The garbage collector calls <ph id="ph1">&lt;xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.Finalize%2A&gt;</ph> when the current object is ready to be finalized.</source>
          <target state="translated">Der Garbage Collector ruft <ph id="ph1">&lt;xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.Finalize%2A&gt;</ph> Wenn das aktuelle Objekt wird finalisiert werden.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.GetOrCreateValue(`0)">
          <source>The key to search for.</source>
          <target state="translated">Der zu suchende Schlüssel.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.GetOrCreateValue(`0)">
          <source><bpt id="p1">&lt;c&gt;</bpt>key<ept id="p1">&lt;/c&gt;</ept> represents the object to which the property is attached.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>key<ept id="p1">&lt;/c&gt;</ept> stellt das Objekt dar, an das die Eigenschaft angefügt ist.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.GetOrCreateValue(`0)">
          <source>Atomically searches for a specified key in the table and returns the corresponding value.</source>
          <target state="translated">Sucht atomar nach einem angegebenen Schlüssel in der Tabelle und gibt den entsprechenden Wert zurück.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.GetOrCreateValue(`0)">
          <source>If the key does not exist in the table, the method invokes the default constructor of the class that represents the table's value to create a value that is bound to the specified key.</source>
          <target state="translated">Wenn der Schlüssel in der Tabelle nicht vorhanden ist, ruft die Methode den Standardkonstruktor der Klasse auf, die den Wert der Tabelle darstellt, um einen Wert zu erstellen, der an den angegebenen Schlüssel gebunden wird.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.GetOrCreateValue(`0)">
          <source>The value that corresponds to <ph id="ph1">&lt;paramref name="key" /&gt;</ph>, if <ph id="ph2">&lt;paramref name="key" /&gt;</ph> already exists in the table; otherwise, a new value created by the default constructor of the class defined by the <ph id="ph3">&lt;paramref name="TValue" /&gt;</ph> generic type parameter.</source>
          <target state="translated">Der Wert, der <ph id="ph1">&lt;paramref name="key" /&gt;</ph> entspricht, wenn <ph id="ph2">&lt;paramref name="key" /&gt;</ph> bereits in der Tabelle vorhanden ist, andernfalls ein von dem vom generischen <ph id="ph3">&lt;paramref name="TValue" /&gt;</ph>-Typparameter definierten Standardkonstruktor der Klasse erstellter neuer Wert.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.GetOrCreateValue(`0)">
          <source>If <ph id="ph1">`key`</ph> does not exist in the table, the method adds it, along with the object that is instantiated by calling the default constructor of the class defined by the <ph id="ph2">`TValue`</ph> generic type parameter.</source>
          <target state="translated">Wenn <ph id="ph1">`key`</ph> existiert nicht in der Tabelle, die Methode hinzugefügt, zusammen mit dem Objekt, das instanziiert wird, indem Sie den Standardkonstruktor der Klasse definiert, die durch Aufrufen der <ph id="ph2">`TValue`</ph> generischen Typparameter.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.GetOrCreateValue(`0)">
          <source>If the <ph id="ph1">`TValue`</ph> class has no default constructor, a <ph id="ph2">&lt;xref:System.MissingMethodException&gt;</ph> is thrown.</source>
          <target state="translated">Wenn die <ph id="ph1">`TValue`</ph> -Klasse verfügt über keinen Standardkonstruktor eine <ph id="ph2">&lt;xref:System.MissingMethodException&gt;</ph> ausgelöst wird.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.GetOrCreateValue(`0)">
          <source>This is the recommended method of retrieving an existing value or adding a new value to the <ph id="ph1">&lt;xref:System.Runtime.CompilerServices.ConditionalWeakTable%602&gt;</ph> table if the class of the table's value defines a default constructor.</source>
          <target state="translated">Dies ist die empfohlene Methode zum Abrufen eines vorhandenen Werts oder Hinzufügen eines neuen Werts auf die <ph id="ph1">&lt;xref:System.Runtime.CompilerServices.ConditionalWeakTable%602&gt;</ph> Tabelle, wenn die Klasse der Wert der Tabelle einen Standardkonstruktor definiert.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.GetOrCreateValue(`0)">
          <source>If it does not define a default constructor, you can instead call the <ph id="ph1">&lt;xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetValue%2A&gt;</ph> method, which relies on a callback-provided method to instantiate the object representing the table's value</source>
          <target state="translated">Wenn sie einen Standardkonstruktor nicht definiert, können Sie stattdessen Aufrufen der <ph id="ph1">&lt;xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetValue%2A&gt;</ph> -Methode, die abhängt, eine Methode bereitgestellten Rückruf zum Instanziieren des Objekts, das den Wert der Tabelle darstellt.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.GetOrCreateValue(`0)">
          <source>To retrieve the value of an existing key without adding the key/value pair if the key is not found in the table, call the <ph id="ph1">&lt;xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.TryGetValue%2A&gt;</ph> method.</source>
          <target state="translated">Zum Abrufen des Werts eines vorhandenen Schlüssels ohne Hinzufügen von Schlüssel/Wert-Paar aufrufen, wenn der Schlüssel in der Tabelle nicht gefunden wird die <ph id="ph1">&lt;xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.TryGetValue%2A&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.GetOrCreateValue(`0)">
          <source>The following example defines a <ph id="ph1">`MainClass`</ph> class and a <ph id="ph2">`MainInfo`</ph> class, which provides information about the <ph id="ph3">`MainClass`</ph> instance.</source>
          <target state="translated">Das folgende Beispiel definiert eine <ph id="ph1">`MainClass`</ph> Klasse und ein <ph id="ph2">`MainInfo`</ph> -Klasse, die Informationen zu den <ph id="ph3">`MainClass`</ph> Instanz.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.GetOrCreateValue(`0)">
          <source>The example calls the <ph id="ph1">&lt;xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetOrCreateValue%2A&gt;</ph> method to add a <ph id="ph2">`MainClass`</ph> object and its attached <ph id="ph3">`MainInfo`</ph> object to a <ph id="ph4">&lt;xref:System.Runtime.CompilerServices.ConditionalWeakTable%602&gt;</ph> table.</source>
          <target state="translated">Im Beispiel wird die <ph id="ph1">&lt;xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetOrCreateValue%2A&gt;</ph> -Methode zum Hinzufügen einer <ph id="ph2">`MainClass`</ph> -Objekt und seine angefügten <ph id="ph3">`MainInfo`</ph> -Objekt an eine <ph id="ph4">&lt;xref:System.Runtime.CompilerServices.ConditionalWeakTable%602&gt;</ph> Tabelle.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.GetOrCreateValue(`0)">
          <source>The example also illustrates calls to the <ph id="ph1">&lt;xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.Add%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetValue%2A&gt;</ph> methods to add key/value pairs to the table, and to the <ph id="ph3">&lt;xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.TryGetValue%2A&gt;</ph> method to retrieve the value of an existing key.</source>
          <target state="translated">Das Beispiel veranschaulicht auch Aufrufe an die <ph id="ph1">&lt;xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.Add%2A&gt;</ph> und <ph id="ph2">&lt;xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetValue%2A&gt;</ph> Methoden zum Hinzufügen von Schlüssel/Wert-Paare in der Tabelle, und klicken Sie auf die <ph id="ph3">&lt;xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.TryGetValue%2A&gt;</ph> Methode zum Abrufen des Werts eines vorhandenen Schlüssels.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.GetOrCreateValue(`0)">
          <source><ph id="ph1">&lt;paramref name="key" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="key" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.GetOrCreateValue(`0)">
          <source>In the <bpt id="p1">[</bpt>.NET for Windows Store apps<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=247912)</ept> or the <bpt id="p2">[</bpt>Portable Class Library<ept id="p2">](~/docs/standard/cross-platform/cross-platform-development-with-the-portable-class-library.md)</ept>, catch the base class exception, <ph id="ph1">&lt;see cref="T:System.MissingMemberException" /&gt;</ph>, instead.</source>
          <target state="translated">Fangen Sie in <bpt id="p1">[</bpt>.NET für Windows Store-Apps<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=247912)</ept> oder der <bpt id="p2">[</bpt>portablen Klassenbibliothek<ept id="p2">](~/docs/standard/cross-platform/cross-platform-development-with-the-portable-class-library.md)</ept> stattdessen die Basisklassenausnahme <ph id="ph1">&lt;see cref="T:System.MissingMemberException" /&gt;</ph> ab.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.GetOrCreateValue(`0)">
          <source>The class that represents the table's value does not define a default constructor.</source>
          <target state="translated">Die Klasse, die den Wert der Tabelle darstellt, definiert keinen Standardkonstruktor.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.GetValue(`0,System.Runtime.CompilerServices.ConditionalWeakTable`2.CreateValueCallback{`0,`1})">
          <source>The key to search for.</source>
          <target state="translated">Der zu suchende Schlüssel.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.GetValue(`0,System.Runtime.CompilerServices.ConditionalWeakTable`2.CreateValueCallback{`0,`1})">
          <source><bpt id="p1">&lt;c&gt;</bpt>key<ept id="p1">&lt;/c&gt;</ept> represents the object to which the property is attached.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>key<ept id="p1">&lt;/c&gt;</ept> stellt das Objekt dar, an das die Eigenschaft angefügt ist.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.GetValue(`0,System.Runtime.CompilerServices.ConditionalWeakTable`2.CreateValueCallback{`0,`1})">
          <source>A delegate to a method that can create a value for the given <bpt id="p1">&lt;c&gt;</bpt>key<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Ein Delegat zu einer Methode, die einen Wert für den angegebenen <bpt id="p1">&lt;c&gt;</bpt>key<ept id="p1">&lt;/c&gt;</ept> erstellen kann.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.GetValue(`0,System.Runtime.CompilerServices.ConditionalWeakTable`2.CreateValueCallback{`0,`1})">
          <source>It has a single parameter of type <bpt id="p1">&lt;c&gt;</bpt>TKey<ept id="p1">&lt;/c&gt;</ept>, and returns a value of type <bpt id="p2">&lt;c&gt;</bpt>TValue<ept id="p2">&lt;/c&gt;</ept>.</source>
          <target state="translated">Er verfügt über einen einzelnen Parameter vom Typ <bpt id="p1">&lt;c&gt;</bpt>TKey<ept id="p1">&lt;/c&gt;</ept> und gibt einen Wert vom Typ <bpt id="p2">&lt;c&gt;</bpt>TValue<ept id="p2">&lt;/c&gt;</ept> zurück.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.GetValue(`0,System.Runtime.CompilerServices.ConditionalWeakTable`2.CreateValueCallback{`0,`1})">
          <source>Atomically searches for a specified key in the table and returns the corresponding value.</source>
          <target state="translated">Sucht atomar nach einem angegebenen Schlüssel in der Tabelle und gibt den entsprechenden Wert zurück.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.GetValue(`0,System.Runtime.CompilerServices.ConditionalWeakTable`2.CreateValueCallback{`0,`1})">
          <source>If the key does not exist in the table, the method invokes a callback method to create a value that is bound to the specified key.</source>
          <target state="translated">Wenn der Schlüssel in der Tabelle nicht vorhanden ist, ruft die Methode eine Rückrufmethode auf, um einen Wert zu erstellen, der an den angegebenen Schlüssel gebunden ist.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.GetValue(`0,System.Runtime.CompilerServices.ConditionalWeakTable`2.CreateValueCallback{`0,`1})">
          <source>The value attached to <ph id="ph1">&lt;paramref name="key" /&gt;</ph>, if <ph id="ph2">&lt;paramref name="key" /&gt;</ph> already exists in the table; otherwise, the new value returned by the <ph id="ph3">&lt;paramref name="createValueCallback" /&gt;</ph> delegate.</source>
          <target state="translated">Der an <ph id="ph1">&lt;paramref name="key" /&gt;</ph> angefügte Wert, wenn <ph id="ph2">&lt;paramref name="key" /&gt;</ph> bereits in der Tabelle vorhanden ist, andernfalls der vom <ph id="ph3">&lt;paramref name="createValueCallback" /&gt;</ph>-Delegaten zurückgegebene neue Wert.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.GetValue(`0,System.Runtime.CompilerServices.ConditionalWeakTable`2.CreateValueCallback{`0,`1})">
          <source>If <ph id="ph1">`key`</ph> does not exist in the table, <ph id="ph2">&lt;xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetValue%2A&gt;</ph> invokes the method that is defined by the <ph id="ph3">`createValueCallback`</ph> parameter and passes it the key.</source>
          <target state="translated">Wenn <ph id="ph1">`key`</ph> existiert nicht in der Tabelle <ph id="ph2">&lt;xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetValue%2A&gt;</ph> Ruft die Methode, die von definiert ist die <ph id="ph3">`createValueCallback`</ph> Parameter und übergibt sie den Schlüssel.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.GetValue(`0,System.Runtime.CompilerServices.ConditionalWeakTable`2.CreateValueCallback{`0,`1})">
          <source>A new value is bound to the key in the table and returned as a result.</source>
          <target state="translated">Ein neuer Wert wird auf den Schlüssel in der Tabelle gebunden und als Ergebnis zurückgegeben.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.GetValue(`0,System.Runtime.CompilerServices.ConditionalWeakTable`2.CreateValueCallback{`0,`1})">
          <source>Use this method only when the class that represents the table's value does not define a default constructor.</source>
          <target state="translated">Verwenden Sie diese Methode nur, wenn die Klasse, die den Wert der Tabelle stellt einen Standardkonstruktor nicht definiert ist.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.GetValue(`0,System.Runtime.CompilerServices.ConditionalWeakTable`2.CreateValueCallback{`0,`1})">
          <source>If it does define a default constructor, use the <ph id="ph1">&lt;xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetOrCreateValue%2A&gt;</ph> method instead.</source>
          <target state="translated">Wenn sie einen Standardkonstruktor definiert, verwenden die <ph id="ph1">&lt;xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetOrCreateValue%2A&gt;</ph> Methode stattdessen.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.GetValue(`0,System.Runtime.CompilerServices.ConditionalWeakTable`2.CreateValueCallback{`0,`1})">
          <source>To retrieve the value of an existing key without adding the key/value pair if the key is not found in the table, call the <ph id="ph1">&lt;xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.TryGetValue%2A&gt;</ph> method.</source>
          <target state="translated">Zum Abrufen des Werts eines vorhandenen Schlüssels ohne Hinzufügen von Schlüssel/Wert-Paar aufrufen, wenn der Schlüssel in der Tabelle nicht gefunden wird die <ph id="ph1">&lt;xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.TryGetValue%2A&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.GetValue(`0,System.Runtime.CompilerServices.ConditionalWeakTable`2.CreateValueCallback{`0,`1})">
          <source>If multiple threads try to create the same key, <ph id="ph1">`createValueCallback`</ph> may be invoked multiple times with the same key.</source>
          <target state="translated">Wenn mehrere Threads versuchen, den gleichen Schlüssel erstellen <ph id="ph1">`createValueCallback`</ph> mit demselben Schlüssel mehrmals aufgerufen werden kann.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.GetValue(`0,System.Runtime.CompilerServices.ConditionalWeakTable`2.CreateValueCallback{`0,`1})">
          <source>Only one of these calls will succeed, and its returned value will be added to the table.</source>
          <target state="translated">Nur eine dieser Aufrufe ist erfolgreich, und der zurückgegebene Wert wird in der Tabelle hinzugefügt werden.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.GetValue(`0,System.Runtime.CompilerServices.ConditionalWeakTable`2.CreateValueCallback{`0,`1})">
          <source>Which thread succeeds in creating the value is indeterminate.</source>
          <target state="translated">Bestimmung des Threads kann erfolgreich beim Erstellen des Werts ist unbestimmt.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.GetValue(`0,System.Runtime.CompilerServices.ConditionalWeakTable`2.CreateValueCallback{`0,`1})">
          <source>This rule permits the table to invoke <ph id="ph1">`createValueCallback`</ph> outside the internal table lock to prevent deadlocks.</source>
          <target state="translated">Diese Regel erlaubt, die Tabelle aufzurufenden <ph id="ph1">`createValueCallback`</ph> außerhalb der internen Tabellensperre, um Deadlocks zu verhindern.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.GetValue(`0,System.Runtime.CompilerServices.ConditionalWeakTable`2.CreateValueCallback{`0,`1})">
          <source>The following example defines a <ph id="ph1">`MainClass`</ph> class and a <ph id="ph2">`MainInfo`</ph> class, which provides information about the <ph id="ph3">`MainClass`</ph> instance.</source>
          <target state="translated">Das folgende Beispiel definiert eine <ph id="ph1">`MainClass`</ph> Klasse und ein <ph id="ph2">`MainInfo`</ph> -Klasse, die Informationen zu den <ph id="ph3">`MainClass`</ph> Instanz.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.GetValue(`0,System.Runtime.CompilerServices.ConditionalWeakTable`2.CreateValueCallback{`0,`1})">
          <source>It also defines a static (<ph id="ph1">`Shared`</ph> in Visual Basic) <ph id="ph2">`CreateAttachedValue`</ph> method that can be assigned to the <ph id="ph3">&lt;xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.CreateValueCallback&gt;</ph> delegate and passed to the <ph id="ph4">&lt;xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetValue%2A&gt;</ph> method.</source>
          <target state="translated">Es definiert auch eine statische (<ph id="ph1">`Shared`</ph> in Visual Basic) <ph id="ph2">`CreateAttachedValue`</ph> -Methode, die zugewiesen werden kann die <ph id="ph3">&lt;xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.CreateValueCallback&gt;</ph> delegieren und an die <ph id="ph4">&lt;xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetValue%2A&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.GetValue(`0,System.Runtime.CompilerServices.ConditionalWeakTable`2.CreateValueCallback{`0,`1})">
          <source>The example calls the <ph id="ph1">&lt;xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetValue%2A&gt;</ph> method to add a <ph id="ph2">`MainClass`</ph> object and its attached <ph id="ph3">`MainInfo`</ph> object to a <ph id="ph4">&lt;xref:System.Runtime.CompilerServices.ConditionalWeakTable%602&gt;</ph> table.</source>
          <target state="translated">Im Beispiel wird die <ph id="ph1">&lt;xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetValue%2A&gt;</ph> -Methode zum Hinzufügen einer <ph id="ph2">`MainClass`</ph> -Objekt und seine angefügten <ph id="ph3">`MainInfo`</ph> -Objekt an eine <ph id="ph4">&lt;xref:System.Runtime.CompilerServices.ConditionalWeakTable%602&gt;</ph> Tabelle.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.GetValue(`0,System.Runtime.CompilerServices.ConditionalWeakTable`2.CreateValueCallback{`0,`1})">
          <source>The example also illustrates calls to the <ph id="ph1">&lt;xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.Add%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetOrCreateValue%2A&gt;</ph> methods to add key/value pairs to the table, and to the <ph id="ph3">&lt;xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.TryGetValue%2A&gt;</ph> method to retrieve the value of an existing key.</source>
          <target state="translated">Das Beispiel veranschaulicht auch Aufrufe an die <ph id="ph1">&lt;xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.Add%2A&gt;</ph> und <ph id="ph2">&lt;xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetOrCreateValue%2A&gt;</ph> Methoden zum Hinzufügen von Schlüssel/Wert-Paare in der Tabelle, und klicken Sie auf die <ph id="ph3">&lt;xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.TryGetValue%2A&gt;</ph> Methode zum Abrufen des Werts eines vorhandenen Schlüssels.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.GetValue(`0,System.Runtime.CompilerServices.ConditionalWeakTable`2.CreateValueCallback{`0,`1})">
          <source><ph id="ph1">&lt;paramref name="key" /&gt;</ph> or <ph id="ph2">&lt;paramref name="createValueCallback" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="key" /&gt;</ph> oder <ph id="ph2">&lt;paramref name="createValueCallback" /&gt;</ph> ist <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.GetValue(`0,System.Runtime.CompilerServices.ConditionalWeakTable`2.CreateValueCallback{`0,`1})">
          <source>requires full trust for the immediate caller.</source>
          <target state="translated">erfordert volle Vertrauenswürdigkeit für den unmittelbaren Aufrufer.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.GetValue(`0,System.Runtime.CompilerServices.ConditionalWeakTable`2.CreateValueCallback{`0,`1})">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">Dieser Member kann nicht von teilweise vertrauenswürdigem oder transparentem Code verwendet werden.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.Remove(`0)">
          <source>The key to remove.</source>
          <target state="translated">Der zu entfernende Schlüssel.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.Remove(`0)">
          <source>Removes a key and its value from the table.</source>
          <target state="translated">Entfernt einen Schlüssel und seinen Wert aus der Tabelle.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.Remove(`0)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the key is found and removed; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, wenn der Schlüssel gefunden und entfernt wurde, andernfalls <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.Remove(`0)">
          <source>If the key is garbage-collected during this operation, the method does not raise an exception and the return value is undefined.</source>
          <target state="translated">Wenn der Schlüssel Garbage collection während dieses Vorgangs ist, die Methode löst eine Ausnahme aus, und der Rückgabewert ist nicht definiert.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.Remove(`0)">
          <source><ph id="ph1">&lt;paramref name="key" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="key" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.Remove(`0)">
          <source>requires full trust for the immediate caller.</source>
          <target state="translated">erfordert volle Vertrauenswürdigkeit für den unmittelbaren Aufrufer.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.Remove(`0)">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">Dieser Member kann nicht von teilweise vertrauenswürdigem oder transparentem Code verwendet werden.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.TryGetValue(`0,`1@)">
          <source>The key that represents an object with an attached property.</source>
          <target state="translated">Der Schlüssel, der ein Objekt mit einer angefügten Eigenschaft darstellt.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.TryGetValue(`0,`1@)">
          <source>When this method returns, contains the attached property value.</source>
          <target state="translated">Enthält nach dem Beenden dieser Methode den angefügten Eigenschaftswert.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.TryGetValue(`0,`1@)">
          <source>If <bpt id="p1">&lt;c&gt;</bpt>key<ept id="p1">&lt;/c&gt;</ept> is not found, <bpt id="p2">&lt;c&gt;</bpt>value<ept id="p2">&lt;/c&gt;</ept> contains the default value.</source>
          <target state="translated"><bpt id="p2">&lt;c&gt;</bpt>value<ept id="p2">&lt;/c&gt;</ept> enthält den Standardwert, wenn <bpt id="p1">&lt;c&gt;</bpt>key<ept id="p1">&lt;/c&gt;</ept> nicht gefunden wird.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.TryGetValue(`0,`1@)">
          <source>Gets the value of the specified key.</source>
          <target state="translated">Ruft den Wert des angegebenen Schlüssels ab.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.TryGetValue(`0,`1@)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="key" /&gt;</ph> is found; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, wenn <ph id="ph2">&lt;paramref name="key" /&gt;</ph> gefunden wurde, andernfalls <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.TryGetValue(`0,`1@)">
          <source>If the key is garbage-collected during this operation, the method may return <ph id="ph1">`false`</ph> and set <ph id="ph2">`value`</ph> to the default value (as if the key were not present).</source>
          <target state="translated">Wenn der Schlüssel Garbage collection während dieses Vorgangs ist, kann die Methode zurückgeben <ph id="ph1">`false`</ph> und legen Sie <ph id="ph2">`value`</ph> auf den Standardwert Wert (als ob der Schlüssel nicht vorhanden waren).</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.TryGetValue(`0,`1@)">
          <source>The following example defines a <ph id="ph1">`MainClass`</ph> class and a <ph id="ph2">`MainInfo`</ph> class, which provides information about the <ph id="ph3">`MainClass`</ph> instance.</source>
          <target state="translated">Das folgende Beispiel definiert eine <ph id="ph1">`MainClass`</ph> Klasse und ein <ph id="ph2">`MainInfo`</ph> -Klasse, die Informationen zu den <ph id="ph3">`MainClass`</ph> Instanz.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.TryGetValue(`0,`1@)">
          <source>The example calls the <ph id="ph1">&lt;xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.Add%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetOrCreateValue%2A&gt;</ph>, and <ph id="ph3">&lt;xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetValue%2A&gt;</ph> methods to add key/value pairs to a <ph id="ph4">&lt;xref:System.Runtime.CompilerServices.ConditionalWeakTable%602&gt;</ph> table.</source>
          <target state="translated">Im Beispiel wird die <ph id="ph1">&lt;xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.Add%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetOrCreateValue%2A&gt;</ph>, und <ph id="ph3">&lt;xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetValue%2A&gt;</ph> Methoden zum Hinzufügen von Schlüssel/Wert-Paare zu einer <ph id="ph4">&lt;xref:System.Runtime.CompilerServices.ConditionalWeakTable%602&gt;</ph> Tabelle.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.TryGetValue(`0,`1@)">
          <source>In each case, the example calls the <ph id="ph1">&lt;xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.TryGetValue%2A&gt;</ph> method to confirm that the key/value pair has been added to the table.</source>
          <target state="translated">In jedem Fall im Beispiel wird die <ph id="ph1">&lt;xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.TryGetValue%2A&gt;</ph> Methode, um sicherzustellen, dass das Schlüssel/Wert-Paar in der Tabelle hinzugefügt wurde.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.TryGetValue(`0,`1@)">
          <source><ph id="ph1">&lt;paramref name="key" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="key" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.TryGetValue(`0,`1@)">
          <source>requires full trust for the immediate caller.</source>
          <target state="translated">erfordert volle Vertrauenswürdigkeit für den unmittelbaren Aufrufer.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.TryGetValue(`0,`1@)">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">Dieser Member kann nicht von teilweise vertrauenswürdigem oder transparentem Code verwendet werden.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>