<Type Name="CallConvStdcall" FullName="System.Runtime.CompilerServices.CallConvStdcall">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="cf42b2586c5829abf6123bee20f5e5deef3716ef" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39975064" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class CallConvStdcall" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CallConvStdcall extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.CompilerServices.CallConvStdcall" />
  <TypeSignature Language="VB.NET" Value="Public Class CallConvStdcall" />
  <TypeSignature Language="C++ CLI" Value="public ref class CallConvStdcall" />
  <TypeSignature Language="F#" Value="type CallConvStdcall = class" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.CompilerServices.VisualC</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Gibt an, dass eine Methode die <see langword="StdCall" />-Aufrufkonvention verwenden soll.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der Aufgerufene entleert den Stapel. Dies ist die Standardkonvention zum Aufrufen von nicht verwalteter Funktionen aus verwaltetem Code.  
  
 Die Klassen im <xref:System.Runtime.CompilerServices> Compilerautoren nur zur Verwendung sind.  
  
 Compiler geben benutzerdefinierte Modifizierer innerhalb der Metadaten, die die Art ändern, der just-in-Time-Compiler (JIT)-Werte behandelt, wenn das Standardverhalten nicht zulässig ist.  Wenn der JIT-Compiler einen benutzerdefinierten Modifizierer trifft, verarbeitet sie den Wert in der Weise, die den Modifizierer gibt an.  Compiler können Anwenden von benutzerdefinierten Modifizierer auf Methoden, Parameter und Rückgabewerte.  Der JIT-Compiler, erforderlichen Modifizierern reagieren muss, jedoch optionale Modifizierer ignorieren kann.  Ein C++-Compiler konnte einen benutzerdefinierten Modifizierer beschrieben, wie ein Byte behandelt werden sollte in Fällen, in dem der JIT-Compiler Bytes in einer Weise behandelt, die nicht kompatibel mit C++ ist, standardmäßig ausgeben.  
  
 Sie können benutzerdefinierte Modifizierer in Metadaten mit einer der folgenden Methoden auszugeben:  
  
-   Verwendung von Methoden in der <xref:System.Reflection.Emit.TypeBuilder> Klasse, z. B. <xref:System.Reflection.Emit.TypeBuilder.DefineMethod%2A>, <xref:System.Reflection.Emit.TypeBuilder.DefineField%2A>, <xref:System.Reflection.Emit.TypeBuilder.DefineConstructor%2A>, und <xref:System.Reflection.Emit.TypeBuilder.DefineProperty%2A>.  
  
-   Generieren einer Anweisungsdatei Microsoft intermediate Language (MSIL), die Aufrufe von enthält `modopt` und `modreq`, und die Datei mit Zusammenstellen der [Ilasm.exe (IL-Assembler)](~/docs/framework/tools/ilasm-exe-il-assembler.md).  
  
-   Verwenden die nicht verwaltete Reflektions-API.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CallConvStdcall ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.CompilerServices.CallConvStdcall.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CallConvStdcall();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.CompilerServices.VisualC</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Runtime.CompilerServices.CallConvStdcall" />-Klasse.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die Klassen im <xref:System.Runtime.CompilerServices> Compilerautoren nur zur Verwendung sind.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>