<Type Name="ConditionalWeakTable&lt;TKey,TValue&gt;+CreateValueCallback" FullName="System.Runtime.CompilerServices.ConditionalWeakTable&lt;TKey,TValue&gt;+CreateValueCallback">
  <Metadata><Meta Name="ms.openlocfilehash" Value="b34b35576273d0b5ef026967dc07d1dc04a9c196" /><Meta Name="ms.sourcegitcommit" Value="8ae9a18b248625c8e1851e607c00346a64849587" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="12/17/2019" /><Meta Name="ms.locfileid" Value="75166667" /></Metadata><TypeSignature Language="C#" Value="public delegate TValue ConditionalWeakTable&lt;TKey,TValue&gt;.CreateValueCallback(TKey key) where TKey : class where TValue : class;" />
  <TypeSignature Language="ILAsm" Value=".class nested public auto ansi sealed ConditionalWeakTable`2/CreateValueCallback&lt;class TKey, class TValue&gt; extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.CompilerServices.ConditionalWeakTable`2.CreateValueCallback" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Function ConditionalWeakTable(Of TKey, TValue).CreateValueCallback(key As TKey) As TValue " />
  <TypeSignature Language="C++ CLI" Value="public:  where TKey : class where TValue : classdelegate TValue ConditionalWeakTable&lt;TKey, TValue&gt;::CreateValueCallback(TKey key);" />
  <TypeSignature Language="F#" Value="type ConditionalWeakTable&lt;'Key, 'Value (requires 'Key : null and 'Value : null)&gt;.CreateValueCallback = delegate of 'Key -&gt; 'Value" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TKey">
      <Constraints>
        <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
      </Constraints>
    </TypeParameter>
    <TypeParameter Name="TValue">
      <Constraints>
        <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="key" Type="TKey" />
  </Parameters>
  <ReturnValue>
    <ReturnType>TValue</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="key">Der Schlüssel, der dem zu erstellenden Wert angehört.</param>
    <summary>Stellt eine Methode dar, die einen nicht standardmäßigen Wert erstellt, der als Teil eines Schlüssel-Wert-Paars einem <see cref="T:System.Runtime.CompilerServices.ConditionalWeakTable`2" />-Objekt hinzugefügt wird.</summary>
    <returns>Eine Instanz eines Verweistyps, der den Wert darstellt, der an den angegebenen Schlüssel angefügt werden soll.</returns>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.CreateValueCallback>-Delegat kapselt eine Rückruf Methode, die von der <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetValue%2A?displayProperty=nameWithType>-Methode aufgerufen wird, wenn der an die Methode weiter gegebene Schlüssel nicht im <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602> Objekt gefunden wird. Die <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetValue%2A>-Methode übergibt die Rückruf Methode als Schlüssel, der ein verwaltetes Objekt darstellt, dem ein Eigenschafts Wert dynamisch angefügt werden soll. Die-Methode ist dafür verantwortlich, den Eigenschafts Wert an den Aufrufer zurückzugeben, der wiederum das Schlüssel-Wert-Paar der Tabelle hinzufügt.  
  
 Die <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.CreateValueCallback>-Methode wird verwendet, um eine Instanz eines Verweis Typs zurückzugeben, die an den angegebenen Schlüssel angefügt werden kann. Diese Instanz kann mit nicht standardmäßigen Werten initialisiert werden. Wenn der Schlüssel nicht in der Tabelle gefunden wird, wird durch die <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetOrCreateValue%2A?displayProperty=nameWithType>-Methode ein Schlüssel-Wert-Paar hinzugefügt, in dem der Wert mit Standardwerten initialisiert wird.  
  
   
  
## Examples  
 Im folgenden Beispiel werden eine `MainClass`-Klasse und eine `MainInfo`-Klasse definiert. `MainInfo` stellt Informationen über die `MainClass` Instanz bereit. Außerdem wird eine statische (`Shared` in Visual Basic) `CreateAttachedValue` Methode definiert, die dem <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.CreateValueCallback> Delegaten zugewiesen und an die <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetValue%2A>-Methode übermittelt werden kann. Im Beispiel wird die <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetValue%2A>-Methode aufgerufen, um einer <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602> Tabelle ein `MainClass`-Objekt und das entsprechende `MainInfo`-Objekt hinzuzufügen. Das Beispiel veranschaulicht auch Aufrufe der Methoden <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.Add%2A> und <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetOrCreateValue%2A>, um der Tabelle Schlüssel/Wert-Paare hinzuzufügen, und einen Aufruf der <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.TryGetValue%2A>-Methode, um den Wert abzurufen, der zu einem vorhandenen Schlüssel gehört.  
  
 [!code-csharp[System.Runtime.CompilerServices.ConditionalWeakTable.GetValue#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.compilerservices.conditionalweaktable.getvalue/cs/getvalue1.cs#1)]
 [!code-vb[System.Runtime.CompilerServices.ConditionalWeakTable.GetValue#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.runtime.compilerservices.conditionalweaktable.getvalue/vb/getvalue1.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.GetValue(`0,System.Runtime.CompilerServices.ConditionalWeakTable{`0,`1}.CreateValueCallback)" />
  </Docs>
</Type>
