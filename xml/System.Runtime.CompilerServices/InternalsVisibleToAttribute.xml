<Type Name="InternalsVisibleToAttribute" FullName="System.Runtime.CompilerServices.InternalsVisibleToAttribute">
  <Metadata><Meta Name="ms.openlocfilehash" Value="657e65a2c4f745a71b7324c59207c72d70b93f6d" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70678092" /></Metadata><TypeSignature Language="C#" Value="public sealed class InternalsVisibleToAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit InternalsVisibleToAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.CompilerServices.InternalsVisibleToAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class InternalsVisibleToAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class InternalsVisibleToAttribute sealed : Attribute" />
  <TypeSignature Language="F#" Value="type InternalsVisibleToAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Assembly, AllowMultiple=true, Inherited=false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Gibt an, dass Typen, i. d. R. nur innerhalb der aktuellen Assembly sichtbar sind, auch in einer angegebenen Assembly angezeigt werden können.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Normalerweise sind Typen und Member `internal` mit `private protected` dem-oder C#- `Private Protected` Bereich `Friend` (in) und dem Gültigkeitsbereich (in Visual Basic) nur in der Assembly sichtbar, in der Sie definiert sind. Das <xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute> -Attribut macht Sie auch für die Typen in einer angegebenen Assembly sichtbar, die als Friend-Assembly bezeichnet wird. Dies gilt nur für `internal` (`Friend` in VB) oder `private protected`(`Private Protected` in VB)-Methoden, aber nicht `private` für.
  
 Das-Attribut wird auf Assemblyebene angewendet. Dies bedeutet, dass Sie am Anfang einer Quell Code Datei enthalten sein kann, oder Sie kann in die AssemblyInfo-Datei in einem Visual Studio-Projekt eingefügt werden. Sie können das-Attribut verwenden, um eine einzelne Friend-Assembly anzugeben, die auf die internen Typen und Member der aktuellen Assembly zugreifen kann. Sie können mehrere Friend-Assemblys auf zwei Arten definieren. Sie können als einzelne Attribute auf Assemblyebene angezeigt werden, wie im folgenden Beispiel veranschaulicht.  
  
 [!code-csharp[System.Runtime.CompilerServices.InternalsVisibleToAttribute#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/cs/multiple1.cs#3)]
 [!code-vb[System.Runtime.CompilerServices.InternalsVisibleToAttribute#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/vb/multiple1.vb#3)]  
  
 Sie können auch mit separaten <xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute> Tags, aber mit einem einzelnen `assembly` Schlüsselwort angezeigt werden, wie im folgenden Beispiel veranschaulicht.  
  
 [!code-csharp[System.Runtime.CompilerServices.InternalsVisibleToAttribute#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/cs/multiple2.cs#4)]
 [!code-vb[System.Runtime.CompilerServices.InternalsVisibleToAttribute#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/vb/multiple2.vb#4)]  
  
 Die Friend-Assembly wird durch den <xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute.%23ctor%2A> -Konstruktor identifiziert. Sowohl die aktuelle Assembly als auch die Friend-Assembly müssen nicht signiert sein, oder beide Assemblys müssen mit einem starken Namen signiert sein.  
  
 Wenn beide Assemblys nicht signiert sind `assemblyName` , besteht das Argument aus dem Namen der Friend-Assembly, die ohne einen Verzeichnispfad oder eine Dateinamenerweiterung angegeben wird.  
  
 Wenn beide Assemblys mit einem starken Namen signiert sind, muss das <xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute.%23ctor%2A> Argument für den Konstruktor aus dem Namen der Assembly ohne den Verzeichnispfad oder die Dateinamenerweiterung zusammen mit dem vollständigen öffentlichen Schlüssel (und nicht mit dem Token des öffentlichen Schlüssels) bestehen. Informationen zum Ermitteln des vollständigen öffentlichen Schlüssels einer Assembly mit starkem Namen finden Sie im Abschnitt " [Get the Full Public Key](#Key) " weiter unten in diesem Artikel. Weitere Informationen zur Verwendung von <xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute> mit Assemblys mit starkem Namen finden <xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute.%23ctor%2A> Sie unter dem-Konstruktor.  
  
 Fügen Sie keine Werte für das <xref:System.Reflection.AssemblyName.CultureInfo%2A>- <xref:System.Reflection.AssemblyName.Version%2A>,- <xref:System.Reflection.AssemblyName.ProcessorArchitecture%2A> oder-Feld im-Argument ein; C#die Visual Basic C++ -,-und-Compiler behandeln dies als Compilerfehler. Wenn Sie einen Compiler verwenden, der ihn nicht als Fehler behandelt (z. b. den [Il-Assembler (Ilasm. exe)](~/docs/framework/tools/ilasm-exe-il-assembler.md)) und die Assemblys einen starken <xref:System.MethodAccessException> Namen haben, wird eine-Ausnahme ausgelöst, wenn die angegebene Friend-Assembly das erste Mal auf die Assembly zugreift, die die <xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute> -Attribut.  
  
 Weitere Informationen zur Verwendung dieses Attributs finden Sie in den folgenden Themen:  
  
-   [Friend-Assemblys (C++)](https://msdn.microsoft.com/library/8d55fee0-b7c2-4fbe-a23b-dfe424dc71cd)  
  
-   [Friend-Assemblys](https://msdn.microsoft.com/library/df0c70ea-2c2a-4bdc-9526-df951ad2d055)  
  
<a name="Key"></a>   
## <a name="getting-the-full-public-key"></a>Der vollständige öffentliche Schlüssel wird erhalten.  
 Mit dem [Strong Name-Tool (Sn. exe)](~/docs/framework/tools/sn-exe-strong-name-tool.md) können Sie den vollständigen öffentlichen Schlüssel aus einer Schlüsseldatei mit starkem Namen (SNK-Datei) abrufen. Führen Sie dazu die folgenden Schritte aus:  
  
1.  Extrahieren Sie den öffentlichen Schlüssel aus der Schlüsseldatei mit starkem Namen in eine separate Datei:  
  
     **Sn-p** *snk_file* *Ausgabedatei*  
  
2.  Zeigen Sie den vollständigen öffentlichen Schlüssel in der Konsole an:  
  
     **Sn-tp** *Ausgabedatei*  
  
3.  Kopieren Sie den vollständigen öffentlichen Schlüsselwert, und fügen Sie ihn in den Quellcode ein.  
  
## <a name="compiling-the-friend-assembly-with-c"></a>Kompilieren der Friend-Assembly mitC#  
 Wenn Sie den C# Compiler zum Kompilieren der Friend-Assembly verwenden, müssen Sie den Namen der Ausgabedatei (. exe oder. dll) mithilfe der **/out** -Compileroption explizit angeben. Dies ist erforderlich, da der Compiler den Namen für die Assembly, die er erstellt, noch nicht generiert hat, wenn er Bindungen an externe Referenzen vornimmt. Die **/out** -Compileroption ist für den Visual Basic-Compiler optional, und die entsprechende **-out-** oder **-o** -Compileroption sollte nicht verwendet werden F# , wenn Friend-Assemblys mit dem Compiler kompiliert werden.  
  
## <a name="compiling-the-friend-assembly-with-c"></a>Kompilieren der Friend-Assembly mitC++  
 In C++müssen Sie das `as_friend` -Attribut in der C++ -Direktive verwenden <xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute> , um die internen Member, die durch das-Attribut aktiviert werden, für eine Friend-Assembly zugänglich zu machen. Weitere Informationen finden Sie unter Friend-Assemblys [(C++)](https://msdn.microsoft.com/library/8d55fee0-b7c2-4fbe-a23b-dfe424dc71cd).  
  
   
  
## Examples  
 **Signierte Assembly**  
  
 Im folgenden Beispiel wird das <xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute> -Attribut verwendet, `internal` um eine `AppendDirectorySeparator` Methode namens in einer signierten Assembly für eine andere signierte Assembly sichtbar zu machen. Es definiert eine `FileUtilities` -Klasse, die eine `AppendDirectorySeparator` interne Methode enthält. Das <xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute> -Attribut wird auf die Assembly angewendet, die `FileUtilities` die-Klasse enthält. Mit dem-Attribut kann eine `Friend1` Assembly mit dem Namen auf diesen internen Member zugreifen.  
  
 [!code-csharp[System.Runtime.CompilerServices.InternalsVisibleToAttribute#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/cs/assembly1.cs#1)]
 [!code-vb[System.Runtime.CompilerServices.InternalsVisibleToAttribute#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/vb/assembly1.vb#1)]  
  
 Wenn das folgende Beispiel in eine Assembly mit starkem Namen (mit dem `Friend1`Namen) `Example.Main` kompiliert wird `Friend1` , kann die- `FileUtilities.AppendDirectorySeparator` Methode in die-Methode erfolgreich aufzurufen, `Assembly1` obwohl die-Methode für die Assembly intern ist. Beachten Sie Folgendes: Wenn Sie in C# über die Befehlszeile kompilieren, müssen Sie den **/out** -Compilerschalter verwenden, um sicherzustellen, dass der Name der Friend-Assembly verfügbar ist, wenn der Compiler an externe Verweise gebunden wird.  
  
 [!code-cpp[System.Runtime.CompilerServices.InternalsVisibleToAttribute#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/cpp/friend1.cpp#2)]
 [!code-csharp[System.Runtime.CompilerServices.InternalsVisibleToAttribute#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/cs/friend1.cs#2)]
 [!code-vb[System.Runtime.CompilerServices.InternalsVisibleToAttribute#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/vb/friend1.vb#2)]  
  
 **Nicht signierte Assembly**  
  
 Im folgenden Beispiel wird das <xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute> -Attribut verwendet, `internal` um einen Member einer nicht signierten Assembly für eine andere nicht signierte Assembly sichtbar zu machen. Das-Attribut stellt sicher `internal` , dass die `StringLib.IsFirstLetterUpperCase` -Methode `UtilityLib` in einer Assembly mit dem Namen für den Code `Friend2`in einer Assembly mit dem Namen sichtbar ist.  Im folgenden finden Sie den Quellcode für "utilitylib. dll":  
  
 [!code-csharp[System.Runtime.CompilerServices.InternalsVisibleToAttribute#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/cs/utilitylib.cs#5)]
 [!code-vb[System.Runtime.CompilerServices.InternalsVisibleToAttribute#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/vb/utilitylib.vb#5)]  
  
 Im folgenden Beispiel wird der Quellcode für die `Friend2` Assembly bereitstellt. Beachten Sie Folgendes: Wenn Sie in C# über die Befehlszeile kompilieren, müssen Sie den **/out** -Compilerschalter verwenden, um sicherzustellen, dass der Name der Friend-Assembly verfügbar ist, wenn der Compiler an externe Verweise gebunden wird.  
  
 [!code-cpp[System.Runtime.CompilerServices.InternalsVisibleToAttribute#6](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/cpp/friend2.cpp#6)]
 [!code-csharp[System.Runtime.CompilerServices.InternalsVisibleToAttribute#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/cs/friend2.cs#6)]
 [!code-vb[System.Runtime.CompilerServices.InternalsVisibleToAttribute#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/vb/friend2.vb#6)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public InternalsVisibleToAttribute (string assemblyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string assemblyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.CompilerServices.InternalsVisibleToAttribute.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (assemblyName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; InternalsVisibleToAttribute(System::String ^ assemblyName);" />
      <MemberSignature Language="F#" Value="new System.Runtime.CompilerServices.InternalsVisibleToAttribute : string -&gt; System.Runtime.CompilerServices.InternalsVisibleToAttribute" Usage="new System.Runtime.CompilerServices.InternalsVisibleToAttribute assemblyName" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="assemblyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="assemblyName">Der Name einer Friend-Assembly.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Runtime.CompilerServices.InternalsVisibleToAttribute" />-Klasse mit dem Namen der angegebenen Friend-Assembly.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der <xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute.%23ctor%2A> -Konstruktor definiert eine Friend-Assembly, bei der es sich um eine Assembly handelt, die Zugriff auf die internen und privaten geschützten Typen und Member der aktuellen Assembly hat.  
  
 Sowohl die aktuelle Assembly als auch die Friend-Assembly müssen nicht signiert sein, oder beide müssen mit einem starken Namen signiert sein. (Weitere Informationen zu Assemblys mit starkem Namen finden Sie unter Erstellen und Verwenden von Assemblys [mit starkem Namen](~/docs/framework/app-domains/create-and-use-strong-named-assemblies.md).) Wenn beide nicht signiert sind, besteht `assemblyName` das Argument aus dem Namen der Friend-Assembly, die ohne einen Verzeichnispfad oder eine Dateierweiterung angegeben wird. Wenn beide signiert sind, `assemblyName` besteht aus dem Namen der Friend-Assembly, ohne deren Verzeichnispfad oder Dateinamenerweiterung, zusammen mit dem vollständigen öffentlichen Schlüssel (jedoch nicht mit dem Token des öffentlichen Schlüssels). Die anderen Komponenten eines starken Namens, wie z. b. jene, die Kultur-, Versions-oder Prozessorarchitektur Informationen bereitstellen, `assemblyName` können im-Argument nicht angegeben werden.  
  
> [!IMPORTANT]
>  Wenn Sie den C# Compiler zum Kompilieren der Friend-Assembly verwenden, müssen Sie den Namen der Ausgabedatei (. exe oder. dll) mithilfe der **/out** -Compileroption explizit angeben. Dies ist erforderlich, da der Compiler den Namen für die Assembly, die er erstellt, noch nicht generiert hat, wenn er Bindungen an externe Referenzen vornimmt. Die **/out** -Compileroption ist für den Visual Basic-Compiler optional, und die entsprechende **-out-** oder **-o** -Compileroption sollte nicht verwendet werden F# , wenn Friend-Assemblys mit dem Compiler kompiliert werden.  
  
 Sie können [Sn. exe (Strong Name-Tool)](~/docs/framework/tools/sn-exe-strong-name-tool.md) verwenden, um den vollständigen öffentlichen Schlüssel aus einer Schlüsseldatei mit starkem Namen (SNK-Datei) abzurufen. Führen Sie dazu die folgenden Schritte aus:  
  
1.  Extrahieren Sie den öffentlichen Schlüssel aus der Schlüsseldatei mit starkem Namen in eine separate Datei:  
  
     **Sn-p** *snk_file* *Ausgabedatei*  
  
2.  Zeigen Sie den vollständigen öffentlichen Schlüssel in der Konsole an:  
  
     **Sn-tp** *Ausgabedatei*  
  
3.  Kopieren Sie den vollständigen öffentlichen Schlüsselwert, und fügen Sie ihn in den Quellcode ein.  
  
 Weitere Informationen zur Verwendung des <xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute> -Attributs finden Sie in den folgenden Themen:  
  
-   [Friend-Assemblys (C++)](https://msdn.microsoft.com/library/8d55fee0-b7c2-4fbe-a23b-dfe424dc71cd)  
  
-   [Friend-Assemblys](https://msdn.microsoft.com/library/df0c70ea-2c2a-4bdc-9526-df951ad2d055)  
  
   
  
## Examples  
 **Signierte Assembly**  
  
 Im folgenden Beispiel wird das <xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute> -Attribut verwendet, `internal` um eine `AppendDirectorySeparator` Methode namens in einer signierten Assembly für eine andere signierte Assembly sichtbar zu machen. Es definiert eine `FileUtilities` -Klasse, die eine `AppendDirectorySeparator` interne Methode enthält. Das <xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute> -Attribut wird auf die Assembly angewendet, die `FileUtilities` die-Klasse enthält. Mit dem-Attribut kann eine `Friend1` Assembly mit dem Namen auf diesen internen Member zugreifen.  
  
 [!code-csharp[System.Runtime.CompilerServices.InternalsVisibleToAttribute#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/cs/assembly1.cs#1)]
 [!code-vb[System.Runtime.CompilerServices.InternalsVisibleToAttribute#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/vb/assembly1.vb#1)]  
  
 Wenn das folgende Beispiel in eine Assembly mit starkem Namen (mit dem `Friend1`Namen) kompiliert wird, kann `FileUtilities.AppendDirectorySeparator` die-Methode erfolgreich aufgerufen werden, obwohl die- `Assembly1` Methode für die Assembly intern ist. Beachten Sie Folgendes: Wenn Sie in C# über die Befehlszeile kompilieren, müssen Sie den **/out** -Compilerschalter verwenden, um sicherzustellen, dass der Name der Friend-Assembly verfügbar ist, wenn der Compiler an externe Verweise gebunden wird.  
  
 [!code-cpp[System.Runtime.CompilerServices.InternalsVisibleToAttribute#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/cpp/friend1.cpp#2)]
 [!code-csharp[System.Runtime.CompilerServices.InternalsVisibleToAttribute#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/cs/friend1.cs#2)]
 [!code-vb[System.Runtime.CompilerServices.InternalsVisibleToAttribute#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/vb/friend1.vb#2)]  
  
 Im folgenden Beispiel wird das <xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute> -Attribut verwendet, `internal` um einen Member einer nicht signierten Assembly für eine andere nicht signierte Assembly sichtbar zu machen. Das-Attribut stellt sicher `internal` , dass die `StringLib.IsFirstLetterUpperCase` -Methode `UtilityLib` in einer Assembly mit dem Namen für den Code `Friend2`in einer Assembly mit dem Namen sichtbar ist.  Im folgenden finden Sie den Quellcode für "utilitylib. dll":  
  
 [!code-csharp[System.Runtime.CompilerServices.InternalsVisibleToAttribute#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/cs/utilitylib.cs#5)]
 [!code-vb[System.Runtime.CompilerServices.InternalsVisibleToAttribute#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/vb/utilitylib.vb#5)]  
  
 **Nicht signierte Assembly**  
  
 Im folgenden Beispiel wird der Quellcode für die `Friend2` Assembly bereitstellt. Beachten Sie Folgendes: Wenn Sie in C# über die Befehlszeile kompilieren, müssen Sie den **/out** -Compilerschalter verwenden, um sicherzustellen, dass der Name der Friend-Assembly verfügbar ist, wenn der Compiler an externe Verweise gebunden wird.  
  
 [!code-cpp[System.Runtime.CompilerServices.InternalsVisibleToAttribute#6](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/cpp/friend2.cpp#6)]
 [!code-csharp[System.Runtime.CompilerServices.InternalsVisibleToAttribute#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/cs/friend2.cs#6)]
 [!code-vb[System.Runtime.CompilerServices.InternalsVisibleToAttribute#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/vb/friend2.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllInternalsVisible">
      <MemberSignature Language="C#" Value="public bool AllInternalsVisible { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllInternalsVisible" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.CompilerServices.InternalsVisibleToAttribute.AllInternalsVisible" />
      <MemberSignature Language="VB.NET" Value="Public Property AllInternalsVisible As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllInternalsVisible { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AllInternalsVisible : bool with get, set" Usage="System.Runtime.CompilerServices.InternalsVisibleToAttribute.AllInternalsVisible" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Diese Eigenschaft ist nicht implementiert.</summary>
        <value>Diese Eigenschaft gibt keinen Wert zurück.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AssemblyName">
      <MemberSignature Language="C#" Value="public string AssemblyName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AssemblyName" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.CompilerServices.InternalsVisibleToAttribute.AssemblyName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AssemblyName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ AssemblyName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AssemblyName : string" Usage="System.Runtime.CompilerServices.InternalsVisibleToAttribute.AssemblyName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Namen der Friend-Assembly ab, für die alle mit dem Schlüsselwort <see langword="internal" /> gekennzeichneten Typen und Typmember sichtbar gemacht werden sollen.</summary>
        <value>Eine Zeichenfolge, die den Namen der Friend-Assembly darstellt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Weitere Informationen zur Verwendung des <xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute> -Attributs finden Sie in den folgenden Themen:  
  
-   [Friend-Assemblys (C++)](https://msdn.microsoft.com/library/8d55fee0-b7c2-4fbe-a23b-dfe424dc71cd)  
  
-   [Friend-Assemblys](https://msdn.microsoft.com/library/df0c70ea-2c2a-4bdc-9526-df951ad2d055)  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
