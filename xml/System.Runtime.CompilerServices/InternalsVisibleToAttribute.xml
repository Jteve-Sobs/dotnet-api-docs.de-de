<Type Name="InternalsVisibleToAttribute" FullName="System.Runtime.CompilerServices.InternalsVisibleToAttribute">
  <Metadata><Meta Name="ms.openlocfilehash" Value="5f0b6174ea837be0c0d10d39a109f0e32df7ca13" /><Meta Name="ms.sourcegitcommit" Value="8e213bb5e6801f6e29861ba72664978ad00e34fa" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="02/18/2019" /><Meta Name="ms.locfileid" Value="56393592" /></Metadata><TypeSignature Language="C#" Value="public sealed class InternalsVisibleToAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit InternalsVisibleToAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.CompilerServices.InternalsVisibleToAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class InternalsVisibleToAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class InternalsVisibleToAttribute sealed : Attribute" />
  <TypeSignature Language="F#" Value="type InternalsVisibleToAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Assembly, AllowMultiple=true, Inherited=false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Gibt an, dass Typen, i. d. R. nur innerhalb der aktuellen Assembly sichtbar sind, auch in einer angegebenen Assembly angezeigt werden können.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Normalerweise Typen und Member mit `internal` oder `private protected` Bereich (in C#) und `Friend` und `Private Protected` Gültigkeitsbereich (in Visual Basic) stehen nur in der Assembly, in dem sie definiert sind. Die <xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute> Attribut Weise können sie auch auf die Typen in einer angegebenen Assembly, die als Friend-Assembly bezeichnet wird. Dies gilt nur für `internal` (`Friend` in VB) oder `private protected`(`Private Protected` in VB) nur Methoden, nicht jedoch `private` solche.
  
 Das Attribut wird auf Assemblyebene angewendet. Dies bedeutet, dass am Anfang einer Quellcodedatei angegeben werden, oder in der AssemblyInfo-Datei in einem Visual Studio-Projekt enthalten sein kann. Sie können das Attribut verwenden, um einzelne Friend-Assembly angeben, die internen Typen und Member der aktuellen Assembly zugreifen kann. Sie können mehrere Friend-Assemblys auf zweierlei Weise definieren. Sie können als einzelne Attribute auf Assemblyebene, angezeigt werden, wie im folgende Beispiel veranschaulicht.  
  
 [!code-csharp[System.Runtime.CompilerServices.InternalsVisibleToAttribute#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/cs/multiple1.cs#3)]
 [!code-vb[System.Runtime.CompilerServices.InternalsVisibleToAttribute#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/vb/multiple1.vb#3)]  
  
 Sie können auch angezeigt werden mit separaten <xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute> Tags, aber ein einzelnes `assembly` -Schlüsselwort, wie im folgenden Beispiel veranschaulicht.  
  
 [!code-csharp[System.Runtime.CompilerServices.InternalsVisibleToAttribute#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/cs/multiple2.cs#4)]
 [!code-vb[System.Runtime.CompilerServices.InternalsVisibleToAttribute#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/vb/multiple2.vb#4)]  
  
 Friend-Assembly wird durch identifiziert die <xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute.%23ctor%2A> Konstruktor. Sowohl die aktuelle Assembly und die Friend-Assembly ohne Vorzeichen sein müssen, oder beide Assemblys müssen mit einem starken Namen signiert werden.  
  
 Wenn beide Assemblys ohne Vorzeichen ist, sind die `assemblyName` Argument besteht aus dem Namen der Friend-Assembly, ohne die Dateinamenerweiterung für ein Verzeichnis Pfad- oder Dateiname angegeben.  
  
 Wenn beide Assemblys angemeldet sind, mit einem starken Namen, das Argument für die <xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute.%23ctor%2A> Konstruktor muss der Name der Assembly ohne dessen Verzeichnis Pfad- oder Dateiname Erweiterung zusammen mit dem vollständigen öffentlichen Schlüssel (und kein Token des öffentlichen Schlüssels) bestehen. Rufen Sie den vollständigen öffentlichen Schlüssel einer Assembly mit starkem Namen finden Sie unter den [Abrufen des vollständigen öffentlichen Schlüssels](#Key) weiter unten in diesem Artikel. Weitere Informationen zur Verwendung von <xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute> mit Assemblys mit starkem Namen finden Sie unter den <xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute.%23ctor%2A> Konstruktor.  
  
 Fügen Sie keine Werte für die <xref:System.Reflection.AssemblyName.CultureInfo%2A>, <xref:System.Reflection.AssemblyName.Version%2A>, oder <xref:System.Reflection.AssemblyName.ProcessorArchitecture%2A> Feld im Argument; die Visual Basic, c# und C++-Compiler, behandeln Sie dies als ein Compilerfehler ausgegeben. Wenn Sie einen Compiler verwenden, die nicht als Fehler behandelt (wie z. B. die [IL-Assembler (ILAsm.exe)](~/docs/framework/tools/ilasm-exe-il-assembler.md)) und die Assemblys mit starkem Namen, eine <xref:System.MethodAccessException> Ausnahme ist beim ersten angegebenen Friend-Assembly greift auf die Assembly mit der <xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute> Attribut.  
  
 Weitere Informationen dazu, wie Sie dieses Attribut verwenden, finden Sie unter den folgenden Themen:  
  
-   [Friend-Assemblys (C++)](https://msdn.microsoft.com/library/8d55fee0-b7c2-4fbe-a23b-dfe424dc71cd)  
  
-   [Friend-Assemblys](https://msdn.microsoft.com/library/df0c70ea-2c2a-4bdc-9526-df951ad2d055)  
  
<a name="Key"></a>   
## <a name="getting-the-full-public-key"></a>Abrufen des vollständigen öffentlichen Schlüssels  
 Sie können die [Strong Name-Tool (Sn.exe)](~/docs/framework/tools/sn-exe-strong-name-tool.md) um vollständigen öffentlichen Schlüssels aus einer Datei mit starkem Namen Schlüsseldatei (.snk) abzurufen. Zu diesem Zweck führen Sie die folgenden Schritte aus:  
  
1.  Extrahieren Sie den öffentlichen Schlüssel aus der Schlüsseldatei mit starkem Namen in einer separaten Datei:  
  
     **Sn -p**  *snk_file* *outfile*  
  
2.  Den vollständigen öffentlichen Schlüssel in der Konsole anzeigen:  
  
     **Sn - Tp***Ausgabedatei*  
  
3.  Kopieren Sie den vollständigen öffentlichen Schlüssel-Wert in Ihren Quellcode.  
  
## <a name="compiling-the-friend-assembly-with-c"></a>Kompilieren die Friend-Assembly mit c#  
 Wenn Sie c#-Compiler verwenden, um die Friend-Assembly zu kompilieren, müssen Sie den Namen der Ausgabedatei (.exe oder .dll) explizit angeben, mit der **/out** -Compileroption. Dies ist erforderlich, da der Compiler den Namen für die Assembly, die er erstellt, noch nicht generiert hat, wenn er Bindungen an externe Referenzen vornimmt. Die **/out** Compileroption ist optional für Visual Basic-Compiler, und die entsprechende **-out** oder **- e/a** Compileroption sollte nicht verwendet werden, beim Kompilieren von Friend Assemblys mit der F# Compiler.  
  
## <a name="compiling-the-friend-assembly-with-c"></a>Kompilieren die Friend-Assembly mit C++  
 In C++, um die internen Member aktiviert, stellen die <xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute> Attribut in einer Friend-Assembly zugegriffen werden kann, müssen Sie die `as_friend` Attribut in der C++-Anweisung. Weitere Informationen finden Sie unter [Friend-Assemblys (C++)](https://msdn.microsoft.com/library/8d55fee0-b7c2-4fbe-a23b-dfe424dc71cd).  
  
   
  
## Examples  
 **Signierte Assemblys**  
  
 Im folgenden Beispiel wird die <xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute> Attribut stellen eine `internal` Methode mit dem Namen `AppendDirectorySeparator` in eine signierte Assembly in eine andere signierten Assembly sichtbar. Definiert eine `FileUtilities` -Klasse, einer internen enthält `AppendDirectorySeparator` Methode. Die <xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute> Attribut angewendet wird, auf die Assembly mit der `FileUtilities` Klasse. Das Attribut kann eine Assembly namens `Friend1` auf diesen internen Member zugreifen.  
  
 [!code-csharp[System.Runtime.CompilerServices.InternalsVisibleToAttribute#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/cs/assembly1.cs#1)]
 [!code-vb[System.Runtime.CompilerServices.InternalsVisibleToAttribute#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/vb/assembly1.vb#1)]  
  
 Wenn im folgenden Beispiel wird in einer Assembly mit starkem Namen mit dem Namen kompiliert wird `Friend1`, `Example.Main` -Methode in der `Friend1` kann erfolgreich Aufrufen der `FileUtilities.AppendDirectorySeparator` -Methode, obwohl die Methode für intern ist die `Assembly1` Assembly. Beachten Sie, dass wenn Sie in c# über die Befehlszeile kompilieren, müssen Sie verwenden die **/out** Compilerschalters, um sicherzustellen, dass der Name der Friend-Assembly verfügbar ist, wenn externe Verweise der Compiler bindet.  
  
 [!code-cpp[System.Runtime.CompilerServices.InternalsVisibleToAttribute#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/cpp/friend1.cpp#2)]
 [!code-csharp[System.Runtime.CompilerServices.InternalsVisibleToAttribute#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/cs/friend1.cs#2)]
 [!code-vb[System.Runtime.CompilerServices.InternalsVisibleToAttribute#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/vb/friend1.vb#2)]  
  
 **Nicht signierte Assemblys**  
  
 Im folgenden Beispiel wird die <xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute> Attribut stellen eine `internal` Mitglied eine unsignierte Assembly sichtbar ist, zu einem anderen nicht signierte Assembly. Das Attribut stellt sicher, dass die `internal` `StringLib.IsFirstLetterUpperCase` Methode in einer Assembly mit dem Namen `UtilityLib` wird angezeigt, auf den Code in einer Assembly mit dem Namen `Friend2`.  Folgendes ist der Quellcode für UtilityLib.dll:  
  
 [!code-csharp[System.Runtime.CompilerServices.InternalsVisibleToAttribute#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/cs/utilitylib.cs#5)]
 [!code-vb[System.Runtime.CompilerServices.InternalsVisibleToAttribute#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/vb/utilitylib.vb#5)]  
  
 Das folgende Beispiel enthält den Quellcode für die `Friend2` Assembly. Beachten Sie, dass wenn Sie in c# über die Befehlszeile kompilieren, müssen Sie verwenden die **/out** Compilerschalters, um sicherzustellen, dass der Name der Friend-Assembly verfügbar ist, wenn externe Verweise der Compiler bindet.  
  
 [!code-cpp[System.Runtime.CompilerServices.InternalsVisibleToAttribute#6](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/cpp/friend2.cpp#6)]
 [!code-csharp[System.Runtime.CompilerServices.InternalsVisibleToAttribute#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/cs/friend2.cs#6)]
 [!code-vb[System.Runtime.CompilerServices.InternalsVisibleToAttribute#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/vb/friend2.vb#6)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public InternalsVisibleToAttribute (string assemblyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string assemblyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.CompilerServices.InternalsVisibleToAttribute.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (assemblyName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; InternalsVisibleToAttribute(System::String ^ assemblyName);" />
      <MemberSignature Language="F#" Value="new System.Runtime.CompilerServices.InternalsVisibleToAttribute : string -&gt; System.Runtime.CompilerServices.InternalsVisibleToAttribute" Usage="new System.Runtime.CompilerServices.InternalsVisibleToAttribute assemblyName" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="assemblyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="assemblyName">Der Name einer Friend-Assembly.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Runtime.CompilerServices.InternalsVisibleToAttribute" />-Klasse mit dem Namen der angegebenen Friend-Assembly.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute.%23ctor%2A> Konstruktor definiert eine Friend-Assembly, eine Assembly handelt, die Zugriff auf die interne und Private geschützt, Typen und Member der aktuellen Assembly.  
  
 Sowohl die aktuelle Assembly und die Friend-Assembly ohne Vorzeichen sein müssen, oder beide müssen mit einem starken Namen signiert werden. (Weitere Informationen zu Assemblys mit starkem Namen finden Sie unter [erstellen und Assemblys mit starkem Namen](~/docs/framework/app-domains/create-and-use-strong-named-assemblies.md).) Wenn beide ohne Vorzeichen, die `assemblyName` Argument besteht aus dem Namen der Friend-Assembly, ohne eine verzeichniserweiterung Pfad- oder Dateiname angegeben. Wenn beide angemeldet sind, `assemblyName` besteht aus dem Namen der Friend-Assembly ohne dessen Verzeichnis Pfad oder Erweiterung zusammen mit dem vollständigen öffentlichen Schlüssel (aber nicht dessen Token des öffentlichen Schlüssels). Die anderen Komponenten von einem starken Namen, z. B. die Kultur, Version und Architektur Prozessorinformationen, bieten können nicht angegeben werden, der `assemblyName` Argument.  
  
> [!IMPORTANT]
>  Wenn Sie c#-Compiler verwenden, um die Friend-Assembly zu kompilieren, müssen Sie den Namen der Ausgabedatei (.exe oder .dll) explizit angeben, mit der **/out** -Compileroption. Dies ist erforderlich, da der Compiler den Namen für die Assembly, die er erstellt, noch nicht generiert hat, wenn er Bindungen an externe Referenzen vornimmt. Die **/out** Compileroption ist optional für Visual Basic-Compiler, und die entsprechende **-out** oder **- e/a** Compileroption sollte nicht verwendet werden, beim Kompilieren von Friend Assemblys mit der F# Compiler.  
  
 Sie können [Sn.exe (Strong Name Tool)](~/docs/framework/tools/sn-exe-strong-name-tool.md) um vollständigen öffentlichen Schlüssels aus einer Datei mit starkem Namen Schlüsseldatei (.snk) abzurufen. Zu diesem Zweck führen Sie die folgenden Schritte aus:  
  
1.  Extrahieren Sie den öffentlichen Schlüssel aus der Schlüsseldatei mit starkem Namen in einer separaten Datei:  
  
     **Sn -p**  *snk_file* *outfile*  
  
2.  Den vollständigen öffentlichen Schlüssel in der Konsole anzeigen:  
  
     **Sn - Tp***Ausgabedatei*  
  
3.  Kopieren Sie den vollständigen öffentlichen Schlüssel-Wert in Ihren Quellcode.  
  
 Weitere Informationen zur Verwendung der <xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute> Attribut, finden Sie unter den folgenden Themen:  
  
-   [Friend-Assemblys (C++)](https://msdn.microsoft.com/library/8d55fee0-b7c2-4fbe-a23b-dfe424dc71cd)  
  
-   [Friend-Assemblys](https://msdn.microsoft.com/library/df0c70ea-2c2a-4bdc-9526-df951ad2d055)  
  
   
  
## Examples  
 **Signierte Assemblys**  
  
 Im folgenden Beispiel wird die <xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute> Attribut stellen eine `internal` Methode mit dem Namen `AppendDirectorySeparator` in eine signierte Assembly in eine andere signierten Assembly sichtbar. Definiert eine `FileUtilities` -Klasse, einer internen enthält `AppendDirectorySeparator` Methode. Die <xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute> Attribut angewendet wird, auf die Assembly mit der `FileUtilities` Klasse. Das Attribut kann eine Assembly namens `Friend1` auf diesen internen Member zugreifen.  
  
 [!code-csharp[System.Runtime.CompilerServices.InternalsVisibleToAttribute#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/cs/assembly1.cs#1)]
 [!code-vb[System.Runtime.CompilerServices.InternalsVisibleToAttribute#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/vb/assembly1.vb#1)]  
  
 Wenn im folgenden Beispiel wird in einer Assembly mit starkem Namen mit dem Namen kompiliert wird `Friend1`, erfolgreich Aufrufen der `FileUtilities.AppendDirectorySeparator` -Methode, obwohl die Methode eine interne ist die `Assembly1` Assembly. Beachten Sie, dass wenn Sie in c# über die Befehlszeile kompilieren, müssen Sie verwenden die **/out** Compilerschalters, um sicherzustellen, dass der Name der Friend-Assembly verfügbar ist, wenn externe Verweise der Compiler bindet.  
  
 [!code-cpp[System.Runtime.CompilerServices.InternalsVisibleToAttribute#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/cpp/friend1.cpp#2)]
 [!code-csharp[System.Runtime.CompilerServices.InternalsVisibleToAttribute#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/cs/friend1.cs#2)]
 [!code-vb[System.Runtime.CompilerServices.InternalsVisibleToAttribute#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/vb/friend1.vb#2)]  
  
 Im folgenden Beispiel wird die <xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute> Attribut stellen eine `internal` Mitglied eine unsignierte Assembly sichtbar ist, zu einem anderen nicht signierte Assembly. Das Attribut stellt sicher, dass die `internal` `StringLib.IsFirstLetterUpperCase` Methode in einer Assembly mit dem Namen `UtilityLib` wird angezeigt, auf den Code in einer Assembly mit dem Namen `Friend2`.  Folgendes ist der Quellcode für UtilityLib.dll:  
  
 [!code-csharp[System.Runtime.CompilerServices.InternalsVisibleToAttribute#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/cs/utilitylib.cs#5)]
 [!code-vb[System.Runtime.CompilerServices.InternalsVisibleToAttribute#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/vb/utilitylib.vb#5)]  
  
 **Nicht signierte Assemblys**  
  
 Das folgende Beispiel enthält den Quellcode für die `Friend2` Assembly. Beachten Sie, dass wenn Sie in c# über die Befehlszeile kompilieren, müssen Sie verwenden die **/out** Compilerschalters, um sicherzustellen, dass der Name der Friend-Assembly verfügbar ist, wenn externe Verweise der Compiler bindet.  
  
 [!code-cpp[System.Runtime.CompilerServices.InternalsVisibleToAttribute#6](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/cpp/friend2.cpp#6)]
 [!code-csharp[System.Runtime.CompilerServices.InternalsVisibleToAttribute#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/cs/friend2.cs#6)]
 [!code-vb[System.Runtime.CompilerServices.InternalsVisibleToAttribute#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/vb/friend2.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllInternalsVisible">
      <MemberSignature Language="C#" Value="public bool AllInternalsVisible { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllInternalsVisible" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.CompilerServices.InternalsVisibleToAttribute.AllInternalsVisible" />
      <MemberSignature Language="VB.NET" Value="Public Property AllInternalsVisible As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllInternalsVisible { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AllInternalsVisible : bool with get, set" Usage="System.Runtime.CompilerServices.InternalsVisibleToAttribute.AllInternalsVisible" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Diese Eigenschaft ist nicht implementiert.</summary>
        <value>Diese Eigenschaft gibt keinen Wert zurück.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AssemblyName">
      <MemberSignature Language="C#" Value="public string AssemblyName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AssemblyName" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.CompilerServices.InternalsVisibleToAttribute.AssemblyName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AssemblyName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ AssemblyName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AssemblyName : string" Usage="System.Runtime.CompilerServices.InternalsVisibleToAttribute.AssemblyName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Namen der Friend-Assembly ab, für die alle mit dem Schlüsselwort <see langword="internal" /> gekennzeichneten Typen und Typmember sichtbar gemacht werden sollen.</summary>
        <value>Eine Zeichenfolge, die den Namen der Friend-Assembly darstellt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Weitere Informationen zur Verwendung der <xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute> Attribut, finden Sie unter den folgenden Themen:  
  
-   [Friend-Assemblys (C++)](https://msdn.microsoft.com/library/8d55fee0-b7c2-4fbe-a23b-dfe424dc71cd)  
  
-   [Friend-Assemblys](https://msdn.microsoft.com/library/df0c70ea-2c2a-4bdc-9526-df951ad2d055)  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>