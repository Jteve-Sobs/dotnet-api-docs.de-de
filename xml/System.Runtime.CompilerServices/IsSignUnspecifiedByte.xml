<Type Name="IsSignUnspecifiedByte" FullName="System.Runtime.CompilerServices.IsSignUnspecifiedByte">
  <Metadata><Meta Name="ms.openlocfilehash" Value="b1cbd60a1df191a5caaf4b3c2eccdb00f34f555f" /><Meta Name="ms.sourcegitcommit" Value="11d168140aa8fade0768c2a9dde3e3bcacfdfb7d" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="05/27/2020" /><Meta Name="ms.locfileid" Value="83964556" /></Metadata><TypeSignature Language="C#" Value="public static class IsSignUnspecifiedByte" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit IsSignUnspecifiedByte extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.CompilerServices.IsSignUnspecifiedByte" />
  <TypeSignature Language="VB.NET" Value="Public Class IsSignUnspecifiedByte" />
  <TypeSignature Language="C++ CLI" Value="public ref class IsSignUnspecifiedByte abstract sealed" />
  <TypeSignature Language="F#" Value="type IsSignUnspecifiedByte = class" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.CompilerServices.VisualC</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="netstandard" FromVersion="2.1.0.0" To="System.Runtime.CompilerServices.VisualC" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Gibt an, dass ein Modifizierer weder signed noch unsigned lautet. Diese Klasse kann nicht vererbt werden.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Einige Programmiersprachen, wie z C++. b., erkennen drei unterschiedliche `char` Werte: `signed char`, `unsigned char`und `char`.  Um die unveränderten `char` Typen von anderen zu unterscheiden, fügt C++ der Microsoft-Compiler den <xref:System.Runtime.CompilerServices.IsSignUnspecifiedByte>-Modifizierer jedem `char` Typ hinzu, der an eine Assembly ausgegeben wird.  
  
 Compiler geben benutzerdefinierte Modifizierer innerhalb von Metadaten aus, um die Art und Weise zu ändern, wie der JIT-Compiler (Just-in-Time) Werte verarbeitet, wenn das Standardverhalten nicht geeignet ist.  Wenn der JIT-Compiler auf einen benutzerdefinierten Modifizierer trifft, verarbeitet er den Wert in der Art und Weise, wie der-Modifizierer angibt.  Compiler können benutzerdefinierte Modifizierern auf Methoden, Parameter und Rückgabewerte anwenden.  Der JIT-Compiler muss auf erforderliche Modifizierer Antworten, kann jedoch optionale modifiziererer ignorieren.  
  
 Mithilfe einer der folgenden Verfahren können Sie benutzerdefinierte modifiziererer in Metadaten ausgeben:  
  
-   Verwenden von Methoden in der <xref:System.Reflection.Emit.TypeBuilder>-Klasse, z. b. <xref:System.Reflection.Emit.TypeBuilder.DefineMethod%2A>, <xref:System.Reflection.Emit.TypeBuilder.DefineField%2A>, <xref:System.Reflection.Emit.TypeBuilder.DefineConstructor%2A>und <xref:System.Reflection.Emit.TypeBuilder.DefineProperty%2A>.  
  
-   Erstellen einer MSIL-Anweisungs Datei (Microsoft Intermediate Language), die Aufrufe von `modopt` und `modreq`enthält und die Datei mit dem [Ilasm. exe (Il-Assembler)](/dotnet/framework/tools/ilasm-exe-il-assembler)zusammenführt.  
  
-   Verwenden der nicht verwalteten Reflection-API.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird eine Assembly mit Klassen im <xref:System.Reflection.Emit>-Namespace erstellt, und der <xref:System.Runtime.CompilerServices.IsSignUnspecifiedByte>-Modifizierer wird in diese Assembly ausgegeben.  
  
 [!code-cpp[Runtime.CompilerServices.IsSignUnspecifiedByte#1](~/samples/snippets/cpp/VS_Snippets_CLR/Runtime.CompilerServices.IsSignUnspecifiedByte/cpp/sample.cpp#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members />
</Type>
