<Type Name="MethodBuilder" FullName="System.Reflection.Emit.MethodBuilder">
  <Metadata><Meta Name="ms.openlocfilehash" Value="01dbf85ef9c68170e8b73e8ca72ff39c0effa50a" /><Meta Name="ms.sourcegitcommit" Value="b6b9d5f3f9c7eb43f14a8a1a68d044603cb8ed73" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="05/18/2020" /><Meta Name="ms.locfileid" Value="83523897" /></Metadata><TypeSignature Language="C#" Value="public sealed class MethodBuilder : System.Reflection.MethodInfo" FrameworkAlternate="net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netstandard-2.1" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit MethodBuilder extends System.Reflection.MethodInfo" FrameworkAlternate="net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netstandard-2.1" />
  <TypeSignature Language="DocId" Value="T:System.Reflection.Emit.MethodBuilder" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class MethodBuilder&#xA;Inherits MethodInfo" FrameworkAlternate="net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netstandard-2.1" />
  <TypeSignature Language="C++ CLI" Value="public ref class MethodBuilder sealed : System::Reflection::MethodInfo" FrameworkAlternate="net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netstandard-2.1" />
  <TypeSignature Language="F#" Value="type MethodBuilder = class&#xA;    inherit MethodInfo" FrameworkAlternate="net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netstandard-2.1;xamarinios-10.8" />
  <TypeSignature Language="C#" Value="public sealed class MethodBuilder : System.Reflection.MethodInfo, System.Runtime.InteropServices._MethodBuilder" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit MethodBuilder extends System.Reflection.MethodInfo implements class System.Runtime.InteropServices._MethodBuilder" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class MethodBuilder&#xA;Inherits MethodInfo&#xA;Implements _MethodBuilder" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
  <TypeSignature Language="C++ CLI" Value="public ref class MethodBuilder sealed : System::Reflection::MethodInfo, System::Runtime::InteropServices::_MethodBuilder" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
  <TypeSignature Language="F#" Value="type MethodBuilder = class&#xA;    inherit MethodInfo&#xA;    interface _MethodBuilder" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit MethodBuilder extends System.Reflection.MethodInfo implements class System.Runtime.InteropServices._MethodBuilder" FrameworkAlternate="xamarinandroid-7.1;xamarinmac-3.0" />
  <TypeSignature Language="C#" Value="public abstract class MethodBuilder : System.Reflection.MethodInfo" FrameworkAlternate="xamarinios-10.8" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit MethodBuilder extends System.Reflection.MethodInfo" FrameworkAlternate="xamarinios-10.8" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class MethodBuilder&#xA;Inherits MethodInfo" FrameworkAlternate="xamarinios-10.8" />
  <TypeSignature Language="C++ CLI" Value="public ref class MethodBuilder abstract : System::Reflection::MethodInfo" FrameworkAlternate="xamarinios-10.8" />
  <AssemblyInfo>
    <AssemblyName>System.Reflection.Emit</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="netstandard" FromVersion="2.1.0.0" To="System.Reflection.Emit" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.Reflection.MethodInfo</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Runtime.InteropServices._MethodBuilder</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComDefaultInterface(typeof(System.Runtime.InteropServices._MethodBuilder))</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="805d1-101">Definiert eine Methode (oder einen Konstruktor) für eine dynamischen Klasse und stellt diese(n) dar.</span><span class="sxs-lookup"><span data-stu-id="805d1-101">Defines and represents a method (or constructor) on a dynamic class.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="805d1-102">Die <xref:System.Reflection.Emit.MethodBuilder>-Klasse wird verwendet, um eine Methode in der Microsoft Intermediate Language (MSIL) vollständig zu beschreiben, einschließlich Name, Attribute, Signatur und Methoden Text.</span><span class="sxs-lookup"><span data-stu-id="805d1-102">The <xref:System.Reflection.Emit.MethodBuilder> class is used to fully describe a method in Microsoft intermediate language (MSIL), including the name, attributes, signature, and method body.</span></span> <span data-ttu-id="805d1-103">Sie wird in Verbindung mit der <xref:System.Reflection.Emit.TypeBuilder>-Klasse verwendet, um Klassen zur Laufzeit zu erstellen.</span><span class="sxs-lookup"><span data-stu-id="805d1-103">It is used in conjunction with the <xref:System.Reflection.Emit.TypeBuilder> class to create classes at runtime.</span></span>  
  
## <a name="global-methods-and-methods-as-type-members"></a><span data-ttu-id="805d1-104">Globale Methoden und Methoden als Typmember</span><span class="sxs-lookup"><span data-stu-id="805d1-104">Global methods and methods as type members</span></span>  
 <span data-ttu-id="805d1-105">Mithilfe der Reflektionsausgabe können Sie globale Methoden definieren und Methoden als Typmember definieren.</span><span class="sxs-lookup"><span data-stu-id="805d1-105">You can use reflection emit to define global methods and to define methods as type members.</span></span> <span data-ttu-id="805d1-106">Die APIs, die Methoden definieren, geben <xref:System.Reflection.Emit.MethodBuilder> Objekte zurück.</span><span class="sxs-lookup"><span data-stu-id="805d1-106">The APIs that define methods return <xref:System.Reflection.Emit.MethodBuilder> objects.</span></span>  
  
### <a name="global-methods"></a><span data-ttu-id="805d1-107">Globale Methoden</span><span class="sxs-lookup"><span data-stu-id="805d1-107">Global methods</span></span>  
 <span data-ttu-id="805d1-108">Eine globale Methode wird mit der <xref:System.Reflection.Emit.ModuleBuilder.DefineGlobalMethod%2A?displayProperty=nameWithType>-Methode definiert, die ein **MethodBuilder** -Objekt zurückgibt.</span><span class="sxs-lookup"><span data-stu-id="805d1-108">A global method is defined by using the <xref:System.Reflection.Emit.ModuleBuilder.DefineGlobalMethod%2A?displayProperty=nameWithType> method, which returns a **MethodBuilder** object.</span></span>  
  
 <span data-ttu-id="805d1-109">Globale Methoden müssen statisch sein.</span><span class="sxs-lookup"><span data-stu-id="805d1-109">Global methods must be static.</span></span> <span data-ttu-id="805d1-110">Wenn ein dynamisches Modul globale Methoden enthält, muss die <xref:System.Reflection.Emit.ModuleBuilder.CreateGlobalFunctions%2A?displayProperty=nameWithType>-Methode vor dem Beibehalten des dynamischen Moduls oder der enthaltenden dynamischen Assembly aufgerufen werden, da die Common Language Runtime verschoben das dynamische Modul repariert, bis alle globalen Funktionen definiert wurden.</span><span class="sxs-lookup"><span data-stu-id="805d1-110">If a dynamic module contains global methods, the <xref:System.Reflection.Emit.ModuleBuilder.CreateGlobalFunctions%2A?displayProperty=nameWithType> method must be called before persisting the dynamic module or the containing dynamic assembly because the common language runtime postpones fixing up the dynamic module until all global functions have been defined.</span></span>  
  
 <span data-ttu-id="805d1-111">Eine globale Native Methode wird mit der <xref:System.Reflection.Emit.ModuleBuilder.DefinePInvokeMethod%2A?displayProperty=nameWithType>-Methode definiert.</span><span class="sxs-lookup"><span data-stu-id="805d1-111">A global native method is defined by using the <xref:System.Reflection.Emit.ModuleBuilder.DefinePInvokeMethod%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="805d1-112">PInvoke-Methoden (Platt Form Aufrufe) dürfen nicht als abstrakt oder virtuell deklariert werden.</span><span class="sxs-lookup"><span data-stu-id="805d1-112">Platform invoke (PInvoke) methods must not be declared abstract or virtual.</span></span> <span data-ttu-id="805d1-113">Die Laufzeit legt das <xref:System.Reflection.MethodAttributes.PinvokeImpl?displayProperty=nameWithType>-Attribut für eine Platt Form Aufruf Methode fest.</span><span class="sxs-lookup"><span data-stu-id="805d1-113">The runtime sets the <xref:System.Reflection.MethodAttributes.PinvokeImpl?displayProperty=nameWithType> attribute for a platform invoke method.</span></span>  
  
### <a name="methods-as-members-of-types"></a><span data-ttu-id="805d1-114">Methoden als Member von Typen</span><span class="sxs-lookup"><span data-stu-id="805d1-114">Methods as members of types</span></span>  
 <span data-ttu-id="805d1-115">Eine Methode wird als Typmember mithilfe der <xref:System.Reflection.Emit.TypeBuilder.DefineMethod%2A?displayProperty=nameWithType>-Methode definiert, die ein <xref:System.Reflection.Emit.MethodBuilder>-Objekt zurückgibt.</span><span class="sxs-lookup"><span data-stu-id="805d1-115">A method is defined as a type member by using the <xref:System.Reflection.Emit.TypeBuilder.DefineMethod%2A?displayProperty=nameWithType> method, which returns a <xref:System.Reflection.Emit.MethodBuilder> object.</span></span>  
  
 <span data-ttu-id="805d1-116">Die <xref:System.Reflection.Emit.MethodBuilder.DefineParameter%2A>-Methode wird verwendet, um den Namen und die Parameter Attribute eines Parameters oder des Rückgabewerts festzulegen.</span><span class="sxs-lookup"><span data-stu-id="805d1-116">The <xref:System.Reflection.Emit.MethodBuilder.DefineParameter%2A> method is used to set the name and parameter attributes of a parameter, or of the return value.</span></span> <span data-ttu-id="805d1-117">Das <xref:System.Reflection.Emit.ParameterBuilder> Objekt, das von dieser Methode zurückgegeben wird, stellt einen Parameter oder den Rückgabewert dar.</span><span class="sxs-lookup"><span data-stu-id="805d1-117">The <xref:System.Reflection.Emit.ParameterBuilder> object returned by this method represents a parameter or the return value.</span></span> <span data-ttu-id="805d1-118">Das <xref:System.Reflection.Emit.ParameterBuilder>-Objekt kann zum Festlegen des Marshalling, zum Festlegen des konstanten Werts und zum Anwenden benutzerdefinierter Attribute verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="805d1-118">The <xref:System.Reflection.Emit.ParameterBuilder> object can be used to set the marshaling, to set the constant value, and to apply custom attributes.</span></span>  
  
## <a name="attributes"></a><span data-ttu-id="805d1-119">Attributes</span><span class="sxs-lookup"><span data-stu-id="805d1-119">Attributes</span></span>  
 <span data-ttu-id="805d1-120">Member der <xref:System.Reflection.MethodAttributes>-Enumeration definieren das exakte Zeichen einer dynamischen Methode:</span><span class="sxs-lookup"><span data-stu-id="805d1-120">Members of the <xref:System.Reflection.MethodAttributes> enumeration define the precise character of a dynamic method:</span></span>  
  
-   <span data-ttu-id="805d1-121">Statische Methoden werden mit dem <xref:System.Reflection.MethodAttributes.Static?displayProperty=nameWithType>-Attribut angegeben.</span><span class="sxs-lookup"><span data-stu-id="805d1-121">Static methods are specified using the <xref:System.Reflection.MethodAttributes.Static?displayProperty=nameWithType> attribute.</span></span>  
  
-   <span data-ttu-id="805d1-122">Abschließende Methoden (Methoden, die nicht überschrieben werden können) werden mit dem <xref:System.Reflection.MethodAttributes.Final?displayProperty=nameWithType>-Attribut angegeben.</span><span class="sxs-lookup"><span data-stu-id="805d1-122">Final methods (methods that cannot be overridden) are specified using the <xref:System.Reflection.MethodAttributes.Final?displayProperty=nameWithType> attribute.</span></span>  
  
-   <span data-ttu-id="805d1-123">Virtuelle Methoden werden mit dem <xref:System.Reflection.MethodAttributes.Virtual?displayProperty=nameWithType>-Attribut angegeben.</span><span class="sxs-lookup"><span data-stu-id="805d1-123">Virtual methods are specified using the <xref:System.Reflection.MethodAttributes.Virtual?displayProperty=nameWithType> attribute.</span></span>  
  
-   <span data-ttu-id="805d1-124">Abstrakte Methoden werden mit dem <xref:System.Reflection.MethodAttributes.Abstract?displayProperty=nameWithType>-Attribut angegeben.</span><span class="sxs-lookup"><span data-stu-id="805d1-124">Abstract methods are specified using the <xref:System.Reflection.MethodAttributes.Abstract?displayProperty=nameWithType> attribute.</span></span>  
  
-   <span data-ttu-id="805d1-125">Mehrere Attribute bestimmen die Sichtbarkeit der Methode.</span><span class="sxs-lookup"><span data-stu-id="805d1-125">Several attributes determine method visibility.</span></span> <span data-ttu-id="805d1-126">Weitere Informationen finden Sie in der Beschreibung der <xref:System.Reflection.MethodAttributes>-Enumeration.</span><span class="sxs-lookup"><span data-stu-id="805d1-126">See the description of the <xref:System.Reflection.MethodAttributes> enumeration.</span></span>  
  
-   <span data-ttu-id="805d1-127">Methoden, die überladene Operatoren implementieren, müssen das <xref:System.Reflection.MethodAttributes.SpecialName?displayProperty=nameWithType> Attribut festlegen.</span><span class="sxs-lookup"><span data-stu-id="805d1-127">Methods that implement overloaded operators must set the <xref:System.Reflection.MethodAttributes.SpecialName?displayProperty=nameWithType> attribute.</span></span>  
  
-   <span data-ttu-id="805d1-128">Finalizer müssen das <xref:System.Reflection.MethodAttributes.SpecialName?displayProperty=nameWithType>-Attribut festlegen.</span><span class="sxs-lookup"><span data-stu-id="805d1-128">Finalizers must set the <xref:System.Reflection.MethodAttributes.SpecialName?displayProperty=nameWithType> attribute.</span></span>  
  
## <a name="known-issues"></a><span data-ttu-id="805d1-129">Bekannte Probleme</span><span class="sxs-lookup"><span data-stu-id="805d1-129">Known Issues</span></span>  
  
-   <span data-ttu-id="805d1-130">Obwohl <xref:System.Reflection.Emit.MethodBuilder> von <xref:System.Reflection.MethodInfo>abgeleitet ist, werden einige der in der <xref:System.Reflection.MethodInfo>-Klasse definierten abstrakten Methoden nicht vollständig in <xref:System.Reflection.Emit.MethodBuilder>implementiert.</span><span class="sxs-lookup"><span data-stu-id="805d1-130">Although <xref:System.Reflection.Emit.MethodBuilder> is derived from <xref:System.Reflection.MethodInfo>, some of the abstract methods defined in the <xref:System.Reflection.MethodInfo> class are not fully implemented in <xref:System.Reflection.Emit.MethodBuilder>.</span></span> <span data-ttu-id="805d1-131">Diese <xref:System.Reflection.Emit.MethodBuilder> Methoden lösen den <xref:System.NotSupportedException>aus.</span><span class="sxs-lookup"><span data-stu-id="805d1-131">These <xref:System.Reflection.Emit.MethodBuilder> methods throw the <xref:System.NotSupportedException>.</span></span> <span data-ttu-id="805d1-132">Beispielsweise ist die <xref:System.Reflection.Emit.MethodBuilder.Invoke%2A?displayProperty=nameWithType>-Methode nicht vollständig implementiert.</span><span class="sxs-lookup"><span data-stu-id="805d1-132">For example the <xref:System.Reflection.Emit.MethodBuilder.Invoke%2A?displayProperty=nameWithType> method is not fully implemented.</span></span> <span data-ttu-id="805d1-133">Sie können diese Methoden reflektieren, indem Sie den einschließenden Typ mithilfe der Methoden <xref:System.Type.GetType%2A?displayProperty=nameWithType> oder <xref:System.Reflection.Assembly.GetType%2A?displayProperty=nameWithType> abrufen.</span><span class="sxs-lookup"><span data-stu-id="805d1-133">You can reflect on these methods by retrieving the enclosing type using the <xref:System.Type.GetType%2A?displayProperty=nameWithType> or <xref:System.Reflection.Assembly.GetType%2A?displayProperty=nameWithType> methods.</span></span>  
  
-   <span data-ttu-id="805d1-134">Benutzerdefinierte modifiziererer werden ab Version 2,0 von .NET Framework unterstützt.</span><span class="sxs-lookup"><span data-stu-id="805d1-134">Custom modifiers are supported starting with the .NET Framework version 2.0.</span></span> <span data-ttu-id="805d1-135">Sie werden in früheren Versionen nicht unterstützt.</span><span class="sxs-lookup"><span data-stu-id="805d1-135">They are not supported in earlier versions.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="805d1-136">Im folgenden Beispiel wird die <xref:System.Reflection.Emit.MethodBuilder>-Klasse verwendet, um eine Methode innerhalb eines dynamischen Typs zu erstellen.</span><span class="sxs-lookup"><span data-stu-id="805d1-136">The following example uses the <xref:System.Reflection.Emit.MethodBuilder> class to create a method within a dynamic type.</span></span>  
  
 [!code-cpp[System.Reflection.Emit.MethodBuilder Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Reflection.Emit.MethodBuilder Example/CPP/source.cpp#1)]
 [!code-csharp[System.Reflection.Emit.MethodBuilder Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Reflection.Emit.MethodBuilder Example/CS/source.cs#1)]
 [!code-vb[System.Reflection.Emit.MethodBuilder Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Reflection.Emit.MethodBuilder Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MethodBuilder ();" FrameworkAlternate="xamarinios-10.8" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" FrameworkAlternate="xamarinios-10.8" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.MethodBuilder.#ctor" FrameworkAlternate="xamarinios-10.8" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" FrameworkAlternate="xamarinios-10.8" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; MethodBuilder();" FrameworkAlternate="xamarinios-10.8" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddDeclarativeSecurity">
      <MemberSignature Language="C#" Value="public void AddDeclarativeSecurity (System.Security.Permissions.SecurityAction action, System.Security.PermissionSet pset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddDeclarativeSecurity(valuetype System.Security.Permissions.SecurityAction action, class System.Security.PermissionSet pset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.MethodBuilder.AddDeclarativeSecurity(System.Security.Permissions.SecurityAction,System.Security.PermissionSet)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddDeclarativeSecurity (action As SecurityAction, pset As PermissionSet)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddDeclarativeSecurity(System::Security::Permissions::SecurityAction action, System::Security::PermissionSet ^ pset);" />
      <MemberSignature Language="F#" Value="member this.AddDeclarativeSecurity : System.Security.Permissions.SecurityAction * System.Security.PermissionSet -&gt; unit" Usage="methodBuilder.AddDeclarativeSecurity (action, pset)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="action" Type="System.Security.Permissions.SecurityAction" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
        <Parameter Name="pset" Type="System.Security.PermissionSet" Index="1" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="action"><span data-ttu-id="805d1-137">Die auszuführende Sicherheitsaktion (Demand, Assert usw.).</span><span class="sxs-lookup"><span data-stu-id="805d1-137">The security action to be taken (Demand, Assert, and so on).</span></span></param>
        <param name="pset"><span data-ttu-id="805d1-138">Der Berechtigungssatz, für den die Aktion gilt.</span><span class="sxs-lookup"><span data-stu-id="805d1-138">The set of permissions the action applies to.</span></span></param>
        <summary><span data-ttu-id="805d1-139">Fügt dieser Methode deklarative Sicherheit hinzu.</span><span class="sxs-lookup"><span data-stu-id="805d1-139">Adds declarative security to this method.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="805d1-140"><xref:System.Reflection.Emit.MethodBuilder.AddDeclarativeSecurity%2A> können mehrmals aufgerufen werden, wobei jeder Aufruf eine Sicherheitsaktion (z. b. `Demand`, `Assert`und `Deny`) und einen Berechtigungs Satz angibt, auf den die Aktion angewendet wird.</span><span class="sxs-lookup"><span data-stu-id="805d1-140"><xref:System.Reflection.Emit.MethodBuilder.AddDeclarativeSecurity%2A> can be called several times, with each call specifying a security action (such as `Demand`, `Assert`, and `Deny`) and a set of permissions that the action applies to.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="805d1-141">In den .NET Framework Versionen 1,0, 1,1 und 2,0 werden die deklarativen Sicherheits Attribute, die mit der <xref:System.Reflection.Emit.MethodBuilder.AddDeclarativeSecurity%2A>-Methode auf eine Methode angewendet werden, im alten XML-Metadatenformat gespeichert.</span><span class="sxs-lookup"><span data-stu-id="805d1-141">In the .NET Framework versions 1.0, 1.1, and 2.0, the declarative security attributes applied to a method by using the <xref:System.Reflection.Emit.MethodBuilder.AddDeclarativeSecurity%2A> method are stored in the old XML metadata format.</span></span> <span data-ttu-id="805d1-142">Siehe Ausgeben von deklarativen Sicherheits Attributen.</span><span class="sxs-lookup"><span data-stu-id="805d1-142">See Emitting Declarative Security Attributes.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="805d1-143">Das folgende Codebeispiel veranschaulicht die kontextabhängige Verwendung von `AddDeclarativeSecurity`, um den Aufrufer einer Methode aufzufordern, über uneingeschränkte Berechtigungen zu verfügen.</span><span class="sxs-lookup"><span data-stu-id="805d1-143">The code sample below illustrates the contextual use of `AddDeclarativeSecurity` to require the caller of a method to have unrestricted permissions.</span></span>  
  
 [!code-cpp[System.Reflection.Emit.MethodBuilder.AddDeclarativeSecurity Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Reflection.Emit.MethodBuilder.AddDeclarativeSecurity Example/CPP/source.cpp#1)]
 [!code-csharp[System.Reflection.Emit.MethodBuilder.AddDeclarativeSecurity Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Reflection.Emit.MethodBuilder.AddDeclarativeSecurity Example/CS/source.cs#1)]
 [!code-vb[System.Reflection.Emit.MethodBuilder.AddDeclarativeSecurity Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Reflection.Emit.MethodBuilder.AddDeclarativeSecurity Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="805d1-144">Die <paramref name="action" /> ist ungültig (<see langword="RequestMinimum" />, <see langword="RequestOptional" />, und <see langword="RequestRefuse" /> sind ungültig).</span><span class="sxs-lookup"><span data-stu-id="805d1-144">The <paramref name="action" /> is invalid (<see langword="RequestMinimum" />, <see langword="RequestOptional" />, and <see langword="RequestRefuse" /> are invalid).</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="805d1-145">Der enthaltende Typ wurde mithilfe von <see cref="M:System.Reflection.Emit.TypeBuilder.CreateType" /> erstellt.</span><span class="sxs-lookup"><span data-stu-id="805d1-145">The containing type has been created using <see cref="M:System.Reflection.Emit.TypeBuilder.CreateType" />.</span></span>  
  
<span data-ttu-id="805d1-146">Oder</span><span class="sxs-lookup"><span data-stu-id="805d1-146">-or-</span></span> 
<span data-ttu-id="805d1-147">Der Berechtigungssatz <paramref name="pset" /> enthält eine Aktion, die zuvor von <see cref="M:System.Reflection.Emit.MethodBuilder.AddDeclarativeSecurity(System.Security.Permissions.SecurityAction,System.Security.PermissionSet)" /> hinzugefügt wurde.</span><span class="sxs-lookup"><span data-stu-id="805d1-147">The permission set <paramref name="pset" /> contains an action that was added earlier by <see cref="M:System.Reflection.Emit.MethodBuilder.AddDeclarativeSecurity(System.Security.Permissions.SecurityAction,System.Security.PermissionSet)" />.</span></span>  
  
<span data-ttu-id="805d1-148">Oder</span><span class="sxs-lookup"><span data-stu-id="805d1-148">-or-</span></span> 
<span data-ttu-id="805d1-149">Für die aktuelle Methode ist die <see cref="P:System.Reflection.Emit.MethodBuilder.IsGenericMethod" />-Eigenschaft <see langword="true" />, aber die <see cref="P:System.Reflection.Emit.MethodBuilder.IsGenericMethodDefinition" />-Eigenschaft ist <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="805d1-149">For the current method, the <see cref="P:System.Reflection.Emit.MethodBuilder.IsGenericMethod" /> property is <see langword="true" />, but the <see cref="P:System.Reflection.Emit.MethodBuilder.IsGenericMethodDefinition" /> property is <see langword="false" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="805d1-150"><paramref name="pset" /> ist <see langword="null" /></span><span class="sxs-lookup"><span data-stu-id="805d1-150"><paramref name="pset" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Attributes">
      <MemberSignature Language="C#" Value="public override System.Reflection.MethodAttributes Attributes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Reflection.MethodAttributes Attributes" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.MethodBuilder.Attributes" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Attributes As MethodAttributes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Reflection::MethodAttributes Attributes { System::Reflection::MethodAttributes get(); };" />
      <MemberSignature Language="F#" Value="member this.Attributes : System.Reflection.MethodAttributes" Usage="System.Reflection.Emit.MethodBuilder.Attributes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodAttributes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="805d1-151">Ruft die Attribute für diese Methode ab.</span><span class="sxs-lookup"><span data-stu-id="805d1-151">Retrieves the attributes for this method.</span></span></summary>
        <value><span data-ttu-id="805d1-152">Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="805d1-152">Read-only.</span></span> <span data-ttu-id="805d1-153">Ruft die <see langword="MethodAttributes" /> für diese Methode ab.</span><span class="sxs-lookup"><span data-stu-id="805d1-153">Retrieves the <see langword="MethodAttributes" /> for this method.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CallingConvention">
      <MemberSignature Language="C#" Value="public override System.Reflection.CallingConventions CallingConvention { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Reflection.CallingConventions CallingConvention" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.MethodBuilder.CallingConvention" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CallingConvention As CallingConventions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Reflection::CallingConventions CallingConvention { System::Reflection::CallingConventions get(); };" />
      <MemberSignature Language="F#" Value="member this.CallingConvention : System.Reflection.CallingConventions" Usage="System.Reflection.Emit.MethodBuilder.CallingConvention" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.CallingConventions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="805d1-154">Gibt die Aufrufkonvention der Methode zurück.</span><span class="sxs-lookup"><span data-stu-id="805d1-154">Returns the calling convention of the method.</span></span></summary>
        <value><span data-ttu-id="805d1-155">Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="805d1-155">Read-only.</span></span> <span data-ttu-id="805d1-156">Die Aufrufkonvention der Methode.</span><span class="sxs-lookup"><span data-stu-id="805d1-156">The calling convention of the method.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContainsGenericParameters">
      <MemberSignature Language="C#" Value="public override bool ContainsGenericParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ContainsGenericParameters" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.MethodBuilder.ContainsGenericParameters" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property ContainsGenericParameters As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool ContainsGenericParameters { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.ContainsGenericParameters : bool" Usage="System.Reflection.Emit.MethodBuilder.ContainsGenericParameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="805d1-157">Für diesen Typ nicht unterstützt.</span><span class="sxs-lookup"><span data-stu-id="805d1-157">Not supported for this type.</span></span></summary>
        <value><span data-ttu-id="805d1-158">Wird nicht unterstützt.</span><span class="sxs-lookup"><span data-stu-id="805d1-158">Not supported.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="805d1-159">Ein-<xref:System.Reflection.Emit.MethodBuilder> stellt immer eine generische Methoden Definition dar und kann daher nicht aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="805d1-159">A <xref:System.Reflection.Emit.MethodBuilder> always represents a generic method definition, and thus cannot be invoked.</span></span>  
  
 <span data-ttu-id="805d1-160">Weitere Informationen finden Sie unter <xref:System.Reflection.MethodBase.IsGenericMethod%2A?displayProperty=nameWithType> und <xref:System.Reflection.MethodBase.ContainsGenericParameters%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="805d1-160">For more information, see <xref:System.Reflection.MethodBase.IsGenericMethod%2A?displayProperty=nameWithType> and <xref:System.Reflection.MethodBase.ContainsGenericParameters%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="805d1-161">Weitere Informationen zu generischen Typen finden Sie unter <xref:System.Type.IsGenericType%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="805d1-161">For information on generic types, see <xref:System.Type.IsGenericType%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="805d1-162">Die aufgerufene Methode wird in der Basisklasse nicht unterstützt.</span><span class="sxs-lookup"><span data-stu-id="805d1-162">The invoked method is not supported in the base class.</span></span></exception>
        <altmember cref="T:System.Reflection.MethodInfo" />
        <altmember cref="P:System.Type.IsGenericType" />
      </Docs>
    </Member>
    <Member MemberName="CreateMethodBody">
      <MemberSignature Language="C#" Value="public void CreateMethodBody (byte[] il, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CreateMethodBody(unsigned int8[] il, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.MethodBuilder.CreateMethodBody(System.Byte[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CreateMethodBody (il As Byte(), count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CreateMethodBody(cli::array &lt;System::Byte&gt; ^ il, int count);" />
      <MemberSignature Language="F#" Value="member this.CreateMethodBody : byte[] * int -&gt; unit" Usage="methodBuilder.CreateMethodBody (il, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="il" Type="System.Byte[]" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="count" Type="System.Int32" Index="1" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="il"><span data-ttu-id="805d1-163">Ein Array mit gültigen MSIL-Anweisungen.</span><span class="sxs-lookup"><span data-stu-id="805d1-163">An array containing valid MSIL instructions.</span></span> <span data-ttu-id="805d1-164">Wenn dieser Parameter <see langword="null" /> ist, wird der Methodentext gelöscht.</span><span class="sxs-lookup"><span data-stu-id="805d1-164">If this parameter is <see langword="null" />, the method's body is cleared.</span></span></param>
        <param name="count"><span data-ttu-id="805d1-165">Die Anzahl der gültigen Bytes im MSIL-Array.</span><span class="sxs-lookup"><span data-stu-id="805d1-165">The number of valid bytes in the MSIL array.</span></span> <span data-ttu-id="805d1-166">Dieser Wert wird ignoriert, wenn MSIL <see langword="null" /> ist.</span><span class="sxs-lookup"><span data-stu-id="805d1-166">This value is ignored if MSIL is <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="805d1-167">Erstellt den Text der Methode unter Verwendung eines angegebenen Bytearrays von MSIL-Anweisungen (Microsoft Intermediate Language).</span><span class="sxs-lookup"><span data-stu-id="805d1-167">Creates the body of the method using a supplied byte array of Microsoft intermediate language (MSIL) instructions.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="805d1-168">Diese Methode erstellt den Text der Methode aus `il`, einem Array, das MSIL-Anweisungen als Opcodes enthält.</span><span class="sxs-lookup"><span data-stu-id="805d1-168">This method creates the method's body from `il`, an array containing MSIL instructions as opcodes.</span></span> <span data-ttu-id="805d1-169">Die Anzahl der Bytes der gültigen MSIL wird durch count angegeben.</span><span class="sxs-lookup"><span data-stu-id="805d1-169">The number of bytes of valid MSIL is given by count.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="805d1-170">Dies wird zurzeit nicht vollständig unterstützt.</span><span class="sxs-lookup"><span data-stu-id="805d1-170">This is currently not fully supported.</span></span> <span data-ttu-id="805d1-171">Der Benutzer kann den Speicherort von tokenfixups und Ausnahme Handlern nicht angeben.</span><span class="sxs-lookup"><span data-stu-id="805d1-171">The user cannot supply the location of token fix ups and exception handlers.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="805d1-172">Im unten angegebenen Beispiel wird eine einfache Methode, die zwei ganze Zahlen hinzufügt, mithilfe von Opcode generiert, der `CreateMethodBody`verwendet.</span><span class="sxs-lookup"><span data-stu-id="805d1-172">In the example provided below, a simple method that adds two integers is generated via opcode using `CreateMethodBody`.</span></span>  
  
 [!code-cpp[System.Refelction.Emit.MethodBuilder.CreateMethodBody Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Refelction.Emit.MethodBuilder.CreateMethodBody Example/CPP/source.cpp#1)]
 [!code-csharp[System.Refelction.Emit.MethodBuilder.CreateMethodBody Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Refelction.Emit.MethodBuilder.CreateMethodBody Example/CS/source.cs#1)]
 [!code-vb[System.Refelction.Emit.MethodBuilder.CreateMethodBody Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Refelction.Emit.MethodBuilder.CreateMethodBody Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="805d1-173"><paramref name="count" /> liegt nicht innerhalb des Bereichs der Indizes des angegebenen Arrays der MSIL-Anweisungen und <paramref name="il" /> ist nicht <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="805d1-173">The <paramref name="count" /> is not within the range of indexes of the supplied MSIL instruction array and <paramref name="il" /> is not <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="805d1-174">Der enthaltende Typ wurde zuvor mit <see cref="M:System.Reflection.Emit.TypeBuilder.CreateType" /> erstellt.</span><span class="sxs-lookup"><span data-stu-id="805d1-174">The containing type was previously created using <see cref="M:System.Reflection.Emit.TypeBuilder.CreateType" />.</span></span>  
  
<span data-ttu-id="805d1-175">Oder</span><span class="sxs-lookup"><span data-stu-id="805d1-175">-or-</span></span> 
<span data-ttu-id="805d1-176">Diese Methode wurde zuvor in diesem <see langword="MethodBuilder" /> mit einem <paramref name="il" />-Argument aufgerufen, das nicht <see langword="null" /> war.</span><span class="sxs-lookup"><span data-stu-id="805d1-176">This method was called previously on this <see langword="MethodBuilder" /> with an <paramref name="il" /> argument that was not <see langword="null" />.</span></span>  
  
<span data-ttu-id="805d1-177">Oder</span><span class="sxs-lookup"><span data-stu-id="805d1-177">-or-</span></span> 
<span data-ttu-id="805d1-178">Für die aktuelle Methode ist die <see cref="P:System.Reflection.Emit.MethodBuilder.IsGenericMethod" />-Eigenschaft <see langword="true" />, aber die <see cref="P:System.Reflection.Emit.MethodBuilder.IsGenericMethodDefinition" />-Eigenschaft ist <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="805d1-178">For the current method, the <see cref="P:System.Reflection.Emit.MethodBuilder.IsGenericMethod" /> property is <see langword="true" />, but the <see cref="P:System.Reflection.Emit.MethodBuilder.IsGenericMethodDefinition" /> property is <see langword="false" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="DeclaringType">
      <MemberSignature Language="C#" Value="public override Type DeclaringType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type DeclaringType" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.MethodBuilder.DeclaringType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property DeclaringType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Type ^ DeclaringType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DeclaringType : Type" Usage="System.Reflection.Emit.MethodBuilder.DeclaringType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="805d1-179">Gibt den Typ zurück, der diese Methode deklariert.</span><span class="sxs-lookup"><span data-stu-id="805d1-179">Returns the type that declares this method.</span></span></summary>
        <value><span data-ttu-id="805d1-180">Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="805d1-180">Read-only.</span></span> <span data-ttu-id="805d1-181">Der Typ, der diese Methode deklariert.</span><span class="sxs-lookup"><span data-stu-id="805d1-181">The type that declares this method.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="805d1-182">Der folgende Code veranschaulicht die Verwendung der `Type`-Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="805d1-182">The following code illustrates the use of the `Type` property.</span></span>  
  
 [!code-cpp[MethodBuilderClass_TypeSample#1](~/samples/snippets/cpp/VS_Snippets_CLR/MethodBuilderClass_TypeSample/CPP/methodbuilderclass.cpp#1)]
 [!code-csharp[MethodBuilderClass_TypeSample#1](~/samples/snippets/csharp/VS_Snippets_CLR/MethodBuilderClass_TypeSample/CS/methodbuilderclass.cs#1)]
 [!code-vb[MethodBuilderClass_TypeSample#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/MethodBuilderClass_TypeSample/VB/methodbuilderclass.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefineGenericParameters">
      <MemberSignature Language="C#" Value="public System.Reflection.Emit.GenericTypeParameterBuilder[] DefineGenericParameters (params string[] names);" FrameworkAlternate="net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.1;xamarinandroid-7.1;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Reflection.Emit.GenericTypeParameterBuilder[] DefineGenericParameters(string[] names) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.MethodBuilder.DefineGenericParameters(System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Function DefineGenericParameters (ParamArray names As String()) As GenericTypeParameterBuilder()" FrameworkAlternate="net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.1;xamarinandroid-7.1;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Reflection::Emit::GenericTypeParameterBuilder ^&gt; ^ DefineGenericParameters(... cli::array &lt;System::String ^&gt; ^ names);" FrameworkAlternate="net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.1;xamarinandroid-7.1;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="member this.DefineGenericParameters : string[] -&gt; System.Reflection.Emit.GenericTypeParameterBuilder[]" Usage="methodBuilder.DefineGenericParameters names" />
      <MemberSignature Language="C#" Value="public System.Reflection.Emit.GenericTypeParameterBuilder[] DefineGenericParameters (string[] names);" FrameworkAlternate="xamarinios-10.8" />
      <MemberSignature Language="VB.NET" Value="Public Function DefineGenericParameters (names As String()) As GenericTypeParameterBuilder()" FrameworkAlternate="xamarinios-10.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Reflection::Emit::GenericTypeParameterBuilder ^&gt; ^ DefineGenericParameters(cli::array &lt;System::String ^&gt; ^ names);" FrameworkAlternate="xamarinios-10.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.GenericTypeParameterBuilder[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="names" Type="System.String[]" Index="0" FrameworkAlternate="net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <Attributes>
            <Attribute FrameworkAlternate="net-5.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="names"><span data-ttu-id="805d1-183">Ein Array von Zeichenfolgen, die die Namen der generischen Typparameter darstellen.</span><span class="sxs-lookup"><span data-stu-id="805d1-183">An array of strings that represent the names of the generic type parameters.</span></span></param>
        <summary><span data-ttu-id="805d1-184">Legt die Anzahl von generischen Typparametern für die aktuelle Methode fest, gibt deren Namen an und gibt ein Array von <see cref="T:System.Reflection.Emit.GenericTypeParameterBuilder" />-Objekten zurück, das dazu verwendet werden kann, deren Einschränkungen zu definieren.</span><span class="sxs-lookup"><span data-stu-id="805d1-184">Sets the number of generic type parameters for the current method, specifies their names, and returns an array of <see cref="T:System.Reflection.Emit.GenericTypeParameterBuilder" /> objects that can be used to define their constraints.</span></span></summary>
        <returns><span data-ttu-id="805d1-185">Ein Array von <see cref="T:System.Reflection.Emit.GenericTypeParameterBuilder" />-Objekten, die die Typparameter der generischen Methode darstellen.</span><span class="sxs-lookup"><span data-stu-id="805d1-185">An array of <see cref="T:System.Reflection.Emit.GenericTypeParameterBuilder" /> objects representing the type parameters of the generic method.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="805d1-186">Wenn Sie die <xref:System.Reflection.Emit.MethodBuilder.DefineGenericParameters%2A>-Methode aufrufen, wird die aktuelle Methode generisch.</span><span class="sxs-lookup"><span data-stu-id="805d1-186">Calling the <xref:System.Reflection.Emit.MethodBuilder.DefineGenericParameters%2A> method makes the current method generic.</span></span> <span data-ttu-id="805d1-187">Es gibt keine Möglichkeit, diese Änderung rückgängig zu machen.</span><span class="sxs-lookup"><span data-stu-id="805d1-187">There is no way to undo this change.</span></span> <span data-ttu-id="805d1-188">Wenn diese Methode ein zweites Mal aufgerufen wird, wird ein <xref:System.InvalidOperationException>verursacht.</span><span class="sxs-lookup"><span data-stu-id="805d1-188">Calling this method a second time causes an <xref:System.InvalidOperationException>.</span></span>  
  
 <span data-ttu-id="805d1-189">Die Typparameter der generischen Methode können später mithilfe der <xref:System.Reflection.Emit.MethodBuilder.GetGenericArguments%2A>-Methode abgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="805d1-189">The type parameters of the generic method can be retrieved later by using the <xref:System.Reflection.Emit.MethodBuilder.GetGenericArguments%2A> method.</span></span>  
  
 <span data-ttu-id="805d1-190">Gemäß der Konvention handelt es sich bei einem Typparameter Namen um einen einzelnen Großbuchstaben.</span><span class="sxs-lookup"><span data-stu-id="805d1-190">By convention, a type parameter name is a single uppercase letter.</span></span>  
  
 <span data-ttu-id="805d1-191">Weitere Informationen finden Sie unter <xref:System.Reflection.MethodBase.IsGenericMethod%2A?displayProperty=nameWithType> und <xref:System.Reflection.MethodInfo.GetGenericMethodDefinition%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="805d1-191">For more information, see <xref:System.Reflection.MethodBase.IsGenericMethod%2A?displayProperty=nameWithType> and <xref:System.Reflection.MethodInfo.GetGenericMethodDefinition%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="805d1-192">Weitere Informationen zu generischen Typen finden Sie unter <xref:System.Type.IsGenericType%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="805d1-192">For information on generic types, see <xref:System.Type.IsGenericType%2A?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="805d1-193">Im folgenden Codebeispiel wird der dynamische Typ `DemoType`erstellt, der die dynamische generische Methode `DemoMethod`enthält.</span><span class="sxs-lookup"><span data-stu-id="805d1-193">The following code example creates a dynamic type, `DemoType`, which contains the dynamic generic method `DemoMethod`.</span></span> <span data-ttu-id="805d1-194">Diese Methode verfügt über zwei generische Typparameter, von denen einer als Parameter verwendet wird, und der andere als Rückgabetyp.</span><span class="sxs-lookup"><span data-stu-id="805d1-194">This method has two generic type parameters, one of which is used as a parameter, and the other as the return type.</span></span>  
  
 <span data-ttu-id="805d1-195">Bei der Codeausführung wird die dynamische Assembly als DemoGenericMethod1.dll gespeichert. Sie kann mit [Ildasm.exe (IL-Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md) untersucht werden.</span><span class="sxs-lookup"><span data-stu-id="805d1-195">When the code is executed, the dynamic assembly is saved as DemoGenericMethod1.dll, and can be examined using the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="805d1-196">In diesem Codebeispiel wird ein einfacher Methoden Text generiert, der lediglich einen NULL-Verweis zurückgibt.</span><span class="sxs-lookup"><span data-stu-id="805d1-196">This code example generates a simple method body that merely returns a null reference.</span></span> <span data-ttu-id="805d1-197">Ein Codebeispiel mit einem vollständig entwickelten Methoden Text, der generische Typen erstellt und verwendet, finden [Sie unter Gewusst wie: Definieren einer generischen Methode mit Reflektionsausgabe](~/docs/framework/reflection-and-codedom/how-to-define-a-generic-method-with-reflection-emit.md).</span><span class="sxs-lookup"><span data-stu-id="805d1-197">For a code example with a more fully developed method body that creates and uses generic types, see [How to: Define a Generic Method with Reflection Emit](~/docs/framework/reflection-and-codedom/how-to-define-a-generic-method-with-reflection-emit.md).</span></span>  
  
 [!code-cpp[GenericMethodBuilder#1](~/samples/snippets/cpp/VS_Snippets_CLR/GenericMethodBuilder/cpp/source.cpp#1)]
 [!code-csharp[GenericMethodBuilder#1](~/samples/snippets/csharp/VS_Snippets_CLR/GenericMethodBuilder/CS/source.cs#1)]
 [!code-vb[GenericMethodBuilder#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/GenericMethodBuilder/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="805d1-198">Es wurden bereits generische Typparameter für diese Methode definiert.</span><span class="sxs-lookup"><span data-stu-id="805d1-198">Generic type parameters have already been defined for this method.</span></span>  
  
<span data-ttu-id="805d1-199">Oder</span><span class="sxs-lookup"><span data-stu-id="805d1-199">-or-</span></span> 
<span data-ttu-id="805d1-200">Die Methode wurde bereits abgeschlossen.</span><span class="sxs-lookup"><span data-stu-id="805d1-200">The method has been completed already.</span></span>  
  
<span data-ttu-id="805d1-201">Oder</span><span class="sxs-lookup"><span data-stu-id="805d1-201">-or-</span></span> 
<span data-ttu-id="805d1-202">Die <see cref="M:System.Reflection.Emit.MethodBuilder.SetImplementationFlags(System.Reflection.MethodImplAttributes)" />-Methode wurde für die aktuelle Methode aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="805d1-202">The <see cref="M:System.Reflection.Emit.MethodBuilder.SetImplementationFlags(System.Reflection.MethodImplAttributes)" /> method has been called for the current method.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="805d1-203"><paramref name="names" /> ist <see langword="null" /></span><span class="sxs-lookup"><span data-stu-id="805d1-203"><paramref name="names" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="805d1-204">Oder</span><span class="sxs-lookup"><span data-stu-id="805d1-204">-or-</span></span> 
<span data-ttu-id="805d1-205">Ein Element von <paramref name="names" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="805d1-205">An element of <paramref name="names" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="805d1-206"><paramref name="names" /> ist ein leeres Array.</span><span class="sxs-lookup"><span data-stu-id="805d1-206"><paramref name="names" /> is an empty array.</span></span></exception>
        <altmember cref="T:System.Reflection.MethodInfo" />
        <altmember cref="P:System.Type.IsGenericType" />
        <altmember cref="Overload:System.Reflection.Emit.TypeBuilder.DefineMethod" />
        <related type="Article" href="~/docs/framework/reflection-and-codedom/how-to-define-a-generic-method-with-reflection-emit.md"><span data-ttu-id="805d1-207">Gewusst wie: Definieren einer generischen Methode mit Reflektionsausgabe</span><span class="sxs-lookup"><span data-stu-id="805d1-207">How to: Define a Generic Method with Reflection Emit</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="DefineParameter">
      <MemberSignature Language="C#" Value="public System.Reflection.Emit.ParameterBuilder DefineParameter (int position, System.Reflection.ParameterAttributes attributes, string strParamName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Reflection.Emit.ParameterBuilder DefineParameter(int32 position, valuetype System.Reflection.ParameterAttributes attributes, string strParamName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.MethodBuilder.DefineParameter(System.Int32,System.Reflection.ParameterAttributes,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function DefineParameter (position As Integer, attributes As ParameterAttributes, strParamName As String) As ParameterBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Emit::ParameterBuilder ^ DefineParameter(int position, System::Reflection::ParameterAttributes attributes, System::String ^ strParamName);" />
      <MemberSignature Language="F#" Value="member this.DefineParameter : int * System.Reflection.ParameterAttributes * string -&gt; System.Reflection.Emit.ParameterBuilder" Usage="methodBuilder.DefineParameter (position, attributes, strParamName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.ParameterBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="position" Type="System.Int32" />
        <Parameter Name="attributes" Type="System.Reflection.ParameterAttributes" />
        <Parameter Name="strParamName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="position"><span data-ttu-id="805d1-208">Die Position des Parameters in der Parameterliste.</span><span class="sxs-lookup"><span data-stu-id="805d1-208">The position of the parameter in the parameter list.</span></span> <span data-ttu-id="805d1-209">Parameter werden beginnend mit der Zahl 1 (für den ersten Parameter) indiziert. Die Zahl 0 stellt den Rückgabewert der Methode dar.</span><span class="sxs-lookup"><span data-stu-id="805d1-209">Parameters are indexed beginning with the number 1 for the first parameter; the number 0 represents the return value of the method.</span></span></param>
        <param name="attributes"><span data-ttu-id="805d1-210">Die Parameterattribute des Parameters.</span><span class="sxs-lookup"><span data-stu-id="805d1-210">The parameter attributes of the parameter.</span></span></param>
        <param name="strParamName"><span data-ttu-id="805d1-211">Der Name des Parameters.</span><span class="sxs-lookup"><span data-stu-id="805d1-211">The name of the parameter.</span></span> <span data-ttu-id="805d1-212">Der Name kann aus einer NULL-Zeichenfolge bestehen.</span><span class="sxs-lookup"><span data-stu-id="805d1-212">The name can be the null string.</span></span></param>
        <summary><span data-ttu-id="805d1-213">Legt die Parameterattribute und den Namen eines Parameters dieser Methode oder des Rückgabewerts dieser Methode fest.</span><span class="sxs-lookup"><span data-stu-id="805d1-213">Sets the parameter attributes and the name of a parameter of this method, or of the return value of this method.</span></span> <span data-ttu-id="805d1-214">Gibt einen ParameterBuilder zurück, mit dem benutzerdefinierte Attribute angewendet werden können.</span><span class="sxs-lookup"><span data-stu-id="805d1-214">Returns a ParameterBuilder that can be used to apply custom attributes.</span></span></summary>
        <returns><span data-ttu-id="805d1-215">Gibt ein <see langword="ParameterBuilder" />-Objekt zurück, das einen Parameter dieser Methode oder den Rückgabewert dieser Methode darstellt.</span><span class="sxs-lookup"><span data-stu-id="805d1-215">Returns a <see langword="ParameterBuilder" /> object that represents a parameter of this method or the return value of this method.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="805d1-216">Das von dieser Methode zurückgegebene <xref:System.Reflection.Emit.ParameterBuilder> Objekt kann zum Festlegen des Standardwerts für einen Parameter oder zum Anwenden benutzerdefinierter Attribute verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="805d1-216">The <xref:System.Reflection.Emit.ParameterBuilder> object returned by this method can be used to set the default value for a parameter or to apply custom attributes.</span></span>  
  
 <span data-ttu-id="805d1-217">Die Parameter Nummerierung beginnt mit 1, sodass `position` für den ersten Parameter 1 ist.</span><span class="sxs-lookup"><span data-stu-id="805d1-217">Parameter numbering begins with 1, so `position` is 1 for the first parameter.</span></span> <span data-ttu-id="805d1-218">Wenn `position` NULL ist, wirkt sich diese Methode auf den Rückgabewert aus.</span><span class="sxs-lookup"><span data-stu-id="805d1-218">If `position` is zero, this method affects the return value.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="805d1-219">In den .NET Framework Versionen 1,0 und 1,1 wird eine Ausnahme ausgelöst, wenn `position` 0 (null) ist. Daher kann diese Methode nicht verwendet werden, um Attribute des Rückgabewerts in diesen Versionen zu ändern.</span><span class="sxs-lookup"><span data-stu-id="805d1-219">In the .NET Framework versions 1.0 and 1.1, an exception is thrown if `position` is zero, so this method cannot be used to modify attributes of the return value in those versions.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="805d1-220">Die Methode hat keine Parameter.</span><span class="sxs-lookup"><span data-stu-id="805d1-220">The method has no parameters.</span></span>  
  
<span data-ttu-id="805d1-221">Oder</span><span class="sxs-lookup"><span data-stu-id="805d1-221">-or-</span></span> 
 <span data-ttu-id="805d1-222"><paramref name="position" /> ist kleiner als 0 (null).</span><span class="sxs-lookup"><span data-stu-id="805d1-222"><paramref name="position" /> is less than zero.</span></span>  
  
<span data-ttu-id="805d1-223">Oder</span><span class="sxs-lookup"><span data-stu-id="805d1-223">-or-</span></span> 
 <span data-ttu-id="805d1-224"><paramref name="position" /> ist größer als die Anzahl der Parameter der Methode.</span><span class="sxs-lookup"><span data-stu-id="805d1-224"><paramref name="position" /> is greater than the number of the method's parameters.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="805d1-225">Der enthaltende Typ wurde zuvor mit <see cref="M:System.Reflection.Emit.TypeBuilder.CreateType" /> erstellt.</span><span class="sxs-lookup"><span data-stu-id="805d1-225">The containing type was previously created using <see cref="M:System.Reflection.Emit.TypeBuilder.CreateType" />.</span></span>  
  
<span data-ttu-id="805d1-226">Oder</span><span class="sxs-lookup"><span data-stu-id="805d1-226">-or-</span></span> 
<span data-ttu-id="805d1-227">Für die aktuelle Methode ist die <see cref="P:System.Reflection.Emit.MethodBuilder.IsGenericMethod" />-Eigenschaft <see langword="true" />, aber die <see cref="P:System.Reflection.Emit.MethodBuilder.IsGenericMethodDefinition" />-Eigenschaft ist <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="805d1-227">For the current method, the <see cref="P:System.Reflection.Emit.MethodBuilder.IsGenericMethod" /> property is <see langword="true" />, but the <see cref="P:System.Reflection.Emit.MethodBuilder.IsGenericMethodDefinition" /> property is <see langword="false" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.MethodBuilder.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="methodBuilder.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" Index="0" FrameworkAlternate="net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.1;xamarinandroid-7.1;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="805d1-228">Das Objekt, das mit dieser <see langword="MethodBuilder" />-Instanz verglichen werden soll.</span><span class="sxs-lookup"><span data-stu-id="805d1-228">The object to compare with this <see langword="MethodBuilder" /> instance.</span></span></param>
        <summary><span data-ttu-id="805d1-229">Bestimmt, ob das angegebene Objekt gleich dieser Instanz ist.</span><span class="sxs-lookup"><span data-stu-id="805d1-229">Determines whether the given object is equal to this instance.</span></span></summary>
        <returns><span data-ttu-id="805d1-230"><see langword="true" />, wenn <paramref name="obj" /> eine Instanz von <see langword="MethodBuilder" /> und gleich diesem Objekt ist, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="805d1-230"><see langword="true" /> if <paramref name="obj" /> is an instance of <see langword="MethodBuilder" /> and is equal to this object; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="805d1-231">Gleichheit wird durch den gleichen Namen, die gleichen Attribute und die gleiche Signatur bestimmt.</span><span class="sxs-lookup"><span data-stu-id="805d1-231">Equality is determined by having the same name, attributes, and signature.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBaseDefinition">
      <MemberSignature Language="C#" Value="public override System.Reflection.MethodInfo GetBaseDefinition ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Reflection.MethodInfo GetBaseDefinition() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.MethodBuilder.GetBaseDefinition" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetBaseDefinition () As MethodInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Reflection::MethodInfo ^ GetBaseDefinition();" />
      <MemberSignature Language="F#" Value="override this.GetBaseDefinition : unit -&gt; System.Reflection.MethodInfo" Usage="methodBuilder.GetBaseDefinition " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="805d1-232">Gibt die Basisimplementierung für eine Methode zurück.</span><span class="sxs-lookup"><span data-stu-id="805d1-232">Return the base implementation for a method.</span></span></summary>
        <returns><span data-ttu-id="805d1-233">Die Basisimplementierung für diese Methode.</span><span class="sxs-lookup"><span data-stu-id="805d1-233">The base implementation of this method.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="805d1-234">Dadurch wird immer das aktuelle `MethodBuilder`-Objekt zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="805d1-234">This always returns the current `MethodBuilder` object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetCustomAttributes">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="805d1-235">Gibt die für diese Methode definierten benutzerdefinierten Attribute zurück.</span><span class="sxs-lookup"><span data-stu-id="805d1-235">Returns the custom attributes defined for this method.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public override object[] GetCustomAttributes (bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object[] GetCustomAttributes(bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.MethodBuilder.GetCustomAttributes(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetCustomAttributes (inherit As Boolean) As Object()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Object ^&gt; ^ GetCustomAttributes(bool inherit);" />
      <MemberSignature Language="F#" Value="override this.GetCustomAttributes : bool -&gt; obj[]" Usage="methodBuilder.GetCustomAttributes inherit" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inherit" Type="System.Boolean" Index="0" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.1;xamarinandroid-7.1;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="inherit"><span data-ttu-id="805d1-236">Gibt an, ob die Vererbungskette dieses Members nach den benutzerdefinierten Attributen durchsucht werden soll.</span><span class="sxs-lookup"><span data-stu-id="805d1-236">Specifies whether to search this member's inheritance chain to find the custom attributes.</span></span></param>
        <summary><span data-ttu-id="805d1-237">Gibt alle für diese Methode definierten benutzerdefinierten Attribute zurück.</span><span class="sxs-lookup"><span data-stu-id="805d1-237">Returns all the custom attributes defined for this method.</span></span></summary>
        <returns><span data-ttu-id="805d1-238">Gibt ein Objektarray zurück, das alle benutzerdefinierten Attribute dieser Methode darstellt.</span><span class="sxs-lookup"><span data-stu-id="805d1-238">Returns an array of objects representing all the custom attributes of this method.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="805d1-239">Diese Methode wird zurzeit nicht unterstützt.</span><span class="sxs-lookup"><span data-stu-id="805d1-239">This method is not currently supported.</span></span> <span data-ttu-id="805d1-240">Rufen Sie die Methode mithilfe von <see cref="M:System.Type.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])" /> ab, und rufen Sie <see cref="M:System.Reflection.MemberInfo.GetCustomAttributes(System.Boolean)" /> für das zurückgegebene <see cref="T:System.Reflection.MethodInfo" />-Objekt auf.</span><span class="sxs-lookup"><span data-stu-id="805d1-240">Retrieve the method using <see cref="M:System.Type.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])" /> and call <see cref="M:System.Reflection.MemberInfo.GetCustomAttributes(System.Boolean)" /> on the returned <see cref="T:System.Reflection.MethodInfo" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public override object[] GetCustomAttributes (Type attributeType, bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object[] GetCustomAttributes(class System.Type attributeType, bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.MethodBuilder.GetCustomAttributes(System.Type,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetCustomAttributes (attributeType As Type, inherit As Boolean) As Object()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Object ^&gt; ^ GetCustomAttributes(Type ^ attributeType, bool inherit);" />
      <MemberSignature Language="F#" Value="override this.GetCustomAttributes : Type * bool -&gt; obj[]" Usage="methodBuilder.GetCustomAttributes (attributeType, inherit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributeType" Type="System.Type" Index="0" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.1;xamarinandroid-7.1;xamarinmac-3.0" />
        <Parameter Name="inherit" Type="System.Boolean" Index="1" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.1;xamarinandroid-7.1;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="attributeType"><span data-ttu-id="805d1-241">Der benutzerdefinierte Attributtyp.</span><span class="sxs-lookup"><span data-stu-id="805d1-241">The custom attribute type.</span></span></param>
        <param name="inherit"><span data-ttu-id="805d1-242">Gibt an, ob die Vererbungskette dieses Members nach den benutzerdefinierten Attributen durchsucht werden soll.</span><span class="sxs-lookup"><span data-stu-id="805d1-242">Specifies whether to search this member's inheritance chain to find the custom attributes.</span></span></param>
        <summary><span data-ttu-id="805d1-243">Gibt die benutzerdefinierten Attribute zurück, die durch den angegebenen Typ identifiziert werden.</span><span class="sxs-lookup"><span data-stu-id="805d1-243">Returns the custom attributes identified by the given type.</span></span></summary>
        <returns><span data-ttu-id="805d1-244">Gibt ein Array von Objekten zurück, die die Attribute dieser Methode mit dem Typ <paramref name="attributeType" /> darstellen.</span><span class="sxs-lookup"><span data-stu-id="805d1-244">Returns an array of objects representing the attributes of this method that are of type <paramref name="attributeType" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="805d1-245">Diese Methode wird zurzeit nicht unterstützt.</span><span class="sxs-lookup"><span data-stu-id="805d1-245">This method is not currently supported.</span></span> <span data-ttu-id="805d1-246">Rufen Sie die Methode mithilfe von <see cref="M:System.Type.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])" /> ab, und rufen Sie <see cref="M:System.Reflection.MemberInfo.GetCustomAttributes(System.Boolean)" /> für das zurückgegebene <see cref="T:System.Reflection.MethodInfo" />-Objekt auf.</span><span class="sxs-lookup"><span data-stu-id="805d1-246">Retrieve the method using <see cref="M:System.Type.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])" /> and call <see cref="M:System.Reflection.MemberInfo.GetCustomAttributes(System.Boolean)" /> on the returned <see cref="T:System.Reflection.MethodInfo" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetGenericArguments">
      <MemberSignature Language="C#" Value="public override Type[] GetGenericArguments ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Type[] GetGenericArguments() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.MethodBuilder.GetGenericArguments" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetGenericArguments () As Type()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;Type ^&gt; ^ GetGenericArguments();" />
      <MemberSignature Language="F#" Value="override this.GetGenericArguments : unit -&gt; Type[]" Usage="methodBuilder.GetGenericArguments " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="805d1-247">Gibt ein Array von <see cref="T:System.Reflection.Emit.GenericTypeParameterBuilder" />-Objekten zurück, die die Typparameter der Methode darstellen, wenn diese generisch ist.</span><span class="sxs-lookup"><span data-stu-id="805d1-247">Returns an array of <see cref="T:System.Reflection.Emit.GenericTypeParameterBuilder" /> objects that represent the type parameters of the method, if it is generic.</span></span></summary>
        <returns><span data-ttu-id="805d1-248">Ein Array von <see cref="T:System.Reflection.Emit.GenericTypeParameterBuilder" />-Objekten, die für eine generische Methode die Typparameter oder <see langword="null" /> darstellen, wenn die Methode nicht generisch ist.</span><span class="sxs-lookup"><span data-stu-id="805d1-248">An array of <see cref="T:System.Reflection.Emit.GenericTypeParameterBuilder" /> objects representing the type parameters, if the method is generic, or <see langword="null" /> if the method is not generic.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="805d1-249">Die Typparameter einer generischen Methode werden auch von der <xref:System.Reflection.Emit.MethodBuilder.DefineGenericParameters%2A> Methode zurückgegeben, die verwendet wird, um Sie zu definieren.</span><span class="sxs-lookup"><span data-stu-id="805d1-249">The type parameters of a generic method also are returned by the <xref:System.Reflection.Emit.MethodBuilder.DefineGenericParameters%2A> method that is used to define them.</span></span>  
  
 <span data-ttu-id="805d1-250">Weitere Informationen finden Sie unter <xref:System.Reflection.MethodBase.IsGenericMethod%2A?displayProperty=nameWithType> und <xref:System.Reflection.MethodInfo.GetGenericArguments%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="805d1-250">For more information, see <xref:System.Reflection.MethodBase.IsGenericMethod%2A?displayProperty=nameWithType> and <xref:System.Reflection.MethodInfo.GetGenericArguments%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="805d1-251">Weitere Informationen zu generischen Typen finden Sie unter <xref:System.Type.IsGenericType%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="805d1-251">For information on generic types, see <xref:System.Type.IsGenericType%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Reflection.MethodInfo" />
        <altmember cref="P:System.Type.IsGenericType" />
        <related type="Article" href="~/docs/framework/reflection-and-codedom/how-to-define-a-generic-method-with-reflection-emit.md"><span data-ttu-id="805d1-252">Gewusst wie: Definieren einer generischen Methode mit Reflektionsausgabe</span><span class="sxs-lookup"><span data-stu-id="805d1-252">How to: Define a Generic Method with Reflection Emit</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetGenericMethodDefinition">
      <MemberSignature Language="C#" Value="public override System.Reflection.MethodInfo GetGenericMethodDefinition ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Reflection.MethodInfo GetGenericMethodDefinition() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.MethodBuilder.GetGenericMethodDefinition" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetGenericMethodDefinition () As MethodInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Reflection::MethodInfo ^ GetGenericMethodDefinition();" />
      <MemberSignature Language="F#" Value="override this.GetGenericMethodDefinition : unit -&gt; System.Reflection.MethodInfo" Usage="methodBuilder.GetGenericMethodDefinition " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="805d1-253">Gibt diese Methode zurück.</span><span class="sxs-lookup"><span data-stu-id="805d1-253">Returns this method.</span></span></summary>
        <returns><span data-ttu-id="805d1-254">Die aktuelle Instanz von <see cref="T:System.Reflection.Emit.MethodBuilder" />.</span><span class="sxs-lookup"><span data-stu-id="805d1-254">The current instance of <see cref="T:System.Reflection.Emit.MethodBuilder" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="805d1-255">Eine <xref:System.Reflection.Emit.MethodBuilder> kann nicht verwendet werden, um eine konstruierte generische Methode direkt auszugeben.</span><span class="sxs-lookup"><span data-stu-id="805d1-255">A <xref:System.Reflection.Emit.MethodBuilder> cannot be used to emit a constructed generic method directly.</span></span> <span data-ttu-id="805d1-256">Die ausgegebene Methode ist eine generische Methoden Definition.</span><span class="sxs-lookup"><span data-stu-id="805d1-256">The emitted method is a generic method definition.</span></span>  
  
 <span data-ttu-id="805d1-257">Weitere Informationen finden Sie unter <xref:System.Reflection.MethodBase.IsGenericMethod%2A?displayProperty=nameWithType> und <xref:System.Reflection.MethodInfo.GetGenericMethodDefinition%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="805d1-257">For more information, see <xref:System.Reflection.MethodBase.IsGenericMethod%2A?displayProperty=nameWithType> and <xref:System.Reflection.MethodInfo.GetGenericMethodDefinition%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="805d1-258">Weitere Informationen zu generischen Typen finden Sie unter <xref:System.Type.IsGenericType%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="805d1-258">For information on generic types, see <xref:System.Type.IsGenericType%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="805d1-259">Die aktuelle Methode ist keine generische Methode.</span><span class="sxs-lookup"><span data-stu-id="805d1-259">The current method is not generic.</span></span> <span data-ttu-id="805d1-260">Das bedeutet, dass die <see cref="P:System.Reflection.Emit.MethodBuilder.IsGenericMethod" />-Eigenschaft <see langword="false" /> zurückgibt.</span><span class="sxs-lookup"><span data-stu-id="805d1-260">That is, the <see cref="P:System.Reflection.Emit.MethodBuilder.IsGenericMethod" /> property returns <see langword="false" />.</span></span></exception>
        <altmember cref="T:System.Reflection.MethodInfo" />
        <altmember cref="P:System.Type.IsGenericType" />
        <related type="Article" href="~/docs/framework/reflection-and-codedom/how-to-define-a-generic-method-with-reflection-emit.md"><span data-ttu-id="805d1-261">Gewusst wie: Definieren einer generischen Methode mit Reflektionsausgabe</span><span class="sxs-lookup"><span data-stu-id="805d1-261">How to: Define a Generic Method with Reflection Emit</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.MethodBuilder.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="methodBuilder.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="805d1-262">Ruft den Hashcode für diese Methode ab.</span><span class="sxs-lookup"><span data-stu-id="805d1-262">Gets the hash code for this method.</span></span></summary>
        <returns><span data-ttu-id="805d1-263">Der Hashcode für diese Methode.</span><span class="sxs-lookup"><span data-stu-id="805d1-263">The hash code for this method.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetILGenerator">
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="805d1-264">Gibt einen <see langword="ILGenerator" /> für diese Methode zurück.</span><span class="sxs-lookup"><span data-stu-id="805d1-264">Returns an <see langword="ILGenerator" /> for this method.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetILGenerator">
      <MemberSignature Language="C#" Value="public System.Reflection.Emit.ILGenerator GetILGenerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Reflection.Emit.ILGenerator GetILGenerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.MethodBuilder.GetILGenerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetILGenerator () As ILGenerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Emit::ILGenerator ^ GetILGenerator();" />
      <MemberSignature Language="F#" Value="member this.GetILGenerator : unit -&gt; System.Reflection.Emit.ILGenerator" Usage="methodBuilder.GetILGenerator " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.ILGenerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="805d1-265">Gibt einen <see langword="ILGenerator" /> mit der standardmäßigen MSIL-Streamgröße (Microsoft Intermediate Language) von 64 Bytes für diese Methode zurück.</span><span class="sxs-lookup"><span data-stu-id="805d1-265">Returns an <see langword="ILGenerator" /> for this method with a default Microsoft intermediate language (MSIL) stream size of 64 bytes.</span></span></summary>
        <returns><span data-ttu-id="805d1-266">Gibt ein <see langword="ILGenerator" />-Objekt für diese Methode zurück.</span><span class="sxs-lookup"><span data-stu-id="805d1-266">Returns an <see langword="ILGenerator" /> object for this method.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="805d1-267">Das folgende Codebeispiel veranschaulicht die kontextabhängige Verwendung der `GetILGenerator`-Methode, die Erstellung und Ausgabe einer dynamischen Assembly, die das Punktprodukt von zwei Punkten im 3D-Raum berechnet.</span><span class="sxs-lookup"><span data-stu-id="805d1-267">The code sample below demonstrates the contextual usage of the `GetILGenerator` method, creating and emitting a dynamic assembly that will calculate the dot product of two points in 3D space.</span></span>  
  
 [!code-cpp[System.Reflection.Emit ILGenerator Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Reflection.Emit ILGenerator Example/CPP/source.cpp#1)]
 [!code-csharp[System.Reflection.Emit ILGenerator Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Reflection.Emit ILGenerator Example/CS/source.cs#1)]
 [!code-vb[System.Reflection.Emit ILGenerator Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Reflection.Emit ILGenerator Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="805d1-268">Die Methode sollte beispielsweise aufgrund ihrer <see cref="T:System.Reflection.MethodAttributes" />- oder <see cref="T:System.Reflection.MethodImplAttributes" />-Flags keinen Text enthalten, weil sie das <see cref="F:System.Reflection.MethodAttributes.PinvokeImpl" />-Flag aufweist.</span><span class="sxs-lookup"><span data-stu-id="805d1-268">The method should not have a body because of its <see cref="T:System.Reflection.MethodAttributes" /> or <see cref="T:System.Reflection.MethodImplAttributes" /> flags, for example because it has the <see cref="F:System.Reflection.MethodAttributes.PinvokeImpl" /> flag.</span></span>  
  
<span data-ttu-id="805d1-269">Oder</span><span class="sxs-lookup"><span data-stu-id="805d1-269">-or-</span></span> 
<span data-ttu-id="805d1-270">Es handelt sich um eine generische Methode, aber nicht um eine generische Methodendefinition.</span><span class="sxs-lookup"><span data-stu-id="805d1-270">The method is a generic method, but not a generic method definition.</span></span> <span data-ttu-id="805d1-271">Das bedeutet, die <see cref="P:System.Reflection.Emit.MethodBuilder.IsGenericMethod" />-Eigenschaft ist <see langword="true" />, aber die <see cref="P:System.Reflection.Emit.MethodBuilder.IsGenericMethodDefinition" />-Eigenschaft ist <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="805d1-271">That is, the <see cref="P:System.Reflection.Emit.MethodBuilder.IsGenericMethod" /> property is <see langword="true" />, but the <see cref="P:System.Reflection.Emit.MethodBuilder.IsGenericMethodDefinition" /> property is <see langword="false" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetILGenerator">
      <MemberSignature Language="C#" Value="public System.Reflection.Emit.ILGenerator GetILGenerator (int size);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Reflection.Emit.ILGenerator GetILGenerator(int32 size) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.MethodBuilder.GetILGenerator(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetILGenerator (size As Integer) As ILGenerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Emit::ILGenerator ^ GetILGenerator(int size);" />
      <MemberSignature Language="F#" Value="member this.GetILGenerator : int -&gt; System.Reflection.Emit.ILGenerator" Usage="methodBuilder.GetILGenerator size" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.ILGenerator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="size" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="size"><span data-ttu-id="805d1-272">Die Größe des MSIL-Streams in Bytes.</span><span class="sxs-lookup"><span data-stu-id="805d1-272">The size of the MSIL stream, in bytes.</span></span></param>
        <summary><span data-ttu-id="805d1-273">Gibt einen <see langword="ILGenerator" /> mit der angegebenen MSIL-Streamgröße (Microsoft Intermediate Language) für diese Methode zurück.</span><span class="sxs-lookup"><span data-stu-id="805d1-273">Returns an <see langword="ILGenerator" /> for this method with the specified Microsoft intermediate language (MSIL) stream size.</span></span></summary>
        <returns><span data-ttu-id="805d1-274">Gibt ein <see langword="ILGenerator" />-Objekt für diese Methode zurück.</span><span class="sxs-lookup"><span data-stu-id="805d1-274">Returns an <see langword="ILGenerator" /> object for this method.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="805d1-275">Das folgende Codebeispiel veranschaulicht die kontextabhängige Verwendung der `GetILGenerator`-Methode, die Erstellung und Ausgabe einer dynamischen Assembly, die das Punktprodukt von zwei Punkten im 3D-Raum berechnet.</span><span class="sxs-lookup"><span data-stu-id="805d1-275">The code sample below demonstrates the contextual usage of the `GetILGenerator` method, creating and emitting a dynamic assembly that will calculate the dot product of two points in 3D space.</span></span>  
  
 [!code-cpp[System.Reflection.Emit ILGenerator Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Reflection.Emit ILGenerator Example/CPP/source.cpp#1)]
 [!code-csharp[System.Reflection.Emit ILGenerator Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Reflection.Emit ILGenerator Example/CS/source.cs#1)]
 [!code-vb[System.Reflection.Emit ILGenerator Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Reflection.Emit ILGenerator Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="805d1-276">Die Methode sollte beispielsweise aufgrund ihrer <see cref="T:System.Reflection.MethodAttributes" />- oder <see cref="T:System.Reflection.MethodImplAttributes" />-Flags keinen Text enthalten, weil sie das <see cref="F:System.Reflection.MethodAttributes.PinvokeImpl" />-Flag aufweist.</span><span class="sxs-lookup"><span data-stu-id="805d1-276">The method should not have a body because of its <see cref="T:System.Reflection.MethodAttributes" /> or <see cref="T:System.Reflection.MethodImplAttributes" /> flags, for example because it has the <see cref="F:System.Reflection.MethodAttributes.PinvokeImpl" /> flag.</span></span>  
  
<span data-ttu-id="805d1-277">Oder</span><span class="sxs-lookup"><span data-stu-id="805d1-277">-or-</span></span> 
<span data-ttu-id="805d1-278">Es handelt sich um eine generische Methode, aber nicht um eine generische Methodendefinition.</span><span class="sxs-lookup"><span data-stu-id="805d1-278">The method is a generic method, but not a generic method definition.</span></span> <span data-ttu-id="805d1-279">Das bedeutet, die <see cref="P:System.Reflection.Emit.MethodBuilder.IsGenericMethod" />-Eigenschaft ist <see langword="true" />, aber die <see cref="P:System.Reflection.Emit.MethodBuilder.IsGenericMethodDefinition" />-Eigenschaft ist <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="805d1-279">That is, the <see cref="P:System.Reflection.Emit.MethodBuilder.IsGenericMethod" /> property is <see langword="true" />, but the <see cref="P:System.Reflection.Emit.MethodBuilder.IsGenericMethodDefinition" /> property is <see langword="false" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetMethodImplementationFlags">
      <MemberSignature Language="C#" Value="public override System.Reflection.MethodImplAttributes GetMethodImplementationFlags ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.Reflection.MethodImplAttributes GetMethodImplementationFlags() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.MethodBuilder.GetMethodImplementationFlags" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetMethodImplementationFlags () As MethodImplAttributes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Reflection::MethodImplAttributes GetMethodImplementationFlags();" />
      <MemberSignature Language="F#" Value="override this.GetMethodImplementationFlags : unit -&gt; System.Reflection.MethodImplAttributes" Usage="methodBuilder.GetMethodImplementationFlags " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodImplAttributes</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="805d1-280">Gibt die Implementierungsflags für die Methode zurück.</span><span class="sxs-lookup"><span data-stu-id="805d1-280">Returns the implementation flags for the method.</span></span></summary>
        <returns><span data-ttu-id="805d1-281">Gibt die Implementierungsflags für die Methode zurück.</span><span class="sxs-lookup"><span data-stu-id="805d1-281">Returns the implementation flags for the method.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetModule">
      <MemberSignature Language="C#" Value="public System.Reflection.Module GetModule ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Reflection.Module GetModule() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.MethodBuilder.GetModule" />
      <MemberSignature Language="VB.NET" Value="Public Function GetModule () As Module" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Module ^ GetModule();" />
      <MemberSignature Language="F#" Value="member this.GetModule : unit -&gt; System.Reflection.Module" Usage="methodBuilder.GetModule " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Module</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="805d1-282">Gibt einen Verweis auf das Modul zurück, das diese Methode enthält.</span><span class="sxs-lookup"><span data-stu-id="805d1-282">Returns a reference to the module that contains this method.</span></span></summary>
        <returns><span data-ttu-id="805d1-283">Gibt einen Verweis auf das Modul zurück, das diese Methode enthält.</span><span class="sxs-lookup"><span data-stu-id="805d1-283">Returns a reference to the module that contains this method.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="805d1-284">Der folgende Beispielcode veranschaulicht die Verwendung der `GetModule`-Methode zum Abrufen von Informationen zu einem dynamisch generierten Modul.</span><span class="sxs-lookup"><span data-stu-id="805d1-284">The sample code below illustrates the usage of the `GetModule` method to retrieve information about a dynamically-generated module.</span></span>  
  
 [!code-cpp[System.Reflection.Emit.MethodBuilder.GetModule#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Reflection.Emit.MethodBuilder.GetModule/CPP/source3.cpp#1)]
 [!code-csharp[System.Reflection.Emit.MethodBuilder.GetModule#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Reflection.Emit.MethodBuilder.GetModule/CS/source3.cs#1)]
 [!code-vb[System.Reflection.Emit.MethodBuilder.GetModule#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Reflection.Emit.MethodBuilder.GetModule/VB/source3.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetParameters">
      <MemberSignature Language="C#" Value="public override System.Reflection.ParameterInfo[] GetParameters ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Reflection.ParameterInfo[] GetParameters() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.MethodBuilder.GetParameters" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetParameters () As ParameterInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Reflection::ParameterInfo ^&gt; ^ GetParameters();" />
      <MemberSignature Language="F#" Value="override this.GetParameters : unit -&gt; System.Reflection.ParameterInfo[]" Usage="methodBuilder.GetParameters " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.ParameterInfo[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="805d1-285">Gibt die Parameter dieser Methode zurück.</span><span class="sxs-lookup"><span data-stu-id="805d1-285">Returns the parameters of this method.</span></span></summary>
        <returns><span data-ttu-id="805d1-286">Ein Array von <see langword="ParameterInfo" />-Objekten, das die Parameter der Methode darstellt.</span><span class="sxs-lookup"><span data-stu-id="805d1-286">An array of <see langword="ParameterInfo" /> objects that represent the parameters of the method.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="805d1-287">Das folgende Codebeispiel veranschaulicht die Verwendung von `GetParameters`, um Informationen zu den Parametern zu ermitteln, die an eine dynamisch generierte Methode weitergegeben wurden.</span><span class="sxs-lookup"><span data-stu-id="805d1-287">The code sample below illustrates the use of `GetParameters` to discover information on the parameters passed to a dynamically-generated method.</span></span>  
  
 [!code-cpp[System.Reflection.Emit.MethodBuilder.GetParameters Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Reflection.Emit.MethodBuilder.GetParameters Example/CPP/source4.cpp#1)]
 [!code-csharp[System.Reflection.Emit.MethodBuilder.GetParameters Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Reflection.Emit.MethodBuilder.GetParameters Example/CS/source4.cs#1)]
 [!code-vb[System.Reflection.Emit.MethodBuilder.GetParameters Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Reflection.Emit.MethodBuilder.GetParameters Example/VB/source4.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="805d1-288">Diese Methode wird zurzeit nicht unterstützt.</span><span class="sxs-lookup"><span data-stu-id="805d1-288">This method is not currently supported.</span></span> <span data-ttu-id="805d1-289">Rufen Sie die Methode mithilfe von <see cref="M:System.Type.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])" /> ab, und rufen Sie <see langword="GetParameters" /> für das zurückgegebene <see cref="T:System.Reflection.MethodInfo" />-Objekt auf.</span><span class="sxs-lookup"><span data-stu-id="805d1-289">Retrieve the method using <see cref="M:System.Type.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])" /> and call <see langword="GetParameters" /> on the returned <see cref="T:System.Reflection.MethodInfo" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetToken">
      <MemberSignature Language="C#" Value="public System.Reflection.Emit.MethodToken GetToken ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Reflection.Emit.MethodToken GetToken() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.MethodBuilder.GetToken" />
      <MemberSignature Language="VB.NET" Value="Public Function GetToken () As MethodToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Emit::MethodToken GetToken();" />
      <MemberSignature Language="F#" Value="member this.GetToken : unit -&gt; System.Reflection.Emit.MethodToken" Usage="methodBuilder.GetToken " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.MethodToken</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="805d1-290">Gibt das <see langword="MethodToken" /> zurück, das das Token für diese Methode darstellt.</span><span class="sxs-lookup"><span data-stu-id="805d1-290">Returns the <see langword="MethodToken" /> that represents the token for this method.</span></span></summary>
        <returns><span data-ttu-id="805d1-291">Gibt das <see langword="MethodToken" /> dieser Methode zurück.</span><span class="sxs-lookup"><span data-stu-id="805d1-291">Returns the <see langword="MethodToken" /> of this method.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InitLocals">
      <MemberSignature Language="C#" Value="public bool InitLocals { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool InitLocals" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.MethodBuilder.InitLocals" />
      <MemberSignature Language="VB.NET" Value="Public Property InitLocals As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool InitLocals { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.InitLocals : bool with get, set" Usage="System.Reflection.Emit.MethodBuilder.InitLocals" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="805d1-292">Ruft einen booleschen Wert ab, der angibt, ob die lokalen Variablen in dieser Methode mit 0 (null) initialisiert werden, oder legt diesen Wert fest.</span><span class="sxs-lookup"><span data-stu-id="805d1-292">Gets or sets a Boolean value that specifies whether the local variables in this method are zero initialized.</span></span> <span data-ttu-id="805d1-293">Der Standardwert dieser Eigenschaft ist <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="805d1-293">The default value of this property is <see langword="true" />.</span></span></summary>
        <value><span data-ttu-id="805d1-294"><see langword="true" />, wenn die lokalen Variablen in der Methode mit 0 (null) initialisiert werden sollen, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="805d1-294"><see langword="true" /> if the local variables in this method should be zero initialized; otherwise <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="805d1-295">Wenn diese Eigenschaft auf `true`festgelegt ist, schließt die ausgegebene MSIL die Initialisierung lokaler Variablen ein.</span><span class="sxs-lookup"><span data-stu-id="805d1-295">If this property is set to `true`, the emitted MSIL includes initialization of local variables.</span></span> <span data-ttu-id="805d1-296">Wenn Sie auf `false`festgelegt ist, werden lokale Variablen nicht initialisiert, und der generierte Code ist nicht überprüfbar.</span><span class="sxs-lookup"><span data-stu-id="805d1-296">If it is set to `false`, local variables are not initialized and the generated code is unverifiable.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="805d1-297">Für die aktuelle Methode ist die <see cref="P:System.Reflection.Emit.MethodBuilder.IsGenericMethod" />-Eigenschaft <see langword="true" />, aber die <see cref="P:System.Reflection.Emit.MethodBuilder.IsGenericMethodDefinition" />-Eigenschaft ist <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="805d1-297">For the current method, the <see cref="P:System.Reflection.Emit.MethodBuilder.IsGenericMethod" /> property is <see langword="true" />, but the <see cref="P:System.Reflection.Emit.MethodBuilder.IsGenericMethodDefinition" /> property is <see langword="false" />.</span></span> <span data-ttu-id="805d1-298">(Abrufen oder festlegen.)</span><span class="sxs-lookup"><span data-stu-id="805d1-298">(Get or set.)</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Invoke">
      <MemberSignature Language="C#" Value="public override object Invoke (object obj, System.Reflection.BindingFlags invokeAttr, System.Reflection.Binder binder, object[] parameters, System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object Invoke(object obj, valuetype System.Reflection.BindingFlags invokeAttr, class System.Reflection.Binder binder, object[] parameters, class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.MethodBuilder.Invoke(System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Invoke (obj As Object, invokeAttr As BindingFlags, binder As Binder, parameters As Object(), culture As CultureInfo) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ Invoke(System::Object ^ obj, System::Reflection::BindingFlags invokeAttr, System::Reflection::Binder ^ binder, cli::array &lt;System::Object ^&gt; ^ parameters, System::Globalization::CultureInfo ^ culture);" />
      <MemberSignature Language="F#" Value="override this.Invoke : obj * System.Reflection.BindingFlags * System.Reflection.Binder * obj[] * System.Globalization.CultureInfo -&gt; obj" Usage="methodBuilder.Invoke (obj, invokeAttr, binder, parameters, culture)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" Index="0" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.1;xamarinandroid-7.1;xamarinmac-3.0" />
        <Parameter Name="invokeAttr" Type="System.Reflection.BindingFlags" Index="1" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.1;xamarinandroid-7.1;xamarinmac-3.0" />
        <Parameter Name="binder" Type="System.Reflection.Binder" Index="2" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.1;xamarinandroid-7.1;xamarinmac-3.0" />
        <Parameter Name="parameters" Type="System.Object[]" Index="3" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.1;xamarinandroid-7.1;xamarinmac-3.0" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" Index="4" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.1;xamarinandroid-7.1;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="805d1-299">Das Objekt, für das die angegebene Methode aufgerufen werden soll.</span><span class="sxs-lookup"><span data-stu-id="805d1-299">The object on which to invoke the specified method.</span></span> <span data-ttu-id="805d1-300">Wenn die Methode statisch ist, wird dieser Parameter ignoriert.</span><span class="sxs-lookup"><span data-stu-id="805d1-300">If the method is static, this parameter is ignored.</span></span></param>
        <param name="invokeAttr"><span data-ttu-id="805d1-301">Dies muss ein Bitflag aus <see cref="T:System.Reflection.BindingFlags" /> sein: <see langword="InvokeMethod" />, <see langword="NonPublic" /> usw.</span><span class="sxs-lookup"><span data-stu-id="805d1-301">This must be a bit flag from <see cref="T:System.Reflection.BindingFlags" /> : <see langword="InvokeMethod" />, <see langword="NonPublic" />, and so on.</span></span></param>
        <param name="binder"><span data-ttu-id="805d1-302">Ein Objekt, das die Bindung, die Umwandlung von Argumenttypen, das Aufrufen von Membern und das Abrufen von MemberInfo-Objekten über Reflektion ermöglicht.</span><span class="sxs-lookup"><span data-stu-id="805d1-302">An object that enables the binding, coercion of argument types, invocation of members, and retrieval of MemberInfo objects via reflection.</span></span> <span data-ttu-id="805d1-303">Wenn „binder“ gleich <see langword="null" /> ist, wird der Standardbinder verwendet.</span><span class="sxs-lookup"><span data-stu-id="805d1-303">If binder is <see langword="null" />, the default binder is used.</span></span> <span data-ttu-id="805d1-304">Weitere Details finden Sie unter <see cref="T:System.Reflection.Binder" />.</span><span class="sxs-lookup"><span data-stu-id="805d1-304">For more details, see <see cref="T:System.Reflection.Binder" />.</span></span></param>
        <param name="parameters"><span data-ttu-id="805d1-305">Eine Argumentliste.</span><span class="sxs-lookup"><span data-stu-id="805d1-305">An argument list.</span></span> <span data-ttu-id="805d1-306">Diese ist ein Array von Argumenten, die hinsichtlich Anzahl, Reihenfolge und Typ mit den Parametern der aufzurufenden Methode identisch sind.</span><span class="sxs-lookup"><span data-stu-id="805d1-306">This is an array of arguments with the same number, order, and type as the parameters of the method to be invoked.</span></span> <span data-ttu-id="805d1-307">Wenn keine Parameter vorhanden sind, muss dies gleich <see langword="null" /> sein.</span><span class="sxs-lookup"><span data-stu-id="805d1-307">If there are no parameters this should be <see langword="null" />.</span></span></param>
        <param name="culture"><span data-ttu-id="805d1-308">Eine Instanz von <see cref="T:System.Globalization.CultureInfo" /> für die Steuerung der Umwandlung von Typen.</span><span class="sxs-lookup"><span data-stu-id="805d1-308">An instance of <see cref="T:System.Globalization.CultureInfo" /> used to govern the coercion of types.</span></span> <span data-ttu-id="805d1-309">Ist diese gleich NULL, wird das <see cref="T:System.Globalization.CultureInfo" />-Objekt des aktuellen Threads verwendet.</span><span class="sxs-lookup"><span data-stu-id="805d1-309">If this is null, the <see cref="T:System.Globalization.CultureInfo" /> for the current thread is used.</span></span> <span data-ttu-id="805d1-310">(Dies ist z. B. erforderlich, um ein <see cref="T:System.String" />-Objekt, das 1000 darstellt, in einen <see cref="T:System.Double" />-Wert zu konvertieren, da 1000 in verschiedenen Kulturen unterschiedlich dargestellt wird.)</span><span class="sxs-lookup"><span data-stu-id="805d1-310">(Note that this is necessary to, for example, convert a <see cref="T:System.String" /> that represents 1000 to a <see cref="T:System.Double" /> value, since 1000 is represented differently by different cultures.)</span></span></param>
        <summary><span data-ttu-id="805d1-311">Ruft dynamisch und entsprechend den Einschränkungen des angegebenen Binders die Methode auf, die durch diese Instanz für das angegebene Objekt reflektiert wird. Übergibt dabei die angegebenen Parameter.</span><span class="sxs-lookup"><span data-stu-id="805d1-311">Dynamically invokes the method reflected by this instance on the given object, passing along the specified parameters, and under the constraints of the given binder.</span></span></summary>
        <returns><span data-ttu-id="805d1-312">Gibt ein Objekt zurück, das den Rückgabewert der aufgerufenen Methode enthält.</span><span class="sxs-lookup"><span data-stu-id="805d1-312">Returns an object containing the return value of the invoked method.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="805d1-313">Wenn die Methode statisch ist, wird der `obj`-Parameter ignoriert.</span><span class="sxs-lookup"><span data-stu-id="805d1-313">If the method is static, the `obj` parameter is ignored.</span></span> <span data-ttu-id="805d1-314">Bei nicht statischen Methoden sollten `obj` eine Instanz einer Klasse sein, die die Methode erbt oder deklariert und denselben Typ wie diese Klasse aufweisen muss.</span><span class="sxs-lookup"><span data-stu-id="805d1-314">For non-static methods, `obj` should be an instance of a class that inherits or declares the method and must be the same type as this class.</span></span> <span data-ttu-id="805d1-315">Wenn die Methode keine Parameter hat, sollte der Wert `parameters` `null`sein.</span><span class="sxs-lookup"><span data-stu-id="805d1-315">If the method has no parameters, the value of `parameters` should be `null`.</span></span> <span data-ttu-id="805d1-316">Andernfalls sollten die Anzahl, der Typ und die Reihenfolge der Elemente im Parameter Array mit der Anzahl, dem Typ und der Reihenfolge der Parameter für die von dieser Instanz reflektierte Methode identisch sein.</span><span class="sxs-lookup"><span data-stu-id="805d1-316">Otherwise the number, type, and order of elements in the parameters array should be identical to the number, type, and order of parameters for the method reflected by this instance.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="805d1-317">Zugriffs Einschränkungen werden für voll vertrauenswürdigen Code ignoriert.</span><span class="sxs-lookup"><span data-stu-id="805d1-317">Access restrictions are ignored for fully-trusted code.</span></span> <span data-ttu-id="805d1-318">Das heißt, Private Konstruktoren, Methoden, Felder und Eigenschaften können aufgerufen und mithilfe von Reflektion aufgerufen werden, wenn der Code vollständig vertrauenswürdig ist.</span><span class="sxs-lookup"><span data-stu-id="805d1-318">That is, private constructors, methods, fields, and properties can be accessed and invoked using Reflection whenever the code is fully-trusted.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="805d1-319">Diese Methode wird zurzeit nicht unterstützt.</span><span class="sxs-lookup"><span data-stu-id="805d1-319">This method is not currently supported.</span></span> <span data-ttu-id="805d1-320">Rufen Sie die Methode mithilfe von <see cref="M:System.Type.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])" /> ab, und rufen Sie <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" /> für das zurückgegebene <see cref="T:System.Reflection.MethodInfo" />-Objekt auf.</span><span class="sxs-lookup"><span data-stu-id="805d1-320">Retrieve the method using <see cref="M:System.Type.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])" /> and call <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" /> on the returned <see cref="T:System.Reflection.MethodInfo" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IsConstructedGenericMethod">
      <MemberSignature Language="C#" Value="public override bool IsConstructedGenericMethod { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsConstructedGenericMethod" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.MethodBuilder.IsConstructedGenericMethod" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsConstructedGenericMethod As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsConstructedGenericMethod { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsConstructedGenericMethod : bool" Usage="System.Reflection.Emit.MethodBuilder.IsConstructedGenericMethod" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDefined">
      <MemberSignature Language="C#" Value="public override bool IsDefined (Type attributeType, bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsDefined(class System.Type attributeType, bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.MethodBuilder.IsDefined(System.Type,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsDefined (attributeType As Type, inherit As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsDefined(Type ^ attributeType, bool inherit);" />
      <MemberSignature Language="F#" Value="override this.IsDefined : Type * bool -&gt; bool" Usage="methodBuilder.IsDefined (attributeType, inherit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributeType" Type="System.Type" Index="0" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.1;xamarinandroid-7.1;xamarinmac-3.0" />
        <Parameter Name="inherit" Type="System.Boolean" Index="1" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.1;xamarinandroid-7.1;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="attributeType"><span data-ttu-id="805d1-321">Der benutzerdefinierte Attributtyp.</span><span class="sxs-lookup"><span data-stu-id="805d1-321">The custom attribute type.</span></span></param>
        <param name="inherit"><span data-ttu-id="805d1-322">Gibt an, ob die Vererbungskette dieses Members nach den benutzerdefinierten Attributen durchsucht werden soll.</span><span class="sxs-lookup"><span data-stu-id="805d1-322">Specifies whether to search this member's inheritance chain to find the custom attributes.</span></span></param>
        <summary><span data-ttu-id="805d1-323">Überprüft, ob der Typ des angegebenen benutzerdefinierten Attributs definiert ist.</span><span class="sxs-lookup"><span data-stu-id="805d1-323">Checks if the specified custom attribute type is defined.</span></span></summary>
        <returns><span data-ttu-id="805d1-324"><see langword="true" />, wenn der Typ des angegebenen benutzerdefinierten Attributs definiert ist, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="805d1-324"><see langword="true" /> if the specified custom attribute type is defined; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="805d1-325">Diese Methode wird zurzeit nicht unterstützt.</span><span class="sxs-lookup"><span data-stu-id="805d1-325">This method is not currently supported.</span></span> <span data-ttu-id="805d1-326">Rufen Sie die Methode mithilfe von <see cref="M:System.Type.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])" /> ab, und rufen Sie <see cref="M:System.Reflection.MemberInfo.IsDefined(System.Type,System.Boolean)" /> für das zurückgegebene <see cref="T:System.Reflection.MethodInfo" />-Objekt auf.</span><span class="sxs-lookup"><span data-stu-id="805d1-326">Retrieve the method using <see cref="M:System.Type.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])" /> and call <see cref="M:System.Reflection.MemberInfo.IsDefined(System.Type,System.Boolean)" /> on the returned <see cref="T:System.Reflection.MethodInfo" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IsGenericMethod">
      <MemberSignature Language="C#" Value="public override bool IsGenericMethod { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsGenericMethod" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.MethodBuilder.IsGenericMethod" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsGenericMethod As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsGenericMethod { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsGenericMethod : bool" Usage="System.Reflection.Emit.MethodBuilder.IsGenericMethod" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="805d1-327">Ruft einen Wert ab, der angibt, ob die Methode eine generische Methode ist.</span><span class="sxs-lookup"><span data-stu-id="805d1-327">Gets a value indicating whether the method is a generic method.</span></span></summary>
        <value><span data-ttu-id="805d1-328"><see langword="true" />, wenn die Methode generisch ist, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="805d1-328"><see langword="true" /> if the method is generic; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="805d1-329">Eine Methode ist generisch, wenn Sie über Typparameter verfügt.</span><span class="sxs-lookup"><span data-stu-id="805d1-329">A method is generic if it has type parameters.</span></span> <span data-ttu-id="805d1-330">Sie können eine Methode generisch machen, indem Sie die <xref:System.Reflection.Emit.MethodBuilder.DefineGenericParameters%2A>-Methode aufrufen, um Typparameter hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="805d1-330">You can make a method generic by calling the <xref:System.Reflection.Emit.MethodBuilder.DefineGenericParameters%2A> method to add type parameters.</span></span> <span data-ttu-id="805d1-331">Diese Änderung kann nicht rückgängig gemacht werden.</span><span class="sxs-lookup"><span data-stu-id="805d1-331">This change cannot be reversed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="805d1-332">Im folgenden Codebeispiel wird der Status einer Methode angezeigt.</span><span class="sxs-lookup"><span data-stu-id="805d1-332">The following code example displays the status of a method.</span></span> <span data-ttu-id="805d1-333">Dieser Code ist Teil eines größeren Beispiels, das für die <xref:System.Reflection.Emit.MethodBuilder.DefineGenericParameters%2A>-Methode bereitgestellt wird.</span><span class="sxs-lookup"><span data-stu-id="805d1-333">This code is part of a larger example provided for the <xref:System.Reflection.Emit.MethodBuilder.DefineGenericParameters%2A> method.</span></span>  
  
 [!code-cpp[GenericMethodBuilder#7](~/samples/snippets/cpp/VS_Snippets_CLR/GenericMethodBuilder/cpp/source.cpp#7)]
 [!code-csharp[GenericMethodBuilder#7](~/samples/snippets/csharp/VS_Snippets_CLR/GenericMethodBuilder/CS/source.cs#7)]
 [!code-vb[GenericMethodBuilder#7](~/samples/snippets/visualbasic/VS_Snippets_CLR/GenericMethodBuilder/VB/source.vb#7)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/reflection-and-codedom/how-to-define-a-generic-method-with-reflection-emit.md"><span data-ttu-id="805d1-334">Gewusst wie: Definieren einer generischen Methode mit Reflektionsausgabe</span><span class="sxs-lookup"><span data-stu-id="805d1-334">How to: Define a Generic Method with Reflection Emit</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="IsGenericMethodDefinition">
      <MemberSignature Language="C#" Value="public override bool IsGenericMethodDefinition { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsGenericMethodDefinition" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.MethodBuilder.IsGenericMethodDefinition" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsGenericMethodDefinition As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsGenericMethodDefinition { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsGenericMethodDefinition : bool" Usage="System.Reflection.Emit.MethodBuilder.IsGenericMethodDefinition" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="805d1-335">Ruft einen Wert ab, der angibt, ob das aktuelle <see cref="T:System.Reflection.Emit.MethodBuilder" />-Objekt die Definition einer generischen Methode darstellt.</span><span class="sxs-lookup"><span data-stu-id="805d1-335">Gets a value indicating whether the current <see cref="T:System.Reflection.Emit.MethodBuilder" /> object represents the definition of a generic method.</span></span></summary>
        <value><span data-ttu-id="805d1-336"><see langword="true" />, wenn das aktuelle <see cref="T:System.Reflection.Emit.MethodBuilder" />-Objekt die Definition einer generischen Methode darstellt, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="805d1-336"><see langword="true" /> if the current <see cref="T:System.Reflection.Emit.MethodBuilder" /> object represents the definition of a generic method; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="805d1-337">Eine <xref:System.Reflection.Emit.MethodBuilder> kann nur zum Erstellen von generischen Methoden Definitionen verwendet werden. Sie kann nicht zum direkten Erstellen einer konstruierten generischen Methode verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="805d1-337">A <xref:System.Reflection.Emit.MethodBuilder> can only be used to create generic method definitions; it cannot be used to create a constructed generic method directly.</span></span> <span data-ttu-id="805d1-338">Eine Unterklasse von <xref:System.Reflection.Emit.MethodBuilder> kann jedoch eine konstruierte generische Methode darstellen.</span><span class="sxs-lookup"><span data-stu-id="805d1-338">However, a subclass of <xref:System.Reflection.Emit.MethodBuilder> might represent a constructed generic method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="805d1-339">Im folgenden Codebeispiel wird der Status einer Methode angezeigt.</span><span class="sxs-lookup"><span data-stu-id="805d1-339">The following code example displays the status of a method.</span></span> <span data-ttu-id="805d1-340">Dieser Code ist Teil eines größeren Beispiels, das für die <xref:System.Reflection.Emit.MethodBuilder.DefineGenericParameters%2A>-Methode bereitgestellt wird.</span><span class="sxs-lookup"><span data-stu-id="805d1-340">This code is part of a larger example provided for the <xref:System.Reflection.Emit.MethodBuilder.DefineGenericParameters%2A> method.</span></span>  
  
 [!code-cpp[GenericMethodBuilder#7](~/samples/snippets/cpp/VS_Snippets_CLR/GenericMethodBuilder/cpp/source.cpp#7)]
 [!code-csharp[GenericMethodBuilder#7](~/samples/snippets/csharp/VS_Snippets_CLR/GenericMethodBuilder/CS/source.cs#7)]
 [!code-vb[GenericMethodBuilder#7](~/samples/snippets/visualbasic/VS_Snippets_CLR/GenericMethodBuilder/VB/source.vb#7)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/reflection-and-codedom/how-to-define-a-generic-method-with-reflection-emit.md"><span data-ttu-id="805d1-341">Gewusst wie: Definieren einer generischen Methode mit Reflektionsausgabe</span><span class="sxs-lookup"><span data-stu-id="805d1-341">How to: Define a Generic Method with Reflection Emit</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="IsSecurityCritical">
      <MemberSignature Language="C#" Value="public override bool IsSecurityCritical { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSecurityCritical" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.MethodBuilder.IsSecurityCritical" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsSecurityCritical As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsSecurityCritical { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsSecurityCritical : bool" Usage="System.Reflection.Emit.MethodBuilder.IsSecurityCritical" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="805d1-342">Löst in allen Fällen eine <see cref="T:System.NotSupportedException" /> aus.</span><span class="sxs-lookup"><span data-stu-id="805d1-342">Throws a <see cref="T:System.NotSupportedException" /> in all cases.</span></span></summary>
        <value><span data-ttu-id="805d1-343">Löst in allen Fällen eine <see cref="T:System.NotSupportedException" /> aus.</span><span class="sxs-lookup"><span data-stu-id="805d1-343">Throws a <see cref="T:System.NotSupportedException" /> in all cases.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="805d1-344">Um zu ermitteln, ob eine Methode in einer dynamischen Assembly sicherheitskritisch ist, vervollständigen Sie den-Typ durch Aufrufen von <xref:System.Reflection.Emit.TypeBuilder.CreateType%2A?displayProperty=nameWithType>, rufen Sie die <xref:System.Type.GetMethod%2A>-Methode für den abgeschlossenen Typ auf, und rufen Sie die <xref:System.Reflection.MethodBase.IsSecurityCritical%2A>-Eigenschaft für die resultierende <xref:System.Reflection.MethodInfo>ab.</span><span class="sxs-lookup"><span data-stu-id="805d1-344">To determine whether a method in a dynamic assembly is security-critical, complete the type by calling <xref:System.Reflection.Emit.TypeBuilder.CreateType%2A?displayProperty=nameWithType>, call the <xref:System.Type.GetMethod%2A> method on the completed type, and get the <xref:System.Reflection.MethodBase.IsSecurityCritical%2A> property on the resulting <xref:System.Reflection.MethodInfo>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="805d1-345">In allen Fällen.</span><span class="sxs-lookup"><span data-stu-id="805d1-345">In all cases.</span></span> <span data-ttu-id="805d1-346">Diese Eigenschaft wird in dynamischen Assemblys nicht unterstützt.</span><span class="sxs-lookup"><span data-stu-id="805d1-346">This property is not supported in dynamic assemblies.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IsSecuritySafeCritical">
      <MemberSignature Language="C#" Value="public override bool IsSecuritySafeCritical { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSecuritySafeCritical" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.MethodBuilder.IsSecuritySafeCritical" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsSecuritySafeCritical As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsSecuritySafeCritical { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsSecuritySafeCritical : bool" Usage="System.Reflection.Emit.MethodBuilder.IsSecuritySafeCritical" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="805d1-347">Löst in allen Fällen eine <see cref="T:System.NotSupportedException" /> aus.</span><span class="sxs-lookup"><span data-stu-id="805d1-347">Throws a <see cref="T:System.NotSupportedException" /> in all cases.</span></span></summary>
        <value><span data-ttu-id="805d1-348">Löst in allen Fällen eine <see cref="T:System.NotSupportedException" /> aus.</span><span class="sxs-lookup"><span data-stu-id="805d1-348">Throws a <see cref="T:System.NotSupportedException" /> in all cases.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="805d1-349">Um zu ermitteln, ob eine Methode in einer dynamischen Assembly sicherheitsrelevant ist, vervollständigen Sie den-Typ durch Aufrufen von <xref:System.Reflection.Emit.TypeBuilder.CreateType%2A?displayProperty=nameWithType>, rufen Sie die <xref:System.Type.GetMethod%2A>-Methode für den abgeschlossenen Typ auf, und rufen Sie die <xref:System.Reflection.MethodBase.IsSecuritySafeCritical%2A>-Eigenschaft für die resultierende <xref:System.Reflection.MethodInfo>ab.</span><span class="sxs-lookup"><span data-stu-id="805d1-349">To determine whether a method in a dynamic assembly is security-safe-critical, complete the type by calling <xref:System.Reflection.Emit.TypeBuilder.CreateType%2A?displayProperty=nameWithType>, call the <xref:System.Type.GetMethod%2A> method on the completed type, and get the <xref:System.Reflection.MethodBase.IsSecuritySafeCritical%2A> property on the resulting <xref:System.Reflection.MethodInfo>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="805d1-350">In allen Fällen.</span><span class="sxs-lookup"><span data-stu-id="805d1-350">In all cases.</span></span> <span data-ttu-id="805d1-351">Diese Eigenschaft wird in dynamischen Assemblys nicht unterstützt.</span><span class="sxs-lookup"><span data-stu-id="805d1-351">This property is not supported in dynamic assemblies.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IsSecurityTransparent">
      <MemberSignature Language="C#" Value="public override bool IsSecurityTransparent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSecurityTransparent" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.MethodBuilder.IsSecurityTransparent" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsSecurityTransparent As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsSecurityTransparent { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsSecurityTransparent : bool" Usage="System.Reflection.Emit.MethodBuilder.IsSecurityTransparent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="805d1-352">Löst in allen Fällen eine <see cref="T:System.NotSupportedException" /> aus.</span><span class="sxs-lookup"><span data-stu-id="805d1-352">Throws a <see cref="T:System.NotSupportedException" /> in all cases.</span></span></summary>
        <value><span data-ttu-id="805d1-353">Löst in allen Fällen eine <see cref="T:System.NotSupportedException" /> aus.</span><span class="sxs-lookup"><span data-stu-id="805d1-353">Throws a <see cref="T:System.NotSupportedException" /> in all cases.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="805d1-354">Um zu ermitteln, ob eine Methode in einer dynamischen Assembly Sicherheits transparent ist, vervollständigen Sie den-Typ durch Aufrufen von <xref:System.Reflection.Emit.TypeBuilder.CreateType%2A?displayProperty=nameWithType>, rufen Sie die <xref:System.Type.GetMethod%2A>-Methode für den abgeschlossenen Typ auf, und rufen Sie die <xref:System.Reflection.MethodBase.IsSecurityTransparent%2A>-Eigenschaft für die resultierende <xref:System.Reflection.MethodInfo>ab.</span><span class="sxs-lookup"><span data-stu-id="805d1-354">To determine whether a method in a dynamic assembly is security-transparent, complete the type by calling <xref:System.Reflection.Emit.TypeBuilder.CreateType%2A?displayProperty=nameWithType>, call the <xref:System.Type.GetMethod%2A> method on the completed type, and get the <xref:System.Reflection.MethodBase.IsSecurityTransparent%2A> property on the resulting <xref:System.Reflection.MethodInfo>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="805d1-355">In allen Fällen.</span><span class="sxs-lookup"><span data-stu-id="805d1-355">In all cases.</span></span> <span data-ttu-id="805d1-356">Diese Eigenschaft wird in dynamischen Assemblys nicht unterstützt.</span><span class="sxs-lookup"><span data-stu-id="805d1-356">This property is not supported in dynamic assemblies.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="MakeGenericMethod">
      <MemberSignature Language="C#" Value="public override System.Reflection.MethodInfo MakeGenericMethod (params Type[] typeArguments);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Reflection.MethodInfo MakeGenericMethod(class System.Type[] typeArguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.MethodBuilder.MakeGenericMethod(System.Type[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function MakeGenericMethod (ParamArray typeArguments As Type()) As MethodInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Reflection::MethodInfo ^ MakeGenericMethod(... cli::array &lt;Type ^&gt; ^ typeArguments);" />
      <MemberSignature Language="F#" Value="override this.MakeGenericMethod : Type[] -&gt; System.Reflection.MethodInfo" Usage="methodBuilder.MakeGenericMethod typeArguments" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeArguments" Type="System.Type[]" Index="0" FrameworkAlternate="net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.1;xamarinandroid-7.1;xamarinmac-3.0">
          <Attributes>
            <Attribute FrameworkAlternate="net-5.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="typeArguments"><span data-ttu-id="805d1-357">Ein Array von <see cref="T:System.Type" />-Objekten, die die Typargumente für die generische Methode darstellen.</span><span class="sxs-lookup"><span data-stu-id="805d1-357">An array of <see cref="T:System.Type" /> objects that represent the type arguments for the generic method.</span></span></param>
        <summary><span data-ttu-id="805d1-358">Gibt eine aus der aktuellen generischen Methodendefinition mit den angegebenen generischen Typargumenten konstruierte generische Methode zurück.</span><span class="sxs-lookup"><span data-stu-id="805d1-358">Returns a generic method constructed from the current generic method definition using the specified generic type arguments.</span></span></summary>
        <returns><span data-ttu-id="805d1-359">Ein <see cref="T:System.Reflection.MethodInfo" />, das die aus der aktuellen generischen Methodendefinition mit den angegebenen generischen Typargumenten konstruierte generische Methode darstellt.</span><span class="sxs-lookup"><span data-stu-id="805d1-359">A <see cref="T:System.Reflection.MethodInfo" /> representing the generic method constructed from the current generic method definition using the specified generic type arguments.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="805d1-360">Wenn Sie dynamischen Code ausgeben, müssen Sie möglicherweise einen aufzurufenden Methode aus der generischen Methoden Definition, die durch einen <xref:System.Reflection.Emit.MethodBuilder>dargestellt wird, ausgeben, bevor der einschließende Typ abgeschlossen ist.</span><span class="sxs-lookup"><span data-stu-id="805d1-360">When you are emitting dynamic code, you might need to emit a call to a method constructed from the generic method definition represented by a <xref:System.Reflection.Emit.MethodBuilder>, before the enclosing type has been completed.</span></span> <span data-ttu-id="805d1-361">Sie können die <xref:System.Reflection.Emit.MethodBuilder.MakeGenericMethod%2A>-Methode verwenden, um eine <xref:System.Reflection.MethodInfo> für eine solche konstruierte Methode zu erstellen, und die <xref:System.Reflection.MethodInfo> im ausgegebenen-Befehl verwenden.</span><span class="sxs-lookup"><span data-stu-id="805d1-361">You can use the <xref:System.Reflection.Emit.MethodBuilder.MakeGenericMethod%2A> method to create a <xref:System.Reflection.MethodInfo> for such a constructed method, and use the <xref:System.Reflection.MethodInfo> in the emitted call.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="805d1-362">Im folgenden Codebeispiel wird eine konstruierte Methode aus einer unvollständigen generischen Methoden Definition in einem unvollständigen Typ erstellt.</span><span class="sxs-lookup"><span data-stu-id="805d1-362">The following code example creates a constructed method from an incomplete generic method definition in an incomplete type.</span></span>  
  
 <span data-ttu-id="805d1-363">Im Beispiel werden eine vorübergehende Assembly und ein Modul mit einem einzelnen Typ erstellt, eine Methode hinzugefügt `M`und die Methode durch Hinzufügen eines Typparameter t mithilfe der <xref:System.Reflection.Emit.MethodBuilder.DefineGenericParameters%2A>-Methode generisch.</span><span class="sxs-lookup"><span data-stu-id="805d1-363">The example creates a transient assembly and module with a single type, adds a method `M`, and makes the method generic by adding a type parameter T using the <xref:System.Reflection.Emit.MethodBuilder.DefineGenericParameters%2A> method.</span></span> <span data-ttu-id="805d1-364">Der Typparameter wird als Typ des Parameters der Methode und auch als Rückgabetyp verwendet.</span><span class="sxs-lookup"><span data-stu-id="805d1-364">The type parameter is used as the type of the method's parameter, and also as its return type.</span></span> <span data-ttu-id="805d1-365">Der generischen Methoden Definition wird kein Text übergeben, und der einschließende Typ wird nicht abgeschlossen.</span><span class="sxs-lookup"><span data-stu-id="805d1-365">The generic method definition is not given a body, and the enclosing type is not completed.</span></span> <span data-ttu-id="805d1-366">Die <xref:System.Reflection.Emit.MethodBuilder.MakeGenericMethod%2A>-Methode wird dann verwendet, um die konstruierte Methode `M<String>` (`M(Of String)` in Visual Basic) zu machen.</span><span class="sxs-lookup"><span data-stu-id="805d1-366">The <xref:System.Reflection.Emit.MethodBuilder.MakeGenericMethod%2A> method is then used to make the constructed method `M<String>` (`M(Of String)` in Visual Basic).</span></span> <span data-ttu-id="805d1-367">Der Beispielcode hat keine Ausgabe, da die Unterklasse von <xref:System.Reflection.MethodInfo>, die von der <xref:System.Reflection.Emit.MethodBuilder.MakeGenericMethod%2A>-Methode zurückgegeben wird, keine Reflektion über die Parameter zulässt.</span><span class="sxs-lookup"><span data-stu-id="805d1-367">The example code has no output, because the subclass of <xref:System.Reflection.MethodInfo> returned by the <xref:System.Reflection.Emit.MethodBuilder.MakeGenericMethod%2A> method does not allow reflection over its parameters.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="805d1-368">Ein weiteres Codebeispiel, in dem <xref:System.Reflection.Emit.MethodBuilder.MakeGenericMethod%2A>verwendet wird, finden Sie unter <xref:System.Reflection.Emit.MethodBuilder.DefineGenericParameters%2A>.</span><span class="sxs-lookup"><span data-stu-id="805d1-368">For another code example that uses <xref:System.Reflection.Emit.MethodBuilder.MakeGenericMethod%2A>, see <xref:System.Reflection.Emit.MethodBuilder.DefineGenericParameters%2A>.</span></span> <span data-ttu-id="805d1-369"><xref:System.Reflection.Emit.MethodBuilder.MakeGenericMethod%2A> wird auch ausgiebig verwendet, wenn Code ausgegeben wird, der generische Typen verwendet.</span><span class="sxs-lookup"><span data-stu-id="805d1-369"><xref:System.Reflection.Emit.MethodBuilder.MakeGenericMethod%2A> is also used extensively when emitting code that uses generic types.</span></span> <span data-ttu-id="805d1-370">Informationen finden Sie unter Gewusst [wie: Definieren einer generischen Methode mit Reflektionsausgabe](~/docs/framework/reflection-and-codedom/how-to-define-a-generic-method-with-reflection-emit.md).</span><span class="sxs-lookup"><span data-stu-id="805d1-370">See [How to: Define a Generic Method with Reflection Emit](~/docs/framework/reflection-and-codedom/how-to-define-a-generic-method-with-reflection-emit.md).</span></span>  
  
 [!code-cpp[MethodBuilder.MakeGenericMethod#1](~/samples/snippets/cpp/VS_Snippets_CLR/MethodBuilder.MakeGenericMethod/cpp/source.cpp#1)]
 [!code-csharp[MethodBuilder.MakeGenericMethod#1](~/samples/snippets/csharp/VS_Snippets_CLR/MethodBuilder.MakeGenericMethod/cs/source.cs#1)]
 [!code-vb[MethodBuilder.MakeGenericMethod#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/MethodBuilder.MakeGenericMethod/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/reflection-and-codedom/how-to-define-a-generic-method-with-reflection-emit.md"><span data-ttu-id="805d1-371">Gewusst wie: Definieren einer generischen Methode mit Reflektionsausgabe</span><span class="sxs-lookup"><span data-stu-id="805d1-371">How to: Define a Generic Method with Reflection Emit</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="MethodHandle">
      <MemberSignature Language="C#" Value="public override RuntimeMethodHandle MethodHandle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.RuntimeMethodHandle MethodHandle" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.MethodBuilder.MethodHandle" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property MethodHandle As RuntimeMethodHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property RuntimeMethodHandle MethodHandle { RuntimeMethodHandle get(); };" />
      <MemberSignature Language="F#" Value="member this.MethodHandle : RuntimeMethodHandle" Usage="System.Reflection.Emit.MethodBuilder.MethodHandle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.RuntimeMethodHandle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="805d1-372">Ruft das interne Handle für die Methode ab.</span><span class="sxs-lookup"><span data-stu-id="805d1-372">Retrieves the internal handle for the method.</span></span> <span data-ttu-id="805d1-373">Verwenden Sie dieses Handle, um auf das zugrunde liegende Metadatenhandle zuzugreifen.</span><span class="sxs-lookup"><span data-stu-id="805d1-373">Use this handle to access the underlying metadata handle.</span></span></summary>
        <value><span data-ttu-id="805d1-374">Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="805d1-374">Read-only.</span></span> <span data-ttu-id="805d1-375">Das interne Handle für die Methode.</span><span class="sxs-lookup"><span data-stu-id="805d1-375">The internal handle for the method.</span></span> <span data-ttu-id="805d1-376">Verwenden Sie dieses Handle, um auf das zugrunde liegende Metadatenhandle zuzugreifen.</span><span class="sxs-lookup"><span data-stu-id="805d1-376">Use this handle to access the underlying metadata handle.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="805d1-377">Diese Methode wird zurzeit nicht unterstützt.</span><span class="sxs-lookup"><span data-stu-id="805d1-377">This method is not currently supported.</span></span> <span data-ttu-id="805d1-378">Rufen Sie die Methode mithilfe von <see cref="M:System.Type.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])" /> ab, und rufen Sie <see cref="P:System.Reflection.MethodBase.MethodHandle" /> für das zurückgegebene <see cref="T:System.Reflection.MethodInfo" />-Objekt auf.</span><span class="sxs-lookup"><span data-stu-id="805d1-378">Retrieve the method using <see cref="M:System.Type.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])" /> and call <see cref="P:System.Reflection.MethodBase.MethodHandle" /> on the returned <see cref="T:System.Reflection.MethodInfo" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="MethodImplementationFlags">
      <MemberSignature Language="C#" Value="public override System.Reflection.MethodImplAttributes MethodImplementationFlags { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Reflection.MethodImplAttributes MethodImplementationFlags" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.MethodBuilder.MethodImplementationFlags" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property MethodImplementationFlags As MethodImplAttributes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Reflection::MethodImplAttributes MethodImplementationFlags { System::Reflection::MethodImplAttributes get(); };" />
      <MemberSignature Language="F#" Value="member this.MethodImplementationFlags : System.Reflection.MethodImplAttributes" Usage="System.Reflection.Emit.MethodBuilder.MethodImplementationFlags" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodImplAttributes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Module">
      <MemberSignature Language="C#" Value="public override System.Reflection.Module Module { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.Module Module" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.MethodBuilder.Module" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Module As Module" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Reflection::Module ^ Module { System::Reflection::Module ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Module : System.Reflection.Module" Usage="System.Reflection.Emit.MethodBuilder.Module" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Module</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="805d1-379">Ruft das Modul ab, in dem die aktuelle Methode definiert wird.</span><span class="sxs-lookup"><span data-stu-id="805d1-379">Gets the module in which the current method is being defined.</span></span></summary>
        <value><span data-ttu-id="805d1-380">Das <see cref="T:System.Reflection.Module" />, in dem der durch den aktuellen <see cref="T:System.Reflection.MemberInfo" /> dargestellte Member definiert wird.</span><span class="sxs-lookup"><span data-stu-id="805d1-380">The <see cref="T:System.Reflection.Module" /> in which the member represented by the current <see cref="T:System.Reflection.MemberInfo" /> is being defined.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="805d1-381">Diese Eigenschaft wird als praktische Hilfe bereitgestellt.</span><span class="sxs-lookup"><span data-stu-id="805d1-381">This property is provided as a convenience.</span></span> <span data-ttu-id="805d1-382">Dies entspricht der Verwendung der <xref:System.Reflection.Emit.MethodBuilder.DeclaringType%2A>-Eigenschaft zum Abrufen des Typs, in dem die Methode deklariert wird, und dem anschließenden Aufrufen der <xref:System.Type.Module%2A>-Eigenschaft des resultierenden <xref:System.Type> Objekts.</span><span class="sxs-lookup"><span data-stu-id="805d1-382">It is equivalent to using the <xref:System.Reflection.Emit.MethodBuilder.DeclaringType%2A> property to get the type in which the method is being declared, and then calling the <xref:System.Type.Module%2A> property of the resulting <xref:System.Type> object.</span></span>  
  
 <span data-ttu-id="805d1-383">Diese Eigenschaft entspricht auch dem Aufrufen von <xref:System.Reflection.Emit.MethodBuilder.GetModule%2A>.</span><span class="sxs-lookup"><span data-stu-id="805d1-383">This property is also equivalent to calling <xref:System.Reflection.Emit.MethodBuilder.GetModule%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public override string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.MethodBuilder.Name" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Name { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="System.Reflection.Emit.MethodBuilder.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="805d1-384">Ruft den Namen dieser Methode ab.</span><span class="sxs-lookup"><span data-stu-id="805d1-384">Retrieves the name of this method.</span></span></summary>
        <value><span data-ttu-id="805d1-385">Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="805d1-385">Read-only.</span></span> <span data-ttu-id="805d1-386">Ruft eine Zeichenfolge ab, die den einfachen Namen dieser Methode enthält.</span><span class="sxs-lookup"><span data-stu-id="805d1-386">Retrieves a string containing the simple name of this method.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReflectedType">
      <MemberSignature Language="C#" Value="public override Type ReflectedType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ReflectedType" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.MethodBuilder.ReflectedType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property ReflectedType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Type ^ ReflectedType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ReflectedType : Type" Usage="System.Reflection.Emit.MethodBuilder.ReflectedType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="805d1-387">Ruft die Klasse ab, die bei der Reflektion verwendet wurde, um dieses Objekt abzurufen.</span><span class="sxs-lookup"><span data-stu-id="805d1-387">Retrieves the class that was used in reflection to obtain this object.</span></span></summary>
        <value><span data-ttu-id="805d1-388">Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="805d1-388">Read-only.</span></span> <span data-ttu-id="805d1-389">Der Typ, der zum Abrufen dieser Methode verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="805d1-389">The type used to obtain this method.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReturnParameter">
      <MemberSignature Language="C#" Value="public override System.Reflection.ParameterInfo ReturnParameter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.ParameterInfo ReturnParameter" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.MethodBuilder.ReturnParameter" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property ReturnParameter As ParameterInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Reflection::ParameterInfo ^ ReturnParameter { System::Reflection::ParameterInfo ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ReturnParameter : System.Reflection.ParameterInfo" Usage="System.Reflection.Emit.MethodBuilder.ReturnParameter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.ParameterInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="805d1-390">Ruft ein <see cref="T:System.Reflection.ParameterInfo" />-Objekt ab, das Informationen zum Rückgabetyp der Methode enthält, z: B. ob der Rückgabetyp benutzerdefinierte Modifizierer hat.</span><span class="sxs-lookup"><span data-stu-id="805d1-390">Gets a <see cref="T:System.Reflection.ParameterInfo" /> object that contains information about the return type of the method, such as whether the return type has custom modifiers.</span></span></summary>
        <value><span data-ttu-id="805d1-391">Ein <see cref="T:System.Reflection.ParameterInfo" />-Objekt, das Informationen zum Rückgabetyp enthält.</span><span class="sxs-lookup"><span data-stu-id="805d1-391">A <see cref="T:System.Reflection.ParameterInfo" /> object that contains information about the return type.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="805d1-392">Compilerdesigner können das von dieser Eigenschaft zurückgegebene <xref:System.Reflection.ParameterInfo> Objekt verwenden, um zu ermitteln, ob benutzerdefinierte Modifizierern, z. b. <xref:Microsoft.VisualC.IsConstModifier>, auf den Rückgabetyp angewendet wurden.</span><span class="sxs-lookup"><span data-stu-id="805d1-392">Compiler designers can use the <xref:System.Reflection.ParameterInfo> object returned by this property to discover whether custom modifiers, such as <xref:Microsoft.VisualC.IsConstModifier>, have been applied to the return type.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="805d1-393">Der deklarierende Typ wurde nicht erstellt.</span><span class="sxs-lookup"><span data-stu-id="805d1-393">The declaring type has not been created.</span></span></exception>
        <altmember cref="M:System.Reflection.ParameterInfo.GetOptionalCustomModifiers" />
        <altmember cref="M:System.Reflection.ParameterInfo.GetRequiredCustomModifiers" />
      </Docs>
    </Member>
    <Member MemberName="ReturnType">
      <MemberSignature Language="C#" Value="public override Type ReturnType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ReturnType" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.MethodBuilder.ReturnType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property ReturnType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Type ^ ReturnType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ReturnType : Type" Usage="System.Reflection.Emit.MethodBuilder.ReturnType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="805d1-394">Ruft den Rückgabetyp der Methode ab, die von diesem <see cref="T:System.Reflection.Emit.MethodBuilder" /> dargestellt wird.</span><span class="sxs-lookup"><span data-stu-id="805d1-394">Gets the return type of the method represented by this <see cref="T:System.Reflection.Emit.MethodBuilder" />.</span></span></summary>
        <value><span data-ttu-id="805d1-395">Der Rückgabetyp der Methode.</span><span class="sxs-lookup"><span data-stu-id="805d1-395">The return type of the method.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="805d1-396">Beginnend mit dem .NET Framework 2,0 und .NET Compact Framework 2,0 wird dieser Member von der Basisklasse <xref:System.Reflection.MethodInfo>geerbt.</span><span class="sxs-lookup"><span data-stu-id="805d1-396">Starting with the .NET Framework 2.0 and the .NET Compact Framework 2.0, this member is inherited from the base class, <xref:System.Reflection.MethodInfo>.</span></span> <span data-ttu-id="805d1-397">Siehe <xref:System.Reflection.MethodInfo.ReturnType%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="805d1-397">See <xref:System.Reflection.MethodInfo.ReturnType%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReturnTypeCustomAttributes">
      <MemberSignature Language="C#" Value="public override System.Reflection.ICustomAttributeProvider ReturnTypeCustomAttributes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.ICustomAttributeProvider ReturnTypeCustomAttributes" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.MethodBuilder.ReturnTypeCustomAttributes" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property ReturnTypeCustomAttributes As ICustomAttributeProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Reflection::ICustomAttributeProvider ^ ReturnTypeCustomAttributes { System::Reflection::ICustomAttributeProvider ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ReturnTypeCustomAttributes : System.Reflection.ICustomAttributeProvider" Usage="System.Reflection.Emit.MethodBuilder.ReturnTypeCustomAttributes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.ICustomAttributeProvider</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="805d1-398">Gibt die benutzerdefinierten Attribute des Rückgabetyps der Methode zurück.</span><span class="sxs-lookup"><span data-stu-id="805d1-398">Returns the custom attributes of the method's return type.</span></span></summary>
        <value><span data-ttu-id="805d1-399">Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="805d1-399">Read-only.</span></span> <span data-ttu-id="805d1-400">Die benutzerdefinierten Attribute des Rückgabetyps der Methode.</span><span class="sxs-lookup"><span data-stu-id="805d1-400">The custom attributes of the method's return type.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="805d1-401">Diese Methode gibt immer `null` zurück.</span><span class="sxs-lookup"><span data-stu-id="805d1-401">This method always returns `null`.</span></span> <span data-ttu-id="805d1-402">Sie erhalten die <xref:System.Reflection.MethodInfo>, nachdem die enthaltende <xref:System.Type> erstellt und <xref:System.Reflection.MethodInfo.ReturnTypeCustomAttributes%2A> auf dem <xref:System.Reflection.MethodInfo>aufgerufen wurde.</span><span class="sxs-lookup"><span data-stu-id="805d1-402">Get the <xref:System.Reflection.MethodInfo> after the containing <xref:System.Type> has been created and invoked <xref:System.Reflection.MethodInfo.ReturnTypeCustomAttributes%2A> on the <xref:System.Reflection.MethodInfo>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetCustomAttribute">
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="805d1-403">Legt ein benutzerdefiniertes Attribut fest.</span><span class="sxs-lookup"><span data-stu-id="805d1-403">Sets a custom attribute.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetCustomAttribute">
      <MemberSignature Language="C#" Value="public void SetCustomAttribute (System.Reflection.Emit.CustomAttributeBuilder customBuilder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetCustomAttribute(class System.Reflection.Emit.CustomAttributeBuilder customBuilder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.MethodBuilder.SetCustomAttribute(System.Reflection.Emit.CustomAttributeBuilder)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetCustomAttribute (customBuilder As CustomAttributeBuilder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetCustomAttribute(System::Reflection::Emit::CustomAttributeBuilder ^ customBuilder);" />
      <MemberSignature Language="F#" Value="member this.SetCustomAttribute : System.Reflection.Emit.CustomAttributeBuilder -&gt; unit" Usage="methodBuilder.SetCustomAttribute customBuilder" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="customBuilder" Type="System.Reflection.Emit.CustomAttributeBuilder" />
      </Parameters>
      <Docs>
        <param name="customBuilder"><span data-ttu-id="805d1-404">Eine Instanz einer Hilfsklasse zum Beschreiben des benutzerdefinierten Attributs.</span><span class="sxs-lookup"><span data-stu-id="805d1-404">An instance of a helper class to describe the custom attribute.</span></span></param>
        <summary><span data-ttu-id="805d1-405">Legt ein benutzerdefiniertes Attribut mithilfe eines benutzerdefinierten Attribut-Generators fest.</span><span class="sxs-lookup"><span data-stu-id="805d1-405">Sets a custom attribute using a custom attribute builder.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="805d1-406">Die <xref:System.Reflection.Emit.MethodBuilder.SetCustomAttribute%2A>-Methode kann mit der <xref:System.Reflection.Emit.MethodBuilder.SetImplementationFlags%2A>-Methode interagieren, wenn die beiden Methoden in Kombination verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="805d1-406">The <xref:System.Reflection.Emit.MethodBuilder.SetCustomAttribute%2A> method can interact with the <xref:System.Reflection.Emit.MethodBuilder.SetImplementationFlags%2A> method when the two methods are used in combination.</span></span> <span data-ttu-id="805d1-407">Weitere Informationen finden Sie im Abschnitt "Hinweise" der <xref:System.Reflection.Emit.MethodBuilder.SetImplementationFlags%2A>-Methode.</span><span class="sxs-lookup"><span data-stu-id="805d1-407">See the Remarks section of the <xref:System.Reflection.Emit.MethodBuilder.SetImplementationFlags%2A> method for details.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="805d1-408"><paramref name="customBuilder" /> ist <see langword="null" /></span><span class="sxs-lookup"><span data-stu-id="805d1-408"><paramref name="customBuilder" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="805d1-409">Für die aktuelle Methode ist die <see cref="P:System.Reflection.Emit.MethodBuilder.IsGenericMethod" />-Eigenschaft <see langword="true" />, aber die <see cref="P:System.Reflection.Emit.MethodBuilder.IsGenericMethodDefinition" />-Eigenschaft ist <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="805d1-409">For the current method, the <see cref="P:System.Reflection.Emit.MethodBuilder.IsGenericMethod" /> property is <see langword="true" />, but the <see cref="P:System.Reflection.Emit.MethodBuilder.IsGenericMethodDefinition" /> property is <see langword="false" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SetCustomAttribute">
      <MemberSignature Language="C#" Value="public void SetCustomAttribute (System.Reflection.ConstructorInfo con, byte[] binaryAttribute);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetCustomAttribute(class System.Reflection.ConstructorInfo con, unsigned int8[] binaryAttribute) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.MethodBuilder.SetCustomAttribute(System.Reflection.ConstructorInfo,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetCustomAttribute (con As ConstructorInfo, binaryAttribute As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetCustomAttribute(System::Reflection::ConstructorInfo ^ con, cli::array &lt;System::Byte&gt; ^ binaryAttribute);" />
      <MemberSignature Language="F#" Value="member this.SetCustomAttribute : System.Reflection.ConstructorInfo * byte[] -&gt; unit" Usage="methodBuilder.SetCustomAttribute (con, binaryAttribute)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="con" Type="System.Reflection.ConstructorInfo" />
        <Parameter Name="binaryAttribute" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="con"><span data-ttu-id="805d1-410">Der Konstruktor für das benutzerdefinierte Attribut.</span><span class="sxs-lookup"><span data-stu-id="805d1-410">The constructor for the custom attribute.</span></span></param>
        <param name="binaryAttribute"><span data-ttu-id="805d1-411">Ein Byte-BLOB, das die Attribute darstellt.</span><span class="sxs-lookup"><span data-stu-id="805d1-411">A byte blob representing the attributes.</span></span></param>
        <summary><span data-ttu-id="805d1-412">Legt ein benutzerdefiniertes Attribut mithilfe eines angegebenen benutzerdefinierten Attribut-BLOBs fest.</span><span class="sxs-lookup"><span data-stu-id="805d1-412">Sets a custom attribute using a specified custom attribute blob.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="805d1-413">Ausführliche Informationen zum Formatieren von `binaryAttribute`finden Sie in der Dokumentation zu Common Language Infrastructure (CLI), insbesondere unter "Partition II: Metadatendefinition und Semantik".</span><span class="sxs-lookup"><span data-stu-id="805d1-413">For details on how to format `binaryAttribute`, see the Common Language Infrastructure (CLI) documentation, especially "Partition II: Metadata Definition and Semantics".</span></span> <span data-ttu-id="805d1-414">Die Dokumentation ist online verfügbar. Sie finden sie unter [ECMA C# and Common Language Infrastructure Standards (Standards von ECMA C# und Common Language Infrastructure)](https://go.microsoft.com/fwlink/?LinkID=99212) auf MSDN und [Standard ECMA-335 - Common Language Infrastructure (CLI) (Standard ECMA-335 – Common Language Infrastructure (CLI))](https://go.microsoft.com/fwlink/?LinkID=65552) auf der Ecma International-Website.</span><span class="sxs-lookup"><span data-stu-id="805d1-414">The documentation is available online; see [ECMA C# and Common Language Infrastructure Standards](https://go.microsoft.com/fwlink/?LinkID=99212) on MSDN and [Standard ECMA-335 - Common Language Infrastructure (CLI)](https://go.microsoft.com/fwlink/?LinkID=65552) on the Ecma International Web site.</span></span>  
  
 <span data-ttu-id="805d1-415">Die <xref:System.Reflection.Emit.MethodBuilder.SetCustomAttribute%2A>-Methode kann mit der <xref:System.Reflection.Emit.MethodBuilder.SetImplementationFlags%2A>-Methode interagieren, wenn die beiden Methoden in Kombination verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="805d1-415">The <xref:System.Reflection.Emit.MethodBuilder.SetCustomAttribute%2A> method can interact with the <xref:System.Reflection.Emit.MethodBuilder.SetImplementationFlags%2A> method when the two methods are used in combination.</span></span> <span data-ttu-id="805d1-416">Weitere Informationen finden Sie im Abschnitt "Hinweise" der <xref:System.Reflection.Emit.MethodBuilder.SetImplementationFlags%2A>-Methode.</span><span class="sxs-lookup"><span data-stu-id="805d1-416">See the Remarks section of the <xref:System.Reflection.Emit.MethodBuilder.SetImplementationFlags%2A> method for details.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="805d1-417"><paramref name="con" /> oder <paramref name="binaryAttribute" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="805d1-417"><paramref name="con" /> or <paramref name="binaryAttribute" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="805d1-418">Für die aktuelle Methode ist die <see cref="P:System.Reflection.Emit.MethodBuilder.IsGenericMethod" />-Eigenschaft <see langword="true" />, aber die <see cref="P:System.Reflection.Emit.MethodBuilder.IsGenericMethodDefinition" />-Eigenschaft ist <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="805d1-418">For the current method, the <see cref="P:System.Reflection.Emit.MethodBuilder.IsGenericMethod" /> property is <see langword="true" />, but the <see cref="P:System.Reflection.Emit.MethodBuilder.IsGenericMethodDefinition" /> property is <see langword="false" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SetImplementationFlags">
      <MemberSignature Language="C#" Value="public void SetImplementationFlags (System.Reflection.MethodImplAttributes attributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetImplementationFlags(valuetype System.Reflection.MethodImplAttributes attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.MethodBuilder.SetImplementationFlags(System.Reflection.MethodImplAttributes)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetImplementationFlags (attributes As MethodImplAttributes)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetImplementationFlags(System::Reflection::MethodImplAttributes attributes);" />
      <MemberSignature Language="F#" Value="member this.SetImplementationFlags : System.Reflection.MethodImplAttributes -&gt; unit" Usage="methodBuilder.SetImplementationFlags attributes" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributes" Type="System.Reflection.MethodImplAttributes" />
      </Parameters>
      <Docs>
        <param name="attributes"><span data-ttu-id="805d1-419">Die festzulegenden Implementierungsflags.</span><span class="sxs-lookup"><span data-stu-id="805d1-419">The implementation flags to set.</span></span></param>
        <summary><span data-ttu-id="805d1-420">Legt die Implementierungsflags für diese Methode fest.</span><span class="sxs-lookup"><span data-stu-id="805d1-420">Sets the implementation flags for this method.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="805d1-421">Wenn Sie die <xref:System.Reflection.Emit.MethodBuilder.SetImplementationFlags%2A>-Methode in Kombination mit der <xref:System.Reflection.Emit.MethodBuilder.SetCustomAttribute%2A>-Methode verwenden, beachten Sie mögliche Interaktionen.</span><span class="sxs-lookup"><span data-stu-id="805d1-421">When you use the <xref:System.Reflection.Emit.MethodBuilder.SetImplementationFlags%2A> method in combination with the <xref:System.Reflection.Emit.MethodBuilder.SetCustomAttribute%2A> method, be aware of potential interactions.</span></span> <span data-ttu-id="805d1-422">Wenn Sie beispielsweise die <xref:System.Reflection.Emit.MethodBuilder.SetCustomAttribute%2A>-Methode zum Hinzufügen des <xref:System.Runtime.InteropServices.DllImportAttribute> Attributs verwenden, wird auch das <xref:System.Reflection.MethodImplAttributes.PreserveSig?displayProperty=nameWithType>-Flag festgelegt</span><span class="sxs-lookup"><span data-stu-id="805d1-422">For example, using the <xref:System.Reflection.Emit.MethodBuilder.SetCustomAttribute%2A> method to add the <xref:System.Runtime.InteropServices.DllImportAttribute> attribute also sets the <xref:System.Reflection.MethodImplAttributes.PreserveSig?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="805d1-423">Wenn Sie anschließend die <xref:System.Reflection.Emit.MethodBuilder.SetImplementationFlags%2A>-Methode aufzurufen, wird das <xref:System.Reflection.MethodImplAttributes.PreserveSig>-Flag überschrieben.</span><span class="sxs-lookup"><span data-stu-id="805d1-423">If you subsequently call the <xref:System.Reflection.Emit.MethodBuilder.SetImplementationFlags%2A> method, the <xref:System.Reflection.MethodImplAttributes.PreserveSig> flag is overwritten.</span></span> <span data-ttu-id="805d1-424">Dies kann auf zwei Arten vermieden werden:</span><span class="sxs-lookup"><span data-stu-id="805d1-424">There are two ways to avoid this:</span></span>  
  
-   <span data-ttu-id="805d1-425">Ruft die <xref:System.Reflection.Emit.MethodBuilder.SetImplementationFlags%2A>-Methode auf, bevor Sie die <xref:System.Reflection.Emit.MethodBuilder.SetCustomAttribute%2A>-Methode aufruft.</span><span class="sxs-lookup"><span data-stu-id="805d1-425">Call the <xref:System.Reflection.Emit.MethodBuilder.SetImplementationFlags%2A> method before you call the <xref:System.Reflection.Emit.MethodBuilder.SetCustomAttribute%2A> method.</span></span> <span data-ttu-id="805d1-426">Die <xref:System.Reflection.Emit.MethodBuilder.SetCustomAttribute%2A>-Methode respektiert immer vorhandene Methodenimplementierungsflags.</span><span class="sxs-lookup"><span data-stu-id="805d1-426">The <xref:System.Reflection.Emit.MethodBuilder.SetCustomAttribute%2A> method always respects existing method implementation flags.</span></span>  
  
-   <span data-ttu-id="805d1-427">Wenn Sie Implementierungsflags festlegen, rufen Sie die <xref:System.Reflection.Emit.MethodBuilder.GetMethodImplementationFlags%2A>-Methode auf, um die vorhandenen Flags abzurufen, verwenden Sie bitweises OR, um Ihr Flag hinzuzufügen, und rufen Sie dann die <xref:System.Reflection.Emit.MethodBuilder.SetImplementationFlags%2A>-Methode auf.</span><span class="sxs-lookup"><span data-stu-id="805d1-427">When you set implementation flags, call the <xref:System.Reflection.Emit.MethodBuilder.GetMethodImplementationFlags%2A> method to retrieve the existing flags, use bitwise OR to add your flag, and then call the <xref:System.Reflection.Emit.MethodBuilder.SetImplementationFlags%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="805d1-428">Das folgende Codebeispiel veranschaulicht die kontextbezogene Verwendung der `SetImplementationFlags`-Methode, um die Implementierung von MSIL in einem Methoden Text zu beschreiben.</span><span class="sxs-lookup"><span data-stu-id="805d1-428">The code sample below illustrates the contextual use of the `SetImplementationFlags` method to describe the implementation of MSIL in a method body.</span></span>  
  
 [!code-cpp[System.Reflection.Emit.MethodBuilder.SetImplementationFlags Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Reflection.Emit.MethodBuilder.SetImplementationFlags Example/CPP/source.cpp#1)]
 [!code-csharp[System.Reflection.Emit.MethodBuilder.SetImplementationFlags Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Reflection.Emit.MethodBuilder.SetImplementationFlags Example/CS/source.cs#1)]
 [!code-vb[System.Reflection.Emit.MethodBuilder.SetImplementationFlags Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Reflection.Emit.MethodBuilder.SetImplementationFlags Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="805d1-429">Der enthaltende Typ wurde zuvor mit <see cref="M:System.Reflection.Emit.TypeBuilder.CreateType" /> erstellt.</span><span class="sxs-lookup"><span data-stu-id="805d1-429">The containing type was previously created using <see cref="M:System.Reflection.Emit.TypeBuilder.CreateType" />.</span></span>  
  
<span data-ttu-id="805d1-430">Oder</span><span class="sxs-lookup"><span data-stu-id="805d1-430">-or-</span></span> 
<span data-ttu-id="805d1-431">Für die aktuelle Methode ist die <see cref="P:System.Reflection.Emit.MethodBuilder.IsGenericMethod" />-Eigenschaft <see langword="true" />, aber die <see cref="P:System.Reflection.Emit.MethodBuilder.IsGenericMethodDefinition" />-Eigenschaft ist <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="805d1-431">For the current method, the <see cref="P:System.Reflection.Emit.MethodBuilder.IsGenericMethod" /> property is <see langword="true" />, but the <see cref="P:System.Reflection.Emit.MethodBuilder.IsGenericMethodDefinition" /> property is <see langword="false" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SetMarshal">
      <MemberSignature Language="C#" Value="public void SetMarshal (System.Reflection.Emit.UnmanagedMarshal unmanagedMarshal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetMarshal(class System.Reflection.Emit.UnmanagedMarshal unmanagedMarshal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.MethodBuilder.SetMarshal(System.Reflection.Emit.UnmanagedMarshal)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetMarshal (unmanagedMarshal As UnmanagedMarshal)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetMarshal(System::Reflection::Emit::UnmanagedMarshal ^ unmanagedMarshal);" />
      <MemberSignature Language="F#" Value="member this.SetMarshal : System.Reflection.Emit.UnmanagedMarshal -&gt; unit" Usage="methodBuilder.SetMarshal unmanagedMarshal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinmac-3.0">
          <AttributeName>System.Obsolete("An alternate API is available: Emit the MarshalAs custom attribute instead.")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Obsolete("An alternate API is available: Emit the MarshalAs custom attribute instead. http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="unmanagedMarshal" Type="System.Reflection.Emit.UnmanagedMarshal" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="unmanagedMarshal"><span data-ttu-id="805d1-432">Die Marshallinginformationen für den Rückgabetyp dieser Methode.</span><span class="sxs-lookup"><span data-stu-id="805d1-432">Marshaling information for the return type of this method.</span></span></param>
        <summary><span data-ttu-id="805d1-433">Legt die Marshallinginformationen für den Rückgabetyp dieser Methode fest.</span><span class="sxs-lookup"><span data-stu-id="805d1-433">Sets marshaling information for the return type of this method.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="805d1-434">Das folgende Codebeispiel veranschaulicht die kontextbezogene Verwendung der `SetMarshal`-Methode, um die Ergebnisse eines Methoden Aufrufes als anderen Typ zu Mars Hallen.</span><span class="sxs-lookup"><span data-stu-id="805d1-434">The code sample below illustrates the contextual usage of the `SetMarshal` method to marshal the results of a method call as a different type.</span></span>  
  
 [!code-cpp[System.Reflection.Emit.MethodBuilder.SetMarshal Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Reflection.Emit.MethodBuilder.SetMarshal Example/CPP/source.cpp#1)]
 [!code-csharp[System.Reflection.Emit.MethodBuilder.SetMarshal Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Reflection.Emit.MethodBuilder.SetMarshal Example/CS/source.cs#1)]
 [!code-vb[System.Reflection.Emit.MethodBuilder.SetMarshal Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Reflection.Emit.MethodBuilder.SetMarshal Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="805d1-435">Der enthaltende Typ wurde zuvor mit <see cref="M:System.Reflection.Emit.TypeBuilder.CreateType" /> erstellt.</span><span class="sxs-lookup"><span data-stu-id="805d1-435">The containing type was previously created using <see cref="M:System.Reflection.Emit.TypeBuilder.CreateType" />.</span></span>  
  
<span data-ttu-id="805d1-436">Oder</span><span class="sxs-lookup"><span data-stu-id="805d1-436">-or-</span></span> 
<span data-ttu-id="805d1-437">Für die aktuelle Methode ist die <see cref="P:System.Reflection.Emit.MethodBuilder.IsGenericMethod" />-Eigenschaft <see langword="true" />, aber die <see cref="P:System.Reflection.Emit.MethodBuilder.IsGenericMethodDefinition" />-Eigenschaft ist <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="805d1-437">For the current method, the <see cref="P:System.Reflection.Emit.MethodBuilder.IsGenericMethod" /> property is <see langword="true" />, but the <see cref="P:System.Reflection.Emit.MethodBuilder.IsGenericMethodDefinition" /> property is <see langword="false" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SetMethodBody">
      <MemberSignature Language="C#" Value="public void SetMethodBody (byte[] il, int maxStack, byte[] localSignature, System.Collections.Generic.IEnumerable&lt;System.Reflection.Emit.ExceptionHandler&gt; exceptionHandlers, System.Collections.Generic.IEnumerable&lt;int&gt; tokenFixups);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetMethodBody(unsigned int8[] il, int32 maxStack, unsigned int8[] localSignature, class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Reflection.Emit.ExceptionHandler&gt; exceptionHandlers, class System.Collections.Generic.IEnumerable`1&lt;int32&gt; tokenFixups) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.MethodBuilder.SetMethodBody(System.Byte[],System.Int32,System.Byte[],System.Collections.Generic.IEnumerable{System.Reflection.Emit.ExceptionHandler},System.Collections.Generic.IEnumerable{System.Int32})" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetMethodBody (il As Byte(), maxStack As Integer, localSignature As Byte(), exceptionHandlers As IEnumerable(Of ExceptionHandler), tokenFixups As IEnumerable(Of Integer))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetMethodBody(cli::array &lt;System::Byte&gt; ^ il, int maxStack, cli::array &lt;System::Byte&gt; ^ localSignature, System::Collections::Generic::IEnumerable&lt;System::Reflection::Emit::ExceptionHandler&gt; ^ exceptionHandlers, System::Collections::Generic::IEnumerable&lt;int&gt; ^ tokenFixups);" />
      <MemberSignature Language="F#" Value="member this.SetMethodBody : byte[] * int * byte[] * seq&lt;System.Reflection.Emit.ExceptionHandler&gt; * seq&lt;int&gt; -&gt; unit" Usage="methodBuilder.SetMethodBody (il, maxStack, localSignature, exceptionHandlers, tokenFixups)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="il" Type="System.Byte[]" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="maxStack" Type="System.Int32" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="localSignature" Type="System.Byte[]" Index="2" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="exceptionHandlers" Type="System.Collections.Generic.IEnumerable&lt;System.Reflection.Emit.ExceptionHandler&gt;" Index="3" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="tokenFixups" Type="System.Collections.Generic.IEnumerable&lt;System.Int32&gt;" Index="4" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="il"><span data-ttu-id="805d1-438">Ein Array, das gültige MSIL-Anweisungen enthält.</span><span class="sxs-lookup"><span data-stu-id="805d1-438">An array that contains valid MSIL instructions.</span></span></param>
        <param name="maxStack"><span data-ttu-id="805d1-439">Die maximale Stapelauswertungstiefe.</span><span class="sxs-lookup"><span data-stu-id="805d1-439">The maximum stack evaluation depth.</span></span></param>
        <param name="localSignature"><span data-ttu-id="805d1-440">Ein Array von Bytes, die die serialisierte lokale Variablenstruktur enthalten.</span><span class="sxs-lookup"><span data-stu-id="805d1-440">An array of bytes that contain the serialized local variable structure.</span></span> <span data-ttu-id="805d1-441">Geben Sie <see langword="null" /> an, wenn die Methode keine lokalen Variablen enthält.</span><span class="sxs-lookup"><span data-stu-id="805d1-441">Specify <see langword="null" /> if the method has no local variables.</span></span></param>
        <param name="exceptionHandlers"><span data-ttu-id="805d1-442">Eine Auflistung, die die Ausnahmehandler für die Methode enthält.</span><span class="sxs-lookup"><span data-stu-id="805d1-442">A collection that contains the exception handlers for the method.</span></span> <span data-ttu-id="805d1-443">Geben Sie <see langword="null" /> an, wenn die Methode über keine Ausnahmehandler verfügt.</span><span class="sxs-lookup"><span data-stu-id="805d1-443">Specify <see langword="null" /> if the method has no exception handlers.</span></span></param>
        <param name="tokenFixups"><span data-ttu-id="805d1-444">Eine Auflistung von Werten, die Offsets in <paramref name="il" /> darstellen, von denen jeder den Anfang eines Tokens festlegt, der geändert werden kann.</span><span class="sxs-lookup"><span data-stu-id="805d1-444">A collection of values that represent offsets in <paramref name="il" />, each of which specifies the beginning of a token that may be modified.</span></span> <span data-ttu-id="805d1-445">Geben Sie <see langword="null" /> an, wenn die Methode über keine Token verfügt, die geändert werden müssen.</span><span class="sxs-lookup"><span data-stu-id="805d1-445">Specify <see langword="null" /> if the method has no tokens that have to be modified.</span></span></param>
        <summary><span data-ttu-id="805d1-446">Erstellt den Text der Methode unter Verwendung eines angegebenen Bytearrays von MSIL-Anweisungen (Microsoft Intermediate Language).</span><span class="sxs-lookup"><span data-stu-id="805d1-446">Creates the body of the method by using a specified byte array of Microsoft intermediate language (MSIL) instructions.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="805d1-447"><paramref name="il" /> ist <see langword="null" /></span><span class="sxs-lookup"><span data-stu-id="805d1-447"><paramref name="il" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="805d1-448"><paramref name="maxStack" /> ist ein negativer Wert.</span><span class="sxs-lookup"><span data-stu-id="805d1-448"><paramref name="maxStack" /> is negative.</span></span>  
  
<span data-ttu-id="805d1-449">Oder</span><span class="sxs-lookup"><span data-stu-id="805d1-449">-or-</span></span> 
<span data-ttu-id="805d1-450">Einer der <paramref name="exceptionHandlers" /> gibt einen Offset außerhalb von <paramref name="il" /> an.</span><span class="sxs-lookup"><span data-stu-id="805d1-450">One of <paramref name="exceptionHandlers" /> specifies an offset outside of <paramref name="il" />.</span></span>  
  
<span data-ttu-id="805d1-451">Oder</span><span class="sxs-lookup"><span data-stu-id="805d1-451">-or-</span></span> 
<span data-ttu-id="805d1-452">Einer der <paramref name="tokenFixups" /> gibt einen Offset außerhalb des <paramref name="il" />-Arrays an.</span><span class="sxs-lookup"><span data-stu-id="805d1-452">One of <paramref name="tokenFixups" /> specifies an offset that is outside the <paramref name="il" /> array.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="805d1-453">Der enthaltende Typ wurde zuvor mit der <see cref="M:System.Reflection.Emit.TypeBuilder.CreateType" />-Methode erstellt.</span><span class="sxs-lookup"><span data-stu-id="805d1-453">The containing type was previously created using the <see cref="M:System.Reflection.Emit.TypeBuilder.CreateType" /> method.</span></span>  
  
<span data-ttu-id="805d1-454">Oder</span><span class="sxs-lookup"><span data-stu-id="805d1-454">-or-</span></span> 
<span data-ttu-id="805d1-455">Diese Methode wurde zuvor für dieses <see cref="T:System.Reflection.Emit.MethodBuilder" />-Objekt aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="805d1-455">This method was called previously on this <see cref="T:System.Reflection.Emit.MethodBuilder" /> object.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SetParameters">
      <MemberSignature Language="C#" Value="public void SetParameters (params Type[] parameterTypes);" FrameworkAlternate="net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.1;xamarinandroid-7.1;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetParameters(class System.Type[] parameterTypes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.MethodBuilder.SetParameters(System.Type[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetParameters (ParamArray parameterTypes As Type())" FrameworkAlternate="net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.1;xamarinandroid-7.1;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetParameters(... cli::array &lt;Type ^&gt; ^ parameterTypes);" FrameworkAlternate="net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.1;xamarinandroid-7.1;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="member this.SetParameters : Type[] -&gt; unit" Usage="methodBuilder.SetParameters parameterTypes" />
      <MemberSignature Language="C#" Value="public void SetParameters (Type[] parameterTypes);" FrameworkAlternate="xamarinios-10.8" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetParameters (parameterTypes As Type())" FrameworkAlternate="xamarinios-10.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetParameters(cli::array &lt;Type ^&gt; ^ parameterTypes);" FrameworkAlternate="xamarinios-10.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameterTypes" Type="System.Type[]" Index="0" FrameworkAlternate="net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <Attributes>
            <Attribute FrameworkAlternate="net-5.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="parameterTypes"><span data-ttu-id="805d1-456">Ein Array von <see cref="T:System.Type" />-Objekten, die die Parametertypen darstellen.</span><span class="sxs-lookup"><span data-stu-id="805d1-456">An array of <see cref="T:System.Type" /> objects representing the parameter types.</span></span></param>
        <summary><span data-ttu-id="805d1-457">Legt die Anzahl und Typen der Parameter für eine Methode fest.</span><span class="sxs-lookup"><span data-stu-id="805d1-457">Sets the number and types of parameters for a method.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="805d1-458">Wenn die Anzahl und Typen der Parameter bekannt sind, wenn die Methode definiert ist, können Sie mithilfe einer beliebigen Überladung der <xref:System.Reflection.Emit.TypeBuilder.DefineMethod%2A?displayProperty=nameWithType> Methode festgelegt werden, die ein Array von Parametertypen akzeptiert.</span><span class="sxs-lookup"><span data-stu-id="805d1-458">If the number and types of the parameters are known when the method is defined, they can be set using any overload of the <xref:System.Reflection.Emit.TypeBuilder.DefineMethod%2A?displayProperty=nameWithType> method that accepts an array of parameter types.</span></span> <span data-ttu-id="805d1-459">Eine generische Methode kann jedoch über Parameter verfügen, deren Typen von mindestens einem eigenen generischen Typparameter angegeben werden, der erst definiert werden kann, nachdem die-Methode definiert wurde.</span><span class="sxs-lookup"><span data-stu-id="805d1-459">However, a generic method can have parameters whose types are specified by one or more of its own generic type parameters, which cannot be defined until after the method has been defined.</span></span> <span data-ttu-id="805d1-460">Verwenden Sie diese Methode, um die Parametertypen in diesem Fall festzulegen.</span><span class="sxs-lookup"><span data-stu-id="805d1-460">Use this method to set the parameter types in that case.</span></span>  
  
 <span data-ttu-id="805d1-461">Wenn der Rückgabetyp optionale oder erforderliche benutzerdefinierte modifiziererer (z. b. <xref:System.Runtime.CompilerServices.IsConst>) aufweist, verwenden Sie die Überladung <xref:System.Reflection.Emit.MethodBuilder.SetSignature%28System.Type%2CSystem.Type%5B%5D%2CSystem.Type%5B%5D%2CSystem.Type%5B%5D%2CSystem.Type%5B%5D%5B%5D%2CSystem.Type%5B%5D%5B%5D%29></span><span class="sxs-lookup"><span data-stu-id="805d1-461">If the return type has optional or required custom modifiers, such as <xref:System.Runtime.CompilerServices.IsConst>, use the <xref:System.Reflection.Emit.MethodBuilder.SetSignature%28System.Type%2CSystem.Type%5B%5D%2CSystem.Type%5B%5D%2CSystem.Type%5B%5D%2CSystem.Type%5B%5D%5B%5D%2CSystem.Type%5B%5D%5B%5D%29> method overload.</span></span>  
  
 <span data-ttu-id="805d1-462">Wenn Sie diese Methode aufrufen, werden alle Parametertypen ersetzt, die mit der <xref:System.Reflection.Emit.TypeBuilder.DefineMethod%2A?displayProperty=nameWithType>-Methode festgelegt wurden.</span><span class="sxs-lookup"><span data-stu-id="805d1-462">Calling this method replaces any parameter types that were set using the <xref:System.Reflection.Emit.TypeBuilder.DefineMethod%2A?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="805d1-463">Im folgenden Codebeispiel wird die <xref:System.Reflection.Emit.MethodBuilder.DefineGenericParameters%2A>-Methode verwendet, um eine Methode als generisch zu gestalten.</span><span class="sxs-lookup"><span data-stu-id="805d1-463">The following code example uses the <xref:System.Reflection.Emit.MethodBuilder.DefineGenericParameters%2A> method to make a method generic.</span></span> <span data-ttu-id="805d1-464">Die <xref:System.Reflection.Emit.MethodBuilder.SetParameters%2A>-Methode wird verwendet, um der Methode einen Parameter zuzuweisen, dessen Typ durch den ersten generischen Typparameter angegeben wird.</span><span class="sxs-lookup"><span data-stu-id="805d1-464">The <xref:System.Reflection.Emit.MethodBuilder.SetParameters%2A> method is used to give the method one parameter, whose type will be specified by the first generic type parameter.</span></span> <span data-ttu-id="805d1-465">Die <xref:System.Reflection.Emit.MethodBuilder.SetReturnType%2A>-Methode wird verwendet, um der Methode einen Rückgabetyp zuzuweisen, der durch den zweiten generischen Typparameter angegeben wird.</span><span class="sxs-lookup"><span data-stu-id="805d1-465">The <xref:System.Reflection.Emit.MethodBuilder.SetReturnType%2A> method is used to give the method a return type, specified by the second generic type parameter.</span></span>  
  
 <span data-ttu-id="805d1-466">Dieser Code ist Teil eines größeren Beispiels, das für die <xref:System.Reflection.Emit.MethodBuilder.DefineGenericParameters%2A>-Methode bereitgestellt wird.</span><span class="sxs-lookup"><span data-stu-id="805d1-466">This code is part of a larger example provided for the <xref:System.Reflection.Emit.MethodBuilder.DefineGenericParameters%2A> method.</span></span>  
  
 [!code-cpp[GenericMethodBuilder#3](~/samples/snippets/cpp/VS_Snippets_CLR/GenericMethodBuilder/cpp/source.cpp#3)]
 [!code-csharp[GenericMethodBuilder#3](~/samples/snippets/csharp/VS_Snippets_CLR/GenericMethodBuilder/CS/source.cs#3)]
 [!code-vb[GenericMethodBuilder#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/GenericMethodBuilder/VB/source.vb#3)]  
[!code-cpp[GenericMethodBuilder#5](~/samples/snippets/cpp/VS_Snippets_CLR/GenericMethodBuilder/cpp/source.cpp#5)]
[!code-csharp[GenericMethodBuilder#5](~/samples/snippets/csharp/VS_Snippets_CLR/GenericMethodBuilder/CS/source.cs#5)]
[!code-vb[GenericMethodBuilder#5](~/samples/snippets/visualbasic/VS_Snippets_CLR/GenericMethodBuilder/VB/source.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="805d1-467">Die aktuelle Methode ist generisch, die Methodendefinition ist aber nicht generisch.</span><span class="sxs-lookup"><span data-stu-id="805d1-467">The current method is generic, but is not a generic method definition.</span></span> <span data-ttu-id="805d1-468">Das bedeutet, die <see cref="P:System.Reflection.Emit.MethodBuilder.IsGenericMethod" />-Eigenschaft ist <see langword="true" />, aber die <see cref="P:System.Reflection.Emit.MethodBuilder.IsGenericMethodDefinition" />-Eigenschaft ist <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="805d1-468">That is, the <see cref="P:System.Reflection.Emit.MethodBuilder.IsGenericMethod" /> property is <see langword="true" />, but the <see cref="P:System.Reflection.Emit.MethodBuilder.IsGenericMethodDefinition" /> property is <see langword="false" />.</span></span></exception>
        <altmember cref="M:System.Reflection.Emit.MethodBuilder.SetReturnType(System.Type)" />
        <related type="Article" href="~/docs/framework/reflection-and-codedom/how-to-define-a-generic-method-with-reflection-emit.md"><span data-ttu-id="805d1-469">Gewusst wie: Definieren einer generischen Methode mit Reflektionsausgabe</span><span class="sxs-lookup"><span data-stu-id="805d1-469">How to: Define a Generic Method with Reflection Emit</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="SetReturnType">
      <MemberSignature Language="C#" Value="public void SetReturnType (Type returnType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetReturnType(class System.Type returnType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.MethodBuilder.SetReturnType(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetReturnType (returnType As Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetReturnType(Type ^ returnType);" />
      <MemberSignature Language="F#" Value="member this.SetReturnType : Type -&gt; unit" Usage="methodBuilder.SetReturnType returnType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="returnType" Type="System.Type" Index="0" FrameworkAlternate="net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="returnType"><span data-ttu-id="805d1-470">Ein <see cref="T:System.Type" />-Objekt, das den Rückgabetyp der Methode darstellt.</span><span class="sxs-lookup"><span data-stu-id="805d1-470">A <see cref="T:System.Type" /> object that represents the return type of the method.</span></span></param>
        <summary><span data-ttu-id="805d1-471">Legt den Rückgabetyp der Methode fest.</span><span class="sxs-lookup"><span data-stu-id="805d1-471">Sets the return type of the method.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="805d1-472">Verwenden Sie diese Methode, um den Rückgabetyp einer generischen Methode festzulegen, wenn der Rückgabetyp von einem der generischen Typparameter der Methode angegeben wird.</span><span class="sxs-lookup"><span data-stu-id="805d1-472">Use this method to set the return type of a generic method, when the return type is specified by one of the generic type parameters of the method.</span></span> <span data-ttu-id="805d1-473">Wenn der Rückgabetyp optionale oder erforderliche benutzerdefinierte modifiziererer (z. b. <xref:System.Runtime.CompilerServices.IsConst>) aufweist, verwenden Sie die Überladung <xref:System.Reflection.Emit.MethodBuilder.SetSignature%28System.Type%2CSystem.Type%5B%5D%2CSystem.Type%5B%5D%2CSystem.Type%5B%5D%2CSystem.Type%5B%5D%5B%5D%2CSystem.Type%5B%5D%5B%5D%29></span><span class="sxs-lookup"><span data-stu-id="805d1-473">If the return type has optional or required custom modifiers, such as <xref:System.Runtime.CompilerServices.IsConst>, use the <xref:System.Reflection.Emit.MethodBuilder.SetSignature%28System.Type%2CSystem.Type%5B%5D%2CSystem.Type%5B%5D%2CSystem.Type%5B%5D%2CSystem.Type%5B%5D%5B%5D%2CSystem.Type%5B%5D%5B%5D%29> method overload.</span></span>  
  
 <span data-ttu-id="805d1-474">Durch Aufrufen dieser Methode wird ein Rückgabetyp ersetzt, der mit der <xref:System.Reflection.Emit.TypeBuilder.DefineMethod%2A?displayProperty=nameWithType>-Methode</span><span class="sxs-lookup"><span data-stu-id="805d1-474">Calling this method replaces a return type established using the <xref:System.Reflection.Emit.TypeBuilder.DefineMethod%2A?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="805d1-475">Im folgenden Codebeispiel wird die <xref:System.Reflection.Emit.MethodBuilder.DefineGenericParameters%2A>-Methode verwendet, um eine Methode als generisch zu gestalten.</span><span class="sxs-lookup"><span data-stu-id="805d1-475">The following code example uses the <xref:System.Reflection.Emit.MethodBuilder.DefineGenericParameters%2A> method to make a method generic.</span></span> <span data-ttu-id="805d1-476">Die <xref:System.Reflection.Emit.MethodBuilder.SetParameters%2A>-Methode wird verwendet, um der Methode einen Parameter zuzuweisen, dessen Typ durch den ersten generischen Typparameter angegeben wird.</span><span class="sxs-lookup"><span data-stu-id="805d1-476">The <xref:System.Reflection.Emit.MethodBuilder.SetParameters%2A> method is used to give the method one parameter, whose type will be specified by the first generic type parameter.</span></span> <span data-ttu-id="805d1-477">Die <xref:System.Reflection.Emit.MethodBuilder.SetReturnType%2A>-Methode wird verwendet, um der Methode einen Rückgabetyp zuzuweisen, der durch den zweiten generischen Typparameter angegeben wird.</span><span class="sxs-lookup"><span data-stu-id="805d1-477">The <xref:System.Reflection.Emit.MethodBuilder.SetReturnType%2A> method is used to give the method a return type, specified by the second generic type parameter.</span></span>  
  
 <span data-ttu-id="805d1-478">Dieser Code ist Teil eines größeren Beispiels, das für die <xref:System.Reflection.Emit.MethodBuilder.DefineGenericParameters%2A>-Methode bereitgestellt wird.</span><span class="sxs-lookup"><span data-stu-id="805d1-478">This code is part of a larger example provided for the <xref:System.Reflection.Emit.MethodBuilder.DefineGenericParameters%2A> method.</span></span>  
  
 [!code-cpp[GenericMethodBuilder#3](~/samples/snippets/cpp/VS_Snippets_CLR/GenericMethodBuilder/cpp/source.cpp#3)]
 [!code-csharp[GenericMethodBuilder#3](~/samples/snippets/csharp/VS_Snippets_CLR/GenericMethodBuilder/CS/source.cs#3)]
 [!code-vb[GenericMethodBuilder#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/GenericMethodBuilder/VB/source.vb#3)]  
[!code-cpp[GenericMethodBuilder#5](~/samples/snippets/cpp/VS_Snippets_CLR/GenericMethodBuilder/cpp/source.cpp#5)]
[!code-csharp[GenericMethodBuilder#5](~/samples/snippets/csharp/VS_Snippets_CLR/GenericMethodBuilder/CS/source.cs#5)]
[!code-vb[GenericMethodBuilder#5](~/samples/snippets/visualbasic/VS_Snippets_CLR/GenericMethodBuilder/VB/source.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="805d1-479">Die aktuelle Methode ist generisch, die Methodendefinition ist aber nicht generisch.</span><span class="sxs-lookup"><span data-stu-id="805d1-479">The current method is generic, but is not a generic method definition.</span></span> <span data-ttu-id="805d1-480">Das bedeutet, die <see cref="P:System.Reflection.Emit.MethodBuilder.IsGenericMethod" />-Eigenschaft ist <see langword="true" />, aber die <see cref="P:System.Reflection.Emit.MethodBuilder.IsGenericMethodDefinition" />-Eigenschaft ist <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="805d1-480">That is, the <see cref="P:System.Reflection.Emit.MethodBuilder.IsGenericMethod" /> property is <see langword="true" />, but the <see cref="P:System.Reflection.Emit.MethodBuilder.IsGenericMethodDefinition" /> property is <see langword="false" />.</span></span></exception>
        <altmember cref="M:System.Reflection.Emit.MethodBuilder.SetParameters(System.Type[])" />
        <related type="Article" href="~/docs/framework/reflection-and-codedom/how-to-define-a-generic-method-with-reflection-emit.md"><span data-ttu-id="805d1-481">Gewusst wie: Definieren einer generischen Methode mit Reflektionsausgabe</span><span class="sxs-lookup"><span data-stu-id="805d1-481">How to: Define a Generic Method with Reflection Emit</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="SetSignature">
      <MemberSignature Language="C#" Value="public void SetSignature (Type returnType, Type[] returnTypeRequiredCustomModifiers, Type[] returnTypeOptionalCustomModifiers, Type[] parameterTypes, Type[][] parameterTypeRequiredCustomModifiers, Type[][] parameterTypeOptionalCustomModifiers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetSignature(class System.Type returnType, class System.Type[] returnTypeRequiredCustomModifiers, class System.Type[] returnTypeOptionalCustomModifiers, class System.Type[] parameterTypes, class System.Type[][] parameterTypeRequiredCustomModifiers, class System.Type[][] parameterTypeOptionalCustomModifiers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.MethodBuilder.SetSignature(System.Type,System.Type[],System.Type[],System.Type[],System.Type[][],System.Type[][])" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetSignature (returnType As Type, returnTypeRequiredCustomModifiers As Type(), returnTypeOptionalCustomModifiers As Type(), parameterTypes As Type(), parameterTypeRequiredCustomModifiers As Type()(), parameterTypeOptionalCustomModifiers As Type()())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetSignature(Type ^ returnType, cli::array &lt;Type ^&gt; ^ returnTypeRequiredCustomModifiers, cli::array &lt;Type ^&gt; ^ returnTypeOptionalCustomModifiers, cli::array &lt;Type ^&gt; ^ parameterTypes, cli::array &lt;cli::array &lt;Type ^&gt; ^&gt; ^ parameterTypeRequiredCustomModifiers, cli::array &lt;cli::array &lt;Type ^&gt; ^&gt; ^ parameterTypeOptionalCustomModifiers);" />
      <MemberSignature Language="F#" Value="member this.SetSignature : Type * Type[] * Type[] * Type[] * Type[][] * Type[][] -&gt; unit" Usage="methodBuilder.SetSignature (returnType, returnTypeRequiredCustomModifiers, returnTypeOptionalCustomModifiers, parameterTypes, parameterTypeRequiredCustomModifiers, parameterTypeOptionalCustomModifiers)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="returnType" Type="System.Type" Index="0" FrameworkAlternate="net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="returnTypeRequiredCustomModifiers" Type="System.Type[]" Index="1" FrameworkAlternate="net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="returnTypeOptionalCustomModifiers" Type="System.Type[]" Index="2" FrameworkAlternate="net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="parameterTypes" Type="System.Type[]" Index="3" FrameworkAlternate="net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="parameterTypeRequiredCustomModifiers" Type="System.Type[][]" Index="4" FrameworkAlternate="net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="parameterTypeOptionalCustomModifiers" Type="System.Type[][]" Index="5" FrameworkAlternate="net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="returnType"><span data-ttu-id="805d1-482">Der Rückgabetyp der Methode.</span><span class="sxs-lookup"><span data-stu-id="805d1-482">The return type of the method.</span></span></param>
        <param name="returnTypeRequiredCustomModifiers"><span data-ttu-id="805d1-483">Ein Array von Typen, die die erforderlichen benutzerdefinierten Modifizierer, etwa <see cref="T:System.Runtime.CompilerServices.IsConst" />, für den Rückgabetyp der Methode darstellen.</span><span class="sxs-lookup"><span data-stu-id="805d1-483">An array of types representing the required custom modifiers, such as <see cref="T:System.Runtime.CompilerServices.IsConst" />, for the return type of the method.</span></span> <span data-ttu-id="805d1-484">Wenn der Rückgabetyp keine erforderlichen benutzerdefinierten Modifizierer hat, geben Sie <see langword="null" /> an.</span><span class="sxs-lookup"><span data-stu-id="805d1-484">If the return type has no required custom modifiers, specify <see langword="null" />.</span></span></param>
        <param name="returnTypeOptionalCustomModifiers"><span data-ttu-id="805d1-485">Ein Array von Typen, die die optionalen benutzerdefinierten Modifizierer, etwa <see cref="T:System.Runtime.CompilerServices.IsConst" />, für den Rückgabetyp der Methode darstellen.</span><span class="sxs-lookup"><span data-stu-id="805d1-485">An array of types representing the optional custom modifiers, such as <see cref="T:System.Runtime.CompilerServices.IsConst" />, for the return type of the method.</span></span> <span data-ttu-id="805d1-486">Wenn der Rückgabetyp keine optionalen benutzerdefinierten Modifizierer hat, geben Sie <see langword="null" /> an.</span><span class="sxs-lookup"><span data-stu-id="805d1-486">If the return type has no optional custom modifiers, specify <see langword="null" />.</span></span></param>
        <param name="parameterTypes"><span data-ttu-id="805d1-487">Die Typen der Parameter der Methode.</span><span class="sxs-lookup"><span data-stu-id="805d1-487">The types of the parameters of the method.</span></span></param>
        <param name="parameterTypeRequiredCustomModifiers"><span data-ttu-id="805d1-488">Ein Array mit Arrays von Typen.</span><span class="sxs-lookup"><span data-stu-id="805d1-488">An array of arrays of types.</span></span> <span data-ttu-id="805d1-489">Jedes Array von Typen stellt die erforderlichen benutzerdefinierten Modifizierer für den entsprechenden Parameter dar, z. B. <see cref="T:System.Runtime.CompilerServices.IsConst" />.</span><span class="sxs-lookup"><span data-stu-id="805d1-489">Each array of types represents the required custom modifiers for the corresponding parameter, such as <see cref="T:System.Runtime.CompilerServices.IsConst" />.</span></span> <span data-ttu-id="805d1-490">Wenn ein bestimmter Parameter keine erforderlichen benutzerdefinierten Modifizierer hat, geben Sie <see langword="null" /> anstelle eines Arrays von Typen an.</span><span class="sxs-lookup"><span data-stu-id="805d1-490">If a particular parameter has no required custom modifiers, specify <see langword="null" /> instead of an array of types.</span></span> <span data-ttu-id="805d1-491">Wenn keiner der Parameter erforderliche benutzerdefinierte Modifizierer hat, geben Sie <see langword="null" /> anstelle eines Arrays mit Arrays an.</span><span class="sxs-lookup"><span data-stu-id="805d1-491">If none of the parameters have required custom modifiers, specify <see langword="null" /> instead of an array of arrays.</span></span></param>
        <param name="parameterTypeOptionalCustomModifiers"><span data-ttu-id="805d1-492">Ein Array mit Arrays von Typen.</span><span class="sxs-lookup"><span data-stu-id="805d1-492">An array of arrays of types.</span></span> <span data-ttu-id="805d1-493">Jedes Array von Typen stellt die optionalen benutzerdefinierten Modifizierer für den entsprechenden Parameter dar, z. B. <see cref="T:System.Runtime.CompilerServices.IsConst" />.</span><span class="sxs-lookup"><span data-stu-id="805d1-493">Each array of types represents the optional custom modifiers for the corresponding parameter, such as <see cref="T:System.Runtime.CompilerServices.IsConst" />.</span></span> <span data-ttu-id="805d1-494">Wenn ein bestimmter Parameter keine optionalen benutzerdefinierten Modifizierer hat, geben Sie <see langword="null" /> anstelle eines Arrays von Typen an.</span><span class="sxs-lookup"><span data-stu-id="805d1-494">If a particular parameter has no optional custom modifiers, specify <see langword="null" /> instead of an array of types.</span></span> <span data-ttu-id="805d1-495">Wenn keiner der Parameter optionale benutzerdefinierte Modifizierer hat, geben Sie <see langword="null" /> anstelle eines Arrays mit Arrays an.</span><span class="sxs-lookup"><span data-stu-id="805d1-495">If none of the parameters have optional custom modifiers, specify <see langword="null" /> instead of an array of arrays.</span></span></param>
        <summary><span data-ttu-id="805d1-496">Legt die Methodensignatur fest, einschließlich des Rückgabetyps, der Parametertypen und der erforderlichen und optionalen benutzerdefinierten Modifizierer für den Rückgabetyp und die Parametertypen.</span><span class="sxs-lookup"><span data-stu-id="805d1-496">Sets the method signature, including the return type, the parameter types, and the required and optional custom modifiers of the return type and parameter types.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="805d1-497">Wenn der Rückgabetyp und die Anzahl und Typen der Parameter bekannt sind, wenn die Methode definiert ist, können Sie mithilfe einer beliebigen Überladung der <xref:System.Reflection.Emit.TypeBuilder.DefineMethod%2A?displayProperty=nameWithType> Methode eingerichtet werden, die ein Array von Parametertypen akzeptiert.</span><span class="sxs-lookup"><span data-stu-id="805d1-497">If the return type and the number and types of the parameters are known when the method is defined, they can be established using any overload of the <xref:System.Reflection.Emit.TypeBuilder.DefineMethod%2A?displayProperty=nameWithType> method that accepts an array of parameter types.</span></span> <span data-ttu-id="805d1-498">Eine generische Methode kann jedoch über Parameter verfügen, deren Typen von mindestens einem eigenen generischen Typparameter angegeben werden, der erst definiert werden kann, nachdem die-Methode definiert wurde.</span><span class="sxs-lookup"><span data-stu-id="805d1-498">However, a generic method can have parameters whose types are specified by one or more of its own generic type parameters, which cannot be defined until after the method has been defined.</span></span> <span data-ttu-id="805d1-499">Verwenden Sie diese Methode, um die Parametertypen in diesem Fall festzulegen.</span><span class="sxs-lookup"><span data-stu-id="805d1-499">Use this method to set the parameter types in that case.</span></span>  
  
 <span data-ttu-id="805d1-500">Wenn weder der Rückgabetyp noch die Parametertypen über optionale oder erforderliche benutzerdefinierte Modifizierer verfügen, z. b. <xref:Microsoft.VisualC.IsConstModifier>, können Sie die Methoden <xref:System.Reflection.Emit.MethodBuilder.SetReturnType%2A> und <xref:System.Reflection.Emit.MethodBuilder.SetParameters%2A> verwenden.</span><span class="sxs-lookup"><span data-stu-id="805d1-500">If neither the return type nor the parameter types have optional or required custom modifiers, such as <xref:Microsoft.VisualC.IsConstModifier>, you can use the <xref:System.Reflection.Emit.MethodBuilder.SetReturnType%2A> and <xref:System.Reflection.Emit.MethodBuilder.SetParameters%2A> methods.</span></span>  
  
 <span data-ttu-id="805d1-501">Durch den Aufruf dieser Methode werden die Parameter und der Rückgabetyp ersetzt, die mit der <xref:System.Reflection.Emit.TypeBuilder.DefineMethod%2A?displayProperty=nameWithType>-Methode</span><span class="sxs-lookup"><span data-stu-id="805d1-501">Calling this method replaces the parameters and return type established using the <xref:System.Reflection.Emit.TypeBuilder.DefineMethod%2A?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="805d1-502">Das folgende Codebeispiel enthält Quellcode für eine generische Klasse namens Sample mit einem Typparameter `T`.</span><span class="sxs-lookup"><span data-stu-id="805d1-502">The following code example contains source code for a generic class named Sample that has a type parameter `T`.</span></span> <span data-ttu-id="805d1-503">Die-Klasse verfügt über ein Feld mit dem Namen `Field`vom Typ `T`und eine generische Methode `GM` mit einem eigenen Typparameter, `U`.</span><span class="sxs-lookup"><span data-stu-id="805d1-503">The class has a field named `Field`, of type `T`, and a generic method `GM` with its own type parameter, `U`.</span></span> <span data-ttu-id="805d1-504">Die-Methode `GM` erstellt eine Instanz von Sample, ersetzt den Typparameter von Sample `U` durch einen eigenen Typparameter und speichert den Eingabeparameter in `Field`.</span><span class="sxs-lookup"><span data-stu-id="805d1-504">Method `GM` creates an instance of Sample, substituting its own type parameter `U` for the type parameter of Sample, and stores its input parameter in `Field`.</span></span> <span data-ttu-id="805d1-505">Dieser Quellcode ist kompiliert, wird aber nicht verwendet. Sie können es mit dem [Ildasm. exe (IL-Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md)anzeigen und mit dem Code vergleichen, der von der Klasse `Example`ausgegeben wird.</span><span class="sxs-lookup"><span data-stu-id="805d1-505">This source code is compiled but not used; you can view it with the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), and compare it to the code emitted by class `Example`.</span></span>  
  
 <span data-ttu-id="805d1-506">Der Code in der Klasse `Example` veranschaulicht die Verwendung der <xref:System.Reflection.Emit.MethodBuilder.SetSignature%2A>-Methode beim Ausgeben von generischem Code.</span><span class="sxs-lookup"><span data-stu-id="805d1-506">The code in class `Example` demonstrates the use of the <xref:System.Reflection.Emit.MethodBuilder.SetSignature%2A> method in emitting generic code.</span></span> <span data-ttu-id="805d1-507">Die `Main`-Methode der-Klasse `Example` erstellt eine dynamische Assembly, die eine Klasse mit dem Namen `Sample`enthält, und verwendet die <xref:System.Reflection.Emit.TypeBuilder.DefineGenericParameters%2A?displayProperty=nameWithType>-Methode, um Sie durch Hinzufügen eines Typparameters namens `T`generisch zu machen.</span><span class="sxs-lookup"><span data-stu-id="805d1-507">The `Main` method of class `Example` creates a dynamic assembly containing a class named `Sample`, and uses the <xref:System.Reflection.Emit.TypeBuilder.DefineGenericParameters%2A?displayProperty=nameWithType> method to make it generic by adding a type parameter named `T`.</span></span> <span data-ttu-id="805d1-508">Ein Parameter loser Konstruktor und ein Feld mit dem Namen `Field`vom Typ `T`werden der Klasse `Sample`hinzugefügt.</span><span class="sxs-lookup"><span data-stu-id="805d1-508">A parameterless constructor and a field named `Field`, of type `T`, are added to class `Sample`.</span></span> <span data-ttu-id="805d1-509">Eine Methode `GM` wird hinzugefügt und mit der <xref:System.Reflection.Emit.MethodBuilder.DefineGenericParameters%2A>-Methode in eine generische Methode umgewandelt.</span><span class="sxs-lookup"><span data-stu-id="805d1-509">A method `GM` is added, and turned into a generic method using the <xref:System.Reflection.Emit.MethodBuilder.DefineGenericParameters%2A> method.</span></span> <span data-ttu-id="805d1-510">Der Typparameter von `GM` hat den Namen `U`.</span><span class="sxs-lookup"><span data-stu-id="805d1-510">The type parameter of `GM` is named `U`.</span></span> <span data-ttu-id="805d1-511">Nachdem der Typparameter definiert wurde, wird die Signatur von `GM` mithilfe der <xref:System.Reflection.Emit.MethodBuilder.SetSignature%2A>-Methode hinzugefügt.</span><span class="sxs-lookup"><span data-stu-id="805d1-511">Once the type parameter is defined, the signature of `GM` is added, using the <xref:System.Reflection.Emit.MethodBuilder.SetSignature%2A> method.</span></span> <span data-ttu-id="805d1-512">Es gibt keinen Rückgabetyp und keine erforderlichen oder benutzerdefinierten Modifizierer, sodass alle Parameter dieser Methode mit Ausnahme von `parameterTypes``null` werden, wodurch der Typ des einzigen Parameters der Methode festgelegt wird. Dies wird auf den Typparameter der Methode festgelegt, `U`.</span><span class="sxs-lookup"><span data-stu-id="805d1-512">There is no return type, and no required or custom modifiers, so all the parameters of this method are `null` except `parameterTypes`, which sets the type of the only parameter of the method; this is set to the method's type parameter, `U`.</span></span> <span data-ttu-id="805d1-513">Der Text der-Methode erstellt eine Instanz des konstruierten Typs `Sample<U>` (`Sample(Of U)` in Visual Basic), weist den-Parameter der Methode `Field`zu und gibt dann den Wert von `Field`aus.</span><span class="sxs-lookup"><span data-stu-id="805d1-513">The body of the method creates an instance of the constructed type `Sample<U>` (`Sample(Of U)` in Visual Basic), assigns the method's parameter to `Field`, and then prints the value of `Field`.</span></span> <span data-ttu-id="805d1-514">Es ist ein dummytyp definiert, der die Einstiegspunkt Methode `Main`enthalten soll.</span><span class="sxs-lookup"><span data-stu-id="805d1-514">A dummy type is defined, to hold the entry point method `Main`.</span></span> <span data-ttu-id="805d1-515">Im Hauptteil der `Main`wird die statische `GM`-Methode für den konstruierten generischen Typ `Sample<int>` aufgerufen (`Sample(Of Integer)` in Visual Basic), wobei der Typ <xref:System.String> `U`ersetzt.</span><span class="sxs-lookup"><span data-stu-id="805d1-515">In the body of `Main`, the static `GM` method is invoked on the constructed generic type `Sample<int>` (`Sample(Of Integer)` in Visual Basic), with type <xref:System.String> substituted for `U`.</span></span> <span data-ttu-id="805d1-516">Die <xref:System.Reflection.Emit.TypeBuilder.GetMethod%2A?displayProperty=nameWithType>-Methode wird verwendet, um eine <xref:System.Reflection.MethodInfo> für die statische `GM`-Methode des konstruierten generischen Typs `Sample<U>`zu erstellen. Anschließend wird die <xref:System.Reflection.MethodInfo.MakeGenericMethod%2A?displayProperty=nameWithType>-Methode verwendet, um eine <xref:System.Reflection.MethodInfo> zu erstellen, die in einem Methoden aufgerufenen ausgegeben werden kann.</span><span class="sxs-lookup"><span data-stu-id="805d1-516">The <xref:System.Reflection.Emit.TypeBuilder.GetMethod%2A?displayProperty=nameWithType> method is used to create a <xref:System.Reflection.MethodInfo> for the static `GM` method of the constructed generic type `Sample<U>`, and the <xref:System.Reflection.MethodInfo.MakeGenericMethod%2A?displayProperty=nameWithType> method is then used to create a <xref:System.Reflection.MethodInfo> that can emitted in a method call.</span></span>  
  
 <span data-ttu-id="805d1-517">Wenn das Codebeispiel ausgeführt wird, speichert es die ausgegebene Assembly als TypeBuilderGetFieldExample. exe.</span><span class="sxs-lookup"><span data-stu-id="805d1-517">When the code example is run, it saves the emitted assembly as TypeBuilderGetFieldExample.exe.</span></span> <span data-ttu-id="805d1-518">Sie können TypeBuilderGetFieldExample. exe ausführen, und Sie können den [Ildasm. exe (IL-Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md) verwenden, um den ausgegebenen Code mit dem Code für die `Sample` Klasse zu vergleichen, die in das Codebeispiel selbst kompiliert wird.</span><span class="sxs-lookup"><span data-stu-id="805d1-518">You can run TypeBuilderGetFieldExample.exe, and you can use the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md) to compare the emitted code with the code for the `Sample` class that is compiled into the code example itself.</span></span>  
  
 [!code-csharp[TypeBuilder.GetField_Generic#1](~/samples/snippets/csharp/VS_Snippets_CLR/TypeBuilder.GetField_Generic/cs/source.cs#1)]
 [!code-vb[TypeBuilder.GetField_Generic#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/TypeBuilder.GetField_Generic/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="805d1-519">Die aktuelle Methode ist generisch, die Methodendefinition ist aber nicht generisch.</span><span class="sxs-lookup"><span data-stu-id="805d1-519">The current method is generic, but is not a generic method definition.</span></span> <span data-ttu-id="805d1-520">Das bedeutet, die <see cref="P:System.Reflection.Emit.MethodBuilder.IsGenericMethod" />-Eigenschaft ist <see langword="true" />, aber die <see cref="P:System.Reflection.Emit.MethodBuilder.IsGenericMethodDefinition" />-Eigenschaft ist <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="805d1-520">That is, the <see cref="P:System.Reflection.Emit.MethodBuilder.IsGenericMethod" /> property is <see langword="true" />, but the <see cref="P:System.Reflection.Emit.MethodBuilder.IsGenericMethodDefinition" /> property is <see langword="false" />.</span></span></exception>
        <altmember cref="M:System.Reflection.Emit.MethodBuilder.SetReturnType(System.Type)" />
        <altmember cref="M:System.Reflection.Emit.MethodBuilder.SetParameters(System.Type[])" />
      </Docs>
    </Member>
    <Member MemberName="SetSymCustomAttribute">
      <MemberSignature Language="C#" Value="public void SetSymCustomAttribute (string name, byte[] data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetSymCustomAttribute(string name, unsigned int8[] data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.MethodBuilder.SetSymCustomAttribute(System.String,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetSymCustomAttribute (name As String, data As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetSymCustomAttribute(System::String ^ name, cli::array &lt;System::Byte&gt; ^ data);" />
      <MemberSignature Language="F#" Value="member this.SetSymCustomAttribute : string * byte[] -&gt; unit" Usage="methodBuilder.SetSymCustomAttribute (name, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
        <Parameter Name="data" Type="System.Byte[]" Index="1" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="805d1-521">Der Name des symbolischen benutzerdefinierten Attributs.</span><span class="sxs-lookup"><span data-stu-id="805d1-521">The name of the symbolic custom attribute.</span></span></param>
        <param name="data"><span data-ttu-id="805d1-522">Das Byte-BLOB, das den Wert des symbolischen benutzerdefinierten Attributs darstellt.</span><span class="sxs-lookup"><span data-stu-id="805d1-522">The byte blob that represents the value of the symbolic custom attribute.</span></span></param>
        <summary><span data-ttu-id="805d1-523">Legen Sie ein symbolisches benutzerdefiniertes Attribut mithilfe eines BLOBs fest.</span><span class="sxs-lookup"><span data-stu-id="805d1-523">Set a symbolic custom attribute using a blob.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="805d1-524">Im Gegensatz zum benutzerdefinierten Metadatenattribut ist dieses benutzerdefinierte Attribut einem Symbolwriter zugeordnet.</span><span class="sxs-lookup"><span data-stu-id="805d1-524">Unlike the metadata custom attribute, this custom attribute is associated with a symbol writer.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="805d1-525">Das folgende Codebeispiel veranschaulicht die kontextbezogene Verwendung der `SetSymCustomAttribute`-Methode zum Festlegen der Byte Werte für den Namen und den Schlüssel eines benutzerdefinierten Attributs, das an eine Methode angefügt ist.</span><span class="sxs-lookup"><span data-stu-id="805d1-525">The code sample below illustrates the contextual usage of the `SetSymCustomAttribute` method to set the byte values for the name and key of a custom attribute attached to a method.</span></span>  
  
 [!code-cpp[System.Reflection.Emit.MethodBuilder.SetSymCustomAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Reflection.Emit.MethodBuilder.SetSymCustomAttribute Example/CPP/source2.cpp#1)]
 [!code-csharp[System.Reflection.Emit.MethodBuilder.SetSymCustomAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Reflection.Emit.MethodBuilder.SetSymCustomAttribute Example/CS/source2.cs#1)]
 [!code-vb[System.Reflection.Emit.MethodBuilder.SetSymCustomAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Reflection.Emit.MethodBuilder.SetSymCustomAttribute Example/VB/source2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="805d1-526">Der enthaltende Typ wurde zuvor mit <see cref="M:System.Reflection.Emit.TypeBuilder.CreateType" /> erstellt.</span><span class="sxs-lookup"><span data-stu-id="805d1-526">The containing type was previously created using <see cref="M:System.Reflection.Emit.TypeBuilder.CreateType" />.</span></span>  
  
<span data-ttu-id="805d1-527">Oder</span><span class="sxs-lookup"><span data-stu-id="805d1-527">-or-</span></span> 
<span data-ttu-id="805d1-528">Das Modul, das diese Methode enthält, ist kein Debugmodul.</span><span class="sxs-lookup"><span data-stu-id="805d1-528">The module that contains this method is not a debug module.</span></span>  
  
<span data-ttu-id="805d1-529">Oder</span><span class="sxs-lookup"><span data-stu-id="805d1-529">-or-</span></span> 
<span data-ttu-id="805d1-530">Für die aktuelle Methode ist die <see cref="P:System.Reflection.Emit.MethodBuilder.IsGenericMethod" />-Eigenschaft <see langword="true" />, aber die <see cref="P:System.Reflection.Emit.MethodBuilder.IsGenericMethodDefinition" />-Eigenschaft ist <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="805d1-530">For the current method, the <see cref="P:System.Reflection.Emit.MethodBuilder.IsGenericMethod" /> property is <see langword="true" />, but the <see cref="P:System.Reflection.Emit.MethodBuilder.IsGenericMethodDefinition" /> property is <see langword="false" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Signature">
      <MemberSignature Language="C#" Value="public string Signature { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Signature" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.MethodBuilder.Signature" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Signature As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Signature { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Signature : string" Usage="System.Reflection.Emit.MethodBuilder.Signature" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="805d1-531">Ruft die Signatur der Methode ab.</span><span class="sxs-lookup"><span data-stu-id="805d1-531">Retrieves the signature of the method.</span></span></summary>
        <value><span data-ttu-id="805d1-532">Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="805d1-532">Read-only.</span></span> <span data-ttu-id="805d1-533">Eine Zeichenfolge mit der Signatur der Methode, die von dieser <see langword="MethodBase" />-Instanz reflektiert wird.</span><span class="sxs-lookup"><span data-stu-id="805d1-533">A String containing the signature of the method reflected by this <see langword="MethodBase" /> instance.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._MethodBuilder.GetIDsOfNames">
      <MemberSignature Language="C#" Value="void _MethodBuilder.GetIDsOfNames (ref Guid riid, IntPtr rgszNames, uint cNames, uint lcid, IntPtr rgDispId);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices._MethodBuilder.GetIDsOfNames([in]valuetype System.Guid&amp; riid, native int rgszNames, unsigned int32 cNames, unsigned int32 lcid, native int rgDispId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.MethodBuilder.System#Runtime#InteropServices#_MethodBuilder#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Sub GetIDsOfNames (ByRef riid As Guid, rgszNames As IntPtr, cNames As UInteger, lcid As UInteger, rgDispId As IntPtr) Implements _MethodBuilder.GetIDsOfNames" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices._MethodBuilder.GetIDsOfNames(Guid % riid, IntPtr rgszNames, System::UInt32 cNames, System::UInt32 lcid, IntPtr rgDispId) = System::Runtime::InteropServices::_MethodBuilder::GetIDsOfNames;" />
      <MemberSignature Language="F#" Value="abstract member System.Runtime.InteropServices._MethodBuilder.GetIDsOfNames : Guid * nativeint * uint32 * uint32 * nativeint -&gt; unit&#xA;override this.System.Runtime.InteropServices._MethodBuilder.GetIDsOfNames : Guid * nativeint * uint32 * uint32 * nativeint -&gt; unit" Usage="methodBuilder.System.Runtime.InteropServices._MethodBuilder.GetIDsOfNames (riid, rgszNames, cNames, lcid, rgDispId)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._MethodBuilder.GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="riid" Type="System.Guid" RefType="ref" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
        <Parameter Name="rgszNames" Type="System.IntPtr" Index="1" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
        <Parameter Name="cNames" Type="System.UInt32" Index="2" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
        <Parameter Name="lcid" Type="System.UInt32" Index="3" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
        <Parameter Name="rgDispId" Type="System.IntPtr" Index="4" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="riid"><span data-ttu-id="805d1-534">Für die zukünftige Verwendung reserviert.</span><span class="sxs-lookup"><span data-stu-id="805d1-534">Reserved for future use.</span></span> <span data-ttu-id="805d1-535">Muss IID_NULL sein.</span><span class="sxs-lookup"><span data-stu-id="805d1-535">Must be IID_NULL.</span></span></param>
        <param name="rgszNames"><span data-ttu-id="805d1-536">Das übergebene Array von zuzuordnenden Namen.</span><span class="sxs-lookup"><span data-stu-id="805d1-536">Passed-in array of names to be mapped.</span></span></param>
        <param name="cNames"><span data-ttu-id="805d1-537">Die Anzahl der zuzuordnenden Namen.</span><span class="sxs-lookup"><span data-stu-id="805d1-537">Count of the names to be mapped.</span></span></param>
        <param name="lcid"><span data-ttu-id="805d1-538">Der Gebietsschemakontext, in dem die Namen interpretiert werden sollen.</span><span class="sxs-lookup"><span data-stu-id="805d1-538">The locale context in which to interpret the names.</span></span></param>
        <param name="rgDispId"><span data-ttu-id="805d1-539">Das vom Aufrufer zugeordnete Array, das die IDs entsprechend den Namen empfängt.</span><span class="sxs-lookup"><span data-stu-id="805d1-539">Caller-allocated array that receives the IDs corresponding to the names.</span></span></param>
        <summary><span data-ttu-id="805d1-540">Ordnet eine Reihe von Namen einer entsprechenden Reihe von Dispatchbezeichnern zu.</span><span class="sxs-lookup"><span data-stu-id="805d1-540">Maps a set of names to a corresponding set of dispatch identifiers.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="805d1-541">Diese Methode ist für den Zugriff auf verwaltete Klassen aus nicht verwaltetem Code vorgesehen und sollte nicht aus verwaltetem Code aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="805d1-541">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span> <span data-ttu-id="805d1-542">Weitere Informationen zu `IDispatch::GetIDsOfNames`finden Sie in der MSDN Library.</span><span class="sxs-lookup"><span data-stu-id="805d1-542">For more information about `IDispatch::GetIDsOfNames`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="805d1-543">Spät gebundener Zugriff mithilfe der <c>IDispatch</c>-Schnittstelle in COM wird nicht unterstützt.</span><span class="sxs-lookup"><span data-stu-id="805d1-543">Late-bound access using the COM <c>IDispatch</c> interface is not supported.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._MethodBuilder.GetTypeInfo">
      <MemberSignature Language="C#" Value="void _MethodBuilder.GetTypeInfo (uint iTInfo, uint lcid, IntPtr ppTInfo);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices._MethodBuilder.GetTypeInfo(unsigned int32 iTInfo, unsigned int32 lcid, native int ppTInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.MethodBuilder.System#Runtime#InteropServices#_MethodBuilder#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Sub GetTypeInfo (iTInfo As UInteger, lcid As UInteger, ppTInfo As IntPtr) Implements _MethodBuilder.GetTypeInfo" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices._MethodBuilder.GetTypeInfo(System::UInt32 iTInfo, System::UInt32 lcid, IntPtr ppTInfo) = System::Runtime::InteropServices::_MethodBuilder::GetTypeInfo;" />
      <MemberSignature Language="F#" Value="abstract member System.Runtime.InteropServices._MethodBuilder.GetTypeInfo : uint32 * uint32 * nativeint -&gt; unit&#xA;override this.System.Runtime.InteropServices._MethodBuilder.GetTypeInfo : uint32 * uint32 * nativeint -&gt; unit" Usage="methodBuilder.System.Runtime.InteropServices._MethodBuilder.GetTypeInfo (iTInfo, lcid, ppTInfo)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._MethodBuilder.GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="iTInfo" Type="System.UInt32" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
        <Parameter Name="lcid" Type="System.UInt32" Index="1" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
        <Parameter Name="ppTInfo" Type="System.IntPtr" Index="2" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="iTInfo"><span data-ttu-id="805d1-544">Die zurückzugebenden Typinformationen.</span><span class="sxs-lookup"><span data-stu-id="805d1-544">The type information to return.</span></span></param>
        <param name="lcid"><span data-ttu-id="805d1-545">Der Gebietsschemabezeichner für die Typinformationen.</span><span class="sxs-lookup"><span data-stu-id="805d1-545">The locale identifier for the type information.</span></span></param>
        <param name="ppTInfo"><span data-ttu-id="805d1-546">Empfängt einen Zeiger auf das angeforderte Objekt mit den Typinformationen.</span><span class="sxs-lookup"><span data-stu-id="805d1-546">Receives a pointer to the requested type information object.</span></span></param>
        <summary><span data-ttu-id="805d1-547">Ruft die Typinformationen für ein Objekt ab, die dann zum Abrufen der Typinformationen für eine Schnittstelle verwendet werden können.</span><span class="sxs-lookup"><span data-stu-id="805d1-547">Retrieves the type information for an object, which can then be used to get the type information for an interface.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="805d1-548">Diese Methode ist für den Zugriff auf verwaltete Klassen aus nicht verwaltetem Code vorgesehen und sollte nicht aus verwaltetem Code aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="805d1-548">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span> <span data-ttu-id="805d1-549">Weitere Informationen zu `IDispatch::GetTypeInfo`finden Sie in der MSDN Library.</span><span class="sxs-lookup"><span data-stu-id="805d1-549">For more information about `IDispatch::GetTypeInfo`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="805d1-550">Spät gebundener Zugriff mithilfe der <c>IDispatch</c>-Schnittstelle in COM wird nicht unterstützt.</span><span class="sxs-lookup"><span data-stu-id="805d1-550">Late-bound access using the COM <c>IDispatch</c> interface is not supported.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._MethodBuilder.GetTypeInfoCount">
      <MemberSignature Language="C#" Value="void _MethodBuilder.GetTypeInfoCount (out uint pcTInfo);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices._MethodBuilder.GetTypeInfoCount([out] unsigned int32&amp; pcTInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.MethodBuilder.System#Runtime#InteropServices#_MethodBuilder#GetTypeInfoCount(System.UInt32@)" />
      <MemberSignature Language="VB.NET" Value="Sub GetTypeInfoCount (ByRef pcTInfo As UInteger) Implements _MethodBuilder.GetTypeInfoCount" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices._MethodBuilder.GetTypeInfoCount([Runtime::InteropServices::Out] System::UInt32 % pcTInfo) = System::Runtime::InteropServices::_MethodBuilder::GetTypeInfoCount;" />
      <MemberSignature Language="F#" Value="abstract member System.Runtime.InteropServices._MethodBuilder.GetTypeInfoCount : uint32 -&gt; unit&#xA;override this.System.Runtime.InteropServices._MethodBuilder.GetTypeInfoCount : uint32 -&gt; unit" Usage="methodBuilder.System.Runtime.InteropServices._MethodBuilder.GetTypeInfoCount pcTInfo" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._MethodBuilder.GetTypeInfoCount(System.UInt32@)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pcTInfo" Type="System.UInt32" RefType="out" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="pcTInfo"><span data-ttu-id="805d1-551">Zeigt auf einen Speicherort, der die Anzahl der Schnittstellen mit Typinformationen empfängt, die vom Objekt bereitgestellt werden.</span><span class="sxs-lookup"><span data-stu-id="805d1-551">Points to a location that receives the number of type information interfaces provided by the object.</span></span></param>
        <summary><span data-ttu-id="805d1-552">Ruft die Anzahl der Schnittstellen mit Typinformationen ab, die von einem Objekt bereitgestellt werden (0 oder 1).</span><span class="sxs-lookup"><span data-stu-id="805d1-552">Retrieves the number of type information interfaces that an object provides (either 0 or 1).</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="805d1-553">Diese Methode ist für den Zugriff auf verwaltete Klassen aus nicht verwaltetem Code vorgesehen und sollte nicht aus verwaltetem Code aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="805d1-553">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span> <span data-ttu-id="805d1-554">Weitere Informationen zu `IDispatch::GetTypeInfoCount`finden Sie in der MSDN Library.</span><span class="sxs-lookup"><span data-stu-id="805d1-554">For more information about `IDispatch::GetTypeInfoCount`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="805d1-555">Spät gebundener Zugriff mithilfe der <c>IDispatch</c>-Schnittstelle in COM wird nicht unterstützt.</span><span class="sxs-lookup"><span data-stu-id="805d1-555">Late-bound access using the COM <c>IDispatch</c> interface is not supported.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._MethodBuilder.Invoke">
      <MemberSignature Language="C#" Value="void _MethodBuilder.Invoke (uint dispIdMember, ref Guid riid, uint lcid, short wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices._MethodBuilder.Invoke(unsigned int32 dispIdMember, [in]valuetype System.Guid&amp; riid, unsigned int32 lcid, int16 wFlags, native int pDispParams, native int pVarResult, native int pExcepInfo, native int puArgErr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.MethodBuilder.System#Runtime#InteropServices#_MethodBuilder#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Sub Invoke (dispIdMember As UInteger, ByRef riid As Guid, lcid As UInteger, wFlags As Short, pDispParams As IntPtr, pVarResult As IntPtr, pExcepInfo As IntPtr, puArgErr As IntPtr) Implements _MethodBuilder.Invoke" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices._MethodBuilder.Invoke(System::UInt32 dispIdMember, Guid % riid, System::UInt32 lcid, short wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr) = System::Runtime::InteropServices::_MethodBuilder::Invoke;" />
      <MemberSignature Language="F#" Value="abstract member System.Runtime.InteropServices._MethodBuilder.Invoke : uint32 * Guid * uint32 * int16 * nativeint * nativeint * nativeint * nativeint -&gt; unit&#xA;override this.System.Runtime.InteropServices._MethodBuilder.Invoke : uint32 * Guid * uint32 * int16 * nativeint * nativeint * nativeint * nativeint -&gt; unit" Usage="methodBuilder.System.Runtime.InteropServices._MethodBuilder.Invoke (dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._MethodBuilder.Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dispIdMember" Type="System.UInt32" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
        <Parameter Name="riid" Type="System.Guid" RefType="ref" Index="1" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
        <Parameter Name="lcid" Type="System.UInt32" Index="2" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
        <Parameter Name="wFlags" Type="System.Int16" Index="3" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
        <Parameter Name="pDispParams" Type="System.IntPtr" Index="4" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
        <Parameter Name="pVarResult" Type="System.IntPtr" Index="5" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
        <Parameter Name="pExcepInfo" Type="System.IntPtr" Index="6" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
        <Parameter Name="puArgErr" Type="System.IntPtr" Index="7" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="dispIdMember"><span data-ttu-id="805d1-556">Bezeichnet den Member.</span><span class="sxs-lookup"><span data-stu-id="805d1-556">Identifies the member.</span></span></param>
        <param name="riid"><span data-ttu-id="805d1-557">Für die zukünftige Verwendung reserviert.</span><span class="sxs-lookup"><span data-stu-id="805d1-557">Reserved for future use.</span></span> <span data-ttu-id="805d1-558">Muss IID_NULL sein.</span><span class="sxs-lookup"><span data-stu-id="805d1-558">Must be IID_NULL.</span></span></param>
        <param name="lcid"><span data-ttu-id="805d1-559">Der Gebietsschemakontext, in dem Argumente interpretiert werden sollen.</span><span class="sxs-lookup"><span data-stu-id="805d1-559">The locale context in which to interpret arguments.</span></span></param>
        <param name="wFlags"><span data-ttu-id="805d1-560">Flags, die den Kontext des Aufrufs beschreiben.</span><span class="sxs-lookup"><span data-stu-id="805d1-560">Flags describing the context of the call.</span></span></param>
        <param name="pDispParams"><span data-ttu-id="805d1-561">Ein Zeiger auf eine Struktur, die ein Array von Argumenten und ein Array von Argument-DISPIDs für benannte Argumente sowie Zähler für die Anzahl der Elemente in jedem Array enthält.</span><span class="sxs-lookup"><span data-stu-id="805d1-561">Pointer to a structure containing an array of arguments, an array of argument DispIDs for named arguments, and counts for the number of elements in the arrays.</span></span></param>
        <param name="pVarResult"><span data-ttu-id="805d1-562">Ein Verweis auf den Speicherort, an dem das Ergebnis gespeichert werden soll.</span><span class="sxs-lookup"><span data-stu-id="805d1-562">Pointer to the location where the result is to be stored.</span></span></param>
        <param name="pExcepInfo"><span data-ttu-id="805d1-563">Ein Zeiger auf eine Struktur mit Ausnahmeinformationen.</span><span class="sxs-lookup"><span data-stu-id="805d1-563">Pointer to a structure that contains exception information.</span></span></param>
        <param name="puArgErr"><span data-ttu-id="805d1-564">Der Index des ersten Arguments mit einem Fehler.</span><span class="sxs-lookup"><span data-stu-id="805d1-564">The index of the first argument that has an error.</span></span></param>
        <summary><span data-ttu-id="805d1-565">Stellt den Zugriff auf von einem Objekt verfügbar gemachte Eigenschaften und Methoden bereit.</span><span class="sxs-lookup"><span data-stu-id="805d1-565">Provides access to properties and methods exposed by an object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="805d1-566">Diese Methode ist für den Zugriff auf verwaltete Klassen aus nicht verwaltetem Code vorgesehen und sollte nicht aus verwaltetem Code aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="805d1-566">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span> <span data-ttu-id="805d1-567">Weitere Informationen zu `IDispatch::Invoke`finden Sie in der MSDN Library.</span><span class="sxs-lookup"><span data-stu-id="805d1-567">For more information about `IDispatch::Invoke`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="805d1-568">Spät gebundener Zugriff mithilfe der <c>IDispatch</c>-Schnittstelle in COM wird nicht unterstützt.</span><span class="sxs-lookup"><span data-stu-id="805d1-568">Late-bound access using the COM <c>IDispatch</c> interface is not supported.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.MethodBuilder.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="methodBuilder.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="805d1-569">Gibt diese <see langword="MethodBuilder" />-Instanz als Zeichenfolge zurück.</span><span class="sxs-lookup"><span data-stu-id="805d1-569">Returns this <see langword="MethodBuilder" /> instance as a string.</span></span></summary>
        <returns><span data-ttu-id="805d1-570">Gibt eine Zeichenfolge zurück, die den Namen, die Attribute, die Methodensignatur, die Ausnahmen und die lokale Signatur dieser Methode enthält, gefolgt vom aktuellen MSIL-Stream (Microsoft Intermediate Language).</span><span class="sxs-lookup"><span data-stu-id="805d1-570">Returns a string containing the name, attributes, method signature, exceptions, and local signature of this method followed by the current Microsoft intermediate language (MSIL) stream.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
