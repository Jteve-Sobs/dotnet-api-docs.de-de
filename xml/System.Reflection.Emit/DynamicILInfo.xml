<Type Name="DynamicILInfo" FullName="System.Reflection.Emit.DynamicILInfo">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="3fb2475d512306a7b04576fcbde93ad19af06c77" />
    <Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="11/17/2018" />
    <Meta Name="ms.locfileid" Value="51890033" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class DynamicILInfo" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DynamicILInfo extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Reflection.Emit.DynamicILInfo" />
  <TypeSignature Language="VB.NET" Value="Public Class DynamicILInfo" />
  <TypeSignature Language="C++ CLI" Value="public ref class DynamicILInfo" />
  <TypeSignature Language="F#" Value="type DynamicILInfo = class" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="27204-101">Stellt Unterstützung für eine alternative Vorgehensweise zum Generieren von MSIL (Microsoft Intermediate Language) und von Metadaten für eine dynamische Methode bereit. Dabei sind Methoden zum Erstellen von Token und zum Einfügen des Codes, Ausnahmenbehandlung sowie Signatur-BLOBs für lokale Variablen inbegriffen.</span>
      <span class="sxs-lookup">
        <span data-stu-id="27204-101">Provides support for alternative ways to generate the Microsoft intermediate language (MSIL) and metadata for a dynamic method, including methods for creating tokens and for inserting the code, exception handling, and local variable signature blobs.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="27204-102">Die <xref:System.Reflection.Emit.DynamicILInfo> Klasse können Entwickler ihre eigenen anstelle von MSIL-Generatoren schreiben <xref:System.Reflection.Emit.ILGenerator>.</span><span class="sxs-lookup"><span data-stu-id="27204-102">The <xref:System.Reflection.Emit.DynamicILInfo> class allows developers to write their own MSIL generators instead of using <xref:System.Reflection.Emit.ILGenerator>.</span></span>  
  
 <span data-ttu-id="27204-103">Zum Erstellen von Instanzen anderer Typen Aufrufen von Methoden und So weiter, muss die von Ihnen generierte MSIL-Token für diese Entitäten enthalten.</span><span class="sxs-lookup"><span data-stu-id="27204-103">To create instances of other types, call methods, and so on, the MSIL you generate must include tokens for those entities.</span></span> <span data-ttu-id="27204-104">Die <xref:System.Reflection.Emit.DynamicILInfo> Klasse bietet mehrere Überladungen der der <xref:System.Reflection.Emit.DynamicILInfo.GetTokenFor%2A> -Methode, die Token im Gültigkeitsbereich des aktuellen gültigen zurückgeben <xref:System.Reflection.Emit.DynamicILInfo>.</span><span class="sxs-lookup"><span data-stu-id="27204-104">The <xref:System.Reflection.Emit.DynamicILInfo> class provides several overloads of the <xref:System.Reflection.Emit.DynamicILInfo.GetTokenFor%2A> method, which return tokens valid in the scope of the current <xref:System.Reflection.Emit.DynamicILInfo>.</span></span> <span data-ttu-id="27204-105">Angenommen, Sie müssen eine Überladung von Aufrufen der <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> -Methode, Sie erhalten eine <xref:System.RuntimeMethodHandle> für, die überladen, und übergeben es an der <xref:System.Reflection.Emit.DynamicILInfo.GetTokenFor%2A> Methode zum Abrufen eines Tokens zum Einbetten in die MSIL.</span><span class="sxs-lookup"><span data-stu-id="27204-105">For example, if you need to call an overload of the <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> method, you can obtain a <xref:System.RuntimeMethodHandle> for that overload and pass it to the <xref:System.Reflection.Emit.DynamicILInfo.GetTokenFor%2A> method to obtain a token to embed in your MSIL.</span></span>  
  
 <span data-ttu-id="27204-106">Nach der Erstellung <xref:System.Byte> Arrays für die lokale Variablensignatur, Ausnahmen und Codetext, können Sie die <xref:System.Reflection.Emit.DynamicILInfo.SetCode%2A>, <xref:System.Reflection.Emit.DynamicILInfo.SetExceptions%2A>, und <xref:System.Reflection.Emit.DynamicILInfo.SetLocalSignature%2A> Methoden zum Einfügen in die <xref:System.Reflection.Emit.DynamicMethod> zugeordneten Ihrer <xref:System.Reflection.Emit.DynamicILInfo> -Objekt.</span><span class="sxs-lookup"><span data-stu-id="27204-106">Once you have created <xref:System.Byte> arrays for your local variable signature, exceptions, and code body, you can use the <xref:System.Reflection.Emit.DynamicILInfo.SetCode%2A>, <xref:System.Reflection.Emit.DynamicILInfo.SetExceptions%2A>, and <xref:System.Reflection.Emit.DynamicILInfo.SetLocalSignature%2A> methods to insert them into the <xref:System.Reflection.Emit.DynamicMethod> associated with your <xref:System.Reflection.Emit.DynamicILInfo> object.</span></span>  
  
 <span data-ttu-id="27204-107">Generieren Ihre eigenen Metadaten und MSIL ist es erforderlich, mit der Common Language Infrastructure (CLI)-Dokumentation, insbesondere "Partition II: Metadata Definition and Semantics" und "Partition III: CIL Instruction Set".</span><span class="sxs-lookup"><span data-stu-id="27204-107">Generating your own metadata and MSIL requires familiarity with the Common Language Infrastructure (CLI) documentation, especially "Partition II: Metadata Definition and Semantics" and "Partition III: CIL Instruction Set".</span></span> <span data-ttu-id="27204-108">Die Dokumentation ist online verfügbar. Sie finden sie unter [ECMA C# and Common Language Infrastructure Standards (Standards von ECMA C# und Common Language Infrastructure)](https://go.microsoft.com/fwlink/?LinkID=99212) auf MSDN und [Standard ECMA-335 - Common Language Infrastructure (CLI) (Standard ECMA-335 – Common Language Infrastructure (CLI))](https://go.microsoft.com/fwlink/?LinkID=65552) auf der Ecma International-Website.</span><span class="sxs-lookup"><span data-stu-id="27204-108">The documentation is available online; see [ECMA C# and Common Language Infrastructure Standards](https://go.microsoft.com/fwlink/?LinkID=99212) on MSDN and [Standard ECMA-335 - Common Language Infrastructure (CLI)](https://go.microsoft.com/fwlink/?LinkID=65552) on the Ecma International Web site.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="27204-109">Verwenden Sie keine <xref:System.Reflection.Emit.DynamicILInfo> zum Generieren von Code, der einen Delegaten an eine andere dynamische Methode erstellt, durch den Konstruktor direkt aufrufen.</span><span class="sxs-lookup"><span data-stu-id="27204-109">Do not use <xref:System.Reflection.Emit.DynamicILInfo> to generate code that creates a delegate to another dynamic method by calling the delegate constructor directly.</span></span> <span data-ttu-id="27204-110">Verwenden Sie stattdessen die <xref:System.Reflection.Emit.DynamicMethod.CreateDelegate%2A> Methode, um den Delegaten zu erstellen.</span><span class="sxs-lookup"><span data-stu-id="27204-110">Instead, use the <xref:System.Reflection.Emit.DynamicMethod.CreateDelegate%2A> method to create the delegate.</span></span> <span data-ttu-id="27204-111">Einen Verweis auf die dynamische Methode kein Delegat, der mit dem Konstruktor erstellt wird.</span><span class="sxs-lookup"><span data-stu-id="27204-111">A delegate that is created with the delegate constructor does not have a reference to the target dynamic method.</span></span> <span data-ttu-id="27204-112">Die dynamische Methode kann durch die Garbagecollection freigegeben werden, während der Delegat weiterhin verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="27204-112">The dynamic method might be reclaimed by garbage collection while the delegate is still in use.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="DynamicMethod">
      <MemberSignature Language="C#" Value="public System.Reflection.Emit.DynamicMethod DynamicMethod { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.Emit.DynamicMethod DynamicMethod" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.DynamicILInfo.DynamicMethod" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DynamicMethod As DynamicMethod" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Reflection::Emit::DynamicMethod ^ DynamicMethod { System::Reflection::Emit::DynamicMethod ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DynamicMethod : System.Reflection.Emit.DynamicMethod" Usage="System.Reflection.Emit.DynamicILInfo.DynamicMethod" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.DynamicMethod</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="27204-113">Ruft die dynamische Methode ab, deren Text von der aktuellen Instanz generiert wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27204-113">Gets the dynamic method whose body is generated by the current instance.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="27204-114">Ein <see cref="T:System.Reflection.Emit.DynamicMethod" />-Objekt, das die dynamische Methode darstellt, für die das aktuelle <see cref="T:System.Reflection.Emit.DynamicILInfo" />-Objekt Code generiert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27204-114">A <see cref="T:System.Reflection.Emit.DynamicMethod" /> object representing the dynamic method for which the current <see cref="T:System.Reflection.Emit.DynamicILInfo" /> object is generating code.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="27204-115">Ein <xref:System.Reflection.Emit.DynamicILInfo> Objekt ist immer eine dynamische Methode zugeordnet.</span><span class="sxs-lookup"><span data-stu-id="27204-115">A <xref:System.Reflection.Emit.DynamicILInfo> object is always associated with a dynamic method.</span></span> <span data-ttu-id="27204-116">Der Zweck der <xref:System.Reflection.Emit.DynamicILInfo> Klasse ist eine weitere Möglichkeit, nach dem Einfügen von der MSIL-Stream, Ausnahmebehandlung und Signatur der lokalen Variablen in eine dynamische Methode für Entwickler, Generierung von MSIL ohne Verwendung der <xref:System.Reflection.Emit.ILGenerator> Klasse.</span><span class="sxs-lookup"><span data-stu-id="27204-116">The purpose of the <xref:System.Reflection.Emit.DynamicILInfo> class is to provide another way of inserting the MSIL stream, exception handling, and local variable signature into a dynamic method, for developers who want to generate MSIL without using the <xref:System.Reflection.Emit.ILGenerator> class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetTokenFor">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="27204-117">Ruft ein im Bereich der aktuellen <see cref="T:System.Reflection.Emit.DynamicILInfo" /> gültiges Token ab, das eine Zeichenfolge, ein Feld, eine Methode, einen Typ oder eine Signatur im MSIL-Stream für die zugeordnete dynamische Methode darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27204-117">Gets a token, valid in the scope of the current <see cref="T:System.Reflection.Emit.DynamicILInfo" />, representing a string, field, method, type, or signature in the MSIL stream for the associated dynamic method.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetTokenFor">
      <MemberSignature Language="C#" Value="public int GetTokenFor (byte[] signature);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetTokenFor(unsigned int8[] signature) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.DynamicILInfo.GetTokenFor(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTokenFor (signature As Byte()) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetTokenFor(cli::array &lt;System::Byte&gt; ^ signature);" />
      <MemberSignature Language="F#" Value="member this.GetTokenFor : byte[] -&gt; int" Usage="dynamicILInfo.GetTokenFor signature" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="signature" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="signature">
          <span data-ttu-id="27204-118">Ein Array, das die Signatur enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27204-118">An array that contains the signature.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="27204-119">Ruft ein im Bereich der aktuellen <see cref="T:System.Reflection.Emit.DynamicILInfo" /> gültiges Token ab, das die Signatur für die zugeordnete dynamische Methode darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27204-119">Gets a token, valid in the scope of the current <see cref="T:System.Reflection.Emit.DynamicILInfo" />, representing the signature for the associated dynamic method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="27204-120">Ein Token, das in die Metadaten und in den MSIL-Stream für die zugeordnete dynamische Methode eingebettet werden kann.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27204-120">A token that can be embedded in the metadata and the MSIL stream for the associated dynamic method.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="27204-121">Informationen zu Signatur-Blobs finden Sie in der Common Language Infrastructure (CLI)-Dokumentation, besonders in "Partition II: Metadata Definition and Semantics".</span><span class="sxs-lookup"><span data-stu-id="27204-121">For information on signature blobs, see the Common Language Infrastructure (CLI) documentation, especially "Partition II: Metadata Definition and Semantics".</span></span> <span data-ttu-id="27204-122">Die Dokumentation ist online verfügbar. Sie finden sie unter [ECMA C# and Common Language Infrastructure Standards (Standards von ECMA C# und Common Language Infrastructure)](https://go.microsoft.com/fwlink/?LinkID=99212) auf MSDN und [Standard ECMA-335 - Common Language Infrastructure (CLI) (Standard ECMA-335 – Common Language Infrastructure (CLI))](https://go.microsoft.com/fwlink/?LinkID=65552) auf der Ecma International-Website.</span><span class="sxs-lookup"><span data-stu-id="27204-122">The documentation is available online; see [ECMA C# and Common Language Infrastructure Standards](https://go.microsoft.com/fwlink/?LinkID=99212) on MSDN and [Standard ECMA-335 - Common Language Infrastructure (CLI)](https://go.microsoft.com/fwlink/?LinkID=65552) on the Ecma International Web site.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTokenFor">
      <MemberSignature Language="C#" Value="public int GetTokenFor (System.Reflection.Emit.DynamicMethod method);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetTokenFor(class System.Reflection.Emit.DynamicMethod method) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.DynamicILInfo.GetTokenFor(System.Reflection.Emit.DynamicMethod)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTokenFor (method As DynamicMethod) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetTokenFor(System::Reflection::Emit::DynamicMethod ^ method);" />
      <MemberSignature Language="F#" Value="member this.GetTokenFor : System.Reflection.Emit.DynamicMethod -&gt; int" Usage="dynamicILInfo.GetTokenFor method" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="method" Type="System.Reflection.Emit.DynamicMethod" />
      </Parameters>
      <Docs>
        <param name="method">
          <span data-ttu-id="27204-123">Die aufzurufende dynamische Methode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27204-123">The dynamic method to call.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="27204-124">Ruft ein im Bereich der aktuellen <see cref="T:System.Reflection.Emit.DynamicILInfo" /> gültiges Token ab, das eine aus der zugeordneten Methode aufzurufende dynamische Methode darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27204-124">Gets a token, valid in the scope of the current <see cref="T:System.Reflection.Emit.DynamicILInfo" />, representing a dynamic method to be called from the associated method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="27204-125">Ein Token, das in den MSIL-Stream für die zugeordnete dynamische Methode als Ziel einer MSIL-Anweisung eingebettet werden kann.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27204-125">A token that can be embedded in the MSIL stream for the associated dynamic method, as the target of an MSIL instruction.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="27204-126">Das vom Überladung Methode zurückgegebene Token können Sie eine dynamische Methode aufrufen, aus der dynamischen Methode verknüpft ist, mit dem aktuellen <xref:System.Reflection.Emit.DynamicILInfo> Objekt.</span><span class="sxs-lookup"><span data-stu-id="27204-126">The token returned by this method overload allows you to call a dynamic method from the dynamic method associated with the current <xref:System.Reflection.Emit.DynamicILInfo> object.</span></span> <span data-ttu-id="27204-127">Um die zugeordnete dynamische Methode rekursiv aufrufen, übergeben Sie den Wert des der <xref:System.Reflection.Emit.DynamicILInfo.DynamicMethod%2A> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="27204-127">To call the associated dynamic method recursively, pass the value of the <xref:System.Reflection.Emit.DynamicILInfo.DynamicMethod%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTokenFor">
      <MemberSignature Language="C#" Value="public int GetTokenFor (RuntimeFieldHandle field);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetTokenFor(valuetype System.RuntimeFieldHandle field) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.DynamicILInfo.GetTokenFor(System.RuntimeFieldHandle)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTokenFor (field As RuntimeFieldHandle) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetTokenFor(RuntimeFieldHandle field);" />
      <MemberSignature Language="F#" Value="member this.GetTokenFor : RuntimeFieldHandle -&gt; int" Usage="dynamicILInfo.GetTokenFor field" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="field" Type="System.RuntimeFieldHandle" />
      </Parameters>
      <Docs>
        <param name="field">
          <span data-ttu-id="27204-128">Das Feld, auf das zugegriffen werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27204-128">The field to be accessed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="27204-129">Ruft ein im Bereich der aktuellen <see cref="T:System.Reflection.Emit.DynamicILInfo" /> gültiges Token ab, das ein Feld darstellt, auf das aus der zugeordneten dynamischen Methode zugegriffen werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27204-129">Gets a token, valid in the scope of the current <see cref="T:System.Reflection.Emit.DynamicILInfo" />, representing a field to be accessed from the associated dynamic method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="27204-130">Ein Token im Bereich des aktuellen <see cref="T:System.Reflection.Emit.DynamicILInfo" />-Objekts, das als Operand einer MSIL-Anweisung verwendet werden kann, mit der auf Felder zugegriffen wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27204-130">A token that can be used as the operand of an MSIL instruction that accesses fields, in the scope of the current <see cref="T:System.Reflection.Emit.DynamicILInfo" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="27204-131">Benötigen Sie ein Token für jedes Feld, das von der dynamischen Methode verknüpft ist, mit dem aktuellen erfolgt <xref:System.Reflection.Emit.DynamicILInfo> Objekt.</span><span class="sxs-lookup"><span data-stu-id="27204-131">You must obtain a token for any field that will be accessed by the dynamic method associated with the current <xref:System.Reflection.Emit.DynamicILInfo> object.</span></span> <span data-ttu-id="27204-132">Verwenden der <xref:System.Type.GetField%2A?displayProperty=nameWithType> -Methode zum Abrufen einer <xref:System.Reflection.FieldInfo> für das Feld, das Sie zugreifen möchten, verwenden Sie dann die <xref:System.Reflection.FieldInfo.FieldHandle%2A> die abzurufende Eigenschaft der <xref:System.RuntimeFieldHandle>.</span><span class="sxs-lookup"><span data-stu-id="27204-132">Use the <xref:System.Type.GetField%2A?displayProperty=nameWithType> method to get a <xref:System.Reflection.FieldInfo> for the field you want to access, then use the <xref:System.Reflection.FieldInfo.FieldHandle%2A> property to get the <xref:System.RuntimeFieldHandle>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTokenFor">
      <MemberSignature Language="C#" Value="public int GetTokenFor (RuntimeMethodHandle method);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetTokenFor(valuetype System.RuntimeMethodHandle method) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.DynamicILInfo.GetTokenFor(System.RuntimeMethodHandle)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTokenFor (method As RuntimeMethodHandle) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetTokenFor(RuntimeMethodHandle method);" />
      <MemberSignature Language="F#" Value="member this.GetTokenFor : RuntimeMethodHandle -&gt; int" Usage="dynamicILInfo.GetTokenFor method" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="method" Type="System.RuntimeMethodHandle" />
      </Parameters>
      <Docs>
        <param name="method">
          <span data-ttu-id="27204-133">Die Methode, auf die zugegriffen werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27204-133">The method to be accessed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="27204-134">Ruft ein im Bereich der aktuellen <see cref="T:System.Reflection.Emit.DynamicILInfo" /> gültiges Token ab, das eine Methode darstellt, auf die aus der zugeordneten dynamischen Methode zugegriffen werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27204-134">Gets a token, valid in the scope of the current <see cref="T:System.Reflection.Emit.DynamicILInfo" />, representing a method to be accessed from the associated dynamic method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="27204-135">Ein Token im Bereich des aktuellen <see cref="F:System.Reflection.Emit.OpCodes.Call" />-Objekts, das als Operand einer MSIL-Anweisung verwendet werden kann, mit der auf Methoden zugegriffen wird, z. B. <see cref="F:System.Reflection.Emit.OpCodes.Ldtoken" /> oder <see cref="T:System.Reflection.Emit.DynamicILInfo" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27204-135">A token that can be used as the operand of an MSIL instruction that accesses methods, such as <see cref="F:System.Reflection.Emit.OpCodes.Call" /> or <see cref="F:System.Reflection.Emit.OpCodes.Ldtoken" />, in the scope of the current <see cref="T:System.Reflection.Emit.DynamicILInfo" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="27204-136">Benötigen Sie ein Token für jede Methode, die von der dynamischen Methode verknüpft ist, mit dem aktuellen erfolgt <xref:System.Reflection.Emit.DynamicILInfo> Objekt.</span><span class="sxs-lookup"><span data-stu-id="27204-136">You must obtain a token for any method that will be accessed by the dynamic method associated with the current <xref:System.Reflection.Emit.DynamicILInfo> object.</span></span> <span data-ttu-id="27204-137">Verwenden der <xref:System.Type.GetMethod%2A?displayProperty=nameWithType> -Methode zum Abrufen einer <xref:System.Reflection.MethodInfo> für die Methode, die Sie zugreifen möchten, und verwenden Sie dann die <xref:System.Reflection.MethodBase.MethodHandle%2A> die abzurufende Eigenschaft der <xref:System.RuntimeMethodHandle>.</span><span class="sxs-lookup"><span data-stu-id="27204-137">Use the <xref:System.Type.GetMethod%2A?displayProperty=nameWithType> method to get a <xref:System.Reflection.MethodInfo> for the method you want to access, and then use the <xref:System.Reflection.MethodBase.MethodHandle%2A> property to get the <xref:System.RuntimeMethodHandle>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="27204-138">Verwenden Sie für eine Methode, die auf einen generischen Typ gehört, die <xref:System.Reflection.Emit.DynamicILInfo.GetTokenFor%28System.RuntimeMethodHandle%2CSystem.RuntimeTypeHandle%29> methodenüberladung, und geben Sie einen <xref:System.RuntimeTypeHandle> für den generischen Typ.</span><span class="sxs-lookup"><span data-stu-id="27204-138">For a method that belongs to a generic type, use the <xref:System.Reflection.Emit.DynamicILInfo.GetTokenFor%28System.RuntimeMethodHandle%2CSystem.RuntimeTypeHandle%29> method overload and specify a <xref:System.RuntimeTypeHandle> for the generic type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTokenFor">
      <MemberSignature Language="C#" Value="public int GetTokenFor (RuntimeTypeHandle type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetTokenFor(valuetype System.RuntimeTypeHandle type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.DynamicILInfo.GetTokenFor(System.RuntimeTypeHandle)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTokenFor (type As RuntimeTypeHandle) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetTokenFor(RuntimeTypeHandle type);" />
      <MemberSignature Language="F#" Value="member this.GetTokenFor : RuntimeTypeHandle -&gt; int" Usage="dynamicILInfo.GetTokenFor type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.RuntimeTypeHandle" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="27204-139">Der zu verwendende Typ.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27204-139">The type to be used.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="27204-140">Ruft ein im Bereich der aktuellen <see cref="T:System.Reflection.Emit.DynamicILInfo" /> gültiges Token ab, das einen Typ darstellt, der in der zugeordneten dynamischen Methode verwendet werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27204-140">Gets a token, valid in the scope of the current <see cref="T:System.Reflection.Emit.DynamicILInfo" />, representing a type to be used in the associated dynamic method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="27204-141">Ein Token im Bereich des aktuellen <see cref="T:System.Reflection.Emit.DynamicILInfo" />-Objekts, das als Operand einer MSIL-Anweisung verwendet werden kann, die einen Typ erfordert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27204-141">A token that can be used as the operand of an MSIL instruction that requires a type, in the scope of the current <see cref="T:System.Reflection.Emit.DynamicILInfo" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="27204-142">Das vom Überladung Methode zurückgegebene Token können Sie definieren einen Typ der lokalen Variablen und Ausgeben von MSIL zum Erstellen von einer Instanz eines Typs in der dynamischen Methode verknüpft ist, mit dem aktuellen <xref:System.Reflection.Emit.DynamicILInfo> Objekt.</span><span class="sxs-lookup"><span data-stu-id="27204-142">The token returned by this method overload allows you to define a local variable type, and emit MSIL to create an instance of a type in the dynamic method associated with the current <xref:System.Reflection.Emit.DynamicILInfo> object.</span></span>  
  
 <span data-ttu-id="27204-143">Zum Abrufen einer <xref:System.RuntimeTypeHandle> einen Typ darstellt, verwenden Sie die <xref:System.Type.TypeHandle%2A?displayProperty=nameWithType> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="27204-143">To get a <xref:System.RuntimeTypeHandle> representing a type, use the <xref:System.Type.TypeHandle%2A?displayProperty=nameWithType> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTokenFor">
      <MemberSignature Language="C#" Value="public int GetTokenFor (string literal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetTokenFor(string literal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.DynamicILInfo.GetTokenFor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTokenFor (literal As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetTokenFor(System::String ^ literal);" />
      <MemberSignature Language="F#" Value="member this.GetTokenFor : string -&gt; int" Usage="dynamicILInfo.GetTokenFor literal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="literal" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="literal">
          <span data-ttu-id="27204-144">Die zu verwendende Zeichenfolge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27204-144">The string to be used.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="27204-145">Ruft ein im Bereich der aktuellen <see cref="T:System.Reflection.Emit.DynamicILInfo" /> gültiges Token ab, das ein Zeichenfolgenliteral darstellt, das in der zugeordneten dynamischen Methode verwendet werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27204-145">Gets a token, valid in the scope of the current <see cref="T:System.Reflection.Emit.DynamicILInfo" />, representing a string literal to be used in the associated dynamic method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="27204-146">Ein Token im Bereich des aktuellen <see cref="T:System.Reflection.Emit.DynamicILInfo" />-Objekts, das als Operand einer MSIL-Anweisung verwendet werden kann, die eine Zeichenfolge erfordert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27204-146">A token that can be used as the operand of an MSIL instruction that requires a string, in the scope of the current <see cref="T:System.Reflection.Emit.DynamicILInfo" /> object.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTokenFor">
      <MemberSignature Language="C#" Value="public int GetTokenFor (RuntimeFieldHandle field, RuntimeTypeHandle contextType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetTokenFor(valuetype System.RuntimeFieldHandle field, valuetype System.RuntimeTypeHandle contextType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.DynamicILInfo.GetTokenFor(System.RuntimeFieldHandle,System.RuntimeTypeHandle)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTokenFor (field As RuntimeFieldHandle, contextType As RuntimeTypeHandle) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetTokenFor(RuntimeFieldHandle field, RuntimeTypeHandle contextType);" />
      <MemberSignature Language="F#" Value="member this.GetTokenFor : RuntimeFieldHandle * RuntimeTypeHandle -&gt; int" Usage="dynamicILInfo.GetTokenFor (field, contextType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="field" Type="System.RuntimeFieldHandle" />
        <Parameter Name="contextType" Type="System.RuntimeTypeHandle" />
      </Parameters>
      <Docs>
        <param name="field">
          <span data-ttu-id="27204-147">Das Feld, auf das zugegriffen werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27204-147">The field to be accessed.</span>
          </span>
        </param>
        <param name="contextType">
          <span data-ttu-id="27204-148">Der generische Typ, zu dem das Feld gehört.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27204-148">The generic type the field belongs to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="27204-149">Ruft ein im Bereich der aktuellen <see cref="T:System.Reflection.Emit.DynamicILInfo" /> gültiges Token ab, das ein Feld darstellt, auf das aus der zugeordneten dynamischen Methode zugegriffen werden soll. Das Feld ist vom angegebenen generischen Typ.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27204-149">Gets a token, valid in the scope of the current <see cref="T:System.Reflection.Emit.DynamicILInfo" />, representing a field to be accessed from the associated dynamic method; the field is on the specified generic type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="27204-150">Ein Token im Bereich des aktuellen <see cref="T:System.Reflection.Emit.DynamicILInfo" />-Objekts, das als Operand einer MSIL-Anweisung verwendet werden kann, mit der auf Felder zugegriffen wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27204-150">A token that can be used as the operand of an MSIL instruction that accesses fields in the scope of the current <see cref="T:System.Reflection.Emit.DynamicILInfo" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="27204-151">Benötigen Sie ein Token für jedes Feld, das von der dynamischen Methode verknüpft ist, mit dem aktuellen erfolgt <xref:System.Reflection.Emit.DynamicILInfo> Objekt.</span><span class="sxs-lookup"><span data-stu-id="27204-151">You must obtain a token for any field that will be accessed by the dynamic method associated with the current <xref:System.Reflection.Emit.DynamicILInfo> object.</span></span> <span data-ttu-id="27204-152">Verwenden der <xref:System.Type.GetField%2A?displayProperty=nameWithType> -Methode zum Abrufen einer <xref:System.Reflection.FieldInfo> für das Feld, das Sie zugreifen möchten, und verwenden Sie dann die <xref:System.Reflection.FieldInfo.FieldHandle%2A> die abzurufende Eigenschaft der <xref:System.RuntimeFieldHandle>.</span><span class="sxs-lookup"><span data-stu-id="27204-152">Use the <xref:System.Type.GetField%2A?displayProperty=nameWithType> method to get a <xref:System.Reflection.FieldInfo> for the field you want to access, and then use the <xref:System.Reflection.FieldInfo.FieldHandle%2A> property to get the <xref:System.RuntimeFieldHandle>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTokenFor">
      <MemberSignature Language="C#" Value="public int GetTokenFor (RuntimeMethodHandle method, RuntimeTypeHandle contextType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetTokenFor(valuetype System.RuntimeMethodHandle method, valuetype System.RuntimeTypeHandle contextType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.DynamicILInfo.GetTokenFor(System.RuntimeMethodHandle,System.RuntimeTypeHandle)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTokenFor (method As RuntimeMethodHandle, contextType As RuntimeTypeHandle) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetTokenFor(RuntimeMethodHandle method, RuntimeTypeHandle contextType);" />
      <MemberSignature Language="F#" Value="member this.GetTokenFor : RuntimeMethodHandle * RuntimeTypeHandle -&gt; int" Usage="dynamicILInfo.GetTokenFor (method, contextType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="method" Type="System.RuntimeMethodHandle" />
        <Parameter Name="contextType" Type="System.RuntimeTypeHandle" />
      </Parameters>
      <Docs>
        <param name="method">
          <span data-ttu-id="27204-153">Die Methode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27204-153">The method.</span>
          </span>
        </param>
        <param name="contextType">
          <span data-ttu-id="27204-154">Der generische Typ, zu dem die Methode gehört.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27204-154">The generic type the method belongs to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="27204-155">Ruft ein im Bereich der aktuellen <see cref="T:System.Reflection.Emit.DynamicILInfo" /> gültiges Token ab, das eine Methode für einen generischen Typ darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27204-155">Gets a token, valid in the scope of the current <see cref="T:System.Reflection.Emit.DynamicILInfo" />, representing a method on a generic type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="27204-156">Ein Token im Bereich des aktuellen <see cref="F:System.Reflection.Emit.OpCodes.Call" />-Objekts, das als Operand einer MSIL-Anweisung verwendet werden kann, mit der auf Methoden zugegriffen wird, z. B. <see cref="F:System.Reflection.Emit.OpCodes.Ldtoken" /> oder <see cref="T:System.Reflection.Emit.DynamicILInfo" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27204-156">A token that can be used as the operand of an MSIL instruction that accesses methods, such as <see cref="F:System.Reflection.Emit.OpCodes.Call" /> or <see cref="F:System.Reflection.Emit.OpCodes.Ldtoken" />, in the scope of the current <see cref="T:System.Reflection.Emit.DynamicILInfo" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="27204-157">Benötigen Sie ein Token für jede Methode, die aufgerufen wird, von der dynamischen Methode verknüpft ist, mit dem aktuellen <xref:System.Reflection.Emit.DynamicILInfo> Objekt.</span><span class="sxs-lookup"><span data-stu-id="27204-157">You must obtain a token for any method that will be called by the dynamic method associated with the current <xref:System.Reflection.Emit.DynamicILInfo> object.</span></span> <span data-ttu-id="27204-158">Verwenden der <xref:System.Type.GetMethod%2A?displayProperty=nameWithType> -Methode zum Abrufen einer <xref:System.Reflection.MethodInfo> für die Methode, die Sie verwenden möchten, einen Aufruf, und klicken Sie dann die <xref:System.Reflection.MethodBase.MethodHandle%2A> die abzurufende Eigenschaft der <xref:System.RuntimeMethodHandle>.</span><span class="sxs-lookup"><span data-stu-id="27204-158">Use the <xref:System.Type.GetMethod%2A?displayProperty=nameWithType> method to get a <xref:System.Reflection.MethodInfo> for the method you want to call, and then use the <xref:System.Reflection.MethodBase.MethodHandle%2A> property to get the <xref:System.RuntimeMethodHandle>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetCode">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="27204-159">Legt den Codetext der zugeordneten dynamischen Methode fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27204-159">Sets the code body of the associated dynamic method.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetCode">
      <MemberSignature Language="C#" Value="public void SetCode (byte[] code, int maxStackSize);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetCode(unsigned int8[] code, int32 maxStackSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.DynamicILInfo.SetCode(System.Byte[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetCode (code As Byte(), maxStackSize As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetCode(cli::array &lt;System::Byte&gt; ^ code, int maxStackSize);" />
      <MemberSignature Language="F#" Value="member this.SetCode : byte[] * int -&gt; unit" Usage="dynamicILInfo.SetCode (code, maxStackSize)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="code" Type="System.Byte[]" />
        <Parameter Name="maxStackSize" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="code">
          <span data-ttu-id="27204-160">Ein Array, das den MSIL-Stream enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27204-160">An array that contains the MSIL stream.</span>
          </span>
        </param>
        <param name="maxStackSize">
          <span data-ttu-id="27204-161">Die maximale Anzahl von Elementen auf dem Operandenstapel beim Ausführen der Methode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27204-161">The maximum number of items on the operand stack when the method is executing.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="27204-162">Legt den Codetext der zugeordneten dynamischen Methode fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27204-162">Sets the code body of the associated dynamic method.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="27204-163">Keine gültigkeitsüberprüfungen werden auf den MSIL-Stream ausgeführt.</span><span class="sxs-lookup"><span data-stu-id="27204-163">No validity checks are performed on the MSIL stream.</span></span>  
  
 <span data-ttu-id="27204-164">Das Aufrufen dieser Methode eines zweiten Mal ersetzt die ersten MSIL-Stream mit dem zweiten.</span><span class="sxs-lookup"><span data-stu-id="27204-164">Calling this method a second time replaces the first MSIL stream with the second.</span></span>  
  
 <span data-ttu-id="27204-165">Generieren Ihre eigenen Metadaten und MSIL ist es erforderlich, mit der Common Language Infrastructure (CLI)-Dokumentation, insbesondere "Partition II: Metadata Definition and Semantics" und "Partition III: CIL Instruction Set".</span><span class="sxs-lookup"><span data-stu-id="27204-165">Generating your own metadata and MSIL requires familiarity with the Common Language Infrastructure (CLI) documentation, especially "Partition II: Metadata Definition and Semantics" and "Partition III: CIL Instruction Set".</span></span> <span data-ttu-id="27204-166">Die Dokumentation ist online verfügbar. Sie finden sie unter [ECMA C# and Common Language Infrastructure Standards (Standards von ECMA C# und Common Language Infrastructure)](https://go.microsoft.com/fwlink/?LinkID=99212) auf MSDN und [Standard ECMA-335 - Common Language Infrastructure (CLI) (Standard ECMA-335 – Common Language Infrastructure (CLI))](https://go.microsoft.com/fwlink/?LinkID=65552) auf der Ecma International-Website.</span><span class="sxs-lookup"><span data-stu-id="27204-166">The documentation is available online; see [ECMA C# and Common Language Infrastructure Standards](https://go.microsoft.com/fwlink/?LinkID=99212) on MSDN and [Standard ECMA-335 - Common Language Infrastructure (CLI)](https://go.microsoft.com/fwlink/?LinkID=65552) on the Ecma International Web site.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetCode">
      <MemberSignature Language="C#" Value="public void SetCode (byte* code, int codeSize, int maxStackSize);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetCode(unsigned int8* code, int32 codeSize, int32 maxStackSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.DynamicILInfo.SetCode(System.Byte*,System.Int32,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetCode(System::Byte* code, int codeSize, int maxStackSize);" />
      <MemberSignature Language="F#" Value="member this.SetCode : nativeptr&lt;byte&gt; * int * int -&gt; unit" Usage="dynamicILInfo.SetCode (code, codeSize, maxStackSize)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="code" Type="System.Byte*" />
        <Parameter Name="codeSize" Type="System.Int32" />
        <Parameter Name="maxStackSize" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="code">
          <span data-ttu-id="27204-167">Ein Zeiger auf ein Bytearray, das den MSIL-Stream enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27204-167">A pointer to a byte array containing the MSIL stream.</span>
          </span>
        </param>
        <param name="codeSize">
          <span data-ttu-id="27204-168">Die Anzahl der Bytes im MSIL-Stream.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27204-168">The number of bytes in the MSIL stream.</span>
          </span>
        </param>
        <param name="maxStackSize">
          <span data-ttu-id="27204-169">Die maximale Anzahl von Elementen auf dem Operandenstapel beim Ausführen der Methode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27204-169">The maximum number of items on the operand stack when the method is executing.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="27204-170">Legt den Codetext der zugeordneten dynamischen Methode fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27204-170">Sets the code body of the associated dynamic method.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="27204-171">Keine gültigkeitsüberprüfungen werden auf den MSIL-Stream ausgeführt.</span><span class="sxs-lookup"><span data-stu-id="27204-171">No validity checks are performed on the MSIL stream.</span></span>  
  
 <span data-ttu-id="27204-172">Das Aufrufen dieser Methode eines zweiten Mal ersetzt die ersten MSIL-Stream mit dem zweiten.</span><span class="sxs-lookup"><span data-stu-id="27204-172">Calling this method a second time replaces the first MSIL stream with the second.</span></span>  
  
 <span data-ttu-id="27204-173">Generieren Ihre eigenen Metadaten und MSIL ist es erforderlich, mit der Common Language Infrastructure (CLI)-Dokumentation, besonders in "Partition II: Metadata Definition and Semantics" und "Partition III: CIL Instruction Set."</span><span class="sxs-lookup"><span data-stu-id="27204-173">Generating your own metadata and MSIL requires familiarity with the Common Language Infrastructure (CLI) documentation, especially "Partition II: Metadata Definition and Semantics" and "Partition III: CIL Instruction Set."</span></span> <span data-ttu-id="27204-174">Die Dokumentation ist online verfügbar. Sie finden sie unter [ECMA C# and Common Language Infrastructure Standards (Standards von ECMA C# und Common Language Infrastructure)](https://go.microsoft.com/fwlink/?LinkID=99212) auf MSDN und [Standard ECMA-335 - Common Language Infrastructure (CLI) (Standard ECMA-335 – Common Language Infrastructure (CLI))](https://go.microsoft.com/fwlink/?LinkID=65552) auf der Ecma International-Website.</span><span class="sxs-lookup"><span data-stu-id="27204-174">The documentation is available online; see [ECMA C# and Common Language Infrastructure Standards](https://go.microsoft.com/fwlink/?LinkID=99212) on MSDN and [Standard ECMA-335 - Common Language Infrastructure (CLI)](https://go.microsoft.com/fwlink/?LinkID=65552) on the Ecma International Web site.</span></span>  
  
 ]]></format>
        </remarks>
        <altCompliant cref="M:System.Reflection.Emit.DynamicILInfo.SetCode(System.Byte[],System.Int32)" />
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="27204-175">
            <paramref name="code" /> ist <see langword="null" />, und <paramref name="codeSize" /> ist größer als 0 (null).</span>
          <span class="sxs-lookup">
            <span data-stu-id="27204-175">
              <paramref name="code" /> is <see langword="null" /> and <paramref name="codeSize" /> is greater than 0.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="27204-176">
            <paramref name="codeSize" /> ist kleiner als 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27204-176">
              <paramref name="codeSize" /> is less than 0.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="27204-177">erfordert volle Vertrauenswürdigkeit für den unmittelbaren Aufrufer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27204-177">Requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="27204-178">Dieser Member kann nicht von teilweise vertrauenswürdigem oder transparentem Code verwendet werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27204-178">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetExceptions">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="27204-179">Legt die Ausnahmemetadaten für die zugeordnete dynamische Methode fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27204-179">Sets the exception metadata for the associated dynamic method.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetExceptions">
      <MemberSignature Language="C#" Value="public void SetExceptions (byte[] exceptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetExceptions(unsigned int8[] exceptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.DynamicILInfo.SetExceptions(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetExceptions (exceptions As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetExceptions(cli::array &lt;System::Byte&gt; ^ exceptions);" />
      <MemberSignature Language="F#" Value="member this.SetExceptions : byte[] -&gt; unit" Usage="dynamicILInfo.SetExceptions exceptions" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="exceptions" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="exceptions">
          <span data-ttu-id="27204-180">Ein Array, das die Ausnahmemetadaten enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27204-180">An array that contains the exception metadata.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="27204-181">Legt die Ausnahmemetadaten für die zugeordnete dynamische Methode fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27204-181">Sets the exception metadata for the associated dynamic method.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="27204-182">Definiert die Ausnahmemetadaten für eine Methode, die Position und Größe aller `try`, `catch`, `finally`, Filter und Fault-Blöcke.</span><span class="sxs-lookup"><span data-stu-id="27204-182">The exception metadata for a method defines the location and size of all `try`, `catch`, `finally`, filter, and fault blocks.</span></span> <span data-ttu-id="27204-183">Informationen zum Layout dieser Metadaten finden Sie in der Common Language Infrastructure (CLI)-Dokumentation, besonders in "Partition II: Metadata Definition and Semantics".</span><span class="sxs-lookup"><span data-stu-id="27204-183">For information on the layout of this metadata, see the Common Language Infrastructure (CLI) documentation, especially "Partition II: Metadata Definition and Semantics".</span></span> <span data-ttu-id="27204-184">Die Dokumentation ist online verfügbar. Sie finden sie unter [ECMA C# and Common Language Infrastructure Standards (Standards von ECMA C# und Common Language Infrastructure)](https://go.microsoft.com/fwlink/?LinkID=99212) auf MSDN und [Standard ECMA-335 - Common Language Infrastructure (CLI) (Standard ECMA-335 – Common Language Infrastructure (CLI))](https://go.microsoft.com/fwlink/?LinkID=65552) auf der Ecma International-Website.</span><span class="sxs-lookup"><span data-stu-id="27204-184">The documentation is available online; see [ECMA C# and Common Language Infrastructure Standards](https://go.microsoft.com/fwlink/?LinkID=99212) on MSDN and [Standard ECMA-335 - Common Language Infrastructure (CLI)](https://go.microsoft.com/fwlink/?LinkID=65552) on the Ecma International Web site.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetExceptions">
      <MemberSignature Language="C#" Value="public void SetExceptions (byte* exceptions, int exceptionsSize);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetExceptions(unsigned int8* exceptions, int32 exceptionsSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.DynamicILInfo.SetExceptions(System.Byte*,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetExceptions(System::Byte* exceptions, int exceptionsSize);" />
      <MemberSignature Language="F#" Value="member this.SetExceptions : nativeptr&lt;byte&gt; * int -&gt; unit" Usage="dynamicILInfo.SetExceptions (exceptions, exceptionsSize)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="exceptions" Type="System.Byte*" />
        <Parameter Name="exceptionsSize" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="exceptions">
          <span data-ttu-id="27204-185">Ein Zeiger auf ein Bytearray, das die Ausnahmemetadaten enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27204-185">A pointer to a byte array containing the exception metadata.</span>
          </span>
        </param>
        <param name="exceptionsSize">
          <span data-ttu-id="27204-186">Die Bytezahl der Ausnahmemetadaten.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27204-186">The number of bytes of exception metadata.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="27204-187">Legt die Ausnahmemetadaten für die zugeordnete dynamische Methode fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27204-187">Sets the exception metadata for the associated dynamic method.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="27204-188">Definiert die Ausnahmemetadaten für eine Methode, die Position und Größe aller `try`, `catch`, `finally`, Filter und Fault-Blöcke.</span><span class="sxs-lookup"><span data-stu-id="27204-188">The exception metadata for a method defines the location and size of all `try`, `catch`, `finally`, filter, and fault blocks.</span></span> <span data-ttu-id="27204-189">Informationen zum Layout dieser Metadaten finden Sie in der Common Language Infrastructure (CLI)-Dokumentation, insbesondere "Partition II: Metadata Definition and Semantics" und "Partition III: CIL Instruction Set".</span><span class="sxs-lookup"><span data-stu-id="27204-189">For information on the layout of this metadata, see the Common Language Infrastructure (CLI) documentation, especially "Partition II: Metadata Definition and Semantics" and "Partition III: CIL Instruction Set".</span></span> <span data-ttu-id="27204-190">Die Dokumentation ist online verfügbar. Sie finden sie unter [ECMA C# and Common Language Infrastructure Standards (Standards von ECMA C# und Common Language Infrastructure)](https://go.microsoft.com/fwlink/?LinkID=99212) auf MSDN und [Standard ECMA-335 - Common Language Infrastructure (CLI) (Standard ECMA-335 – Common Language Infrastructure (CLI))](https://go.microsoft.com/fwlink/?LinkID=65552) auf der Ecma International-Website.</span><span class="sxs-lookup"><span data-stu-id="27204-190">The documentation is available online; see [ECMA C# and Common Language Infrastructure Standards](https://go.microsoft.com/fwlink/?LinkID=99212) on MSDN and [Standard ECMA-335 - Common Language Infrastructure (CLI)](https://go.microsoft.com/fwlink/?LinkID=65552) on the Ecma International Web site.</span></span>  
  
 ]]></format>
        </remarks>
        <altCompliant cref="M:System.Reflection.Emit.DynamicILInfo.SetExceptions(System.Byte[])" />
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="27204-191">
            <paramref name="exceptions" /> ist <see langword="null" />, und <paramref name="exceptionSize" /> ist größer als 0 (null).</span>
          <span class="sxs-lookup">
            <span data-stu-id="27204-191">
              <paramref name="exceptions" /> is <see langword="null" /> and <paramref name="exceptionSize" /> is greater than 0.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="27204-192">
            <paramref name="exceptionSize" /> ist kleiner als 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27204-192">
              <paramref name="exceptionSize" /> is less than 0.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="27204-193">erfordert volle Vertrauenswürdigkeit für den unmittelbaren Aufrufer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27204-193">Requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="27204-194">Dieser Member kann nicht von teilweise vertrauenswürdigem oder transparentem Code verwendet werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27204-194">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetLocalSignature">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="27204-195">Legt die lokale Variablensignatur fest, in der das Layout von lokalen Variablen für die zugeordnete dynamische Methode beschrieben wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27204-195">Sets the local variable signature that describes the layout of local variables for the associated dynamic method.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetLocalSignature">
      <MemberSignature Language="C#" Value="public void SetLocalSignature (byte[] localSignature);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetLocalSignature(unsigned int8[] localSignature) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.DynamicILInfo.SetLocalSignature(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetLocalSignature (localSignature As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetLocalSignature(cli::array &lt;System::Byte&gt; ^ localSignature);" />
      <MemberSignature Language="F#" Value="member this.SetLocalSignature : byte[] -&gt; unit" Usage="dynamicILInfo.SetLocalSignature localSignature" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localSignature" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="localSignature">
          <span data-ttu-id="27204-196">Ein Array, das das Layout von lokalen Variablen für die zugeordnete <see cref="T:System.Reflection.Emit.DynamicMethod" /> enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27204-196">An array that contains the layout of local variables for the associated <see cref="T:System.Reflection.Emit.DynamicMethod" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="27204-197">Legt die lokale Variablensignatur fest, in der das Layout von lokalen Variablen für die zugeordnete dynamische Methode beschrieben wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27204-197">Sets the local variable signature that describes the layout of local variables for the associated dynamic method.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="27204-198">Die lokale Variablensignatur beschreibt das Layout von lokalen Variablen von einer Methode.</span><span class="sxs-lookup"><span data-stu-id="27204-198">The local variable signature describes the layout of a method's local variables.</span></span> <span data-ttu-id="27204-199">Zur Vereinfachung der Erstellung der Signatur der lokalen Variablen verwenden die `static` (`Shared` in Visual Basic) <xref:System.Reflection.Emit.SignatureHelper.GetLocalVarSigHelper%2A?displayProperty=nameWithType> -Methode zum Abrufen einer <xref:System.Reflection.Emit.SignatureHelper> für die lokale Signatur.</span><span class="sxs-lookup"><span data-stu-id="27204-199">To simplify construction of the local variable signature, use the `static` (`Shared` in Visual Basic) <xref:System.Reflection.Emit.SignatureHelper.GetLocalVarSigHelper%2A?displayProperty=nameWithType> method to get a <xref:System.Reflection.Emit.SignatureHelper> for the local signature.</span></span>  
  
 <span data-ttu-id="27204-200">Informationen zu lokalen Variablen finden Sie in der Common Language Infrastructure (CLI)-Dokumentation, besonders in "Partition II: Metadata Definition and Semantics".</span><span class="sxs-lookup"><span data-stu-id="27204-200">For information on local variable signatures, see the Common Language Infrastructure (CLI) documentation, especially "Partition II: Metadata Definition and Semantics".</span></span> <span data-ttu-id="27204-201">Die Dokumentation ist online verfügbar. Sie finden sie unter [ECMA C# and Common Language Infrastructure Standards (Standards von ECMA C# und Common Language Infrastructure)](https://go.microsoft.com/fwlink/?LinkID=99212) auf MSDN und [Standard ECMA-335 - Common Language Infrastructure (CLI) (Standard ECMA-335 – Common Language Infrastructure (CLI))](https://go.microsoft.com/fwlink/?LinkID=65552) auf der Ecma International-Website.</span><span class="sxs-lookup"><span data-stu-id="27204-201">The documentation is available online; see [ECMA C# and Common Language Infrastructure Standards](https://go.microsoft.com/fwlink/?LinkID=99212) on MSDN and [Standard ECMA-335 - Common Language Infrastructure (CLI)](https://go.microsoft.com/fwlink/?LinkID=65552) on the Ecma International Web site.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetLocalSignature">
      <MemberSignature Language="C#" Value="public void SetLocalSignature (byte* localSignature, int signatureSize);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetLocalSignature(unsigned int8* localSignature, int32 signatureSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.DynamicILInfo.SetLocalSignature(System.Byte*,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetLocalSignature(System::Byte* localSignature, int signatureSize);" />
      <MemberSignature Language="F#" Value="member this.SetLocalSignature : nativeptr&lt;byte&gt; * int -&gt; unit" Usage="dynamicILInfo.SetLocalSignature (localSignature, signatureSize)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localSignature" Type="System.Byte*" />
        <Parameter Name="signatureSize" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="localSignature">
          <span data-ttu-id="27204-202">Ein Array, das das Layout von lokalen Variablen für die zugeordnete <see cref="T:System.Reflection.Emit.DynamicMethod" /> enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27204-202">An array that contains the layout of local variables for the associated <see cref="T:System.Reflection.Emit.DynamicMethod" />.</span>
          </span>
        </param>
        <param name="signatureSize">
          <span data-ttu-id="27204-203">Die Anzahl der Bytes in der Signatur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27204-203">The number of bytes in the signature.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="27204-204">Legt die lokale Variablensignatur fest, in der das Layout von lokalen Variablen für die zugeordnete dynamische Methode beschrieben wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27204-204">Sets the local variable signature that describes the layout of local variables for the associated dynamic method.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="27204-205">Die lokale Variablensignatur beschreibt das Layout von lokalen Variablen von einer Methode.</span><span class="sxs-lookup"><span data-stu-id="27204-205">The local variable signature describes the layout of a method's local variables.</span></span> <span data-ttu-id="27204-206">Zur Vereinfachung der Erstellung der Signatur der lokalen Variablen verwenden die `static` (`Shared` in Visual Basic) <xref:System.Reflection.Emit.SignatureHelper.GetLocalVarSigHelper%2A?displayProperty=nameWithType> -Methode zum Abrufen einer <xref:System.Reflection.Emit.SignatureHelper> für die lokale Signatur.</span><span class="sxs-lookup"><span data-stu-id="27204-206">To simplify construction of the local variable signature, use the `static` (`Shared` in Visual Basic) <xref:System.Reflection.Emit.SignatureHelper.GetLocalVarSigHelper%2A?displayProperty=nameWithType> method to get a <xref:System.Reflection.Emit.SignatureHelper> for the local signature.</span></span>  
  
 <span data-ttu-id="27204-207">Informationen zu lokalen Variablen finden Sie in der Common Language Infrastructure (CLI)-Dokumentation, besonders in "Partition II: Metadata Definition and Semantics".</span><span class="sxs-lookup"><span data-stu-id="27204-207">For information on local variable signatures, see the Common Language Infrastructure (CLI) documentation, especially "Partition II: Metadata Definition and Semantics".</span></span> <span data-ttu-id="27204-208">Die Dokumentation ist online verfügbar. Sie finden sie unter [ECMA C# and Common Language Infrastructure Standards (Standards von ECMA C# und Common Language Infrastructure)](https://go.microsoft.com/fwlink/?LinkID=99212) auf MSDN und [Standard ECMA-335 - Common Language Infrastructure (CLI) (Standard ECMA-335 – Common Language Infrastructure (CLI))](https://go.microsoft.com/fwlink/?LinkID=65552) auf der Ecma International-Website.</span><span class="sxs-lookup"><span data-stu-id="27204-208">The documentation is available online; see [ECMA C# and Common Language Infrastructure Standards](https://go.microsoft.com/fwlink/?LinkID=99212) on MSDN and [Standard ECMA-335 - Common Language Infrastructure (CLI)](https://go.microsoft.com/fwlink/?LinkID=65552) on the Ecma International Web site.</span></span>  
  
 ]]></format>
        </remarks>
        <altCompliant cref="M:System.Reflection.Emit.DynamicILInfo.SetLocalSignature(System.Byte[])" />
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="27204-209">
            <paramref name="localSignature" /> ist <see langword="null" />, und <paramref name="signatureSize" /> ist größer als 0 (null).</span>
          <span class="sxs-lookup">
            <span data-stu-id="27204-209">
              <paramref name="localSignature" /> is <see langword="null" /> and <paramref name="signatureSize" /> is greater than 0.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="27204-210">
            <paramref name="signatureSize" /> ist kleiner als 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27204-210">
              <paramref name="signatureSize" /> is less than 0.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="27204-211">erfordert volle Vertrauenswürdigkeit für den unmittelbaren Aufrufer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27204-211">Requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="27204-212">Dieser Member kann nicht von teilweise vertrauenswürdigem oder transparentem Code verwendet werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27204-212">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
  </Members>
</Type>