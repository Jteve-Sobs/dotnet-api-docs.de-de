<Type Name="AssemblyBuilder" FullName="System.Reflection.Emit.AssemblyBuilder">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="d001b909d723aab64ee7a512c441007aa82727d4" />
    <Meta Name="ms.sourcegitcommit" Value="29c771f79cf4eac4f49e5fae5f1aa8b457acf146" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="06/21/2018" />
    <Meta Name="ms.locfileid" Value="36298855" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class AssemblyBuilder : System.Reflection.Assembly, System.Runtime.InteropServices._AssemblyBuilder" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit AssemblyBuilder extends System.Reflection.Assembly implements class System.Runtime.InteropServices._AssemblyBuilder" />
  <TypeSignature Language="DocId" Value="T:System.Reflection.Emit.AssemblyBuilder" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class AssemblyBuilder&#xA;Inherits Assembly&#xA;Implements _AssemblyBuilder" />
  <TypeSignature Language="C++ CLI" Value="public ref class AssemblyBuilder sealed : System::Reflection::Assembly, System::Runtime::InteropServices::_AssemblyBuilder" />
  <AssemblyInfo>
    <AssemblyName>System.Reflection.Emit</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Reflection.Assembly</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Runtime.InteropServices._AssemblyBuilder</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComDefaultInterface(typeof(System.Runtime.InteropServices._AssemblyBuilder))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="dc8af-101">Definiert eine dynamische Assembly und stellt diese dar.</span>
      <span class="sxs-lookup">
        <span data-stu-id="dc8af-101">Defines and represents a dynamic assembly.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc8af-102">Eine dynamische Assembly handelt es sich um eine Assembly, die mit der Reflektionsausgabe Reflektions-APIs erstellt wird.</span><span class="sxs-lookup"><span data-stu-id="dc8af-102">A dynamic assembly is an assembly that is created using the Reflection Emit APIs.</span></span> <span data-ttu-id="dc8af-103">Die dynamische Module in der Assembly werden gespeichert, wenn die dynamische Assembly gespeichert ist, mit der <xref:System.Reflection.Emit.AssemblyBuilder.Save%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="dc8af-103">The dynamic modules in the assembly are saved when the dynamic assembly is saved using the <xref:System.Reflection.Emit.AssemblyBuilder.Save%2A> method.</span></span> <span data-ttu-id="dc8af-104">Zum Generieren einer ausführbaren Datei der <xref:System.Reflection.Emit.AssemblyBuilder.SetEntryPoint%2A> Methode muss aufgerufen werden, um die Methode zu identifizieren, die den Einstiegspunkt der Assembly darstellt.</span><span class="sxs-lookup"><span data-stu-id="dc8af-104">To generate an executable, the <xref:System.Reflection.Emit.AssemblyBuilder.SetEntryPoint%2A> method must be called to identify the method that is the entry point to the assembly.</span></span> <span data-ttu-id="dc8af-105">Assemblys werden als DLLs werden standardmäßig gespeichert, es sei denn, die <xref:System.Reflection.Emit.AssemblyBuilder.SetEntryPoint%2A> -Methode fordert die Generierung von einer Konsolenanwendung oder eine Windows-basierte Anwendung.</span><span class="sxs-lookup"><span data-stu-id="dc8af-105">Assemblies are saved as DLLs by default, unless the <xref:System.Reflection.Emit.AssemblyBuilder.SetEntryPoint%2A> method requests the generation of a console application or a Windows-based application.</span></span>  
  
 <span data-ttu-id="dc8af-106">Wenn eine dynamische Assembly mehr als ein dynamisches Modul enthält, den Namen der Assembly Manifestdatei übereinstimmen, den Modulnamen, die als erstes Argument angegeben ist die <xref:System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="dc8af-106">If a dynamic assembly contains more than one dynamic module, the assembly's manifest file name should match the module's name that is specified as the first argument to the <xref:System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule%2A> method.</span></span>  
  
 <span data-ttu-id="dc8af-107">Einige Methoden auf der Basis <xref:System.Reflection.Assembly> Klasse, z. B. `GetModules` und `GetLoadedModules`, funktionieren nicht ordnungsgemäß, beim Aufrufen durch <xref:System.Reflection.Emit.AssemblyBuilder> Objekte.</span><span class="sxs-lookup"><span data-stu-id="dc8af-107">Some methods on the base <xref:System.Reflection.Assembly> class, such as `GetModules` and `GetLoadedModules`, will not work correctly when called from <xref:System.Reflection.Emit.AssemblyBuilder> objects.</span></span> <span data-ttu-id="dc8af-108">Sie können das definierte dynamische Assembly zu laden und rufen die Methoden für die geladene Assembly.</span><span class="sxs-lookup"><span data-stu-id="dc8af-108">You can load the defined dynamic assembly and call the methods on the loaded assembly.</span></span> <span data-ttu-id="dc8af-109">Aufrufen, um sicherzustellen, dass Ressourcenmodule in der zurückgegebenen Liste der Module enthalten sind, z. B. `GetModules` auf das geladene <xref:System.Reflection.Assembly> Objekt.</span><span class="sxs-lookup"><span data-stu-id="dc8af-109">For example, to ensure that resource modules are included in the returned module list, call `GetModules` on the loaded <xref:System.Reflection.Assembly> object.</span></span>  
  
 <span data-ttu-id="dc8af-110">Das Signieren von eine dynamische Assembly mit <xref:System.Reflection.AssemblyName.KeyPair%2A> ist nicht wirksam, bis die Assembly gespeichert ist auf dem Datenträger.</span><span class="sxs-lookup"><span data-stu-id="dc8af-110">The signing of a dynamic assembly using <xref:System.Reflection.AssemblyName.KeyPair%2A> is not effective until the assembly is saved to disk.</span></span> <span data-ttu-id="dc8af-111">Starke Namen funktioniert daher nicht mit flüchtige dynamische Assemblys.</span><span class="sxs-lookup"><span data-stu-id="dc8af-111">So, strong names will not work with transient dynamic assemblies.</span></span>  
  
 <span data-ttu-id="dc8af-112">Zum Abrufen einer <xref:System.Reflection.Emit.AssemblyBuilder> -Objekts die <xref:System.AppDomain.DefineDynamicAssembly%2A?displayProperty=nameWithType> Methode.</span><span class="sxs-lookup"><span data-stu-id="dc8af-112">To get an <xref:System.Reflection.Emit.AssemblyBuilder> object, use the <xref:System.AppDomain.DefineDynamicAssembly%2A?displayProperty=nameWithType> method.</span></span>  
  
## <a name="reflection-emit-dynamic-assembly-scenarios"></a><span data-ttu-id="dc8af-113">Dynamische Assembly Szenarien für die Reflektionsausgabe</span><span class="sxs-lookup"><span data-stu-id="dc8af-113">Reflection emit dynamic assembly scenarios</span></span>  
 <span data-ttu-id="dc8af-114">Im folgenden sind einige Punkte zu berücksichtigen, bei Verwendung der <xref:System.Reflection.Emit.AssemblyBuilder> Klasse zum Erstellen von dynamischen Assemblys.</span><span class="sxs-lookup"><span data-stu-id="dc8af-114">The following are some things to consider when using the <xref:System.Reflection.Emit.AssemblyBuilder> class to create dynamic assemblies.</span></span>  
  
### <a name="dynamic-modules"></a><span data-ttu-id="dc8af-115">Dynamische Module</span><span class="sxs-lookup"><span data-stu-id="dc8af-115">Dynamic modules</span></span>  
 <span data-ttu-id="dc8af-116">Reflektionsausgabe unterstützt die Erstellung von dynamischen Modulen, die in dynamischen Assemblys definiert.</span><span class="sxs-lookup"><span data-stu-id="dc8af-116">Reflection emit supports the creation of dynamic modules defined in dynamic assemblies.</span></span> <span data-ttu-id="dc8af-117">Ein dynamisches Modul in eine dynamische Assembly erstellt kann vorübergehend oder dauerhaft sein.</span><span class="sxs-lookup"><span data-stu-id="dc8af-117">A dynamic module created in a dynamic assembly can be transient or persistable.</span></span>  
  
### <a name="restrictions-on-type-references"></a><span data-ttu-id="dc8af-118">Einschränkungen für Typverweisen</span><span class="sxs-lookup"><span data-stu-id="dc8af-118">Restrictions on type references</span></span>  
 <span data-ttu-id="dc8af-119">Assemblys können in einer anderen Assembly definierte Typen verweisen.</span><span class="sxs-lookup"><span data-stu-id="dc8af-119">Assemblies can reference types defined in another assembly.</span></span> <span data-ttu-id="dc8af-120">Eine flüchtige dynamische Assembly kann problemlos in eine andere flüchtige dynamische Assembly, eine dauerhafte dynamische Assembly oder eine statische Assembly definierte Typen verweisen.</span><span class="sxs-lookup"><span data-stu-id="dc8af-120">A transient dynamic assembly can safely reference types defined in another transient dynamic assembly, a persistable dynamic assembly, or a static assembly.</span></span> <span data-ttu-id="dc8af-121">Die common Language Runtime lässt jedoch kein dauerhaftes dynamisches Modul, um auf einen Typ in ein flüchtiges dynamisches Modul zu verweisen.</span><span class="sxs-lookup"><span data-stu-id="dc8af-121">However, the common language runtime does not allow a persistable dynamic module to reference a type defined in a transient dynamic module.</span></span> <span data-ttu-id="dc8af-122">Dies liegt daran Wenn das dynamische Modul geladen wird, nachdem gespeichert wird, auf den Datenträger, die Common Language Runtime die Verweise auf Typen, die in der flüchtiges dynamisches Modul definierten auflösen kann.</span><span class="sxs-lookup"><span data-stu-id="dc8af-122">This is because when the persisted dynamic module is loaded after being saved to disk, the runtime cannot resolve the references to types defined in the transient dynamic module.</span></span>  
  
### <a name="restrictions-on-emitting-to-remote-application-domains"></a><span data-ttu-id="dc8af-123">Einschränkungen für das Ausgeben von remote-Anwendungsdomänen</span><span class="sxs-lookup"><span data-stu-id="dc8af-123">Restrictions on emitting to remote application domains</span></span>  
 <span data-ttu-id="dc8af-124">In einigen Szenarien müssen eine dynamische Assembly erstellt und in einer Remoteanwendung-Domäne ausgeführt werden.</span><span class="sxs-lookup"><span data-stu-id="dc8af-124">Some scenarios require a dynamic assembly to be created and executed in a remote application domain.</span></span> <span data-ttu-id="dc8af-125">Reflektionsausgabe lässt sich nicht auf eine dynamische Assembly, die direkt an eine Remoteanwendungsdomäne ausgegeben werden.</span><span class="sxs-lookup"><span data-stu-id="dc8af-125">Reflection emit does not allow a dynamic assembly to be emitted directly to a remote application domain.</span></span> <span data-ttu-id="dc8af-126">Die Lösung besteht darin, die dynamische Assembly in der aktuellen Anwendungsdomäne ausgeben, die ausgegebene dynamische Assembly auf den Datenträger zu speichern und Laden Sie die dynamische Assembly in die Anwendungsdomäne für die remote.</span><span class="sxs-lookup"><span data-stu-id="dc8af-126">The solution is to emit the dynamic assembly in the current application domain, save the emitted dynamic assembly to disk, and then load the dynamic assembly into the remote application domain.</span></span>  
  
### <a name="dynamic-assembly-access-modes"></a><span data-ttu-id="dc8af-127">Zugriffsmodi für die dynamische assembly</span><span class="sxs-lookup"><span data-stu-id="dc8af-127">Dynamic assembly access modes</span></span>  
 <span data-ttu-id="dc8af-128">Dynamische Assemblys können mit einer der folgenden Zugriffsmodi erstellt werden:</span><span class="sxs-lookup"><span data-stu-id="dc8af-128">Dynamic assemblies can be created using one of the following access modes:</span></span>  
  
-   <xref:System.Reflection.Emit.AssemblyBuilderAccess.Run?displayProperty=nameWithType>  
  
     <span data-ttu-id="dc8af-129">Die dynamische Assembly, dargestellt durch eine <xref:System.Reflection.Emit.AssemblyBuilder> Objekt ist vorübergehend.</span><span class="sxs-lookup"><span data-stu-id="dc8af-129">The dynamic assembly represented by an <xref:System.Reflection.Emit.AssemblyBuilder> object is transient.</span></span> <span data-ttu-id="dc8af-130">Die dynamische Assembly kann nur verwendet werden, um den ausgegebenen Code auszuführen.</span><span class="sxs-lookup"><span data-stu-id="dc8af-130">The dynamic assembly can only be used to execute the emitted code.</span></span>  
  
-   <xref:System.Reflection.Emit.AssemblyBuilderAccess.Save?displayProperty=nameWithType>  
  
     <span data-ttu-id="dc8af-131">Die dynamische Assembly, dargestellt durch eine <xref:System.Reflection.Emit.AssemblyBuilder> Objekt beibehalten wird, aber kann nicht ausgeführt werden, bis die gespeicherte PE (portable Executable)-Datei von der Festplatte geladen wurde.</span><span class="sxs-lookup"><span data-stu-id="dc8af-131">The dynamic assembly represented by an <xref:System.Reflection.Emit.AssemblyBuilder> object is persistable but cannot be executed until the saved portable executable (PE) file has been loaded from disk.</span></span>  
  
-   <xref:System.Reflection.Emit.AssemblyBuilderAccess.RunAndSave?displayProperty=nameWithType>  
  
     <span data-ttu-id="dc8af-132">Die dynamische Assembly, dargestellt durch eine <xref:System.Reflection.Emit.AssemblyBuilder> Objekt beibehalten wird, jedoch können auch ausgeführt werden, vor und/oder nach dem Speichern der Assembly auf dem Datenträger.</span><span class="sxs-lookup"><span data-stu-id="dc8af-132">The dynamic assembly represented by an <xref:System.Reflection.Emit.AssemblyBuilder> object is persistable, but can also be executed before and/or after the assembly is saved to disk.</span></span>  
  
 <span data-ttu-id="dc8af-133">Der Zugriffsmodus muss angegeben werden, indem die entsprechende <xref:System.Reflection.Emit.AssemblyBuilderAccess> Wert im Aufruf der <xref:System.Reflection.Emit.AssemblyBuilder.DefineDynamicAssembly%2A?displayProperty=nameWithType> Methode, wenn die dynamische Assembly definiert ist, und später nicht geändert werden kann.</span><span class="sxs-lookup"><span data-stu-id="dc8af-133">The access mode must be specified by providing the appropriate <xref:System.Reflection.Emit.AssemblyBuilderAccess> value in the call to the <xref:System.Reflection.Emit.AssemblyBuilder.DefineDynamicAssembly%2A?displayProperty=nameWithType> method when the dynamic assembly is defined and cannot be changed later.</span></span> <span data-ttu-id="dc8af-134">Die Common Language Runtime verwendet den Zugriffsmodus einer dynamischen Assembly zum internen Darstellung für die Assembly zu optimieren.</span><span class="sxs-lookup"><span data-stu-id="dc8af-134">The runtime uses the access mode of a dynamic assembly to optimize the assembly's internal representation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dc8af-135">Im folgenden Codebeispiel wird veranschaulicht, wie eine dynamische Assembly mit einem Modul definiert.</span><span class="sxs-lookup"><span data-stu-id="dc8af-135">The following code example shows how to define a dynamic assembly with one module.</span></span> <span data-ttu-id="dc8af-136">Das Modul in der Beispielassembly enthält einen Typ `MyDynamicType`, verfügt über ein privates Feld, eine Eigenschaft, die ermittelt und definiert das private Feld, Konstruktoren, die das private Feld zu initialisieren und eine Methode, die eine vom Benutzer angegebene Zahl von privaten Feld multipliziert. Wert und gibt das Ergebnis zurück.</span><span class="sxs-lookup"><span data-stu-id="dc8af-136">The module in the example assembly contains one type, `MyDynamicType`, which has a private field, a property that gets and sets the private field, constructors that initialize the private field, and a method that multiplies a user-supplied number by the private field value and returns the result.</span></span>  
  
 <span data-ttu-id="dc8af-137"><xref:System.Reflection.Emit.AssemblyBuilderAccess.RunAndSave?displayProperty=nameWithType> wird angegeben, wenn die Assembly erstellt wird.</span><span class="sxs-lookup"><span data-stu-id="dc8af-137"><xref:System.Reflection.Emit.AssemblyBuilderAccess.RunAndSave?displayProperty=nameWithType> is specified when the assembly is created.</span></span> <span data-ttu-id="dc8af-138">Der Assemblycode wird sofort verwendet werden soll, und die Assembly wird auch gespeichert, damit es mit geprüft werden auf den Datenträger [Ildasm.exe (IL-Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md) oder in einem anderen Programm verwendet.</span><span class="sxs-lookup"><span data-stu-id="dc8af-138">The assembly code is used immediately, and the assembly is also saved to disk so that it can be examined with [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md) or used in another program.</span></span>  
  
 [!code-cpp[AssemblyBuilderClass#1](~/samples/snippets/cpp/VS_Snippets_CLR/AssemblyBuilderClass/cpp/24895.cpp#1)]
 [!code-csharp[AssemblyBuilderClass#1](~/samples/snippets/csharp/VS_Snippets_CLR/AssemblyBuilderClass/cs/24895.cs#1)]
 [!code-vb[AssemblyBuilderClass#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/AssemblyBuilderClass/vb/24895.vb#1)]  
  
 ]]></format>
    </remarks>
    <permission cref="T:System.Security.Permissions.ReflectionPermission">
      <span data-ttu-id="dc8af-139">Beim Aufrufen spät gebundene durch Mechanismen wie z. B. <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="dc8af-139">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
      </span>
      <span data-ttu-id="dc8af-140">Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
      <span class="sxs-lookup">
        <span data-stu-id="dc8af-140">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span>
      </span>
    </permission>
    <altmember cref="Overload:System.AppDomain.DefineDynamicAssembly" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AssemblyBuilder ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.AssemblyBuilder.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AssemblyBuilder();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddResourceFile">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="dc8af-141">Fügt dieser Assembly eine vorhandene Ressourcendatei hinzu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-141">Adds an existing resource file to this assembly.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddResourceFile">
      <MemberSignature Language="C#" Value="public void AddResourceFile (string name, string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddResourceFile(string name, string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.AssemblyBuilder.AddResourceFile(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddResourceFile (name As String, fileName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddResourceFile(System::String ^ name, System::String ^ fileName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="dc8af-142">Der logische Name der Ressource.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-142">The logical name of the resource.</span>
          </span>
        </param>
        <param name="fileName">
          <span data-ttu-id="dc8af-143">Der Name der physischen Datei (RESOURCES-Datei), der der logische Name zugeordnet ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-143">The physical file name (.resources file) to which the logical name is mapped.</span>
          </span>
          <span data-ttu-id="dc8af-144">Der Name darf keinen Pfad enthalten. Die Datei muss sich im selben Verzeichnis wie die Assembly befinden, der sie hinzugefügt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-144">This should not include a path; the file must be in the same directory as the assembly to which it is added.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dc8af-145">Fügt dieser Assembly eine vorhandene Ressourcendatei hinzu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-145">Adds an existing resource file to this assembly.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc8af-146">`fileName` nicht darf identisch, die von einem beliebigen anderen permanenten Modul, eigenständige verwaltete Ressource oder das eigenständige Manifestdatei sein werden.</span><span class="sxs-lookup"><span data-stu-id="dc8af-146">`fileName` should not be the same as that of any other persistable module, standalone managed resource, or the standalone manifest file.</span></span>  
  
 <span data-ttu-id="dc8af-147">Es wird angenommen, dass die verwalteten Ressourcen in der Datei öffentlich sein.</span><span class="sxs-lookup"><span data-stu-id="dc8af-147">The managed resources in the file are assumed to be public.</span></span>  
  
 <span data-ttu-id="dc8af-148">Die angegebene Ressourcendatei muss sich im Verzeichnis, in dem die Assembly gespeichert wird.</span><span class="sxs-lookup"><span data-stu-id="dc8af-148">The specified resource file must be in the directory where the assembly will be saved.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="dc8af-149">Beginnend mit der [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], diese Member nicht mehr benötigt <xref:System.Security.Permissions.ReflectionPermission> mit der <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> Flag.</span><span class="sxs-lookup"><span data-stu-id="dc8af-149">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="dc8af-150">(Siehe [Sicherheitsaspekte bei der Reflektionsausgabe](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) Zur Verwendung dieser Funktionen sollte die Anwendung für [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] oder höher ausgelegt sein.</span><span class="sxs-lookup"><span data-stu-id="dc8af-150">(See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dc8af-151">Im folgenden Codebeispiel wird veranschaulicht, wie eine dynamisch erstellte Assembly, die mit einer Ressourcendatei an `AddResourceFile`.</span><span class="sxs-lookup"><span data-stu-id="dc8af-151">The following code sample demonstrates how to attach a resource file to a dynamically created assembly, using `AddResourceFile`.</span></span>  
  
 [!code-cpp[System.Reflection.Emit.AssemblyBuilder.AddResourceFile Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Reflection.Emit.AssemblyBuilder.AddResourceFile Example/CPP/source.cpp#1)]
 [!code-csharp[System.Reflection.Emit.AssemblyBuilder.AddResourceFile Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Reflection.Emit.AssemblyBuilder.AddResourceFile Example/CS/source.cs#1)]
 [!code-vb[System.Reflection.Emit.AssemblyBuilder.AddResourceFile Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Reflection.Emit.AssemblyBuilder.AddResourceFile Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="dc8af-152">
            <paramref name="name" /> wurde bereits zuvor definiert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-152">
              <paramref name="name" /> has been previously defined.</span>
          </span>
          <span data-ttu-id="dc8af-153">Oder:  In der Assembly ist eine andere Datei mit dem Namen <paramref name="fileName" /> vorhanden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-153">-or-  There is another file in the assembly named <paramref name="fileName" />.</span>
          </span>
          <span data-ttu-id="dc8af-154">Oder:  Die Länge von <paramref name="name" /> ist 0 (null).</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-154">-or-  The length of <paramref name="name" /> is zero.</span>
          </span>
          <span data-ttu-id="dc8af-155">Oder:  Die Länge von <paramref name="fileName" /> ist 0 (null), oder wenn <paramref name="fileName" /> einen Pfad enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-155">-or-  The length of <paramref name="fileName" /> is zero, or if <paramref name="fileName" /> includes a path.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="dc8af-156">
            <paramref name="name" /> oder <paramref name="fileName" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-156">
              <paramref name="name" /> or <paramref name="fileName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="dc8af-157">Die Datei <paramref name="fileName" /> wird nicht gefunden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-157">The file <paramref name="fileName" /> is not found.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="dc8af-158">Der Aufrufer verfügt nicht über die erforderliche Berechtigung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-158">The caller does not have the required permission.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="dc8af-159">Beim Aufrufen spät gebundene durch Mechanismen wie z. B. <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-159">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          </span>
          <span data-ttu-id="dc8af-160">Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-160">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span>
          </span>
        </permission>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="dc8af-161">Die FileIOPermissionAccess.Read-Berechtigung ist erforderlich, um die Ressourcendatei zugreifen <paramref name="resourceFileName" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-161">The FileIOPermissionAccess.Read permission is needed to access the resource file <paramref name="resourceFileName" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="AddResourceFile">
      <MemberSignature Language="C#" Value="public void AddResourceFile (string name, string fileName, System.Reflection.ResourceAttributes attribute);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddResourceFile(string name, string fileName, valuetype System.Reflection.ResourceAttributes attribute) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.AssemblyBuilder.AddResourceFile(System.String,System.String,System.Reflection.ResourceAttributes)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddResourceFile (name As String, fileName As String, attribute As ResourceAttributes)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddResourceFile(System::String ^ name, System::String ^ fileName, System::Reflection::ResourceAttributes attribute);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="fileName" Type="System.String" />
        <Parameter Name="attribute" Type="System.Reflection.ResourceAttributes" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="dc8af-162">Der logische Name der Ressource.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-162">The logical name of the resource.</span>
          </span>
        </param>
        <param name="fileName">
          <span data-ttu-id="dc8af-163">Der Name der physischen Datei (RESOURCES-Datei), der der logische Name zugeordnet ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-163">The physical file name (.resources file) to which the logical name is mapped.</span>
          </span>
          <span data-ttu-id="dc8af-164">Der Name sollte keinen Pfad enthalten. Die Datei muss sich im selben Verzeichnis wie die Assembly befinden, der sie hinzugefügt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-164">This should not include a path; the file must be in the same directory as the assembly to which it is added.</span>
          </span>
        </param>
        <param name="attribute">
          <span data-ttu-id="dc8af-165">Die Ressourcenattribute.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-165">The resource attributes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dc8af-166">Fügt dieser Assembly eine vorhandene Ressourcendatei hinzu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-166">Adds an existing resource file to this assembly.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc8af-167">`fileName` nicht darf identisch, die von einem beliebigen anderen permanenten Modul, eigenständige verwaltete Ressource oder das eigenständige Manifestdatei sein werden.</span><span class="sxs-lookup"><span data-stu-id="dc8af-167">`fileName` should not be the same as that of any other persistable module, standalone managed resource, or the standalone manifest file.</span></span>  
  
 <span data-ttu-id="dc8af-168">Für die verwaltete Ressource können Attribute angegeben werden.</span><span class="sxs-lookup"><span data-stu-id="dc8af-168">Attributes can be specified for the managed resource.</span></span>  
  
 <span data-ttu-id="dc8af-169">Die angegebene Ressourcendatei muss sich im Verzeichnis, in dem die Assembly gespeichert wird.</span><span class="sxs-lookup"><span data-stu-id="dc8af-169">The specified resource file must be in the directory where the assembly will be saved.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="dc8af-170">Beginnend mit der [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], diese Member nicht mehr benötigt <xref:System.Security.Permissions.ReflectionPermission> mit der <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> Flag.</span><span class="sxs-lookup"><span data-stu-id="dc8af-170">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="dc8af-171">(Siehe [Sicherheitsaspekte bei der Reflektionsausgabe](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) Zur Verwendung dieser Funktionen sollte die Anwendung für [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] oder höher ausgelegt sein.</span><span class="sxs-lookup"><span data-stu-id="dc8af-171">(See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dc8af-172">Im folgenden Codebeispiel wird veranschaulicht, wie eine dynamisch erstellte Assembly, die mit einer Ressourcendatei an `AddResourceFile`.</span><span class="sxs-lookup"><span data-stu-id="dc8af-172">The following code sample demonstrates how to attach a resource file to a dynamically created assembly, using `AddResourceFile`.</span></span>  
  
 [!code-cpp[System.Reflection.Emit.AssemblyBuilder.AddResourceFile Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Reflection.Emit.AssemblyBuilder.AddResourceFile Example/CPP/source.cpp#1)]
 [!code-csharp[System.Reflection.Emit.AssemblyBuilder.AddResourceFile Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Reflection.Emit.AssemblyBuilder.AddResourceFile Example/CS/source.cs#1)]
 [!code-vb[System.Reflection.Emit.AssemblyBuilder.AddResourceFile Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Reflection.Emit.AssemblyBuilder.AddResourceFile Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="dc8af-173">
            <paramref name="name" /> wurde bereits zuvor definiert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-173">
              <paramref name="name" /> has been previously defined.</span>
          </span>
          <span data-ttu-id="dc8af-174">Oder:  In der Assembly ist eine andere Datei mit dem Namen <paramref name="fileName" /> vorhanden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-174">-or-  There is another file in the assembly named <paramref name="fileName" />.</span>
          </span>
          <span data-ttu-id="dc8af-175">Oder:  Die Länge von <paramref name="name" /> ist 0 (null), oder wenn die Länge von <paramref name="fileName" /> 0 (null) ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-175">-or-  The length of <paramref name="name" /> is zero or if the length of <paramref name="fileName" /> is zero.</span>
          </span>
          <span data-ttu-id="dc8af-176">Oder:  <paramref name="fileName" /> enthält einen Pfad.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-176">-or-  <paramref name="fileName" /> includes a path.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="dc8af-177">
            <paramref name="name" /> oder <paramref name="fileName" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-177">
              <paramref name="name" /> or <paramref name="fileName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="dc8af-178">Wenn die Datei <paramref name="fileName" /> nicht gefunden werden kann.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-178">If the file <paramref name="fileName" /> is not found.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="dc8af-179">Der Aufrufer verfügt nicht über die erforderliche Berechtigung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-179">The caller does not have the required permission.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="dc8af-180">Beim Aufrufen spät gebundene durch Mechanismen wie z. B. <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-180">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          </span>
          <span data-ttu-id="dc8af-181">Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-181">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span>
          </span>
        </permission>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="dc8af-182">Die FileIOPermissionAccess.Read-Berechtigung ist erforderlich, um die Ressourcendatei zugreifen <paramref name="resourceFileName" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-182">The FileIOPermissionAccess.Read permission is needed to access the resource file <paramref name="resourceFileName" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="CodeBase">
      <MemberSignature Language="C#" Value="public override string CodeBase { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CodeBase" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.AssemblyBuilder.CodeBase" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CodeBase As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ CodeBase { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="dc8af-183">Ruft den ursprünglich angegebenen Speicherort der Assembly ab (z. B. in einem <see cref="T:System.Reflection.AssemblyName" />-Objekt).</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-183">Gets the location of the assembly, as specified originally (such as in an <see cref="T:System.Reflection.AssemblyName" /> object).</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="dc8af-184">Der Speicherort der Assembly, der ursprünglich angegeben wurde.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-184">The location of the assembly, as specified originally.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc8af-185">Verwenden Sie zum Abrufen des absoluten Pfads der geladenen Datei Manifest enthält die <xref:System.Reflection.Assembly.Location%2A?displayProperty=nameWithType> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="dc8af-185">To get the absolute path to the loaded manifest-containing file, use the <xref:System.Reflection.Assembly.Location%2A?displayProperty=nameWithType> property.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="dc8af-186">Diese Methode wird zurzeit nicht unterstützt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-186">This method is not currently supported.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="dc8af-187">Der Aufrufer verfügt nicht über die erforderliche Berechtigung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-187">The caller does not have the required permission.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="dc8af-188">Beim Aufrufen spät gebundene durch Mechanismen wie z. B. <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-188">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          </span>
          <span data-ttu-id="dc8af-189">Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-189">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="DefinedTypes">
      <MemberSignature Language="C#" Value="public override System.Collections.Generic.IEnumerable&lt;System.Reflection.TypeInfo&gt; DefinedTypes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class System.Reflection.TypeInfo&gt; DefinedTypes" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.AssemblyBuilder.DefinedTypes" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property DefinedTypes As IEnumerable(Of TypeInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::Generic::IEnumerable&lt;System::Reflection::TypeInfo ^&gt; ^ DefinedTypes { System::Collections::Generic::IEnumerable&lt;System::Reflection::TypeInfo ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Reflection.TypeInfo&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="DefineDynamicAssembly">
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="dc8af-190">Definiert eine dynamische Assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-190">Defines a dynamic assembly.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DefineDynamicAssembly">
      <MemberSignature Language="C#" Value="public static System.Reflection.Emit.AssemblyBuilder DefineDynamicAssembly (System.Reflection.AssemblyName name, System.Reflection.Emit.AssemblyBuilderAccess access);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Emit.AssemblyBuilder DefineDynamicAssembly(class System.Reflection.AssemblyName name, valuetype System.Reflection.Emit.AssemblyBuilderAccess access) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.AssemblyBuilder.DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DefineDynamicAssembly (name As AssemblyName, access As AssemblyBuilderAccess) As AssemblyBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::Emit::AssemblyBuilder ^ DefineDynamicAssembly(System::Reflection::AssemblyName ^ name, System::Reflection::Emit::AssemblyBuilderAccess access);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.AssemblyBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.Reflection.AssemblyName" />
        <Parameter Name="access" Type="System.Reflection.Emit.AssemblyBuilderAccess" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="dc8af-191">Der Name der Assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-191">The name of the assembly.</span>
          </span>
        </param>
        <param name="access">
          <span data-ttu-id="dc8af-192">Die Zugriffsrechte der Assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-192">The access rights of the assembly.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dc8af-193">Definiert eine dynamische Assembly mit dem angegebenen Namen und den angegebenen Zugriffsrechten.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-193">Defines a dynamic assembly that has the specified name and access rights.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="dc8af-194">Ein Objekt, das die neue Assembly darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-194">An object that represents the new assembly.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefineDynamicAssembly">
      <MemberSignature Language="C#" Value="public static System.Reflection.Emit.AssemblyBuilder DefineDynamicAssembly (System.Reflection.AssemblyName name, System.Reflection.Emit.AssemblyBuilderAccess access, System.Collections.Generic.IEnumerable&lt;System.Reflection.Emit.CustomAttributeBuilder&gt; assemblyAttributes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Emit.AssemblyBuilder DefineDynamicAssembly(class System.Reflection.AssemblyName name, valuetype System.Reflection.Emit.AssemblyBuilderAccess access, class System.Collections.Generic.IEnumerable`1&lt;class System.Reflection.Emit.CustomAttributeBuilder&gt; assemblyAttributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.AssemblyBuilder.DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess,System.Collections.Generic.IEnumerable{System.Reflection.Emit.CustomAttributeBuilder})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DefineDynamicAssembly (name As AssemblyName, access As AssemblyBuilderAccess, assemblyAttributes As IEnumerable(Of CustomAttributeBuilder)) As AssemblyBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::Emit::AssemblyBuilder ^ DefineDynamicAssembly(System::Reflection::AssemblyName ^ name, System::Reflection::Emit::AssemblyBuilderAccess access, System::Collections::Generic::IEnumerable&lt;System::Reflection::Emit::CustomAttributeBuilder ^&gt; ^ assemblyAttributes);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.AssemblyBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.Reflection.AssemblyName" />
        <Parameter Name="access" Type="System.Reflection.Emit.AssemblyBuilderAccess" />
        <Parameter Name="assemblyAttributes" Type="System.Collections.Generic.IEnumerable&lt;System.Reflection.Emit.CustomAttributeBuilder&gt;" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="dc8af-195">Der Name der Assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-195">The name of the assembly.</span>
          </span>
        </param>
        <param name="access">
          <span data-ttu-id="dc8af-196">Die Zugriffsrechte der Assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-196">The access rights of the assembly.</span>
          </span>
        </param>
        <param name="assemblyAttributes">
          <span data-ttu-id="dc8af-197">Eine Auflistung, die die Attribute der Assembly enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-197">A collection that contains the attributes of the assembly.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dc8af-198">Definiert eine neue Assembly mit dem angegebenen Namen sowie den angegebenen Zugriffsrechten und Attributen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-198">Defines a new assembly that has the specified name, access rights, and attributes.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="dc8af-199">Ein Objekt, das die neue Assembly darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-199">An object that represents the new assembly.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="DefineDynamicModule">
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="dc8af-200">Definiert ein dynamisches Modul in dieser Assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-200">Defines a dynamic module in this assembly.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DefineDynamicModule">
      <MemberSignature Language="C#" Value="public System.Reflection.Emit.ModuleBuilder DefineDynamicModule (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Reflection.Emit.ModuleBuilder DefineDynamicModule(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function DefineDynamicModule (name As String) As ModuleBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Emit::ModuleBuilder ^ DefineDynamicModule(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.ModuleBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="dc8af-201">Der Name des dynamischen Moduls.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-201">The name of the dynamic module.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dc8af-202">Definiert ein benanntes flüchtiges dynamisches Modul in dieser Assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-202">Defines a named transient dynamic module in this assembly.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="dc8af-203">Ein <see cref="T:System.Reflection.Emit.ModuleBuilder" />, das das definierte dynamische Modul darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-203">A <see cref="T:System.Reflection.Emit.ModuleBuilder" /> representing the defined dynamic module.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc8af-204">Es ist ein Fehler auf mehrere dynamische Modulen mit demselben Namen in einer Assembly zu definieren.</span><span class="sxs-lookup"><span data-stu-id="dc8af-204">It is an error to define multiple dynamic modules with the same name in an assembly.</span></span>  
  
 <span data-ttu-id="dc8af-205">Das definierte dynamische Modul ist vorübergehend.</span><span class="sxs-lookup"><span data-stu-id="dc8af-205">The defined dynamic module is transient.</span></span> <span data-ttu-id="dc8af-206">Das dynamische Modul wird nicht gespeichert, auch wenn die übergeordnete dynamische Assembly mit erstellte <xref:System.Reflection.Emit.AssemblyBuilderAccess.RunAndSave>.</span><span class="sxs-lookup"><span data-stu-id="dc8af-206">The dynamic module is not saved, even if the parent dynamic assembly was created with <xref:System.Reflection.Emit.AssemblyBuilderAccess.RunAndSave>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="dc8af-207">Um die Optimierungen beim Debuggen von dynamischer Modules zu unterdrücken, gelten die <xref:System.Diagnostics.DebuggableAttribute> -Attribut auf die dynamische Assembly vor dem Aufruf <xref:System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule%2A>.</span><span class="sxs-lookup"><span data-stu-id="dc8af-207">To suppress optimizations when debugging dynamic modules, apply the <xref:System.Diagnostics.DebuggableAttribute> attribute to the dynamic assembly before calling <xref:System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule%2A>.</span></span> <span data-ttu-id="dc8af-208">Erstellen Sie eine Instanz des <xref:System.Diagnostics.DebuggableAttribute> mit der <xref:System.Diagnostics.DebuggableAttribute.DebuggingModes.DisableOptimizations> kennzeichnen und wenden Sie sie mithilfe der <xref:System.Reflection.Emit.AssemblyBuilder.SetCustomAttribute%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="dc8af-208">Create an instance of <xref:System.Diagnostics.DebuggableAttribute> with the <xref:System.Diagnostics.DebuggableAttribute.DebuggingModes.DisableOptimizations> flag and apply it using the <xref:System.Reflection.Emit.AssemblyBuilder.SetCustomAttribute%2A> method.</span></span> <span data-ttu-id="dc8af-209">Das Attribut muss auf die dynamische Assembly angewendet werden.</span><span class="sxs-lookup"><span data-stu-id="dc8af-209">The attribute must be applied to the dynamic assembly.</span></span> <span data-ttu-id="dc8af-210">Sie hat keine Auswirkungen, wenn auf das Modul angewendet.</span><span class="sxs-lookup"><span data-stu-id="dc8af-210">It has no effect if applied to the module.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="dc8af-211">Beginnend mit der [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], diese Member nicht mehr benötigt <xref:System.Security.Permissions.ReflectionPermission> mit der <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> Flag.</span><span class="sxs-lookup"><span data-stu-id="dc8af-211">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="dc8af-212">(Siehe [Sicherheitsaspekte bei der Reflektionsausgabe](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) Zur Verwendung dieser Funktionen sollte die Anwendung für [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] oder höher ausgelegt sein.</span><span class="sxs-lookup"><span data-stu-id="dc8af-212">(See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dc8af-213">[Visual Basic, c#]</span><span class="sxs-lookup"><span data-stu-id="dc8af-213">[Visual Basic, C#]</span></span>  
  
 <span data-ttu-id="dc8af-214">Im folgenden Codebeispiel wird veranschaulicht, wie ein flüchtiges dynamisches Modul erstellt `DefineDynamicModule`.</span><span class="sxs-lookup"><span data-stu-id="dc8af-214">The code example below demonstrates how to create a transient dynamic module using `DefineDynamicModule`.</span></span>  
  
 [!code-cpp[System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Reflection.Emit.AssemblyBuilder.DefineDynamicModule Example/CPP/source.cpp#1)]
 [!code-csharp[System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Reflection.Emit.AssemblyBuilder.DefineDynamicModule Example/CS/source.cs#1)]
 [!code-vb[System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Reflection.Emit.AssemblyBuilder.DefineDynamicModule Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="dc8af-215">
            <paramref name="name" /> beginnt mit einem Leerzeichen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-215">
              <paramref name="name" /> begins with white space.</span>
          </span>
          <span data-ttu-id="dc8af-216">Oder:  Die Länge von <paramref name="name" /> ist 0 (null).</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-216">-or-  The length of <paramref name="name" /> is zero.</span>
          </span>
          <span data-ttu-id="dc8af-217">Oder:  Die Länge von <paramref name="name" /> übersteigt die vom System definierte Maximallänge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-217">-or-  The length of <paramref name="name" /> is greater than the system-defined maximum length.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="dc8af-218">
            <paramref name="name" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-218">
              <paramref name="name" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="dc8af-219">Der Aufrufer verfügt nicht über die erforderliche Berechtigung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-219">The caller does not have the required permission.</span>
          </span>
        </exception>
        <exception cref="T:System.ExecutionEngineException">
          <span data-ttu-id="dc8af-220">Die Assembly für den Standardsymbolwriter kann nicht geladen werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-220">The assembly for default symbol writer cannot be loaded.</span>
          </span>
          <span data-ttu-id="dc8af-221">Oder:  Der Typ, der die Schnittstelle des Standardsymbolwriters implementiert, wurde nicht gefunden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-221">-or-  The type that implements the default symbol writer interface cannot be found.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="dc8af-222">Beim Aufrufen spät gebundene durch Mechanismen wie z. B. <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-222">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          </span>
          <span data-ttu-id="dc8af-223">Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-223">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="DefineDynamicModule">
      <MemberSignature Language="C#" Value="public System.Reflection.Emit.ModuleBuilder DefineDynamicModule (string name, bool emitSymbolInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Reflection.Emit.ModuleBuilder DefineDynamicModule(string name, bool emitSymbolInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function DefineDynamicModule (name As String, emitSymbolInfo As Boolean) As ModuleBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Emit::ModuleBuilder ^ DefineDynamicModule(System::String ^ name, bool emitSymbolInfo);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.ModuleBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="emitSymbolInfo" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="dc8af-224">Der Name des dynamischen Moduls.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-224">The name of the dynamic module.</span>
          </span>
        </param>
        <param name="emitSymbolInfo">
          <span data-ttu-id="dc8af-225">
            <see langword="true" />, wenn Symbolinformationen ausgegeben werden sollen, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-225">
              <see langword="true" /> if symbol information is to be emitted; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dc8af-226">Definiert ein benanntes flüchtiges dynamisches Modul in dieser Assembly und gibt an, ob Symbolinformationen ausgegeben werden sollen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-226">Defines a named transient dynamic module in this assembly and specifies whether symbol information should be emitted.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="dc8af-227">Ein <see cref="T:System.Reflection.Emit.ModuleBuilder" />, das das definierte dynamische Modul darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-227">A <see cref="T:System.Reflection.Emit.ModuleBuilder" /> representing the defined dynamic module.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc8af-228">Es ist ein Fehler auf mehrere dynamische Modulen mit demselben Namen in einer Assembly zu definieren.</span><span class="sxs-lookup"><span data-stu-id="dc8af-228">It is an error to define multiple dynamic modules with the same name in an assembly.</span></span>  
  
 <span data-ttu-id="dc8af-229">Das dynamische Modul wird nicht gespeichert, auch wenn die übergeordnete dynamische Assembly mit erstellte <xref:System.Reflection.Emit.AssemblyBuilderAccess.RunAndSave>.</span><span class="sxs-lookup"><span data-stu-id="dc8af-229">The dynamic module is not saved, even if the parent dynamic assembly was created with <xref:System.Reflection.Emit.AssemblyBuilderAccess.RunAndSave>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="dc8af-230">Um die Optimierungen beim Debuggen von dynamischer Modules zu unterdrücken, gelten die <xref:System.Diagnostics.DebuggableAttribute> -Attribut auf die dynamische Assembly vor dem Aufruf <xref:System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule%2A>.</span><span class="sxs-lookup"><span data-stu-id="dc8af-230">To suppress optimizations when debugging dynamic modules, apply the <xref:System.Diagnostics.DebuggableAttribute> attribute to the dynamic assembly before calling <xref:System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule%2A>.</span></span> <span data-ttu-id="dc8af-231">Erstellen Sie eine Instanz des <xref:System.Diagnostics.DebuggableAttribute> mit der <xref:System.Diagnostics.DebuggableAttribute.DebuggingModes.DisableOptimizations> kennzeichnen und wenden Sie sie mithilfe der <xref:System.Reflection.Emit.AssemblyBuilder.SetCustomAttribute%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="dc8af-231">Create an instance of <xref:System.Diagnostics.DebuggableAttribute> with the <xref:System.Diagnostics.DebuggableAttribute.DebuggingModes.DisableOptimizations> flag and apply it using the <xref:System.Reflection.Emit.AssemblyBuilder.SetCustomAttribute%2A> method.</span></span> <span data-ttu-id="dc8af-232">Das Attribut muss auf die dynamische Assembly angewendet werden.</span><span class="sxs-lookup"><span data-stu-id="dc8af-232">The attribute must be applied to the dynamic assembly.</span></span> <span data-ttu-id="dc8af-233">Sie hat keine Auswirkungen, wenn auf das Modul angewendet.</span><span class="sxs-lookup"><span data-stu-id="dc8af-233">It has no effect if applied to the module.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="dc8af-234">Beginnend mit der [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], diese Member nicht mehr benötigt <xref:System.Security.Permissions.ReflectionPermission> mit der <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> Flag.</span><span class="sxs-lookup"><span data-stu-id="dc8af-234">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="dc8af-235">(Siehe [Sicherheitsaspekte bei der Reflektionsausgabe](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) Zur Verwendung dieser Funktionen sollte die Anwendung für [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] oder höher ausgelegt sein.</span><span class="sxs-lookup"><span data-stu-id="dc8af-235">(See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dc8af-236">[Visual Basic, c#]</span><span class="sxs-lookup"><span data-stu-id="dc8af-236">[Visual Basic, C#]</span></span>  
  
 <span data-ttu-id="dc8af-237">Im folgenden Codebeispiel wird veranschaulicht, wie ein flüchtiges dynamisches Modul erstellt `DefineDynamicModule`, Symbolinformationen unterdrücken.</span><span class="sxs-lookup"><span data-stu-id="dc8af-237">The code example below demonstrates how to create a transient dynamic module using `DefineDynamicModule`, suppressing symbol information.</span></span>  
  
 [!code-cpp[System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule Example#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Reflection.Emit.AssemblyBuilder.DefineDynamicModule Example/CPP/source.cpp#2)]
 [!code-csharp[System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule Example#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Reflection.Emit.AssemblyBuilder.DefineDynamicModule Example/CS/source.cs#2)]
 [!code-vb[System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule Example#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Reflection.Emit.AssemblyBuilder.DefineDynamicModule Example/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="dc8af-238">
            <paramref name="name" /> beginnt mit einem Leerzeichen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-238">
              <paramref name="name" /> begins with white space.</span>
          </span>
          <span data-ttu-id="dc8af-239">Oder:  Die Länge von <paramref name="name" /> ist 0 (null).</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-239">-or-  The length of <paramref name="name" /> is zero.</span>
          </span>
          <span data-ttu-id="dc8af-240">Oder:  Die Länge von <paramref name="name" /> übersteigt die vom System definierte Maximallänge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-240">-or-  The length of <paramref name="name" /> is greater than the system-defined maximum length.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="dc8af-241">
            <paramref name="name" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-241">
              <paramref name="name" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ExecutionEngineException">
          <span data-ttu-id="dc8af-242">Die Assembly für den Standardsymbolwriter kann nicht geladen werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-242">The assembly for default symbol writer cannot be loaded.</span>
          </span>
          <span data-ttu-id="dc8af-243">Oder:  Der Typ, der die Schnittstelle des Standardsymbolwriters implementiert, wurde nicht gefunden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-243">-or-  The type that implements the default symbol writer interface cannot be found.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="dc8af-244">Der Aufrufer verfügt nicht über die erforderliche Berechtigung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-244">The caller does not have the required permission.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="dc8af-245">Beim Aufrufen spät gebundene durch Mechanismen wie z. B. <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-245">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          </span>
          <span data-ttu-id="dc8af-246">Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-246">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="DefineDynamicModule">
      <MemberSignature Language="C#" Value="public System.Reflection.Emit.ModuleBuilder DefineDynamicModule (string name, string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Reflection.Emit.ModuleBuilder DefineDynamicModule(string name, string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function DefineDynamicModule (name As String, fileName As String) As ModuleBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Emit::ModuleBuilder ^ DefineDynamicModule(System::String ^ name, System::String ^ fileName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.ModuleBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="dc8af-247">Der Name des dynamischen Moduls.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-247">The name of the dynamic module.</span>
          </span>
        </param>
        <param name="fileName">
          <span data-ttu-id="dc8af-248">Der Name der Datei, in der das dynamische Modul gespeichert werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-248">The name of the file to which the dynamic module should be saved.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dc8af-249">Definiert ein dauerhaftes dynamisches Modul mit dem angegebenen Namen, das in der angegebenen Datei gespeichert wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-249">Defines a persistable dynamic module with the given name that will be saved to the specified file.</span>
          </span>
          <span data-ttu-id="dc8af-250">Es werden keine Symbolinformationen ausgegeben.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-250">No symbol information is emitted.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="dc8af-251">Ein <see cref="T:System.Reflection.Emit.ModuleBuilder" />-Objekt, das das definierte dynamische Modul darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-251">A <see cref="T:System.Reflection.Emit.ModuleBuilder" /> object representing the defined dynamic module.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc8af-252">Um ein dauerhaftes dynamisches Modul zu definieren, dieser Assembly erstellt werden, muss die <xref:System.Reflection.Emit.AssemblyBuilderAccess.Save> oder <xref:System.Reflection.Emit.AssemblyBuilderAccess.RunAndSave> Attribut.</span><span class="sxs-lookup"><span data-stu-id="dc8af-252">To define a persistable dynamic module, this assembly needs to be created with the <xref:System.Reflection.Emit.AssemblyBuilderAccess.Save> or the <xref:System.Reflection.Emit.AssemblyBuilderAccess.RunAndSave> attribute.</span></span>  
  
 <span data-ttu-id="dc8af-253">Gegebenenfalls das Modul enthält das Assemblymanifest, `name` sollte den Namen der Assembly identisch sein (, also der <xref:System.Reflection.AssemblyName.Name%2A?displayProperty=nameWithType> Eigenschaft von der <xref:System.Reflection.AssemblyName> verwendet, um die dynamische Assembly erstellen) und `fileName` sollten identisch sein der Dateiname, die Sie angeben, wenn Sie die Assembly speichern.</span><span class="sxs-lookup"><span data-stu-id="dc8af-253">If you want the module to contain the assembly manifest, `name` should be the same as the name of the assembly (that is, the <xref:System.Reflection.AssemblyName.Name%2A?displayProperty=nameWithType> property of the <xref:System.Reflection.AssemblyName> used to create the dynamic assembly) and `fileName` should be the same as the filename you specify when you save the assembly.</span></span>  
  
 <span data-ttu-id="dc8af-254">In einer Assembly mit nur ein Modul sollte dieses Modul das Assemblymanifest enthalten.</span><span class="sxs-lookup"><span data-stu-id="dc8af-254">In an assembly with only one module, that module should contain the assembly manifest.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="dc8af-255">Um die Optimierungen beim Debuggen von dynamischer Modules zu unterdrücken, gelten die <xref:System.Diagnostics.DebuggableAttribute> -Attribut auf die dynamische Assembly vor dem Aufruf <xref:System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule%2A>.</span><span class="sxs-lookup"><span data-stu-id="dc8af-255">To suppress optimizations when debugging dynamic modules, apply the <xref:System.Diagnostics.DebuggableAttribute> attribute to the dynamic assembly before calling <xref:System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule%2A>.</span></span> <span data-ttu-id="dc8af-256">Erstellen Sie eine Instanz des <xref:System.Diagnostics.DebuggableAttribute> mit der <xref:System.Diagnostics.DebuggableAttribute.DebuggingModes.DisableOptimizations> kennzeichnen und wenden Sie sie mithilfe der <xref:System.Reflection.Emit.AssemblyBuilder.SetCustomAttribute%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="dc8af-256">Create an instance of <xref:System.Diagnostics.DebuggableAttribute> with the <xref:System.Diagnostics.DebuggableAttribute.DebuggingModes.DisableOptimizations> flag and apply it using the <xref:System.Reflection.Emit.AssemblyBuilder.SetCustomAttribute%2A> method.</span></span> <span data-ttu-id="dc8af-257">Das Attribut muss auf die dynamische Assembly angewendet werden.</span><span class="sxs-lookup"><span data-stu-id="dc8af-257">The attribute must be applied to the dynamic assembly.</span></span> <span data-ttu-id="dc8af-258">Sie hat keine Auswirkungen, wenn auf das Modul angewendet.</span><span class="sxs-lookup"><span data-stu-id="dc8af-258">It has no effect if applied to the module.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="dc8af-259">Beginnend mit der [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], diese Member nicht mehr benötigt <xref:System.Security.Permissions.ReflectionPermission> mit der <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> Flag.</span><span class="sxs-lookup"><span data-stu-id="dc8af-259">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="dc8af-260">(Siehe [Sicherheitsaspekte bei der Reflektionsausgabe](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) Zur Verwendung dieser Funktionen sollte die Anwendung für [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] oder höher ausgelegt sein.</span><span class="sxs-lookup"><span data-stu-id="dc8af-260">(See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dc8af-261">[Visual Basic, c#]</span><span class="sxs-lookup"><span data-stu-id="dc8af-261">[Visual Basic, C#]</span></span>  
  
 <span data-ttu-id="dc8af-262">Im folgenden Codebeispiel wird veranschaulicht, wie ein persistentes dynamisches Modul erstellt `DefineDynamicModule`.</span><span class="sxs-lookup"><span data-stu-id="dc8af-262">The code example below demonstrates how to create a persistent dynamic module using `DefineDynamicModule`.</span></span>  
  
 [!code-cpp[System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule Example#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Reflection.Emit.AssemblyBuilder.DefineDynamicModule Example/CPP/source.cpp#3)]
 [!code-csharp[System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule Example#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Reflection.Emit.AssemblyBuilder.DefineDynamicModule Example/CS/source.cs#3)]
 [!code-vb[System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule Example#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Reflection.Emit.AssemblyBuilder.DefineDynamicModule Example/VB/source.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="dc8af-263">
            <paramref name="name" /> oder <paramref name="fileName" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-263">
              <paramref name="name" /> or <paramref name="fileName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="dc8af-264">Die Länge von <paramref name="name" /> oder <paramref name="fileName" /> ist 0 (null).</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-264">The length of <paramref name="name" /> or <paramref name="fileName" /> is zero.</span>
          </span>
          <span data-ttu-id="dc8af-265">Oder:  Die Länge von <paramref name="name" /> übersteigt die vom System definierte Maximallänge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-265">-or-  The length of <paramref name="name" /> is greater than the system-defined maximum length.</span>
          </span>
          <span data-ttu-id="dc8af-266">Oder:  <paramref name="fileName" /> enthält eine Pfadangabe (z.B. eine Verzeichniskomponente).</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-266">-or-  <paramref name="fileName" /> contains a path specification (a directory component, for example).</span>
          </span>
          <span data-ttu-id="dc8af-267">Oder:  Es besteht ein Konflikt mit dem Namen einer anderen Datei, die zu dieser Assembly gehört.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-267">-or-  There is a conflict with the name of another file that belongs to this assembly.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="dc8af-268">Diese Assembly wurde bereits gespeichert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-268">This assembly has been previously saved.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="dc8af-269">Diese Assembly wurde für eine dynamische Assembly mit <see cref="F:System.Reflection.Emit.AssemblyBuilderAccess.Run" />-Attribut aufgerufen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-269">This assembly was called on a dynamic assembly with <see cref="F:System.Reflection.Emit.AssemblyBuilderAccess.Run" /> attribute.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="dc8af-270">Der Aufrufer verfügt nicht über die erforderliche Berechtigung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-270">The caller does not have the required permission.</span>
          </span>
        </exception>
        <exception cref="T:System.ExecutionEngineException">
          <span data-ttu-id="dc8af-271">Die Assembly für den Standardsymbolwriter kann nicht geladen werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-271">The assembly for default symbol writer cannot be loaded.</span>
          </span>
          <span data-ttu-id="dc8af-272">Oder:  Der Typ, der die Schnittstelle des Standardsymbolwriters implementiert, wurde nicht gefunden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-272">-or-  The type that implements the default symbol writer interface cannot be found.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="dc8af-273">Beim Aufrufen spät gebundene durch Mechanismen wie z. B. <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-273">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          </span>
          <span data-ttu-id="dc8af-274">Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-274">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span>
          </span>
        </permission>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="dc8af-275">Schreiben Sie = "true" oder angefügt werden = "true" ist erforderlich, um das Modul zu speichern.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-275">Write=true or Append=true is needed to save the module</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="DefineDynamicModule">
      <MemberSignature Language="C#" Value="public System.Reflection.Emit.ModuleBuilder DefineDynamicModule (string name, string fileName, bool emitSymbolInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Reflection.Emit.ModuleBuilder DefineDynamicModule(string name, string fileName, bool emitSymbolInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule(System.String,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function DefineDynamicModule (name As String, fileName As String, emitSymbolInfo As Boolean) As ModuleBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Emit::ModuleBuilder ^ DefineDynamicModule(System::String ^ name, System::String ^ fileName, bool emitSymbolInfo);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.ModuleBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="fileName" Type="System.String" />
        <Parameter Name="emitSymbolInfo" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="dc8af-276">Der Name des dynamischen Moduls.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-276">The name of the dynamic module.</span>
          </span>
        </param>
        <param name="fileName">
          <span data-ttu-id="dc8af-277">Der Name der Datei, in der das dynamische Modul gespeichert werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-277">The name of the file to which the dynamic module should be saved.</span>
          </span>
        </param>
        <param name="emitSymbolInfo">
          <span data-ttu-id="dc8af-278">Bei <see langword="true" /> werden Symbolinformationen mithilfe des Standardsymbolwriters geschrieben.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-278">If <see langword="true" />, symbolic information is written using the default symbol writer.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dc8af-279">Definiert ein dauerhaftes dynamisches Modul, legt den Modulnamen und den Namen der Datei fest, in der das Modul gespeichert werden soll, und gibt an, ob Symbolinformationen mithilfe des Standardsymbolwriters ausgegeben werden sollen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-279">Defines a persistable dynamic module, specifying the module name, the name of the file to which the module will be saved, and whether symbol information should be emitted using the default symbol writer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="dc8af-280">Ein <see cref="T:System.Reflection.Emit.ModuleBuilder" />-Objekt, das das definierte dynamische Modul darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-280">A <see cref="T:System.Reflection.Emit.ModuleBuilder" /> object representing the defined dynamic module.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc8af-281">Um ein dauerhaftes dynamisches Modul zu definieren, dieser Assembly erstellt werden, muss die <xref:System.Reflection.Emit.AssemblyBuilderAccess.Save> oder <xref:System.Reflection.Emit.AssemblyBuilderAccess.RunAndSave> Attribut.</span><span class="sxs-lookup"><span data-stu-id="dc8af-281">To define a persistable dynamic module, this assembly needs to be created with the <xref:System.Reflection.Emit.AssemblyBuilderAccess.Save> or the <xref:System.Reflection.Emit.AssemblyBuilderAccess.RunAndSave> attribute.</span></span>  
  
 <span data-ttu-id="dc8af-282">Gegebenenfalls das Modul enthält das Assemblymanifest, `name` sollte den Namen der Assembly identisch sein (, also der <xref:System.Reflection.AssemblyName.Name%2A?displayProperty=nameWithType> Eigenschaft von der <xref:System.Reflection.AssemblyName> verwendet, um die dynamische Assembly erstellen) und `fileName` sollten identisch sein der Dateiname, die Sie angeben, wenn Sie die Assembly speichern.</span><span class="sxs-lookup"><span data-stu-id="dc8af-282">If you want the module to contain the assembly manifest, `name` should be the same as the name of the assembly (that is, the <xref:System.Reflection.AssemblyName.Name%2A?displayProperty=nameWithType> property of the <xref:System.Reflection.AssemblyName> used to create the dynamic assembly) and `fileName` should be the same as the filename you specify when you save the assembly.</span></span>  
  
 <span data-ttu-id="dc8af-283">In einer Assembly mit nur ein Modul sollte dieses Modul das Assemblymanifest enthalten.</span><span class="sxs-lookup"><span data-stu-id="dc8af-283">In an assembly with only one module, that module should contain the assembly manifest.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="dc8af-284">Um die Optimierungen beim Debuggen von dynamischer Modules zu unterdrücken, gelten die <xref:System.Diagnostics.DebuggableAttribute> -Attribut auf die dynamische Assembly vor dem Aufruf <xref:System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule%2A>.</span><span class="sxs-lookup"><span data-stu-id="dc8af-284">To suppress optimizations when debugging dynamic modules, apply the <xref:System.Diagnostics.DebuggableAttribute> attribute to the dynamic assembly before calling <xref:System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule%2A>.</span></span> <span data-ttu-id="dc8af-285">Erstellen Sie eine Instanz des <xref:System.Diagnostics.DebuggableAttribute> mit der <xref:System.Diagnostics.DebuggableAttribute.DebuggingModes.DisableOptimizations> kennzeichnen und wenden Sie sie mithilfe der <xref:System.Reflection.Emit.AssemblyBuilder.SetCustomAttribute%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="dc8af-285">Create an instance of <xref:System.Diagnostics.DebuggableAttribute> with the <xref:System.Diagnostics.DebuggableAttribute.DebuggingModes.DisableOptimizations> flag and apply it using the <xref:System.Reflection.Emit.AssemblyBuilder.SetCustomAttribute%2A> method.</span></span> <span data-ttu-id="dc8af-286">Das Attribut muss auf die dynamische Assembly angewendet werden.</span><span class="sxs-lookup"><span data-stu-id="dc8af-286">The attribute must be applied to the dynamic assembly.</span></span> <span data-ttu-id="dc8af-287">Sie hat keine Auswirkungen, wenn auf das Modul angewendet.</span><span class="sxs-lookup"><span data-stu-id="dc8af-287">It has no effect if applied to the module.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="dc8af-288">Beginnend mit der [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], diese Member nicht mehr benötigt <xref:System.Security.Permissions.ReflectionPermission> mit der <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> Flag.</span><span class="sxs-lookup"><span data-stu-id="dc8af-288">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="dc8af-289">(Siehe [Sicherheitsaspekte bei der Reflektionsausgabe](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) Zur Verwendung dieser Funktionen sollte die Anwendung für [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] oder höher ausgelegt sein.</span><span class="sxs-lookup"><span data-stu-id="dc8af-289">(See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dc8af-290">[Visual Basic, c#]</span><span class="sxs-lookup"><span data-stu-id="dc8af-290">[Visual Basic, C#]</span></span>  
  
 <span data-ttu-id="dc8af-291">Im folgenden Codebeispiel wird veranschaulicht, wie ein persistentes dynamisches Modul mit Symbol prädikatauswertung erstellen `DefineDynamicModule`.</span><span class="sxs-lookup"><span data-stu-id="dc8af-291">The code example below demonstrates how to create a persistent dynamic module with symbol emission using `DefineDynamicModule`.</span></span>  
  
 [!code-cpp[System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule Example#4](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Reflection.Emit.AssemblyBuilder.DefineDynamicModule Example/CPP/source.cpp#4)]
 [!code-csharp[System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule Example#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Reflection.Emit.AssemblyBuilder.DefineDynamicModule Example/CS/source.cs#4)]
 [!code-vb[System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule Example#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Reflection.Emit.AssemblyBuilder.DefineDynamicModule Example/VB/source.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="dc8af-292">
            <paramref name="name" /> oder <paramref name="fileName" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-292">
              <paramref name="name" /> or <paramref name="fileName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="dc8af-293">Die Länge von <paramref name="name" /> oder <paramref name="fileName" /> ist 0 (null).</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-293">The length of <paramref name="name" /> or <paramref name="fileName" /> is zero.</span>
          </span>
          <span data-ttu-id="dc8af-294">Oder:  Die Länge von <paramref name="name" /> übersteigt die vom System definierte Maximallänge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-294">-or-  The length of <paramref name="name" /> is greater than the system-defined maximum length.</span>
          </span>
          <span data-ttu-id="dc8af-295">Oder:  <paramref name="fileName" /> enthält eine Pfadangabe (z.B. eine Verzeichniskomponente).</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-295">-or-  <paramref name="fileName" /> contains a path specification (a directory component, for example).</span>
          </span>
          <span data-ttu-id="dc8af-296">Oder:  Es besteht ein Konflikt mit dem Namen einer anderen Datei, die zu dieser Assembly gehört.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-296">-or-  There is a conflict with the name of another file that belongs to this assembly.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="dc8af-297">Diese Assembly wurde bereits gespeichert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-297">This assembly has been previously saved.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="dc8af-298">Diese Assembly wurde für eine dynamische Assembly mit dem <see cref="F:System.Reflection.Emit.AssemblyBuilderAccess.Run" />-Attribut aufgerufen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-298">This assembly was called on a dynamic assembly with the <see cref="F:System.Reflection.Emit.AssemblyBuilderAccess.Run" /> attribute.</span>
          </span>
        </exception>
        <exception cref="T:System.ExecutionEngineException">
          <span data-ttu-id="dc8af-299">Die Assembly für den Standardsymbolwriter kann nicht geladen werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-299">The assembly for default symbol writer cannot be loaded.</span>
          </span>
          <span data-ttu-id="dc8af-300">Oder:  Der Typ, der die Schnittstelle des Standardsymbolwriters implementiert, wurde nicht gefunden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-300">-or-  The type that implements the default symbol writer interface cannot be found.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="dc8af-301">Der Aufrufer verfügt nicht über die erforderliche Berechtigung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-301">The caller does not have the required permission.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="dc8af-302">Beim Aufrufen spät gebundene durch Mechanismen wie z. B. <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-302">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          </span>
          <span data-ttu-id="dc8af-303">Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-303">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span>
          </span>
        </permission>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="dc8af-304">Schreiben Sie = "true" oder angefügt werden = "true" ist erforderlich, um dieses Modul zu speichern.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-304">Write=true or Append=true is needed to save this module</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="DefineResource">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="dc8af-305">Definiert eine eigenständige verwaltete Ressource für diese Assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-305">Defines a standalone managed resource for this assembly.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DefineResource">
      <MemberSignature Language="C#" Value="public System.Resources.IResourceWriter DefineResource (string name, string description, string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Resources.IResourceWriter DefineResource(string name, string description, string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.AssemblyBuilder.DefineResource(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function DefineResource (name As String, description As String, fileName As String) As IResourceWriter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Resources::IResourceWriter ^ DefineResource(System::String ^ name, System::String ^ description, System::String ^ fileName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Resources.IResourceWriter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="description" Type="System.String" />
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="dc8af-306">Der logische Name der Ressource.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-306">The logical name of the resource.</span>
          </span>
        </param>
        <param name="description">
          <span data-ttu-id="dc8af-307">Eine Textbeschreibung der Ressource.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-307">A textual description of the resource.</span>
          </span>
        </param>
        <param name="fileName">
          <span data-ttu-id="dc8af-308">Der Name der physischen Datei (RESOURCES-Datei), der der logische Name zugeordnet ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-308">The physical file name (.resources file) to which the logical name is mapped.</span>
          </span>
          <span data-ttu-id="dc8af-309">Dieser darf keinen Pfad enthalten.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-309">This should not include a path.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dc8af-310">Definiert eine eigenständige verwaltete Ressource mit dem Standardattribut für öffentliche Ressourcen für diese Assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-310">Defines a standalone managed resource for this assembly with the default public resource attribute.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="dc8af-311">Ein <see cref="T:System.Resources.ResourceWriter" />-Objekt für die angegebene Ressource.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-311">A <see cref="T:System.Resources.ResourceWriter" /> object for the specified resource.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc8af-312">Ressourcen detailliert hinzugefügt werden können mit dem zurückgegebenen <xref:System.Resources.ResourceWriter> durch Aufrufen von <xref:System.Resources.ResourceWriter.AddResource%2A>.</span><span class="sxs-lookup"><span data-stu-id="dc8af-312">Fine grain resources can be added with the returned <xref:System.Resources.ResourceWriter> by calling <xref:System.Resources.ResourceWriter.AddResource%2A>.</span></span>  
  
 <span data-ttu-id="dc8af-313">`fileName` nicht darf identisch, die von einem beliebigen anderen permanenten Modul, eigenständige verwaltete Ressource oder die eigenständige Manifestdatei sein werden.</span><span class="sxs-lookup"><span data-stu-id="dc8af-313">`fileName` should not be the same as that of any other persistable module, stand-alone managed resource, or the stand-alone manifest file.</span></span>  
  
 <span data-ttu-id="dc8af-314">Ruft die Laufzeit die <xref:System.Resources.ResourceWriter.Close%2A> Methode, wenn die dynamische Assembly gespeichert ist.</span><span class="sxs-lookup"><span data-stu-id="dc8af-314">The runtime calls the <xref:System.Resources.ResourceWriter.Close%2A> method when the dynamic assembly is saved.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="dc8af-315">Beginnend mit der [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], diese Member nicht mehr benötigt <xref:System.Security.Permissions.ReflectionPermission> mit der <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> Flag.</span><span class="sxs-lookup"><span data-stu-id="dc8af-315">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="dc8af-316">(Siehe [Sicherheitsaspekte bei der Reflektionsausgabe](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) Zur Verwendung dieser Funktionen sollte die Anwendung für [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] oder höher ausgelegt sein.</span><span class="sxs-lookup"><span data-stu-id="dc8af-316">(See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dc8af-317">Im folgenden Beispiel wird die <xref:System.Reflection.Emit.AssemblyBuilder.DefineResource%2A> Methode, um eine Ressourcenwriters abzurufen.</span><span class="sxs-lookup"><span data-stu-id="dc8af-317">The following example uses the <xref:System.Reflection.Emit.AssemblyBuilder.DefineResource%2A> method to get a resource writer.</span></span> <span data-ttu-id="dc8af-318">Das Beispiel verwendet die Ressourcenwriters drei Ressourcenzeichenfolgen hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="dc8af-318">The example uses the resource writer to add three resource strings.</span></span>  
  
 [!code-cpp[AssemblyBuilder.DefineResource Example 2#1](~/samples/snippets/cpp/VS_Snippets_CLR/AssemblyBuilder.DefineResource Example 2/CPP/assemblybuilder_defineresource.cpp#1)]
 [!code-csharp[AssemblyBuilder.DefineResource Example 2#1](~/samples/snippets/csharp/VS_Snippets_CLR/AssemblyBuilder.DefineResource Example 2/CS/assemblybuilder_defineresource.cs#1)]
 [!code-vb[AssemblyBuilder.DefineResource Example 2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/AssemblyBuilder.DefineResource Example 2/VB/assemblybuilder_defineresource.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="dc8af-319">
            <paramref name="name" /> wurde bereits zuvor definiert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-319">
              <paramref name="name" /> has been previously defined.</span>
          </span>
          <span data-ttu-id="dc8af-320">Oder:  In der Assembly ist eine andere Datei mit dem Namen <paramref name="fileName" /> vorhanden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-320">-or-  There is another file in the assembly named <paramref name="fileName" />.</span>
          </span>
          <span data-ttu-id="dc8af-321">Oder:  Die Länge von <paramref name="name" /> ist 0 (null).</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-321">-or-  The length of <paramref name="name" /> is zero.</span>
          </span>
          <span data-ttu-id="dc8af-322">Oder:  Die Länge von <paramref name="fileName" /> ist 0 (null).</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-322">-or-  The length of <paramref name="fileName" /> is zero.</span>
          </span>
          <span data-ttu-id="dc8af-323">Oder:  <paramref name="fileName" /> enthält einen Pfad.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-323">-or-  <paramref name="fileName" /> includes a path.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="dc8af-324">
            <paramref name="name" /> oder <paramref name="fileName" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-324">
              <paramref name="name" /> or <paramref name="fileName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="dc8af-325">Der Aufrufer verfügt nicht über die erforderliche Berechtigung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-325">The caller does not have the required permission.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="dc8af-326">Beim Aufrufen spät gebundene durch Mechanismen wie z. B. <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-326">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          </span>
          <span data-ttu-id="dc8af-327">Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-327">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span>
          </span>
        </permission>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="dc8af-328">Schreiben Sie = "true" oder Anfügen = "true"</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-328">Write=true or Append=true</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="DefineResource">
      <MemberSignature Language="C#" Value="public System.Resources.IResourceWriter DefineResource (string name, string description, string fileName, System.Reflection.ResourceAttributes attribute);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Resources.IResourceWriter DefineResource(string name, string description, string fileName, valuetype System.Reflection.ResourceAttributes attribute) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.AssemblyBuilder.DefineResource(System.String,System.String,System.String,System.Reflection.ResourceAttributes)" />
      <MemberSignature Language="VB.NET" Value="Public Function DefineResource (name As String, description As String, fileName As String, attribute As ResourceAttributes) As IResourceWriter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Resources::IResourceWriter ^ DefineResource(System::String ^ name, System::String ^ description, System::String ^ fileName, System::Reflection::ResourceAttributes attribute);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Resources.IResourceWriter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="description" Type="System.String" />
        <Parameter Name="fileName" Type="System.String" />
        <Parameter Name="attribute" Type="System.Reflection.ResourceAttributes" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="dc8af-329">Der logische Name der Ressource.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-329">The logical name of the resource.</span>
          </span>
        </param>
        <param name="description">
          <span data-ttu-id="dc8af-330">Eine Textbeschreibung der Ressource.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-330">A textual description of the resource.</span>
          </span>
        </param>
        <param name="fileName">
          <span data-ttu-id="dc8af-331">Der Name der physischen Datei (RESOURCES-Datei), der der logische Name zugeordnet ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-331">The physical file name (.resources file) to which the logical name is mapped.</span>
          </span>
          <span data-ttu-id="dc8af-332">Dieser darf keinen Pfad enthalten.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-332">This should not include a path.</span>
          </span>
        </param>
        <param name="attribute">
          <span data-ttu-id="dc8af-333">Die Ressourcenattribute.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-333">The resource attributes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dc8af-334">Definiert eine eigenständige verwaltete Ressource für diese Assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-334">Defines a standalone managed resource for this assembly.</span>
          </span>
          <span data-ttu-id="dc8af-335">Für die verwaltete Ressource können Attribute angegeben werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-335">Attributes can be specified for the managed resource.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="dc8af-336">Ein <see cref="T:System.Resources.ResourceWriter" />-Objekt für die angegebene Ressource.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-336">A <see cref="T:System.Resources.ResourceWriter" /> object for the specified resource.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc8af-337">Differenzierte Ressourcen hinzugefügt werden können mit dem zurückgegebenen <xref:System.Resources.ResourceWriter> durch Aufrufen von <xref:System.Resources.ResourceWriter.AddResource%2A>.</span><span class="sxs-lookup"><span data-stu-id="dc8af-337">Fine-grain resources can be added with the returned <xref:System.Resources.ResourceWriter> by calling <xref:System.Resources.ResourceWriter.AddResource%2A>.</span></span>  
  
 <span data-ttu-id="dc8af-338">`fileName` nicht darf identisch, die von einem beliebigen anderen permanenten Modul, eigenständige verwaltete Ressource oder das eigenständige Manifestdatei sein werden.</span><span class="sxs-lookup"><span data-stu-id="dc8af-338">`fileName` should not be the same as that of any other persistable module, standalone managed resource, or the standalone manifest file.</span></span>  
  
 <span data-ttu-id="dc8af-339">Ruft die Laufzeit die <xref:System.Resources.ResourceWriter.Close%2A> Methode, wenn die dynamische Assembly gespeichert ist.</span><span class="sxs-lookup"><span data-stu-id="dc8af-339">The runtime calls the <xref:System.Resources.ResourceWriter.Close%2A> method when the dynamic assembly is saved.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="dc8af-340">Beginnend mit der [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], diese Member nicht mehr benötigt <xref:System.Security.Permissions.ReflectionPermission> mit der <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> Flag.</span><span class="sxs-lookup"><span data-stu-id="dc8af-340">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="dc8af-341">(Siehe [Sicherheitsaspekte bei der Reflektionsausgabe](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) Zur Verwendung dieser Funktionen sollte die Anwendung für [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] oder höher ausgelegt sein.</span><span class="sxs-lookup"><span data-stu-id="dc8af-341">(See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="dc8af-342">
            <paramref name="name" /> wurde zuvor definiert, oder wenn es eine andere Datei in der Assembly mit dem Namen <paramref name="fileName" /> gibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-342">
              <paramref name="name" /> has been previously defined or if there is another file in the assembly named <paramref name="fileName" />.</span>
          </span>
          <span data-ttu-id="dc8af-343">Oder:  Die Länge von <paramref name="name" /> ist 0 (null).</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-343">-or-  The length of <paramref name="name" /> is zero.</span>
          </span>
          <span data-ttu-id="dc8af-344">Oder:  Die Länge von <paramref name="fileName" /> ist 0 (null).</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-344">-or-  The length of <paramref name="fileName" /> is zero.</span>
          </span>
          <span data-ttu-id="dc8af-345">Oder:  <paramref name="fileName" /> enthält einen Pfad.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-345">-or-  <paramref name="fileName" /> includes a path.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="dc8af-346">
            <paramref name="name" /> oder <paramref name="fileName" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-346">
              <paramref name="name" /> or <paramref name="fileName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="dc8af-347">Der Aufrufer verfügt nicht über die erforderliche Berechtigung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-347">The caller does not have the required permission.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="dc8af-348">Beim Aufrufen spät gebundene durch Mechanismen wie z. B. <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-348">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          </span>
          <span data-ttu-id="dc8af-349">Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-349">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span>
          </span>
        </permission>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="dc8af-350">Schreiben Sie = "true" oder Anfügen = "true"</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-350">Write=true or Append=true</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="DefineUnmanagedResource">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="dc8af-351">Definiert eine nicht verwaltete Ressource für diese Assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-351">Defines an unmanaged resource for this assembly.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DefineUnmanagedResource">
      <MemberSignature Language="C#" Value="public void DefineUnmanagedResource (byte[] resource);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DefineUnmanagedResource(unsigned int8[] resource) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.AssemblyBuilder.DefineUnmanagedResource(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub DefineUnmanagedResource (resource As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DefineUnmanagedResource(cli::array &lt;System::Byte&gt; ^ resource);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resource" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="resource">
          <span data-ttu-id="dc8af-352">Das nicht transparente Blob von Bytes, das die nicht verwaltete Ressource darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-352">The opaque blob of bytes representing the unmanaged resource.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dc8af-353">Definiert eine nicht verwaltete Ressource für diese Assembly als nicht transparentes Blob von Bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-353">Defines an unmanaged resource for this assembly as an opaque blob of bytes.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc8af-354">Eine Assembly kann nur eine nicht verwaltete Ressource zugeordnet werden.</span><span class="sxs-lookup"><span data-stu-id="dc8af-354">An assembly can be associated with only one unmanaged resource.</span></span> <span data-ttu-id="dc8af-355">Dies bedeutet, dass der Aufruf <xref:System.Reflection.Emit.AssemblyBuilder.DefineVersionInfoResource%2A> oder <xref:System.Reflection.Emit.AssemblyBuilder.DefineUnmanagedResource%2A> nach entweder eine der Methoden aufgerufen wurde zuvor löst die System.ArgumentException ausgelöst wird.</span><span class="sxs-lookup"><span data-stu-id="dc8af-355">This means that calling <xref:System.Reflection.Emit.AssemblyBuilder.DefineVersionInfoResource%2A> or <xref:System.Reflection.Emit.AssemblyBuilder.DefineUnmanagedResource%2A> after either one of the methods was called previously will throw the System.ArgumentException being throw.</span></span> <span data-ttu-id="dc8af-356">Mehrere nicht verwaltete Ressourcen müssen mit einem Tool wie dem Microsoft ResMerge-Hilfsprogramm (nicht im Lieferumfang der common Language Runtime) zusammengeführt werden sollen.</span><span class="sxs-lookup"><span data-stu-id="dc8af-356">Multiple unmanaged resources need to be merged with a tool such as the Microsoft ResMerge utility (not supplied with the common language runtime).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dc8af-357">Im folgenden Codebeispiel wird erstellt, und fügt ein Array von Bytes, die eine nicht verwaltete Ressource darstellt, um eine dynamische Assembly, die mit `DefineUnmanagedResource`.</span><span class="sxs-lookup"><span data-stu-id="dc8af-357">The following code sample creates and attaches an array of bytes representing an unmanaged resource to a dynamic assembly, using `DefineUnmanagedResource`.</span></span>  
  
 [!code-cpp[AssemblyBuilder_DefineUnmanagedResource2#1](~/samples/snippets/cpp/VS_Snippets_CLR/AssemblyBuilder_DefineUnmanagedResource2/CPP/assemblybuilder_defineunmanagedresource2.cpp#1)]
 [!code-csharp[AssemblyBuilder_DefineUnmanagedResource2#1](~/samples/snippets/csharp/VS_Snippets_CLR/AssemblyBuilder_DefineUnmanagedResource2/CS/assemblybuilder_defineunmanagedresource2.cs#1)]
 [!code-vb[AssemblyBuilder_DefineUnmanagedResource2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/AssemblyBuilder_DefineUnmanagedResource2/VB/assemblybuilder_defineunmanagedresource2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="dc8af-358">Zuvor wurde eine nicht verwaltete Ressource definiert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-358">An unmanaged resource was previously defined.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="dc8af-359">
            <paramref name="resource" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-359">
              <paramref name="resource" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="dc8af-360">Der Aufrufer verfügt nicht über die erforderliche Berechtigung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-360">The caller does not have the required permission.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="dc8af-361">Beim Aufrufen spät gebundene durch Mechanismen wie z. B. <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-361">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          </span>
          <span data-ttu-id="dc8af-362">Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-362">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="DefineUnmanagedResource">
      <MemberSignature Language="C#" Value="public void DefineUnmanagedResource (string resourceFileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DefineUnmanagedResource(string resourceFileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.AssemblyBuilder.DefineUnmanagedResource(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DefineUnmanagedResource (resourceFileName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DefineUnmanagedResource(System::String ^ resourceFileName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceFileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="resourceFileName">
          <span data-ttu-id="dc8af-363">Der Name der Ressourcendatei.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-363">The name of the resource file.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dc8af-364">Definiert eine nicht verwaltete Ressourcendatei für diese Assembly bei gegebenem Namen der Ressourcendatei.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-364">Defines an unmanaged resource file for this assembly given the name of the resource file.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc8af-365">Eine Assembly kann nur eine nicht verwaltete Ressource zugeordnet werden.</span><span class="sxs-lookup"><span data-stu-id="dc8af-365">An assembly can be associated with only one unmanaged resource.</span></span> <span data-ttu-id="dc8af-366">Dies bedeutet, dass der Aufruf <xref:System.Reflection.Emit.AssemblyBuilder.DefineVersionInfoResource%2A> oder <xref:System.Reflection.Emit.AssemblyBuilder.DefineUnmanagedResource%2A> nach entweder eine der Methoden aufgerufen wurde zuvor löst die System.ArgumentException.</span><span class="sxs-lookup"><span data-stu-id="dc8af-366">This means that calling <xref:System.Reflection.Emit.AssemblyBuilder.DefineVersionInfoResource%2A> or <xref:System.Reflection.Emit.AssemblyBuilder.DefineUnmanagedResource%2A> after either one of the methods was called previously will throw the System.ArgumentException.</span></span> <span data-ttu-id="dc8af-367">Mehrere nicht verwaltete Ressourcen müssen mit einem Tool wie dem Microsoft ResMerge-Hilfsprogramm (nicht im Lieferumfang der common Language Runtime) zusammengeführt werden sollen.</span><span class="sxs-lookup"><span data-stu-id="dc8af-367">Multiple unmanaged resources need to be merged with a tool such as the Microsoft ResMerge utility (not supplied with the common language runtime).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="dc8af-368">Beginnend mit der [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], diese Member nicht mehr benötigt <xref:System.Security.Permissions.ReflectionPermission> mit der <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> Flag.</span><span class="sxs-lookup"><span data-stu-id="dc8af-368">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="dc8af-369">(Siehe [Sicherheitsaspekte bei der Reflektionsausgabe](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) Zur Verwendung dieser Funktionen sollte die Anwendung für [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] oder höher ausgelegt sein.</span><span class="sxs-lookup"><span data-stu-id="dc8af-369">(See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dc8af-370">Das folgende Beispiel veranschaulicht einen Aufruf von `DefineUnmanagedResource`, übergeben eine externe Ressource-Datei.</span><span class="sxs-lookup"><span data-stu-id="dc8af-370">The example below demonstrates a call to `DefineUnmanagedResource`, passing an external resource file.</span></span>  
  
 [!code-cpp[AssemblyBuilder_DefineUnmanagedResource#3](~/samples/snippets/cpp/VS_Snippets_CLR/AssemblyBuilder_DefineUnmanagedResource/CPP/assemblybuilder_defineunmanagedresource.cpp#3)]
 [!code-csharp[AssemblyBuilder_DefineUnmanagedResource#3](~/samples/snippets/csharp/VS_Snippets_CLR/AssemblyBuilder_DefineUnmanagedResource/CS/assemblybuilder_defineunmanagedresource.cs#3)]
 [!code-vb[AssemblyBuilder_DefineUnmanagedResource#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/AssemblyBuilder_DefineUnmanagedResource/VB/assemblybuilder_defineunmanagedresource.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="dc8af-371">Zuvor wurde eine nicht verwaltete Ressource definiert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-371">An unmanaged resource was previously defined.</span>
          </span>
          <span data-ttu-id="dc8af-372">Oder:  Die Datei <paramref name="resourceFileName" /> kann nicht gelesen werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-372">-or-  The file <paramref name="resourceFileName" /> is not readable.</span>
          </span>
          <span data-ttu-id="dc8af-373">Oder:  <paramref name="resourceFileName" /> ist eine leere Zeichenfolge ("").</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-373">-or-  <paramref name="resourceFileName" /> is the empty string ("").</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="dc8af-374">
            <paramref name="resourceFileName" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-374">
              <paramref name="resourceFileName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="dc8af-375">
            <paramref name="resourceFileName" /> wurde nicht gefunden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-375">
              <paramref name="resourceFileName" /> is not found.</span>
          </span>
          <span data-ttu-id="dc8af-376">Oder:  <paramref name="resourceFileName" /> ist ein Verzeichnis.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-376">-or-  <paramref name="resourceFileName" /> is a directory.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="dc8af-377">Der Aufrufer verfügt nicht über die erforderliche Berechtigung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-377">The caller does not have the required permission.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="dc8af-378">Beim Aufrufen spät gebundene durch Mechanismen wie z. B. <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-378">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          </span>
          <span data-ttu-id="dc8af-379">Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-379">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span>
          </span>
        </permission>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="dc8af-380">Die FileIOPermissionAccess.Read-Berechtigung ist erforderlich, um die Ressourcendatei zugreifen <paramref name="resourceFileName" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-380">The FileIOPermissionAccess.Read permission is needed to access the resource file <paramref name="resourceFileName" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="DefineVersionInfoResource">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="dc8af-381">Definiert eine nicht verwaltete Versionsinformationsressource für diese Assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-381">Defines an unmanaged version information resource for this assembly.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DefineVersionInfoResource">
      <MemberSignature Language="C#" Value="public void DefineVersionInfoResource ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DefineVersionInfoResource() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.AssemblyBuilder.DefineVersionInfoResource" />
      <MemberSignature Language="VB.NET" Value="Public Sub DefineVersionInfoResource ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DefineVersionInfoResource();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="dc8af-382">Definiert eine nicht verwaltete Versionsinformationsressource mithilfe der im AssemblyName-Objekt der Assembly angegebenen Informationen und benutzerdefinierten Attributen der Assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-382">Defines an unmanaged version information resource using the information specified in the assembly's AssemblyName object and the assembly's custom attributes.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc8af-383">Eine Assembly kann nur eine nicht verwaltete Ressource zugeordnet werden.</span><span class="sxs-lookup"><span data-stu-id="dc8af-383">An assembly can be associated with only one unmanaged resource.</span></span> <span data-ttu-id="dc8af-384">Dies bedeutet, dass der Aufruf <xref:System.Reflection.Emit.AssemblyBuilder.DefineVersionInfoResource%2A> oder <xref:System.Reflection.Emit.AssemblyBuilder.DefineUnmanagedResource%2A> nach entweder eine der Methoden aufgerufen wurde zuvor löst die System.ArgumentException.</span><span class="sxs-lookup"><span data-stu-id="dc8af-384">This means that calling <xref:System.Reflection.Emit.AssemblyBuilder.DefineVersionInfoResource%2A> or <xref:System.Reflection.Emit.AssemblyBuilder.DefineUnmanagedResource%2A> after either one of the methods was called previously will throw the System.ArgumentException.</span></span> <span data-ttu-id="dc8af-385">Mehrere nicht verwaltete Ressourcen müssen mit einem Tool wie dem Microsoft ResMerge-Hilfsprogramm (nicht im Lieferumfang der common Language Runtime SDK) zusammengeführt werden sollen.</span><span class="sxs-lookup"><span data-stu-id="dc8af-385">Multiple unmanaged resources need to be merged with a tool such as the Microsoft ResMerge utility (not supplied with the common language runtime SDK).</span></span>  
  
 <span data-ttu-id="dc8af-386">Leere Argumentzeichenfolgen als einzelnes Leerzeichen geschrieben.</span><span class="sxs-lookup"><span data-stu-id="dc8af-386">Empty argument strings get written as a single space.</span></span> <span data-ttu-id="dc8af-387">Null-Zeichen in die Argumentzeichenfolgen werden Leerzeichen durch ersetzt.</span><span class="sxs-lookup"><span data-stu-id="dc8af-387">Spaces are substituted for null characters in the argument strings.</span></span>  
  
 <span data-ttu-id="dc8af-388">Die Informationen ist abgeleitet von der `AssemblyName` Objekt verwendet, um diese dynamische Assembly zu definieren.</span><span class="sxs-lookup"><span data-stu-id="dc8af-388">The information is inferred from the `AssemblyName` object used to define this dynamic assembly.</span></span> <span data-ttu-id="dc8af-389">In angegebenen Informationen zu benutzerdefinierten Attribute dieser Assembly überschreiben die `AssemblyName` Objekt.</span><span class="sxs-lookup"><span data-stu-id="dc8af-389">This assembly's custom attributes override information specified in the `AssemblyName` object.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="dc8af-390">Beginnend mit der [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], diese Member nicht mehr benötigt <xref:System.Security.Permissions.ReflectionPermission> mit der <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> Flag.</span><span class="sxs-lookup"><span data-stu-id="dc8af-390">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="dc8af-391">(Siehe [Sicherheitsaspekte bei der Reflektionsausgabe](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) Zur Verwendung dieser Funktionen sollte die Anwendung für [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] oder höher ausgelegt sein.</span><span class="sxs-lookup"><span data-stu-id="dc8af-391">(See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dc8af-392">Das folgende Beispiel veranschaulicht die Verwendung von `DefineVersionInfoResource`.</span><span class="sxs-lookup"><span data-stu-id="dc8af-392">The example below illustrates the usage of `DefineVersionInfoResource`.</span></span>  
  
 [!code-cpp[AssemblyBuilder_DefineVersionInfoResource#1](~/samples/snippets/cpp/VS_Snippets_CLR/AssemblyBuilder_DefineVersionInfoResource/CPP/assemblybuilder_defineversioninforesource.cpp#1)]
 [!code-csharp[AssemblyBuilder_DefineVersionInfoResource#1](~/samples/snippets/csharp/VS_Snippets_CLR/AssemblyBuilder_DefineVersionInfoResource/CS/assemblybuilder_defineversioninforesource.cs#1)]
 [!code-vb[AssemblyBuilder_DefineVersionInfoResource#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/AssemblyBuilder_DefineVersionInfoResource/VB/assemblybuilder_defineversioninforesource.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="dc8af-393">Eine nicht verwaltete Versionsinformationsressource wurde zuvor definiert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-393">An unmanaged version information resource was previously defined.</span>
          </span>
          <span data-ttu-id="dc8af-394">Oder:  Die nicht verwalteten Versionsinformationen können nicht beibehalten werden, da sie zu umfangreich sind.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-394">-or-  The unmanaged version information is too large to persist.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="dc8af-395">Der Aufrufer verfügt nicht über die erforderliche Berechtigung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-395">The caller does not have the required permission.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="dc8af-396">Beim Aufrufen spät gebundene durch Mechanismen wie z. B. <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-396">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          </span>
          <span data-ttu-id="dc8af-397">Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-397">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="DefineVersionInfoResource">
      <MemberSignature Language="C#" Value="public void DefineVersionInfoResource (string product, string productVersion, string company, string copyright, string trademark);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DefineVersionInfoResource(string product, string productVersion, string company, string copyright, string trademark) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.AssemblyBuilder.DefineVersionInfoResource(System.String,System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DefineVersionInfoResource (product As String, productVersion As String, company As String, copyright As String, trademark As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DefineVersionInfoResource(System::String ^ product, System::String ^ productVersion, System::String ^ company, System::String ^ copyright, System::String ^ trademark);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="product" Type="System.String" />
        <Parameter Name="productVersion" Type="System.String" />
        <Parameter Name="company" Type="System.String" />
        <Parameter Name="copyright" Type="System.String" />
        <Parameter Name="trademark" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="product">
          <span data-ttu-id="dc8af-398">Der Name des Produkts, mit dem diese Assembly verteilt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-398">The name of the product with which this assembly is distributed.</span>
          </span>
        </param>
        <param name="productVersion">
          <span data-ttu-id="dc8af-399">Die Version des Produkts, mit dem diese Assembly verteilt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-399">The version of the product with which this assembly is distributed.</span>
          </span>
        </param>
        <param name="company">
          <span data-ttu-id="dc8af-400">Der Name des Unternehmens, das diese Assembly erstellt hat.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-400">The name of the company that produced this assembly.</span>
          </span>
        </param>
        <param name="copyright">
          <span data-ttu-id="dc8af-401">Beschreibt alle Copyrighthinweise, Marken und eingetragenen Marken, die diese Assembly betreffen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-401">Describes all copyright notices, trademarks, and registered trademarks that apply to this assembly.</span>
          </span>
          <span data-ttu-id="dc8af-402">Dies sollte den vollständigen Text aller Hinweise, rechtliche Symbole, Copyright-Datumsangaben, Markennummern usw. umfassen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-402">This should include the full text of all notices, legal symbols, copyright dates, trademark numbers, and so on.</span>
          </span>
          <span data-ttu-id="dc8af-403">Im Deutschen sollte diese Zeichenfolge das folgende Format aufweisen: "Copyright Microsoft Corp. 1990-2001".</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-403">In English, this string should be in the format "Copyright Microsoft Corp. 1990-2001".</span>
          </span>
        </param>
        <param name="trademark">
          <span data-ttu-id="dc8af-404">Beschreibt alle Marken und eingetragenen Marken, die diese Assembly betreffen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-404">Describes all trademarks and registered trademarks that apply to this assembly.</span>
          </span>
          <span data-ttu-id="dc8af-405">Dies sollte den vollständigen Text aller Hinweise, rechtliche Symbole, Markennummern usw. umfassen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-405">This should include the full text of all notices, legal symbols, trademark numbers, and so on.</span>
          </span>
          <span data-ttu-id="dc8af-406">Im Deutschen sollte diese Zeichenfolge das folgende Format aufweisen: "Windows ist eine Marke der Microsoft Corporation".</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-406">In English, this string should be in the format "Windows is a trademark of Microsoft Corporation".</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dc8af-407">Definiert eine nicht verwaltete Versionsinformationsressource für diese Assembly mit den bereitgestellten Angaben.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-407">Defines an unmanaged version information resource for this assembly with the given specifications.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc8af-408">Eine Assembly kann nur eine nicht verwaltete Ressource zugeordnet werden.</span><span class="sxs-lookup"><span data-stu-id="dc8af-408">An assembly can be associated with only one unmanaged resource.</span></span> <span data-ttu-id="dc8af-409">Dies bedeutet, dass der Aufruf <xref:System.Reflection.Emit.AssemblyBuilder.DefineVersionInfoResource%2A> oder <xref:System.Reflection.Emit.AssemblyBuilder.DefineUnmanagedResource%2A> nach entweder eine der Methoden aufgerufen wurde zuvor löst die System.ArgumentException.</span><span class="sxs-lookup"><span data-stu-id="dc8af-409">This means that calling <xref:System.Reflection.Emit.AssemblyBuilder.DefineVersionInfoResource%2A> or <xref:System.Reflection.Emit.AssemblyBuilder.DefineUnmanagedResource%2A> after either one of the methods was called previously will throw the System.ArgumentException.</span></span> <span data-ttu-id="dc8af-410">Mehrere nicht verwaltete Ressourcen müssen mit einem Tool wie z. B. die Microsoft zusammenzuführenden `ResMerge` -Dienstprogramm (nicht mit der common Language Runtime SDK).</span><span class="sxs-lookup"><span data-stu-id="dc8af-410">Multiple unmanaged resources need to be merged with a tool such as the Microsoft `ResMerge` utility (not supplied with the common language runtime SDK).</span></span>  
  
 <span data-ttu-id="dc8af-411">Leere Argumentzeichenfolgen als einzelnes Leerzeichen geschrieben.</span><span class="sxs-lookup"><span data-stu-id="dc8af-411">Empty argument strings get written as a single space.</span></span> <span data-ttu-id="dc8af-412">Null-Zeichen in die Argumentzeichenfolgen werden Leerzeichen durch ersetzt.</span><span class="sxs-lookup"><span data-stu-id="dc8af-412">Spaces are substituted for null characters in the argument strings.</span></span>  
  
 <span data-ttu-id="dc8af-413">Die Struktur der Versionsressource enthält Daten, die die Version, Sprache und Verteilung der Datei zu identifizieren.</span><span class="sxs-lookup"><span data-stu-id="dc8af-413">The structure of the version resource includes data that identifies the version, language, and distribution of the file.</span></span> <span data-ttu-id="dc8af-414">Verwenden Sie die Funktionen in der Datei-Installation-Bibliothek (VER. Installationsprogramme (DLL) zum Abrufen der Versionsinformationsressource aus einer Datei und zum Extrahieren von den Versionsinformationsblock aus der Ressource.</span><span class="sxs-lookup"><span data-stu-id="dc8af-414">Installation programs use the functions in the file installation library (VER.DLL) to retrieve the version information resource from a file and to extract the version information blocks from the resource.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="dc8af-415">Beginnend mit der [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], diese Member nicht mehr benötigt <xref:System.Security.Permissions.ReflectionPermission> mit der <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> Flag.</span><span class="sxs-lookup"><span data-stu-id="dc8af-415">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="dc8af-416">(Siehe [Sicherheitsaspekte bei der Reflektionsausgabe](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) Zur Verwendung dieser Funktionen sollte die Anwendung für [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] oder höher ausgelegt sein.</span><span class="sxs-lookup"><span data-stu-id="dc8af-416">(See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dc8af-417">Das folgende Beispiel veranschaulicht die Verwendung von `DefineVersionInfoResource`.</span><span class="sxs-lookup"><span data-stu-id="dc8af-417">The example below illustrates the usage of `DefineVersionInfoResource`.</span></span>  
  
 [!code-cpp[AssemblyBuilder_DefineVersionInfoResource#1](~/samples/snippets/cpp/VS_Snippets_CLR/AssemblyBuilder_DefineVersionInfoResource/CPP/assemblybuilder_defineversioninforesource.cpp#1)]
 [!code-csharp[AssemblyBuilder_DefineVersionInfoResource#1](~/samples/snippets/csharp/VS_Snippets_CLR/AssemblyBuilder_DefineVersionInfoResource/CS/assemblybuilder_defineversioninforesource.cs#1)]
 [!code-vb[AssemblyBuilder_DefineVersionInfoResource#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/AssemblyBuilder_DefineVersionInfoResource/VB/assemblybuilder_defineversioninforesource.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="dc8af-418">Eine nicht verwaltete Versionsinformationsressource wurde zuvor definiert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-418">An unmanaged version information resource was previously defined.</span>
          </span>
          <span data-ttu-id="dc8af-419">Oder:  Die nicht verwalteten Versionsinformationen können nicht beibehalten werden, da sie zu umfangreich sind.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-419">-or-  The unmanaged version information is too large to persist.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="dc8af-420">Der Aufrufer verfügt nicht über die erforderliche Berechtigung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-420">The caller does not have the required permission.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="dc8af-421">Beim Aufrufen spät gebundene durch Mechanismen wie z. B. <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-421">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          </span>
          <span data-ttu-id="dc8af-422">Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-422">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="EntryPoint">
      <MemberSignature Language="C#" Value="public override System.Reflection.MethodInfo EntryPoint { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.MethodInfo EntryPoint" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.AssemblyBuilder.EntryPoint" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property EntryPoint As MethodInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Reflection::MethodInfo ^ EntryPoint { System::Reflection::MethodInfo ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="dc8af-423">Gibt den Einstiegspunkt dieser Assembly zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-423">Returns the entry point of this assembly.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="dc8af-424">Der Einstiegspunkt dieser Assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-424">The entry point of this assembly.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="dc8af-425">Der Aufrufer verfügt nicht über die erforderliche Berechtigung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-425">The caller does not have the required permission.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="dc8af-426">Beim Aufrufen spät gebundene durch Mechanismen wie z. B. <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-426">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          </span>
          <span data-ttu-id="dc8af-427">Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-427">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.AssemblyBuilder.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="dc8af-428">Ein Objekt, das mit dieser Instanz verglichen werden soll, oder <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-428">An object to compare with this instance, or <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dc8af-429">Gibt einen Wert zurück, der angibt, ob diese Instanz gleich dem angegebenen Objekt ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-429">Returns a value that indicates whether this instance is equal to the specified object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="dc8af-430">
            <see langword="true" />, wenn <paramref name="obj" /> dem Typ und dem Wert dieser Instanz entspricht, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-430">
              <see langword="true" /> if <paramref name="obj" /> equals the type and value of this instance; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Evidence">
      <MemberSignature Language="C#" Value="public override System.Security.Policy.Evidence Evidence { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Policy.Evidence Evidence" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.AssemblyBuilder.Evidence" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Evidence As Evidence" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Security::Policy::Evidence ^ Evidence { System::Security::Policy::Evidence ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Policy.Evidence</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="dc8af-431">Ruft den Beweis für diese Assembly ab.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-431">Gets the evidence for this assembly.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="dc8af-432">Der Beweis für diese Assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-432">The evidence for this assembly.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FullName">
      <MemberSignature Language="C#" Value="public override string FullName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FullName" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.AssemblyBuilder.FullName" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property FullName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ FullName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="dc8af-433">Ruft den Anzeigenamen der aktuellen dynamischen Assembly ab.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-433">Gets the display name of the current dynamic assembly.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="dc8af-434">Der Anzeigename der dynamischen Assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-434">The display name of the dynamic assembly.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc8af-435">Finden Sie unter <xref:System.Reflection.AssemblyName> eine Beschreibung des Formats des Anzeigenamens einer Assembly.</span><span class="sxs-lookup"><span data-stu-id="dc8af-435">See <xref:System.Reflection.AssemblyName> for a description of the format of the display name of an assembly.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetCustomAttributes">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="dc8af-436">Gibt benutzerdefinierte Attribute zurück, die auf den aktuellen <see cref="T:System.Reflection.Emit.AssemblyBuilder" /> angewendet wurden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-436">Returns custom attributes that have been applied to the current <see cref="T:System.Reflection.Emit.AssemblyBuilder" /></span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public override object[] GetCustomAttributes (bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object[] GetCustomAttributes(bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.AssemblyBuilder.GetCustomAttributes(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetCustomAttributes (inherit As Boolean) As Object()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Object ^&gt; ^ GetCustomAttributes(bool inherit);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inherit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="inherit">
          <span data-ttu-id="dc8af-437">Dieses Argument wird für Objekte dieses Typs ignoriert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-437">This argument is ignored for objects of this type.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dc8af-438">Gibt alle benutzerdefinierten Attribute zurück, die auf den aktuellen <see cref="T:System.Reflection.Emit.AssemblyBuilder" /> angewendet wurden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-438">Returns all the custom attributes that have been applied to the current <see cref="T:System.Reflection.Emit.AssemblyBuilder" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="dc8af-439">Ein Array, das die benutzerdefinierten Attribute enthält. Das Array ist leer, wenn keine Attribute vorhanden sind.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-439">An array that contains the custom attributes; the array is empty if there are no attributes.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public override object[] GetCustomAttributes (Type attributeType, bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object[] GetCustomAttributes(class System.Type attributeType, bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.AssemblyBuilder.GetCustomAttributes(System.Type,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetCustomAttributes (attributeType As Type, inherit As Boolean) As Object()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Object ^&gt; ^ GetCustomAttributes(Type ^ attributeType, bool inherit);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributeType" Type="System.Type" />
        <Parameter Name="inherit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="attributeType">
          <span data-ttu-id="dc8af-440">Der Basistyp, von dem Attribute abgeleitet werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-440">The base type from which attributes derive.</span>
          </span>
        </param>
        <param name="inherit">
          <span data-ttu-id="dc8af-441">Dieses Argument wird für Objekte dieses Typs ignoriert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-441">This argument is ignored for objects of this type.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dc8af-442">Gibt alle benutzerdefinierten Attribute zurück, die auf den aktuellen <see cref="T:System.Reflection.Emit.AssemblyBuilder" /> angewendet wurden und die von einem angegebenen Attributtyp abgeleitet sind.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-442">Returns all the custom attributes that have been applied to the current <see cref="T:System.Reflection.Emit.AssemblyBuilder" />, and that derive from a specified attribute type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="dc8af-443">Ein Array, das die benutzerdefinierten Attribute enthält, die auf beliebiger Ebene von <paramref name="attributeType" /> abgeleitet sind. Das Array ist leer, wenn keine solchen Attribute vorhanden sind.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-443">An array that contains the custom attributes that are derived at any level from <paramref name="attributeType" />; the array is empty if there are no such attributes.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="dc8af-444">
            <paramref name="attributeType" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-444">
              <paramref name="attributeType" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="dc8af-445">
            <paramref name="attributeType" /> ist kein von der Laufzeit angegebenes <see cref="T:System.Type" />-Objekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-445">
              <paramref name="attributeType" /> is not a <see cref="T:System.Type" /> object supplied by the runtime.</span>
          </span>
          <span data-ttu-id="dc8af-446">
            <paramref name="attributeType" /> ist beispielsweise ein <see cref="T:System.Reflection.Emit.TypeBuilder" />-Objekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-446">For example, <paramref name="attributeType" /> is a <see cref="T:System.Reflection.Emit.TypeBuilder" /> object.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttributesData">
      <MemberSignature Language="C#" Value="public override System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeData&gt; GetCustomAttributesData ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Collections.Generic.IList`1&lt;class System.Reflection.CustomAttributeData&gt; GetCustomAttributesData() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.AssemblyBuilder.GetCustomAttributesData" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetCustomAttributesData () As IList(Of CustomAttributeData)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Collections::Generic::IList&lt;System::Reflection::CustomAttributeData ^&gt; ^ GetCustomAttributesData();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeData&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="dc8af-447">Gibt <see cref="T:System.Reflection.CustomAttributeData" />-Objekte mit Informationen zu den Attributen zurück, die auf den aktuellen <see cref="T:System.Reflection.Emit.AssemblyBuilder" /> angewendet wurden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-447">Returns <see cref="T:System.Reflection.CustomAttributeData" /> objects that contain information about the attributes that have been applied to the current <see cref="T:System.Reflection.Emit.AssemblyBuilder" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="dc8af-448">Eine generische Liste von <see cref="T:System.Reflection.CustomAttributeData" />-Objekten, die Daten zu den Attributen darstellen, die auf das aktuelle Modul angewendet wurden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-448">A generic list of <see cref="T:System.Reflection.CustomAttributeData" /> objects representing data about the attributes that have been applied to the current module.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc8af-449">Verwenden Sie diese Methode, um die benutzerdefinierten Attribute des Codes in den ReflectionOnly Kontext, in Fällen zu untersuchen, in dem die benutzerdefinierten Attribute selbst im Code definiert werden, die in den reflektionsbezogenen Kontext geladen wird.</span><span class="sxs-lookup"><span data-stu-id="dc8af-449">Use this method to examine the custom attributes of code in the reflection-only context, in cases where the custom attributes themselves are defined in code that is loaded into the reflection-only context.</span></span> <span data-ttu-id="dc8af-450">Methoden, z. B. <xref:System.Attribute.GetCustomAttributes%2A?displayProperty=nameWithType> und <xref:System.Reflection.Assembly.GetCustomAttributes%2A?displayProperty=nameWithType> kann nicht in solchen Fällen verwendet werden, da sie Instanzen der Attribute erstellen.</span><span class="sxs-lookup"><span data-stu-id="dc8af-450">Methods such as <xref:System.Attribute.GetCustomAttributes%2A?displayProperty=nameWithType> and <xref:System.Reflection.Assembly.GetCustomAttributes%2A?displayProperty=nameWithType> cannot be used in such cases, because they create instances of the attributes.</span></span> <span data-ttu-id="dc8af-451">Code in den ReflectionOnly Kontext kann nicht ausgeführt werden.</span><span class="sxs-lookup"><span data-stu-id="dc8af-451">Code in the reflection-only context cannot be executed.</span></span> <span data-ttu-id="dc8af-452">Weitere Informationen und Beispielcode, finden Sie unter der <xref:System.Reflection.CustomAttributeData> Klasse.</span><span class="sxs-lookup"><span data-stu-id="dc8af-452">For more information and for example code, see the <xref:System.Reflection.CustomAttributeData> class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDynamicModule">
      <MemberSignature Language="C#" Value="public System.Reflection.Emit.ModuleBuilder GetDynamicModule (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Reflection.Emit.ModuleBuilder GetDynamicModule(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.AssemblyBuilder.GetDynamicModule(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetDynamicModule (name As String) As ModuleBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Emit::ModuleBuilder ^ GetDynamicModule(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.ModuleBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="dc8af-453">Der Name des angeforderten dynamischen Moduls.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-453">The name of the requested dynamic module.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dc8af-454">Gibt das dynamische Modul mit dem angegebenen Namen zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-454">Returns the dynamic module with the specified name.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="dc8af-455">Ein ModuleBuilder-Objekt, das das angeforderte dynamische Modul darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-455">A ModuleBuilder object representing the requested dynamic module.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="dc8af-456">
            <paramref name="name" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-456">
              <paramref name="name" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="dc8af-457">Die Länge von <paramref name="name" /> ist 0 (null).</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-457">The length of <paramref name="name" /> is zero.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="dc8af-458">Der Aufrufer verfügt nicht über die erforderliche Berechtigung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-458">The caller does not have the required permission.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="dc8af-459">Beim Aufrufen spät gebundene durch Mechanismen wie z. B. <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-459">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          </span>
          <span data-ttu-id="dc8af-460">Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-460">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="GetExportedTypes">
      <MemberSignature Language="C#" Value="public override Type[] GetExportedTypes ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Type[] GetExportedTypes() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.AssemblyBuilder.GetExportedTypes" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetExportedTypes () As Type()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;Type ^&gt; ^ GetExportedTypes();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="dc8af-461">Ruft die in dieser Assembly definierten exportierten Typen ab.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-461">Gets the exported types defined in this assembly.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="dc8af-462">Ein Array von <see cref="T:System.Type" />, das die in dieser Assembly definierten exportierten Typen enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-462">An array of <see cref="T:System.Type" /> containing the exported types defined in this assembly.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="dc8af-463">Diese Methode ist nicht implementiert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-463">This method is not implemented.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="dc8af-464">Der Aufrufer verfügt nicht über die erforderliche Berechtigung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-464">The caller does not have the required permission.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="dc8af-465">Beim Aufrufen spät gebundene durch Mechanismen wie z. B. <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-465">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          </span>
          <span data-ttu-id="dc8af-466">Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-466">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="GetFile">
      <MemberSignature Language="C#" Value="public override System.IO.FileStream GetFile (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IO.FileStream GetFile(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.AssemblyBuilder.GetFile(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetFile (name As String) As FileStream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::IO::FileStream ^ GetFile(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.FileStream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="dc8af-467">Der Name der angegebenen Datei.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-467">The name of the specified file.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dc8af-468">Ruft einen <see cref="T:System.IO.FileStream" /> für die angegebene Datei in der Dateitabelle des Manifests dieser Assembly ab.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-468">Gets a <see cref="T:System.IO.FileStream" /> for the specified file in the file table of the manifest of this assembly.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="dc8af-469">Ein <see cref="T:System.IO.FileStream" /> für die angegebene Datei, oder <see langword="null" />, wenn die Datei nicht gefunden wurde.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-469">A <see cref="T:System.IO.FileStream" /> for the specified file, or <see langword="null" />, if the file is not found.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc8af-470">`name` der Pfad zur Datei sollte nicht enthalten.</span><span class="sxs-lookup"><span data-stu-id="dc8af-470">`name` should not include the path to the file.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="dc8af-471">Diese Methode wird zurzeit nicht unterstützt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-471">This method is not currently supported.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="dc8af-472">Der Aufrufer verfügt nicht über die erforderliche Berechtigung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-472">The caller does not have the required permission.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="dc8af-473">Beim Aufrufen spät gebundene durch Mechanismen wie z. B. <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-473">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          </span>
          <span data-ttu-id="dc8af-474">Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-474">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="GetFiles">
      <MemberSignature Language="C#" Value="public override System.IO.FileStream[] GetFiles (bool getResourceModules);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IO.FileStream[] GetFiles(bool getResourceModules) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.AssemblyBuilder.GetFiles(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetFiles (getResourceModules As Boolean) As FileStream()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::IO::FileStream ^&gt; ^ GetFiles(bool getResourceModules);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.FileStream[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="getResourceModules" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="getResourceModules">
          <span data-ttu-id="dc8af-475">
            <see langword="true" />, wenn Ressourcenmodule eingebunden werden sollen, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-475">
              <see langword="true" /> to include resource modules; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dc8af-476">Ruft die Dateien in der Dateitabelle eines Assemblymanifests ab und gibt an, ob Ressourcenmodule eingebunden werden sollen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-476">Gets the files in the file table of an assembly manifest, specifying whether to include resource modules.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="dc8af-477">Ein Array von <see cref="T:System.IO.FileStream" />-Objekten.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-477">An array of <see cref="T:System.IO.FileStream" /> objects.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="dc8af-478">Diese Methode wird zurzeit nicht unterstützt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-478">This method is not currently supported.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="dc8af-479">Der Aufrufer verfügt nicht über die erforderliche Berechtigung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-479">The caller does not have the required permission.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="dc8af-480">Beim Aufrufen spät gebundene durch Mechanismen wie z. B. <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-480">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          </span>
          <span data-ttu-id="dc8af-481">Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-481">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.AssemblyBuilder.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="dc8af-482">Gibt den Hashcode für diese Instanz zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-482">Returns the hash code for this instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="dc8af-483">Ein 32-Bit-Hashcode als ganze Zahl mit Vorzeichen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-483">A 32-bit signed integer hash code.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetLoadedModules">
      <MemberSignature Language="C#" Value="public override System.Reflection.Module[] GetLoadedModules (bool getResourceModules);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Reflection.Module[] GetLoadedModules(bool getResourceModules) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.AssemblyBuilder.GetLoadedModules(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetLoadedModules (getResourceModules As Boolean) As Module()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Reflection::Module ^&gt; ^ GetLoadedModules(bool getResourceModules);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Module[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="getResourceModules" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="getResourceModules">
          <span data-ttu-id="dc8af-484">
            <see langword="true" />, wenn Ressourcenmodule eingebunden werden sollen, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-484">
              <see langword="true" /> to include resource modules; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dc8af-485">Gibt alle geladenen Module zurück, die Bestandteil dieser Assembly sind, und bindet optional Ressourcenmodule ein.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-485">Returns all the loaded modules that are part of this assembly, and optionally includes resource modules.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="dc8af-486">Die geladenen Module, die Bestandteil dieser Assembly sind.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-486">The loaded modules that are part of this assembly.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetManifestResourceInfo">
      <MemberSignature Language="C#" Value="public override System.Reflection.ManifestResourceInfo GetManifestResourceInfo (string resourceName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Reflection.ManifestResourceInfo GetManifestResourceInfo(string resourceName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.AssemblyBuilder.GetManifestResourceInfo(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetManifestResourceInfo (resourceName As String) As ManifestResourceInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Reflection::ManifestResourceInfo ^ GetManifestResourceInfo(System::String ^ resourceName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.ManifestResourceInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="resourceName">
          <span data-ttu-id="dc8af-487">Der Name der Ressource.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-487">The name of the resource.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dc8af-488">Gibt Informationen darüber zurück, wie die angegebene Ressource beibehalten wurde.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-488">Returns information about how the given resource has been persisted.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="dc8af-489">
            <see cref="T:System.Reflection.ManifestResourceInfo" /> mit Informationen zur Topologie der Ressource, oder <see langword="null" />, falls die Ressource nicht gefunden wurde.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-489">
              <see cref="T:System.Reflection.ManifestResourceInfo" /> populated with information about the resource's topology, or <see langword="null" /> if the resource is not found.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="dc8af-490">Diese Methode wird zurzeit nicht unterstützt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-490">This method is not currently supported.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="dc8af-491">Der Aufrufer verfügt nicht über die erforderliche Berechtigung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-491">The caller does not have the required permission.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="dc8af-492">Beim Aufrufen spät gebundene durch Mechanismen wie z. B. <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-492">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          </span>
          <span data-ttu-id="dc8af-493">Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-493">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="GetManifestResourceNames">
      <MemberSignature Language="C#" Value="public override string[] GetManifestResourceNames ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string[] GetManifestResourceNames() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.AssemblyBuilder.GetManifestResourceNames" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetManifestResourceNames () As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::String ^&gt; ^ GetManifestResourceNames();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="dc8af-494">Lädt die angegebene Manifestressource aus dieser Assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-494">Loads the specified manifest resource from this assembly.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="dc8af-495">Ein Array des Typs <see langword="String" />, das die Namen sämtlicher Ressourcen enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-495">An array of type <see langword="String" /> containing the names of all the resources.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="dc8af-496">Diese Methode wird für eine dynamische Assembly nicht unterstützt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-496">This method is not supported on a dynamic assembly.</span>
          </span>
          <span data-ttu-id="dc8af-497">Um die Manifestressourcennamen abzurufen, verwenden Sie <see cref="M:System.Reflection.Assembly.GetManifestResourceNames" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-497">To get the manifest resource names, use <see cref="M:System.Reflection.Assembly.GetManifestResourceNames" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="dc8af-498">Der Aufrufer verfügt nicht über die erforderliche Berechtigung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-498">The caller does not have the required permission.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="dc8af-499">Beim Aufrufen spät gebundene durch Mechanismen wie z. B. <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-499">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          </span>
          <span data-ttu-id="dc8af-500">Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-500">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetManifestResourceStream">
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="dc8af-501">Lädt die angegebene Manifestressource aus dieser Assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-501">Loads the specified manifest resource from this assembly.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetManifestResourceStream">
      <MemberSignature Language="C#" Value="public override System.IO.Stream GetManifestResourceStream (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IO.Stream GetManifestResourceStream(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.AssemblyBuilder.GetManifestResourceStream(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetManifestResourceStream (name As String) As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::IO::Stream ^ GetManifestResourceStream(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="dc8af-502">Der Name der angeforderten Manifestressource.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-502">The name of the manifest resource being requested.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dc8af-503">Lädt die angegebene Manifestressource aus dieser Assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-503">Loads the specified manifest resource from this assembly.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="dc8af-504">Ein <see cref="T:System.IO.Stream" />, der diese Manifestressource darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-504">A <see cref="T:System.IO.Stream" /> representing this manifest resource.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="dc8af-505">Diese Methode wird zurzeit nicht unterstützt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-505">This method is not currently supported.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="dc8af-506">Der Aufrufer verfügt nicht über die erforderliche Berechtigung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-506">The caller does not have the required permission.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="dc8af-507">Beim Aufrufen spät gebundene durch Mechanismen wie z. B. <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-507">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          </span>
          <span data-ttu-id="dc8af-508">Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-508">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="GetManifestResourceStream">
      <MemberSignature Language="C#" Value="public override System.IO.Stream GetManifestResourceStream (Type type, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IO.Stream GetManifestResourceStream(class System.Type type, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.AssemblyBuilder.GetManifestResourceStream(System.Type,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::IO::Stream ^ GetManifestResourceStream(Type ^ type, System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="dc8af-509">Der Typ, dessen Namespace verwendet wird, um den Gültigkeitsbereich des Manifestressourcennamens festzulegen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-509">The type whose namespace is used to scope the manifest resource name.</span>
          </span>
        </param>
        <param name="name">
          <span data-ttu-id="dc8af-510">Der Name der angeforderten Manifestressource.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-510">The name of the manifest resource being requested.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dc8af-511">Lädt die angegebene Manifestressource, deren Gültigkeitsbereich durch den Namespace des angegebenen Typs festgelegt ist, aus dieser Assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-511">Loads the specified manifest resource, scoped by the namespace of the specified type, from this assembly.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="dc8af-512">Ein <see cref="T:System.IO.Stream" />, der diese Manifestressource darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-512">A <see cref="T:System.IO.Stream" /> representing this manifest resource.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc8af-513">Das zurückgegebene <xref:System.IO.Stream> Dateizeiger am Anfang der Ressourcenanbieters festgelegt wurde.</span><span class="sxs-lookup"><span data-stu-id="dc8af-513">The returned <xref:System.IO.Stream> has its file pointer set to the beginning of the resource.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dc8af-514">Wenn der vollständige Name des `type` "MyNameSpace.MyClasses lautet" und `name` ist ""Dot"," `GetManifestResourceStream` Ressource MyNameSpace.dot gesucht wird.</span><span class="sxs-lookup"><span data-stu-id="dc8af-514">If the full name of `type` is "MyNameSpace.MyClasses" and `name` is "Dot", `GetManifestResourceStream` will search for a resource named MyNameSpace.Dot.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="dc8af-515">Diese Methode wird zurzeit nicht unterstützt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-515">This method is not currently supported.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="dc8af-516">Der Aufrufer verfügt nicht über die erforderliche Berechtigung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-516">The caller does not have the required permission.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="dc8af-517">Beim Aufrufen spät gebundene durch Mechanismen wie z. B. <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-517">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          </span>
          <span data-ttu-id="dc8af-518">Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-518">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="GetModule">
      <MemberSignature Language="C#" Value="public override System.Reflection.Module GetModule (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Reflection.Module GetModule(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.AssemblyBuilder.GetModule(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetModule (name As String) As Module" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Reflection::Module ^ GetModule(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Module</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="dc8af-519">Der Name des angeforderten Moduls.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-519">The name of the requested module.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dc8af-520">Ruft das angegebene Modul in dieser Assembly ab.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-520">Gets the specified module in this assembly.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="dc8af-521">Das angeforderte Modul oder <see langword="null" />, wenn das Modul nicht gefunden wurde.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-521">The module being requested, or <see langword="null" /> if the module is not found.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetModules">
      <MemberSignature Language="C#" Value="public override System.Reflection.Module[] GetModules (bool getResourceModules);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Reflection.Module[] GetModules(bool getResourceModules) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.AssemblyBuilder.GetModules(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetModules (getResourceModules As Boolean) As Module()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Reflection::Module ^&gt; ^ GetModules(bool getResourceModules);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Module[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="getResourceModules" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="getResourceModules">
          <span data-ttu-id="dc8af-522">
            <see langword="true" />, wenn Ressourcenmodule eingebunden werden sollen, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-522">
              <see langword="true" /> to include resource modules; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dc8af-523">Ruft alle Module ab, die Bestandteil dieser Assembly sind, und bindet optional Ressourcenmodule ein.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-523">Gets all the modules that are part of this assembly, and optionally includes resource modules.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="dc8af-524">Die Module, die Bestandteil dieser Assembly sind.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-524">The modules that are part of this assembly.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetName">
      <MemberSignature Language="C#" Value="public override System.Reflection.AssemblyName GetName (bool copiedName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Reflection.AssemblyName GetName(bool copiedName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.AssemblyBuilder.GetName(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetName (copiedName As Boolean) As AssemblyName" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Reflection::AssemblyName ^ GetName(bool copiedName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.AssemblyName</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="copiedName" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="copiedName">
          <span data-ttu-id="dc8af-525">
            <see langword="true" />, wenn die CodeBase auf den Speicherort der Assembly festgelegt werden soll, nachdem diese gespiegelt wurde, <see langword="false" />, wenn die CodeBase auf den ursprünglichen Speicherort festgelegt werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-525">
              <see langword="true" /> to set the code base to the location of the assembly after it is shadow-copied; <see langword="false" /> to set the code base to the original location.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dc8af-526">Ruft den <see cref="T:System.Reflection.AssemblyName" /> ab, der beim Erstellen der aktuellen dynamischen Assembly angegeben wurde, und legt die entsprechende CodeBase fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-526">Gets the <see cref="T:System.Reflection.AssemblyName" /> that was specified when the current dynamic assembly was created, and sets the code base as specified.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="dc8af-527">Der Name der dynamischen Assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-527">The name of the dynamic assembly.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetReferencedAssemblies">
      <MemberSignature Language="C#" Value="public override System.Reflection.AssemblyName[] GetReferencedAssemblies ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Reflection.AssemblyName[] GetReferencedAssemblies() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.AssemblyBuilder.GetReferencedAssemblies" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetReferencedAssemblies () As AssemblyName()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Reflection::AssemblyName ^&gt; ^ GetReferencedAssemblies();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.AssemblyName[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="dc8af-528">Ruft eine unvollständige Liste von <see cref="T:System.Reflection.AssemblyName" />-Objekten für die Assemblys ab, auf die von diesem <see cref="T:System.Reflection.Emit.AssemblyBuilder" /> verwiesen wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-528">Gets an incomplete list of <see cref="T:System.Reflection.AssemblyName" /> objects for the assemblies that are referenced by this <see cref="T:System.Reflection.Emit.AssemblyBuilder" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="dc8af-529">Ein Array der Assemblynamen für die Assemblys, auf die verwiesen wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-529">An array of assembly names for the referenced assemblies.</span>
          </span>
          <span data-ttu-id="dc8af-530">Dieses Array stellt keine vollständige Liste dar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-530">This array is not a complete list.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc8af-531">Diese Methode gibt keine vollständige Liste der referenzierten Assemblys zurück.</span><span class="sxs-lookup"><span data-stu-id="dc8af-531">This method does not return a complete list of referenced assemblies.</span></span> <span data-ttu-id="dc8af-532">Wenn Sie ein benutzerdefiniertes Attribut anwenden, z. B. die <xref:System.Reflection.Emit.AssemblyBuilder>, die Assembly, in dem das Attribut definiert wurde, ist in der Liste, die von dieser Methode zurückgegebene enthalten.</span><span class="sxs-lookup"><span data-stu-id="dc8af-532">For example, if you apply a custom attribute to the <xref:System.Reflection.Emit.AssemblyBuilder>, the assembly in which the attribute was defined is included in the list returned by this method.</span></span> <span data-ttu-id="dc8af-533">Allerdings bei Verwendung einer <xref:System.Type> Objekt, um den Typ eines Methodenparameters, anzugeben, dass der Typ nicht enthalten ist.</span><span class="sxs-lookup"><span data-stu-id="dc8af-533">However, if you use a <xref:System.Type> object to specify the type of a method parameter, that type is not included.</span></span>  
  
 <span data-ttu-id="dc8af-534">Um eine vollständige Liste der referenzierten Assemblys zu erhalten, speichern Sie die Assembly, laden Sie es in einer anderen Anwendungsdomäne aus, und rufen die <xref:System.Reflection.Assembly.GetReferencedAssemblies%2A?displayProperty=nameWithType> Methode.</span><span class="sxs-lookup"><span data-stu-id="dc8af-534">To get a complete list of referenced assemblies, save the assembly, load it into another application domain, and call the <xref:System.Reflection.Assembly.GetReferencedAssemblies%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetSatelliteAssembly">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="dc8af-535">Ruft eine angegebene Satellitenassembly ab.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-535">Gets a specified satellite assembly.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetSatelliteAssembly">
      <MemberSignature Language="C#" Value="public override System.Reflection.Assembly GetSatelliteAssembly (System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Reflection.Assembly GetSatelliteAssembly(class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.AssemblyBuilder.GetSatelliteAssembly(System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetSatelliteAssembly (culture As CultureInfo) As Assembly" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Reflection::Assembly ^ GetSatelliteAssembly(System::Globalization::CultureInfo ^ culture);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="culture">
          <span data-ttu-id="dc8af-536">Die angegebene Kultur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-536">The specified culture.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dc8af-537">Ruft die Satellitenassembly für die angegebene Kultur ab.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-537">Gets the satellite assembly for the specified culture.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="dc8af-538">Die angegebene Satellitenassembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-538">The specified satellite assembly.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc8af-539">Satellitenassemblys enthalten lokalisierte Ressourcen, unterscheidet der hauptanwendung Assemblys, bei die enthalten nicht lokalisierbaren ausführbaren Code sowie Ressourcen für eine bestimmte Kultur, die als Standardkultur bzw. neutrale Kultur dienen.</span><span class="sxs-lookup"><span data-stu-id="dc8af-539">Satellite assemblies contain localized resources, as distinct from main application assemblies, which contain non-localizable executable code and resources for a single culture that serve as the default or neutral culture.</span></span>  
  
 <span data-ttu-id="dc8af-540">Rufen Sie diese Methode, um die aktuelle Assemblyversion zu verwenden.</span><span class="sxs-lookup"><span data-stu-id="dc8af-540">Call this method to use your current assembly version.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="dc8af-541">
            <paramref name="culture" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-541">
              <paramref name="culture" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="dc8af-542">Die Assembly wurde nicht gefunden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-542">The assembly cannot be found.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileLoadException">
          <span data-ttu-id="dc8af-543">Die Satellitenassembly mit einem übereinstimmenden Dateinamen wurde gefunden, aber <see langword="CultureInfo" /> stimmt nicht mit der angegebenen Kultur überein.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-543">The satellite assembly with a matching file name was found, but the <see langword="CultureInfo" /> did not match the one specified.</span>
          </span>
        </exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="dc8af-544">Die Satellitenassembly ist keine gültige Assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-544">The satellite assembly is not a valid assembly.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSatelliteAssembly">
      <MemberSignature Language="C#" Value="public override System.Reflection.Assembly GetSatelliteAssembly (System.Globalization.CultureInfo culture, Version version);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Reflection.Assembly GetSatelliteAssembly(class System.Globalization.CultureInfo culture, class System.Version version) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.AssemblyBuilder.GetSatelliteAssembly(System.Globalization.CultureInfo,System.Version)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Reflection::Assembly ^ GetSatelliteAssembly(System::Globalization::CultureInfo ^ culture, Version ^ version);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="version" Type="System.Version" />
      </Parameters>
      <Docs>
        <param name="culture">
          <span data-ttu-id="dc8af-545">Die angegebene Kultur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-545">The specified culture.</span>
          </span>
        </param>
        <param name="version">
          <span data-ttu-id="dc8af-546">Die Version der Satellitenassembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-546">The version of the satellite assembly.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dc8af-547">Ruft die angegebene Version der Satellitenassembly für die angegebene Kultur ab.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-547">Gets the specified version of the satellite assembly for the specified culture.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="dc8af-548">Die angegebene Satellitenassembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-548">The specified satellite assembly.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc8af-549">Satellitenassemblys enthalten lokalisierte Ressourcen, unterscheidet der hauptanwendung Assemblys, bei die enthalten nicht lokalisierbaren ausführbaren Code sowie Ressourcen für eine bestimmte Kultur, die als Standardkultur bzw. neutrale Kultur dienen.</span><span class="sxs-lookup"><span data-stu-id="dc8af-549">Satellite assemblies contain localized resources, as distinct from main application assemblies, which contain non-localizable executable code and resources for a single culture that serve as the default or neutral culture.</span></span>  
  
 <span data-ttu-id="dc8af-550">Rufen Sie die <xref:System.Reflection.Assembly.GetSatelliteAssembly%28System.Globalization.CultureInfo%29> Überladung mit Ihrer aktuellen Assemblyversion.</span><span class="sxs-lookup"><span data-stu-id="dc8af-550">Call the <xref:System.Reflection.Assembly.GetSatelliteAssembly%28System.Globalization.CultureInfo%29> overload to use your current assembly version.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="dc8af-551">
            <paramref name="culture" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-551">
              <paramref name="culture" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileLoadException">
          <span data-ttu-id="dc8af-552">Die Satellitenassembly mit einem übereinstimmenden Dateinamen wurde gefunden, aber <see langword="CultureInfo" /> bzw. die Version stimmt nicht mit der angegebenen Kultur bzw. Version überein.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-552">The satellite assembly with a matching file name was found, but the <see langword="CultureInfo" /> or the version did not match the one specified.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="dc8af-553">Die Assembly wurde nicht gefunden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-553">The assembly cannot be found.</span>
          </span>
        </exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="dc8af-554">Die Satellitenassembly ist keine gültige Assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-554">The satellite assembly is not a valid assembly.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetType">
      <MemberSignature Language="C#" Value="public override Type GetType (string name, bool throwOnError, bool ignoreCase);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Type GetType(string name, bool throwOnError, bool ignoreCase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.AssemblyBuilder.GetType(System.String,System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetType (name As String, throwOnError As Boolean, ignoreCase As Boolean) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override Type ^ GetType(System::String ^ name, bool throwOnError, bool ignoreCase);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="throwOnError" Type="System.Boolean" />
        <Parameter Name="ignoreCase" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="dc8af-555">Der Name des zu suchenden Typs.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-555">The name of the type to search for.</span>
          </span>
        </param>
        <param name="throwOnError">
          <span data-ttu-id="dc8af-556">
            <see langword="true" />, wenn eine Ausnahme ausgelöst werden soll, wenn der Typ nicht gefunden wurde, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-556">
              <see langword="true" /> to throw an exception if the type is not found; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <param name="ignoreCase">
          <span data-ttu-id="dc8af-557">
            <see langword="true" />, wenn die Groß- und Kleinschreibung bei der Suche ignoriert werden soll, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-557">
              <see langword="true" /> to ignore the case of the type name when searching; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dc8af-558">Ruft den angegebenen Typ aus den Typen ab, die im aktuellen <see cref="T:System.Reflection.Emit.AssemblyBuilder" /> definiert und erstellt wurden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-558">Gets the specified type from the types that have been defined and created in the current <see cref="T:System.Reflection.Emit.AssemblyBuilder" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="dc8af-559">Der angegebene Typ oder <see langword="null" />, wenn der Typ nicht gefunden oder noch nicht erstellt wurde.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-559">The specified type, or <see langword="null" /> if the type is not found or has not been created yet.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc8af-560">Ein Typ kann nicht gefunden werden, bis er durch den Aufruf erstellt wurde die <xref:System.Reflection.Emit.TypeBuilder.CreateType%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="dc8af-560">A type cannot be found until it has been created by calling the <xref:System.Reflection.Emit.TypeBuilder.CreateType%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GlobalAssemblyCache">
      <MemberSignature Language="C#" Value="public override bool GlobalAssemblyCache { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool GlobalAssemblyCache" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.AssemblyBuilder.GlobalAssemblyCache" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property GlobalAssemblyCache As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool GlobalAssemblyCache { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="dc8af-561">Ruft einen Wert ab, der angibt, ob die Assembly aus dem globalen Assemblycache geladen wurde.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-561">Gets a value that indicates whether the assembly was loaded from the global assembly cache.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="dc8af-562">Immer <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-562">Always <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc8af-563"><xref:System.Reflection.Emit.AssemblyBuilder> Objekte stellen immer dynamische Assemblys dar und werden daher nie aus dem globalen Assemblycache geladen.</span><span class="sxs-lookup"><span data-stu-id="dc8af-563"><xref:System.Reflection.Emit.AssemblyBuilder> objects always represent dynamic assemblies, and therefore are never loaded from the global assembly cache.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HostContext">
      <MemberSignature Language="C#" Value="public override long HostContext { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 HostContext" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.AssemblyBuilder.HostContext" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property HostContext As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property long HostContext { long get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="dc8af-564">Ruft den Hostkontext ab, in dem die dynamische Assembly erstellt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-564">Gets the host context where the dynamic assembly is being created.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="dc8af-565">Ein Wert, der den Hostkontext angibt, in dem die dynamische Assembly erstellt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-565">A value that indicates the host context where the dynamic assembly is being created.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ImageRuntimeVersion">
      <MemberSignature Language="C#" Value="public override string ImageRuntimeVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ImageRuntimeVersion" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.AssemblyBuilder.ImageRuntimeVersion" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property ImageRuntimeVersion As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ImageRuntimeVersion { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="dc8af-566">Ruft die Version der Common Language Runtime ab, die in der Datei gespeichert wird, die das Manifest enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-566">Gets the version of the common language runtime that will be saved in the file containing the manifest.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="dc8af-567">Eine Zeichenfolge, die die Version der Common Language Runtime anzeigt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-567">A string representing the common language runtime version.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="dc8af-568">Der Aufrufer verfügt nicht über die erforderliche Berechtigung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-568">The caller does not have the required permission.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="dc8af-569">Beim Aufrufen spät gebundene durch Mechanismen wie z. B. <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-569">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          </span>
          <span data-ttu-id="dc8af-570">Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-570">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="IsDefined">
      <MemberSignature Language="C#" Value="public override bool IsDefined (Type attributeType, bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsDefined(class System.Type attributeType, bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.AssemblyBuilder.IsDefined(System.Type,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsDefined (attributeType As Type, inherit As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsDefined(Type ^ attributeType, bool inherit);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributeType" Type="System.Type" />
        <Parameter Name="inherit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="attributeType">
          <span data-ttu-id="dc8af-571">Der Typ des zu prüfenden Attributs.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-571">The type of attribute to test for.</span>
          </span>
        </param>
        <param name="inherit">
          <span data-ttu-id="dc8af-572">Dieses Argument wird für Objekte dieses Typs ignoriert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-572">This argument is ignored for objects of this type.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dc8af-573">Gibt einen Wert zurück, der angibt, ob eine oder mehrere Instanzen des angegebenen Attributtyps auf diesen Member angewendet werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-573">Returns a value that indicates whether one or more instances of the specified attribute type is applied to this member.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="dc8af-574">
            <see langword="true" />, wenn eine oder mehrere Instanzen von <paramref name="attributeType" /> auf diese dynamische Assembly angewendet wurden, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-574">
              <see langword="true" /> if one or more instances of <paramref name="attributeType" /> is applied to this dynamic assembly; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDynamic">
      <MemberSignature Language="C#" Value="public override bool IsDynamic { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDynamic" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.AssemblyBuilder.IsDynamic" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsDynamic As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsDynamic { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="dc8af-575">Ruft einen Wert ab, der angibt, dass die aktuelle Assembly eine dynamische Assembly ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-575">Gets a value that indicates that the current assembly is a dynamic assembly.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="dc8af-576">Immer <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-576">Always <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc8af-577">Ein <xref:System.Reflection.Emit.AssemblyBuilder> Objekt immer eine dynamische Assembly darstellt.</span><span class="sxs-lookup"><span data-stu-id="dc8af-577">An <xref:System.Reflection.Emit.AssemblyBuilder> object always represents a dynamic assembly.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Location">
      <MemberSignature Language="C#" Value="public override string Location { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Location" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.AssemblyBuilder.Location" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Location As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Location { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="dc8af-578">Ruft den Speicherort der geladenen Datei, die das Manifest enthält, im CodeBase-Format ab, sofern es sich nicht um eine Schattenkopie handelt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-578">Gets the location, in codebase format, of the loaded file that contains the manifest if it is not shadow-copied.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="dc8af-579">Der Speicherort der geladenen Datei, die das Manifest enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-579">The location of the loaded file that contains the manifest.</span>
          </span>
          <span data-ttu-id="dc8af-580">Wenn die geladene Datei verborgen kopiert wurde, ist <see langword="Location" /> der Speicherort der Datei, bevor sie verborgen kopiert wurde.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-580">If the loaded file has been shadow-copied, the <see langword="Location" /> is that of the file before being shadow-copied.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="dc8af-581">Diese Methode wird zurzeit nicht unterstützt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-581">This method is not currently supported.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="dc8af-582">Der Aufrufer verfügt nicht über die erforderliche Berechtigung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-582">The caller does not have the required permission.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="dc8af-583">Beim Aufrufen spät gebundene durch Mechanismen wie z. B. <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-583">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          </span>
          <span data-ttu-id="dc8af-584">Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-584">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="ManifestModule">
      <MemberSignature Language="C#" Value="public override System.Reflection.Module ManifestModule { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.Module ManifestModule" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.AssemblyBuilder.ManifestModule" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property ManifestModule As Module" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Reflection::Module ^ ManifestModule { System::Reflection::Module ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Module</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="dc8af-585">Ruft das Modul im aktuellen <see cref="T:System.Reflection.Emit.AssemblyBuilder" /> ab, das das Assemblymanifest enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-585">Gets the module in the current <see cref="T:System.Reflection.Emit.AssemblyBuilder" /> that contains the assembly manifest.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="dc8af-586">Das Manifestmodul.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-586">The manifest module.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Modules">
      <MemberSignature Language="C#" Value="public override System.Collections.Generic.IEnumerable&lt;System.Reflection.Module&gt; Modules { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class System.Reflection.Module&gt; Modules" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.AssemblyBuilder.Modules" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Modules As IEnumerable(Of Module)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::Generic::IEnumerable&lt;System::Reflection::Module ^&gt; ^ Modules { System::Collections::Generic::IEnumerable&lt;System::Reflection::Module ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Reflection.Module&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PermissionSet">
      <MemberSignature Language="C#" Value="public override System.Security.PermissionSet PermissionSet { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.PermissionSet PermissionSet" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.AssemblyBuilder.PermissionSet" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property PermissionSet As PermissionSet" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Security::PermissionSet ^ PermissionSet { System::Security::PermissionSet ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.PermissionSet</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="dc8af-587">Ruft den Berechtigungssatz der aktuellen dynamischen Assembly ab.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-587">Gets the grant set of the current dynamic assembly.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="dc8af-588">Der Berechtigungssatz der aktuellen dynamischen Assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-588">The grant set of the current dynamic assembly.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc8af-589"><xref:System.Security.PermissionSet> -Objekte können vertraulichen Informationen wie z. B. Pfade enthalten.</span><span class="sxs-lookup"><span data-stu-id="dc8af-589"><xref:System.Security.PermissionSet> objects can contain sensitive information such as paths.</span></span> <span data-ttu-id="dc8af-590">Aus diesem Grund wird volle Vertrauenswürdigkeit erforderlich, um diese Objekte zugreifen.</span><span class="sxs-lookup"><span data-stu-id="dc8af-590">Therefore, full trust is required to access these objects.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="dc8af-591">erfordert volle Vertrauenswürdigkeit für den unmittelbaren Aufrufer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-591">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="dc8af-592">Dieser Member kann nicht von teilweise vertrauenswürdigem oder transparentem Code verwendet werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-592">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="ReflectionOnly">
      <MemberSignature Language="C#" Value="public override bool ReflectionOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ReflectionOnly" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.AssemblyBuilder.ReflectionOnly" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property ReflectionOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool ReflectionOnly { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="dc8af-593">Ruft einen Wert ab, der angibt, ob sich die dynamische Assembly im reflektionsbezogenen Kontext befindet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-593">Gets a value indicating whether the dynamic assembly is in the reflection-only context.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="dc8af-594">
            <see langword="true" />, wenn sich die dynamische Assembly im ReflectionOnly-Kontext befindet, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-594">
              <see langword="true" /> if the dynamic assembly is in the reflection-only context; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc8af-595">Geben Sie eine dynamische Assembly in den ReflectionOnly Kontext für das ausgeben, <xref:System.Reflection.Emit.AssemblyBuilderAccess.ReflectionOnly?displayProperty=nameWithType> beim Erstellen der <xref:System.Reflection.Emit.AssemblyBuilder>.</span><span class="sxs-lookup"><span data-stu-id="dc8af-595">To emit a dynamic assembly in the reflection-only context, specify <xref:System.Reflection.Emit.AssemblyBuilderAccess.ReflectionOnly?displayProperty=nameWithType> when you create the <xref:System.Reflection.Emit.AssemblyBuilder>.</span></span> <span data-ttu-id="dc8af-596">Wenn eine dynamische Assembly im reflektionsbezogenen Kontext ausgegeben wird, kann der Code ausgeführt werden.</span><span class="sxs-lookup"><span data-stu-id="dc8af-596">If a dynamic assembly is emitted in the reflection-only context, its code cannot be executed.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="dc8af-597">Nachdem Sie eine dynamische Assembly auf dem Datenträger gespeichert haben, können Sie mithilfe der <xref:System.Reflection.Assembly.ReflectionOnlyLoad%2A?displayProperty=nameWithType> Methode zum Laden der abgeschlossenen Assembly in den ReflectionOnly-Kontext.</span><span class="sxs-lookup"><span data-stu-id="dc8af-597">After you have saved a dynamic assembly to disk, you can use the <xref:System.Reflection.Assembly.ReflectionOnlyLoad%2A?displayProperty=nameWithType> method to load the completed assembly into the reflection-only context.</span></span> <span data-ttu-id="dc8af-598">Die Assembly kann jedoch nicht mehr geändert werden.</span><span class="sxs-lookup"><span data-stu-id="dc8af-598">However, the assembly can no longer be modified.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Reflection.Emit.AssemblyBuilderAccess.ReflectionOnly" />
        <altmember cref="M:System.Reflection.Assembly.ReflectionOnlyLoad(System.String)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Save">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="dc8af-599">Speichert diese dynamische Assembly auf dem Datenträger.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-599">Saves this dynamic assembly to disk.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public void Save (string assemblyFileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Save(string assemblyFileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.AssemblyBuilder.Save(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Save (assemblyFileName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Save(System::String ^ assemblyFileName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyFileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="assemblyFileName">
          <span data-ttu-id="dc8af-600">Der Dateiname der Assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-600">The file name of the assembly.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dc8af-601">Speichert diese dynamische Assembly auf dem Datenträger.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-601">Saves this dynamic assembly to disk.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc8af-602">Diese Methode speichert alle dauerhaften dynamische Modulen in dieser dynamischen Assembly definiert.</span><span class="sxs-lookup"><span data-stu-id="dc8af-602">This method saves all non-transient dynamic modules defined in this dynamic assembly.</span></span> <span data-ttu-id="dc8af-603">Flüchtige dynamische Module werden nicht gespeichert.</span><span class="sxs-lookup"><span data-stu-id="dc8af-603">Transient dynamic modules are not saved.</span></span> <span data-ttu-id="dc8af-604">Der Dateiname der Assembly kann den Namen eines der Module identisch sein.</span><span class="sxs-lookup"><span data-stu-id="dc8af-604">The assembly file name can be the same as the name of one of the modules.</span></span> <span data-ttu-id="dc8af-605">Wenn dies der Fall ist, wird das Assemblymanifest innerhalb dieses Moduls gespeichert.</span><span class="sxs-lookup"><span data-stu-id="dc8af-605">If so, the assembly manifest is stored within that module.</span></span> <span data-ttu-id="dc8af-606">`assemblyFileName` kann sich von den Namen aller innerhalb der Assembly enthaltenen Module unterscheiden.</span><span class="sxs-lookup"><span data-stu-id="dc8af-606">`assemblyFileName` can be different from the names of all of the modules contained within the assembly.</span></span> <span data-ttu-id="dc8af-607">Wenn dies der Fall ist, das die Assemblydatei nur das Assemblymanifest enthält.</span><span class="sxs-lookup"><span data-stu-id="dc8af-607">If so, the assembly file contains only the assembly manifest.</span></span>  
  
 <span data-ttu-id="dc8af-608">Für jede <xref:System.Resources.ResourceWriter> mittels abgerufen <xref:System.Reflection.Emit.AssemblyBuilder.DefineResource%2A>, der die RESOURCES-Datei und ruft diese Methode schreibt <xref:System.Resources.ResourceWriter.Close%2A> den Stream geschlossen.</span><span class="sxs-lookup"><span data-stu-id="dc8af-608">For each <xref:System.Resources.ResourceWriter> obtained using <xref:System.Reflection.Emit.AssemblyBuilder.DefineResource%2A>, this method writes the .resources file and calls <xref:System.Resources.ResourceWriter.Close%2A> to close the stream.</span></span>  
  
 <span data-ttu-id="dc8af-609">Die `assemblyFileName` muss einen einfachen Dateinamen ohne eine Komponente Laufwerk oder ein Verzeichnis sein.</span><span class="sxs-lookup"><span data-stu-id="dc8af-609">The `assemblyFileName` needs to be a simple file name without a drive or directory component.</span></span> <span data-ttu-id="dc8af-610">Um eine Assembly in einem bestimmten Verzeichnis zu erstellen, gehen die <xref:System.AppDomain.DefineDynamicAssembly%2A> Methoden, die ein Argument für das Zielverzeichnis akzeptiert.</span><span class="sxs-lookup"><span data-stu-id="dc8af-610">To create an assembly in a specific directory, use one of the <xref:System.AppDomain.DefineDynamicAssembly%2A> methods that takes a target directory argument.</span></span>  
  
 <span data-ttu-id="dc8af-611">In .NET Framework, Version 2.0, diese Überladung von der <xref:System.Reflection.Emit.AssemblyBuilder.Save%2A> Methode entspricht dem Aufrufen der <xref:System.Reflection.Emit.AssemblyBuilder.Save%28System.String%2CSystem.Reflection.PortableExecutableKinds%2CSystem.Reflection.ImageFileMachine%29> methodenüberladung mit <xref:System.Reflection.PortableExecutableKinds.ILOnly> für die `portableExecutableKind` Parameter und <xref:System.Reflection.ImageFileMachine.I386> für die `imageFileMachine` Parameter.</span><span class="sxs-lookup"><span data-stu-id="dc8af-611">In the .NET Framework version 2.0, this overload of the <xref:System.Reflection.Emit.AssemblyBuilder.Save%2A> method is equivalent to calling the <xref:System.Reflection.Emit.AssemblyBuilder.Save%28System.String%2CSystem.Reflection.PortableExecutableKinds%2CSystem.Reflection.ImageFileMachine%29> method overload with <xref:System.Reflection.PortableExecutableKinds.ILOnly> for the `portableExecutableKind` parameter and <xref:System.Reflection.ImageFileMachine.I386> for the `imageFileMachine` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dc8af-612">Im folgenden Codebeispiel wird eine dynamische Assembly erstellt und speichert sie dann in einen lokalen Datenträger mit `Save`.</span><span class="sxs-lookup"><span data-stu-id="dc8af-612">The following code sample creates a dynamic assembly and then persists it to a local disk using `Save`.</span></span>  
  
 [!code-cpp[System.Reflection.Emit.AssemblyBuilder.Save Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Reflection.Emit.AssemblyBuilder.Save Example/CPP/source.cpp#1)]
 [!code-csharp[System.Reflection.Emit.AssemblyBuilder.Save Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Reflection.Emit.AssemblyBuilder.Save Example/CS/source.cs#1)]
 [!code-vb[System.Reflection.Emit.AssemblyBuilder.Save Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Reflection.Emit.AssemblyBuilder.Save Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="dc8af-613">Die Länge von <paramref name="assemblyFileName" /> ist 0 (null).</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-613">The length of <paramref name="assemblyFileName" /> is 0.</span>
          </span>
          <span data-ttu-id="dc8af-614">Oder:  In der Assembly sind mindestens zwei Modulressourcendateien mit demselben Namen vorhanden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-614">-or-  There are two or more modules resource files in the assembly with the same name.</span>
          </span>
          <span data-ttu-id="dc8af-615">Oder:  Das Zielverzeichnis der Assembly ist ungültig.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-615">-or-  The target directory of the assembly is invalid.</span>
          </span>
          <span data-ttu-id="dc8af-616">Oder:  <paramref name="assemblyFileName" /> ist kein einfacher Dateiname (z.B. mit einem Verzeichnis oder einer Laufwerkkomponente), oder mehr als eine nicht verwaltete Ressource mit einer Ressource zu Versionsinformationen wurde in dieser Assembly definiert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-616">-or-  <paramref name="assemblyFileName" /> is not a simple file name (for example, has a directory or drive component), or more than one unmanaged resource, including a version information resource, was defined in this assembly.</span>
          </span>
          <span data-ttu-id="dc8af-617">Oder:  Die <see langword="CultureInfo" />-Zeichenfolge in <see cref="T:System.Reflection.AssemblyCultureAttribute" /> ist keine gültige Zeichenfolge, und <see cref="M:System.Reflection.Emit.AssemblyBuilder.DefineVersionInfoResource(System.String,System.String,System.String,System.String,System.String)" /> wurde vor dem Aufruf dieser Methode aufgerufen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-617">-or-  The <see langword="CultureInfo" /> string in <see cref="T:System.Reflection.AssemblyCultureAttribute" /> is not a valid string and <see cref="M:System.Reflection.Emit.AssemblyBuilder.DefineVersionInfoResource(System.String,System.String,System.String,System.String,System.String)" /> was called prior to calling this method.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="dc8af-618">
            <paramref name="assemblyFileName" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-618">
              <paramref name="assemblyFileName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="dc8af-619">Diese Assembly wurde bereits zuvor gespeichert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-619">This assembly has been saved before.</span>
          </span>
          <span data-ttu-id="dc8af-620">Oder:  Diese Assembly hat Zugriff auf <see langword="Run" /><see cref="T:System.Reflection.Emit.AssemblyBuilderAccess" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-620">-or-  This assembly has access <see langword="Run" /><see cref="T:System.Reflection.Emit.AssemblyBuilderAccess" /></span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="dc8af-621">Beim Speichern tritt ein Ausgabefehler auf.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-621">An output error occurs during the save.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="dc8af-622">
            <see cref="M:System.Reflection.Emit.TypeBuilder.CreateType" /> wurde für einen Typ in den Modulen der auf den Datenträger zu schreibenden Assembly nicht aufgerufen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-622">
              <see cref="M:System.Reflection.Emit.TypeBuilder.CreateType" /> has not been called for any of the types in the modules of the assembly to be written to disk.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="dc8af-623">Schreiben Sie = "true" oder Anfügen = "true" ist erforderlich, um diese Assembly in den angegebenen Dateinamen zu speichern.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-623">Write = true or Append = true is needed to save this assembly to the specified file name.</span>
          </span>
        </permission>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="dc8af-624">Beim Aufrufen spät gebundene durch Mechanismen wie z. B. <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-624">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          </span>
          <span data-ttu-id="dc8af-625">Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-625">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public void Save (string assemblyFileName, System.Reflection.PortableExecutableKinds portableExecutableKind, System.Reflection.ImageFileMachine imageFileMachine);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Save(string assemblyFileName, valuetype System.Reflection.PortableExecutableKinds portableExecutableKind, valuetype System.Reflection.ImageFileMachine imageFileMachine) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.AssemblyBuilder.Save(System.String,System.Reflection.PortableExecutableKinds,System.Reflection.ImageFileMachine)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Save(System::String ^ assemblyFileName, System::Reflection::PortableExecutableKinds portableExecutableKind, System::Reflection::ImageFileMachine imageFileMachine);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyFileName" Type="System.String" />
        <Parameter Name="portableExecutableKind" Type="System.Reflection.PortableExecutableKinds" />
        <Parameter Name="imageFileMachine" Type="System.Reflection.ImageFileMachine" />
      </Parameters>
      <Docs>
        <param name="assemblyFileName">
          <span data-ttu-id="dc8af-626">Der Dateiname der Assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-626">The file name of the assembly.</span>
          </span>
        </param>
        <param name="portableExecutableKind">
          <span data-ttu-id="dc8af-627">Eine bitweise Kombination der <see cref="T:System.Reflection.PortableExecutableKinds" />-Werte, die die Art des Codes angibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-627">A bitwise combination of the <see cref="T:System.Reflection.PortableExecutableKinds" /> values that specifies the nature of the code.</span>
          </span>
        </param>
        <param name="imageFileMachine">
          <span data-ttu-id="dc8af-628">Einer der <see cref="T:System.Reflection.ImageFileMachine" />-Werte, der die Zielplattform angibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-628">One of the <see cref="T:System.Reflection.ImageFileMachine" /> values that specifies the target platform.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dc8af-629">Speichert diese dynamische Assembly auf dem Datenträger und gibt die Art des Codes in den ausführbaren Dateien der Assembly und der Zielplattform an.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-629">Saves this dynamic assembly to disk, specifying the nature of code in the assembly's executables and the target platform.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc8af-630">Wenn `imageFileMachine` und `portableExecutableKind` sind inkompatibel, `imageFileMachine` hat Vorrang vor `portableExecutableKind`.</span><span class="sxs-lookup"><span data-stu-id="dc8af-630">If `imageFileMachine` and `portableExecutableKind` are incompatible, `imageFileMachine` takes precedence over `portableExecutableKind`.</span></span> <span data-ttu-id="dc8af-631">Es werden keine Ausnahmen ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="dc8af-631">No exception is thrown.</span></span> <span data-ttu-id="dc8af-632">Wenn Sie angeben, z. B. <xref:System.Reflection.ImageFileMachine.I386?displayProperty=nameWithType> mit <xref:System.Reflection.PortableExecutableKinds.PE32Plus?displayProperty=nameWithType>, <xref:System.Reflection.PortableExecutableKinds.PE32Plus?displayProperty=nameWithType> wird ignoriert.</span><span class="sxs-lookup"><span data-stu-id="dc8af-632">For example, if you specify <xref:System.Reflection.ImageFileMachine.I386?displayProperty=nameWithType> with <xref:System.Reflection.PortableExecutableKinds.PE32Plus?displayProperty=nameWithType>, <xref:System.Reflection.PortableExecutableKinds.PE32Plus?displayProperty=nameWithType> is ignored.</span></span>  
  
 <span data-ttu-id="dc8af-633">Diese Methode speichert alle dauerhaften dynamische Modulen in dieser dynamischen Assembly definiert.</span><span class="sxs-lookup"><span data-stu-id="dc8af-633">This method saves all non-transient dynamic modules defined in this dynamic assembly.</span></span> <span data-ttu-id="dc8af-634">Flüchtige dynamische Module werden nicht gespeichert.</span><span class="sxs-lookup"><span data-stu-id="dc8af-634">Transient dynamic modules are not saved.</span></span> <span data-ttu-id="dc8af-635">Der Dateiname der Assembly kann den Namen einer des Moduls identisch sein.</span><span class="sxs-lookup"><span data-stu-id="dc8af-635">The assembly file name can be the same as the name of one of the module.</span></span> <span data-ttu-id="dc8af-636">Wenn dies der Fall ist, wird das Assemblymanifest innerhalb dieses Moduls gespeichert.</span><span class="sxs-lookup"><span data-stu-id="dc8af-636">If so, the assembly manifest is stored within that module.</span></span> <span data-ttu-id="dc8af-637">`assemblyFileName` kann sich von den Namen aller innerhalb der Assembly enthaltenen Module unterscheiden.</span><span class="sxs-lookup"><span data-stu-id="dc8af-637">`assemblyFileName` can be different from the names of all of the modules contained within the assembly.</span></span> <span data-ttu-id="dc8af-638">Wenn dies der Fall ist, das die Assemblydatei nur das Assemblymanifest enthält.</span><span class="sxs-lookup"><span data-stu-id="dc8af-638">If so, the assembly file contains only the assembly manifest.</span></span>  
  
 <span data-ttu-id="dc8af-639">Für jede <xref:System.Resources.ResourceWriter> mittels abgerufen <xref:System.Reflection.Emit.AssemblyBuilder.DefineResource%2A>, der die RESOURCES-Datei und ruft diese Methode schreibt <xref:System.Resources.ResourceWriter.Close%2A> den Stream geschlossen.</span><span class="sxs-lookup"><span data-stu-id="dc8af-639">For each <xref:System.Resources.ResourceWriter> obtained using <xref:System.Reflection.Emit.AssemblyBuilder.DefineResource%2A>, this method writes the .resources file and calls <xref:System.Resources.ResourceWriter.Close%2A> to close the stream.</span></span>  
  
 <span data-ttu-id="dc8af-640">Die `assemblyFileName` muss einen einfachen Dateinamen ohne eine Komponente Laufwerk oder ein Verzeichnis sein.</span><span class="sxs-lookup"><span data-stu-id="dc8af-640">The `assemblyFileName` needs to be a simple file name without a drive or directory component.</span></span> <span data-ttu-id="dc8af-641">Um eine Assembly in einem bestimmten Verzeichnis zu erstellen, gehen die <xref:System.AppDomain.DefineDynamicAssembly%2A> Methoden, die ein Argument für das Zielverzeichnis akzeptiert.</span><span class="sxs-lookup"><span data-stu-id="dc8af-641">To create an assembly in a specific directory, use one of the <xref:System.AppDomain.DefineDynamicAssembly%2A> methods that takes a target directory argument.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="dc8af-642">Die Länge von <paramref name="assemblyFileName" /> ist 0 (null).</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-642">The length of <paramref name="assemblyFileName" /> is 0.</span>
          </span>
          <span data-ttu-id="dc8af-643">Oder:  In der Assembly sind mindestens zwei Modulressourcendateien mit demselben Namen vorhanden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-643">-or-  There are two or more modules resource files in the assembly with the same name.</span>
          </span>
          <span data-ttu-id="dc8af-644">Oder:  Das Zielverzeichnis der Assembly ist ungültig.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-644">-or-  The target directory of the assembly is invalid.</span>
          </span>
          <span data-ttu-id="dc8af-645">Oder:  <paramref name="assemblyFileName" /> ist kein einfacher Dateiname (z.B. mit einem Verzeichnis oder einer Laufwerkkomponente), oder mehr als eine nicht verwaltete Ressource mit Ressourcen zu Versionsinformationen wurde in dieser Assembly definiert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-645">-or-  <paramref name="assemblyFileName" /> is not a simple file name (for example, has a directory or drive component), or more than one unmanaged resource, including a version information resources, was defined in this assembly.</span>
          </span>
          <span data-ttu-id="dc8af-646">Oder:  Die <see langword="CultureInfo" />-Zeichenfolge in <see cref="T:System.Reflection.AssemblyCultureAttribute" /> ist keine gültige Zeichenfolge, und <see cref="M:System.Reflection.Emit.AssemblyBuilder.DefineVersionInfoResource(System.String,System.String,System.String,System.String,System.String)" /> wurde vor dem Aufruf dieser Methode aufgerufen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-646">-or-  The <see langword="CultureInfo" /> string in <see cref="T:System.Reflection.AssemblyCultureAttribute" /> is not a valid string and <see cref="M:System.Reflection.Emit.AssemblyBuilder.DefineVersionInfoResource(System.String,System.String,System.String,System.String,System.String)" /> was called prior to calling this method.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="dc8af-647">
            <paramref name="assemblyFileName" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-647">
              <paramref name="assemblyFileName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="dc8af-648">Diese Assembly wurde bereits zuvor gespeichert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-648">This assembly has been saved before.</span>
          </span>
          <span data-ttu-id="dc8af-649">Oder:  Diese Assembly hat Zugriff auf <see langword="Run" /><see cref="T:System.Reflection.Emit.AssemblyBuilderAccess" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-649">-or-  This assembly has access <see langword="Run" /><see cref="T:System.Reflection.Emit.AssemblyBuilderAccess" /></span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="dc8af-650">Beim Speichern tritt ein Ausgabefehler auf.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-650">An output error occurs during the save.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="dc8af-651">
            <see cref="M:System.Reflection.Emit.TypeBuilder.CreateType" /> wurde für einen Typ in den Modulen der auf den Datenträger zu schreibenden Assembly nicht aufgerufen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-651">
              <see cref="M:System.Reflection.Emit.TypeBuilder.CreateType" /> has not been called for any of the types in the modules of the assembly to be written to disk.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="dc8af-652">Schreiben Sie = "true" oder Anfügen = "true" ist erforderlich, um diese Assembly in den angegebenen Dateinamen zu speichern.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-652">Write = true or Append = true is needed to save this assembly to the specified file name.</span>
          </span>
        </permission>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="dc8af-653">Beim Aufrufen spät gebundene durch Mechanismen wie z. B. <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-653">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          </span>
          <span data-ttu-id="dc8af-654">Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-654">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="SecurityRuleSet">
      <MemberSignature Language="C#" Value="public override System.Security.SecurityRuleSet SecurityRuleSet { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Security.SecurityRuleSet SecurityRuleSet" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.AssemblyBuilder.SecurityRuleSet" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property SecurityRuleSet As SecurityRuleSet" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Security::SecurityRuleSet SecurityRuleSet { System::Security::SecurityRuleSet get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.SecurityRuleSet</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="dc8af-655">Ruft einen Wert ab, der angibt, welchen Satz von Sicherheitsregeln die Common Language Runtime (CLR) für diese Assembly erzwingt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-655">Gets a value that indicates which set of security rules the common language runtime (CLR) enforces for this assembly.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="dc8af-656">Der Sicherheitsregelsatz, den die CLR für diese dynamische Assembly erzwingt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-656">The security rule set that the CLR enforces for this dynamic assembly.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc8af-657">Die [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)] erzwingt immer Transparenz der Ebene 2 (<xref:System.Security.SecurityRuleSet.Level2?displayProperty=nameWithType>) für die dynamische Assemblys generiert.</span><span class="sxs-lookup"><span data-stu-id="dc8af-657">The [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)] always enforces level 2 transparency (<xref:System.Security.SecurityRuleSet.Level2?displayProperty=nameWithType>) for the dynamic assemblies it generates.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetCustomAttribute">
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="dc8af-658">Legt ein benutzerdefiniertes Attribut für diese Assembly fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-658">Sets a custom attribute on this assembly.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetCustomAttribute">
      <MemberSignature Language="C#" Value="public void SetCustomAttribute (System.Reflection.Emit.CustomAttributeBuilder customBuilder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetCustomAttribute(class System.Reflection.Emit.CustomAttributeBuilder customBuilder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.AssemblyBuilder.SetCustomAttribute(System.Reflection.Emit.CustomAttributeBuilder)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetCustomAttribute (customBuilder As CustomAttributeBuilder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetCustomAttribute(System::Reflection::Emit::CustomAttributeBuilder ^ customBuilder);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="customBuilder" Type="System.Reflection.Emit.CustomAttributeBuilder" />
      </Parameters>
      <Docs>
        <param name="customBuilder">
          <span data-ttu-id="dc8af-659">Eine Instanz einer Hilfsklasse zum Definieren des benutzerdefinierten Attributs.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-659">An instance of a helper class to define the custom attribute.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dc8af-660">Legt mithilfe eines benutzerdefinierten Attribut-Generators ein benutzerdefiniertes Attribut für diese Assembly fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-660">Set a custom attribute on this assembly using a custom attribute builder.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="dc8af-661"><xref:System.Reflection.Emit.AssemblyBuilder.SetCustomAttribute%2A> kann nicht verwendet werden, um Attribute für die deklarative Sicherheit festzulegen.</span><span class="sxs-lookup"><span data-stu-id="dc8af-661"><xref:System.Reflection.Emit.AssemblyBuilder.SetCustomAttribute%2A> cannot be used to set declarative security attributes.</span></span> <span data-ttu-id="dc8af-662">Verwenden Sie eine der Überladungen der <xref:System.AppDomain.DefineDynamicAssembly%2A> , nimmt, optional erforderlich, und der Berechtigungen verweigert.</span><span class="sxs-lookup"><span data-stu-id="dc8af-662">Use one of the overloads of <xref:System.AppDomain.DefineDynamicAssembly%2A> that takes required, optional, and refused permissions.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="dc8af-663">Beginnend mit der [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], diese Member nicht mehr benötigt <xref:System.Security.Permissions.ReflectionPermission> mit der <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> Flag.</span><span class="sxs-lookup"><span data-stu-id="dc8af-663">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="dc8af-664">(Siehe [Sicherheitsaspekte bei der Reflektionsausgabe](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) Zur Verwendung dieser Funktionen sollte die Anwendung für [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] oder höher ausgelegt sein.</span><span class="sxs-lookup"><span data-stu-id="dc8af-664">(See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dc8af-665">Das folgende Codebeispiel veranschaulicht die Verwendung von `SetCustomAttribute` in <xref:System.Reflection.Emit.AssemblyBuilder>unter Verwendung einer <xref:System.Reflection.Emit.CustomAttributeBuilder>.</span><span class="sxs-lookup"><span data-stu-id="dc8af-665">The following code sample illustrates the use of `SetCustomAttribute` within <xref:System.Reflection.Emit.AssemblyBuilder>, using a <xref:System.Reflection.Emit.CustomAttributeBuilder>.</span></span>  
  
 [!code-cpp[AssemblyBuilder_SetCustomAttribute1#1](~/samples/snippets/cpp/VS_Snippets_CLR/AssemblyBuilder_SetCustomAttribute1/CPP/assemblybuilder_setcustomattribute1.cpp#1)]
 [!code-csharp[AssemblyBuilder_SetCustomAttribute1#1](~/samples/snippets/csharp/VS_Snippets_CLR/AssemblyBuilder_SetCustomAttribute1/CS/assemblybuilder_setcustomattribute1.cs#1)]
 [!code-vb[AssemblyBuilder_SetCustomAttribute1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/AssemblyBuilder_SetCustomAttribute1/VB/assemblybuilder_setcustomattribute1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="dc8af-666">
            <paramref name="con" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-666">
              <paramref name="con" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="dc8af-667">Der Aufrufer verfügt nicht über die erforderliche Berechtigung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-667">The caller does not have the required permission.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="dc8af-668">Beim Aufrufen spät gebundene durch Mechanismen wie z. B. <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-668">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          </span>
          <span data-ttu-id="dc8af-669">Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-669">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="SetCustomAttribute">
      <MemberSignature Language="C#" Value="public void SetCustomAttribute (System.Reflection.ConstructorInfo con, byte[] binaryAttribute);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetCustomAttribute(class System.Reflection.ConstructorInfo con, unsigned int8[] binaryAttribute) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.AssemblyBuilder.SetCustomAttribute(System.Reflection.ConstructorInfo,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetCustomAttribute (con As ConstructorInfo, binaryAttribute As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetCustomAttribute(System::Reflection::ConstructorInfo ^ con, cli::array &lt;System::Byte&gt; ^ binaryAttribute);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="con" Type="System.Reflection.ConstructorInfo" />
        <Parameter Name="binaryAttribute" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="con">
          <span data-ttu-id="dc8af-670">Der Konstruktor für das benutzerdefinierte Attribut.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-670">The constructor for the custom attribute.</span>
          </span>
        </param>
        <param name="binaryAttribute">
          <span data-ttu-id="dc8af-671">Ein Byte-BLOB, das die Attribute darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-671">A byte blob representing the attributes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dc8af-672">Legt mithilfe eines angegebenen benutzerdefinierten Attribut-BLOBs ein benutzerdefiniertes Attribut für diese Assembly fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-672">Set a custom attribute on this assembly using a specified custom attribute blob.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc8af-673">Die Metadatenspezifikation in der ECMA Partition II-Dokumentation weitere Informationen zum format finden Sie unter `binaryAttribute`.</span><span class="sxs-lookup"><span data-stu-id="dc8af-673">See the metadata specification in the ECMA Partition II documentation for details on how to format `binaryAttribute`.</span></span> <span data-ttu-id="dc8af-674">Die Dokumentation ist online verfügbar. Sie finden sie unter [ECMA C# and Common Language Infrastructure Standards (Standards von ECMA C# und Common Language Infrastructure)](http://go.microsoft.com/fwlink/?LinkID=99212) auf MSDN und [Standard ECMA-335 - Common Language Infrastructure (CLI) (Standard ECMA-335 – Common Language Infrastructure (CLI))](http://go.microsoft.com/fwlink/?LinkID=65552) auf der Ecma International-Website.</span><span class="sxs-lookup"><span data-stu-id="dc8af-674">The documentation is available online; see [ECMA C# and Common Language Infrastructure Standards](http://go.microsoft.com/fwlink/?LinkID=99212) on MSDN and [Standard ECMA-335 - Common Language Infrastructure (CLI)](http://go.microsoft.com/fwlink/?LinkID=65552) on the Ecma International Web site.</span></span>  
  
 <span data-ttu-id="dc8af-675">`RuntimeConstructorInfo` ein besonderer Typ wird vom System generiert werden.</span><span class="sxs-lookup"><span data-stu-id="dc8af-675">`RuntimeConstructorInfo` is a special type generated by the system.</span></span> <span data-ttu-id="dc8af-676">Er leitet sich von der <xref:System.Reflection.ConstructorInfo> -Klasse, und alle <xref:System.Reflection.ConstructorInfo> Objekt durch Reflektion Erwerb ist tatsächlich eine Instanz der `RuntimeConstructorInfo`.</span><span class="sxs-lookup"><span data-stu-id="dc8af-676">It derives from the <xref:System.Reflection.ConstructorInfo> class, and any <xref:System.Reflection.ConstructorInfo> object you obtain through reflection is actually an instance of `RuntimeConstructorInfo`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="dc8af-677"><xref:System.Reflection.Emit.AssemblyBuilder.SetCustomAttribute%2A> kann nicht verwendet werden, um Attribute für die deklarative Sicherheit festzulegen.</span><span class="sxs-lookup"><span data-stu-id="dc8af-677"><xref:System.Reflection.Emit.AssemblyBuilder.SetCustomAttribute%2A> cannot be used to set declarative security attributes.</span></span> <span data-ttu-id="dc8af-678">Verwenden Sie eine der Überladungen der <xref:System.AppDomain.DefineDynamicAssembly%2A> , nimmt, optional erforderlich, und der Berechtigungen verweigert.</span><span class="sxs-lookup"><span data-stu-id="dc8af-678">Use one of the overloads of <xref:System.AppDomain.DefineDynamicAssembly%2A> that takes required, optional, and refused permissions.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="dc8af-679">Beginnend mit der [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], diese Member nicht mehr benötigt <xref:System.Security.Permissions.ReflectionPermission> mit der <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> Flag.</span><span class="sxs-lookup"><span data-stu-id="dc8af-679">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="dc8af-680">(Siehe [Sicherheitsaspekte bei der Reflektionsausgabe](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) Zur Verwendung dieser Funktionen sollte die Anwendung für [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] oder höher ausgelegt sein.</span><span class="sxs-lookup"><span data-stu-id="dc8af-680">(See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dc8af-681">Das folgende Codebeispiel veranschaulicht die Verwendung von `SetCustomAttribute` eine dynamisch generierte Assembly ein benutzerdefiniertes Attribut an.</span><span class="sxs-lookup"><span data-stu-id="dc8af-681">The following code sample illustrates the use of `SetCustomAttribute` to attach a custom attribute to a dynamically generated assembly.</span></span>  
  
 [!code-cpp[AssemblyBuilder_SetCustomAttribute2#1](~/samples/snippets/cpp/VS_Snippets_CLR/AssemblyBuilder_SetCustomAttribute2/CPP/assemblybuilder_setcustomattribute2.cpp#1)]
 [!code-csharp[AssemblyBuilder_SetCustomAttribute2#1](~/samples/snippets/csharp/VS_Snippets_CLR/AssemblyBuilder_SetCustomAttribute2/CS/assemblybuilder_setcustomattribute2.cs#1)]
 [!code-vb[AssemblyBuilder_SetCustomAttribute2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/AssemblyBuilder_SetCustomAttribute2/VB/assemblybuilder_setcustomattribute2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="dc8af-682">
            <paramref name="con" /> oder <paramref name="binaryAttribute" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-682">
              <paramref name="con" /> or <paramref name="binaryAttribute" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="dc8af-683">Der Aufrufer verfügt nicht über die erforderliche Berechtigung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-683">The caller does not have the required permission.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="dc8af-684">
            <paramref name="con" /> ist kein <see langword="RuntimeConstructorInfo" />-Objekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-684">
              <paramref name="con" /> is not a <see langword="RuntimeConstructorInfo" /> object.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="dc8af-685">Beim Aufrufen spät gebundene durch Mechanismen wie z. B. <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-685">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          </span>
          <span data-ttu-id="dc8af-686">Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-686">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetEntryPoint">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="dc8af-687">Legt den Einstiegspunkt für diese dynamische Assembly fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-687">Sets the entry point for this dynamic assembly.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetEntryPoint">
      <MemberSignature Language="C#" Value="public void SetEntryPoint (System.Reflection.MethodInfo entryMethod);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetEntryPoint(class System.Reflection.MethodInfo entryMethod) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.AssemblyBuilder.SetEntryPoint(System.Reflection.MethodInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetEntryPoint (entryMethod As MethodInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetEntryPoint(System::Reflection::MethodInfo ^ entryMethod);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entryMethod" Type="System.Reflection.MethodInfo" />
      </Parameters>
      <Docs>
        <param name="entryMethod">
          <span data-ttu-id="dc8af-688">Ein Verweis auf die Methode, die den Einstiegspunkt für diese dynamische Assembly darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-688">A reference to the method that represents the entry point for this dynamic assembly.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dc8af-689">Legt den Einstiegspunkt für diese dynamische Assembly unter der Annahme fest, dass eine Konsolenanwendung erstellt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-689">Sets the entry point for this dynamic assembly, assuming that a console application is being built.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="dc8af-690">
            <paramref name="entryMethod" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-690">
              <paramref name="entryMethod" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="dc8af-691">
            <paramref name="entryMethod" /> ist nicht in dieser Assembly enthalten.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-691">
              <paramref name="entryMethod" /> is not contained within this assembly.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="dc8af-692">Der Aufrufer verfügt nicht über die erforderliche Berechtigung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-692">The caller does not have the required permission.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="dc8af-693">Beim Aufrufen spät gebundene durch Mechanismen wie z. B. <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-693">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          </span>
          <span data-ttu-id="dc8af-694">Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-694">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="SetEntryPoint">
      <MemberSignature Language="C#" Value="public void SetEntryPoint (System.Reflection.MethodInfo entryMethod, System.Reflection.Emit.PEFileKinds fileKind);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetEntryPoint(class System.Reflection.MethodInfo entryMethod, valuetype System.Reflection.Emit.PEFileKinds fileKind) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.AssemblyBuilder.SetEntryPoint(System.Reflection.MethodInfo,System.Reflection.Emit.PEFileKinds)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetEntryPoint (entryMethod As MethodInfo, fileKind As PEFileKinds)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetEntryPoint(System::Reflection::MethodInfo ^ entryMethod, System::Reflection::Emit::PEFileKinds fileKind);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entryMethod" Type="System.Reflection.MethodInfo" />
        <Parameter Name="fileKind" Type="System.Reflection.Emit.PEFileKinds" />
      </Parameters>
      <Docs>
        <param name="entryMethod">
          <span data-ttu-id="dc8af-695">Ein Verweis auf die Methode, die den Einstiegspunkt für diese dynamische Assembly darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-695">A reference to the method that represents the entry point for this dynamic assembly.</span>
          </span>
        </param>
        <param name="fileKind">
          <span data-ttu-id="dc8af-696">Der Typ der ausführbaren Assemblydatei, die erstellt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-696">The type of the assembly executable being built.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dc8af-697">Legt den Einstiegspunkt für diese Assembly fest und definiert den Typ der portierbaren ausführbaren Datei (PE-Datei), die erstellt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-697">Sets the entry point for this assembly and defines the type of the portable executable (PE file) being built.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="dc8af-698">Beginnend mit der [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], diese Member nicht mehr benötigt <xref:System.Security.Permissions.ReflectionPermission> mit der <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> Flag.</span><span class="sxs-lookup"><span data-stu-id="dc8af-698">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="dc8af-699">(Siehe [Sicherheitsaspekte bei der Reflektionsausgabe](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) Zur Verwendung dieser Funktionen sollte die Anwendung für [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] oder höher ausgelegt sein.</span><span class="sxs-lookup"><span data-stu-id="dc8af-699">(See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="dc8af-700">
            <paramref name="entryMethod" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-700">
              <paramref name="entryMethod" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="dc8af-701">
            <paramref name="entryMethod" /> ist nicht in dieser Assembly enthalten.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-701">
              <paramref name="entryMethod" /> is not contained within this assembly.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="dc8af-702">Der Aufrufer verfügt nicht über die erforderliche Berechtigung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-702">The caller does not have the required permission.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="dc8af-703">Beim Aufrufen spät gebundene durch Mechanismen wie z. B. <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-703">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          </span>
          <span data-ttu-id="dc8af-704">Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-704">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._AssemblyBuilder.GetIDsOfNames">
      <MemberSignature Language="C#" Value="void _AssemblyBuilder.GetIDsOfNames (ref Guid riid, IntPtr rgszNames, uint cNames, uint lcid, IntPtr rgDispId);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices._AssemblyBuilder.GetIDsOfNames([in]valuetype System.Guid&amp; riid, native int rgszNames, unsigned int32 cNames, unsigned int32 lcid, native int rgDispId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.AssemblyBuilder.System#Runtime#InteropServices#_AssemblyBuilder#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Sub GetIDsOfNames (ByRef riid As Guid, rgszNames As IntPtr, cNames As UInteger, lcid As UInteger, rgDispId As IntPtr) Implements _AssemblyBuilder.GetIDsOfNames" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices._AssemblyBuilder.GetIDsOfNames(Guid % riid, IntPtr rgszNames, System::UInt32 cNames, System::UInt32 lcid, IntPtr rgDispId) = System::Runtime::InteropServices::_AssemblyBuilder::GetIDsOfNames;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._AssemblyBuilder.GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="riid" Type="System.Guid&amp;" RefType="ref" />
        <Parameter Name="rgszNames" Type="System.IntPtr" />
        <Parameter Name="cNames" Type="System.UInt32" />
        <Parameter Name="lcid" Type="System.UInt32" />
        <Parameter Name="rgDispId" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="riid">
          <span data-ttu-id="dc8af-705">Für zukünftige Verwendung reserviert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-705">Reserved for future use.</span>
          </span>
          <span data-ttu-id="dc8af-706">Muss IID_NULL sein.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-706">Must be IID_NULL.</span>
          </span>
        </param>
        <param name="rgszNames">
          <span data-ttu-id="dc8af-707">Das übergebene Array von zuzuordnenden Namen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-707">Passed-in array of names to be mapped.</span>
          </span>
        </param>
        <param name="cNames">
          <span data-ttu-id="dc8af-708">Die Anzahl der zuzuordnenden Namen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-708">Count of the names to be mapped.</span>
          </span>
        </param>
        <param name="lcid">
          <span data-ttu-id="dc8af-709">Der Gebietsschemakontext, in dem die Namen interpretiert werden sollen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-709">The locale context in which to interpret the names.</span>
          </span>
        </param>
        <param name="rgDispId">
          <span data-ttu-id="dc8af-710">Das vom Aufrufer zugewiesene Array, das die IDs entsprechend den Namen empfängt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-710">Caller-allocated array which receives the IDs corresponding to the names.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dc8af-711">Ordnet eine Reihe von Namen einer entsprechenden Reihe von Dispatchbezeichnern zu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-711">Maps a set of names to a corresponding set of dispatch identifiers.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc8af-712">Diese Methode ist für den Zugriff auf verwaltete Klassen aus nicht verwaltetem Code und sollte nicht von verwaltetem Code aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="dc8af-712">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span> <span data-ttu-id="dc8af-713">Weitere Informationen zu `IDispatch::GetIDsOfNames`, finden Sie in der MSDN Library.</span><span class="sxs-lookup"><span data-stu-id="dc8af-713">For more information about `IDispatch::GetIDsOfNames`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="dc8af-714">Die Methode wird unter Verwendung der <c>IDispatch</c>-Schnittstelle in COM mit spät gebundenem Zugriff aufgerufen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-714">The method is called late-bound using the COM <c>IDispatch</c> interface.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._AssemblyBuilder.GetTypeInfo">
      <MemberSignature Language="C#" Value="void _AssemblyBuilder.GetTypeInfo (uint iTInfo, uint lcid, IntPtr ppTInfo);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices._AssemblyBuilder.GetTypeInfo(unsigned int32 iTInfo, unsigned int32 lcid, native int ppTInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.AssemblyBuilder.System#Runtime#InteropServices#_AssemblyBuilder#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Sub GetTypeInfo (iTInfo As UInteger, lcid As UInteger, ppTInfo As IntPtr) Implements _AssemblyBuilder.GetTypeInfo" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices._AssemblyBuilder.GetTypeInfo(System::UInt32 iTInfo, System::UInt32 lcid, IntPtr ppTInfo) = System::Runtime::InteropServices::_AssemblyBuilder::GetTypeInfo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._AssemblyBuilder.GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="iTInfo" Type="System.UInt32" />
        <Parameter Name="lcid" Type="System.UInt32" />
        <Parameter Name="ppTInfo" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="iTInfo">
          <span data-ttu-id="dc8af-715">Die zurückzugebenden Typinformationen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-715">The type information to return.</span>
          </span>
        </param>
        <param name="lcid">
          <span data-ttu-id="dc8af-716">Der Gebietsschemabezeichner für die Typinformationen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-716">The locale identifier for the type information.</span>
          </span>
        </param>
        <param name="ppTInfo">
          <span data-ttu-id="dc8af-717">Empfängt einen Zeiger auf das angeforderte Objekt mit den Typinformationen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-717">Receives a pointer to the requested type information object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dc8af-718">Ruft die Typinformationen für ein Objekt ab, die dann zum Abrufen der Typinformationen für eine Schnittstelle verwendet werden können.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-718">Retrieves the type information for an object, which can then be used to get the type information for an interface.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc8af-719">Diese Methode ist für den Zugriff auf verwaltete Klassen aus nicht verwaltetem Code und sollte nicht von verwaltetem Code aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="dc8af-719">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span> <span data-ttu-id="dc8af-720">Weitere Informationen zu `IDispatch::GetTypeInfo`, finden Sie in der MSDN Library.</span><span class="sxs-lookup"><span data-stu-id="dc8af-720">For more information about `IDispatch::GetTypeInfo`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="dc8af-721">Die Methode wird unter Verwendung der <c>IDispatch</c>-Schnittstelle in COM mit spät gebundenem Zugriff aufgerufen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-721">The method is called late-bound using the COM <c>IDispatch</c> interface.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._AssemblyBuilder.GetTypeInfoCount">
      <MemberSignature Language="C#" Value="void _AssemblyBuilder.GetTypeInfoCount (out uint pcTInfo);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices._AssemblyBuilder.GetTypeInfoCount([out] unsigned int32&amp; pcTInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.AssemblyBuilder.System#Runtime#InteropServices#_AssemblyBuilder#GetTypeInfoCount(System.UInt32@)" />
      <MemberSignature Language="VB.NET" Value="Sub GetTypeInfoCount (ByRef pcTInfo As UInteger) Implements _AssemblyBuilder.GetTypeInfoCount" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices._AssemblyBuilder.GetTypeInfoCount([Runtime::InteropServices::Out] System::UInt32 % pcTInfo) = System::Runtime::InteropServices::_AssemblyBuilder::GetTypeInfoCount;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._AssemblyBuilder.GetTypeInfoCount(System.UInt32@)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pcTInfo" Type="System.UInt32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="pcTInfo">
          <span data-ttu-id="dc8af-722">Zeigt auf einen Speicherort, der die Anzahl der Schnittstellen mit Typinformationen empfängt, die vom Objekt bereitgestellt werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-722">Points to a location that receives the number of type information interfaces provided by the object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dc8af-723">Ruft die Anzahl der Schnittstellen mit Typinformationen ab, die von einem Objekt bereitgestellt werden (0 oder 1).</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-723">Retrieves the number of type information interfaces that an object provides (either 0 or 1).</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc8af-724">Diese Methode ist für den Zugriff auf verwaltete Klassen aus nicht verwaltetem Code und sollte nicht von verwaltetem Code aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="dc8af-724">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span> <span data-ttu-id="dc8af-725">Weitere Informationen zu `IDispatch::GetTypeInfoCount`, finden Sie in der MSDN Library.</span><span class="sxs-lookup"><span data-stu-id="dc8af-725">For more information about `IDispatch::GetTypeInfoCount`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="dc8af-726">Die Methode wird unter Verwendung der <c>IDispatch</c>-Schnittstelle in COM mit spät gebundenem Zugriff aufgerufen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-726">The method is called late-bound using the COM <c>IDispatch</c> interface.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._AssemblyBuilder.Invoke">
      <MemberSignature Language="C#" Value="void _AssemblyBuilder.Invoke (uint dispIdMember, ref Guid riid, uint lcid, short wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices._AssemblyBuilder.Invoke(unsigned int32 dispIdMember, [in]valuetype System.Guid&amp; riid, unsigned int32 lcid, int16 wFlags, native int pDispParams, native int pVarResult, native int pExcepInfo, native int puArgErr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.AssemblyBuilder.System#Runtime#InteropServices#_AssemblyBuilder#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Sub Invoke (dispIdMember As UInteger, ByRef riid As Guid, lcid As UInteger, wFlags As Short, pDispParams As IntPtr, pVarResult As IntPtr, pExcepInfo As IntPtr, puArgErr As IntPtr) Implements _AssemblyBuilder.Invoke" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices._AssemblyBuilder.Invoke(System::UInt32 dispIdMember, Guid % riid, System::UInt32 lcid, short wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr) = System::Runtime::InteropServices::_AssemblyBuilder::Invoke;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._AssemblyBuilder.Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dispIdMember" Type="System.UInt32" />
        <Parameter Name="riid" Type="System.Guid&amp;" RefType="ref" />
        <Parameter Name="lcid" Type="System.UInt32" />
        <Parameter Name="wFlags" Type="System.Int16" />
        <Parameter Name="pDispParams" Type="System.IntPtr" />
        <Parameter Name="pVarResult" Type="System.IntPtr" />
        <Parameter Name="pExcepInfo" Type="System.IntPtr" />
        <Parameter Name="puArgErr" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="dispIdMember">
          <span data-ttu-id="dc8af-727">Bezeichnet den Member.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-727">Identifies the member.</span>
          </span>
        </param>
        <param name="riid">
          <span data-ttu-id="dc8af-728">Für zukünftige Verwendung reserviert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-728">Reserved for future use.</span>
          </span>
          <span data-ttu-id="dc8af-729">Muss IID_NULL sein.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-729">Must be IID_NULL.</span>
          </span>
        </param>
        <param name="lcid">
          <span data-ttu-id="dc8af-730">Der Gebietsschemakontext, in dem Argumente interpretiert werden sollen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-730">The locale context in which to interpret arguments.</span>
          </span>
        </param>
        <param name="wFlags">
          <span data-ttu-id="dc8af-731">Flags, die den Kontext des Aufrufs beschreiben.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-731">Flags describing the context of the call.</span>
          </span>
        </param>
        <param name="pDispParams">
          <span data-ttu-id="dc8af-732">Ein Zeiger auf eine Struktur, die ein Array von Argumenten und ein Array von Argument-DISPIDs für benannte Argumente sowie Zähler für die Anzahl der Elemente in jedem Array enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-732">Pointer to a structure containing an array of arguments, an array of argument DISPIDs for named arguments, and counts for the number of elements in the arrays.</span>
          </span>
        </param>
        <param name="pVarResult">
          <span data-ttu-id="dc8af-733">Ein Verweis auf den Speicherort, an dem das Ergebnis gespeichert werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-733">Pointer to the location where the result is to be stored.</span>
          </span>
        </param>
        <param name="pExcepInfo">
          <span data-ttu-id="dc8af-734">Ein Zeiger auf eine Struktur mit Ausnahmeinformationen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-734">Pointer to a structure that contains exception information.</span>
          </span>
        </param>
        <param name="puArgErr">
          <span data-ttu-id="dc8af-735">Der Index des ersten Arguments mit einem Fehler.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-735">The index of the first argument that has an error.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dc8af-736">Stellt den Zugriff auf von einem Objekt verfügbar gemachte Eigenschaften und Methoden bereit.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-736">Provides access to properties and methods exposed by an object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc8af-737">Diese Methode ist für den Zugriff auf verwaltete Klassen aus nicht verwaltetem Code und sollte nicht von verwaltetem Code aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="dc8af-737">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span> <span data-ttu-id="dc8af-738">Weitere Informationen zu `IDispatch::Invoke`, finden Sie in der MSDN Library.</span><span class="sxs-lookup"><span data-stu-id="dc8af-738">For more information about `IDispatch::Invoke`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="dc8af-739">Die Methode wird unter Verwendung der <c>IDispatch</c>-Schnittstelle in COM mit spät gebundenem Zugriff aufgerufen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc8af-739">The method is called late-bound using the COM <c>IDispatch</c> interface.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>