<Type Name="UnmanagedMarshal" FullName="System.Reflection.Emit.UnmanagedMarshal">
  <Metadata><Meta Name="ms.openlocfilehash" Value="d761f2e051470a8b67d4820720fe13507392dd5a" /><Meta Name="ms.sourcegitcommit" Value="11d168140aa8fade0768c2a9dde3e3bcacfdfb7d" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="05/27/2020" /><Meta Name="ms.locfileid" Value="83964668" /></Metadata><TypeSignature Language="C#" Value="public sealed class UnmanagedMarshal" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit UnmanagedMarshal extends System.Object" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <TypeSignature Language="DocId" Value="T:System.Reflection.Emit.UnmanagedMarshal" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class UnmanagedMarshal" />
  <TypeSignature Language="C++ CLI" Value="public ref class UnmanagedMarshal sealed" />
  <TypeSignature Language="F#" Value="type UnmanagedMarshal = class" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi serializable sealed beforefieldinit UnmanagedMarshal extends System.Object" FrameworkAlternate="xamarinandroid-7.1;xamarinmac-3.0" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinmac-3.0">
      <AttributeName>System.Obsolete("An alternate API is available: Emit the MarshalAs custom attribute instead.")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Obsolete("An alternate API is available: Emit the MarshalAs custom attribute instead. http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="740ff-101">Stellt die Klasse dar, die das Marshallen eines Felds von verwaltetem zu nicht verwaltetem Code beschreibt.</span><span class="sxs-lookup"><span data-stu-id="740ff-101">Represents the class that describes how to marshal a field from managed to unmanaged code.</span></span> <span data-ttu-id="740ff-102">Diese Klasse kann nicht vererbt werden.</span><span class="sxs-lookup"><span data-stu-id="740ff-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="740ff-103">Das Codebeispiel zeigt die Problem Umgehung für diesen veralteten Typ.</span><span class="sxs-lookup"><span data-stu-id="740ff-103">The code example shows the workaround for this obsolete type.</span></span>  
  
 <span data-ttu-id="740ff-104">Beim Marshalling handelt es sich um das Verpacken und entpacken von Parametern, sodass Remote Prozedur Aufrufe auftreten können.</span><span class="sxs-lookup"><span data-stu-id="740ff-104">Marshaling is the process of packaging and unpackaging parameters so remote procedure calls can occur.</span></span> <span data-ttu-id="740ff-105">Beim Marshalling kann ein Feld eine Formatkonvertierung durchlaufen, wenn sich das Format des verwalteten Typs vom Format des entsprechenden nicht verwalteten Typs unterscheidet.</span><span class="sxs-lookup"><span data-stu-id="740ff-105">During marshaling, a field might undergo a format conversion when the format of the managed type is different from the format of the corresponding unmanaged type.</span></span> <span data-ttu-id="740ff-106">Beispielsweise können Sie einen `String` Typ als nicht verwalteten BSTR Mars Hallen.</span><span class="sxs-lookup"><span data-stu-id="740ff-106">For example, you might want to marshal a `String` type as an unmanaged BSTR.</span></span> <span data-ttu-id="740ff-107">Einige Formatkonvertierungen werden automatisch von der Laufzeit verarbeitet.</span><span class="sxs-lookup"><span data-stu-id="740ff-107">Some format conversions are handled automatically by the runtime.</span></span> <span data-ttu-id="740ff-108">Um das Standardverhalten zu überschreiben, müssen Sie die `UnmanagedMarshal`-Klasse verwenden, um die Formatkonvertierung zu definieren.</span><span class="sxs-lookup"><span data-stu-id="740ff-108">To override the default behavior, you must use the `UnmanagedMarshal` class to define the format conversion.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="740ff-109">Das folgende Codebeispiel zeigt den Ersetzungs Code für den veralteten <xref:System.Reflection.Emit.UnmanagedMarshal> Typ.</span><span class="sxs-lookup"><span data-stu-id="740ff-109">The following code example shows replacement code for the obsolete <xref:System.Reflection.Emit.UnmanagedMarshal> type.</span></span> <span data-ttu-id="740ff-110">Im Beispiel wird eine Assembly mit einem einzelnen Modul mit dem Namen `EmitMarshalAs.dll`ausgegeben, die einen Typ mit dem Namen `Sample`enthält.</span><span class="sxs-lookup"><span data-stu-id="740ff-110">The example emits a single-module assembly named `EmitMarshalAs.dll`, containing a type named `Sample`.</span></span> <span data-ttu-id="740ff-111">Der-Typ verfügt über eine Methode mit dem Namen `Test`mit einem Parameter vom Typ <xref:System.String>.</span><span class="sxs-lookup"><span data-stu-id="740ff-111">The type has a method named `Test`, with one parameter of type <xref:System.String>.</span></span> <span data-ttu-id="740ff-112">Im Codebeispiel wird die <xref:System.Runtime.InteropServices.MarshalAsAttribute> mit <xref:System.Runtime.InteropServices.UnmanagedType.BStr?displayProperty=nameWithType> auf den-Parameter angewendet.</span><span class="sxs-lookup"><span data-stu-id="740ff-112">The code example applies the <xref:System.Runtime.InteropServices.MarshalAsAttribute> with <xref:System.Runtime.InteropServices.UnmanagedType.BStr?displayProperty=nameWithType> to the parameter.</span></span>  
  
 <span data-ttu-id="740ff-113">Sie können den [Ildasm. exe (IL-Disassembler)](/dotnet/framework/tools/ildasm-exe-il-disassembler) verwenden, um die ausgegebene Assembly zu untersuchen und zu beobachten, dass der Parameter als `marshal(bstr)`gekennzeichnet ist.</span><span class="sxs-lookup"><span data-stu-id="740ff-113">You can use the [Ildasm.exe (IL Disassembler)](/dotnet/framework/tools/ildasm-exe-il-disassembler) to examine the emitted assembly and observe that the parameter is marked `marshal(bstr)`.</span></span>  
  
 [!code-cpp[UnmanagedMarshalObsolete#1](~/samples/snippets/cpp/VS_Snippets_CLR/UnmanagedMarshalObsolete/cpp/source.cpp#1)]
 [!code-csharp[UnmanagedMarshalObsolete#1](~/samples/snippets/csharp/VS_Snippets_CLR/UnmanagedMarshalObsolete/cs/source.cs#1)]
 [!code-vb[UnmanagedMarshalObsolete#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/UnmanagedMarshalObsolete/vb/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Type" />
    <altmember cref="T:System.Runtime.InteropServices.UnmanagedType" />
    <altmember cref="T:System.Guid" />
  </Docs>
  <Members>
    <Member MemberName="BaseType">
      <MemberSignature Language="C#" Value="public System.Runtime.InteropServices.UnmanagedType BaseType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Runtime.InteropServices.UnmanagedType BaseType" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.UnmanagedMarshal.BaseType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BaseType As UnmanagedType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Runtime::InteropServices::UnmanagedType BaseType { System::Runtime::InteropServices::UnmanagedType get(); };" />
      <MemberSignature Language="F#" Value="member this.BaseType : System.Runtime.InteropServices.UnmanagedType" Usage="System.Reflection.Emit.UnmanagedMarshal.BaseType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.InteropServices.UnmanagedType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="740ff-114">Ruft einen nicht verwalteten Basistyp ab.</span><span class="sxs-lookup"><span data-stu-id="740ff-114">Gets an unmanaged base type.</span></span> <span data-ttu-id="740ff-115">Diese Eigenschaft ist schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="740ff-115">This property is read-only.</span></span></summary>
        <value><span data-ttu-id="740ff-116">Ein <see langword="UnmanagedType" />-Objekt.</span><span class="sxs-lookup"><span data-stu-id="740ff-116">An <see langword="UnmanagedType" /> object.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="740ff-117">Bei dem nicht verwalteten Typ handelt es sich um kein <see langword="LPArray" /> oder <see langword="SafeArray" />.</span><span class="sxs-lookup"><span data-stu-id="740ff-117">The unmanaged type is not an <see langword="LPArray" /> or a <see langword="SafeArray" />.</span></span></exception>
        <altmember cref="T:System.Runtime.InteropServices.UnmanagedType" />
      </Docs>
    </Member>
    <Member MemberName="DefineByValArray">
      <MemberSignature Language="C#" Value="public static System.Reflection.Emit.UnmanagedMarshal DefineByValArray (int elemCount);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Emit.UnmanagedMarshal DefineByValArray(int32 elemCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.UnmanagedMarshal.DefineByValArray(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DefineByValArray (elemCount As Integer) As UnmanagedMarshal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::Emit::UnmanagedMarshal ^ DefineByValArray(int elemCount);" />
      <MemberSignature Language="F#" Value="static member DefineByValArray : int -&gt; System.Reflection.Emit.UnmanagedMarshal" Usage="System.Reflection.Emit.UnmanagedMarshal.DefineByValArray elemCount" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.UnmanagedMarshal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="elemCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="elemCount"><span data-ttu-id="740ff-118">Die Anzahl der Elemente im Array fester Länge.</span><span class="sxs-lookup"><span data-stu-id="740ff-118">The number of elements in the fixed-length array.</span></span></param>
        <summary><span data-ttu-id="740ff-119">Gibt ein Array fester Länge (ByValArray) an, das zu nicht verwaltetem Code gemarshallt werden soll.</span><span class="sxs-lookup"><span data-stu-id="740ff-119">Specifies a fixed-length array (ByValArray) to marshal to unmanaged code.</span></span></summary>
        <returns><span data-ttu-id="740ff-120">Ein <see cref="T:System.Reflection.Emit.UnmanagedMarshal" />-Objekt.</span><span class="sxs-lookup"><span data-stu-id="740ff-120">An <see cref="T:System.Reflection.Emit.UnmanagedMarshal" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="740ff-121">Die `DefineByValArray`-Methode ist kein einfacher nativer Marshal.</span><span class="sxs-lookup"><span data-stu-id="740ff-121">The `DefineByValArray` method is not a simple native marshal.</span></span>  
  
 <span data-ttu-id="740ff-122">Nur nicht verwaltete Marshal-Konstrukte können mithilfe dieser statischen Konstruktoren erstellt werden.</span><span class="sxs-lookup"><span data-stu-id="740ff-122">Only unmanaged marshal constructs can be made using these static constructors.</span></span>  
  
 <span data-ttu-id="740ff-123">Das Marshalling eines Arrays ist ein komplexerer Prozess als das Marshalling eines ganzzahligen Parameters.</span><span class="sxs-lookup"><span data-stu-id="740ff-123">Marshaling an array is a more complex process than marshaling an integer parameter.</span></span> <span data-ttu-id="740ff-124">Arraymember werden in einer bestimmten Reihenfolge kopiert, sodass das Array von der anderen Seite exakt rekonstruiert werden kann.</span><span class="sxs-lookup"><span data-stu-id="740ff-124">Array members are copied in a specific order so that the other side can reconstruct the array exactly.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="740ff-125">Das Argument ist kein einfacher systemeigener Typ.</span><span class="sxs-lookup"><span data-stu-id="740ff-125">The argument is not a simple native type.</span></span></exception>
        <altmember cref="T:System.Runtime.InteropServices.UnmanagedType" />
      </Docs>
    </Member>
    <Member MemberName="DefineByValTStr">
      <MemberSignature Language="C#" Value="public static System.Reflection.Emit.UnmanagedMarshal DefineByValTStr (int elemCount);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Emit.UnmanagedMarshal DefineByValTStr(int32 elemCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.UnmanagedMarshal.DefineByValTStr(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DefineByValTStr (elemCount As Integer) As UnmanagedMarshal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::Emit::UnmanagedMarshal ^ DefineByValTStr(int elemCount);" />
      <MemberSignature Language="F#" Value="static member DefineByValTStr : int -&gt; System.Reflection.Emit.UnmanagedMarshal" Usage="System.Reflection.Emit.UnmanagedMarshal.DefineByValTStr elemCount" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.UnmanagedMarshal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="elemCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="elemCount"><span data-ttu-id="740ff-126">Die Anzahl der Elemente im Puffer für ein feststehendes Array.</span><span class="sxs-lookup"><span data-stu-id="740ff-126">The number of elements in the fixed array buffer.</span></span></param>
        <summary><span data-ttu-id="740ff-127">Gibt eine in einem Puffer für ein feststehendes Array enthaltene Zeichenfolge (ByValTStr) an, das zu nicht verwaltetem Code gemarshallt werden soll.</span><span class="sxs-lookup"><span data-stu-id="740ff-127">Specifies a string in a fixed array buffer (ByValTStr) to marshal to unmanaged code.</span></span></summary>
        <returns><span data-ttu-id="740ff-128">Ein <see cref="T:System.Reflection.Emit.UnmanagedMarshal" />-Objekt.</span><span class="sxs-lookup"><span data-stu-id="740ff-128">An <see cref="T:System.Reflection.Emit.UnmanagedMarshal" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="740ff-129">Die `DefineByValStr`-Methode ist kein einfacher nativer Marshal.</span><span class="sxs-lookup"><span data-stu-id="740ff-129">The `DefineByValStr` method is not a simple native marshal.</span></span>  
  
 <span data-ttu-id="740ff-130">Nur nicht verwaltete Marshal-Konstrukte können mithilfe dieser statischen Konstruktoren erstellt werden.</span><span class="sxs-lookup"><span data-stu-id="740ff-130">Only unmanaged marshal constructs can be made using these static constructors.</span></span>  
  
 <span data-ttu-id="740ff-131">Das Marshalling eines Arrays ist ein komplexerer Prozess als das Marshalling eines ganzzahligen Parameters.</span><span class="sxs-lookup"><span data-stu-id="740ff-131">Marshaling an array is a more complex process than marshaling an integer parameter.</span></span> <span data-ttu-id="740ff-132">Arraymember werden in einer bestimmten Reihenfolge kopiert, sodass das Array von der anderen Seite exakt rekonstruiert werden kann.</span><span class="sxs-lookup"><span data-stu-id="740ff-132">Array members are copied in a specific order so that the other side can reconstruct the array exactly.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="740ff-133">Das Argument ist kein einfacher systemeigener Typ.</span><span class="sxs-lookup"><span data-stu-id="740ff-133">The argument is not a simple native type.</span></span></exception>
        <altmember cref="T:System.Int32" />
        <altmember cref="T:System.Array" />
        <altmember cref="T:System.String" />
        <altmember cref="T:System.Runtime.InteropServices.UnmanagedType" />
      </Docs>
    </Member>
    <Member MemberName="DefineLPArray">
      <MemberSignature Language="C#" Value="public static System.Reflection.Emit.UnmanagedMarshal DefineLPArray (System.Runtime.InteropServices.UnmanagedType elemType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Emit.UnmanagedMarshal DefineLPArray(valuetype System.Runtime.InteropServices.UnmanagedType elemType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.UnmanagedMarshal.DefineLPArray(System.Runtime.InteropServices.UnmanagedType)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DefineLPArray (elemType As UnmanagedType) As UnmanagedMarshal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::Emit::UnmanagedMarshal ^ DefineLPArray(System::Runtime::InteropServices::UnmanagedType elemType);" />
      <MemberSignature Language="F#" Value="static member DefineLPArray : System.Runtime.InteropServices.UnmanagedType -&gt; System.Reflection.Emit.UnmanagedMarshal" Usage="System.Reflection.Emit.UnmanagedMarshal.DefineLPArray elemType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.UnmanagedMarshal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="elemType" Type="System.Runtime.InteropServices.UnmanagedType" />
      </Parameters>
      <Docs>
        <param name="elemType"><span data-ttu-id="740ff-134">Der nicht verwaltete Typ, zu dem das Array gemarshallt werden soll.</span><span class="sxs-lookup"><span data-stu-id="740ff-134">The unmanaged type to which to marshal the array.</span></span></param>
        <summary><span data-ttu-id="740ff-135">Gibt ein <see langword="LPArray" /> an, das zu nicht verwaltetem Code gemarshallt werden soll.</span><span class="sxs-lookup"><span data-stu-id="740ff-135">Specifies an <see langword="LPArray" /> to marshal to unmanaged code.</span></span> <span data-ttu-id="740ff-136">Die Länge eines <see langword="LPArray" /> wird zur Laufzeit von der Größe des tatsächlich gemarshallten Arrays bestimmt.</span><span class="sxs-lookup"><span data-stu-id="740ff-136">The length of an <see langword="LPArray" /> is determined at runtime by the size of the actual marshaled array.</span></span></summary>
        <returns><span data-ttu-id="740ff-137">Ein <see cref="T:System.Reflection.Emit.UnmanagedMarshal" />-Objekt.</span><span class="sxs-lookup"><span data-stu-id="740ff-137">An <see cref="T:System.Reflection.Emit.UnmanagedMarshal" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="740ff-138">Die `DefineLPArray`-Methode ist kein einfacher nativer Marshal.</span><span class="sxs-lookup"><span data-stu-id="740ff-138">The `DefineLPArray` method is not a simple native marshal.</span></span>  
  
 <span data-ttu-id="740ff-139">Nur nicht verwaltete Marshal-Konstrukte können mithilfe dieser statischen Konstruktoren erstellt werden.</span><span class="sxs-lookup"><span data-stu-id="740ff-139">Only unmanaged marshal constructs can be made using these static constructors.</span></span>  
  
 <span data-ttu-id="740ff-140">Das Marshalling eines Arrays ist ein komplexerer Prozess als das Marshalling eines ganzzahligen Parameters.</span><span class="sxs-lookup"><span data-stu-id="740ff-140">Marshaling an array is a more complex process than marshaling an integer parameter.</span></span> <span data-ttu-id="740ff-141">Arraymember werden in einer bestimmten Reihenfolge kopiert, sodass das Array von der anderen Seite exakt rekonstruiert werden kann.</span><span class="sxs-lookup"><span data-stu-id="740ff-141">Array members are copied in a specific order so that the other side can reconstruct the array exactly.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="740ff-142">Das Argument ist kein einfacher systemeigener Typ.</span><span class="sxs-lookup"><span data-stu-id="740ff-142">The argument is not a simple native type.</span></span></exception>
        <altmember cref="T:System.Runtime.InteropServices.UnmanagedType" />
      </Docs>
    </Member>
    <Member MemberName="DefineSafeArray">
      <MemberSignature Language="C#" Value="public static System.Reflection.Emit.UnmanagedMarshal DefineSafeArray (System.Runtime.InteropServices.UnmanagedType elemType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Emit.UnmanagedMarshal DefineSafeArray(valuetype System.Runtime.InteropServices.UnmanagedType elemType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.UnmanagedMarshal.DefineSafeArray(System.Runtime.InteropServices.UnmanagedType)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DefineSafeArray (elemType As UnmanagedType) As UnmanagedMarshal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::Emit::UnmanagedMarshal ^ DefineSafeArray(System::Runtime::InteropServices::UnmanagedType elemType);" />
      <MemberSignature Language="F#" Value="static member DefineSafeArray : System.Runtime.InteropServices.UnmanagedType -&gt; System.Reflection.Emit.UnmanagedMarshal" Usage="System.Reflection.Emit.UnmanagedMarshal.DefineSafeArray elemType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.UnmanagedMarshal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="elemType" Type="System.Runtime.InteropServices.UnmanagedType" />
      </Parameters>
      <Docs>
        <param name="elemType"><span data-ttu-id="740ff-143">Der Basistyp oder der <see langword="UnmanagedType" /> der einzelnen Elemente des Arrays.</span><span class="sxs-lookup"><span data-stu-id="740ff-143">The base type or the <see langword="UnmanagedType" /> of each element of the array.</span></span></param>
        <summary><span data-ttu-id="740ff-144">Gibt ein <see langword="SafeArray" /> an, das zu nicht verwaltetem Code gemarshallt werden soll.</span><span class="sxs-lookup"><span data-stu-id="740ff-144">Specifies a <see langword="SafeArray" /> to marshal to unmanaged code.</span></span></summary>
        <returns><span data-ttu-id="740ff-145">Ein <see cref="T:System.Reflection.Emit.UnmanagedMarshal" />-Objekt.</span><span class="sxs-lookup"><span data-stu-id="740ff-145">An <see cref="T:System.Reflection.Emit.UnmanagedMarshal" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="740ff-146">Die `DefineSafeArray`-Methode ist kein einfacher nativer Marshal.</span><span class="sxs-lookup"><span data-stu-id="740ff-146">The `DefineSafeArray` method is not a simple native marshal.</span></span>  
  
 <span data-ttu-id="740ff-147">Nur nicht verwaltete Marshal-Konstrukte können mithilfe dieser statischen Konstruktoren erstellt werden.</span><span class="sxs-lookup"><span data-stu-id="740ff-147">Only unmanaged marshal constructs can be made using these static constructors.</span></span>  
  
 <span data-ttu-id="740ff-148">Das Marshalling eines Arrays ist ein komplexerer Prozess als das Marshalling eines ganzzahligen Parameters.</span><span class="sxs-lookup"><span data-stu-id="740ff-148">Marshaling an array is a more complex process than marshaling an integer parameter.</span></span> <span data-ttu-id="740ff-149">Arraymember werden in einer bestimmten Reihenfolge kopiert, sodass das Array von der anderen Seite exakt rekonstruiert werden kann.</span><span class="sxs-lookup"><span data-stu-id="740ff-149">Array members are copied in a specific order so that the other side can reconstruct the array exactly.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="740ff-150">Das Argument ist kein einfacher systemeigener Typ.</span><span class="sxs-lookup"><span data-stu-id="740ff-150">The argument is not a simple native type.</span></span></exception>
        <altmember cref="T:System.Runtime.InteropServices.UnmanagedType" />
      </Docs>
    </Member>
    <Member MemberName="DefineUnmanagedMarshal">
      <MemberSignature Language="C#" Value="public static System.Reflection.Emit.UnmanagedMarshal DefineUnmanagedMarshal (System.Runtime.InteropServices.UnmanagedType unmanagedType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Emit.UnmanagedMarshal DefineUnmanagedMarshal(valuetype System.Runtime.InteropServices.UnmanagedType unmanagedType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.UnmanagedMarshal.DefineUnmanagedMarshal(System.Runtime.InteropServices.UnmanagedType)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DefineUnmanagedMarshal (unmanagedType As UnmanagedType) As UnmanagedMarshal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::Emit::UnmanagedMarshal ^ DefineUnmanagedMarshal(System::Runtime::InteropServices::UnmanagedType unmanagedType);" />
      <MemberSignature Language="F#" Value="static member DefineUnmanagedMarshal : System.Runtime.InteropServices.UnmanagedType -&gt; System.Reflection.Emit.UnmanagedMarshal" Usage="System.Reflection.Emit.UnmanagedMarshal.DefineUnmanagedMarshal unmanagedType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.UnmanagedMarshal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="unmanagedType" Type="System.Runtime.InteropServices.UnmanagedType" />
      </Parameters>
      <Docs>
        <param name="unmanagedType"><span data-ttu-id="740ff-151">Der nicht verwaltete Typ, zu dem der Typ gemarshallt werden soll.</span><span class="sxs-lookup"><span data-stu-id="740ff-151">The unmanaged type to which the type is to be marshaled.</span></span></param>
        <summary><span data-ttu-id="740ff-152">Gibt einen angegebenen Typ an, der zu nicht verwaltetem Code gemarshallt werden soll.</span><span class="sxs-lookup"><span data-stu-id="740ff-152">Specifies a given type that is to be marshaled to unmanaged code.</span></span></summary>
        <returns><span data-ttu-id="740ff-153">Ein <see cref="T:System.Reflection.Emit.UnmanagedMarshal" />-Objekt.</span><span class="sxs-lookup"><span data-stu-id="740ff-153">An <see cref="T:System.Reflection.Emit.UnmanagedMarshal" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="740ff-154">Das an diese Methode über gegebene <xref:System.Runtime.InteropServices.UnmanagedType> muss ein einfacher System eigener Typ sein.</span><span class="sxs-lookup"><span data-stu-id="740ff-154">The <xref:System.Runtime.InteropServices.UnmanagedType> passed to this method must be a simple native type.</span></span> <span data-ttu-id="740ff-155">Es können keine der folgenden Werte verwendet werden: <xref:System.Runtime.InteropServices.UnmanagedType.ByValTStr?displayProperty=nameWithType>, <xref:System.Runtime.InteropServices.UnmanagedType.SafeArray?displayProperty=nameWithType>, <xref:System.Runtime.InteropServices.UnmanagedType.ByValArray?displayProperty=nameWithType>, <xref:System.Runtime.InteropServices.UnmanagedType.LPArray?displayProperty=nameWithType>oder <xref:System.Runtime.InteropServices.UnmanagedType.CustomMarshaler?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="740ff-155">None of the following values may be used: <xref:System.Runtime.InteropServices.UnmanagedType.ByValTStr?displayProperty=nameWithType>, <xref:System.Runtime.InteropServices.UnmanagedType.SafeArray?displayProperty=nameWithType>, <xref:System.Runtime.InteropServices.UnmanagedType.ByValArray?displayProperty=nameWithType>, <xref:System.Runtime.InteropServices.UnmanagedType.LPArray?displayProperty=nameWithType>, or <xref:System.Runtime.InteropServices.UnmanagedType.CustomMarshaler?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="740ff-156">Nur nicht verwaltete Marshal-Konstrukte können mithilfe dieser Methode erstellt werden.</span><span class="sxs-lookup"><span data-stu-id="740ff-156">Only unmanaged marshal constructs can be made using this method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="740ff-157">Das Argument ist kein einfacher systemeigener Typ.</span><span class="sxs-lookup"><span data-stu-id="740ff-157">The argument is not a simple native type.</span></span></exception>
        <altmember cref="T:System.Runtime.InteropServices.UnmanagedType" />
      </Docs>
    </Member>
    <Member MemberName="ElementCount">
      <MemberSignature Language="C#" Value="public int ElementCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ElementCount" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.UnmanagedMarshal.ElementCount" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ElementCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ElementCount { int get(); };" />
      <MemberSignature Language="F#" Value="member this.ElementCount : int" Usage="System.Reflection.Emit.UnmanagedMarshal.ElementCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="740ff-158">Ruft ein Zahlenelement ab.</span><span class="sxs-lookup"><span data-stu-id="740ff-158">Gets a number element.</span></span> <span data-ttu-id="740ff-159">Diese Eigenschaft ist schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="740ff-159">This property is read-only.</span></span></summary>
        <value><span data-ttu-id="740ff-160">Eine ganze Zahl, die die Elementanzahl angibt.</span><span class="sxs-lookup"><span data-stu-id="740ff-160">An integer indicating the element count.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="740ff-161">Es gibt nur eine `ElementCount`, wenn ein `NativeTypeFixedArray`vorhanden ist.</span><span class="sxs-lookup"><span data-stu-id="740ff-161">There is an `ElementCount` only if there is a `NativeTypeFixedArray`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="740ff-162">Das Argument ist keine nicht verwaltete Elementanzahl.</span><span class="sxs-lookup"><span data-stu-id="740ff-162">The argument is not an unmanaged element count.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetUnmanagedType">
      <MemberSignature Language="C#" Value="public System.Runtime.InteropServices.UnmanagedType GetUnmanagedType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Runtime.InteropServices.UnmanagedType GetUnmanagedType" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.UnmanagedMarshal.GetUnmanagedType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property GetUnmanagedType As UnmanagedType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Runtime::InteropServices::UnmanagedType GetUnmanagedType { System::Runtime::InteropServices::UnmanagedType get(); };" />
      <MemberSignature Language="F#" Value="member this.GetUnmanagedType : System.Runtime.InteropServices.UnmanagedType" Usage="System.Reflection.Emit.UnmanagedMarshal.GetUnmanagedType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.InteropServices.UnmanagedType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="740ff-163">Gibt einen nicht verwalteten Typ an.</span><span class="sxs-lookup"><span data-stu-id="740ff-163">Indicates an unmanaged type.</span></span> <span data-ttu-id="740ff-164">Diese Eigenschaft ist schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="740ff-164">This property is read-only.</span></span></summary>
        <value><span data-ttu-id="740ff-165">Ein <see cref="T:System.Runtime.InteropServices.UnmanagedType" />-Objekt.</span><span class="sxs-lookup"><span data-stu-id="740ff-165">An <see cref="T:System.Runtime.InteropServices.UnmanagedType" /> object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="740ff-166">Die `GetUnmanagedType`-Eigenschaft ist eine Accessorfunktion für den systemeigenen Typ.</span><span class="sxs-lookup"><span data-stu-id="740ff-166">The `GetUnmanagedType` property is an accessor function for the native type.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Runtime.InteropServices.UnmanagedType" />
      </Docs>
    </Member>
    <Member MemberName="IIDGuid">
      <MemberSignature Language="C#" Value="public Guid IIDGuid { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Guid IIDGuid" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.UnmanagedMarshal.IIDGuid" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IIDGuid As Guid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Guid IIDGuid { Guid get(); };" />
      <MemberSignature Language="F#" Value="member this.IIDGuid : Guid" Usage="System.Reflection.Emit.UnmanagedMarshal.IIDGuid" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="740ff-167">Ruft eine GUID ab.</span><span class="sxs-lookup"><span data-stu-id="740ff-167">Gets a GUID.</span></span> <span data-ttu-id="740ff-168">Diese Eigenschaft ist schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="740ff-168">This property is read-only.</span></span></summary>
        <value><span data-ttu-id="740ff-169">Ein <see cref="T:System.Guid" /> -Objekt.</span><span class="sxs-lookup"><span data-stu-id="740ff-169">A <see cref="T:System.Guid" /> object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="740ff-170">Diese Eigenschaft gibt immer "GUID. Empty" zurück.</span><span class="sxs-lookup"><span data-stu-id="740ff-170">This property always returns Guid.Empty.</span></span> <span data-ttu-id="740ff-171">Diese Eigenschaft wird in einer zukünftigen Version möglicherweise entfernt.</span><span class="sxs-lookup"><span data-stu-id="740ff-171">This property might be removed in a future release.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="740ff-172">Das Argument ist kein benutzerdefinierter Marshaller.</span><span class="sxs-lookup"><span data-stu-id="740ff-172">The argument is not a custom marshaler.</span></span></exception>
        <altmember cref="T:System.Int32" />
        <altmember cref="T:System.Guid" />
      </Docs>
    </Member>
  </Members>
</Type>
