<Type Name="DynamicMethod" FullName="System.Reflection.Emit.DynamicMethod">
  <Metadata><Meta Name="ms.openlocfilehash" Value="e1fe4a21b415a0cd26d8a0924b6848fec258ef6d" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86795932" /></Metadata><TypeSignature Language="C#" Value="public sealed class DynamicMethod : System.Reflection.MethodInfo" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit DynamicMethod extends System.Reflection.MethodInfo" FrameworkAlternate="net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.1" />
  <TypeSignature Language="DocId" Value="T:System.Reflection.Emit.DynamicMethod" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class DynamicMethod&#xA;Inherits MethodInfo" />
  <TypeSignature Language="C++ CLI" Value="public ref class DynamicMethod sealed : System::Reflection::MethodInfo" />
  <TypeSignature Language="F#" Value="type DynamicMethod = class&#xA;    inherit MethodInfo" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit DynamicMethod extends System.Reflection.MethodInfo" FrameworkAlternate="xamarinandroid-7.1;xamarinmac-3.0" />
  <AssemblyInfo>
    <AssemblyName>System.Reflection.Emit.Lightweight</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.3.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="netstandard" FromVersion="2.1.0.0" To="System.Reflection.Emit.Lightweight" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.Reflection.MethodInfo</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0">
      <AttributeName Language="C#">[System.Runtime.InteropServices.ComVisible(true)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.ComVisible(true)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="bfc4c-101">Definiert eine dynamische Methode, die kompiliert, ausgeführt und verworfen werden kann, und stellt diese dar.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-101">Defines and represents a dynamic method that can be compiled, executed, and discarded.</span></span> <span data-ttu-id="bfc4c-102">Verworfene Methoden sind für die Garbage Collection verfügbar.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-102">Discarded methods are available for garbage collection.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bfc4c-103">Sie können die <xref:System.Reflection.Emit.DynamicMethod> -Klasse verwenden, um eine Methode zur Laufzeit zu generieren und auszuführen, ohne dass eine dynamische Assembly und ein dynamischer Typ zum enthalten der Methode generiert werden müssen.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-103">You can use the <xref:System.Reflection.Emit.DynamicMethod> class to generate and execute a method at run time, without having to generate a dynamic assembly and a dynamic type to contain the method.</span></span> <span data-ttu-id="bfc4c-104">Der ausführbare Code, der vom JIT-Compiler (Just-in-Time) erstellt wurde, wird freigegeben, wenn das Objekt freigegeben <xref:System.Reflection.Emit.DynamicMethod> wird.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-104">The executable code created by the just-in-time (JIT) compiler is reclaimed when the <xref:System.Reflection.Emit.DynamicMethod> object is reclaimed.</span></span> <span data-ttu-id="bfc4c-105">Dynamische Methoden sind die effizienteste Methode, um kleine Mengen an Code zu generieren und auszuführen.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-105">Dynamic methods are the most efficient way to generate and execute small amounts of code.</span></span>  
  
 <span data-ttu-id="bfc4c-106">Eine dynamische Methode kann anonym gehostet werden, oder Sie kann logisch einem Modul oder einem Typ zugeordnet werden.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-106">A dynamic method can be anonymously hosted, or it can be logically associated with a module or with a type.</span></span>  
  
-   <span data-ttu-id="bfc4c-107">Wenn die dynamische Methode anonym gehostet wird, befindet Sie sich in einer vom System bereitgestellten Assembly und ist daher von anderem Code isoliert.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-107">If the dynamic method is anonymously hosted, it is located in a system-provided assembly, and therefore is isolated from other code.</span></span> <span data-ttu-id="bfc4c-108">Standardmäßig hat Sie keinen Zugriff auf nicht öffentliche Daten.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-108">By default, it does not have access to any non-public data.</span></span> <span data-ttu-id="bfc4c-109">Eine anonym gehostete dynamische Methode kann die Möglichkeit haben, die Sichtbarkeits Prüfungen des JIT-Compilers zu überspringen, wenn Sie <xref:System.Security.Permissions.ReflectionPermission> mit dem-Flag erteilt wurden <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType> .</span><span class="sxs-lookup"><span data-stu-id="bfc4c-109">An anonymously hosted dynamic method can have restricted ability to skip the JIT compiler's visibility checks, if it has been granted <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="bfc4c-110">Die Vertrauens Ebene der Assembly, auf deren nicht öffentliche Member von der dynamischen Methode zugegriffen wird, muss gleich oder eine Teilmenge der Vertrauens Ebene der aufrufsstapel sein, die die dynamische Methode ausgegeben hat.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-110">The trust level of the assembly whose non-public members are accessed by the dynamic method must be equal to, or a subset of, the trust level of the call stack that emitted the dynamic method.</span></span> <span data-ttu-id="bfc4c-111">Weitere Informationen zu anonym gehosteten dynamischen Methoden finden Sie unter Exemplarische Vorgehensweise: Ausgeben von [Code in Szenarien mit teilweiser Vertrauens](/dotnet/framework/reflection-and-codedom/walkthrough-emitting-code-in-partial-trust-scenarios)Würdigkeit.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-111">For more information about anonymously hosted dynamic methods, see [Walkthrough: Emitting Code in Partial Trust Scenarios](/dotnet/framework/reflection-and-codedom/walkthrough-emitting-code-in-partial-trust-scenarios).</span></span>  
  
-   <span data-ttu-id="bfc4c-112">Wenn die dynamische Methode einem von Ihnen angegebenen Modul zugeordnet ist, ist die dynamische Methode für dieses Modul effektiv Global.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-112">If the dynamic method is associated with a module that you specify, the dynamic method is effectively global to that module.</span></span> <span data-ttu-id="bfc4c-113">Sie kann auf alle Typen im Modul und alle `internal` ( `Friend` in Visual Basic) Member der Typen zugreifen.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-113">It can access all types in the module and all `internal` (`Friend` in Visual Basic) members of the types.</span></span> <span data-ttu-id="bfc4c-114">Sie können jedem Modul eine dynamische Methode zuordnen, unabhängig davon, ob Sie das Modul erstellt haben, vorausgesetzt, dass eine Anforderung für <xref:System.Security.Permissions.ReflectionPermission> mit dem- <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess> Flag durch die aufrufende-Methode erfüllt werden kann, die den Code enthält.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-114">You can associate a dynamic method with any module, regardless of whether you created the module, provided that a demand for <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess> flag can be satisfied by the call stack that includes your code.</span></span> <span data-ttu-id="bfc4c-115">Wenn das <xref:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess?displayProperty=nameWithType> Flag in der Gewährung enthalten ist, kann die dynamische Methode die Sichtbarkeits Prüfungen des JIT-Compilers überspringen und auf die privaten Daten aller Typen, die im Modul oder in einem anderen Modul in einer Assembly deklariert sind, zugreifen.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-115">If the <xref:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess?displayProperty=nameWithType> flag is included in the grant, the dynamic method can skip the JIT compiler's visibility checks and access the private data of all types declared in the module or in any other module in any assembly.</span></span>  
  
    > [!NOTE]
    >  <span data-ttu-id="bfc4c-116">Wenn Sie das Modul angeben, dem eine dynamische Methode zugeordnet ist, darf dieses Modul nicht in der vom System bereitgestellten Assembly enthalten sein, die für das anonyme Hosting verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-116">When you specify the module with which a dynamic method is associated, that module must not be in the system-provided assembly that is used for anonymous hosting.</span></span>  
  
-   <span data-ttu-id="bfc4c-117">Wenn die dynamische Methode einem Typ zugeordnet ist, den Sie angeben, kann Sie unabhängig von der Zugriffsebene auf alle Member des Typs zugreifen.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-117">If the dynamic method is associated with a type that you specify, it has access to all members of the type, regardless of access level.</span></span> <span data-ttu-id="bfc4c-118">Darüber hinaus können JIT-Sichtbarkeits Prüfungen übersprungen werden.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-118">In addition, JIT visibility checks can be skipped.</span></span> <span data-ttu-id="bfc4c-119">Dadurch erhält die dynamische Methode Zugriff auf die privaten Daten anderer Typen, die im selben Modul oder in einem anderen Modul in einer Assembly deklariert sind.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-119">This gives the dynamic method access to the private data of other types declared in the same module or in any other module in any assembly.</span></span> <span data-ttu-id="bfc4c-120">Sie können einer dynamischen Methode einen beliebigen Typ zuordnen, aber Ihr Code muss <xref:System.Security.Permissions.ReflectionPermission> sowohl mit der <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess> -als auch der-Flags erteilt werden <xref:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess> .</span><span class="sxs-lookup"><span data-stu-id="bfc4c-120">You can associate a dynamic method with any type, but your code must be granted <xref:System.Security.Permissions.ReflectionPermission> with both the <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess> and <xref:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess> flags.</span></span>  
  
 <span data-ttu-id="bfc4c-121">In der folgenden Tabelle ist aufgeführt, welche Typen und Member für eine anonym gehostete dynamische Methode mit und ohne JIT-Sichtbarkeits Prüfungen zugänglich sind, je nachdem, ob <xref:System.Security.Permissions.ReflectionPermission> mit dem- <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess> Flag erteilt wurde.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-121">The following table shows which types and members are accessible to an anonymously hosted dynamic method, with and without JIT visibility checks, depending on whether <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess> flag is granted.</span></span>  
  
||<span data-ttu-id="bfc4c-122">Ohne <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess></span><span class="sxs-lookup"><span data-stu-id="bfc4c-122">Without <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess></span></span>|<span data-ttu-id="bfc4c-123">Mit <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess></span><span class="sxs-lookup"><span data-stu-id="bfc4c-123">With <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess></span></span>|  
|-|-|-|  
|<span data-ttu-id="bfc4c-124">Ohne Überspringen von JIT-Sichtbarkeits Prüfungen</span><span class="sxs-lookup"><span data-stu-id="bfc4c-124">Without skipping JIT visibility checks</span></span>|<span data-ttu-id="bfc4c-125">Öffentliche Member öffentlicher Typen in beliebigen Assemblys.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-125">Public members of public types in any assembly.</span></span>|<span data-ttu-id="bfc4c-126">Öffentliche Member öffentlicher Typen in beliebigen Assemblys.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-126">Public members of public types in any assembly.</span></span>|  
|<span data-ttu-id="bfc4c-127">Überspringen von JIT-Sichtbarkeits Prüfungen mit Einschränkungen</span><span class="sxs-lookup"><span data-stu-id="bfc4c-127">Skipping JIT visibility checks, with restrictions</span></span>|<span data-ttu-id="bfc4c-128">Öffentliche Member öffentlicher Typen in beliebigen Assemblys.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-128">Public members of public types in any assembly.</span></span>|<span data-ttu-id="bfc4c-129">Alle Elemente aller Typen, nur in Assemblys, deren Vertrauens Ebene gleich oder kleiner als die Vertrauens Ebene der Assembly ist, die die dynamische Methode ausgegeben hat.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-129">All members of all types, only in assemblies whose trust levels are equal to or less than the trust level of the assembly that emitted the dynamic method.</span></span>|  
  
> [!NOTE]
>  <span data-ttu-id="bfc4c-130">Vor hat den [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)] Code ausgegeben, <xref:System.Security.Permissions.ReflectionPermission> der mit dem-Flag erforderlich ist <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> .</span><span class="sxs-lookup"><span data-stu-id="bfc4c-130">Prior to the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], emitting code required <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="bfc4c-131">Diese Berechtigung ist standardmäßig in den benannten Berechtigungs Sätzen FullTrust und LocalIntranet enthalten, jedoch nicht im Internet-Berechtigungs Satz.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-131">This permission is included by default in the FullTrust and LocalIntranet named permission sets, but not in the Internet permission set.</span></span> <span data-ttu-id="bfc4c-132">Aus diesem Grund in früheren Versionen von der [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] kann eine Bibliothek mit Internetberechtigungen verwendet nur dann, wenn sie die <xref:System.Security.SecurityCriticalAttribute> Attribut, und führt auch eine <xref:System.Security.PermissionSet.Assert%2A> für <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit>.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-132">Therefore, in earlier versions of the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] a library can be used with Internet permissions only if it has the <xref:System.Security.SecurityCriticalAttribute> attribute and also executes an <xref:System.Security.PermissionSet.Assert%2A> for <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit>.</span></span> <span data-ttu-id="bfc4c-133">Diese Bibliotheken erfordern einen sorgfältigen Sicherheitsreview, da Codierungsfehler zu Sicherheitslücken führen können.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-133">Such libraries require careful security review because coding errors could result in security holes.</span></span> <span data-ttu-id="bfc4c-134">In [!INCLUDE[net_v20SP1_short](~/includes/net-v20sp1-short-md.md)] ist es möglich, Code in teilweise vertrauenswürdigen Szenarios ohne Sicherheitsanforderungen auszugeben, da das Generieren von Code an sich keinen privilegierten Vorgang darstellt.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-134">The [!INCLUDE[net_v20SP1_short](~/includes/net-v20sp1-short-md.md)] allows code to be emitted in partial trust scenarios without issuing any security demands, because generating code is not inherently a privileged operation.</span></span> <span data-ttu-id="bfc4c-135">Das bedeutet, dass der generierte Code nicht mehr Berechtigungen aufweist als die Assembly, die ihn ausgibt.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-135">That is, the generated code has no more permissions than the assembly that emits it.</span></span> <span data-ttu-id="bfc4c-136">Dies ermöglicht es, dass Bibliotheken, die Code ausgeben, sicherheitstransparent sein können, und beseitigt die Notwendigkeit der Assertion von <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit>, was das Schreiben einer sicheren Bibliothek vereinfacht.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-136">This allows libraries that emit code to be security transparent and removes the need to assert <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit>, which simplifies the task of writing a secure library.</span></span> <span data-ttu-id="bfc4c-137">Um dieses Feature verwenden zu können, sollte Ihre Anwendung auf oder höher ausgerichtet sein [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] .</span><span class="sxs-lookup"><span data-stu-id="bfc4c-137">To use this feature, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
 <span data-ttu-id="bfc4c-138">Die folgende Tabelle zeigt, welche Typen und Member für eine dynamische Methode, die einem Modul oder einem Typ in einem Modul zugeordnet ist, zugänglich sind.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-138">The following table shows which types and members are accessible to a dynamic method that is associated with a module or with a type in a module.</span></span>  
  
||<span data-ttu-id="bfc4c-139">Mit Modul verknüpft</span><span class="sxs-lookup"><span data-stu-id="bfc4c-139">Associated with module</span></span>|<span data-ttu-id="bfc4c-140">Dem Typ zugeordnet</span><span class="sxs-lookup"><span data-stu-id="bfc4c-140">Associated with type</span></span>|  
|-|-|-|  
|<span data-ttu-id="bfc4c-141">Ohne Überspringen von JIT-Sichtbarkeits Prüfungen</span><span class="sxs-lookup"><span data-stu-id="bfc4c-141">Without skipping JIT visibility checks</span></span>|<span data-ttu-id="bfc4c-142">Öffentliche und interne Member von öffentlichen, internen und privaten Typen im Modul.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-142">Public and internal members of public, internal, and private types in the module.</span></span><br /><br /> <span data-ttu-id="bfc4c-143">Öffentliche Member öffentlicher Typen in beliebigen Assemblys.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-143">Public members of public types in any assembly.</span></span>|<span data-ttu-id="bfc4c-144">Alle Member des zugeordneten Typs.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-144">All members of the associated type.</span></span> <span data-ttu-id="bfc4c-145">Öffentliche und interne Member aller anderen Typen im Modul.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-145">Public and internal members of all the other types in the module.</span></span><br /><br /> <span data-ttu-id="bfc4c-146">Öffentliche Member öffentlicher Typen in beliebigen Assemblys.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-146">Public members of public types in any assembly.</span></span>|  
|<span data-ttu-id="bfc4c-147">Überspringen von JIT-Sichtbarkeits Prüfungen</span><span class="sxs-lookup"><span data-stu-id="bfc4c-147">Skipping JIT visibility checks</span></span>|<span data-ttu-id="bfc4c-148">Alle Elemente aller Typen in einer beliebigen Assembly.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-148">All members of all types in any assembly.</span></span>|<span data-ttu-id="bfc4c-149">Alle Elemente aller Typen in einer beliebigen Assembly.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-149">All members of all types in any assembly.</span></span>|  
  
 <span data-ttu-id="bfc4c-150">Eine dynamische Methode, die einem Modul zugeordnet ist, verfügt über die Berechtigungen dieses Moduls.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-150">A dynamic method that is associated with a module has the permissions of that module.</span></span> <span data-ttu-id="bfc4c-151">Eine dynamische Methode, die einem Typ zugeordnet ist, verfügt über die Berechtigungen des Moduls, das diesen Typ enthält.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-151">A dynamic method that is associated with a type has the permissions of the module containing that type.</span></span>  
  
 <span data-ttu-id="bfc4c-152">Dynamische Methoden und deren Parameter müssen nicht benannt werden, Sie können jedoch Namen angeben, um das Debuggen zu unterstützen.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-152">Dynamic methods and their parameters do not have to be named, but you can specify names to assist in debugging.</span></span> <span data-ttu-id="bfc4c-153">Benutzerdefinierte Attribute werden für dynamische Methoden oder deren Parameter nicht unterstützt.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-153">Custom attributes are not supported on dynamic methods or their parameters.</span></span>  
  
 <span data-ttu-id="bfc4c-154">Dynamische Methoden sind zwar `static` Methoden ( `Shared` Methoden in Visual Basic), aber die gelockerten Regeln für die Delegatbindung, die in eingeführt wurden, [!INCLUDE[dnprdnlong](~/includes/dnprdnlong-md.md)] ermöglichen es, eine dynamische Methode an ein Objekt zu binden, sodass Sie wie eine Instanzmethode funktioniert, wenn Sie mit dieser Delegatinstanz aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-154">Although dynamic methods are `static` methods (`Shared` methods in Visual Basic), the relaxed rules for delegate binding introduced in the [!INCLUDE[dnprdnlong](~/includes/dnprdnlong-md.md)] allow a dynamic method to be bound to an object, so that it acts like an instance method when called using that delegate instance.</span></span> <span data-ttu-id="bfc4c-155">Ein Beispiel, das dies veranschaulicht, wird für die- <xref:System.Reflection.Emit.DynamicMethod.CreateDelegate%28System.Type%2CSystem.Object%29> Methoden Überladung bereitgestellt.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-155">An example that demonstrates this is provided for the <xref:System.Reflection.Emit.DynamicMethod.CreateDelegate%28System.Type%2CSystem.Object%29> method overload.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="bfc4c-156">In [!INCLUDE[dnprdnlong](~/includes/dnprdnlong-md.md)] unterstützen dynamische Methoden keine Symbol Informationen, d. h. lokale Variablennamen und Zeilennummern Zuordnung.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-156">In the [!INCLUDE[dnprdnlong](~/includes/dnprdnlong-md.md)], dynamic methods do not support symbol information, that is, local variable names and line-number mapping.</span></span> <span data-ttu-id="bfc4c-157">Diese Einschränkung wird in einer zukünftigen Version möglicherweise entfernt.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-157">This limitation might be removed in a future version.</span></span> <span data-ttu-id="bfc4c-158">Sie können während der Entwicklung verwenden, <xref:System.Reflection.Emit.AssemblyBuilder> um das Debuggen der generierten MSIL (Microsoft Intermediate Language) zu vereinfachen und dann während der letzten Bereitstellung zu dynamischen Methoden zu wechseln, da die <xref:System.Reflection.Emit.ILGenerator> Aufrufe in beiden Fällen gleich sind.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-158">You can use <xref:System.Reflection.Emit.AssemblyBuilder> during development to simplify debugging the generated Microsoft intermediate language (MSIL), and then switch to dynamic methods during final deployment, because the <xref:System.Reflection.Emit.ILGenerator> calls are the same in both cases.</span></span>  
  
## <a name="verification"></a><span data-ttu-id="bfc4c-159">Überprüfung</span><span class="sxs-lookup"><span data-stu-id="bfc4c-159">Verification</span></span>  
 <span data-ttu-id="bfc4c-160">In der folgenden Liste sind die Bedingungen zusammengefasst, unter denen dynamische Methoden nicht verifizierbaren Code enthalten können.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-160">The following list summarizes the conditions under which dynamic methods can contain unverifiable code.</span></span> <span data-ttu-id="bfc4c-161">(Beispielsweise kann eine dynamische Methode nicht überprüft werden, wenn die- <xref:System.Reflection.Emit.DynamicMethod.InitLocals%2A> Eigenschaft auf festgelegt ist `false` .)</span><span class="sxs-lookup"><span data-stu-id="bfc4c-161">(For example, a dynamic method is unverifiable if its <xref:System.Reflection.Emit.DynamicMethod.InitLocals%2A> property is set to `false`.)</span></span>  
  
-   <span data-ttu-id="bfc4c-162">Eine dynamische Methode, die mit einer sicherheitskritischen Assembly verknüpft ist, ist ebenfalls sicherheitskritisch und kann die Überprüfung überspringen.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-162">A dynamic method that is associated with a security-critical assembly is also security-critical, and can skip verification.</span></span> <span data-ttu-id="bfc4c-163">Beispielsweise wird eine Assembly ohne Sicherheits Attribute, die als Desktop Anwendung ausgeführt wird, von der Laufzeit als sicherheitskritisch behandelt.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-163">For example, an assembly without security attributes that is run as a desktop application is treated as security-critical by the runtime.</span></span> <span data-ttu-id="bfc4c-164">Wenn Sie der Assembly eine dynamische Methode zuordnen, kann die dynamische Methode nicht überprüfbaren Code enthalten.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-164">If you associate a dynamic method with the assembly, the dynamic method can contain unverifiable code.</span></span>  
  
-   <span data-ttu-id="bfc4c-165">Wenn eine dynamische Methode, die nicht überprüfbaren Code enthält, einer Assembly mit Transparenz der Ebene 1 zugeordnet ist, fügt der JIT-Compiler (Just-in-Time) eine Sicherheitsanforderung ein.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-165">If a dynamic method that contains unverifiable code is associated with an assembly that has level 1 transparency, the just-in-time (JIT) compiler injects a security demand.</span></span> <span data-ttu-id="bfc4c-166">Die Anforderung ist nur erfolgreich, wenn die dynamische Methode von voll vertrauenswürdigem Code ausgeführt wird.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-166">The demand succeeds only if the dynamic method is executed by fully trusted code.</span></span> <span data-ttu-id="bfc4c-167">[Sicherheitstransparenter Code, Ebene 1](/dotnet/framework/misc/security-transparent-code-level-1).</span><span class="sxs-lookup"><span data-stu-id="bfc4c-167">See [Security-Transparent Code, Level 1](/dotnet/framework/misc/security-transparent-code-level-1).</span></span>  
  
-   <span data-ttu-id="bfc4c-168">Wenn eine dynamische Methode, die nicht überprüfbaren Code enthält, einer Assembly zugeordnet ist, die Transparenz der Ebene 2 (z. b. mscorlib.dll) aufweist, wird eine Ausnahme ausgelöst (durch den JIT-Compiler eingefügt), anstatt eine Sicherheitsanforderung zu erstellen.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-168">If a dynamic method that contains unverifiable code is associated with an assembly that has level 2 transparency (such as mscorlib.dll), it throws an exception (injected by the JIT compiler) instead of making a security demand.</span></span> <span data-ttu-id="bfc4c-169">[Sicherheitstransparenter Code, Ebene 2](/dotnet/framework/misc/security-transparent-code-level-2).</span><span class="sxs-lookup"><span data-stu-id="bfc4c-169">See [Security-Transparent Code, Level 2](/dotnet/framework/misc/security-transparent-code-level-2).</span></span>  
  
-   <span data-ttu-id="bfc4c-170">Eine anonym gehostete dynamische Methode, die nicht überprüfbaren Code enthält, löst immer eine Ausnahme aus.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-170">An anonymously hosted dynamic method that contains unverifiable code always throws an exception.</span></span> <span data-ttu-id="bfc4c-171">Sie kann die Überprüfung nie überspringen, auch wenn Sie von voll vertrauenswürdigem Code erstellt und ausgeführt wird.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-171">It can never skip verification, even if it is created and executed by fully trusted code.</span></span>  
  
 <span data-ttu-id="bfc4c-172">Die Ausnahme, die für nicht überprüfbaren Code ausgelöst wird, variiert in Abhängigkeit davon, wie die dynamische Methode aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-172">The exception that is thrown for unverifiable code varies depending on the way the dynamic method is invoked.</span></span> <span data-ttu-id="bfc4c-173">Wenn Sie eine dynamische Methode aufrufen, indem Sie einen Delegaten verwenden, der von der-Methode zurückgegeben <xref:System.Reflection.Emit.DynamicMethod.CreateDelegate%2A> wird, wird eine ausgelöst <xref:System.Security.VerificationException> .</span><span class="sxs-lookup"><span data-stu-id="bfc4c-173">If you invoke a dynamic method by using a delegate returned from the <xref:System.Reflection.Emit.DynamicMethod.CreateDelegate%2A> method, a <xref:System.Security.VerificationException> is thrown.</span></span> <span data-ttu-id="bfc4c-174">Wenn Sie die dynamische Methode mithilfe der- <xref:System.Reflection.Emit.DynamicMethod.Invoke%2A> Methode aufrufen, <xref:System.Reflection.TargetInvocationException> wird eine mit einem inneren ausgelöst <xref:System.Security.VerificationException> .</span><span class="sxs-lookup"><span data-stu-id="bfc4c-174">If you invoke the dynamic method by using the <xref:System.Reflection.Emit.DynamicMethod.Invoke%2A> method, a <xref:System.Reflection.TargetInvocationException> is thrown with an inner <xref:System.Security.VerificationException>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bfc4c-175">Im folgenden Codebeispiel wird eine dynamische Methode erstellt, die zwei Parameter annimmt.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-175">The following code example creates a dynamic method that takes two parameters.</span></span> <span data-ttu-id="bfc4c-176">Im Beispiel wird ein einfacher Funktions Text ausgegeben, der den ersten Parameter in der Konsole ausgibt. im Beispiel wird der zweite Parameter als Rückgabewert der-Methode verwendet.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-176">The example emits a simple function body that prints the first parameter to the console, and the example uses the second parameter as the return value of the method.</span></span> <span data-ttu-id="bfc4c-177">Im Beispiel wird die-Methode vervollständigt, indem ein Delegat erstellt wird, der Delegat mit unterschiedlichen Parametern aufgerufen und schließlich die dynamische Methode mithilfe der-Methode aufgerufen wird <xref:System.Reflection.Emit.DynamicMethod.Invoke%2A> .</span><span class="sxs-lookup"><span data-stu-id="bfc4c-177">The example completes the method by creating a delegate, invokes the delegate with different parameters, and finally invokes the dynamic method using the <xref:System.Reflection.Emit.DynamicMethod.Invoke%2A> method.</span></span>  
  
 [!code-cpp[Reflection.DynamicMethod.All#1](~/samples/snippets/cpp/VS_Snippets_CLR/Reflection.DynamicMethod.All/cpp/source.cpp#1)]
 [!code-csharp[Reflection.DynamicMethod.All#1](~/samples/snippets/csharp/VS_Snippets_CLR/Reflection.DynamicMethod.All/CS/source.cs#1)]
 [!code-vb[Reflection.DynamicMethod.All#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Reflection.DynamicMethod.All/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="/dotnet/framework/reflection-and-codedom/how-to-define-and-execute-dynamic-methods"><span data-ttu-id="bfc4c-178">Vorgehensweise: Definieren und Ausführen von dynamischen Methoden</span><span class="sxs-lookup"><span data-stu-id="bfc4c-178">How to: Define and Execute Dynamic Methods</span></span></related>
    <related type="Article" href="/dotnet/framework/reflection-and-codedom/security-issues-in-reflection-emit"><span data-ttu-id="bfc4c-179">Sicherheitsaspekte bei der Reflektionsausgabe</span><span class="sxs-lookup"><span data-stu-id="bfc4c-179">Security Issues in Reflection Emit</span></span></related>
    <related type="Article" href="/dotnet/framework/reflection-and-codedom/walkthrough-emitting-code-in-partial-trust-scenarios"><span data-ttu-id="bfc4c-180">Exemplarische Vorgehensweise: Ausgeben von Code in Szenarios mit teilweiser Vertrauenswürdigkeit</span><span class="sxs-lookup"><span data-stu-id="bfc4c-180">Walkthrough: Emitting Code in Partial Trust Scenarios</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit.Lightweight</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="bfc4c-181">Erstellt eine dynamische Methode.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-181">Creates a dynamic method.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DynamicMethod (string name, Type? returnType, Type[]? parameterTypes);" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, class System.Type returnType, class System.Type[] parameterTypes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.DynamicMethod.#ctor(System.String,System.Type,System.Type[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, returnType As Type, parameterTypes As Type())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DynamicMethod(System::String ^ name, Type ^ returnType, cli::array &lt;Type ^&gt; ^ parameterTypes);" />
      <MemberSignature Language="F#" Value="new System.Reflection.Emit.DynamicMethod : string * Type * Type[] -&gt; System.Reflection.Emit.DynamicMethod" Usage="new System.Reflection.Emit.DynamicMethod (name, returnType, parameterTypes)" />
      <MemberSignature Language="C#" Value="public DynamicMethod (string name, Type returnType, Type[] parameterTypes);" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.1;xamarinandroid-7.1;xamarinmac-3.0" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit.Lightweight</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="returnType" Type="System.Type" />
        <Parameter Name="parameterTypes" Type="System.Type[]" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="bfc4c-182">Der Name der dynamischen Methode.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-182">The name of the dynamic method.</span></span> <span data-ttu-id="bfc4c-183">Dies kann eine leere Zeichenfolge sein, sie darf aber nicht <see langword="null" /> sein.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-183">This can be a zero-length string, but it cannot be <see langword="null" />.</span></span></param>
        <param name="returnType"><span data-ttu-id="bfc4c-184">Ein <see cref="T:System.Type" />-Objekt, das den Rückgabetyp der dynamischen Methode angibt, oder <see langword="null" />, wenn die Methode keinen Rückgabetyp hat.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-184">A <see cref="T:System.Type" /> object that specifies the return type of the dynamic method, or <see langword="null" /> if the method has no return type.</span></span></param>
        <param name="parameterTypes"><span data-ttu-id="bfc4c-185">Ein Array von <see cref="T:System.Type" />-Objekten, die die Typen der Parameter der dynamischen Methode angeben, oder <see langword="null" />, wenn die Methode keine Parameter hat.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-185">An array of <see cref="T:System.Type" /> objects specifying the types of the parameters of the dynamic method, or <see langword="null" /> if the method has no parameters.</span></span></param>
        <summary><span data-ttu-id="bfc4c-186">Initialisiert eine anonym gehostete dynamische Methode, wobei der Methodenname, der Rückgabetyp und die Parametertypen angegeben werden.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-186">Initializes an anonymously hosted dynamic method, specifying the method name, return type, and parameter types.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bfc4c-187">Die dynamische Methode, die von diesem Konstruktor erstellt wird, ist einer anonymen Assembly anstatt einem vorhandenen Typ oder Modul zugeordnet.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-187">The dynamic method that is created by this constructor is associated with an anonymous assembly instead of an existing type or module.</span></span> <span data-ttu-id="bfc4c-188">Die anonyme Assembly ist nur vorhanden, um eine Sandkasten Umgebung für dynamische Methoden bereitzustellen, d. h. um Sie von anderem Code zu isolieren.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-188">The anonymous assembly exists only to provide a sandbox environment for dynamic methods, that is, to isolate them from other code.</span></span> <span data-ttu-id="bfc4c-189">Diese Umgebung macht es sicher, dass die dynamische Methode von teilweise vertrauenswürdigem Code ausgegeben und ausgeführt werden kann.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-189">This environment makes it safe for the dynamic method to be emitted and executed by partially trusted code.</span></span>  
  
 <span data-ttu-id="bfc4c-190">Dieser Konstruktor gibt an, dass JIT-Sichtbarkeits Prüfungen (Just-in-Time) für die MSIL (Microsoft Intermediate Language) der dynamischen Methode erzwungen werden.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-190">This constructor specifies that just-in-time (JIT) visibility checks will be enforced for the Microsoft intermediate language (MSIL) of the dynamic method.</span></span> <span data-ttu-id="bfc4c-191">Das heißt, der Code in der dynamischen Methode hat Zugriff auf öffentliche Methoden öffentlicher Klassen.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-191">That is, the code in the dynamic method has access to public methods of public classes.</span></span> <span data-ttu-id="bfc4c-192">Ausnahmen werden ausgelöst, wenn die Methode versucht, auf Typen oder Member zuzugreifen, bei denen es sich um `private` , `protected` oder handelt `internal` ( `Friend` in Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="bfc4c-192">Exceptions are thrown if the method tries to access types or members that are `private`, `protected`, or `internal` (`Friend` in Visual Basic).</span></span> <span data-ttu-id="bfc4c-193">Verwenden Sie zum Erstellen einer dynamischen Methode, die eingeschränkte Fähigkeit zum Überspringen von JIT-Sichtbarkeits Prüfungen hat, den- <xref:System.Reflection.Emit.DynamicMethod.%23ctor%28System.String%2CSystem.Type%2CSystem.Type%5B%5D%2CSystem.Boolean%29> Konstruktor.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-193">To create a dynamic method that has restricted ability to skip JIT visibility checks, use the <xref:System.Reflection.Emit.DynamicMethod.%23ctor%28System.String%2CSystem.Type%2CSystem.Type%5B%5D%2CSystem.Boolean%29> constructor.</span></span>  
  
 <span data-ttu-id="bfc4c-194">Wenn eine anonym gehostete dynamische Methode erstellt wird, wird die aufzurufende Assembly einbezogen.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-194">When an anonymously hosted dynamic method is constructed, the call stack of the emitting assembly is included.</span></span> <span data-ttu-id="bfc4c-195">Wenn die-Methode aufgerufen wird, werden die Berechtigungen der ausgebenden Assembly anstelle der Berechtigungen des eigentlichen Aufrufers verwendet.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-195">When the method is invoked, the permissions of the emitting assembly are used instead of the permissions of the actual caller.</span></span> <span data-ttu-id="bfc4c-196">Folglich kann die dynamische Methode nicht auf einer höheren Berechtigungsebene ausgeführt werden, als die der Assembly, die Sie ausgegeben hat, auch wenn Sie an eine Assembly mit einer höheren Vertrauens Ebene weitergegeben und von dieser ausgeführt wird.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-196">Thus, the dynamic method cannot execute at a higher level of privilege than that of the assembly that emitted it, even if it is passed to and executed by an assembly that has a higher trust level.</span></span>  
  
 <span data-ttu-id="bfc4c-197">Dieser Konstruktor gibt die Methoden Attribute <xref:System.Reflection.MethodAttributes.Public?displayProperty=nameWithType> und <xref:System.Reflection.MethodAttributes.Static?displayProperty=nameWithType> und die Aufruf Konvention an <xref:System.Reflection.CallingConventions.Standard?displayProperty=nameWithType> .</span><span class="sxs-lookup"><span data-stu-id="bfc4c-197">This constructor specifies the method attributes <xref:System.Reflection.MethodAttributes.Public?displayProperty=nameWithType> and <xref:System.Reflection.MethodAttributes.Static?displayProperty=nameWithType>, and the calling convention <xref:System.Reflection.CallingConventions.Standard?displayProperty=nameWithType>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="bfc4c-198">Dieser Konstruktor wurde in oder höher eingeführt [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] .</span><span class="sxs-lookup"><span data-stu-id="bfc4c-198">This constructor was introduced in the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="bfc4c-199">Ein Element von <paramref name="parameterTypes" /> ist <see langword="null" /> oder <see cref="T:System.Void" />.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-199">An element of <paramref name="parameterTypes" /> is <see langword="null" /> or <see cref="T:System.Void" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="bfc4c-200"><paramref name="name" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-200"><paramref name="name" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="bfc4c-201"><paramref name="returnType" /> ist ein Typ, für den <see cref="P:System.Type.IsByRef" /> den Wert <see langword="true" /> zurückgibt.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-201"><paramref name="returnType" /> is a type for which <see cref="P:System.Type.IsByRef" /> returns <see langword="true" />.</span></span></exception>
        <related type="Article" href="/dotnet/framework/reflection-and-codedom/how-to-define-and-execute-dynamic-methods"><span data-ttu-id="bfc4c-202">Vorgehensweise: Definieren und Ausführen von dynamischen Methoden</span><span class="sxs-lookup"><span data-stu-id="bfc4c-202">How to: Define and Execute Dynamic Methods</span></span></related>
        <related type="Article" href="/dotnet/framework/reflection-and-codedom/security-issues-in-reflection-emit"><span data-ttu-id="bfc4c-203">Sicherheitsaspekte bei der Reflektionsausgabe</span><span class="sxs-lookup"><span data-stu-id="bfc4c-203">Security Issues in Reflection Emit</span></span></related>
        <related type="Article" href="/dotnet/framework/reflection-and-codedom/walkthrough-emitting-code-in-partial-trust-scenarios"><span data-ttu-id="bfc4c-204">Exemplarische Vorgehensweise: Ausgeben von Code in Szenarios mit teilweiser Vertrauenswürdigkeit</span><span class="sxs-lookup"><span data-stu-id="bfc4c-204">Walkthrough: Emitting Code in Partial Trust Scenarios</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DynamicMethod (string name, Type? returnType, Type[]? parameterTypes, bool restrictedSkipVisibility);" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, class System.Type returnType, class System.Type[] parameterTypes, bool restrictedSkipVisibility) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.DynamicMethod.#ctor(System.String,System.Type,System.Type[],System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, returnType As Type, parameterTypes As Type(), restrictedSkipVisibility As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DynamicMethod(System::String ^ name, Type ^ returnType, cli::array &lt;Type ^&gt; ^ parameterTypes, bool restrictedSkipVisibility);" />
      <MemberSignature Language="F#" Value="new System.Reflection.Emit.DynamicMethod : string * Type * Type[] * bool -&gt; System.Reflection.Emit.DynamicMethod" Usage="new System.Reflection.Emit.DynamicMethod (name, returnType, parameterTypes, restrictedSkipVisibility)" />
      <MemberSignature Language="C#" Value="public DynamicMethod (string name, Type returnType, Type[] parameterTypes, bool restrictedSkipVisibility);" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.1;xamarinandroid-7.1;xamarinmac-3.0" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit.Lightweight</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="returnType" Type="System.Type" />
        <Parameter Name="parameterTypes" Type="System.Type[]" />
        <Parameter Name="restrictedSkipVisibility" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="bfc4c-205">Der Name der dynamischen Methode.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-205">The name of the dynamic method.</span></span> <span data-ttu-id="bfc4c-206">Dies kann eine leere Zeichenfolge sein, sie darf aber nicht <see langword="null" /> sein.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-206">This can be a zero-length string, but it cannot be <see langword="null" />.</span></span></param>
        <param name="returnType"><span data-ttu-id="bfc4c-207">Ein <see cref="T:System.Type" />-Objekt, das den Rückgabetyp der dynamischen Methode angibt, oder <see langword="null" />, wenn die Methode keinen Rückgabetyp hat.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-207">A <see cref="T:System.Type" /> object that specifies the return type of the dynamic method, or <see langword="null" /> if the method has no return type.</span></span></param>
        <param name="parameterTypes"><span data-ttu-id="bfc4c-208">Ein Array von <see cref="T:System.Type" />-Objekten, die die Typen der Parameter der dynamischen Methode angeben, oder <see langword="null" />, wenn die Methode keine Parameter hat.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-208">An array of <see cref="T:System.Type" /> objects specifying the types of the parameters of the dynamic method, or <see langword="null" /> if the method has no parameters.</span></span></param>
        <param name="restrictedSkipVisibility"><span data-ttu-id="bfc4c-209"><see langword="true" />, wenn JIT-Sichtbarkeitsprüfungen für Typen und Member übersprungen werden sollen, auf die durch die MSIL der dynamischen Methode zugegriffen wird. Dafür gibt es folgende Einschränkung: Die Vertrauensebene der Assemblys, die diese Typen und Member enthalten, muss identisch sein mit oder kleiner sein als die Vertrauensebene der Aufrufliste, die die dynamische Methode ausgibt. Andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-209"><see langword="true" /> to skip JIT visibility checks on types and members accessed by the MSIL of the dynamic method, with this restriction: the trust level of the assemblies that contain those types and members must be equal to or less than the trust level of the call stack that emits the dynamic method; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="bfc4c-210">Initialisiert eine anonym gehostete dynamische Methode. Dazu werden der Methodenname, der Rückgabetyp und die Parametertypen angegeben und wird angegeben, ob JIT-Sichtbarkeitsprüfungen (Just-In-Time) für Typen und Member übersprungen werden sollen, auf die von der MSIL (Microsoft Intermediate Language) der dynamischen Methode zugegriffen wird.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-210">Initializes an anonymously hosted dynamic method, specifying the method name, return type, parameter types, and whether just-in-time (JIT) visibility checks should be skipped for types and members accessed by the Microsoft intermediate language (MSIL) of the dynamic method.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bfc4c-211">Die dynamische Methode, die von diesem Konstruktor erstellt wird, ist einer anonymen Assembly anstatt einem vorhandenen Typ oder Modul zugeordnet.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-211">The dynamic method that is created by this constructor is associated with an anonymous assembly instead of an existing type or module.</span></span> <span data-ttu-id="bfc4c-212">Die anonyme Assembly ist nur vorhanden, um eine Sandkasten Umgebung für dynamische Methoden bereitzustellen, d. h. um Sie von anderem Code zu isolieren.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-212">The anonymous assembly exists only to provide a sandbox environment for dynamic methods, that is, to isolate them from other code.</span></span> <span data-ttu-id="bfc4c-213">Diese Umgebung macht es sicher, dass die dynamische Methode von teilweise vertrauenswürdigem Code ausgegeben und ausgeführt werden kann.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-213">This environment makes it safe for the dynamic method to be emitted and executed by partially trusted code.</span></span>  
  
 <span data-ttu-id="bfc4c-214">Anonym gehostete dynamische Methoden haben keinen automatischen Zugriff auf Typen oder Member, die `private` , `protected` oder sind `internal` ( `Friend` in Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="bfc4c-214">Anonymously hosted dynamic methods do not have automatic access to any types or members that are `private`, `protected`, or `internal` (`Friend` in Visual Basic).</span></span> <span data-ttu-id="bfc4c-215">Dies unterscheidet sich von dynamischen Methoden, die einem vorhandenen Typ oder Modul zugeordnet sind, die Zugriff auf verborgene Member im zugeordneten Bereich haben.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-215">This is different from dynamic methods that are associated with an existing type or module, which have access to hidden members in their associated scope.</span></span>  
  
 <span data-ttu-id="bfc4c-216">Geben `true` Sie für an, `restrictedSkipVisibility` Wenn die dynamische Methode auf Typen oder Member zugreifen muss, die `private` , `protected` oder sind `internal` .</span><span class="sxs-lookup"><span data-stu-id="bfc4c-216">Specify `true` for `restrictedSkipVisibility` if your dynamic method has to access types or members that are `private`, `protected`, or `internal`.</span></span> <span data-ttu-id="bfc4c-217">Dadurch wird der dynamischen Methode der Zugriff auf diese Member eingeschränkt.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-217">This gives the dynamic method restricted access to these members.</span></span> <span data-ttu-id="bfc4c-218">Das heißt, auf die Member kann nur zugegriffen werden, wenn die folgenden Bedingungen erfüllt sind:</span><span class="sxs-lookup"><span data-stu-id="bfc4c-218">That is, the members can be accessed only if the following conditions are met:</span></span>  
  
-   <span data-ttu-id="bfc4c-219">Die Zielmember gehören zu einer Assembly, die eine Vertrauens Ebene aufweist, die gleich oder niedriger ist als die-Methode, die die dynamische Methode ausgibt.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-219">The target members belong to an assembly that has a level of trust equal to or lower than the call stack that emits the dynamic method.</span></span>  
  
-   <span data-ttu-id="bfc4c-220">Die aufrufsstapel, die die dynamische Methode ausgibt, wird <xref:System.Security.Permissions.ReflectionPermission> mit dem- <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType> Flag erteilt.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-220">The call stack that emits the dynamic method is granted <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="bfc4c-221">Dies gilt immer, wenn der Code mit voller Vertrauenswürdigkeit ausgeführt wird.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-221">This is always true when the code is executed with full trust.</span></span> <span data-ttu-id="bfc4c-222">Bei teilweise vertrauenswürdigem Code ist dies nur dann der Fall, wenn der Host die Berechtigung explizit erteilt.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-222">For partially trusted code, it is true only if the host explicitly grants the permission.</span></span>  
  
    > [!IMPORTANT]
    >  <span data-ttu-id="bfc4c-223">Wenn die Berechtigung nicht erteilt wurde, wird eine Sicherheits Ausnahme ausgelöst, wenn <xref:System.Reflection.Emit.DynamicMethod.CreateDelegate%2A> aufgerufen wird oder wenn die dynamische Methode aufgerufen wird, nicht, wenn dieser Konstruktor aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-223">If the permission has not been granted, a security exception is thrown when <xref:System.Reflection.Emit.DynamicMethod.CreateDelegate%2A> is called or when the dynamic method is invoked, not when this constructor is called.</span></span> <span data-ttu-id="bfc4c-224">Zum Ausgeben der dynamischen Methode sind keine speziellen Berechtigungen erforderlich.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-224">No special permissions are required to emit the dynamic method.</span></span>  
  
 <span data-ttu-id="bfc4c-225">Beispielsweise kann eine dynamische Methode, die mit `restrictedSkipVisibility` auf festgelegt wird, `true` auf einen privaten Member einer beliebigen Assembly in der aufrufsstapel zugreifen, wenn der aufrufsstapel eingeschränkter Element Zugriff gewährt wurde.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-225">For example, a dynamic method that is created with `restrictedSkipVisibility` set to `true` can access a private member of any assembly on the call stack if the call stack has been granted restricted member access.</span></span> <span data-ttu-id="bfc4c-226">Wenn die dynamische Methode mit teilweise vertrauenswürdigem Code in der aufrufsstapel erstellt wird, kann Sie nicht auf einen privaten Member eines Typs in einer [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] Assembly zugreifen, da solche Assemblys voll vertrauenswürdig sind.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-226">If the dynamic method is created with partially trusted code on the call stack, it cannot access a private member of a type in a [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] assembly, because such assemblies are fully trusted.</span></span>  
  
 <span data-ttu-id="bfc4c-227">Wenn den Wert `restrictedSkipVisibility` `false` hat, werden JIT-Sichtbarkeits Prüfungen erzwungen.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-227">If `restrictedSkipVisibility` is `false`, JIT visibility checks are enforced.</span></span> <span data-ttu-id="bfc4c-228">Der Code in der dynamischen Methode hat Zugriff auf öffentliche Methoden öffentlicher Klassen, und Ausnahmen werden ausgelöst, wenn versucht wird, auf Typen oder Member zuzugreifen, die `private` , `protected` oder sind `internal` .</span><span class="sxs-lookup"><span data-stu-id="bfc4c-228">The code in the dynamic method has access to public methods of public classes, and exceptions are thrown if it tries to access types or members that are `private`, `protected`, or `internal`.</span></span>  
  
 <span data-ttu-id="bfc4c-229">Wenn eine anonym gehostete dynamische Methode erstellt wird, wird die aufzurufende Assembly einbezogen.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-229">When an anonymously hosted dynamic method is constructed, the call stack of the emitting assembly is included.</span></span> <span data-ttu-id="bfc4c-230">Wenn die-Methode aufgerufen wird, werden die Berechtigungen der ausgebenden Aufruf Stapel anstelle der Berechtigungen des eigentlichen Aufrufers verwendet.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-230">When the method is invoked, the permissions of the emitting call stack are used instead of the permissions of the actual caller.</span></span> <span data-ttu-id="bfc4c-231">Folglich kann die dynamische Methode nicht auf einer höheren Berechtigungsebene ausgeführt werden, als die der Assembly, die Sie ausgegeben hat, auch wenn Sie an eine Assembly mit einer höheren Vertrauens Ebene weitergegeben und von dieser ausgeführt wird.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-231">Thus, the dynamic method cannot execute at a higher level of privilege than that of the assembly that emitted it, even if it is passed to and executed by an assembly that has a higher trust level.</span></span>  
  
 <span data-ttu-id="bfc4c-232">Dieser Konstruktor gibt die Methoden Attribute <xref:System.Reflection.MethodAttributes.Public?displayProperty=nameWithType> und <xref:System.Reflection.MethodAttributes.Static?displayProperty=nameWithType> und die Aufruf Konvention an <xref:System.Reflection.CallingConventions.Standard?displayProperty=nameWithType> .</span><span class="sxs-lookup"><span data-stu-id="bfc4c-232">This constructor specifies the method attributes <xref:System.Reflection.MethodAttributes.Public?displayProperty=nameWithType> and <xref:System.Reflection.MethodAttributes.Static?displayProperty=nameWithType>, and the calling convention <xref:System.Reflection.CallingConventions.Standard?displayProperty=nameWithType>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="bfc4c-233">Dieser Konstruktor wurde in oder höher eingeführt [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] .</span><span class="sxs-lookup"><span data-stu-id="bfc4c-233">This constructor was introduced in the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="bfc4c-234">Ein Element von <paramref name="parameterTypes" /> ist <see langword="null" /> oder <see cref="T:System.Void" />.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-234">An element of <paramref name="parameterTypes" /> is <see langword="null" /> or <see cref="T:System.Void" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="bfc4c-235"><paramref name="name" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-235"><paramref name="name" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="bfc4c-236"><paramref name="returnType" /> ist ein Typ, für den <see cref="P:System.Type.IsByRef" /> den Wert <see langword="true" /> zurückgibt.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-236"><paramref name="returnType" /> is a type for which <see cref="P:System.Type.IsByRef" /> returns <see langword="true" />.</span></span></exception>
        <related type="Article" href="/dotnet/framework/reflection-and-codedom/how-to-define-and-execute-dynamic-methods"><span data-ttu-id="bfc4c-237">Vorgehensweise: Definieren und Ausführen von dynamischen Methoden</span><span class="sxs-lookup"><span data-stu-id="bfc4c-237">How to: Define and Execute Dynamic Methods</span></span></related>
        <related type="Article" href="/dotnet/framework/reflection-and-codedom/security-issues-in-reflection-emit"><span data-ttu-id="bfc4c-238">Sicherheitsaspekte bei der Reflektionsausgabe</span><span class="sxs-lookup"><span data-stu-id="bfc4c-238">Security Issues in Reflection Emit</span></span></related>
        <related type="Article" href="/dotnet/framework/reflection-and-codedom/walkthrough-emitting-code-in-partial-trust-scenarios"><span data-ttu-id="bfc4c-239">Exemplarische Vorgehensweise: Ausgeben von Code in Szenarios mit teilweiser Vertrauenswürdigkeit</span><span class="sxs-lookup"><span data-stu-id="bfc4c-239">Walkthrough: Emitting Code in Partial Trust Scenarios</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DynamicMethod (string name, Type? returnType, Type[]? parameterTypes, System.Reflection.Module m);" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, class System.Type returnType, class System.Type[] parameterTypes, class System.Reflection.Module m) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.DynamicMethod.#ctor(System.String,System.Type,System.Type[],System.Reflection.Module)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, returnType As Type, parameterTypes As Type(), m As Module)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DynamicMethod(System::String ^ name, Type ^ returnType, cli::array &lt;Type ^&gt; ^ parameterTypes, System::Reflection::Module ^ m);" />
      <MemberSignature Language="F#" Value="new System.Reflection.Emit.DynamicMethod : string * Type * Type[] * System.Reflection.Module -&gt; System.Reflection.Emit.DynamicMethod" Usage="new System.Reflection.Emit.DynamicMethod (name, returnType, parameterTypes, m)" />
      <MemberSignature Language="C#" Value="public DynamicMethod (string name, Type returnType, Type[] parameterTypes, System.Reflection.Module m);" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.1;xamarinandroid-7.1;xamarinmac-3.0" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit.Lightweight</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="returnType" Type="System.Type" />
        <Parameter Name="parameterTypes" Type="System.Type[]" />
        <Parameter Name="m" Type="System.Reflection.Module" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="bfc4c-240">Der Name der dynamischen Methode.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-240">The name of the dynamic method.</span></span> <span data-ttu-id="bfc4c-241">Dies kann eine leere Zeichenfolge sein, sie darf aber nicht <see langword="null" /> sein.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-241">This can be a zero-length string, but it cannot be <see langword="null" />.</span></span></param>
        <param name="returnType"><span data-ttu-id="bfc4c-242">Ein <see cref="T:System.Type" />-Objekt, das den Rückgabetyp der dynamischen Methode angibt, oder <see langword="null" />, wenn die Methode keinen Rückgabetyp hat.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-242">A <see cref="T:System.Type" /> object that specifies the return type of the dynamic method, or <see langword="null" /> if the method has no return type.</span></span></param>
        <param name="parameterTypes"><span data-ttu-id="bfc4c-243">Ein Array von <see cref="T:System.Type" />-Objekten, die die Typen der Parameter der dynamischen Methode angeben, oder <see langword="null" />, wenn die Methode keine Parameter hat.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-243">An array of <see cref="T:System.Type" /> objects specifying the types of the parameters of the dynamic method, or <see langword="null" /> if the method has no parameters.</span></span></param>
        <param name="m"><span data-ttu-id="bfc4c-244">Ein <see cref="T:System.Reflection.Module" />, das das Modul darstellt, dem die dynamische Methode logisch zugeordnet ist.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-244">A <see cref="T:System.Reflection.Module" /> representing the module with which the dynamic method is to be logically associated.</span></span></param>
        <summary><span data-ttu-id="bfc4c-245">Erstellt eine dynamische Methode, die sich zu einem Modul global verhält und den Methodennamen, den Rückgabetyp, die Parametertypen und das Modul angibt.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-245">Creates a dynamic method that is global to a module, specifying the method name, return type, parameter types, and module.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bfc4c-246">Dieser Konstruktor gibt Methoden Attribute <xref:System.Reflection.MethodAttributes.Public?displayProperty=nameWithType> und die <xref:System.Reflection.MethodAttributes.Static?displayProperty=nameWithType> Aufruf Konvention an <xref:System.Reflection.CallingConventions.Standard?displayProperty=nameWithType> und überspringt keine Just-in-time (JIT)-Sichtbarkeits Prüfungen.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-246">This constructor specifies method attributes <xref:System.Reflection.MethodAttributes.Public?displayProperty=nameWithType> and <xref:System.Reflection.MethodAttributes.Static?displayProperty=nameWithType>, calling convention <xref:System.Reflection.CallingConventions.Standard?displayProperty=nameWithType>, and does not skip just-in-time (JIT) visibility checks.</span></span>  
  
 <span data-ttu-id="bfc4c-247">Die mit diesem Konstruktor erstellte dynamische Methode hat Zugriff auf die öffentlichen und `internal` ( `Friend` in Visual Basic) Member aller Typen, die im Modul enthalten sind `m` .</span><span class="sxs-lookup"><span data-stu-id="bfc4c-247">The dynamic method created with this constructor has access to public and `internal` (`Friend` in Visual Basic) members of all the types contained in module `m`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="bfc4c-248">Aus Gründen der Abwärtskompatibilität erfordert dieser Konstruktor <xref:System.Security.Permissions.SecurityPermission> mit dem- <xref:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence?displayProperty=nameWithType> Flag, wenn die folgenden Bedingungen zutreffen: `m` ist ein anderes Modul als das Aufruf Modul, und die Anforderung für <xref:System.Security.Permissions.ReflectionPermission> mit dem-Flag ist <xref:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess?displayProperty=nameWithType> fehlgeschlagen.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-248">For backward compatibility, this constructor demands <xref:System.Security.Permissions.SecurityPermission> with the <xref:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence?displayProperty=nameWithType> flag if the following conditions are both true: `m` is a module other than the calling module, and the demand for <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess?displayProperty=nameWithType> flag has failed.</span></span> <span data-ttu-id="bfc4c-249">Wenn die Anforderung für <xref:System.Security.Permissions.SecurityPermission> erfolgreich ist, ist der Vorgang zulässig.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-249">If the demand for <xref:System.Security.Permissions.SecurityPermission> succeeds, the operation is allowed.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="bfc4c-250">Ab [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)] erfordert dieser Member nicht mehr <xref:System.Security.Permissions.ReflectionPermission> mit dem- <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> Flag.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-250">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="bfc4c-251">(Siehe [Sicherheitsprobleme bei der Reflektionsausgabe](/dotnet/framework/reflection-and-codedom/security-issues-in-reflection-emit).) Um diese Funktion verwenden zu können, sollte Ihre Anwendung auf oder höher ausgerichtet sein [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] .</span><span class="sxs-lookup"><span data-stu-id="bfc4c-251">(See [Security Issues in Reflection Emit](/dotnet/framework/reflection-and-codedom/security-issues-in-reflection-emit).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bfc4c-252">Im folgenden Codebeispiel wird eine dynamische Methode erstellt, die zwei Parameter annimmt.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-252">The following code example creates a dynamic method that takes two parameters.</span></span> <span data-ttu-id="bfc4c-253">Im Beispiel wird ein einfacher Funktions Text ausgegeben, der den ersten Parameter in der Konsole ausgibt. im Beispiel wird der zweite Parameter als Rückgabewert der-Methode verwendet.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-253">The example emits a simple function body that prints the first parameter to the console, and the example uses the second parameter as the return value of the method.</span></span> <span data-ttu-id="bfc4c-254">Im Beispiel wird die-Methode vervollständigt, indem ein Delegat erstellt wird, der Delegat mit unterschiedlichen Parametern aufgerufen und schließlich die dynamische Methode mithilfe der-Methode aufgerufen wird <xref:System.Reflection.Emit.DynamicMethod.Invoke%28System.Object%2CSystem.Reflection.BindingFlags%2CSystem.Reflection.Binder%2CSystem.Object%5B%5D%2CSystem.Globalization.CultureInfo%29> .</span><span class="sxs-lookup"><span data-stu-id="bfc4c-254">The example completes the method by creating a delegate, invokes the delegate with different parameters, and finally invokes the dynamic method using the <xref:System.Reflection.Emit.DynamicMethod.Invoke%28System.Object%2CSystem.Reflection.BindingFlags%2CSystem.Reflection.Binder%2CSystem.Object%5B%5D%2CSystem.Globalization.CultureInfo%29> method.</span></span>  
  
 [!code-cpp[Reflection.DynamicMethod.ctor1#1](~/samples/snippets/cpp/VS_Snippets_CLR/Reflection.DynamicMethod.ctor1/cpp/source.cpp#1)]
 [!code-csharp[Reflection.DynamicMethod.ctor1#1](~/samples/snippets/csharp/VS_Snippets_CLR/Reflection.DynamicMethod.ctor1/CS/source.cs#1)]
 [!code-vb[Reflection.DynamicMethod.ctor1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Reflection.DynamicMethod.ctor1/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="bfc4c-255">Ein Element von <paramref name="parameterTypes" /> ist <see langword="null" /> oder <see cref="T:System.Void" />.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-255">An element of <paramref name="parameterTypes" /> is <see langword="null" /> or <see cref="T:System.Void" />.</span></span>  
  
<span data-ttu-id="bfc4c-256">- oder -</span><span class="sxs-lookup"><span data-stu-id="bfc4c-256">-or-</span></span> 
 <span data-ttu-id="bfc4c-257"><paramref name="m" /> ist ein Modul, das das anonyme Hosten für dynamische Methoden bereitstellt.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-257"><paramref name="m" /> is a module that provides anonymous hosting for dynamic methods.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="bfc4c-258"><paramref name="name" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-258"><paramref name="name" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="bfc4c-259">- oder -</span><span class="sxs-lookup"><span data-stu-id="bfc4c-259">-or-</span></span> 
 <span data-ttu-id="bfc4c-260"><paramref name="m" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-260"><paramref name="m" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="bfc4c-261"><paramref name="returnType" /> ist ein Typ, für den <see cref="P:System.Type.IsByRef" /> den Wert <see langword="true" /> zurückgibt.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-261"><paramref name="returnType" /> is a type for which <see cref="P:System.Type.IsByRef" /> returns <see langword="true" />.</span></span></exception>
        <related type="Article" href="/dotnet/framework/reflection-and-codedom/how-to-define-and-execute-dynamic-methods"><span data-ttu-id="bfc4c-262">Vorgehensweise: Definieren und Ausführen von dynamischen Methoden</span><span class="sxs-lookup"><span data-stu-id="bfc4c-262">How to: Define and Execute Dynamic Methods</span></span></related>
        <related type="Article" href="/dotnet/framework/reflection-and-codedom/security-issues-in-reflection-emit"><span data-ttu-id="bfc4c-263">Sicherheitsaspekte bei der Reflektionsausgabe</span><span class="sxs-lookup"><span data-stu-id="bfc4c-263">Security Issues in Reflection Emit</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DynamicMethod (string name, Type? returnType, Type[]? parameterTypes, Type owner);" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, class System.Type returnType, class System.Type[] parameterTypes, class System.Type owner) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.DynamicMethod.#ctor(System.String,System.Type,System.Type[],System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, returnType As Type, parameterTypes As Type(), owner As Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DynamicMethod(System::String ^ name, Type ^ returnType, cli::array &lt;Type ^&gt; ^ parameterTypes, Type ^ owner);" />
      <MemberSignature Language="F#" Value="new System.Reflection.Emit.DynamicMethod : string * Type * Type[] * Type -&gt; System.Reflection.Emit.DynamicMethod" Usage="new System.Reflection.Emit.DynamicMethod (name, returnType, parameterTypes, owner)" />
      <MemberSignature Language="C#" Value="public DynamicMethod (string name, Type returnType, Type[] parameterTypes, Type owner);" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.1;xamarinandroid-7.1;xamarinmac-3.0" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit.Lightweight</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="returnType" Type="System.Type" />
        <Parameter Name="parameterTypes" Type="System.Type[]" />
        <Parameter Name="owner" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="bfc4c-264">Der Name der dynamischen Methode.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-264">The name of the dynamic method.</span></span> <span data-ttu-id="bfc4c-265">Dies kann eine leere Zeichenfolge sein, sie darf aber nicht <see langword="null" /> sein.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-265">This can be a zero-length string, but it cannot be <see langword="null" />.</span></span></param>
        <param name="returnType"><span data-ttu-id="bfc4c-266">Ein <see cref="T:System.Type" />-Objekt, das den Rückgabetyp der dynamischen Methode angibt, oder <see langword="null" />, wenn die Methode keinen Rückgabetyp hat.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-266">A <see cref="T:System.Type" /> object that specifies the return type of the dynamic method, or <see langword="null" /> if the method has no return type.</span></span></param>
        <param name="parameterTypes"><span data-ttu-id="bfc4c-267">Ein Array von <see cref="T:System.Type" />-Objekten, die die Typen der Parameter der dynamischen Methode angeben, oder <see langword="null" />, wenn die Methode keine Parameter hat.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-267">An array of <see cref="T:System.Type" /> objects specifying the types of the parameters of the dynamic method, or <see langword="null" /> if the method has no parameters.</span></span></param>
        <param name="owner"><span data-ttu-id="bfc4c-268">Ein <see cref="T:System.Type" />, der der dynamischen Methode logisch zugeordnet ist.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-268">A <see cref="T:System.Type" /> with which the dynamic method is logically associated.</span></span> <span data-ttu-id="bfc4c-269">Die dynamische Methode hat Zugriff auf alle Member des Typs.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-269">The dynamic method has access to all members of the type.</span></span></param>
        <summary><span data-ttu-id="bfc4c-270">Erstellt eine dynamische Methode und gibt den Methodennamen, den Rückgabetyp, die Parametertypen und den Typ an, dem die dynamische Methode logisch zugeordnet ist.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-270">Creates a dynamic method, specifying the method name, return type, parameter types, and the type with which the dynamic method is logically associated.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bfc4c-271">Die dynamische Methode, die mit diesem Konstruktor erstellt wird, hat Zugriff auf alle Member des Typs `owner` sowie auf öffentliche und `internal` ( `Friend` in Visual Basic) Membern aller anderen Typen im Modul, das enthält `owner` .</span><span class="sxs-lookup"><span data-stu-id="bfc4c-271">The dynamic method created with this constructor has access to all members of the type `owner`, and to public and `internal` (`Friend` in Visual Basic) members of all the other types in the module that contains `owner`.</span></span>  
  
 <span data-ttu-id="bfc4c-272">Dieser Konstruktor gibt Methoden Attribute <xref:System.Reflection.MethodAttributes.Public?displayProperty=nameWithType> und die <xref:System.Reflection.MethodAttributes.Static?displayProperty=nameWithType> Aufruf Konvention an <xref:System.Reflection.CallingConventions.Standard?displayProperty=nameWithType> und überspringt keine Just-in-time (JIT)-Sichtbarkeits Prüfungen.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-272">This constructor specifies method attributes <xref:System.Reflection.MethodAttributes.Public?displayProperty=nameWithType> and <xref:System.Reflection.MethodAttributes.Static?displayProperty=nameWithType>, calling convention <xref:System.Reflection.CallingConventions.Standard?displayProperty=nameWithType>, and does not skip just-in-time (JIT) visibility checks.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="bfc4c-273">Aus Gründen der Abwärtskompatibilität erfordert dieser Konstruktor <xref:System.Security.Permissions.SecurityPermission> mit dem- <xref:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence?displayProperty=nameWithType> Flag, wenn die folgenden Bedingungen zutreffen: `owner` ist in einem anderen Modul als dem aufrufenden Modul, und die Anforderung für <xref:System.Security.Permissions.ReflectionPermission> mit dem- <xref:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess?displayProperty=nameWithType> Flag ist fehlgeschlagen.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-273">For backward compatibility, this constructor demands <xref:System.Security.Permissions.SecurityPermission> with the <xref:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence?displayProperty=nameWithType> flag if the following conditions are both true: `owner` is in a module other than the calling module, and the demand for <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess?displayProperty=nameWithType> flag has failed.</span></span> <span data-ttu-id="bfc4c-274">Wenn die Anforderung für <xref:System.Security.Permissions.SecurityPermission> erfolgreich ist, ist der Vorgang zulässig.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-274">If the demand for <xref:System.Security.Permissions.SecurityPermission> succeeds, the operation is allowed.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="bfc4c-275">Ab [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)] erfordert dieser Member nicht mehr <xref:System.Security.Permissions.ReflectionPermission> mit dem- <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> Flag.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-275">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="bfc4c-276">(Siehe [Sicherheitsprobleme bei der Reflektionsausgabe](/dotnet/framework/reflection-and-codedom/security-issues-in-reflection-emit).) Um diese Funktion verwenden zu können, sollte Ihre Anwendung auf oder höher ausgerichtet sein [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] .</span><span class="sxs-lookup"><span data-stu-id="bfc4c-276">(See [Security Issues in Reflection Emit](/dotnet/framework/reflection-and-codedom/security-issues-in-reflection-emit).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bfc4c-277">Im folgenden Codebeispiel wird eine erstellt <xref:System.Reflection.Emit.DynamicMethod> , die logisch einem-Typ zugeordnet ist.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-277">The following code example creates a <xref:System.Reflection.Emit.DynamicMethod> that is logically associated with a type.</span></span> <span data-ttu-id="bfc4c-278">Diese Zuordnung ermöglicht den Zugriff auf die privaten Member dieses Typs.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-278">This association gives it access to the private members of that type.</span></span>  
  
 <span data-ttu-id="bfc4c-279">Das Codebeispiel definiert eine Klasse mit dem Namen `Example` mit einem privaten Feld, einer Klasse mit `DerivedFromExample` dem Namen, die von der ersten Klasse abgeleitet ist, einem Delegattyp mit dem Namen `UseLikeStatic` , der zurückgibt <xref:System.Int32> und Parameter des Typs und aufweist, sowie eines Delegattyps mit dem Namen, der `Example` <xref:System.Int32> `UseLikeInstance` <xref:System.Int32> einen Parameter vom Typ zurück <xref:System.Int32> gibt</span><span class="sxs-lookup"><span data-stu-id="bfc4c-279">The code example defines a class named `Example` with a private field, a class named `DerivedFromExample` that derives from the first class, a delegate type named `UseLikeStatic` that returns <xref:System.Int32> and has parameters of type `Example` and <xref:System.Int32>, and a delegate type named `UseLikeInstance` that returns <xref:System.Int32> and has one parameter of type <xref:System.Int32>.</span></span>  
  
 <span data-ttu-id="bfc4c-280">Der Beispielcode erstellt dann einen <xref:System.Reflection.Emit.DynamicMethod> , der das private Feld einer Instanz von ändert `Example` und den vorherigen Wert zurückgibt.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-280">The example code then creates a <xref:System.Reflection.Emit.DynamicMethod> that changes the private field of an instance of `Example` and returns the previous value.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="bfc4c-281">Im Allgemeinen handelt es sich bei der Änderung der internen Felder von Klassen nicht um eine gute objektorientierte Programmier Übung.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-281">In general, changing the internal fields of classes is not good object-oriented coding practice.</span></span>  
  
 <span data-ttu-id="bfc4c-282">Im Beispielcode wird eine Instanz von erstellt, `Example` und anschließend werden zwei Delegaten erstellt.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-282">The example code creates an instance of `Example` and then creates two delegates.</span></span> <span data-ttu-id="bfc4c-283">Der erste ist vom Typ `UseLikeStatic` , der die gleichen Parameter wie die dynamische Methode aufweist.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-283">The first is of type `UseLikeStatic`, which has the same parameters as the dynamic method.</span></span> <span data-ttu-id="bfc4c-284">Die zweite ist vom Typ `UseLikeInstance` , der den ersten Parameter (vom Typ `Example` ) fehlt.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-284">The second is of type `UseLikeInstance`, which lacks the first parameter (of type `Example`).</span></span> <span data-ttu-id="bfc4c-285">Dieser Delegat wird mithilfe der- <xref:System.Reflection.Emit.DynamicMethod.CreateDelegate%28System.Type%2CSystem.Object%29> Methoden Überladung erstellt. der zweite Parameter dieser Methoden Überladung ist eine Instanz von `Example` , in diesem Fall die soeben erstellte Instanz, die an den neu erstellten Delegaten gebunden ist.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-285">This delegate is created using the <xref:System.Reflection.Emit.DynamicMethod.CreateDelegate%28System.Type%2CSystem.Object%29> method overload; the second parameter of that method overload is an instance of `Example`, in this case the instance just created, which is bound to the newly created delegate.</span></span> <span data-ttu-id="bfc4c-286">Jedes Mal, wenn dieser Delegat aufgerufen wird, verhält sich die dynamische Methode für die gebundene Instanz von `Example` .</span><span class="sxs-lookup"><span data-stu-id="bfc4c-286">Whenever that delegate is invoked, the dynamic method acts on the bound instance of `Example`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="bfc4c-287">Dies ist ein Beispiel für die gelockerten Regeln für die Delegatbindung, die in eingeführt [!INCLUDE[dnprdnlong](~/includes/dnprdnlong-md.md)] wurde, sowie die neuen über Ladungen der- <xref:System.Delegate.CreateDelegate%2A?displayProperty=nameWithType> Methode.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-287">This is an example of the relaxed rules for delegate binding introduced in the [!INCLUDE[dnprdnlong](~/includes/dnprdnlong-md.md)], along with new overloads of the <xref:System.Delegate.CreateDelegate%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="bfc4c-288">Weitere Informationen finden Sie in den Ausführungen zur <xref:System.Delegate>-Klasse.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-288">For more information, see the <xref:System.Delegate> class.</span></span>  
  
 <span data-ttu-id="bfc4c-289">Der Delegat `UseLikeStatic` wird aufgerufen und übergibt die Instanz von, die `Example` an den Delegaten gebunden ist `UseLikeInstance` .</span><span class="sxs-lookup"><span data-stu-id="bfc4c-289">The `UseLikeStatic` delegate is invoked, passing in the instance of `Example` that is bound to the `UseLikeInstance` delegate.</span></span> <span data-ttu-id="bfc4c-290">Anschließend wird der Delegat `UseLikeInstance` aufgerufen, sodass beide Delegaten für dieselbe Instanz von agieren `Example` .</span><span class="sxs-lookup"><span data-stu-id="bfc4c-290">Then the `UseLikeInstance` delegate is invoked, so that both delegates act on the same instance of `Example`.</span></span> <span data-ttu-id="bfc4c-291">Die Änderungen an den Werten des internen Felds werden nach jedem-Befehl angezeigt.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-291">The changes in the values of the internal field are displayed after each call.</span></span> <span data-ttu-id="bfc4c-292">Schließlich wird ein Delegat `UseLikeInstance` an eine Instanz von gebunden `DerivedFromExample` , und die Delegataufrufe werden wiederholt.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-292">Finally, a `UseLikeInstance` delegate is bound to an instance of `DerivedFromExample`, and the delegate calls are repeated.</span></span>  
  
 [!code-csharp[Reflection.DynamicMethod.ClosedOver#1](~/samples/snippets/csharp/VS_Snippets_CLR/Reflection.DynamicMethod.ClosedOver/cs/source.cs#1)]
 [!code-vb[Reflection.DynamicMethod.ClosedOver#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Reflection.DynamicMethod.ClosedOver/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="bfc4c-293">Ein Element von <paramref name="parameterTypes" /> ist <see langword="null" /> oder <see cref="T:System.Void" />.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-293">An element of <paramref name="parameterTypes" /> is <see langword="null" /> or <see cref="T:System.Void" />.</span></span>  
  
<span data-ttu-id="bfc4c-294">- oder -</span><span class="sxs-lookup"><span data-stu-id="bfc4c-294">-or-</span></span> 
 <span data-ttu-id="bfc4c-295"><paramref name="owner" /> ist eine Schnittstelle, ein Array, ein offener generischer Typ oder ein Typparameter eines generischen Typs oder einer Methode.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-295"><paramref name="owner" /> is an interface, an array, an open generic type, or a type parameter of a generic type or method.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="bfc4c-296"><paramref name="name" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-296"><paramref name="name" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="bfc4c-297">- oder -</span><span class="sxs-lookup"><span data-stu-id="bfc4c-297">-or-</span></span> 
 <span data-ttu-id="bfc4c-298"><paramref name="owner" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-298"><paramref name="owner" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="bfc4c-299"><paramref name="returnType" /> ist <see langword="null" /> oder ein Typ, für den <see cref="P:System.Type.IsByRef" /> den Wert <see langword="true" /> zurückgibt.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-299"><paramref name="returnType" /> is <see langword="null" />, or is a type for which <see cref="P:System.Type.IsByRef" /> returns <see langword="true" />.</span></span></exception>
        <related type="Article" href="/dotnet/framework/reflection-and-codedom/how-to-define-and-execute-dynamic-methods"><span data-ttu-id="bfc4c-300">Vorgehensweise: Definieren und Ausführen von dynamischen Methoden</span><span class="sxs-lookup"><span data-stu-id="bfc4c-300">How to: Define and Execute Dynamic Methods</span></span></related>
        <related type="Article" href="/dotnet/framework/reflection-and-codedom/security-issues-in-reflection-emit"><span data-ttu-id="bfc4c-301">Sicherheitsaspekte bei der Reflektionsausgabe</span><span class="sxs-lookup"><span data-stu-id="bfc4c-301">Security Issues in Reflection Emit</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DynamicMethod (string name, Type? returnType, Type[]? parameterTypes, System.Reflection.Module m, bool skipVisibility);" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, class System.Type returnType, class System.Type[] parameterTypes, class System.Reflection.Module m, bool skipVisibility) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.DynamicMethod.#ctor(System.String,System.Type,System.Type[],System.Reflection.Module,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, returnType As Type, parameterTypes As Type(), m As Module, skipVisibility As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DynamicMethod(System::String ^ name, Type ^ returnType, cli::array &lt;Type ^&gt; ^ parameterTypes, System::Reflection::Module ^ m, bool skipVisibility);" />
      <MemberSignature Language="F#" Value="new System.Reflection.Emit.DynamicMethod : string * Type * Type[] * System.Reflection.Module * bool -&gt; System.Reflection.Emit.DynamicMethod" Usage="new System.Reflection.Emit.DynamicMethod (name, returnType, parameterTypes, m, skipVisibility)" />
      <MemberSignature Language="C#" Value="public DynamicMethod (string name, Type returnType, Type[] parameterTypes, System.Reflection.Module m, bool skipVisibility);" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.1;xamarinandroid-7.1;xamarinmac-3.0" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit.Lightweight</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="returnType" Type="System.Type" />
        <Parameter Name="parameterTypes" Type="System.Type[]" />
        <Parameter Name="m" Type="System.Reflection.Module" />
        <Parameter Name="skipVisibility" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="bfc4c-302">Der Name der dynamischen Methode.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-302">The name of the dynamic method.</span></span> <span data-ttu-id="bfc4c-303">Dies kann eine leere Zeichenfolge sein, sie darf aber nicht <see langword="null" /> sein.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-303">This can be a zero-length string, but it cannot be <see langword="null" />.</span></span></param>
        <param name="returnType"><span data-ttu-id="bfc4c-304">Ein <see cref="T:System.Type" />-Objekt, das den Rückgabetyp der dynamischen Methode angibt, oder <see langword="null" />, wenn die Methode keinen Rückgabetyp hat.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-304">A <see cref="T:System.Type" /> object that specifies the return type of the dynamic method, or <see langword="null" /> if the method has no return type.</span></span></param>
        <param name="parameterTypes"><span data-ttu-id="bfc4c-305">Ein Array von <see cref="T:System.Type" />-Objekten, die die Typen der Parameter der dynamischen Methode angeben, oder <see langword="null" />, wenn die Methode keine Parameter hat.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-305">An array of <see cref="T:System.Type" /> objects specifying the types of the parameters of the dynamic method, or <see langword="null" /> if the method has no parameters.</span></span></param>
        <param name="m"><span data-ttu-id="bfc4c-306">Ein <see cref="T:System.Reflection.Module" />, das das Modul darstellt, dem die dynamische Methode logisch zugeordnet ist.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-306">A <see cref="T:System.Reflection.Module" /> representing the module with which the dynamic method is to be logically associated.</span></span></param>
        <param name="skipVisibility"><span data-ttu-id="bfc4c-307"><see langword="true" />, wenn JIT-Sichtbarkeitsprüfungen für Typen und Member übersprungen werden sollen, auf die die MSIL der dynamischen Methode zugreift.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-307"><see langword="true" /> to skip JIT visibility checks on types and members accessed by the MSIL of the dynamic method.</span></span></param>
        <summary><span data-ttu-id="bfc4c-308">Erstellt eine dynamische Methode, die sich zu einem Modul global verhält und den Methodennamen, Rückgabetyp, die Parametertypen und das Modul angibt. Zudem wird angegeben, ob JIT-Sichtbarkeitsprüfungen (Just-In-Time) für Typen und Member übersprungen werden sollen, auf die von der MSIL (Microsoft Intermediate Language) der dynamischen Methode zugegriffen wird.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-308">Creates a dynamic method that is global to a module, specifying the method name, return type, parameter types, module, and whether just-in-time (JIT) visibility checks should be skipped for types and members accessed by the Microsoft intermediate language (MSIL) of the dynamic method.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bfc4c-309">Dieser Konstruktor gibt Methoden Attribute <xref:System.Reflection.MethodAttributes.Public?displayProperty=nameWithType> und <xref:System.Reflection.MethodAttributes.Static?displayProperty=nameWithType> und die Aufruf Konvention an <xref:System.Reflection.CallingConventions.Standard?displayProperty=nameWithType> .</span><span class="sxs-lookup"><span data-stu-id="bfc4c-309">This constructor specifies method attributes <xref:System.Reflection.MethodAttributes.Public?displayProperty=nameWithType> and <xref:System.Reflection.MethodAttributes.Static?displayProperty=nameWithType>, and calling convention <xref:System.Reflection.CallingConventions.Standard?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="bfc4c-310">Die dynamische Methode, die mit diesem Konstruktor erstellt wurde, hat Zugriff auf die öffentlichen und `internal` ( `Friend` in Visual Basic) Member aller Typen im enthaltenen Modul `m` .</span><span class="sxs-lookup"><span data-stu-id="bfc4c-310">The dynamic method created with this constructor has access to public and `internal` (`Friend` in Visual Basic) members of all the types in contained module `m`.</span></span> <span data-ttu-id="bfc4c-311">Das Überspringen der Sichtbarkeits Prüfungen des JIT-Compilers ermöglicht der dynamischen Methode auch den Zugriff auf private und geschützte Member aller anderen Typen.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-311">Skipping the JIT compiler's visibility checks allows the dynamic method to access private and protected members of all other types as well.</span></span> <span data-ttu-id="bfc4c-312">Dies ist beispielsweise hilfreich, wenn Sie Code zum Serialisieren von Objekten schreiben.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-312">This is useful, for example, when writing code to serialize objects.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="bfc4c-313">Aus Gründen der Abwärtskompatibilität erfordert dieser Konstruktor <xref:System.Security.Permissions.SecurityPermission> mit dem- <xref:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence?displayProperty=nameWithType> Flag, wenn die folgenden Bedingungen zutreffen: `m` ist ein anderes Modul als das Aufruf Modul, und die Anforderung für <xref:System.Security.Permissions.ReflectionPermission> mit dem-Flag ist <xref:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess?displayProperty=nameWithType> fehlgeschlagen.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-313">For backward compatibility, this constructor demands <xref:System.Security.Permissions.SecurityPermission> with the <xref:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence?displayProperty=nameWithType> flag if the following conditions are both true: `m` is a module other than the calling module, and the demand for <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess?displayProperty=nameWithType> flag has failed.</span></span> <span data-ttu-id="bfc4c-314">Wenn die Anforderung für <xref:System.Security.Permissions.SecurityPermission> erfolgreich ist, ist der Vorgang zulässig.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-314">If the demand for <xref:System.Security.Permissions.SecurityPermission> succeeds, the operation is allowed.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="bfc4c-315">Ab [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)] erfordert dieser Member nicht mehr <xref:System.Security.Permissions.ReflectionPermission> mit dem- <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> Flag.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-315">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="bfc4c-316">(Siehe [Sicherheitsprobleme bei der Reflektionsausgabe](/dotnet/framework/reflection-and-codedom/security-issues-in-reflection-emit).) Um diese Funktion verwenden zu können, sollte Ihre Anwendung auf oder höher ausgerichtet sein [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] .</span><span class="sxs-lookup"><span data-stu-id="bfc4c-316">(See [Security Issues in Reflection Emit](/dotnet/framework/reflection-and-codedom/security-issues-in-reflection-emit).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="bfc4c-317">Ein Element von <paramref name="parameterTypes" /> ist <see langword="null" /> oder <see cref="T:System.Void" />.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-317">An element of <paramref name="parameterTypes" /> is <see langword="null" /> or <see cref="T:System.Void" />.</span></span>  
  
<span data-ttu-id="bfc4c-318">- oder -</span><span class="sxs-lookup"><span data-stu-id="bfc4c-318">-or-</span></span> 
 <span data-ttu-id="bfc4c-319"><paramref name="m" /> ist ein Modul, das das anonyme Hosten für dynamische Methoden bereitstellt.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-319"><paramref name="m" /> is a module that provides anonymous hosting for dynamic methods.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="bfc4c-320"><paramref name="name" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-320"><paramref name="name" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="bfc4c-321">- oder -</span><span class="sxs-lookup"><span data-stu-id="bfc4c-321">-or-</span></span> 
 <span data-ttu-id="bfc4c-322"><paramref name="m" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-322"><paramref name="m" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="bfc4c-323"><paramref name="returnType" /> ist ein Typ, für den <see cref="P:System.Type.IsByRef" /> den Wert <see langword="true" /> zurückgibt.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-323"><paramref name="returnType" /> is a type for which <see cref="P:System.Type.IsByRef" /> returns <see langword="true" />.</span></span></exception>
        <related type="Article" href="/dotnet/framework/reflection-and-codedom/how-to-define-and-execute-dynamic-methods"><span data-ttu-id="bfc4c-324">Vorgehensweise: Definieren und Ausführen von dynamischen Methoden</span><span class="sxs-lookup"><span data-stu-id="bfc4c-324">How to: Define and Execute Dynamic Methods</span></span></related>
        <related type="Article" href="/dotnet/framework/reflection-and-codedom/security-issues-in-reflection-emit"><span data-ttu-id="bfc4c-325">Sicherheitsaspekte bei der Reflektionsausgabe</span><span class="sxs-lookup"><span data-stu-id="bfc4c-325">Security Issues in Reflection Emit</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DynamicMethod (string name, Type? returnType, Type[]? parameterTypes, Type owner, bool skipVisibility);" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, class System.Type returnType, class System.Type[] parameterTypes, class System.Type owner, bool skipVisibility) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.DynamicMethod.#ctor(System.String,System.Type,System.Type[],System.Type,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, returnType As Type, parameterTypes As Type(), owner As Type, skipVisibility As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DynamicMethod(System::String ^ name, Type ^ returnType, cli::array &lt;Type ^&gt; ^ parameterTypes, Type ^ owner, bool skipVisibility);" />
      <MemberSignature Language="F#" Value="new System.Reflection.Emit.DynamicMethod : string * Type * Type[] * Type * bool -&gt; System.Reflection.Emit.DynamicMethod" Usage="new System.Reflection.Emit.DynamicMethod (name, returnType, parameterTypes, owner, skipVisibility)" />
      <MemberSignature Language="C#" Value="public DynamicMethod (string name, Type returnType, Type[] parameterTypes, Type owner, bool skipVisibility);" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.1;xamarinandroid-7.1;xamarinmac-3.0" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit.Lightweight</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="returnType" Type="System.Type" />
        <Parameter Name="parameterTypes" Type="System.Type[]" />
        <Parameter Name="owner" Type="System.Type" />
        <Parameter Name="skipVisibility" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="bfc4c-326">Der Name der dynamischen Methode.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-326">The name of the dynamic method.</span></span> <span data-ttu-id="bfc4c-327">Dies kann eine leere Zeichenfolge sein, sie darf aber nicht <see langword="null" /> sein.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-327">This can be a zero-length string, but it cannot be <see langword="null" />.</span></span></param>
        <param name="returnType"><span data-ttu-id="bfc4c-328">Ein <see cref="T:System.Type" />-Objekt, das den Rückgabetyp der dynamischen Methode angibt, oder <see langword="null" />, wenn die Methode keinen Rückgabetyp hat.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-328">A <see cref="T:System.Type" /> object that specifies the return type of the dynamic method, or <see langword="null" /> if the method has no return type.</span></span></param>
        <param name="parameterTypes"><span data-ttu-id="bfc4c-329">Ein Array von <see cref="T:System.Type" />-Objekten, die die Typen der Parameter der dynamischen Methode angeben, oder <see langword="null" />, wenn die Methode keine Parameter hat.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-329">An array of <see cref="T:System.Type" /> objects specifying the types of the parameters of the dynamic method, or <see langword="null" /> if the method has no parameters.</span></span></param>
        <param name="owner"><span data-ttu-id="bfc4c-330">Ein <see cref="T:System.Type" />, der der dynamischen Methode logisch zugeordnet ist.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-330">A <see cref="T:System.Type" /> with which the dynamic method is logically associated.</span></span> <span data-ttu-id="bfc4c-331">Die dynamische Methode hat Zugriff auf alle Member des Typs.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-331">The dynamic method has access to all members of the type.</span></span></param>
        <param name="skipVisibility"><span data-ttu-id="bfc4c-332"><see langword="true" />, wenn JIT-Sichtbarkeitsprüfungen für Typen und Member übersprungen werden sollen, auf die die MSIL der dynamischen Methode zugreift, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-332"><see langword="true" /> to skip JIT visibility checks on types and members accessed by the MSIL of the dynamic method; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="bfc4c-333">Erstellt eine dynamische Methode. Dabei werden der Methodenname, der Rückgabetyp, die Parametertypen und der Typ angegeben, der der dynamischen Methode logisch zugeordnet ist. Außerdem wird angegeben, ob JIT-Sichtbarkeitsprüfungen (Just-In-Time) für Typen und Member übersprungen werden sollen, auf die die MSIL (Microsoft Intermediate Language) der dynamischen Methode zugreift.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-333">Creates a dynamic method, specifying the method name, return type, parameter types, the type with which the dynamic method is logically associated, and whether just-in-time (JIT) visibility checks should be skipped for types and members accessed by the Microsoft intermediate language (MSIL) of the dynamic method.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bfc4c-334">Die dynamische Methode, die mit diesem Konstruktor erstellt wird, hat Zugriff auf alle Member des Typs `owner` sowie auf öffentliche und `internal` ( `Friend` in Visual Basic) Membern aller anderen Typen im Modul, das enthält `owner` .</span><span class="sxs-lookup"><span data-stu-id="bfc4c-334">The dynamic method created with this constructor has access to all members of the type `owner`, and to public and `internal` (`Friend` in Visual Basic) members of all the other types in the module that contains `owner`.</span></span> <span data-ttu-id="bfc4c-335">Das Überspringen der Sichtbarkeits Prüfungen des JIT-Compilers ermöglicht der dynamischen Methode auch den Zugriff auf private und geschützte Member aller anderen Typen.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-335">Skipping the JIT compiler's visibility checks allows the dynamic method to access private and protected members of all other types as well.</span></span> <span data-ttu-id="bfc4c-336">Dies ist beispielsweise hilfreich, wenn Sie Code zum Serialisieren von Objekten schreiben.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-336">This is useful, for example, when writing code to serialize objects.</span></span>  
  
 <span data-ttu-id="bfc4c-337">Dieser Konstruktor gibt Methoden Attribute <xref:System.Reflection.MethodAttributes.Public?displayProperty=nameWithType> und <xref:System.Reflection.MethodAttributes.Static?displayProperty=nameWithType> und die Aufruf Konvention an <xref:System.Reflection.CallingConventions.Standard?displayProperty=nameWithType> .</span><span class="sxs-lookup"><span data-stu-id="bfc4c-337">This constructor specifies method attributes <xref:System.Reflection.MethodAttributes.Public?displayProperty=nameWithType> and <xref:System.Reflection.MethodAttributes.Static?displayProperty=nameWithType>, and calling convention <xref:System.Reflection.CallingConventions.Standard?displayProperty=nameWithType>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="bfc4c-338">Aus Gründen der Abwärtskompatibilität erfordert dieser Konstruktor <xref:System.Security.Permissions.SecurityPermission> mit dem- <xref:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence?displayProperty=nameWithType> Flag, wenn die folgenden Bedingungen zutreffen: `owner` ist in einem anderen Modul als dem aufrufenden Modul, und die Anforderung für <xref:System.Security.Permissions.ReflectionPermission> mit dem- <xref:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess?displayProperty=nameWithType> Flag ist fehlgeschlagen.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-338">For backward compatibility, this constructor demands <xref:System.Security.Permissions.SecurityPermission> with the <xref:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence?displayProperty=nameWithType> flag if the following conditions are both true: `owner` is in a module other than the calling module, and the demand for <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess?displayProperty=nameWithType> flag has failed.</span></span> <span data-ttu-id="bfc4c-339">Wenn die Anforderung für <xref:System.Security.Permissions.SecurityPermission> erfolgreich ist, ist der Vorgang zulässig.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-339">If the demand for <xref:System.Security.Permissions.SecurityPermission> succeeds, the operation is allowed.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="bfc4c-340">Ab [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)] erfordert dieser Member nicht mehr <xref:System.Security.Permissions.ReflectionPermission> mit dem- <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> Flag.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-340">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="bfc4c-341">(Siehe [Sicherheitsprobleme bei der Reflektionsausgabe](/dotnet/framework/reflection-and-codedom/security-issues-in-reflection-emit).) Um diese Funktion verwenden zu können, sollte Ihre Anwendung auf oder höher ausgerichtet sein [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] .</span><span class="sxs-lookup"><span data-stu-id="bfc4c-341">(See [Security Issues in Reflection Emit](/dotnet/framework/reflection-and-codedom/security-issues-in-reflection-emit).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="bfc4c-342">Ein Element von <paramref name="parameterTypes" /> ist <see langword="null" /> oder <see cref="T:System.Void" />.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-342">An element of <paramref name="parameterTypes" /> is <see langword="null" /> or <see cref="T:System.Void" />.</span></span>  
  
<span data-ttu-id="bfc4c-343">- oder -</span><span class="sxs-lookup"><span data-stu-id="bfc4c-343">-or-</span></span> 
 <span data-ttu-id="bfc4c-344"><paramref name="owner" /> ist eine Schnittstelle, ein Array, ein offener generischer Typ oder ein Typparameter eines generischen Typs oder einer Methode.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-344"><paramref name="owner" /> is an interface, an array, an open generic type, or a type parameter of a generic type or method.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="bfc4c-345"><paramref name="name" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-345"><paramref name="name" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="bfc4c-346">- oder -</span><span class="sxs-lookup"><span data-stu-id="bfc4c-346">-or-</span></span> 
 <span data-ttu-id="bfc4c-347"><paramref name="owner" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-347"><paramref name="owner" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="bfc4c-348"><paramref name="returnType" /> ist <see langword="null" /> oder ein Typ, für den <see cref="P:System.Type.IsByRef" /> den Wert <see langword="true" /> zurückgibt.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-348"><paramref name="returnType" /> is <see langword="null" />, or is a type for which <see cref="P:System.Type.IsByRef" /> returns <see langword="true" />.</span></span></exception>
        <related type="Article" href="/dotnet/framework/reflection-and-codedom/how-to-define-and-execute-dynamic-methods"><span data-ttu-id="bfc4c-349">Vorgehensweise: Definieren und Ausführen von dynamischen Methoden</span><span class="sxs-lookup"><span data-stu-id="bfc4c-349">How to: Define and Execute Dynamic Methods</span></span></related>
        <related type="Article" href="/dotnet/framework/reflection-and-codedom/security-issues-in-reflection-emit"><span data-ttu-id="bfc4c-350">Sicherheitsaspekte bei der Reflektionsausgabe</span><span class="sxs-lookup"><span data-stu-id="bfc4c-350">Security Issues in Reflection Emit</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DynamicMethod (string name, System.Reflection.MethodAttributes attributes, System.Reflection.CallingConventions callingConvention, Type? returnType, Type[]? parameterTypes, System.Reflection.Module m, bool skipVisibility);" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, valuetype System.Reflection.MethodAttributes attributes, valuetype System.Reflection.CallingConventions callingConvention, class System.Type returnType, class System.Type[] parameterTypes, class System.Reflection.Module m, bool skipVisibility) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.DynamicMethod.#ctor(System.String,System.Reflection.MethodAttributes,System.Reflection.CallingConventions,System.Type,System.Type[],System.Reflection.Module,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, attributes As MethodAttributes, callingConvention As CallingConventions, returnType As Type, parameterTypes As Type(), m As Module, skipVisibility As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DynamicMethod(System::String ^ name, System::Reflection::MethodAttributes attributes, System::Reflection::CallingConventions callingConvention, Type ^ returnType, cli::array &lt;Type ^&gt; ^ parameterTypes, System::Reflection::Module ^ m, bool skipVisibility);" />
      <MemberSignature Language="F#" Value="new System.Reflection.Emit.DynamicMethod : string * System.Reflection.MethodAttributes * System.Reflection.CallingConventions * Type * Type[] * System.Reflection.Module * bool -&gt; System.Reflection.Emit.DynamicMethod" Usage="new System.Reflection.Emit.DynamicMethod (name, attributes, callingConvention, returnType, parameterTypes, m, skipVisibility)" />
      <MemberSignature Language="C#" Value="public DynamicMethod (string name, System.Reflection.MethodAttributes attributes, System.Reflection.CallingConventions callingConvention, Type returnType, Type[] parameterTypes, System.Reflection.Module m, bool skipVisibility);" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.1;xamarinandroid-7.1;xamarinmac-3.0" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit.Lightweight</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="attributes" Type="System.Reflection.MethodAttributes" />
        <Parameter Name="callingConvention" Type="System.Reflection.CallingConventions" />
        <Parameter Name="returnType" Type="System.Type" />
        <Parameter Name="parameterTypes" Type="System.Type[]" />
        <Parameter Name="m" Type="System.Reflection.Module" />
        <Parameter Name="skipVisibility" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="bfc4c-351">Der Name der dynamischen Methode.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-351">The name of the dynamic method.</span></span> <span data-ttu-id="bfc4c-352">Dies kann eine leere Zeichenfolge sein, sie darf aber nicht <see langword="null" /> sein.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-352">This can be a zero-length string, but it cannot be <see langword="null" />.</span></span></param>
        <param name="attributes"><span data-ttu-id="bfc4c-353">Eine bitweise Kombination von <see cref="T:System.Reflection.MethodAttributes" />-Werten, die die Attribute der dynamischen Methode angibt.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-353">A bitwise combination of <see cref="T:System.Reflection.MethodAttributes" /> values that specifies the attributes of the dynamic method.</span></span> <span data-ttu-id="bfc4c-354">Die einzige zulässige Kombination ist <see cref="F:System.Reflection.MethodAttributes.Public" /> und <see cref="F:System.Reflection.MethodAttributes.Static" />.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-354">The only combination allowed is <see cref="F:System.Reflection.MethodAttributes.Public" /> and <see cref="F:System.Reflection.MethodAttributes.Static" />.</span></span></param>
        <param name="callingConvention"><span data-ttu-id="bfc4c-355">Die Aufrufkonvention für die dynamische Methode.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-355">The calling convention for the dynamic method.</span></span> <span data-ttu-id="bfc4c-356">Muss <see cref="F:System.Reflection.CallingConventions.Standard" />lauten.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-356">Must be <see cref="F:System.Reflection.CallingConventions.Standard" />.</span></span></param>
        <param name="returnType"><span data-ttu-id="bfc4c-357">Ein <see cref="T:System.Type" />-Objekt, das den Rückgabetyp der dynamischen Methode angibt, oder <see langword="null" />, wenn die Methode keinen Rückgabetyp hat.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-357">A <see cref="T:System.Type" /> object that specifies the return type of the dynamic method, or <see langword="null" /> if the method has no return type.</span></span></param>
        <param name="parameterTypes"><span data-ttu-id="bfc4c-358">Ein Array von <see cref="T:System.Type" />-Objekten, die die Typen der Parameter der dynamischen Methode angeben, oder <see langword="null" />, wenn die Methode keine Parameter hat.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-358">An array of <see cref="T:System.Type" /> objects specifying the types of the parameters of the dynamic method, or <see langword="null" /> if the method has no parameters.</span></span></param>
        <param name="m"><span data-ttu-id="bfc4c-359">Ein <see cref="T:System.Reflection.Module" />, das das Modul darstellt, dem die dynamische Methode logisch zugeordnet ist.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-359">A <see cref="T:System.Reflection.Module" /> representing the module with which the dynamic method is to be logically associated.</span></span></param>
        <param name="skipVisibility"><span data-ttu-id="bfc4c-360"><see langword="true" />, wenn JIT-Sichtbarkeitsprüfungen für Typen und Member übersprungen werden sollen, auf die die MSIL der dynamischen Methode zugreift, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-360"><see langword="true" /> to skip JIT visibility checks on types and members accessed by the MSIL of the dynamic method; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="bfc4c-361">Erstellt eine dynamische Methode, die sich zu einem Modul global verhält und Methodennamen, Attribute, die Aufrufkonvention, den Rückgabetyp, die Parametertypen und das Modul angibt. Zudem wird angegeben, ob JIT-Sichtbarkeitsprüfungen (Just-In-Time) für Typen und Member übersprungen werden sollen, auf die von der MSIL (Microsoft Intermediate Language) der dynamischen Methode zugegriffen wird.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-361">Creates a dynamic method that is global to a module, specifying the method name, attributes, calling convention, return type, parameter types, module, and whether just-in-time (JIT) visibility checks should be skipped for types and members accessed by the Microsoft intermediate language (MSIL) of the dynamic method.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bfc4c-362">Die mit diesem Konstruktor erstellte dynamische Methode hat Zugriff auf die öffentlichen und `internal` ( `Friend` in Visual Basic) Member aller öffentlichen und internen Typen, die im Modul enthalten sind `m` .</span><span class="sxs-lookup"><span data-stu-id="bfc4c-362">The dynamic method created with this constructor has access to public and `internal` (`Friend` in Visual Basic) members of all the public and internal types contained in module `m`.</span></span>  
  
 <span data-ttu-id="bfc4c-363">Das Überspringen der Sichtbarkeits Prüfungen des JIT-Compilers ermöglicht der dynamischen Methode den Zugriff auf private und geschützte Member aller anderen Typen im Modul und in allen anderen Assemblys.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-363">Skipping the JIT compiler's visibility checks allows the dynamic method to access private and protected members of all other types in the module and in all other assemblies as well.</span></span> <span data-ttu-id="bfc4c-364">Dies ist beispielsweise hilfreich, wenn Sie Code zum Serialisieren von Objekten schreiben.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-364">This is useful, for example, when writing code to serialize objects.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="bfc4c-365">Aus Gründen der Abwärtskompatibilität erfordert dieser Konstruktor <xref:System.Security.Permissions.SecurityPermission> mit dem- <xref:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence?displayProperty=nameWithType> Flag, wenn die folgenden Bedingungen zutreffen: `m` ist ein anderes Modul als das Aufruf Modul, und die Anforderung für <xref:System.Security.Permissions.ReflectionPermission> mit dem-Flag ist <xref:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess?displayProperty=nameWithType> fehlgeschlagen.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-365">For backward compatibility, this constructor demands <xref:System.Security.Permissions.SecurityPermission> with the <xref:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence?displayProperty=nameWithType> flag if the following conditions are both true: `m` is a module other than the calling module, and the demand for <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess?displayProperty=nameWithType> flag has failed.</span></span> <span data-ttu-id="bfc4c-366">Wenn die Anforderung für <xref:System.Security.Permissions.SecurityPermission> erfolgreich ist, ist der Vorgang zulässig.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-366">If the demand for <xref:System.Security.Permissions.SecurityPermission> succeeds, the operation is allowed.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="bfc4c-367">Ab [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)] erfordert dieser Member nicht mehr <xref:System.Security.Permissions.ReflectionPermission> mit dem- <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> Flag.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-367">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="bfc4c-368">(Siehe [Sicherheitsprobleme bei der Reflektionsausgabe](/dotnet/framework/reflection-and-codedom/security-issues-in-reflection-emit).) Um diese Funktion verwenden zu können, sollte Ihre Anwendung auf oder höher ausgerichtet sein [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] .</span><span class="sxs-lookup"><span data-stu-id="bfc4c-368">(See [Security Issues in Reflection Emit](/dotnet/framework/reflection-and-codedom/security-issues-in-reflection-emit).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="bfc4c-369">Ein Element von <paramref name="parameterTypes" /> ist <see langword="null" /> oder <see cref="T:System.Void" />.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-369">An element of <paramref name="parameterTypes" /> is <see langword="null" /> or <see cref="T:System.Void" />.</span></span>  
  
<span data-ttu-id="bfc4c-370">- oder -</span><span class="sxs-lookup"><span data-stu-id="bfc4c-370">-or-</span></span> 
 <span data-ttu-id="bfc4c-371"><paramref name="m" /> ist ein Modul, das das anonyme Hosten für dynamische Methoden bereitstellt.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-371"><paramref name="m" /> is a module that provides anonymous hosting for dynamic methods.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="bfc4c-372"><paramref name="name" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-372"><paramref name="name" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="bfc4c-373">- oder -</span><span class="sxs-lookup"><span data-stu-id="bfc4c-373">-or-</span></span> 
 <span data-ttu-id="bfc4c-374"><paramref name="m" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-374"><paramref name="m" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="bfc4c-375"><paramref name="attributes" /> ist eine Kombination aus Flags außer <see cref="F:System.Reflection.MethodAttributes.Public" /> und <see cref="F:System.Reflection.MethodAttributes.Static" />.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-375"><paramref name="attributes" /> is a combination of flags other than <see cref="F:System.Reflection.MethodAttributes.Public" /> and <see cref="F:System.Reflection.MethodAttributes.Static" />.</span></span>  
  
<span data-ttu-id="bfc4c-376">- oder -</span><span class="sxs-lookup"><span data-stu-id="bfc4c-376">-or-</span></span> 
 <span data-ttu-id="bfc4c-377"><paramref name="callingConvention" /> ist nicht <see cref="F:System.Reflection.CallingConventions.Standard" />.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-377"><paramref name="callingConvention" /> is not <see cref="F:System.Reflection.CallingConventions.Standard" />.</span></span>  
  
<span data-ttu-id="bfc4c-378">- oder -</span><span class="sxs-lookup"><span data-stu-id="bfc4c-378">-or-</span></span> 
 <span data-ttu-id="bfc4c-379"><paramref name="returnType" /> ist ein Typ, für den <see cref="P:System.Type.IsByRef" /> den Wert <see langword="true" /> zurückgibt.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-379"><paramref name="returnType" /> is a type for which <see cref="P:System.Type.IsByRef" /> returns <see langword="true" />.</span></span></exception>
        <related type="Article" href="/dotnet/framework/reflection-and-codedom/how-to-define-and-execute-dynamic-methods"><span data-ttu-id="bfc4c-380">Vorgehensweise: Definieren und Ausführen von dynamischen Methoden</span><span class="sxs-lookup"><span data-stu-id="bfc4c-380">How to: Define and Execute Dynamic Methods</span></span></related>
        <related type="Article" href="/dotnet/framework/reflection-and-codedom/security-issues-in-reflection-emit"><span data-ttu-id="bfc4c-381">Sicherheitsaspekte bei der Reflektionsausgabe</span><span class="sxs-lookup"><span data-stu-id="bfc4c-381">Security Issues in Reflection Emit</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DynamicMethod (string name, System.Reflection.MethodAttributes attributes, System.Reflection.CallingConventions callingConvention, Type? returnType, Type[]? parameterTypes, Type owner, bool skipVisibility);" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, valuetype System.Reflection.MethodAttributes attributes, valuetype System.Reflection.CallingConventions callingConvention, class System.Type returnType, class System.Type[] parameterTypes, class System.Type owner, bool skipVisibility) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.DynamicMethod.#ctor(System.String,System.Reflection.MethodAttributes,System.Reflection.CallingConventions,System.Type,System.Type[],System.Type,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, attributes As MethodAttributes, callingConvention As CallingConventions, returnType As Type, parameterTypes As Type(), owner As Type, skipVisibility As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DynamicMethod(System::String ^ name, System::Reflection::MethodAttributes attributes, System::Reflection::CallingConventions callingConvention, Type ^ returnType, cli::array &lt;Type ^&gt; ^ parameterTypes, Type ^ owner, bool skipVisibility);" />
      <MemberSignature Language="F#" Value="new System.Reflection.Emit.DynamicMethod : string * System.Reflection.MethodAttributes * System.Reflection.CallingConventions * Type * Type[] * Type * bool -&gt; System.Reflection.Emit.DynamicMethod" Usage="new System.Reflection.Emit.DynamicMethod (name, attributes, callingConvention, returnType, parameterTypes, owner, skipVisibility)" />
      <MemberSignature Language="C#" Value="public DynamicMethod (string name, System.Reflection.MethodAttributes attributes, System.Reflection.CallingConventions callingConvention, Type returnType, Type[] parameterTypes, Type owner, bool skipVisibility);" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.1;xamarinandroid-7.1;xamarinmac-3.0" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit.Lightweight</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="attributes" Type="System.Reflection.MethodAttributes" />
        <Parameter Name="callingConvention" Type="System.Reflection.CallingConventions" />
        <Parameter Name="returnType" Type="System.Type" />
        <Parameter Name="parameterTypes" Type="System.Type[]" />
        <Parameter Name="owner" Type="System.Type" />
        <Parameter Name="skipVisibility" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="bfc4c-382">Der Name der dynamischen Methode.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-382">The name of the dynamic method.</span></span> <span data-ttu-id="bfc4c-383">Dies kann eine leere Zeichenfolge sein, sie darf aber nicht <see langword="null" /> sein.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-383">This can be a zero-length string, but it cannot be <see langword="null" />.</span></span></param>
        <param name="attributes"><span data-ttu-id="bfc4c-384">Eine bitweise Kombination von <see cref="T:System.Reflection.MethodAttributes" />-Werten, die die Attribute der dynamischen Methode angibt.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-384">A bitwise combination of <see cref="T:System.Reflection.MethodAttributes" /> values that specifies the attributes of the dynamic method.</span></span> <span data-ttu-id="bfc4c-385">Die einzige zulässige Kombination ist <see cref="F:System.Reflection.MethodAttributes.Public" /> und <see cref="F:System.Reflection.MethodAttributes.Static" />.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-385">The only combination allowed is <see cref="F:System.Reflection.MethodAttributes.Public" /> and <see cref="F:System.Reflection.MethodAttributes.Static" />.</span></span></param>
        <param name="callingConvention"><span data-ttu-id="bfc4c-386">Die Aufrufkonvention für die dynamische Methode.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-386">The calling convention for the dynamic method.</span></span> <span data-ttu-id="bfc4c-387">Muss <see cref="F:System.Reflection.CallingConventions.Standard" />lauten.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-387">Must be <see cref="F:System.Reflection.CallingConventions.Standard" />.</span></span></param>
        <param name="returnType"><span data-ttu-id="bfc4c-388">Ein <see cref="T:System.Type" />-Objekt, das den Rückgabetyp der dynamischen Methode angibt, oder <see langword="null" />, wenn die Methode keinen Rückgabetyp hat.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-388">A <see cref="T:System.Type" /> object that specifies the return type of the dynamic method, or <see langword="null" /> if the method has no return type.</span></span></param>
        <param name="parameterTypes"><span data-ttu-id="bfc4c-389">Ein Array von <see cref="T:System.Type" />-Objekten, die die Typen der Parameter der dynamischen Methode angeben, oder <see langword="null" />, wenn die Methode keine Parameter hat.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-389">An array of <see cref="T:System.Type" /> objects specifying the types of the parameters of the dynamic method, or <see langword="null" /> if the method has no parameters.</span></span></param>
        <param name="owner"><span data-ttu-id="bfc4c-390">Ein <see cref="T:System.Type" />, der der dynamischen Methode logisch zugeordnet ist.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-390">A <see cref="T:System.Type" /> with which the dynamic method is logically associated.</span></span> <span data-ttu-id="bfc4c-391">Die dynamische Methode hat Zugriff auf alle Member des Typs.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-391">The dynamic method has access to all members of the type.</span></span></param>
        <param name="skipVisibility"><span data-ttu-id="bfc4c-392"><see langword="true" />, wenn JIT-Sichtbarkeitsprüfungen für Typen und Member übersprungen werden sollen, auf die die MSIL der dynamischen Methode zugreift, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-392"><see langword="true" /> to skip JIT visibility checks on types and members accessed by the MSIL of the dynamic method; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="bfc4c-393">Erstellt eine dynamische Methode. Dabei werden der Methodenname, die Attribute, die Aufrufkonvention, der Rückgabetyp, die Parametertypen und der Typ angegeben, der der dynamischen Methode logisch zugeordnet ist. Außerdem wird angegeben, ob JIT-Sichtbarkeitsprüfungen (Just-In-Time) für Typen und Member übersprungen werden sollen, auf die die MSIL (Microsoft Intermediate Language) der dynamischen Methode zugreift.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-393">Creates a dynamic method, specifying the method name, attributes, calling convention, return type, parameter types, the type with which the dynamic method is logically associated, and whether just-in-time (JIT) visibility checks should be skipped for types and members accessed by the Microsoft intermediate language (MSIL) of the dynamic method.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bfc4c-394">Die dynamische Methode ist global für das Modul, das den Typ enthält `owner` .</span><span class="sxs-lookup"><span data-stu-id="bfc4c-394">The dynamic method is global to the module that contains the type `owner`.</span></span> <span data-ttu-id="bfc4c-395">Er verfügt über Zugriff auf alle Member des Typs `owner` .</span><span class="sxs-lookup"><span data-stu-id="bfc4c-395">It has access to all members of the type `owner`.</span></span>  
  
 <span data-ttu-id="bfc4c-396">Die dynamische Methode, die mit diesem Konstruktor erstellt wird, hat Zugriff auf alle Member des Typs `owner` sowie auf öffentliche und `internal` ( `Friend` in Visual Basic) Membern aller Typen, die im Modul enthalten sind, das enthält `owner` .</span><span class="sxs-lookup"><span data-stu-id="bfc4c-396">The dynamic method created with this constructor has access to all members of the type `owner`, and to public and `internal` (`Friend` in Visual Basic) members of all the types contained in the module that contains `owner`.</span></span> <span data-ttu-id="bfc4c-397">Das Überspringen der Sichtbarkeits Prüfungen des JIT-Compilers ermöglicht der dynamischen Methode auch den Zugriff auf private und geschützte Member aller anderen Typen.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-397">Skipping the JIT compiler's visibility checks allows the dynamic method to access private and protected members of all other types as well.</span></span> <span data-ttu-id="bfc4c-398">Dies ist beispielsweise hilfreich, wenn Sie Code zum Serialisieren von Objekten schreiben.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-398">This is useful, for example, when writing code to serialize objects.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="bfc4c-399">Aus Gründen der Abwärtskompatibilität erfordert dieser Konstruktor <xref:System.Security.Permissions.SecurityPermission> mit dem- <xref:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence?displayProperty=nameWithType> Flag, wenn die folgenden Bedingungen zutreffen: `owner` ist in einem anderen Modul als dem aufrufenden Modul, und die Anforderung für <xref:System.Security.Permissions.ReflectionPermission> mit dem- <xref:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess?displayProperty=nameWithType> Flag ist fehlgeschlagen.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-399">For backward compatibility, this constructor demands <xref:System.Security.Permissions.SecurityPermission> with the <xref:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence?displayProperty=nameWithType> flag if the following conditions are both true: `owner` is in a module other than the calling module, and the demand for <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess?displayProperty=nameWithType> flag has failed.</span></span> <span data-ttu-id="bfc4c-400">Wenn die Anforderung für <xref:System.Security.Permissions.SecurityPermission> erfolgreich ist, ist der Vorgang zulässig.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-400">If the demand for <xref:System.Security.Permissions.SecurityPermission> succeeds, the operation is allowed.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="bfc4c-401">Ab [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)] erfordert dieser Member nicht mehr <xref:System.Security.Permissions.ReflectionPermission> mit dem- <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> Flag.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-401">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="bfc4c-402">(Siehe [Sicherheitsprobleme bei der Reflektionsausgabe](/dotnet/framework/reflection-and-codedom/security-issues-in-reflection-emit).) Um diese Funktion verwenden zu können, sollte Ihre Anwendung auf oder höher ausgerichtet sein [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] .</span><span class="sxs-lookup"><span data-stu-id="bfc4c-402">(See [Security Issues in Reflection Emit](/dotnet/framework/reflection-and-codedom/security-issues-in-reflection-emit).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="bfc4c-403">Ein Element von <paramref name="parameterTypes" /> ist <see langword="null" /> oder <see cref="T:System.Void" />.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-403">An element of <paramref name="parameterTypes" /> is <see langword="null" /> or <see cref="T:System.Void" />.</span></span>  
  
<span data-ttu-id="bfc4c-404">- oder -</span><span class="sxs-lookup"><span data-stu-id="bfc4c-404">-or-</span></span> 
 <span data-ttu-id="bfc4c-405"><paramref name="owner" /> ist eine Schnittstelle, ein Array, ein offener generischer Typ oder ein Typparameter eines generischen Typs oder einer Methode.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-405"><paramref name="owner" /> is an interface, an array, an open generic type, or a type parameter of a generic type or method.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="bfc4c-406"><paramref name="name" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-406"><paramref name="name" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="bfc4c-407">- oder -</span><span class="sxs-lookup"><span data-stu-id="bfc4c-407">-or-</span></span> 
 <span data-ttu-id="bfc4c-408"><paramref name="owner" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-408"><paramref name="owner" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="bfc4c-409"><paramref name="attributes" /> ist eine Kombination aus Flags außer <see cref="F:System.Reflection.MethodAttributes.Public" /> und <see cref="F:System.Reflection.MethodAttributes.Static" />.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-409"><paramref name="attributes" /> is a combination of flags other than <see cref="F:System.Reflection.MethodAttributes.Public" /> and <see cref="F:System.Reflection.MethodAttributes.Static" />.</span></span>  
  
<span data-ttu-id="bfc4c-410">- oder -</span><span class="sxs-lookup"><span data-stu-id="bfc4c-410">-or-</span></span> 
 <span data-ttu-id="bfc4c-411"><paramref name="callingConvention" /> ist nicht <see cref="F:System.Reflection.CallingConventions.Standard" />.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-411"><paramref name="callingConvention" /> is not <see cref="F:System.Reflection.CallingConventions.Standard" />.</span></span>  
  
<span data-ttu-id="bfc4c-412">- oder -</span><span class="sxs-lookup"><span data-stu-id="bfc4c-412">-or-</span></span> 
 <span data-ttu-id="bfc4c-413"><paramref name="returnType" /> ist ein Typ, für den <see cref="P:System.Type.IsByRef" /> den Wert <see langword="true" /> zurückgibt.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-413"><paramref name="returnType" /> is a type for which <see cref="P:System.Type.IsByRef" /> returns <see langword="true" />.</span></span></exception>
        <related type="Article" href="/dotnet/framework/reflection-and-codedom/how-to-define-and-execute-dynamic-methods"><span data-ttu-id="bfc4c-414">Vorgehensweise: Definieren und Ausführen von dynamischen Methoden</span><span class="sxs-lookup"><span data-stu-id="bfc4c-414">How to: Define and Execute Dynamic Methods</span></span></related>
        <related type="Article" href="/dotnet/framework/reflection-and-codedom/security-issues-in-reflection-emit"><span data-ttu-id="bfc4c-415">Sicherheitsaspekte bei der Reflektionsausgabe</span><span class="sxs-lookup"><span data-stu-id="bfc4c-415">Security Issues in Reflection Emit</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Attributes">
      <MemberSignature Language="C#" Value="public override System.Reflection.MethodAttributes Attributes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Reflection.MethodAttributes Attributes" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.DynamicMethod.Attributes" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Attributes As MethodAttributes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Reflection::MethodAttributes Attributes { System::Reflection::MethodAttributes get(); };" />
      <MemberSignature Language="F#" Value="member this.Attributes : System.Reflection.MethodAttributes" Usage="System.Reflection.Emit.DynamicMethod.Attributes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit.Lightweight</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodAttributes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bfc4c-416">Ruft die Attribute ab, die beim Erstellen der dynamischen Methode angegeben wurden.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-416">Gets the attributes specified when the dynamic method was created.</span></span></summary>
        <value><span data-ttu-id="bfc4c-417">Eine bitweise Kombination der <see cref="T:System.Reflection.MethodAttributes" />-Werte, die die Attribute für die Methode darstellen.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-417">A bitwise combination of the <see cref="T:System.Reflection.MethodAttributes" /> values representing the attributes for the method.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bfc4c-418">Derzeit sind die Methoden Attribute für eine dynamische Methode immer <xref:System.Reflection.MethodAttributes.Public> und <xref:System.Reflection.MethodAttributes.Static> .</span><span class="sxs-lookup"><span data-stu-id="bfc4c-418">Currently, the method attributes for a dynamic method are always <xref:System.Reflection.MethodAttributes.Public> and <xref:System.Reflection.MethodAttributes.Static>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bfc4c-419">Im folgenden Codebeispiel werden die Methoden Attribute einer dynamischen Methode angezeigt.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-419">The following code example displays the method attributes of a dynamic method.</span></span> <span data-ttu-id="bfc4c-420">Dieses Codebeispiel ist Teil eines größeren Beispiels, das für die-Klasse bereitgestellt wird <xref:System.Reflection.Emit.DynamicMethod> .</span><span class="sxs-lookup"><span data-stu-id="bfc4c-420">This code example is part of a larger example provided for the <xref:System.Reflection.Emit.DynamicMethod> class.</span></span>  
  
 [!code-cpp[Reflection.DynamicMethod.All#21](~/samples/snippets/cpp/VS_Snippets_CLR/Reflection.DynamicMethod.All/cpp/source.cpp#21)]
 [!code-csharp[Reflection.DynamicMethod.All#21](~/samples/snippets/csharp/VS_Snippets_CLR/Reflection.DynamicMethod.All/CS/source.cs#21)]
 [!code-vb[Reflection.DynamicMethod.All#21](~/samples/snippets/visualbasic/VS_Snippets_CLR/Reflection.DynamicMethod.All/VB/source.vb#21)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CallingConvention">
      <MemberSignature Language="C#" Value="public override System.Reflection.CallingConventions CallingConvention { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Reflection.CallingConventions CallingConvention" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.DynamicMethod.CallingConvention" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CallingConvention As CallingConventions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Reflection::CallingConventions CallingConvention { System::Reflection::CallingConventions get(); };" />
      <MemberSignature Language="F#" Value="member this.CallingConvention : System.Reflection.CallingConventions" Usage="System.Reflection.Emit.DynamicMethod.CallingConvention" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit.Lightweight</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.CallingConventions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bfc4c-421">Ruft die Aufrufkonvention ab, die beim Erstellen der dynamischen Methode angegeben wurde.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-421">Gets the calling convention specified when the dynamic method was created.</span></span></summary>
        <value><span data-ttu-id="bfc4c-422">Einer der <see cref="T:System.Reflection.CallingConventions" />-Werte, der die Aufrufkonvention der Methode angibt.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-422">One of the <see cref="T:System.Reflection.CallingConventions" /> values that indicates the calling convention of the method.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bfc4c-423">Derzeit ist die Aufruf Konvention für eine dynamische Methode immer <xref:System.Reflection.CallingConventions.Standard> .</span><span class="sxs-lookup"><span data-stu-id="bfc4c-423">Currently, the calling convention for a dynamic method is always <xref:System.Reflection.CallingConventions.Standard>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bfc4c-424">Im folgenden Codebeispiel wird die Aufruf Konvention einer dynamischen Methode angezeigt.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-424">The following code example displays the calling convention of a dynamic method.</span></span> <span data-ttu-id="bfc4c-425">Dieses Codebeispiel ist Teil eines größeren Beispiels, das für die-Klasse bereitgestellt wird <xref:System.Reflection.Emit.DynamicMethod> .</span><span class="sxs-lookup"><span data-stu-id="bfc4c-425">This code example is part of a larger example provided for the <xref:System.Reflection.Emit.DynamicMethod> class.</span></span>  
  
 [!code-cpp[Reflection.DynamicMethod.All#22](~/samples/snippets/cpp/VS_Snippets_CLR/Reflection.DynamicMethod.All/cpp/source.cpp#22)]
 [!code-csharp[Reflection.DynamicMethod.All#22](~/samples/snippets/csharp/VS_Snippets_CLR/Reflection.DynamicMethod.All/CS/source.cs#22)]
 [!code-vb[Reflection.DynamicMethod.All#22](~/samples/snippets/visualbasic/VS_Snippets_CLR/Reflection.DynamicMethod.All/VB/source.vb#22)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateDelegate">
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit.Lightweight</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="bfc4c-426">Vervollständigt die dynamische Methode und erstellt einen Delegaten, mit dem die Methode ausgeführt werden kann.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-426">Completes the dynamic method and creates a delegate that can be used to execute it.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateDelegate">
      <MemberSignature Language="C#" Value="public override sealed Delegate CreateDelegate (Type delegateType);" FrameworkAlternate="net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.1;xamarinandroid-7.1;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Delegate CreateDelegate(class System.Type delegateType) cil managed" FrameworkAlternate="net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.1;xamarinandroid-7.1;xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.DynamicMethod.CreateDelegate(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides NotOverridable Function CreateDelegate (delegateType As Type) As Delegate" FrameworkAlternate="net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.1;xamarinandroid-7.1;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override Delegate ^ CreateDelegate(Type ^ delegateType);" FrameworkAlternate="net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.1;xamarinandroid-7.1;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="override this.CreateDelegate : Type -&gt; Delegate" Usage="dynamicMethod.CreateDelegate delegateType" FrameworkAlternate="net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.1;xamarinandroid-7.1;xamarinmac-3.0" />
      <MemberSignature Language="C#" Value="public Delegate CreateDelegate (Type delegateType);" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Delegate CreateDelegate(class System.Type delegateType) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateDelegate (delegateType As Type) As Delegate" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Delegate ^ CreateDelegate(Type ^ delegateType);" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="F#" Value="member this.CreateDelegate : Type -&gt; Delegate" Usage="dynamicMethod.CreateDelegate delegateType" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit.Lightweight</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0">
          <AttributeName Language="C#">[System.Runtime.InteropServices.ComVisible(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.ComVisible(true)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Delegate</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="delegateType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="delegateType"><span data-ttu-id="bfc4c-427">Ein Delegattyp, dessen Signatur mit der Signatur der dynamischen Methode übereinstimmt.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-427">A delegate type whose signature matches that of the dynamic method.</span></span></param>
        <summary><span data-ttu-id="bfc4c-428">Vervollständigt die dynamische Methode und erstellt einen Delegaten, mit dem die Methode ausgeführt werden kann.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-428">Completes the dynamic method and creates a delegate that can be used to execute it.</span></span></summary>
        <returns><span data-ttu-id="bfc4c-429">Ein Delegat des angegebenen Typs, mit dem die dynamische Methode ausgeführt werden kann.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-429">A delegate of the specified type, which can be used to execute the dynamic method.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bfc4c-430">Durch Aufrufen der- <xref:System.Reflection.Emit.DynamicMethod.CreateDelegate%2A> Methode oder der- <xref:System.Reflection.Emit.DynamicMethod.Invoke%2A> Methode wird die dynamische-Methode abgeschlossen.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-430">Calling the <xref:System.Reflection.Emit.DynamicMethod.CreateDelegate%2A> method or the <xref:System.Reflection.Emit.DynamicMethod.Invoke%2A> method completes the dynamic method.</span></span> <span data-ttu-id="bfc4c-431">Jeder weitere Versuch, die dynamische Methode zu ändern, z. b. das Ändern von Parameter Definitionen oder das Ausgeben von MSIL (Microsoft Intermediate Language), wird ignoriert. Es wird keine Ausnahme ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-431">Any further attempt to alter the dynamic method, such as modifying parameter definitions or emitting more Microsoft intermediate language (MSIL), is ignored; no exception is thrown.</span></span>  
  
 <span data-ttu-id="bfc4c-432">Um einen Methoden Text für eine dynamische Methode zu erstellen, wenn Sie über einen eigenen MSIL-Generator verfügen, rufen Sie die- <xref:System.Reflection.Emit.DynamicMethod.GetDynamicILInfo%2A> Methode auf, um ein- <xref:System.Reflection.Emit.DynamicILInfo> Objekt abzurufen.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-432">To create a method body for a dynamic method when you have your own MSIL generator, call the <xref:System.Reflection.Emit.DynamicMethod.GetDynamicILInfo%2A> method to obtain a <xref:System.Reflection.Emit.DynamicILInfo> object.</span></span> <span data-ttu-id="bfc4c-433">Wenn Sie nicht über einen eigenen MSIL-Generator verfügen, rufen Sie die- <xref:System.Reflection.Emit.DynamicMethod.GetILGenerator%2A> Methode auf, um ein-Objekt zu erhalten <xref:System.Reflection.Emit.ILGenerator> , das zum Generieren des Methoden Texts verwendet werden kann.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-433">If you do not have your own MSIL generator, call the <xref:System.Reflection.Emit.DynamicMethod.GetILGenerator%2A> method to obtain an <xref:System.Reflection.Emit.ILGenerator> object that can be used to generate the method body.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bfc4c-434">Im folgenden Codebeispiel wird eine dynamische Methode erstellt, die zwei Parameter annimmt.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-434">The following code example creates a dynamic method that takes two parameters.</span></span> <span data-ttu-id="bfc4c-435">Im Beispiel wird ein einfacher Funktions Text ausgegeben, der den ersten Parameter in der Konsole ausgibt. im Beispiel wird der zweite Parameter als Rückgabewert der-Methode verwendet.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-435">The example emits a simple function body that prints the first parameter to the console, and the example uses the second parameter as the return value of the method.</span></span> <span data-ttu-id="bfc4c-436">Im Beispiel wird die-Methode vervollständigt, indem ein Delegat erstellt wird, der Delegat mit unterschiedlichen Parametern aufgerufen und schließlich die dynamische Methode mithilfe der-Methode aufgerufen wird <xref:System.Reflection.Emit.DynamicMethod.Invoke%2A> .</span><span class="sxs-lookup"><span data-stu-id="bfc4c-436">The example completes the method by creating a delegate, invokes the delegate with different parameters, and finally invokes the dynamic method using the <xref:System.Reflection.Emit.DynamicMethod.Invoke%2A> method.</span></span>  
  
 [!code-cpp[Reflection.DynamicMethod.ctor1#1](~/samples/snippets/cpp/VS_Snippets_CLR/Reflection.DynamicMethod.ctor1/cpp/source.cpp#1)]
 [!code-csharp[Reflection.DynamicMethod.ctor1#1](~/samples/snippets/csharp/VS_Snippets_CLR/Reflection.DynamicMethod.ctor1/CS/source.cs#1)]
 [!code-vb[Reflection.DynamicMethod.ctor1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Reflection.DynamicMethod.ctor1/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="bfc4c-437">Die dynamische Methode verfügt über keinen Methodentext.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-437">The dynamic method has no method body.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="bfc4c-438"><paramref name="delegateType" /> weist die falsche Anzahl von Parametern oder die falschen Parametertypen auf.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-438"><paramref name="delegateType" /> has the wrong number of parameters or the wrong parameter types.</span></span></exception>
        <related type="Article" href="/dotnet/framework/reflection-and-codedom/how-to-define-and-execute-dynamic-methods"><span data-ttu-id="bfc4c-439">Vorgehensweise: Definieren und Ausführen von dynamischen Methoden</span><span class="sxs-lookup"><span data-stu-id="bfc4c-439">How to: Define and Execute Dynamic Methods</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CreateDelegate">
      <MemberSignature Language="C#" Value="public override sealed Delegate CreateDelegate (Type delegateType, object? target);" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Delegate CreateDelegate(class System.Type delegateType, object target) cil managed" FrameworkAlternate="net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.1;xamarinandroid-7.1;xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.DynamicMethod.CreateDelegate(System.Type,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides NotOverridable Function CreateDelegate (delegateType As Type, target As Object) As Delegate" FrameworkAlternate="net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.1;xamarinandroid-7.1;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override Delegate ^ CreateDelegate(Type ^ delegateType, System::Object ^ target);" FrameworkAlternate="net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.1;xamarinandroid-7.1;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="override this.CreateDelegate : Type * obj -&gt; Delegate" Usage="dynamicMethod.CreateDelegate (delegateType, target)" FrameworkAlternate="net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.1;xamarinandroid-7.1;xamarinmac-3.0" />
      <MemberSignature Language="C#" Value="public override sealed Delegate CreateDelegate (Type delegateType, object target);" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.1;xamarinandroid-7.1;xamarinmac-3.0" />
      <MemberSignature Language="C#" Value="public Delegate CreateDelegate (Type delegateType, object target);" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Delegate CreateDelegate(class System.Type delegateType, object target) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateDelegate (delegateType As Type, target As Object) As Delegate" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Delegate ^ CreateDelegate(Type ^ delegateType, System::Object ^ target);" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="F#" Value="member this.CreateDelegate : Type * obj -&gt; Delegate" Usage="dynamicMethod.CreateDelegate (delegateType, target)" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit.Lightweight</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0">
          <AttributeName Language="C#">[System.Runtime.InteropServices.ComVisible(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.ComVisible(true)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Delegate</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="delegateType" Type="System.Type" />
        <Parameter Name="target" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="delegateType"><span data-ttu-id="bfc4c-440">Ein Delegattyp, dessen Signatur mit der Signatur der dynamischen Methode übereinstimmt, ohne den ersten Parameter.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-440">A delegate type whose signature matches that of the dynamic method, minus the first parameter.</span></span></param>
        <param name="target"><span data-ttu-id="bfc4c-441">Ein Objekt, an das der Delegat gebunden ist.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-441">An object the delegate is bound to.</span></span> <span data-ttu-id="bfc4c-442">Muss denselben Typ wie der erste Parameter der dynamischen Methode aufweisen.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-442">Must be of the same type as the first parameter of the dynamic method.</span></span></param>
        <summary><span data-ttu-id="bfc4c-443">Vervollständigt die dynamische Methode und erstellt einen Delegaten, mit dem die Methode ausgeführt werden kann, wobei der Delegattyp und ein Objekt angegeben werden, das an den Delegaten gebunden ist.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-443">Completes the dynamic method and creates a delegate that can be used to execute it, specifying the delegate type and an object the delegate is bound to.</span></span></summary>
        <returns><span data-ttu-id="bfc4c-444">Ein Delegat des angegebenen Typs, mit dem die dynamische Methode mit dem angegebenen Zielobjekt ausgeführt werden kann.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-444">A delegate of the specified type, which can be used to execute the dynamic method with the specified target object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bfc4c-445">Diese Methoden Überladung erstellt einen Delegaten, der an ein bestimmtes Objekt gebunden ist.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-445">This method overload creates a delegate bound to a particular object.</span></span> <span data-ttu-id="bfc4c-446">Ein solcher Delegat wird als erstes Argument geschlossen.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-446">Such a delegate is said to be closed over its first argument.</span></span> <span data-ttu-id="bfc4c-447">Obwohl die Methode statisch ist, verhält sie sich so, als ob es sich um eine Instanzmethode handelt. die-Instanz ist `target` .</span><span class="sxs-lookup"><span data-stu-id="bfc4c-447">Although the method is static, it acts as if it were an instance method; the instance is `target`.</span></span>  
  
 <span data-ttu-id="bfc4c-448">Diese Methoden Überladung erfordert `target` , dass der gleiche Typ wie der erste Parameter der dynamischen Methode ist oder diesem Typ zugewiesen werden kann (z. b. eine abgeleitete Klasse).</span><span class="sxs-lookup"><span data-stu-id="bfc4c-448">This method overload requires `target` to be of the same type as the first parameter of the dynamic method, or to be assignable to that type (for example, a derived class).</span></span>  <span data-ttu-id="bfc4c-449">Die Signatur von `delegateType` weist alle Parameter der dynamischen Methode auf, mit Ausnahme des ersten.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-449">The signature of `delegateType` has all the parameters of the dynamic method except the first.</span></span> <span data-ttu-id="bfc4c-450">Wenn die dynamische Methode z. b. die Parameter <xref:System.String> , <xref:System.Int32> und aufweist <xref:System.Byte> , dann `delegateType` verfügt über die Parameter <xref:System.Int32> und <xref:System.Byte> ; `target` ist vom Datentyp <xref:System.String> .</span><span class="sxs-lookup"><span data-stu-id="bfc4c-450">For example, if the dynamic method has the parameters <xref:System.String>, <xref:System.Int32>, and <xref:System.Byte>, then `delegateType` has the parameters <xref:System.Int32> and <xref:System.Byte>; `target` is of type <xref:System.String>.</span></span>  
  
 <span data-ttu-id="bfc4c-451">Durch Aufrufen der- <xref:System.Reflection.Emit.DynamicMethod.CreateDelegate%2A> Methode oder der- <xref:System.Reflection.Emit.DynamicMethod.Invoke%2A> Methode wird die dynamische-Methode abgeschlossen.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-451">Calling the <xref:System.Reflection.Emit.DynamicMethod.CreateDelegate%2A> method or the <xref:System.Reflection.Emit.DynamicMethod.Invoke%2A> method completes the dynamic method.</span></span> <span data-ttu-id="bfc4c-452">Jeder weitere Versuch, die dynamische Methode zu ändern, z. b. das Ändern von Parameter Definitionen oder das Ausgeben von MSIL (Microsoft Intermediate Language), wird ignoriert. Es wird keine Ausnahme ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-452">Any further attempt to alter the dynamic method, such as modifying parameter definitions or emitting more Microsoft intermediate language (MSIL), is ignored; no exception is thrown.</span></span>  
  
 <span data-ttu-id="bfc4c-453">Um einen Methoden Text für eine dynamische Methode zu erstellen, wenn Sie über einen eigenen MSIL-Generator verfügen, rufen Sie die- <xref:System.Reflection.Emit.DynamicMethod.GetDynamicILInfo%2A> Methode auf, um ein- <xref:System.Reflection.Emit.DynamicILInfo> Objekt abzurufen.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-453">To create a method body for a dynamic method when you have your own MSIL generator, call the <xref:System.Reflection.Emit.DynamicMethod.GetDynamicILInfo%2A> method to obtain a <xref:System.Reflection.Emit.DynamicILInfo> object.</span></span> <span data-ttu-id="bfc4c-454">Wenn Sie nicht über einen eigenen MSIL-Generator verfügen, rufen Sie die- <xref:System.Reflection.Emit.DynamicMethod.GetILGenerator%2A> Methode auf, um ein-Objekt zu erhalten <xref:System.Reflection.Emit.ILGenerator> , das zum Generieren des Methoden Texts verwendet werden kann.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-454">If you do not have your own MSIL generator, call the <xref:System.Reflection.Emit.DynamicMethod.GetILGenerator%2A> method to obtain an <xref:System.Reflection.Emit.ILGenerator> object that can be used to generate the method body.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bfc4c-455">Im folgenden Codebeispiel wird ein Delegat erstellt, der einen <xref:System.Reflection.Emit.DynamicMethod> an eine Instanz eines Typs bindet, sodass die-Methode bei jedem Aufruf auf dieselbe Instanz angewendet wird.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-455">The following code example creates delegate that binds a <xref:System.Reflection.Emit.DynamicMethod> to an instance of a type, so that the method acts on the same instance each time it is invoked.</span></span>  
  
 <span data-ttu-id="bfc4c-456">Das Codebeispiel definiert eine Klasse mit dem Namen `Example` mit einem privaten Feld, einer Klasse mit `DerivedFromExample` dem Namen, die von der ersten Klasse abgeleitet ist, einem Delegattyp mit dem Namen `UseLikeStatic` , der zurückgibt <xref:System.Int32> und Parameter des Typs und aufweist, sowie eines Delegattyps mit dem Namen, der `Example` <xref:System.Int32> `UseLikeInstance` <xref:System.Int32> einen Parameter vom Typ zurück <xref:System.Int32> gibt</span><span class="sxs-lookup"><span data-stu-id="bfc4c-456">The code example defines a class named `Example` with a private field, a class named `DerivedFromExample` that derives from the first class, a delegate type named `UseLikeStatic` that returns <xref:System.Int32> and has parameters of type `Example` and <xref:System.Int32>, and a delegate type named `UseLikeInstance` that returns <xref:System.Int32> and has one parameter of type <xref:System.Int32>.</span></span>  
  
 <span data-ttu-id="bfc4c-457">Der Beispielcode erstellt dann einen <xref:System.Reflection.Emit.DynamicMethod> , der das private Feld einer Instanz von ändert `Example` und den vorherigen Wert zurückgibt.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-457">The example code then creates a <xref:System.Reflection.Emit.DynamicMethod> that changes the private field of an instance of `Example` and returns the previous value.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="bfc4c-458">Im Allgemeinen handelt es sich bei der Änderung der internen Felder von Klassen nicht um eine gute objektorientierte Programmier Übung.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-458">In general, changing the internal fields of classes is not good object-oriented coding practice.</span></span>  
  
 <span data-ttu-id="bfc4c-459">Im Beispielcode wird eine Instanz von erstellt, `Example` und anschließend werden zwei Delegaten erstellt.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-459">The example code creates an instance of `Example` and then creates two delegates.</span></span> <span data-ttu-id="bfc4c-460">Der erste ist vom Typ `UseLikeStatic` , der die gleichen Parameter wie die dynamische Methode aufweist.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-460">The first is of type `UseLikeStatic`, which has the same parameters as the dynamic method.</span></span> <span data-ttu-id="bfc4c-461">Die zweite ist vom Typ `UseLikeInstance` , der den ersten Parameter (vom Typ `Example` ) fehlt.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-461">The second is of type `UseLikeInstance`, which lacks the first parameter (of type `Example`).</span></span> <span data-ttu-id="bfc4c-462">Dieser Delegat wird mithilfe der- <xref:System.Reflection.Emit.DynamicMethod.CreateDelegate%28System.Type%2CSystem.Object%29> Methoden Überladung erstellt. der zweite Parameter dieser Methoden Überladung ist eine Instanz von `Example` , in diesem Fall die soeben erstellte Instanz, die an den neu erstellten Delegaten gebunden ist.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-462">This delegate is created using the <xref:System.Reflection.Emit.DynamicMethod.CreateDelegate%28System.Type%2CSystem.Object%29> method overload; the second parameter of that method overload is an instance of `Example`, in this case the instance just created, which is bound to the newly created delegate.</span></span> <span data-ttu-id="bfc4c-463">Jedes Mal, wenn dieser Delegat aufgerufen wird, verhält sich die dynamische Methode für die gebundene Instanz von `Example` .</span><span class="sxs-lookup"><span data-stu-id="bfc4c-463">Whenever that delegate is invoked, the dynamic method acts on the bound instance of `Example`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="bfc4c-464">Dies ist ein Beispiel für die gelockerten Regeln für die Delegatbindung, die in eingeführt [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)] wurde, sowie die neuen über Ladungen der- <xref:System.Delegate.CreateDelegate%2A?displayProperty=nameWithType> Methode.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-464">This is an example of the relaxed rules for delegate binding introduced in the [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)], along with new overloads of the <xref:System.Delegate.CreateDelegate%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="bfc4c-465">Weitere Informationen finden Sie in den Ausführungen zur <xref:System.Delegate>-Klasse.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-465">For more information, see the <xref:System.Delegate> class.</span></span>  
  
 <span data-ttu-id="bfc4c-466">Der Delegat `UseLikeStatic` wird aufgerufen und übergibt die Instanz von, die `Example` an den Delegaten gebunden ist `UseLikeInstance` .</span><span class="sxs-lookup"><span data-stu-id="bfc4c-466">The `UseLikeStatic` delegate is invoked, passing in the instance of `Example` that is bound to the `UseLikeInstance` delegate.</span></span> <span data-ttu-id="bfc4c-467">Anschließend wird der Delegat `UseLikeInstance` aufgerufen, sodass beide Delegaten für dieselbe Instanz von agieren `Example` .</span><span class="sxs-lookup"><span data-stu-id="bfc4c-467">Then the `UseLikeInstance` delegate is invoked, so that both delegates act on the same instance of `Example`.</span></span> <span data-ttu-id="bfc4c-468">Die Änderungen an den Werten des internen Felds werden nach jedem-Befehl angezeigt.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-468">The changes in the values of the internal field are displayed after each call.</span></span> <span data-ttu-id="bfc4c-469">Schließlich wird ein Delegat `UseLikeInstance` an eine Instanz von gebunden `DerivedFromExample` , und die Delegataufrufe werden wiederholt.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-469">Finally, a `UseLikeInstance` delegate is bound to an instance of `DerivedFromExample`, and the delegate calls are repeated.</span></span>  
  
 [!code-csharp[Reflection.DynamicMethod.ClosedOver#1](~/samples/snippets/csharp/VS_Snippets_CLR/Reflection.DynamicMethod.ClosedOver/cs/source.cs#1)]
 [!code-vb[Reflection.DynamicMethod.ClosedOver#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Reflection.DynamicMethod.ClosedOver/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="bfc4c-470">Die dynamische Methode verfügt über keinen Methodentext.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-470">The dynamic method has no method body.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="bfc4c-471"><paramref name="target" /> entspricht nicht demselben Typ wie der erste Parameter der dynamischen Methode und kann diesem Typ nicht zugewiesen werden.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-471"><paramref name="target" /> is not the same type as the first parameter of the dynamic method, and is not assignable to that type.</span></span>  
  
<span data-ttu-id="bfc4c-472">- oder -</span><span class="sxs-lookup"><span data-stu-id="bfc4c-472">-or-</span></span> 
 <span data-ttu-id="bfc4c-473"><paramref name="delegateType" /> weist die falsche Anzahl von Parametern oder die falschen Parametertypen auf.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-473"><paramref name="delegateType" /> has the wrong number of parameters or the wrong parameter types.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="DeclaringType">
      <MemberSignature Language="C#" Value="public override Type? DeclaringType { get; }" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type DeclaringType" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.DynamicMethod.DeclaringType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property DeclaringType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Type ^ DeclaringType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DeclaringType : Type" Usage="System.Reflection.Emit.DynamicMethod.DeclaringType" />
      <MemberSignature Language="C#" Value="public override Type DeclaringType { get; }" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.1;xamarinandroid-7.1;xamarinmac-3.0" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit.Lightweight</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bfc4c-474">Ruft den Typ ab, der die Methode deklariert und für dynamische Methoden immer <see langword="null" /> ist.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-474">Gets the type that declares the method, which is always <see langword="null" /> for dynamic methods.</span></span></summary>
        <value><span data-ttu-id="bfc4c-475">Immer <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-475">Always <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bfc4c-476">Diese Eigenschaft gibt immer `null` für dynamische Methoden zurück.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-476">This property always returns `null` for dynamic methods.</span></span> <span data-ttu-id="bfc4c-477">Auch wenn eine dynamische Methode logisch einem Typ zugeordnet ist, wird Sie nicht vom-Typ deklariert.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-477">Even when a dynamic method is logically associated with a type, it is not declared by the type.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bfc4c-478">Im folgenden Codebeispiel wird der deklarierende Typ einer dynamischen Methode angezeigt.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-478">The following code example displays the declaring type of a dynamic method.</span></span> <span data-ttu-id="bfc4c-479">Dieses Codebeispiel ist Teil eines größeren Beispiels, das für die-Klasse bereitgestellt wird <xref:System.Reflection.Emit.DynamicMethod> .</span><span class="sxs-lookup"><span data-stu-id="bfc4c-479">This code example is part of a larger example provided for the <xref:System.Reflection.Emit.DynamicMethod> class.</span></span>  
  
 [!code-cpp[Reflection.DynamicMethod.All#23](~/samples/snippets/cpp/VS_Snippets_CLR/Reflection.DynamicMethod.All/cpp/source.cpp#23)]
 [!code-csharp[Reflection.DynamicMethod.All#23](~/samples/snippets/csharp/VS_Snippets_CLR/Reflection.DynamicMethod.All/CS/source.cs#23)]
 [!code-vb[Reflection.DynamicMethod.All#23](~/samples/snippets/visualbasic/VS_Snippets_CLR/Reflection.DynamicMethod.All/VB/source.vb#23)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefineParameter">
      <MemberSignature Language="C#" Value="public System.Reflection.Emit.ParameterBuilder DefineParameter (int position, System.Reflection.ParameterAttributes attributes, string parameterName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Reflection.Emit.ParameterBuilder DefineParameter(int32 position, valuetype System.Reflection.ParameterAttributes attributes, string parameterName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.DynamicMethod.DefineParameter(System.Int32,System.Reflection.ParameterAttributes,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function DefineParameter (position As Integer, attributes As ParameterAttributes, parameterName As String) As ParameterBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Emit::ParameterBuilder ^ DefineParameter(int position, System::Reflection::ParameterAttributes attributes, System::String ^ parameterName);" />
      <MemberSignature Language="F#" Value="member this.DefineParameter : int * System.Reflection.ParameterAttributes * string -&gt; System.Reflection.Emit.ParameterBuilder" Usage="dynamicMethod.DefineParameter (position, attributes, parameterName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit.Lightweight</AssemblyName>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.ParameterBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="position" Type="System.Int32" Index="0" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.1;xamarinandroid-7.1;xamarinmac-3.0" />
        <Parameter Name="attributes" Type="System.Reflection.ParameterAttributes" Index="1" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.1;xamarinandroid-7.1;xamarinmac-3.0" />
        <Parameter Name="parameterName" Type="System.String" Index="2" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.1;xamarinandroid-7.1;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="position"><span data-ttu-id="bfc4c-480">Die Position des Parameters in der Parameterliste.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-480">The position of the parameter in the parameter list.</span></span> <span data-ttu-id="bfc4c-481">Parameter werden beginnend mit der Zahl 1 (für den ersten Parameter) indiziert.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-481">Parameters are indexed beginning with the number 1 for the first parameter.</span></span></param>
        <param name="attributes"><span data-ttu-id="bfc4c-482">Eine bitweise Kombination von <see cref="T:System.Reflection.ParameterAttributes" />-Werten, die die Attribute des Parameters angibt.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-482">A bitwise combination of <see cref="T:System.Reflection.ParameterAttributes" /> values that specifies the attributes of the parameter.</span></span></param>
        <param name="parameterName"><span data-ttu-id="bfc4c-483">Der Name des Parameters.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-483">The name of the parameter.</span></span> <span data-ttu-id="bfc4c-484">Der Name kann eine leere Zeichenfolge sein.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-484">The name can be a zero-length string.</span></span></param>
        <summary><span data-ttu-id="bfc4c-485">Definiert einen Parameter der dynamischen Methode.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-485">Defines a parameter of the dynamic method.</span></span></summary>
        <returns><span data-ttu-id="bfc4c-486">Gibt immer <see langword="null" /> zurück.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-486">Always returns <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bfc4c-487">Wenn `position` den Wert 0 hat, <xref:System.Reflection.Emit.DynamicMethod.DefineParameter%2A> verweist die Methode auf den Rückgabewert.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-487">If `position` is 0, the <xref:System.Reflection.Emit.DynamicMethod.DefineParameter%2A> method refers to the return value.</span></span> <span data-ttu-id="bfc4c-488">Das Festlegen von Parameterinformationen hat keine Auswirkung auf den Rückgabewert.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-488">Setting parameter information has no effect on the return value.</span></span>  
  
 <span data-ttu-id="bfc4c-489">Wenn die dynamische Methode bereits durch Aufrufen der-Methode oder der-Methode abgeschlossen wurde <xref:System.Reflection.Emit.DynamicMethod.CreateDelegate%2A> <xref:System.Reflection.Emit.DynamicMethod.Invoke%2A> , hat die- <xref:System.Reflection.Emit.DynamicMethod.DefineParameter%2A> Methode keine Auswirkungen.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-489">If the dynamic method has already been completed, by calling the <xref:System.Reflection.Emit.DynamicMethod.CreateDelegate%2A> or <xref:System.Reflection.Emit.DynamicMethod.Invoke%2A> method, the <xref:System.Reflection.Emit.DynamicMethod.DefineParameter%2A> method has no effect.</span></span> <span data-ttu-id="bfc4c-490">Es wird keine Ausnahme ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-490">No exception is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bfc4c-491">Im folgenden Codebeispiel wird gezeigt, wie Parameterinformationen für eine dynamische Methode definiert werden.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-491">The following code example shows how to define parameter information for a dynamic method.</span></span> <span data-ttu-id="bfc4c-492">Dieses Codebeispiel ist Teil eines größeren Beispiels, das für die-Klasse bereitgestellt wird <xref:System.Reflection.Emit.DynamicMethod> .</span><span class="sxs-lookup"><span data-stu-id="bfc4c-492">This code example is part of a larger example provided for the <xref:System.Reflection.Emit.DynamicMethod> class.</span></span>  
  
 [!code-cpp[Reflection.DynamicMethod.All#33](~/samples/snippets/cpp/VS_Snippets_CLR/Reflection.DynamicMethod.All/cpp/source.cpp#33)]
 [!code-csharp[Reflection.DynamicMethod.All#33](~/samples/snippets/csharp/VS_Snippets_CLR/Reflection.DynamicMethod.All/CS/source.cs#33)]
 [!code-vb[Reflection.DynamicMethod.All#33](~/samples/snippets/visualbasic/VS_Snippets_CLR/Reflection.DynamicMethod.All/VB/source.vb#33)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="bfc4c-493">Die Methode hat keine Parameter.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-493">The method has no parameters.</span></span>  
  
<span data-ttu-id="bfc4c-494">- oder -</span><span class="sxs-lookup"><span data-stu-id="bfc4c-494">-or-</span></span> 
 <span data-ttu-id="bfc4c-495"><paramref name="position" /> ist kleiner als 0.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-495"><paramref name="position" /> is less than 0.</span></span>  
  
<span data-ttu-id="bfc4c-496">- oder -</span><span class="sxs-lookup"><span data-stu-id="bfc4c-496">-or-</span></span> 
 <span data-ttu-id="bfc4c-497"><paramref name="position" /> ist größer als die Anzahl der Parameter der Methode.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-497"><paramref name="position" /> is greater than the number of the method's parameters.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetBaseDefinition">
      <MemberSignature Language="C#" Value="public override System.Reflection.MethodInfo GetBaseDefinition ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Reflection.MethodInfo GetBaseDefinition() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.DynamicMethod.GetBaseDefinition" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetBaseDefinition () As MethodInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Reflection::MethodInfo ^ GetBaseDefinition();" />
      <MemberSignature Language="F#" Value="override this.GetBaseDefinition : unit -&gt; System.Reflection.MethodInfo" Usage="dynamicMethod.GetBaseDefinition " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit.Lightweight</AssemblyName>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="bfc4c-498">Gibt die Basisimplementierung für die Methode zurück.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-498">Returns the base implementation for the method.</span></span></summary>
        <returns><span data-ttu-id="bfc4c-499">Die Basisimplementierung für die Methode.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-499">The base implementation of the method.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bfc4c-500">Diese Methode gibt immer das aktuelle- `DynamicMethod` Objekt zurück.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-500">This method always returns the current `DynamicMethod` object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetCustomAttributes">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="bfc4c-501">Gibt die auf die Methode angewendeten benutzerdefinierten Attribute zurück.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-501">Returns the custom attributes applied to the method.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public override object[] GetCustomAttributes (bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object[] GetCustomAttributes(bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.DynamicMethod.GetCustomAttributes(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetCustomAttributes (inherit As Boolean) As Object()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Object ^&gt; ^ GetCustomAttributes(bool inherit);" />
      <MemberSignature Language="F#" Value="override this.GetCustomAttributes : bool -&gt; obj[]" Usage="dynamicMethod.GetCustomAttributes inherit" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit.Lightweight</AssemblyName>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inherit" Type="System.Boolean" Index="0" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.1;xamarinandroid-7.1;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="inherit"><span data-ttu-id="bfc4c-502"><see langword="true" />, wenn die Vererbungskette der Methode nach den benutzerdefinierten Attributen durchsucht werden soll, <see langword="false" />, wenn nur die aktuelle Methode überprüft werden soll.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-502"><see langword="true" /> to search the method's inheritance chain to find the custom attributes; <see langword="false" /> to check only the current method.</span></span></param>
        <summary><span data-ttu-id="bfc4c-503">Gibt alle für die Methode definierten benutzerdefinierten Attribute zurück.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-503">Returns all the custom attributes defined for the method.</span></span></summary>
        <returns><span data-ttu-id="bfc4c-504">Ein Objektarray, das alle benutzerdefinierten Attribute der Methode darstellt.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-504">An array of objects representing all the custom attributes of the method.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bfc4c-505">Für dynamische Methoden `true` hat die Angabe von for `inherit` keine Auswirkung, da die Methode nicht in einem Typ deklariert wird.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-505">For dynamic methods, specifying `true` for `inherit` has no effect, because the method is not declared in a type.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="bfc4c-506">Benutzerdefinierte Attribute werden derzeit nicht für dynamische Methoden unterstützt.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-506">Custom attributes are not currently supported on dynamic methods.</span></span> <span data-ttu-id="bfc4c-507">Das einzige Attribut, das zurückgegeben wird <xref:System.Runtime.CompilerServices.MethodImplAttribute> , ist. Sie können die Methodenimplementierungsflags mithilfe der-Methode leichter erhalten <xref:System.Reflection.Emit.DynamicMethod.GetMethodImplementationFlags%2A> .</span><span class="sxs-lookup"><span data-stu-id="bfc4c-507">The only attribute returned is <xref:System.Runtime.CompilerServices.MethodImplAttribute>; you can get the method implementation flags more easily using the <xref:System.Reflection.Emit.DynamicMethod.GetMethodImplementationFlags%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Reflection.Emit.DynamicMethod.IsDefined(System.Type,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public override object[] GetCustomAttributes (Type attributeType, bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object[] GetCustomAttributes(class System.Type attributeType, bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.DynamicMethod.GetCustomAttributes(System.Type,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetCustomAttributes (attributeType As Type, inherit As Boolean) As Object()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Object ^&gt; ^ GetCustomAttributes(Type ^ attributeType, bool inherit);" />
      <MemberSignature Language="F#" Value="override this.GetCustomAttributes : Type * bool -&gt; obj[]" Usage="dynamicMethod.GetCustomAttributes (attributeType, inherit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit.Lightweight</AssemblyName>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributeType" Type="System.Type" Index="0" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.1;xamarinandroid-7.1;xamarinmac-3.0" />
        <Parameter Name="inherit" Type="System.Boolean" Index="1" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.1;xamarinandroid-7.1;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="attributeType"><span data-ttu-id="bfc4c-508">Ein <see cref="T:System.Type" />, der den Typ des zurückzugebenden benutzerdefinierten Attributs darstellt.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-508">A <see cref="T:System.Type" /> representing the type of custom attribute to return.</span></span></param>
        <param name="inherit"><span data-ttu-id="bfc4c-509"><see langword="true" />, wenn die Vererbungskette der Methode nach den benutzerdefinierten Attributen durchsucht werden soll, <see langword="false" />, wenn nur die aktuelle Methode überprüft werden soll.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-509"><see langword="true" /> to search the method's inheritance chain to find the custom attributes; <see langword="false" /> to check only the current method.</span></span></param>
        <summary><span data-ttu-id="bfc4c-510">Gibt die benutzerdefinierten Attribute des angegebenen Typs zurück, die auf die Methode angewendet wurden.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-510">Returns the custom attributes of the specified type that have been applied to the method.</span></span></summary>
        <returns><span data-ttu-id="bfc4c-511">Ein Array von Objekten, die die Attribute der Methode darstellen und vom Typ <paramref name="attributeType" /> sind oder vom Typ <paramref name="attributeType" /> abgeleitet werden.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-511">An array of objects representing the attributes of the method that are of type <paramref name="attributeType" /> or derive from type <paramref name="attributeType" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bfc4c-512">Für dynamische Methoden `true` hat die Angabe von for `inherit` keine Auswirkung, da die Methode nicht in einem Typ deklariert wird.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-512">For dynamic methods, specifying `true` for `inherit` has no effect, because the method is not declared in a type.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="bfc4c-513">Benutzerdefinierte Attribute werden derzeit nicht für dynamische Methoden unterstützt.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-513">Custom attributes are not currently supported on dynamic methods.</span></span> <span data-ttu-id="bfc4c-514">Das einzige Attribut, das zurückgegeben wird <xref:System.Runtime.CompilerServices.MethodImplAttribute> , ist. Sie können die Methodenimplementierungsflags mithilfe der-Methode leichter erhalten <xref:System.Reflection.Emit.DynamicMethod.GetMethodImplementationFlags%2A> .</span><span class="sxs-lookup"><span data-stu-id="bfc4c-514">The only attribute returned is <xref:System.Runtime.CompilerServices.MethodImplAttribute>; you can get the method implementation flags more easily using the <xref:System.Reflection.Emit.DynamicMethod.GetMethodImplementationFlags%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="bfc4c-515"><paramref name="attributeType" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-515"><paramref name="attributeType" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Reflection.Emit.DynamicMethod.IsDefined(System.Type,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="GetDynamicILInfo">
      <MemberSignature Language="C#" Value="public System.Reflection.Emit.DynamicILInfo GetDynamicILInfo ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Reflection.Emit.DynamicILInfo GetDynamicILInfo() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.DynamicMethod.GetDynamicILInfo" />
      <MemberSignature Language="VB.NET" Value="Public Function GetDynamicILInfo () As DynamicILInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Emit::DynamicILInfo ^ GetDynamicILInfo();" />
      <MemberSignature Language="F#" Value="member this.GetDynamicILInfo : unit -&gt; System.Reflection.Emit.DynamicILInfo" Usage="dynamicMethod.GetDynamicILInfo " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit.Lightweight</AssemblyName>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.DynamicILInfo</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="bfc4c-516">Gibt ein <see cref="T:System.Reflection.Emit.DynamicILInfo" />-Objekt zurück, das zum Generieren von Methodentext aus Metadatentoken, Bereichen und MSIL-Streams (Microsoft Intermediate Language) verwendet werden kann.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-516">Returns a <see cref="T:System.Reflection.Emit.DynamicILInfo" /> object that can be used to generate a method body from metadata tokens, scopes, and Microsoft intermediate language (MSIL) streams.</span></span></summary>
        <returns><span data-ttu-id="bfc4c-517">Ein <see cref="T:System.Reflection.Emit.DynamicILInfo" />-Objekt, das zum Generieren von Methodentext aus Metadatentoken, Bereichen und MSIL-Streams verwendet werden kann.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-517">A <see cref="T:System.Reflection.Emit.DynamicILInfo" /> object that can be used to generate a method body from metadata tokens, scopes, and MSIL streams.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bfc4c-518">Die- <xref:System.Reflection.Emit.DynamicILInfo> Klasse wird zur Unterstützung der nicht verwalteten Codegenerierung bereitgestellt.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-518">The <xref:System.Reflection.Emit.DynamicILInfo> class is provided to support unmanaged code generation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Reflection.Emit.DynamicILInfo" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetILGenerator">
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit.Lightweight</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="bfc4c-519">Gibt einen MSIL-Generator zurück, mit dem ein Textkörper für die dynamische Methode ausgegeben werden kann.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-519">Returns an MSIL generator that can be used to emit a body for the dynamic method.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetILGenerator">
      <MemberSignature Language="C#" Value="public System.Reflection.Emit.ILGenerator GetILGenerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Reflection.Emit.ILGenerator GetILGenerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.DynamicMethod.GetILGenerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetILGenerator () As ILGenerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Emit::ILGenerator ^ GetILGenerator();" />
      <MemberSignature Language="F#" Value="member this.GetILGenerator : unit -&gt; System.Reflection.Emit.ILGenerator" Usage="dynamicMethod.GetILGenerator " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit.Lightweight</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.ILGenerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="bfc4c-520">Gibt für die Methode einen MSIL-Generator (Microsoft Intermediate Language) mit einer MSIL-Standardstreamgröße von 64 Byte zurück.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-520">Returns a Microsoft intermediate language (MSIL) generator for the method with a default MSIL stream size of 64 bytes.</span></span></summary>
        <returns><span data-ttu-id="bfc4c-521">Ein <see cref="T:System.Reflection.Emit.ILGenerator" />-Objekt für die Methode.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-521">An <see cref="T:System.Reflection.Emit.ILGenerator" /> object for the method.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bfc4c-522">Nachdem eine dynamische Methode durch Aufrufen der-oder der- <xref:System.Reflection.Emit.DynamicMethod.CreateDelegate%2A> Methode abgeschlossen wurde <xref:System.Reflection.Emit.DynamicMethod.Invoke%2A> , wird jeder weitere Versuch, MSIL hinzuzufügen, ignoriert.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-522">After a dynamic method has been completed, by calling the <xref:System.Reflection.Emit.DynamicMethod.CreateDelegate%2A> or <xref:System.Reflection.Emit.DynamicMethod.Invoke%2A> method, any further attempt to add MSIL is ignored.</span></span> <span data-ttu-id="bfc4c-523">Es wird keine Ausnahme ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-523">No exception is thrown.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="bfc4c-524">Es gibt Einschränkungen für nicht überprüfbaren Code in dynamischen Methoden, auch in einigen Szenarien mit voller Vertrauenswürdigkeit.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-524">There are restrictions on unverifiable code in dynamic methods, even in some full-trust scenarios.</span></span> <span data-ttu-id="bfc4c-525">Weitere Informationen finden Sie im Abschnitt „Überprüfung“ für <xref:System.Reflection.Emit.DynamicMethod>.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-525">See the "Verification" section in Remarks for <xref:System.Reflection.Emit.DynamicMethod>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bfc4c-526">Im folgenden Codebeispiel wird eine dynamische Methode erstellt, die zwei Parameter annimmt.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-526">The following code example creates a dynamic method that takes two parameters.</span></span> <span data-ttu-id="bfc4c-527">Im Beispiel wird ein einfacher Funktions Text ausgegeben, der den ersten Parameter in der Konsole ausgibt. im Beispiel wird der zweite Parameter als Rückgabewert der-Methode verwendet.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-527">The example emits a simple function body that prints the first parameter to the console, and the example uses the second parameter as the return value of the method.</span></span> <span data-ttu-id="bfc4c-528">Im Beispiel wird die-Methode vervollständigt, indem ein Delegat erstellt wird, der Delegat mit unterschiedlichen Parametern aufgerufen und schließlich die dynamische Methode mithilfe der-Methode aufgerufen wird <xref:System.Reflection.Emit.DynamicMethod.Invoke%2A> .</span><span class="sxs-lookup"><span data-stu-id="bfc4c-528">The example completes the method by creating a delegate, invokes the delegate with different parameters, and finally invokes the dynamic method using the <xref:System.Reflection.Emit.DynamicMethod.Invoke%2A> method.</span></span>  
  
 [!code-cpp[Reflection.DynamicMethod.ctor1#1](~/samples/snippets/cpp/VS_Snippets_CLR/Reflection.DynamicMethod.ctor1/cpp/source.cpp#1)]
 [!code-csharp[Reflection.DynamicMethod.ctor1#1](~/samples/snippets/csharp/VS_Snippets_CLR/Reflection.DynamicMethod.ctor1/CS/source.cs#1)]
 [!code-vb[Reflection.DynamicMethod.ctor1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Reflection.DynamicMethod.ctor1/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/reflection-and-codedom/how-to-define-and-execute-dynamic-methods"><span data-ttu-id="bfc4c-529">Vorgehensweise: Definieren und Ausführen von dynamischen Methoden</span><span class="sxs-lookup"><span data-stu-id="bfc4c-529">How to: Define and Execute Dynamic Methods</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetILGenerator">
      <MemberSignature Language="C#" Value="public System.Reflection.Emit.ILGenerator GetILGenerator (int streamSize);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Reflection.Emit.ILGenerator GetILGenerator(int32 streamSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.DynamicMethod.GetILGenerator(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetILGenerator (streamSize As Integer) As ILGenerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Emit::ILGenerator ^ GetILGenerator(int streamSize);" />
      <MemberSignature Language="F#" Value="member this.GetILGenerator : int -&gt; System.Reflection.Emit.ILGenerator" Usage="dynamicMethod.GetILGenerator streamSize" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit.Lightweight</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.ILGenerator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="streamSize" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="streamSize"><span data-ttu-id="bfc4c-530">Die Größe des MSIL-Streams in Bytes.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-530">The size of the MSIL stream, in bytes.</span></span></param>
        <summary><span data-ttu-id="bfc4c-531">Gibt für die Methode einen MSIL-Generator (Microsoft Intermediate Language) mit der angegebenen Größe der MSIL-Streams zurück.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-531">Returns a Microsoft intermediate language (MSIL) generator for the method with the specified MSIL stream size.</span></span></summary>
        <returns><span data-ttu-id="bfc4c-532">Ein <see cref="T:System.Reflection.Emit.ILGenerator" />-Objekt für die Methode mit der angegebenen Größe der MSIL-Streams.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-532">An <see cref="T:System.Reflection.Emit.ILGenerator" /> object for the method, with the specified MSIL stream size.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bfc4c-533">Nachdem eine dynamische Methode durch Aufrufen der-oder der- <xref:System.Reflection.Emit.DynamicMethod.CreateDelegate%2A> Methode abgeschlossen wurde <xref:System.Reflection.Emit.DynamicMethod.Invoke%2A> , wird jeder weitere Versuch, MSIL hinzuzufügen, ignoriert.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-533">After a dynamic method has been completed, by calling the <xref:System.Reflection.Emit.DynamicMethod.CreateDelegate%2A> or <xref:System.Reflection.Emit.DynamicMethod.Invoke%2A> method, any further attempt to add MSIL is ignored.</span></span> <span data-ttu-id="bfc4c-534">Es wird keine Ausnahme ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-534">No exception is thrown.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="bfc4c-535">Es gibt Einschränkungen für nicht überprüfbaren Code in dynamischen Methoden, auch in einigen Szenarien mit voller Vertrauenswürdigkeit.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-535">There are restrictions on unverifiable code in dynamic methods, even in some full-trust scenarios.</span></span> <span data-ttu-id="bfc4c-536">Weitere Informationen finden Sie im Abschnitt „Überprüfung“ für <xref:System.Reflection.Emit.DynamicMethod>.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-536">See the "Verification" section in Remarks for <xref:System.Reflection.Emit.DynamicMethod>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bfc4c-537">Im folgenden Codebeispiel wird diese Methoden Überladung veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-537">The following code example demonstrates this method overload.</span></span> <span data-ttu-id="bfc4c-538">Dieses Codebeispiel ist Teil eines größeren Beispiels, das für die-Klasse bereitgestellt wird <xref:System.Reflection.Emit.DynamicMethod> .</span><span class="sxs-lookup"><span data-stu-id="bfc4c-538">This code example is part of a larger example provided for the <xref:System.Reflection.Emit.DynamicMethod> class.</span></span>  
  
 [!code-cpp[Reflection.DynamicMethod.All#2](~/samples/snippets/cpp/VS_Snippets_CLR/Reflection.DynamicMethod.All/cpp/source.cpp#2)]
 [!code-csharp[Reflection.DynamicMethod.All#2](~/samples/snippets/csharp/VS_Snippets_CLR/Reflection.DynamicMethod.All/CS/source.cs#2)]
 [!code-vb[Reflection.DynamicMethod.All#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/Reflection.DynamicMethod.All/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/reflection-and-codedom/how-to-define-and-execute-dynamic-methods"><span data-ttu-id="bfc4c-539">Vorgehensweise: Definieren und Ausführen von dynamischen Methoden</span><span class="sxs-lookup"><span data-stu-id="bfc4c-539">How to: Define and Execute Dynamic Methods</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetMethodImplementationFlags">
      <MemberSignature Language="C#" Value="public override System.Reflection.MethodImplAttributes GetMethodImplementationFlags ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.Reflection.MethodImplAttributes GetMethodImplementationFlags() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.DynamicMethod.GetMethodImplementationFlags" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetMethodImplementationFlags () As MethodImplAttributes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Reflection::MethodImplAttributes GetMethodImplementationFlags();" />
      <MemberSignature Language="F#" Value="override this.GetMethodImplementationFlags : unit -&gt; System.Reflection.MethodImplAttributes" Usage="dynamicMethod.GetMethodImplementationFlags " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit.Lightweight</AssemblyName>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodImplAttributes</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="bfc4c-540">Gibt die Implementierungsflags für die Methode zurück.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-540">Returns the implementation flags for the method.</span></span></summary>
        <returns><span data-ttu-id="bfc4c-541">Eine bitweise Kombination von <see cref="T:System.Reflection.MethodImplAttributes" />-Werten, die die Implementierungsflags für die Methode darstellen.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-541">A bitwise combination of <see cref="T:System.Reflection.MethodImplAttributes" /> values representing the implementation flags for the method.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bfc4c-542">Derzeit sind Methoden Implementierungs Attribute für dynamische Methoden immer <xref:System.Reflection.MethodImplAttributes.IL> und <xref:System.Reflection.MethodImplAttributes.NoInlining> .</span><span class="sxs-lookup"><span data-stu-id="bfc4c-542">Currently, method implementation attributes for dynamic methods are always <xref:System.Reflection.MethodImplAttributes.IL> and <xref:System.Reflection.MethodImplAttributes.NoInlining>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetParameters">
      <MemberSignature Language="C#" Value="public override System.Reflection.ParameterInfo[] GetParameters ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Reflection.ParameterInfo[] GetParameters() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.DynamicMethod.GetParameters" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetParameters () As ParameterInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Reflection::ParameterInfo ^&gt; ^ GetParameters();" />
      <MemberSignature Language="F#" Value="override this.GetParameters : unit -&gt; System.Reflection.ParameterInfo[]" Usage="dynamicMethod.GetParameters " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit.Lightweight</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.ParameterInfo[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="bfc4c-543">Gibt die Parameter der dynamischen Methode zurück.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-543">Returns the parameters of the dynamic method.</span></span></summary>
        <returns><span data-ttu-id="bfc4c-544">Ein Array von <see cref="T:System.Reflection.ParameterInfo" />-Objekten, das die Parameter der dynamischen Methode darstellt.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-544">An array of <see cref="T:System.Reflection.ParameterInfo" /> objects that represent the parameters of the dynamic method.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bfc4c-545">Die <xref:System.Reflection.ParameterInfo> von dieser Methode zurückgegebenen Objekte dienen nur zu Informationszwecken.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-545">The <xref:System.Reflection.ParameterInfo> objects returned by this method are for information only.</span></span> <span data-ttu-id="bfc4c-546">Verwenden Sie die- <xref:System.Reflection.Emit.DynamicMethod.DefineParameter%2A> Methode, um die Eigenschaften der Parameter festzulegen oder zu ändern.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-546">Use the <xref:System.Reflection.Emit.DynamicMethod.DefineParameter%2A> method to set or change the characteristics of the parameters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bfc4c-547">Im folgenden Codebeispiel werden die Parameter einer dynamischen Methode angezeigt.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-547">The following code example displays the parameters of a dynamic method.</span></span> <span data-ttu-id="bfc4c-548">Dieses Codebeispiel ist Teil eines größeren Beispiels, das für die-Klasse bereitgestellt wird <xref:System.Reflection.Emit.DynamicMethod> .</span><span class="sxs-lookup"><span data-stu-id="bfc4c-548">This code example is part of a larger example provided for the <xref:System.Reflection.Emit.DynamicMethod> class.</span></span>  
  
 [!code-cpp[Reflection.DynamicMethod.All#34](~/samples/snippets/cpp/VS_Snippets_CLR/Reflection.DynamicMethod.All/cpp/source.cpp#34)]
 [!code-csharp[Reflection.DynamicMethod.All#34](~/samples/snippets/csharp/VS_Snippets_CLR/Reflection.DynamicMethod.All/CS/source.cs#34)]
 [!code-vb[Reflection.DynamicMethod.All#34](~/samples/snippets/visualbasic/VS_Snippets_CLR/Reflection.DynamicMethod.All/VB/source.vb#34)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Reflection.Emit.DynamicMethod.DefineParameter(System.Int32,System.Reflection.ParameterAttributes,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="InitLocals">
      <MemberSignature Language="C#" Value="public bool InitLocals { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool InitLocals" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.DynamicMethod.InitLocals" />
      <MemberSignature Language="VB.NET" Value="Public Property InitLocals As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool InitLocals { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.InitLocals : bool with get, set" Usage="System.Reflection.Emit.DynamicMethod.InitLocals" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit.Lightweight</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bfc4c-549">Ruft einen Wert ab, der angibt, ob die lokalen Variablen in der Methode mit 0 (null) initialisiert werden, oder legt diesen Wert fest.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-549">Gets or sets a value indicating whether the local variables in the method are zero-initialized.</span></span></summary>
        <value><span data-ttu-id="bfc4c-550"><see langword="true" />, wenn die lokalen Variablen in der Methode mit 0 (null) initialisiert werden, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-550"><see langword="true" /> if the local variables in the method are zero-initialized; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="bfc4c-551">Der Standardwert lautet <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-551">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bfc4c-552">Wenn diese Eigenschaft auf festgelegt ist `true` , enthält die ausgegebene Microsoft Intermediate Language (MSIL) die Initialisierung lokaler Variablen.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-552">If this property is set to `true`, the emitted Microsoft intermediate language (MSIL) includes initialization of local variables.</span></span> <span data-ttu-id="bfc4c-553">Wenn Sie auf festgelegt ist `false` , werden lokale Variablen nicht initialisiert, und der generierte Code ist nicht überprüfbar.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-553">If it is set to `false`, local variables are not initialized and the generated code is unverifiable.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bfc4c-554">Im folgenden Codebeispiel wird die- <xref:System.Reflection.Emit.DynamicMethod.InitLocals%2A> Eigenschaft einer dynamischen Methode angezeigt.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-554">The following code example displays the <xref:System.Reflection.Emit.DynamicMethod.InitLocals%2A> property of a dynamic method.</span></span> <span data-ttu-id="bfc4c-555">Dieses Codebeispiel ist Teil eines größeren Beispiels, das für die-Klasse bereitgestellt wird <xref:System.Reflection.Emit.DynamicMethod> .</span><span class="sxs-lookup"><span data-stu-id="bfc4c-555">This code example is part of a larger example provided for the <xref:System.Reflection.Emit.DynamicMethod> class.</span></span>  
  
 [!code-cpp[Reflection.DynamicMethod.All#24](~/samples/snippets/cpp/VS_Snippets_CLR/Reflection.DynamicMethod.All/cpp/source.cpp#24)]
 [!code-csharp[Reflection.DynamicMethod.All#24](~/samples/snippets/csharp/VS_Snippets_CLR/Reflection.DynamicMethod.All/CS/source.cs#24)]
 [!code-vb[Reflection.DynamicMethod.All#24](~/samples/snippets/visualbasic/VS_Snippets_CLR/Reflection.DynamicMethod.All/VB/source.vb#24)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Invoke">
      <MemberSignature Language="C#" Value="public override object Invoke (object obj, System.Reflection.BindingFlags invokeAttr, System.Reflection.Binder binder, object[] parameters, System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object Invoke(object obj, valuetype System.Reflection.BindingFlags invokeAttr, class System.Reflection.Binder binder, object[] parameters, class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.DynamicMethod.Invoke(System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Invoke (obj As Object, invokeAttr As BindingFlags, binder As Binder, parameters As Object(), culture As CultureInfo) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ Invoke(System::Object ^ obj, System::Reflection::BindingFlags invokeAttr, System::Reflection::Binder ^ binder, cli::array &lt;System::Object ^&gt; ^ parameters, System::Globalization::CultureInfo ^ culture);" />
      <MemberSignature Language="F#" Value="override this.Invoke : obj * System.Reflection.BindingFlags * System.Reflection.Binder * obj[] * System.Globalization.CultureInfo -&gt; obj" Usage="dynamicMethod.Invoke (obj, invokeAttr, binder, parameters, culture)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit.Lightweight</AssemblyName>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" Index="0" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.1;xamarinandroid-7.1;xamarinmac-3.0" />
        <Parameter Name="invokeAttr" Type="System.Reflection.BindingFlags" Index="1" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.1;xamarinandroid-7.1;xamarinmac-3.0" />
        <Parameter Name="binder" Type="System.Reflection.Binder" Index="2" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.1;xamarinandroid-7.1;xamarinmac-3.0" />
        <Parameter Name="parameters" Type="System.Object[]" Index="3" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.1;xamarinandroid-7.1;xamarinmac-3.0" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" Index="4" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.1;xamarinandroid-7.1;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="bfc4c-556">Dieser Parameter wird bei dynamischen Methoden ignoriert, da er statisch ist.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-556">This parameter is ignored for dynamic methods, because they are static.</span></span> <span data-ttu-id="bfc4c-557">Geben Sie <see langword="null" /> an.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-557">Specify <see langword="null" />.</span></span></param>
        <param name="invokeAttr"><span data-ttu-id="bfc4c-558">Eine bitweise Kombination von <see cref="T:System.Reflection.BindingFlags" />-Werten.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-558">A bitwise combination of <see cref="T:System.Reflection.BindingFlags" /> values.</span></span></param>
        <param name="binder"><span data-ttu-id="bfc4c-559">Ein <see cref="T:System.Reflection.Binder" />-Objekt, das die Bindung, die Umwandlung von Argumenttypen, das Aufrufen von Membern und das Abrufen von <see cref="T:System.Reflection.MemberInfo" />-Objekten über Reflektion ermöglicht.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-559">A <see cref="T:System.Reflection.Binder" /> object that enables the binding, coercion of argument types, invocation of members, and retrieval of <see cref="T:System.Reflection.MemberInfo" /> objects through reflection.</span></span> <span data-ttu-id="bfc4c-560">Wenn <paramref name="binder" /> den Wert <see langword="null" /> aufweist, wird der Standardbinder verwendet.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-560">If <paramref name="binder" /> is <see langword="null" />, the default binder is used.</span></span> <span data-ttu-id="bfc4c-561">Weitere Details finden Sie unter <see cref="T:System.Reflection.Binder" />.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-561">For more details, see <see cref="T:System.Reflection.Binder" />.</span></span></param>
        <param name="parameters"><span data-ttu-id="bfc4c-562">Eine Argumentliste.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-562">An argument list.</span></span> <span data-ttu-id="bfc4c-563">Diese ist ein Array von Argumenten, die hinsichtlich Anzahl, Reihenfolge und Typ mit den Parametern der aufzurufenden Methode identisch sind.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-563">This is an array of arguments with the same number, order, and type as the parameters of the method to be invoked.</span></span> <span data-ttu-id="bfc4c-564">Wenn keine Parameter vorhanden sind, muss dieser Parameter gleich <see langword="null" /> sein.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-564">If there are no parameters this parameter should be <see langword="null" />.</span></span></param>
        <param name="culture"><span data-ttu-id="bfc4c-565">Eine Instanz von <see cref="T:System.Globalization.CultureInfo" /> für die Steuerung der Umwandlung von Typen.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-565">An instance of <see cref="T:System.Globalization.CultureInfo" /> used to govern the coercion of types.</span></span> <span data-ttu-id="bfc4c-566">Wenn dies <see langword="null" /> ist, wird die <see cref="T:System.Globalization.CultureInfo" /> des aktuellen Threads verwendet.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-566">If this is <see langword="null" />, the <see cref="T:System.Globalization.CultureInfo" /> for the current thread is used.</span></span> <span data-ttu-id="bfc4c-567">Diese Informationen sind z.B. erforderlich, um ein <see cref="T:System.String" />, das 1000 darstellt, ordnungsgemäß in einen <see cref="T:System.Double" />-Wert zu konvertieren, da 1000 in verschiedenen Kulturen unterschiedlich dargestellt wird.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-567">For example, this information is needed to correctly convert a <see cref="T:System.String" /> that represents 1000 to a <see cref="T:System.Double" /> value, because 1000 is represented differently by different cultures.</span></span></param>
        <summary><span data-ttu-id="bfc4c-568">Ruft die dynamische Methode mithilfe des angegebenen Parameters und den Einschränkungen des angegebenen Binders mit den angegebenen Kulturinformationen auf.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-568">Invokes the dynamic method using the specified parameters, under the constraints of the specified binder, with the specified culture information.</span></span></summary>
        <returns><span data-ttu-id="bfc4c-569">Ein <see cref="T:System.Object" />, das den Rückgabewert der aufgerufenen Methode enthält.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-569">A <see cref="T:System.Object" /> containing the return value of the invoked method.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bfc4c-570">Zusätzlich zu den aufgeführten Ausnahmen sollte der aufrufende Code darauf vorbereitet sein, alle Ausnahmen abzufangen, die von der dynamischen Methode ausgelöst werden.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-570">In addition to the listed exceptions, the calling code should be prepared to catch any exceptions thrown by the dynamic method.</span></span>  
  
 <span data-ttu-id="bfc4c-571">Das Ausführen einer dynamischen Methode mit einem Delegaten, der von der-Methode erstellt wurde, <xref:System.Reflection.Emit.DynamicMethod.CreateDelegate%2A> ist effizienter als die Ausführung mit der- <xref:System.Reflection.Emit.DynamicMethod.Invoke%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-571">Executing a dynamic method with a delegate created by the <xref:System.Reflection.Emit.DynamicMethod.CreateDelegate%2A> method is more efficient than executing it with the <xref:System.Reflection.Emit.DynamicMethod.Invoke%2A> method.</span></span>  
  
 <span data-ttu-id="bfc4c-572">Durch Aufrufen der- <xref:System.Reflection.Emit.DynamicMethod.Invoke%2A> Methode oder der- <xref:System.Reflection.Emit.DynamicMethod.CreateDelegate%2A> Methode wird die dynamische-Methode abgeschlossen.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-572">Calling the <xref:System.Reflection.Emit.DynamicMethod.Invoke%2A> method or the <xref:System.Reflection.Emit.DynamicMethod.CreateDelegate%2A> method completes the dynamic method.</span></span> <span data-ttu-id="bfc4c-573">Jeder weitere Versuch, die dynamische Methode zu ändern, z. b. das Ändern von Parameter Definitionen oder das Ausgeben von MSIL (Microsoft Intermediate Language), wird ignoriert. Es wird keine Ausnahme ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-573">Any further attempt to alter the dynamic method, such as modifying parameter definitions or emitting more Microsoft intermediate language (MSIL), is ignored; no exception is thrown.</span></span>  
  
 <span data-ttu-id="bfc4c-574">Alle dynamischen Methoden sind statisch, sodass der `obj` Parameter immer ignoriert wird.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-574">All dynamic methods are static, so the `obj` parameter is always ignored.</span></span> <span data-ttu-id="bfc4c-575">Verwenden Sie die-Überladung, die <xref:System.Reflection.Emit.DynamicMethod.CreateDelegate%28System.Type%2CSystem.Object%29> eine Objektinstanz annimmt, um eine dynamische Methode so zu behandeln, als wäre Sie eine Instanzmethode.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-575">To treat a dynamic method as if it were an instance method, use the <xref:System.Reflection.Emit.DynamicMethod.CreateDelegate%28System.Type%2CSystem.Object%29> overload that takes an object instance.</span></span>  
  
 <span data-ttu-id="bfc4c-576">Wenn die dynamische Methode keine Parameter hat, sollte der Wert von `parameters` sein `null` .</span><span class="sxs-lookup"><span data-stu-id="bfc4c-576">If the dynamic method has no parameters, the value of `parameters` should be `null`.</span></span> <span data-ttu-id="bfc4c-577">Andernfalls sollten die Anzahl, der Typ und die Reihenfolge der Elemente im Parameter Array mit der Anzahl, dem Typ und der Reihenfolge der Parameter der dynamischen Methode identisch sein.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-577">Otherwise the number, type, and order of elements in the parameters array should be identical to the number, type, and order of parameters of the dynamic method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="bfc4c-578">Diese Methoden Überladung wird von der- <xref:System.Reflection.MethodBase.Invoke%28System.Object%2CSystem.Object%5B%5D%29> Methode aufgerufen, die von der-Klasse geerbt wird <xref:System.Reflection.MethodBase> , sodass die vorangehenden Hinweise für beide über Ladungen gelten.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-578">This method overload is called by the <xref:System.Reflection.MethodBase.Invoke%28System.Object%2CSystem.Object%5B%5D%29> method overload inherited from the <xref:System.Reflection.MethodBase> class, so the preceding remarks apply to both overloads.</span></span>  
  
 <span data-ttu-id="bfc4c-579">Diese Methode fordert keine Berechtigungen direkt an, aber das Aufrufen der dynamischen Methode kann zu Sicherheitsanforderungen führen, abhängig von der Methode.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-579">This method does not demand permissions directly, but invoking the dynamic method can result in security demands, depending on the method.</span></span> <span data-ttu-id="bfc4c-580">Beispielsweise werden keine Anforderungen für anonym gehostete dynamische Methoden hergestellt, die mit dem-Parameter erstellt werden, der `restrictedSkipVisibility` auf festgelegt ist `false` .</span><span class="sxs-lookup"><span data-stu-id="bfc4c-580">For example, no demands are made for anonymously hosted dynamic methods that are created with the `restrictedSkipVisibility` parameter set to `false`.</span></span> <span data-ttu-id="bfc4c-581">Wenn Sie dagegen eine Methode erstellen, bei `restrictedSkipVisibility` der auf festgelegt ist, sodass Sie auf einen ausgeblendeten `true` Member einer Zielassembly zugreifen kann, bewirkt die-Methode, dass die Berechtigungen der Zielassembly zuzüglich des-Flags angezeigt werden <xref:System.Security.Permissions.ReflectionPermission> <xref:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess?displayProperty=nameWithType> .</span><span class="sxs-lookup"><span data-stu-id="bfc4c-581">On the other hand, if you create a method with `restrictedSkipVisibility` set to `true` so it can access a hidden member of a target assembly, the method will cause a demand for the permissions of the target assembly plus <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess?displayProperty=nameWithType> flag.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="bfc4c-582">Vor [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)] war diese Methode <xref:System.Security.Permissions.ReflectionPermission> mit dem-Flag erforderlich <xref:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess> .</span><span class="sxs-lookup"><span data-stu-id="bfc4c-582">Prior to the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this method required <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess> flag.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bfc4c-583">Im folgenden Codebeispiel wird eine dynamische Methode mit der exakten Bindung aufgerufen, die die Kultur US-Englisch verwendet.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-583">The following code example invokes a dynamic method with exact binding, using the US-English culture.</span></span> <span data-ttu-id="bfc4c-584">Dieses Codebeispiel ist Teil eines größeren Beispiels, das für die-Klasse bereitgestellt wird <xref:System.Reflection.Emit.DynamicMethod> .</span><span class="sxs-lookup"><span data-stu-id="bfc4c-584">This code example is part of a larger example provided for the <xref:System.Reflection.Emit.DynamicMethod> class.</span></span>  
  
 [!code-cpp[Reflection.DynamicMethod.All#4](~/samples/snippets/cpp/VS_Snippets_CLR/Reflection.DynamicMethod.All/cpp/source.cpp#4)]
 [!code-csharp[Reflection.DynamicMethod.All#4](~/samples/snippets/csharp/VS_Snippets_CLR/Reflection.DynamicMethod.All/CS/source.cs#4)]
 [!code-vb[Reflection.DynamicMethod.All#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/Reflection.DynamicMethod.All/VB/source.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="bfc4c-585">Die <see cref="F:System.Reflection.CallingConventions.VarArgs" />-Aufrufkonvention wird nicht unterstützt.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-585">The <see cref="F:System.Reflection.CallingConventions.VarArgs" /> calling convention is not supported.</span></span></exception>
        <exception cref="T:System.Reflection.TargetParameterCountException"><span data-ttu-id="bfc4c-586">Die Anzahl der Elemente in <paramref name="parameters" /> stimmt nicht mit der Anzahl der Parameter in der dynamischen Methode überein.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-586">The number of elements in <paramref name="parameters" /> does not match the number of parameters in the dynamic method.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="bfc4c-587">Der Typ eines oder mehrerer Elemente von <paramref name="parameters" /> entspricht nicht dem Typ des entsprechenden Parameters der dynamischen Methode.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-587">The type of one or more elements of <paramref name="parameters" /> does not match the type of the corresponding parameter of the dynamic method.</span></span></exception>
        <exception cref="T:System.Reflection.TargetInvocationException"><span data-ttu-id="bfc4c-588">Die dynamische Methode ist einem Modul zugeordnet, nicht anonym gehostet und wurde mit <paramref name="skipVisibility" /> (festgelegt auf <see langword="false" />) erstellt, aber die dynamische Methode greift auf die Member zu, die nicht <see langword="public" /> oder <see langword="internal" /> sind (<see langword="Friend" /> in Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="bfc4c-588">The dynamic method is associated with a module, is not anonymously hosted, and was constructed with <paramref name="skipVisibility" /> set to <see langword="false" />, but the dynamic method accesses members that are not <see langword="public" /> or <see langword="internal" /> (<see langword="Friend" /> in Visual Basic).</span></span>  
  
<span data-ttu-id="bfc4c-589">- oder -</span><span class="sxs-lookup"><span data-stu-id="bfc4c-589">-or-</span></span> 
<span data-ttu-id="bfc4c-590">Die dynamische Methode wird anonym gehostet und wurde mit <paramref name="skipVisibility" /> (festgelegt auf <see langword="false" />) erstellt, aber sie greift auf Member zu, die nicht <see langword="public" /> sind.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-590">The dynamic method is anonymously hosted and was constructed with <paramref name="skipVisibility" /> set to <see langword="false" />, but it accesses members that are not <see langword="public" />.</span></span>  
  
<span data-ttu-id="bfc4c-591">- oder -</span><span class="sxs-lookup"><span data-stu-id="bfc4c-591">-or-</span></span> 
<span data-ttu-id="bfc4c-592">Die dynamische Methode enthält nicht überprüfbaren Code.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-592">The dynamic method contains unverifiable code.</span></span> <span data-ttu-id="bfc4c-593">Weitere Informationen finden Sie im Abschnitt „Überprüfung“ für <see cref="T:System.Reflection.Emit.DynamicMethod" />.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-593">See the "Verification" section in Remarks for <see cref="T:System.Reflection.Emit.DynamicMethod" />.</span></span></exception>
        <altmember cref="M:System.Reflection.Emit.DynamicMethod.CreateDelegate(System.Type)" />
      </Docs>
    </Member>
    <Member MemberName="IsDefined">
      <MemberSignature Language="C#" Value="public override bool IsDefined (Type attributeType, bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsDefined(class System.Type attributeType, bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.DynamicMethod.IsDefined(System.Type,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsDefined (attributeType As Type, inherit As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsDefined(Type ^ attributeType, bool inherit);" />
      <MemberSignature Language="F#" Value="override this.IsDefined : Type * bool -&gt; bool" Usage="dynamicMethod.IsDefined (attributeType, inherit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit.Lightweight</AssemblyName>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributeType" Type="System.Type" Index="0" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.1;xamarinandroid-7.1;xamarinmac-3.0" />
        <Parameter Name="inherit" Type="System.Boolean" Index="1" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.1;xamarinandroid-7.1;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="attributeType"><span data-ttu-id="bfc4c-594">Ein <see cref="T:System.Type" />, der den Typ des benutzerdefinierten Attributs darstellt, nach dem gesucht werden soll.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-594">A <see cref="T:System.Type" /> representing the type of custom attribute to search for.</span></span></param>
        <param name="inherit"><span data-ttu-id="bfc4c-595"><see langword="true" />, wenn die Vererbungskette der Methode nach den benutzerdefinierten Attributen durchsucht werden soll, <see langword="false" />, wenn nur die aktuelle Methode überprüft werden soll.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-595"><see langword="true" /> to search the method's inheritance chain to find the custom attributes; <see langword="false" /> to check only the current method.</span></span></param>
        <summary><span data-ttu-id="bfc4c-596">Gibt an, ob der Typ des angegebenen benutzerdefinierten Attributs definiert ist.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-596">Indicates whether the specified custom attribute type is defined.</span></span></summary>
        <returns><span data-ttu-id="bfc4c-597"><see langword="true" />, wenn der Typ des angegebenen benutzerdefinierten Attributs definiert ist, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-597"><see langword="true" /> if the specified custom attribute type is defined; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bfc4c-598">Für dynamische Methoden hat die Angabe `true` von für `inherit` keine Auswirkung.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-598">For dynamic methods, specifying `true` for `inherit` has no effect.</span></span> <span data-ttu-id="bfc4c-599">Dynamische Methoden haben keine Vererbungs Kette.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-599">Dynamic methods have no inheritance chain.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="bfc4c-600">Benutzerdefinierte Attribute werden derzeit nicht für dynamische Methoden unterstützt.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-600">Custom attributes are not currently supported on dynamic methods.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Reflection.Emit.DynamicMethod.GetCustomAttributes(System.Type,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="IsSecurityCritical">
      <MemberSignature Language="C#" Value="public override bool IsSecurityCritical { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSecurityCritical" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.DynamicMethod.IsSecurityCritical" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsSecurityCritical As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsSecurityCritical { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsSecurityCritical : bool" Usage="System.Reflection.Emit.DynamicMethod.IsSecurityCritical" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit.Lightweight</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[get: System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bfc4c-601">Ruft einen Wert ab, der angibt, ob die aktuelle dynamische Methode sicherheitsrelevant ist und daher wichtige Vorgänge ausführen darf.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-601">Gets a value that indicates whether the current dynamic method is security-critical or security-safe-critical, and therefore can perform critical operations.</span></span></summary>
        <value><span data-ttu-id="bfc4c-602"><see langword="true" />, wenn die aktuelle dynamische Methode sicherheitsrelevant ist. <see langword="false" />, wenn sie transparent ist.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-602"><see langword="true" /> if the current dynamic method is security-critical or security-safe-critical; <see langword="false" /> if it is transparent.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bfc4c-603">Die <xref:System.Reflection.Emit.DynamicMethod.IsSecurityCritical%2A> <xref:System.Reflection.Emit.DynamicMethod.IsSecuritySafeCritical%2A> Eigenschaften, und <xref:System.Reflection.Emit.DynamicMethod.IsSecurityTransparent%2A> melden die Transparenz Ebene der dynamischen Methode, wie vom Common Language Runtime (CLR) festgelegt.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-603">The <xref:System.Reflection.Emit.DynamicMethod.IsSecurityCritical%2A>, <xref:System.Reflection.Emit.DynamicMethod.IsSecuritySafeCritical%2A>, and <xref:System.Reflection.Emit.DynamicMethod.IsSecurityTransparent%2A> properties report the transparency level of the dynamic method as determined by the common language runtime (CLR).</span></span> <span data-ttu-id="bfc4c-604">Die Kombinationen dieser Eigenschaften werden in der folgenden Tabelle gezeigt:</span><span class="sxs-lookup"><span data-stu-id="bfc4c-604">The combinations of these properties are shown in the following table:</span></span>  
  
|<span data-ttu-id="bfc4c-605">Sicherheitsstufe</span><span class="sxs-lookup"><span data-stu-id="bfc4c-605">Security level</span></span>|<span data-ttu-id="bfc4c-606">IsSecurityCritical</span><span class="sxs-lookup"><span data-stu-id="bfc4c-606">IsSecurityCritical</span></span>|<span data-ttu-id="bfc4c-607">IsSecuritySafeCritical</span><span class="sxs-lookup"><span data-stu-id="bfc4c-607">IsSecuritySafeCritical</span></span>|<span data-ttu-id="bfc4c-608">IsSecurityTransparent</span><span class="sxs-lookup"><span data-stu-id="bfc4c-608">IsSecurityTransparent</span></span>|  
|--------------------|------------------------|----------------------------|---------------------------|  
|<span data-ttu-id="bfc4c-609">Kritisch</span><span class="sxs-lookup"><span data-stu-id="bfc4c-609">Critical</span></span>|`true`|`false`|`false`|  
|<span data-ttu-id="bfc4c-610">Sicher kritisch</span><span class="sxs-lookup"><span data-stu-id="bfc4c-610">Safe critical</span></span>|`true`|`true`|`false`|  
|<span data-ttu-id="bfc4c-611">Transparent</span><span class="sxs-lookup"><span data-stu-id="bfc4c-611">Transparent</span></span>|`false`|`false`|`true`|  
  
 <span data-ttu-id="bfc4c-612">Ein Verwenden dieser Eigenschaften ist deutlich einfacher als das Untersuchen der Sicherheitsanmerkungen einer Assembly und der zugehörigen Typen, das Überprüfen der aktuellen Vertrauensebene und das Versuchen, die Laufzeitregeln zu duplizieren.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-612">Using these properties is much simpler than examining the security annotations of an assembly and its types, checking the current trust level, and attempting to duplicate the runtime's rules.</span></span>  
  
 <span data-ttu-id="bfc4c-613">Die Transparenz einer dynamischen Methode hängt von dem Modul ab, dem es zugeordnet ist.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-613">The transparency of a dynamic method depends on the module it is associated with.</span></span> <span data-ttu-id="bfc4c-614">Wenn die dynamische Methode einem Typ und nicht einem Modul zugeordnet ist, hängt die Transparenz von dem Modul ab, das den Typ enthält.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-614">If the dynamic method is associated with a type rather than a module, its transparency depends on the module that contains the type.</span></span> <span data-ttu-id="bfc4c-615">Dynamische Methoden haben keine Sicherheits Anmerkungen, sodass Ihnen die Standard Transparenz für das zugehörige Modul zugewiesen wird.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-615">Dynamic methods do not have security annotations, so they are assigned the default transparency for the associated module.</span></span>  
  
-   <span data-ttu-id="bfc4c-616">Anonym gehostete dynamische Methoden sind immer transparent, da das vom System bereitgestellte Modul, das Sie enthält, transparent ist.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-616">Anonymously hosted dynamic methods are always transparent, because the system-provided module that contains them is transparent.</span></span>  
  
-   <span data-ttu-id="bfc4c-617">Die Transparenz einer dynamischen Methode, die mit einer vertrauenswürdigen Assembly verknüpft ist (d. h. eine Assembly mit starkem Namen, die im globalen Assemblycache installiert ist), wird in der folgenden Tabelle beschrieben.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-617">The transparency of a dynamic method that is associated with a trusted assembly (that is, a strong-named assembly that is installed in the global assembly cache) is described in the following table.</span></span>  
  
    |<span data-ttu-id="bfc4c-618">Assemblyanmerkung</span><span class="sxs-lookup"><span data-stu-id="bfc4c-618">Assembly annotation</span></span>|<span data-ttu-id="bfc4c-619">Transparenz der Ebene 1</span><span class="sxs-lookup"><span data-stu-id="bfc4c-619">Level 1 transparency</span></span>|<span data-ttu-id="bfc4c-620">Transparenz der Ebene 2</span><span class="sxs-lookup"><span data-stu-id="bfc4c-620">Level 2 transparency</span></span>|  
    |-------------------------|--------------------------|--------------------------|  
    |<span data-ttu-id="bfc4c-621">Vollständig transparent</span><span class="sxs-lookup"><span data-stu-id="bfc4c-621">Fully transparent</span></span>|<span data-ttu-id="bfc4c-622">Transparent</span><span class="sxs-lookup"><span data-stu-id="bfc4c-622">Transparent</span></span>|<span data-ttu-id="bfc4c-623">Transparent</span><span class="sxs-lookup"><span data-stu-id="bfc4c-623">Transparent</span></span>|  
    |<span data-ttu-id="bfc4c-624">Vollständig kritisch</span><span class="sxs-lookup"><span data-stu-id="bfc4c-624">Fully critical</span></span>|<span data-ttu-id="bfc4c-625">Kritisch</span><span class="sxs-lookup"><span data-stu-id="bfc4c-625">Critical</span></span>|<span data-ttu-id="bfc4c-626">Kritisch</span><span class="sxs-lookup"><span data-stu-id="bfc4c-626">Critical</span></span>|  
    |<span data-ttu-id="bfc4c-627">Gemischte Transparenz</span><span class="sxs-lookup"><span data-stu-id="bfc4c-627">Mixed transparency</span></span>|<span data-ttu-id="bfc4c-628">Transparent</span><span class="sxs-lookup"><span data-stu-id="bfc4c-628">Transparent</span></span>|<span data-ttu-id="bfc4c-629">Transparent</span><span class="sxs-lookup"><span data-stu-id="bfc4c-629">Transparent</span></span>|  
    |<span data-ttu-id="bfc4c-630">Sicherheits agnostisch</span><span class="sxs-lookup"><span data-stu-id="bfc4c-630">Security-agnostic</span></span>|<span data-ttu-id="bfc4c-631">Sicherheitskritisch</span><span class="sxs-lookup"><span data-stu-id="bfc4c-631">Safe-critical</span></span>|<span data-ttu-id="bfc4c-632">Kritisch</span><span class="sxs-lookup"><span data-stu-id="bfc4c-632">Critical</span></span>|  
  
     <span data-ttu-id="bfc4c-633">Wenn Sie z. b. eine dynamische Methode einem Typ zuordnen, der in mscorlib.dll mit gemischter Transparenz der Ebene 2 steht, ist die dynamische Methode transparent und kann keinen kritischen Code ausführen.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-633">For example, if you associate a dynamic method with a type that is in mscorlib.dll, which has level 2 mixed transparency, the dynamic method is transparent and cannot execute critical code.</span></span> <span data-ttu-id="bfc4c-634">Informationen zu Transparenzstufen finden Sie unter [Sicherheits transparenter Code, Ebene 1](/dotnet/framework/misc/security-transparent-code-level-1) und [Sicherheits transparenter Code, Ebene 2](/dotnet/framework/misc/security-transparent-code-level-2).</span><span class="sxs-lookup"><span data-stu-id="bfc4c-634">For information about transparency levels, see [Security-Transparent Code, Level 1](/dotnet/framework/misc/security-transparent-code-level-1) and [Security-Transparent Code, Level 2](/dotnet/framework/misc/security-transparent-code-level-2).</span></span>  
  
    > [!NOTE]
    >  <span data-ttu-id="bfc4c-635">Das Zuordnen einer dynamischen Methode zu einem Modul in einer vertrauenswürdigen Assembly mit einer vertrauenswürdigen Ebene 1, die Sicherheits agnostisch ist (z. b. System.dll), lässt keine Vertrauensstellung zu.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-635">Associating a dynamic method with a module in a trusted level 1 assembly that is security-agnostic, such as System.dll, does not permit elevation of trust.</span></span> <span data-ttu-id="bfc4c-636">Wenn der Berechtigungs Satz des Codes, der die dynamische Methode aufruft, nicht den Grant-Satz System.dll (also voll vertrauenswürdig) enthält, <xref:System.Security.SecurityException> wird beim Aufrufen der dynamischen Methode ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-636">If the grant set of the code that calls the dynamic method does not include the grant set of System.dll (that is, full trust), <xref:System.Security.SecurityException> is thrown when the dynamic method is called.</span></span>  
  
-   <span data-ttu-id="bfc4c-637">Die Transparenz einer dynamischen Methode, die einer teilweise vertrauenswürdigen Assembly zugeordnet ist, hängt davon ab, wie die Assembly geladen wird.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-637">The transparency of a dynamic method that is associated with a partially trusted assembly depends on how the assembly is loaded.</span></span> <span data-ttu-id="bfc4c-638">Wenn die Assembly mit teilweiser Vertrauenswürdigkeit (z. b. in eine Sandbox-Anwendungsdomäne) geladen wird, ignoriert die Laufzeit die Sicherheits Anmerkungen der Assembly.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-638">If the assembly is loaded with partial trust (for example, into a sandboxed application domain), the runtime ignores the security annotations of the assembly.</span></span> <span data-ttu-id="bfc4c-639">Die Assembly und alle zugehörigen Typen und Member, einschließlich dynamischer Methoden, werden als transparent behandelt.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-639">The assembly and all its types and members, including dynamic methods, are treated as transparent.</span></span> <span data-ttu-id="bfc4c-640">Die Laufzeit achtet nur dann auf Sicherheits Anmerkungen, wenn die teilweise vertrauenswürdige Assembly mit voller Vertrauenswürdigkeit (z. b. in die Standard Anwendungsdomäne einer Desktop Anwendung) geladen wird.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-640">The runtime pays attention to security annotations only if the partial-trust assembly is loaded with full trust (for example, into the default application domain of a desktop application).</span></span> <span data-ttu-id="bfc4c-641">In diesem Fall weist die Runtime der dynamischen Methode die Standard Transparenz für Methoden entsprechend den Anmerkungen der Assembly zu.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-641">In that case, the runtime assigns the dynamic method the default transparency for methods according to the assembly's annotations.</span></span>  
  
 <span data-ttu-id="bfc4c-642">Weitere Informationen zur Reflektionsausgabe und Transparenz finden Sie unter [Sicherheitsprobleme bei der Reflektionsausgabe](/dotnet/framework/reflection-and-codedom/security-issues-in-reflection-emit).</span><span class="sxs-lookup"><span data-stu-id="bfc4c-642">For more information about reflection emit and transparency, see [Security Issues in Reflection Emit](/dotnet/framework/reflection-and-codedom/security-issues-in-reflection-emit).</span></span> <span data-ttu-id="bfc4c-643">Informationen zur Transparenz finden Sie unter [Sicherheitsänderungen](/dotnet/framework/security/security-changes).</span><span class="sxs-lookup"><span data-stu-id="bfc4c-643">For information about transparency, see [Security Changes](/dotnet/framework/security/security-changes).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="bfc4c-644">Die dynamische Methode weist keinen Methodentext auf.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-644">The dynamic method doesn't have a method body.</span></span></exception>
        <altmember cref="P:System.Reflection.Emit.DynamicMethod.IsSecuritySafeCritical" />
        <altmember cref="P:System.Reflection.Emit.DynamicMethod.IsSecurityTransparent" />
        <related type="Article" href="/dotnet/framework/reflection-and-codedom/security-issues-in-reflection-emit"><span data-ttu-id="bfc4c-645">Sicherheitsaspekte bei der Reflektionsausgabe</span><span class="sxs-lookup"><span data-stu-id="bfc4c-645">Security Issues in Reflection Emit</span></span></related>
        <related type="Article" href="/dotnet/framework/reflection-and-codedom/security-considerations-for-reflection"><span data-ttu-id="bfc4c-646">Sicherheitsüberlegungen für die Reflektion</span><span class="sxs-lookup"><span data-stu-id="bfc4c-646">Security Considerations for Reflection</span></span></related>
        <related type="Article" href="/dotnet/framework/security/security-changes"><span data-ttu-id="bfc4c-647">Änderungen der Sicherheit in .NET Framework 4.0</span><span class="sxs-lookup"><span data-stu-id="bfc4c-647">Security Changes in the .NET Framework Version 4.0</span></span></related>
        <related type="Article" href="/dotnet/framework/misc/security-transparent-code-level-1"><span data-ttu-id="bfc4c-648">Sicherheitstransparenter Code, Ebene 1</span><span class="sxs-lookup"><span data-stu-id="bfc4c-648">Security-Transparent Code, Level 1</span></span></related>
        <related type="Article" href="/dotnet/framework/misc/security-transparent-code-level-2"><span data-ttu-id="bfc4c-649">Sicherheitstransparenter Code, Ebene 2</span><span class="sxs-lookup"><span data-stu-id="bfc4c-649">Security-Transparent Code, Level 2</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="IsSecuritySafeCritical">
      <MemberSignature Language="C#" Value="public override bool IsSecuritySafeCritical { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSecuritySafeCritical" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.DynamicMethod.IsSecuritySafeCritical" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsSecuritySafeCritical As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsSecuritySafeCritical { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsSecuritySafeCritical : bool" Usage="System.Reflection.Emit.DynamicMethod.IsSecuritySafeCritical" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit.Lightweight</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[get: System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bfc4c-650">Ruft einen Wert ab, der angibt, ob die aktuelle dynamische Methode auf der aktuellen Vertrauensebene sicherheitsgeschützt ist, d. h. ob sie wichtige Vorgänge ausführen darf und ob von transparentem Code auf sie zugegriffen werden kann.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-650">Gets a value that indicates whether the current dynamic method is security-safe-critical at the current trust level; that is, whether it can perform critical operations and can be accessed by transparent code.</span></span></summary>
        <value><span data-ttu-id="bfc4c-651"><see langword="true" />, wenn die dynamische Methode auf der aktuellen Vertrauensebene sicherheitsgeschützt ist, <see langword="false" /> wenn sie sicherheitskritisch oder sicherheitstransparent ist.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-651"><see langword="true" /> if the dynamic method is security-safe-critical at the current trust level; <see langword="false" /> if it is security-critical or transparent.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bfc4c-652">Die <xref:System.Reflection.Emit.DynamicMethod.IsSecurityCritical%2A> <xref:System.Reflection.Emit.DynamicMethod.IsSecuritySafeCritical%2A> Eigenschaften, und <xref:System.Reflection.Emit.DynamicMethod.IsSecurityTransparent%2A> melden die Transparenz Ebene der dynamischen Methode, wie vom Common Language Runtime (CLR) festgelegt.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-652">The <xref:System.Reflection.Emit.DynamicMethod.IsSecurityCritical%2A>, <xref:System.Reflection.Emit.DynamicMethod.IsSecuritySafeCritical%2A>, and <xref:System.Reflection.Emit.DynamicMethod.IsSecurityTransparent%2A> properties report the transparency level of the dynamic method as determined by the common language runtime (CLR).</span></span> <span data-ttu-id="bfc4c-653">Die Kombinationen dieser Eigenschaften werden in der folgenden Tabelle gezeigt:</span><span class="sxs-lookup"><span data-stu-id="bfc4c-653">The combinations of these properties are shown in the following table:</span></span>  
  
|<span data-ttu-id="bfc4c-654">Sicherheitsstufe</span><span class="sxs-lookup"><span data-stu-id="bfc4c-654">Security level</span></span>|<span data-ttu-id="bfc4c-655">IsSecurityCritical</span><span class="sxs-lookup"><span data-stu-id="bfc4c-655">IsSecurityCritical</span></span>|<span data-ttu-id="bfc4c-656">IsSecuritySafeCritical</span><span class="sxs-lookup"><span data-stu-id="bfc4c-656">IsSecuritySafeCritical</span></span>|<span data-ttu-id="bfc4c-657">IsSecurityTransparent</span><span class="sxs-lookup"><span data-stu-id="bfc4c-657">IsSecurityTransparent</span></span>|  
|--------------------|------------------------|----------------------------|---------------------------|  
|<span data-ttu-id="bfc4c-658">Kritisch</span><span class="sxs-lookup"><span data-stu-id="bfc4c-658">Critical</span></span>|`true`|`false`|`false`|  
|<span data-ttu-id="bfc4c-659">Sicher kritisch</span><span class="sxs-lookup"><span data-stu-id="bfc4c-659">Safe critical</span></span>|`true`|`true`|`false`|  
|<span data-ttu-id="bfc4c-660">Transparent</span><span class="sxs-lookup"><span data-stu-id="bfc4c-660">Transparent</span></span>|`false`|`false`|`true`|  
  
 <span data-ttu-id="bfc4c-661">Ein Verwenden dieser Eigenschaften ist deutlich einfacher als das Untersuchen der Sicherheitsanmerkungen einer Assembly und der zugehörigen Typen, das Überprüfen der aktuellen Vertrauensebene und das Versuchen, die Laufzeitregeln zu duplizieren.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-661">Using these properties is much simpler than examining the security annotations of an assembly and its types, checking the current trust level, and attempting to duplicate the runtime's rules.</span></span>  
  
 <span data-ttu-id="bfc4c-662">Die Transparenz einer dynamischen Methode hängt von dem Modul ab, dem es zugeordnet ist.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-662">The transparency of a dynamic method depends on the module it is associated with.</span></span> <span data-ttu-id="bfc4c-663">Wenn die dynamische Methode einem Typ und nicht einem Modul zugeordnet ist, hängt die Transparenz von dem Modul ab, das den Typ enthält.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-663">If the dynamic method is associated with a type rather than a module, its transparency depends on the module that contains the type.</span></span> <span data-ttu-id="bfc4c-664">Dynamische Methoden haben keine Sicherheits Anmerkungen, sodass Ihnen die Standard Transparenz für das zugehörige Modul zugewiesen wird.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-664">Dynamic methods do not have security annotations, so they are assigned the default transparency for the associated module.</span></span>  
  
-   <span data-ttu-id="bfc4c-665">Anonym gehostete dynamische Methoden sind immer transparent, da das vom System bereitgestellte Modul, das Sie enthält, transparent ist.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-665">Anonymously hosted dynamic methods are always transparent, because the system-provided module that contains them is transparent.</span></span>  
  
-   <span data-ttu-id="bfc4c-666">Die Transparenz einer dynamischen Methode, die mit einer vertrauenswürdigen Assembly verknüpft ist (d. h. eine Assembly mit starkem Namen, die im globalen Assemblycache installiert ist), wird in der folgenden Tabelle beschrieben.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-666">The transparency of a dynamic method that is associated with a trusted assembly (that is, a strong-named assembly that is installed in the global assembly cache) is described in the following table.</span></span>  
  
    |<span data-ttu-id="bfc4c-667">Assemblyanmerkung</span><span class="sxs-lookup"><span data-stu-id="bfc4c-667">Assembly annotation</span></span>|<span data-ttu-id="bfc4c-668">Transparenz der Ebene 1</span><span class="sxs-lookup"><span data-stu-id="bfc4c-668">Level 1 transparency</span></span>|<span data-ttu-id="bfc4c-669">Transparenz der Ebene 2</span><span class="sxs-lookup"><span data-stu-id="bfc4c-669">Level 2 transparency</span></span>|  
    |-------------------------|--------------------------|--------------------------|  
    |<span data-ttu-id="bfc4c-670">Vollständig transparent</span><span class="sxs-lookup"><span data-stu-id="bfc4c-670">Fully transparent</span></span>|<span data-ttu-id="bfc4c-671">Transparent</span><span class="sxs-lookup"><span data-stu-id="bfc4c-671">Transparent</span></span>|<span data-ttu-id="bfc4c-672">Transparent</span><span class="sxs-lookup"><span data-stu-id="bfc4c-672">Transparent</span></span>|  
    |<span data-ttu-id="bfc4c-673">Vollständig kritisch</span><span class="sxs-lookup"><span data-stu-id="bfc4c-673">Fully critical</span></span>|<span data-ttu-id="bfc4c-674">Kritisch</span><span class="sxs-lookup"><span data-stu-id="bfc4c-674">Critical</span></span>|<span data-ttu-id="bfc4c-675">Kritisch</span><span class="sxs-lookup"><span data-stu-id="bfc4c-675">Critical</span></span>|  
    |<span data-ttu-id="bfc4c-676">Gemischte Transparenz</span><span class="sxs-lookup"><span data-stu-id="bfc4c-676">Mixed transparency</span></span>|<span data-ttu-id="bfc4c-677">Transparent</span><span class="sxs-lookup"><span data-stu-id="bfc4c-677">Transparent</span></span>|<span data-ttu-id="bfc4c-678">Transparent</span><span class="sxs-lookup"><span data-stu-id="bfc4c-678">Transparent</span></span>|  
    |<span data-ttu-id="bfc4c-679">Sicherheits agnostisch</span><span class="sxs-lookup"><span data-stu-id="bfc4c-679">Security-agnostic</span></span>|<span data-ttu-id="bfc4c-680">Sicherheitskritisch</span><span class="sxs-lookup"><span data-stu-id="bfc4c-680">Safe-critical</span></span>|<span data-ttu-id="bfc4c-681">Kritisch</span><span class="sxs-lookup"><span data-stu-id="bfc4c-681">Critical</span></span>|  
  
     <span data-ttu-id="bfc4c-682">Wenn Sie z. b. eine dynamische Methode einem Typ zuordnen, der in mscorlib.dll mit gemischter Transparenz der Ebene 2 steht, ist die dynamische Methode transparent und kann keinen kritischen Code ausführen.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-682">For example, if you associate a dynamic method with a type that is in mscorlib.dll, which has level 2 mixed transparency, the dynamic method is transparent and cannot execute critical code.</span></span> <span data-ttu-id="bfc4c-683">Informationen zu Transparenzstufen finden Sie unter [Sicherheits transparenter Code, Ebene 1](/dotnet/framework/misc/security-transparent-code-level-1) und [Sicherheits transparenter Code, Ebene 2](/dotnet/framework/misc/security-transparent-code-level-2).</span><span class="sxs-lookup"><span data-stu-id="bfc4c-683">For information about transparency levels, see [Security-Transparent Code, Level 1](/dotnet/framework/misc/security-transparent-code-level-1) and [Security-Transparent Code, Level 2](/dotnet/framework/misc/security-transparent-code-level-2).</span></span>  
  
    > [!NOTE]
    >  <span data-ttu-id="bfc4c-684">Das Zuordnen einer dynamischen Methode zu einem Modul in einer vertrauenswürdigen Assembly mit einer vertrauenswürdigen Ebene 1, die Sicherheits agnostisch ist (z. b. System.dll), lässt keine Vertrauensstellung zu.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-684">Associating a dynamic method with a module in a trusted level 1 assembly that is security-agnostic, such as System.dll, does not permit elevation of trust.</span></span> <span data-ttu-id="bfc4c-685">Wenn der Berechtigungs Satz des Codes, der die dynamische Methode aufruft, nicht den Grant-Satz System.dll (also voll vertrauenswürdig) enthält, <xref:System.Security.SecurityException> wird beim Aufrufen der dynamischen Methode ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-685">If the grant set of the code that calls the dynamic method does not include the grant set of System.dll (that is, full trust), <xref:System.Security.SecurityException> is thrown when the dynamic method is called.</span></span>  
  
-   <span data-ttu-id="bfc4c-686">Die Transparenz einer dynamischen Methode, die einer teilweise vertrauenswürdigen Assembly zugeordnet ist, hängt davon ab, wie die Assembly geladen wird.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-686">The transparency of a dynamic method that is associated with a partially trusted assembly depends on how the assembly is loaded.</span></span> <span data-ttu-id="bfc4c-687">Wenn die Assembly mit teilweiser Vertrauenswürdigkeit (z. b. in eine Sandbox-Anwendungsdomäne) geladen wird, ignoriert die Laufzeit die Sicherheits Anmerkungen der Assembly.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-687">If the assembly is loaded with partial trust (for example, into a sandboxed application domain), the runtime ignores the security annotations of the assembly.</span></span> <span data-ttu-id="bfc4c-688">Die Assembly und alle zugehörigen Typen und Member, einschließlich dynamischer Methoden, werden als transparent behandelt.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-688">The assembly and all its types and members, including dynamic methods, are treated as transparent.</span></span> <span data-ttu-id="bfc4c-689">Die Laufzeit achtet nur dann auf Sicherheits Anmerkungen, wenn die teilweise vertrauenswürdige Assembly mit voller Vertrauenswürdigkeit (z. b. in die Standard Anwendungsdomäne einer Desktop Anwendung) geladen wird.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-689">The runtime pays attention to security annotations only if the partial-trust assembly is loaded with full trust (for example, into the default application domain of a desktop application).</span></span> <span data-ttu-id="bfc4c-690">In diesem Fall weist die Runtime der dynamischen Methode die Standard Transparenz für Methoden entsprechend den Anmerkungen der Assembly zu.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-690">In that case, the runtime assigns the dynamic method the default transparency for methods according to the assembly's annotations.</span></span>  
  
 <span data-ttu-id="bfc4c-691">Weitere Informationen zur Reflektionsausgabe und Transparenz finden Sie unter [Sicherheitsprobleme bei der Reflektionsausgabe](/dotnet/framework/reflection-and-codedom/security-issues-in-reflection-emit).</span><span class="sxs-lookup"><span data-stu-id="bfc4c-691">For more information about reflection emit and transparency, see [Security Issues in Reflection Emit](/dotnet/framework/reflection-and-codedom/security-issues-in-reflection-emit).</span></span> <span data-ttu-id="bfc4c-692">Informationen zur Transparenz finden Sie unter [Sicherheitsänderungen](/dotnet/framework/security/security-changes).</span><span class="sxs-lookup"><span data-stu-id="bfc4c-692">For information about transparency, see [Security Changes](/dotnet/framework/security/security-changes).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="bfc4c-693">Die dynamische Methode weist keinen Methodentext auf.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-693">The dynamic method doesn't have a method body.</span></span></exception>
        <altmember cref="P:System.Reflection.Emit.DynamicMethod.IsSecurityCritical" />
        <altmember cref="P:System.Reflection.Emit.DynamicMethod.IsSecurityTransparent" />
        <related type="Article" href="/dotnet/framework/reflection-and-codedom/security-issues-in-reflection-emit"><span data-ttu-id="bfc4c-694">Sicherheitsaspekte bei der Reflektionsausgabe</span><span class="sxs-lookup"><span data-stu-id="bfc4c-694">Security Issues in Reflection Emit</span></span></related>
        <related type="Article" href="/dotnet/framework/reflection-and-codedom/security-considerations-for-reflection"><span data-ttu-id="bfc4c-695">Sicherheitsüberlegungen für die Reflektion</span><span class="sxs-lookup"><span data-stu-id="bfc4c-695">Security Considerations for Reflection</span></span></related>
        <related type="Article" href="/dotnet/framework/security/security-changes"><span data-ttu-id="bfc4c-696">Änderungen der Sicherheit in .NET Framework 4.0</span><span class="sxs-lookup"><span data-stu-id="bfc4c-696">Security Changes in the .NET Framework Version 4.0</span></span></related>
        <related type="Article" href="/dotnet/framework/misc/security-transparent-code-level-1"><span data-ttu-id="bfc4c-697">Sicherheitstransparenter Code, Ebene 1</span><span class="sxs-lookup"><span data-stu-id="bfc4c-697">Security-Transparent Code, Level 1</span></span></related>
        <related type="Article" href="/dotnet/framework/misc/security-transparent-code-level-2"><span data-ttu-id="bfc4c-698">Sicherheitstransparenter Code, Ebene 2</span><span class="sxs-lookup"><span data-stu-id="bfc4c-698">Security-Transparent Code, Level 2</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="IsSecurityTransparent">
      <MemberSignature Language="C#" Value="public override bool IsSecurityTransparent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSecurityTransparent" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.DynamicMethod.IsSecurityTransparent" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsSecurityTransparent As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsSecurityTransparent { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsSecurityTransparent : bool" Usage="System.Reflection.Emit.DynamicMethod.IsSecurityTransparent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit.Lightweight</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[get: System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bfc4c-699">Ruft einen Wert ab, der angibt, ob die aktuelle dynamische Methode auf der aktuellen Vertrauensebene sicherheitstransparent ist und daher keine wichtigen Vorgänge ausführen kann.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-699">Gets a value that indicates whether the current dynamic method is transparent at the current trust level, and therefore cannot perform critical operations.</span></span></summary>
        <value><span data-ttu-id="bfc4c-700"><see langword="true" />, wenn die dynamische Methode auf der aktuellen Vertrauensebene sicherheitstransparent ist, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-700"><see langword="true" /> if the dynamic method is security-transparent at the current trust level; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bfc4c-701">Die <xref:System.Reflection.Emit.DynamicMethod.IsSecurityCritical%2A> <xref:System.Reflection.Emit.DynamicMethod.IsSecuritySafeCritical%2A> Eigenschaften, und <xref:System.Reflection.Emit.DynamicMethod.IsSecurityTransparent%2A> melden die Transparenz Ebene der dynamischen Methode, wie vom Common Language Runtime (CLR) festgelegt.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-701">The <xref:System.Reflection.Emit.DynamicMethod.IsSecurityCritical%2A>, <xref:System.Reflection.Emit.DynamicMethod.IsSecuritySafeCritical%2A>, and <xref:System.Reflection.Emit.DynamicMethod.IsSecurityTransparent%2A> properties report the transparency level of the dynamic method as determined by the common language runtime (CLR).</span></span> <span data-ttu-id="bfc4c-702">Die Kombinationen dieser Eigenschaften werden in der folgenden Tabelle gezeigt:</span><span class="sxs-lookup"><span data-stu-id="bfc4c-702">The combinations of these properties are shown in the following table:</span></span>  
  
|<span data-ttu-id="bfc4c-703">Sicherheitsstufe</span><span class="sxs-lookup"><span data-stu-id="bfc4c-703">Security level</span></span>|<span data-ttu-id="bfc4c-704">IsSecurityCritical</span><span class="sxs-lookup"><span data-stu-id="bfc4c-704">IsSecurityCritical</span></span>|<span data-ttu-id="bfc4c-705">IsSecuritySafeCritical</span><span class="sxs-lookup"><span data-stu-id="bfc4c-705">IsSecuritySafeCritical</span></span>|<span data-ttu-id="bfc4c-706">IsSecurityTransparent</span><span class="sxs-lookup"><span data-stu-id="bfc4c-706">IsSecurityTransparent</span></span>|  
|--------------------|------------------------|----------------------------|---------------------------|  
|<span data-ttu-id="bfc4c-707">Kritisch</span><span class="sxs-lookup"><span data-stu-id="bfc4c-707">Critical</span></span>|`true`|`false`|`false`|  
|<span data-ttu-id="bfc4c-708">Sicher kritisch</span><span class="sxs-lookup"><span data-stu-id="bfc4c-708">Safe critical</span></span>|`true`|`true`|`false`|  
|<span data-ttu-id="bfc4c-709">Transparent</span><span class="sxs-lookup"><span data-stu-id="bfc4c-709">Transparent</span></span>|`false`|`false`|`true`|  
  
 <span data-ttu-id="bfc4c-710">Ein Verwenden dieser Eigenschaften ist deutlich einfacher als das Untersuchen der Sicherheitsanmerkungen einer Assembly und der zugehörigen Typen, das Überprüfen der aktuellen Vertrauensebene und das Versuchen, die Laufzeitregeln zu duplizieren.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-710">Using these properties is much simpler than examining the security annotations of an assembly and its types, checking the current trust level, and attempting to duplicate the runtime's rules.</span></span>  
  
 <span data-ttu-id="bfc4c-711">Die Transparenz einer dynamischen Methode hängt von dem Modul ab, dem es zugeordnet ist.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-711">The transparency of a dynamic method depends on the module it is associated with.</span></span> <span data-ttu-id="bfc4c-712">Wenn die dynamische Methode einem Typ und nicht einem Modul zugeordnet ist, hängt die Transparenz von dem Modul ab, das den Typ enthält.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-712">If the dynamic method is associated with a type rather than a module, its transparency depends on the module that contains the type.</span></span> <span data-ttu-id="bfc4c-713">Dynamische Methoden haben keine Sicherheits Anmerkungen, sodass Ihnen die Standard Transparenz für das zugehörige Modul zugewiesen wird.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-713">Dynamic methods do not have security annotations, so they are assigned the default transparency for the associated module.</span></span>  
  
-   <span data-ttu-id="bfc4c-714">Anonym gehostete dynamische Methoden sind immer transparent, da das vom System bereitgestellte Modul, das Sie enthält, transparent ist.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-714">Anonymously hosted dynamic methods are always transparent, because the system-provided module that contains them is transparent.</span></span>  
  
-   <span data-ttu-id="bfc4c-715">Die Transparenz einer dynamischen Methode, die mit einer vertrauenswürdigen Assembly verknüpft ist (d. h. eine Assembly mit starkem Namen, die im globalen Assemblycache installiert ist), wird in der folgenden Tabelle beschrieben.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-715">The transparency of a dynamic method that is associated with a trusted assembly (that is, a strong-named assembly that is installed in the global assembly cache) is described in the following table.</span></span>  
  
    |<span data-ttu-id="bfc4c-716">Assemblyanmerkung</span><span class="sxs-lookup"><span data-stu-id="bfc4c-716">Assembly annotation</span></span>|<span data-ttu-id="bfc4c-717">Transparenz der Ebene 1</span><span class="sxs-lookup"><span data-stu-id="bfc4c-717">Level 1 transparency</span></span>|<span data-ttu-id="bfc4c-718">Transparenz der Ebene 2</span><span class="sxs-lookup"><span data-stu-id="bfc4c-718">Level 2 transparency</span></span>|  
    |-------------------------|--------------------------|--------------------------|  
    |<span data-ttu-id="bfc4c-719">Vollständig transparent</span><span class="sxs-lookup"><span data-stu-id="bfc4c-719">Fully transparent</span></span>|<span data-ttu-id="bfc4c-720">Transparent</span><span class="sxs-lookup"><span data-stu-id="bfc4c-720">Transparent</span></span>|<span data-ttu-id="bfc4c-721">Transparent</span><span class="sxs-lookup"><span data-stu-id="bfc4c-721">Transparent</span></span>|  
    |<span data-ttu-id="bfc4c-722">Vollständig kritisch</span><span class="sxs-lookup"><span data-stu-id="bfc4c-722">Fully critical</span></span>|<span data-ttu-id="bfc4c-723">Kritisch</span><span class="sxs-lookup"><span data-stu-id="bfc4c-723">Critical</span></span>|<span data-ttu-id="bfc4c-724">Kritisch</span><span class="sxs-lookup"><span data-stu-id="bfc4c-724">Critical</span></span>|  
    |<span data-ttu-id="bfc4c-725">Gemischte Transparenz</span><span class="sxs-lookup"><span data-stu-id="bfc4c-725">Mixed transparency</span></span>|<span data-ttu-id="bfc4c-726">Transparent</span><span class="sxs-lookup"><span data-stu-id="bfc4c-726">Transparent</span></span>|<span data-ttu-id="bfc4c-727">Transparent</span><span class="sxs-lookup"><span data-stu-id="bfc4c-727">Transparent</span></span>|  
    |<span data-ttu-id="bfc4c-728">Sicherheits agnostisch</span><span class="sxs-lookup"><span data-stu-id="bfc4c-728">Security-agnostic</span></span>|<span data-ttu-id="bfc4c-729">Sicherheitskritisch</span><span class="sxs-lookup"><span data-stu-id="bfc4c-729">Safe-critical</span></span>|<span data-ttu-id="bfc4c-730">Kritisch</span><span class="sxs-lookup"><span data-stu-id="bfc4c-730">Critical</span></span>|  
  
     <span data-ttu-id="bfc4c-731">Wenn Sie z. b. eine dynamische Methode einem Typ zuordnen, der in mscorlib.dll mit gemischter Transparenz der Ebene 2 steht, ist die dynamische Methode transparent und kann keinen kritischen Code ausführen.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-731">For example, if you associate a dynamic method with a type that is in mscorlib.dll, which has level 2 mixed transparency, the dynamic method is transparent and cannot execute critical code.</span></span> <span data-ttu-id="bfc4c-732">Informationen zu Transparenzstufen finden Sie unter [Sicherheits transparenter Code, Ebene 1](/dotnet/framework/misc/security-transparent-code-level-1) und [Sicherheits transparenter Code, Ebene 2](/dotnet/framework/misc/security-transparent-code-level-2).</span><span class="sxs-lookup"><span data-stu-id="bfc4c-732">For information about transparency levels, see [Security-Transparent Code, Level 1](/dotnet/framework/misc/security-transparent-code-level-1) and [Security-Transparent Code, Level 2](/dotnet/framework/misc/security-transparent-code-level-2).</span></span>  
  
    > [!NOTE]
    >  <span data-ttu-id="bfc4c-733">Das Zuordnen einer dynamischen Methode zu einem Modul in einer vertrauenswürdigen Assembly mit einer vertrauenswürdigen Ebene 1, die Sicherheits agnostisch ist (z. b. System.dll), lässt keine Vertrauensstellung zu.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-733">Associating a dynamic method with a module in a trusted level 1 assembly that is security-agnostic, such as System.dll, does not permit elevation of trust.</span></span> <span data-ttu-id="bfc4c-734">Wenn der Berechtigungs Satz des Codes, der die dynamische Methode aufruft, nicht den Grant-Satz System.dll (also voll vertrauenswürdig) enthält, <xref:System.Security.SecurityException> wird beim Aufrufen der dynamischen Methode ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-734">If the grant set of the code that calls the dynamic method does not include the grant set of System.dll (that is, full trust), <xref:System.Security.SecurityException> is thrown when the dynamic method is called.</span></span>  
  
-   <span data-ttu-id="bfc4c-735">Die Transparenz einer dynamischen Methode, die einer teilweise vertrauenswürdigen Assembly zugeordnet ist, hängt davon ab, wie die Assembly geladen wird.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-735">The transparency of a dynamic method that is associated with a partially trusted assembly depends on how the assembly is loaded.</span></span> <span data-ttu-id="bfc4c-736">Wenn die Assembly mit teilweiser Vertrauenswürdigkeit (z. b. in eine Sandbox-Anwendungsdomäne) geladen wird, ignoriert die Laufzeit die Sicherheits Anmerkungen der Assembly.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-736">If the assembly is loaded with partial trust (for example, into a sandboxed application domain), the runtime ignores the security annotations of the assembly.</span></span> <span data-ttu-id="bfc4c-737">Die Assembly und alle zugehörigen Typen und Member, einschließlich dynamischer Methoden, werden als transparent behandelt.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-737">The assembly and all its types and members, including dynamic methods, are treated as transparent.</span></span> <span data-ttu-id="bfc4c-738">Die Laufzeit achtet nur dann auf Sicherheits Anmerkungen, wenn die teilweise vertrauenswürdige Assembly mit voller Vertrauenswürdigkeit (z. b. in die Standard Anwendungsdomäne einer Desktop Anwendung) geladen wird.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-738">The runtime pays attention to security annotations only if the partial-trust assembly is loaded with full trust (for example, into the default application domain of a desktop application).</span></span> <span data-ttu-id="bfc4c-739">In diesem Fall weist die Runtime der dynamischen Methode die Standard Transparenz für Methoden entsprechend den Anmerkungen der Assembly zu.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-739">In that case, the runtime assigns the dynamic method the default transparency for methods according to the assembly's annotations.</span></span>  
  
 <span data-ttu-id="bfc4c-740">Weitere Informationen zur Reflektionsausgabe und Transparenz finden Sie unter [Sicherheitsprobleme bei der Reflektionsausgabe](/dotnet/framework/reflection-and-codedom/security-issues-in-reflection-emit).</span><span class="sxs-lookup"><span data-stu-id="bfc4c-740">For more information about reflection emit and transparency, see [Security Issues in Reflection Emit](/dotnet/framework/reflection-and-codedom/security-issues-in-reflection-emit).</span></span> <span data-ttu-id="bfc4c-741">Informationen zur Transparenz finden Sie unter [Sicherheitsänderungen](/dotnet/framework/security/security-changes).</span><span class="sxs-lookup"><span data-stu-id="bfc4c-741">For information about transparency, see [Security Changes](/dotnet/framework/security/security-changes).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="bfc4c-742">Die dynamische Methode weist keinen Methodentext auf.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-742">The dynamic method doesn't have a method body.</span></span></exception>
        <altmember cref="P:System.Reflection.Emit.DynamicMethod.IsSecurityCritical" />
        <altmember cref="P:System.Reflection.Emit.DynamicMethod.IsSecuritySafeCritical" />
        <related type="Article" href="/dotnet/framework/reflection-and-codedom/security-issues-in-reflection-emit"><span data-ttu-id="bfc4c-743">Sicherheitsaspekte bei der Reflektionsausgabe</span><span class="sxs-lookup"><span data-stu-id="bfc4c-743">Security Issues in Reflection Emit</span></span></related>
        <related type="Article" href="/dotnet/framework/reflection-and-codedom/security-considerations-for-reflection"><span data-ttu-id="bfc4c-744">Sicherheitsüberlegungen für die Reflektion</span><span class="sxs-lookup"><span data-stu-id="bfc4c-744">Security Considerations for Reflection</span></span></related>
        <related type="Article" href="/dotnet/framework/security/security-changes"><span data-ttu-id="bfc4c-745">Änderungen der Sicherheit in .NET Framework 4.0</span><span class="sxs-lookup"><span data-stu-id="bfc4c-745">Security Changes in the .NET Framework Version 4.0</span></span></related>
        <related type="Article" href="/dotnet/framework/misc/security-transparent-code-level-1"><span data-ttu-id="bfc4c-746">Sicherheitstransparenter Code, Ebene 1</span><span class="sxs-lookup"><span data-stu-id="bfc4c-746">Security-Transparent Code, Level 1</span></span></related>
        <related type="Article" href="/dotnet/framework/misc/security-transparent-code-level-2"><span data-ttu-id="bfc4c-747">Sicherheitstransparenter Code, Ebene 2</span><span class="sxs-lookup"><span data-stu-id="bfc4c-747">Security-Transparent Code, Level 2</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="MethodHandle">
      <MemberSignature Language="C#" Value="public override RuntimeMethodHandle MethodHandle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.RuntimeMethodHandle MethodHandle" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.DynamicMethod.MethodHandle" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property MethodHandle As RuntimeMethodHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property RuntimeMethodHandle MethodHandle { RuntimeMethodHandle get(); };" />
      <MemberSignature Language="F#" Value="member this.MethodHandle : RuntimeMethodHandle" Usage="System.Reflection.Emit.DynamicMethod.MethodHandle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit.Lightweight</AssemblyName>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.RuntimeMethodHandle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bfc4c-748">Für dynamische Methoden nicht unterstützt.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-748">Not supported for dynamic methods.</span></span></summary>
        <value><span data-ttu-id="bfc4c-749">Für dynamische Methoden nicht unterstützt.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-749">Not supported for dynamic methods.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="bfc4c-750">Für dynamische Methoden nicht zulässig.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-750">Not allowed for dynamic methods.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="MethodImplementationFlags">
      <MemberSignature Language="C#" Value="public override System.Reflection.MethodImplAttributes MethodImplementationFlags { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Reflection.MethodImplAttributes MethodImplementationFlags" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.DynamicMethod.MethodImplementationFlags" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property MethodImplementationFlags As MethodImplAttributes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Reflection::MethodImplAttributes MethodImplementationFlags { System::Reflection::MethodImplAttributes get(); };" />
      <MemberSignature Language="F#" Value="member this.MethodImplementationFlags : System.Reflection.MethodImplAttributes" Usage="System.Reflection.Emit.DynamicMethod.MethodImplementationFlags" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit.Lightweight</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodImplAttributes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Module">
      <MemberSignature Language="C#" Value="public override System.Reflection.Module Module { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.Module Module" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.DynamicMethod.Module" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Module As Module" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Reflection::Module ^ Module { System::Reflection::Module ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Module : System.Reflection.Module" Usage="System.Reflection.Emit.DynamicMethod.Module" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit.Lightweight</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Module</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bfc4c-751">Ruft das Modul ab, dem die dynamische Methode logisch zugeordnet ist.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-751">Gets the module with which the dynamic method is logically associated.</span></span></summary>
        <value><span data-ttu-id="bfc4c-752">Das <see cref="T:System.Reflection.Module" />, dem die aktuelle dynamische Methode zugeordnet ist.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-752">The <see cref="T:System.Reflection.Module" /> with which the current dynamic method is associated.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bfc4c-753">Wenn beim Erstellen der dynamischen Methode ein Modul angegeben wurde, gibt diese Eigenschaft dieses Modul zurück.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-753">If a module was specified when the dynamic method was created, this property returns that module.</span></span> <span data-ttu-id="bfc4c-754">Wenn ein Typ beim Erstellen der dynamischen Methode als Besitzer angegeben wurde, gibt diese Eigenschaft das Modul zurück, das diesen Typ enthält.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-754">If a type was specified as the owner when the dynamic method was created, this property returns the module which contains that type.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bfc4c-755">Im folgenden Codebeispiel wird die- <xref:System.Reflection.Emit.DynamicMethod.Module%2A> Eigenschaft einer dynamischen Methode angezeigt.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-755">The following code example displays the <xref:System.Reflection.Emit.DynamicMethod.Module%2A> property of a dynamic method.</span></span> <span data-ttu-id="bfc4c-756">Dieses Codebeispiel ist Teil eines größeren Beispiels, das für die-Klasse bereitgestellt wird <xref:System.Reflection.Emit.DynamicMethod> .</span><span class="sxs-lookup"><span data-stu-id="bfc4c-756">This code example is part of a larger example provided for the <xref:System.Reflection.Emit.DynamicMethod> class.</span></span>  
  
 [!code-cpp[Reflection.DynamicMethod.All#26](~/samples/snippets/cpp/VS_Snippets_CLR/Reflection.DynamicMethod.All/cpp/source.cpp#26)]
 [!code-csharp[Reflection.DynamicMethod.All#26](~/samples/snippets/csharp/VS_Snippets_CLR/Reflection.DynamicMethod.All/CS/source.cs#26)]
 [!code-vb[Reflection.DynamicMethod.All#26](~/samples/snippets/visualbasic/VS_Snippets_CLR/Reflection.DynamicMethod.All/VB/source.vb#26)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public override string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.DynamicMethod.Name" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Name { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="System.Reflection.Emit.DynamicMethod.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit.Lightweight</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bfc4c-757">Ruft den Namen der dynamischen Methode ab.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-757">Gets the name of the dynamic method.</span></span></summary>
        <value><span data-ttu-id="bfc4c-758">Der einfache Name der Methode.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-758">The simple name of the method.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="bfc4c-759">Es ist nicht notwendig, dynamische Methoden zu benennen.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-759">It is not necessary to name dynamic methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bfc4c-760">Im folgenden Codebeispiel wird der Name einer dynamischen Methode angezeigt.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-760">The following code example displays the name of a dynamic method.</span></span> <span data-ttu-id="bfc4c-761">Dieses Codebeispiel ist Teil eines größeren Beispiels, das für die-Klasse bereitgestellt wird <xref:System.Reflection.Emit.DynamicMethod> .</span><span class="sxs-lookup"><span data-stu-id="bfc4c-761">This code example is part of a larger example provided for  the <xref:System.Reflection.Emit.DynamicMethod> class.</span></span>  
  
 [!code-cpp[Reflection.DynamicMethod.All#27](~/samples/snippets/cpp/VS_Snippets_CLR/Reflection.DynamicMethod.All/cpp/source.cpp#27)]
 [!code-csharp[Reflection.DynamicMethod.All#27](~/samples/snippets/csharp/VS_Snippets_CLR/Reflection.DynamicMethod.All/CS/source.cs#27)]
 [!code-vb[Reflection.DynamicMethod.All#27](~/samples/snippets/visualbasic/VS_Snippets_CLR/Reflection.DynamicMethod.All/VB/source.vb#27)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReflectedType">
      <MemberSignature Language="C#" Value="public override Type? ReflectedType { get; }" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ReflectedType" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.DynamicMethod.ReflectedType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property ReflectedType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Type ^ ReflectedType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ReflectedType : Type" Usage="System.Reflection.Emit.DynamicMethod.ReflectedType" />
      <MemberSignature Language="C#" Value="public override Type ReflectedType { get; }" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.1;xamarinandroid-7.1;xamarinmac-3.0" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit.Lightweight</AssemblyName>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bfc4c-762">Ruft die Klasse ab, die bei der Reflektion zum Abrufen der Methode verwendet wurde.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-762">Gets the class that was used in reflection to obtain the method.</span></span></summary>
        <value><span data-ttu-id="bfc4c-763">Immer <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-763">Always <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bfc4c-764">Diese Eigenschaft gibt immer `null` für dynamische Methoden zurück.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-764">This property always returns `null` for dynamic methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bfc4c-765">Im folgenden Codebeispiel wird der reflektierte Typ einer dynamischen Methode angezeigt.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-765">The following code example displays the reflected type of a dynamic method.</span></span> <span data-ttu-id="bfc4c-766">Dieses Codebeispiel ist Teil eines größeren Beispiels, das für die-Klasse bereitgestellt wird <xref:System.Reflection.Emit.DynamicMethod> .</span><span class="sxs-lookup"><span data-stu-id="bfc4c-766">This code example is part of a larger example provided for the <xref:System.Reflection.Emit.DynamicMethod> class.</span></span>  
  
 [!code-cpp[Reflection.DynamicMethod.All#28](~/samples/snippets/cpp/VS_Snippets_CLR/Reflection.DynamicMethod.All/cpp/source.cpp#28)]
 [!code-csharp[Reflection.DynamicMethod.All#28](~/samples/snippets/csharp/VS_Snippets_CLR/Reflection.DynamicMethod.All/CS/source.cs#28)]
 [!code-vb[Reflection.DynamicMethod.All#28](~/samples/snippets/visualbasic/VS_Snippets_CLR/Reflection.DynamicMethod.All/VB/source.vb#28)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReturnParameter">
      <MemberSignature Language="C#" Value="public override System.Reflection.ParameterInfo ReturnParameter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.ParameterInfo ReturnParameter" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.DynamicMethod.ReturnParameter" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property ReturnParameter As ParameterInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Reflection::ParameterInfo ^ ReturnParameter { System::Reflection::ParameterInfo ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ReturnParameter : System.Reflection.ParameterInfo" Usage="System.Reflection.Emit.DynamicMethod.ReturnParameter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit.Lightweight</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.ParameterInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bfc4c-767">Ruft den Rückgabeparameter der dynamischen Methode ab.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-767">Gets the return parameter of the dynamic method.</span></span></summary>
        <value><span data-ttu-id="bfc4c-768">Immer <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-768">Always <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bfc4c-769">Diese Eigenschaft gibt immer `null` für dynamische Methoden zurück.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-769">This property always returns `null` for dynamic methods.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReturnType">
      <MemberSignature Language="C#" Value="public override Type ReturnType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ReturnType" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.DynamicMethod.ReturnType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property ReturnType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Type ^ ReturnType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ReturnType : Type" Usage="System.Reflection.Emit.DynamicMethod.ReturnType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit.Lightweight</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bfc4c-770">Ruft den Typ des Rückgabewerts für die dynamische Methode ab.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-770">Gets the type of return value for the dynamic method.</span></span></summary>
        <value><span data-ttu-id="bfc4c-771">Ein <see cref="T:System.Type" />, das den Typ des Rückgabewerts der aktuellen Methode darstellt. <see cref="T:System.Void" />, wenn die Methode keinen Rückgabetyp besitzt.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-771">A <see cref="T:System.Type" /> representing the type of the return value of the current method; <see cref="T:System.Void" /> if the method has no return type.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bfc4c-772">Wenn `null` beim Erstellen der dynamischen Methode für den Rückgabetyp angegeben wurde, gibt diese Eigenschaft zurück <xref:System.Void?displayProperty=nameWithType> .</span><span class="sxs-lookup"><span data-stu-id="bfc4c-772">If `null` was specified for the return type when the dynamic method was created, this property returns <xref:System.Void?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bfc4c-773">Im folgenden Codebeispiel wird der Rückgabetyp einer dynamischen Methode angezeigt.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-773">The following code example displays the return type of a dynamic method.</span></span> <span data-ttu-id="bfc4c-774">Dieses Codebeispiel ist Teil eines größeren Beispiels, das für die-Klasse bereitgestellt wird <xref:System.Reflection.Emit.DynamicMethod> .</span><span class="sxs-lookup"><span data-stu-id="bfc4c-774">This code example is part of a larger example provided for the <xref:System.Reflection.Emit.DynamicMethod> class.</span></span>  
  
 [!code-cpp[Reflection.DynamicMethod.All#30](~/samples/snippets/cpp/VS_Snippets_CLR/Reflection.DynamicMethod.All/cpp/source.cpp#30)]
 [!code-csharp[Reflection.DynamicMethod.All#30](~/samples/snippets/csharp/VS_Snippets_CLR/Reflection.DynamicMethod.All/CS/source.cs#30)]
 [!code-vb[Reflection.DynamicMethod.All#30](~/samples/snippets/visualbasic/VS_Snippets_CLR/Reflection.DynamicMethod.All/VB/source.vb#30)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReturnTypeCustomAttributes">
      <MemberSignature Language="C#" Value="public override System.Reflection.ICustomAttributeProvider ReturnTypeCustomAttributes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.ICustomAttributeProvider ReturnTypeCustomAttributes" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.DynamicMethod.ReturnTypeCustomAttributes" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property ReturnTypeCustomAttributes As ICustomAttributeProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Reflection::ICustomAttributeProvider ^ ReturnTypeCustomAttributes { System::Reflection::ICustomAttributeProvider ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ReturnTypeCustomAttributes : System.Reflection.ICustomAttributeProvider" Usage="System.Reflection.Emit.DynamicMethod.ReturnTypeCustomAttributes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit.Lightweight</AssemblyName>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.ICustomAttributeProvider</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bfc4c-775">Ruft die benutzerdefinierten Attribute des Rückgabetyps für die dynamische Methode ab.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-775">Gets the custom attributes of the return type for the dynamic method.</span></span></summary>
        <value><span data-ttu-id="bfc4c-776">Ein <see cref="T:System.Reflection.ICustomAttributeProvider" />-Objekt, das die benutzerdefinierten Attribute des Rückgabetyps für die dynamische Methode darstellt.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-776">An <see cref="T:System.Reflection.ICustomAttributeProvider" /> representing the custom attributes of the return type for the dynamic method.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bfc4c-777">Benutzerdefinierte Attribute werden für den Rückgabetyp einer dynamischen Methode nicht unterstützt, sodass das von der-Methode zurückgegebene Array von benutzerdefinierten Attributen <xref:System.Reflection.ICustomAttributeProvider.GetCustomAttributes%2A> immer leer ist.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-777">Custom attributes are not supported on the return type of a dynamic method, so the array of custom attributes returned by the <xref:System.Reflection.ICustomAttributeProvider.GetCustomAttributes%2A> method is always empty.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bfc4c-778">Im folgenden Codebeispiel wird gezeigt, wie die benutzerdefinierten Attribute des Rückgabe Typs einer dynamischen Methode angezeigt werden.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-778">The following code example shows how to display the custom attributes of the return type of a dynamic method.</span></span> <span data-ttu-id="bfc4c-779">Dieses Codebeispiel ist Teil eines größeren Beispiels, das für die-Klasse bereitgestellt wird <xref:System.Reflection.Emit.DynamicMethod> .</span><span class="sxs-lookup"><span data-stu-id="bfc4c-779">This code example is part of a larger example provided for the <xref:System.Reflection.Emit.DynamicMethod> class.</span></span>  
  
 [!code-cpp[Reflection.DynamicMethod.All#31](~/samples/snippets/cpp/VS_Snippets_CLR/Reflection.DynamicMethod.All/cpp/source.cpp#31)]
 [!code-csharp[Reflection.DynamicMethod.All#31](~/samples/snippets/csharp/VS_Snippets_CLR/Reflection.DynamicMethod.All/CS/source.cs#31)]
 [!code-vb[Reflection.DynamicMethod.All#31](~/samples/snippets/visualbasic/VS_Snippets_CLR/Reflection.DynamicMethod.All/VB/source.vb#31)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Reflection.Emit.DynamicMethod.ReturnType" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.DynamicMethod.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="dynamicMethod.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit.Lightweight</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="bfc4c-780">Gibt die Signatur der Methode als Zeichenfolge zurück.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-780">Returns the signature of the method, represented as a string.</span></span></summary>
        <returns><span data-ttu-id="bfc4c-781">Eine Zeichenfolge, die die Methodensignatur darstellt.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-781">A string representing the method signature.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bfc4c-782">Die Signatur umfasst nur Typen und den Methodennamen, sofern vorhanden.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-782">The signature includes only types and the method name, if any.</span></span> <span data-ttu-id="bfc4c-783">Parameter Namen sind nicht eingeschlossen.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-783">Parameter names are not included.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bfc4c-784">Im folgenden Codebeispiel wird die- <xref:System.Reflection.Emit.DynamicMethod.ToString%2A> Methode einer dynamischen Methode angezeigt.</span><span class="sxs-lookup"><span data-stu-id="bfc4c-784">The following code example displays the <xref:System.Reflection.Emit.DynamicMethod.ToString%2A> method of a dynamic method.</span></span> <span data-ttu-id="bfc4c-785">Dieses Codebeispiel ist Teil eines größeren Beispiels, das für die-Klasse bereitgestellt wird <xref:System.Reflection.Emit.DynamicMethod> .</span><span class="sxs-lookup"><span data-stu-id="bfc4c-785">This code example is part of a larger example provided for the <xref:System.Reflection.Emit.DynamicMethod> class.</span></span>  
  
 [!code-cpp[Reflection.DynamicMethod.All#32](~/samples/snippets/cpp/VS_Snippets_CLR/Reflection.DynamicMethod.All/cpp/source.cpp#32)]
 [!code-csharp[Reflection.DynamicMethod.All#32](~/samples/snippets/csharp/VS_Snippets_CLR/Reflection.DynamicMethod.All/CS/source.cs#32)]
 [!code-vb[Reflection.DynamicMethod.All#32](~/samples/snippets/visualbasic/VS_Snippets_CLR/Reflection.DynamicMethod.All/VB/source.vb#32)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
