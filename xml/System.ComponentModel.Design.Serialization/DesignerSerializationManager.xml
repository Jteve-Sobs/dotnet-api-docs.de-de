<Type Name="DesignerSerializationManager" FullName="System.ComponentModel.Design.Serialization.DesignerSerializationManager">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="f23388164cf88ee0c708863bd2cf512e18c5f9bb" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37698668" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class DesignerSerializationManager : IServiceProvider, System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DesignerSerializationManager extends System.Object implements class System.ComponentModel.Design.Serialization.IDesignerSerializationManager, class System.IServiceProvider" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Design.Serialization.DesignerSerializationManager" />
  <TypeSignature Language="VB.NET" Value="Public Class DesignerSerializationManager&#xA;Implements IDesignerSerializationManager, IServiceProvider" />
  <TypeSignature Language="C++ CLI" Value="public ref class DesignerSerializationManager : IServiceProvider, System::ComponentModel::Design::Serialization::IDesignerSerializationManager" />
  <TypeSignature Language="F#" Value="type DesignerSerializationManager = class&#xA;    interface IDesignerSerializationManager&#xA;    interface IServiceProvider" />
  <AssemblyInfo>
    <AssemblyName>System.Design</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ComponentModel.Design.Serialization.IDesignerSerializationManager</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IServiceProvider</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="275f6-101">Provides an implementation of the <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> interface.</span>
      <span class="sxs-lookup">
        <span data-stu-id="275f6-101">Provides an implementation of the <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> interface.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="275f6-102">Die <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager> Schnittstelle soll ein formatunabhängiges-Schnittstelle, um ein Objekt sein, die Serialisierung steuert.</span><span class="sxs-lookup"><span data-stu-id="275f6-102">The <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager> interface is designed to be a format-independent interface to an object that controls serialization.</span></span> <span data-ttu-id="275f6-103">Es bietet im Wesentlichen Kontext und Dienste auf Serialisierungsprogramme, die die Deserialisierung tatsächlich ausführen.</span><span class="sxs-lookup"><span data-stu-id="275f6-103">It essentially provides context and services to serializers, which actually perform the deserialization.</span></span> <span data-ttu-id="275f6-104"><xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager> unterstützt bei der Deserialisierung durch Aufzeichnen der Objekte.</span><span class="sxs-lookup"><span data-stu-id="275f6-104"><xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager> assists in the deserialization process by keeping track of objects.</span></span> <span data-ttu-id="275f6-105">Dies ist ähnlich wie im Verfahren, um die <xref:System.ComponentModel.Design.IDesignerHost> Schnittstelle: Designer stellen die Benutzeroberfläche (UI), tatsächlich bereit und <xref:System.ComponentModel.Design.IDesignerHost> stellt die Verbindung, andere Designer zusammenarbeiten können.</span><span class="sxs-lookup"><span data-stu-id="275f6-105">This is similar in technique to the <xref:System.ComponentModel.Design.IDesignerHost> interface: designers actually provide the user interface (UI), and <xref:System.ComponentModel.Design.IDesignerHost> provides the glue that allows different designers to work together.</span></span>  
  
 <span data-ttu-id="275f6-106">Die <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager> -Klasse implementiert <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager>.</span><span class="sxs-lookup"><span data-stu-id="275f6-106">The <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager> class implements <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager>.</span></span> <span data-ttu-id="275f6-107">Es wurde entwickelt, um eine generische Form der Deserialisierung bereitzustellen, die zur Laufzeit Serialisierungsprogramme wie ähnelt der <xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter>.</span><span class="sxs-lookup"><span data-stu-id="275f6-107">It is designed to provide a generic form of deserialization that is similar to run-time serializers like the <xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter>.</span></span>  
  
 <span data-ttu-id="275f6-108">Die <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager> Klasse werden drei Ziele erreicht:</span><span class="sxs-lookup"><span data-stu-id="275f6-108">The <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager> class achieves three goals:</span></span>  
  
-   <span data-ttu-id="275f6-109">Es ist eine einfache, sofort einsatzbereite-Objekt, das zum Deserialisieren einer Vielzahl von Formaten verwendet werden kann.</span><span class="sxs-lookup"><span data-stu-id="275f6-109">It is a simple, turnkey object that can be used to deserialize a variety of formats.</span></span>  
  
-   <span data-ttu-id="275f6-110">Es ist generisch und nicht an ein bestimmtes Format gebunden.</span><span class="sxs-lookup"><span data-stu-id="275f6-110">It is generic and not tied to any particular format.</span></span> <span data-ttu-id="275f6-111">Es kann ebenso für CodeDOM-Deserialisierung sowie Markupdeserialisierung verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="275f6-111">It can be used equally for CodeDOM deserialization as well as markup deserialization.</span></span>  
  
-   <span data-ttu-id="275f6-112">Es ist erweiterbar und unterstützt verschiedene Serialisierungsmethoden, mit denen in Szenarien mit Kopieren/Einfügen und Rückgängig/Wiederholen.</span><span class="sxs-lookup"><span data-stu-id="275f6-112">It is extensible and supports different serialization methods that are used in copy/paste and undo/redo scenarios.</span></span>  
  
 <span data-ttu-id="275f6-113">Entwurfszeitserialisierung hat die folgenden Unterschiede gegenüber der Laufzeit-Objektserialisierung:</span><span class="sxs-lookup"><span data-stu-id="275f6-113">Design-time serialization has the following differences from run-time object serialization:</span></span>  
  
-   <span data-ttu-id="275f6-114">Das Objekt, das die Serialisierung ausführt unterscheidet sich in der Regel von der Laufzeit-Objekt, sodass Entwurfszeitlogik aus einer Komponente entfernt werden kann.</span><span class="sxs-lookup"><span data-stu-id="275f6-114">The object performing the serialization is generally separate from the run-time object, so that design-time logic can be removed from a component.</span></span>  
  
-   <span data-ttu-id="275f6-115">Das Serialisierungsschema geht davon aus, das Objekt wird vollständig initialisiert ist, erstellt werden, und klicken Sie dann durch Aufrufen von Eigenschaften und Methoden geändert, während der Deserialisierung.</span><span class="sxs-lookup"><span data-stu-id="275f6-115">The serialization scheme assumes the object will be created fully initialized, and then modified through property and method invocations during deserialization.</span></span>  
  
-   <span data-ttu-id="275f6-116">Eigenschaften eines Objekts mit Werten, die nie auf das Objekt festgelegt wurden (die Eigenschaften enthalten die Standardwerte) werden nicht serialisiert.</span><span class="sxs-lookup"><span data-stu-id="275f6-116">Properties of an object that have values that were never set on the object (the properties contain the default values) are not serialized.</span></span> <span data-ttu-id="275f6-117">Im Gegensatz dazu kann der Deserialisierungsstream Löcher aufweisen.</span><span class="sxs-lookup"><span data-stu-id="275f6-117">Conversely, the deserialization stream may have holes.</span></span>  
  
-   <span data-ttu-id="275f6-118">Augenmerk wird auf die Qualität des Inhalts in den Serialisierungsstream, anstatt die vollständige Serialisierung eines Objekts.</span><span class="sxs-lookup"><span data-stu-id="275f6-118">Emphasis is placed on the quality of the content within the serialization stream, rather than the full serialization of an object.</span></span> <span data-ttu-id="275f6-119">Dies bedeutet, dass das Objekt ist keine definierte Methode zum Serialisieren eines Objekts, übersprungen werden kann, anstatt eine Ausnahme auszulösen.</span><span class="sxs-lookup"><span data-stu-id="275f6-119">This means that if there is no defined way to serialize an object, that object may be skipped rather than throwing an exception.</span></span> <span data-ttu-id="275f6-120">Die Serialisierungs-Engine vorsehen, dass die Heuristik, die hier zu entscheiden, welche Fehler ignoriert werden können und welche nicht mehr wiederherstellbar sind.</span><span class="sxs-lookup"><span data-stu-id="275f6-120">The serialization engine may provide heuristics here to decide which failures can be ignored and which are unrecoverable.</span></span>  
  
-   <span data-ttu-id="275f6-121">Der Serialisierungsstream möglicherweise mehr Daten als für die Deserialisierung erforderlich ist.</span><span class="sxs-lookup"><span data-stu-id="275f6-121">The serialization stream may have more data than is needed for deserialization.</span></span> <span data-ttu-id="275f6-122">Serialisierung von Quellcode, hat z. B. Benutzercode, der mit dem der Code erforderlich, um ein Objektdiagramm deserialisiert werden soll.</span><span class="sxs-lookup"><span data-stu-id="275f6-122">Source code serialization, for example, has user code mixed in with the code needed to deserialize an object graph.</span></span> <span data-ttu-id="275f6-123">Mit diesem Benutzercode muss bei der Deserialisierung ignoriert und bei der Serialisierung beibehalten werden.</span><span class="sxs-lookup"><span data-stu-id="275f6-123">This user code must be ignored on deserialization and preserved on serialization.</span></span>  
  
 <span data-ttu-id="275f6-124">Aufgrund dieser Unterschiede gilt Entwurfszeitserialisierung ein anderes Serialisierungsmodell.</span><span class="sxs-lookup"><span data-stu-id="275f6-124">Because of these differences, a different serialization model applies to design-time serialization.</span></span> <span data-ttu-id="275f6-125">Dieses Modell nutzt eine separate diagrammserialisierungsmodul-Objekt für jeden Datentyp, der serialisiert wird.</span><span class="sxs-lookup"><span data-stu-id="275f6-125">This model utilizes a separate serializer object for each data type being serialized.</span></span> <span data-ttu-id="275f6-126">Jeder Serialisierer bietet seinen kleinen Beitrag auf das Problem als Ganzes.</span><span class="sxs-lookup"><span data-stu-id="275f6-126">Each serializer provides its small contribution to the problem as a whole.</span></span> <span data-ttu-id="275f6-127">Diese Serialisierungsprogramme werden alle über einen gemeinsamen Serialisierungs-Manager koordiniert.</span><span class="sxs-lookup"><span data-stu-id="275f6-127">These serializers are all coordinated through a common serialization manager.</span></span> <span data-ttu-id="275f6-128">Der Serialisierungs-Manager ist verantwortlich für die Zustandsverwaltung zwischen diesen verschiedenen Serialisierungsprogrammen.</span><span class="sxs-lookup"><span data-stu-id="275f6-128">The serialization manager is responsible for maintaining state between these different serializers.</span></span> <span data-ttu-id="275f6-129">Betrachten Sie beispielsweise die folgende Klasse:</span><span class="sxs-lookup"><span data-stu-id="275f6-129">As an example, consider the following class:</span></span>  
  
 [!code-csharp[System.ComponentModel.Design.Serialization.DesignerSerializationManager.SampleObject#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.Design.Serialization.DesignerSerializationManager.SampleObject/CS/Program.cs#2)]
 [!code-vb[System.ComponentModel.Design.Serialization.DesignerSerializationManager.SampleObject#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.Design.Serialization.DesignerSerializationManager.SampleObject/VB/Program.vb#2)]  
  
 <span data-ttu-id="275f6-130">Eine Instanz dieser Klasse nutzt drei verschiedene Serialisierer: eine für `SampleObject`, eine für Zeichenfolgen und eine für ganze Zahlen.</span><span class="sxs-lookup"><span data-stu-id="275f6-130">An instance of this class would utilize three different serializers: one for `SampleObject`, one for strings, and another for integers.</span></span> <span data-ttu-id="275f6-131">Das Serialisierungsprogramm für `SampleObject` wird das Stammserialisierungsprogramm bezeichnet, da `SampleObject` ist der Stamm des Graphen Serialisierung.</span><span class="sxs-lookup"><span data-stu-id="275f6-131">The serializer for `SampleObject` is called the root serializer because `SampleObject` is the root of the serialization graph.</span></span> <span data-ttu-id="275f6-132">Komplexere Objektgraphen können auch erstellt werden.</span><span class="sxs-lookup"><span data-stu-id="275f6-132">More complex object graphs can be created as well.</span></span> <span data-ttu-id="275f6-133">Betrachten Sie z. B., was passieren würde, wenn `SampleObject` wurden wie folgt geändert:</span><span class="sxs-lookup"><span data-stu-id="275f6-133">For example, consider what would happen if `SampleObject` were changed as follows:</span></span>  
  
 [!code-csharp[System.ComponentModel.Design.Serialization.DesignerSerializationManager.SampleObject#11](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.Design.Serialization.DesignerSerializationManager.SampleObject/CS/SampleObject.cs#11)]
 [!code-vb[System.ComponentModel.Design.Serialization.DesignerSerializationManager.SampleObject#11](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.Design.Serialization.DesignerSerializationManager.SampleObject/VB/SampleObject.vb#11)]  
  
 <span data-ttu-id="275f6-134">Dadurch können `SampleObject` auf ein untergeordnetes Element verfügen, die eine andere Instanz von sich selbst ist.</span><span class="sxs-lookup"><span data-stu-id="275f6-134">This allows `SampleObject` to have a child that is another instance of itself.</span></span> <span data-ttu-id="275f6-135">Der folgende Code füllt im Objektdiagramm enthalten:</span><span class="sxs-lookup"><span data-stu-id="275f6-135">The following code fills in the object graph:</span></span>  
  
 [!code-csharp[System.ComponentModel.Design.Serialization.DesignerSerializationManager.SampleObject#12](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.Design.Serialization.DesignerSerializationManager.SampleObject/CS/SampleObject.cs#12)]
 [!code-vb[System.ComponentModel.Design.Serialization.DesignerSerializationManager.SampleObject#12](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.Design.Serialization.DesignerSerializationManager.SampleObject/VB/SampleObject.vb#12)]  
  
 <span data-ttu-id="275f6-136">Wenn `root` serialisiert wird, werden vier Serialisierungsprogramme verwendet: ein Stammserialisierungsprogramm, ein Serialisierungsprogramm für das untergeordnete Element `SampleObject`, ein Serialisierungsprogramm für `int`, und ein Serialisierungsprogramm für `string`.</span><span class="sxs-lookup"><span data-stu-id="275f6-136">When `root` is serialized, there will be four serializers used: one root serializer, one serializer for the child `SampleObject`, one serializer for `int`, and one serializer for `string`.</span></span> <span data-ttu-id="275f6-137">Serialisierungsprogramme werden zwischengespeichert, basierend auf Typ, daher keine Notwendigkeit zum Erstellen eines Serialisierungsprogramms für jede Instanz der besteht `SampleObject`.</span><span class="sxs-lookup"><span data-stu-id="275f6-137">Serializers are cached based on type, so there is no need to create a serializer for each instance of `SampleObject`.</span></span>  
  
 <span data-ttu-id="275f6-138">Die <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager> Klasse basiert auf dem Konzept einer Serialisierungssitzung.</span><span class="sxs-lookup"><span data-stu-id="275f6-138">The <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager> class is based on the idea of a serialization session.</span></span> <span data-ttu-id="275f6-139">Eine Sitzung verwaltet den Zustand, der über die verschiedenen Serialisierungsprogramme zugegriffen werden kann.</span><span class="sxs-lookup"><span data-stu-id="275f6-139">A session maintains state that can be accessed by the various serializers.</span></span> <span data-ttu-id="275f6-140">Wenn eine Sitzung freigegeben wird, wird dieser Status zerstört.</span><span class="sxs-lookup"><span data-stu-id="275f6-140">When a session is disposed, this state is destroyed.</span></span> <span data-ttu-id="275f6-141">Dadurch wird sichergestellt, dass Serialisierungsprogramme größtenteils statusfrei und können zum Bereinigen der Serialisierungsprogramme, die beschädigt.</span><span class="sxs-lookup"><span data-stu-id="275f6-141">This helps to ensure that serializers remain largely stateless, and helps to clean up serializers that are have been corrupted.</span></span> <span data-ttu-id="275f6-142">Die folgende Tabelle beschreibt, wie der Status in und zwischen Sitzungen verwaltet wird.</span><span class="sxs-lookup"><span data-stu-id="275f6-142">The following tables describe how state is managed in and among sessions.</span></span>  
  
## <a name="global-state"></a><span data-ttu-id="275f6-143">Globaler Zustand</span><span class="sxs-lookup"><span data-stu-id="275f6-143">Global State</span></span>  
 <span data-ttu-id="275f6-144">Dieser Status ist im Besitz der Serialisierungs-Manager-Objekt, aber Sie ist unabhängig von der aktuellen Serialisierungssitzung.</span><span class="sxs-lookup"><span data-stu-id="275f6-144">This state is owned by the serialization manager object, but is independent of the current serialization session.</span></span>  
  
|<span data-ttu-id="275f6-145">Object</span><span class="sxs-lookup"><span data-stu-id="275f6-145">Object</span></span>|<span data-ttu-id="275f6-146">Verwendung</span><span class="sxs-lookup"><span data-stu-id="275f6-146">Usage</span></span>|  
|------------|-----------|  
|<span data-ttu-id="275f6-147">Serialisierungsprovider</span><span class="sxs-lookup"><span data-stu-id="275f6-147">Serialization providers</span></span>|<span data-ttu-id="275f6-148">Objekte, die sich selbst als benutzerdefinierte Serialisierungsprovider hinzufügen können.</span><span class="sxs-lookup"><span data-stu-id="275f6-148">Objects can add themselves as custom serialization providers.</span></span> <span data-ttu-id="275f6-149">Da diese Anbieter, zum Suchen von Serialisierungsprogrammen verwendet werden, Überleben diese eine Serialisierungssitzung.</span><span class="sxs-lookup"><span data-stu-id="275f6-149">Because these providers are used to locate serializers, they outlive a serialization session.</span></span>|  
  
## <a name="session-owned-state"></a><span data-ttu-id="275f6-150">Status im Besitz der Sitzung</span><span class="sxs-lookup"><span data-stu-id="275f6-150">Session-Owned State</span></span>  
 <span data-ttu-id="275f6-151">Dieser Status ist im Besitz einer Sitzungs und zerstört wird, wenn eine Sitzung zerstört wird.</span><span class="sxs-lookup"><span data-stu-id="275f6-151">This state is owned by a session and is destroyed when a session is destroyed.</span></span> <span data-ttu-id="275f6-152">Daher wird beim Zugreifen auf Eigenschaften oder Methoden, die diesen Zustand ändern, eine Ausnahme ausgelöst, ist der Serialisierungs-Manager nicht in einer aktiven Sitzung.</span><span class="sxs-lookup"><span data-stu-id="275f6-152">Consequently, accessing any properties or methods that would manipulate this state will throw an exception if the serialization manager is not in an active session.</span></span>  
  
|<span data-ttu-id="275f6-153">Object</span><span class="sxs-lookup"><span data-stu-id="275f6-153">Object</span></span>|<span data-ttu-id="275f6-154">Verwendung</span><span class="sxs-lookup"><span data-stu-id="275f6-154">Usage</span></span>|  
|------------|-----------|  
|<span data-ttu-id="275f6-155"><xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ResolveName>-Ereignis</span><span class="sxs-lookup"><span data-stu-id="275f6-155"><xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ResolveName> event</span></span>|<span data-ttu-id="275f6-156">Die <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ResolveName> Ereignis ein Serialisierungsprogramm zu zusätzlichen Auflösung des Namens angefügt ist.</span><span class="sxs-lookup"><span data-stu-id="275f6-156">The <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ResolveName> event is attached by a serializer to provide additional resolution of names.</span></span> <span data-ttu-id="275f6-157">Alle Handler werden getrennt von der dieses Ereignis, wenn eine Sitzung beendet wird.</span><span class="sxs-lookup"><span data-stu-id="275f6-157">All handlers are detached from this event when a session terminates.</span></span>|  
|<span data-ttu-id="275f6-158"><xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SerializationComplete>-Ereignis</span><span class="sxs-lookup"><span data-stu-id="275f6-158"><xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SerializationComplete> event</span></span>|<span data-ttu-id="275f6-159">Die <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SerializationComplete> Ereignis wird ausgelöst, kurz bevor eine-Sitzung gelöscht wird.</span><span class="sxs-lookup"><span data-stu-id="275f6-159">The <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SerializationComplete> event is raised just before a session is disposed.</span></span> <span data-ttu-id="275f6-160">Alle Handler werden dann von diesem Ereignis getrennt.</span><span class="sxs-lookup"><span data-stu-id="275f6-160">Then, all handlers are detached from this event.</span></span>|  
|<span data-ttu-id="275f6-161">Namenstabelle</span><span class="sxs-lookup"><span data-stu-id="275f6-161">Name table</span></span>|<span data-ttu-id="275f6-162">Der Serialisierungs-Manager verwaltet eine Tabelle, die zwischen Objekten und deren Namen zuordnet.</span><span class="sxs-lookup"><span data-stu-id="275f6-162">The serialization manager maintains a table that maps between objects and their names.</span></span> <span data-ttu-id="275f6-163">Serialisierungsprogramme möglicherweise Objekte zur leichteren Identifizierung zu benennen.</span><span class="sxs-lookup"><span data-stu-id="275f6-163">Serializers may give objects names for easy identification.</span></span> <span data-ttu-id="275f6-164">Dieser Namenstabelle wird gelöscht, wenn die Sitzung beendet wird.</span><span class="sxs-lookup"><span data-stu-id="275f6-164">This name table is cleared when the session terminates.</span></span>|  
|<span data-ttu-id="275f6-165">Serialisierungsprogramm-cache</span><span class="sxs-lookup"><span data-stu-id="275f6-165">Serializer cache</span></span>|<span data-ttu-id="275f6-166">Der Serialisierungs-Manager verwaltet einen Cache von Serialisierungsprogrammen, die sie gebeten hat, angeben.</span><span class="sxs-lookup"><span data-stu-id="275f6-166">The serialization manager maintains a cache of serializers it has been asked to supply.</span></span> <span data-ttu-id="275f6-167">Dieser Cache wird gelöscht, wenn die Sitzung beendet wird.</span><span class="sxs-lookup"><span data-stu-id="275f6-167">This cache is cleared when the session terminates.</span></span> <span data-ttu-id="275f6-168">Die öffentliche <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetSerializer%2A> Methode kann zu einem beliebigen Zeitpunkt sicher aufgerufen werden, aber der Wert wird nur zwischengespeichert, wenn sie innerhalb einer Sitzung aus aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="275f6-168">The public <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetSerializer%2A> method can safely be called at any time, but its value is cached only if it is called from within a session.</span></span>|  
|<span data-ttu-id="275f6-169">Kontextstapel</span><span class="sxs-lookup"><span data-stu-id="275f6-169">Context stack</span></span>|<span data-ttu-id="275f6-170">Der Serialisierungs-Manager verwaltet, ein Objekt namens den Kontextstapel, das Sie zugreifen können, mit der <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Context%2A> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="275f6-170">The serialization manager maintains an object called the context stack, which you can access with the <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Context%2A> property.</span></span> <span data-ttu-id="275f6-171">Serialisierungsprogramme können diesem Stapel verwenden, um zusätzliche Informationen zu speichern, die andere Serialisierungsprogramme zur Verfügung steht.</span><span class="sxs-lookup"><span data-stu-id="275f6-171">Serializers can use this stack to store additional information that is available to other serializers.</span></span> <span data-ttu-id="275f6-172">Beispielsweise kann ein Serialisierungsprogramm, das einen Eigenschaftswert serialisiert Namen der Eigenschaft auf dem Serialisierungsstapel legen, bevor der zu serialisierende Wert.</span><span class="sxs-lookup"><span data-stu-id="275f6-172">For example, a serializer that is serializing a property value can push the property name on the serialization stack before asking the value to serialize.</span></span> <span data-ttu-id="275f6-173">Dieser Stapel ist deaktiviert, wenn die Sitzung beendet wird.</span><span class="sxs-lookup"><span data-stu-id="275f6-173">This stack is cleared when the session is terminated.</span></span>|  
|<span data-ttu-id="275f6-174">Fehlerliste</span><span class="sxs-lookup"><span data-stu-id="275f6-174">Error list</span></span>|<span data-ttu-id="275f6-175">Der Serialisierungs-Manager verwaltet eine Liste von Fehlern, die während der Serialisierung aufgetreten sind.</span><span class="sxs-lookup"><span data-stu-id="275f6-175">The serialization manager maintains a list of errors that occurred during serialization.</span></span> <span data-ttu-id="275f6-176">Diese Liste, die über zugegriffen wird die <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.Errors%2A> -Eigenschaft deaktiviert ist, wenn die Sitzung beendet wird.</span><span class="sxs-lookup"><span data-stu-id="275f6-176">This list, which is accessed through the <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.Errors%2A> property, is cleared when the session is terminated.</span></span> <span data-ttu-id="275f6-177">Zugreifen auf die <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.Errors%2A> Eigenschaft zwischen den Sitzungen führt zu einer Ausnahme.</span><span class="sxs-lookup"><span data-stu-id="275f6-177">Accessing the <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.Errors%2A> property between sessions will result in an exception.</span></span>|  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
    <altmember cref="T:System.ComponentModel.Design.IDesignerHost" />
    <altmember cref="T:System.ComponentModel.Design.Serialization.ContextStack" />
    <altmember cref="T:System.IServiceProvider" />
    <altmember cref="T:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="275f6-178">Initializes a new instance of the <see cref="T:System.ComponentModel.Design.Serialization.DesignerSerializationManager" /> class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="275f6-178">Initializes a new instance of the <see cref="T:System.ComponentModel.Design.Serialization.DesignerSerializationManager" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DesignerSerializationManager ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DesignerSerializationManager();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="275f6-179">Initializes a new instance of the <see cref="T:System.ComponentModel.Design.Serialization.DesignerSerializationManager" /> class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="275f6-179">Initializes a new instance of the <see cref="T:System.ComponentModel.Design.Serialization.DesignerSerializationManager" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="275f6-180">Dieser Konstruktor legt die <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.PreserveNames%2A> und <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.ValidateRecycledTypes%2A> Eigenschaften `true`.</span><span class="sxs-lookup"><span data-stu-id="275f6-180">This constructor sets the <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.PreserveNames%2A> and <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.ValidateRecycledTypes%2A> properties to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.PreserveNames" />
        <altmember cref="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.ValidateRecycledTypes" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DesignerSerializationManager (IServiceProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IServiceProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.#ctor(System.IServiceProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (provider As IServiceProvider)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DesignerSerializationManager(IServiceProvider ^ provider);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.Design.Serialization.DesignerSerializationManager : IServiceProvider -&gt; System.ComponentModel.Design.Serialization.DesignerSerializationManager" Usage="new System.ComponentModel.Design.Serialization.DesignerSerializationManager provider" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="provider" Type="System.IServiceProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="275f6-181">An <see cref="T:System.IServiceProvider" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="275f6-181">An <see cref="T:System.IServiceProvider" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="275f6-182">Initializes a new instance of the <see cref="T:System.ComponentModel.Design.Serialization.DesignerSerializationManager" /> class with the given service provider.</span>
          <span class="sxs-lookup">
            <span data-stu-id="275f6-182">Initializes a new instance of the <see cref="T:System.ComponentModel.Design.Serialization.DesignerSerializationManager" /> class with the given service provider.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="275f6-183">Wenn ein Serialisierungsprogramm Dienste, die von der Serialisierungs-Manager nicht erfüllt werden kann anfordert, leitet die standardmäßige Implementierung dieser Anforderungen an die `provider` Parameter.</span><span class="sxs-lookup"><span data-stu-id="275f6-183">If a serializer requests services that cannot be satisfied by the serialization manager, the default implementation will forward those requests to the `provider` parameter.</span></span>  
  
 <span data-ttu-id="275f6-184">Dieser Konstruktor legt die <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.PreserveNames%2A> und <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.ValidateRecycledTypes%2A> Eigenschaften `true`.</span><span class="sxs-lookup"><span data-stu-id="275f6-184">This constructor sets the <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.PreserveNames%2A> and <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.ValidateRecycledTypes%2A> properties to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="275f6-185">
            <paramref name="provider" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="275f6-185">
              <paramref name="provider" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.IServiceProvider" />
        <altmember cref="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.PreserveNames" />
        <altmember cref="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.ValidateRecycledTypes" />
      </Docs>
    </Member>
    <Member MemberName="Container">
      <MemberSignature Language="C#" Value="public System.ComponentModel.IContainer Container { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.IContainer Container" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.Container" />
      <MemberSignature Language="VB.NET" Value="Public Property Container As IContainer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ComponentModel::IContainer ^ Container { System::ComponentModel::IContainer ^ get(); void set(System::ComponentModel::IContainer ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Container : System.ComponentModel.IContainer with get, set" Usage="System.ComponentModel.Design.Serialization.DesignerSerializationManager.Container" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.IContainer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="275f6-186">Gets or sets to the container for this serialization manager.</span>
          <span class="sxs-lookup">
            <span data-stu-id="275f6-186">Gets or sets to the container for this serialization manager.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="275f6-187">Die <see cref="T:System.ComponentModel.IContainer" /> zu dem der Serialisierungs-Manager Komponenten hinzufügt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="275f6-187">The <see cref="T:System.ComponentModel.IContainer" /> to which the serialization manager will add components.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="275f6-188">Wenn ein Container vorhanden ist, werden alle Komponenten, die von der Serialisierungs-Manager erstellt werden in den Container hinzugefügt werden.</span><span class="sxs-lookup"><span data-stu-id="275f6-188">If a container exists, all components that are created by the serialization manager will be added to the container.</span></span> <span data-ttu-id="275f6-189">Die Standardimplementierung dieser Eigenschaft sucht den Dienstanbieter für eine <xref:System.ComponentModel.Design.IDesignerHost> und verwenden Sie den Container, die vom Designerhost bereitgestellte, sollte eine vorhanden sein.</span><span class="sxs-lookup"><span data-stu-id="275f6-189">The default implementation of this property will search the service provider for an <xref:System.ComponentModel.Design.IDesignerHost> and use the container provided by the designer host, should one exist.</span></span> <span data-ttu-id="275f6-190">Andernfalls gibt diese Eigenschaft zurück `null` und keine Komponenten werden in einem Container hinzugefügt werden.</span><span class="sxs-lookup"><span data-stu-id="275f6-190">Otherwise, this property will return `null` and no components will be added to a container.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="275f6-191">The serialization manager has an active serialization session.</span>
          <span class="sxs-lookup">
            <span data-stu-id="275f6-191">The serialization manager has an active serialization session.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="protected virtual object CreateInstance (Type type, System.Collections.ICollection arguments, string name, bool addToContainer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance object CreateInstance(class System.Type type, class System.Collections.ICollection arguments, string name, bool addToContainer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Object ^ CreateInstance(Type ^ type, System::Collections::ICollection ^ arguments, System::String ^ name, bool addToContainer);" />
      <MemberSignature Language="F#" Value="abstract member CreateInstance : Type * System.Collections.ICollection * string * bool -&gt; obj&#xA;override this.CreateInstance : Type * System.Collections.ICollection * string * bool -&gt; obj" Usage="designerSerializationManager.CreateInstance (type, arguments, name, addToContainer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="arguments" Type="System.Collections.ICollection" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="addToContainer" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="275f6-192">The type to create an instance of.</span>
          <span class="sxs-lookup">
            <span data-stu-id="275f6-192">The type to create an instance of.</span>
          </span>
        </param>
        <param name="arguments">
          <span data-ttu-id="275f6-193">The parameters of the type’s constructor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="275f6-193">The parameters of the type’s constructor.</span>
          </span>
          <span data-ttu-id="275f6-194">This can be <see langword="null" /> or an empty collection to invoke the default constructor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="275f6-194">This can be <see langword="null" /> or an empty collection to invoke the default constructor.</span>
          </span>
        </param>
        <param name="name">
          <span data-ttu-id="275f6-195">A name to give the object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="275f6-195">A name to give the object.</span>
          </span>
          <span data-ttu-id="275f6-196">If <see langword="null" />, the object will not be given a name, unless the object is added to a container and the container gives the object a name.</span>
          <span class="sxs-lookup">
            <span data-stu-id="275f6-196">If <see langword="null" />, the object will not be given a name, unless the object is added to a container and the container gives the object a name.</span>
          </span>
        </param>
        <param name="addToContainer">
          <span data-ttu-id="275f6-197">
            <see langword="true" /> to add the object to the container if the object implements <see cref="T:System.ComponentModel.IComponent" />; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="275f6-197">
              <see langword="true" /> to add the object to the container if the object implements <see cref="T:System.ComponentModel.IComponent" />; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="275f6-198">Creates an instance of a type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="275f6-198">Creates an instance of a type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="275f6-199">A new instance of the type specified by <paramref name="type" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="275f6-199">A new instance of the type specified by <paramref name="type" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="275f6-200">Diese Methode wird von Serialisierungsprogrammen aufgerufen, wenn sie versuchen, eine Instanz eines Typs zu erstellen.</span><span class="sxs-lookup"><span data-stu-id="275f6-200">This method is called by serializers when they attempt to create an instance of a type.</span></span> <span data-ttu-id="275f6-201">Die Standardimplementierung erstellt eine neue Instanz des Typs, oder es kann je nach den Werten von eine vorhandene Instanz zurückgeben der <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.PreserveNames%2A> und <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.RecycleInstances%2A> Eigenschaften.</span><span class="sxs-lookup"><span data-stu-id="275f6-201">The default implementation creates a new instance of the type, or it may return an existing instance depending on the values of the <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.PreserveNames%2A> and <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.RecycleInstances%2A> properties.</span></span> <span data-ttu-id="275f6-202">Die <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance%2A> Methode verwendet Reflektion, um Instanzen zu erstellen, und führt einige generische <xref:System.IConvertible> Transformationen für den Parameter einen entsprechenden Konstruktor gefunden.</span><span class="sxs-lookup"><span data-stu-id="275f6-202">The <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance%2A> method uses reflection to create instances and will perform some generic <xref:System.IConvertible> transformations on parameters to find a matching constructor.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.Serialization.SerializationException">
          <span data-ttu-id="275f6-203">
            <paramref name="type" /> does not have a constructor that takes parameters contained in <paramref name="arguments" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="275f6-203">
              <paramref name="type" /> does not have a constructor that takes parameters contained in <paramref name="arguments" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateSession" />
        <altmember cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetInstance(System.String)" />
        <altmember cref="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.RecycleInstances" />
        <altmember cref="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.ValidateRecycledTypes" />
      </Docs>
    </Member>
    <Member MemberName="CreateSession">
      <MemberSignature Language="C#" Value="public IDisposable CreateSession ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IDisposable CreateSession() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateSession" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateSession () As IDisposable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IDisposable ^ CreateSession();" />
      <MemberSignature Language="F#" Value="member this.CreateSession : unit -&gt; IDisposable" Usage="designerSerializationManager.CreateSession " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IDisposable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="275f6-204">Creates a new serialization session.</span>
          <span class="sxs-lookup">
            <span data-stu-id="275f6-204">Creates a new serialization session.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="275f6-205">An <see cref="T:System.IDisposable" /> that represents a new serialization session.</span>
          <span class="sxs-lookup">
            <span data-stu-id="275f6-205">An <see cref="T:System.IDisposable" /> that represents a new serialization session.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="275f6-206">Die meisten Daten innerhalb der Serialisierungs-Manager ist flüchtig und werden nur für die Lebensdauer einer Serialisierungssitzung.</span><span class="sxs-lookup"><span data-stu-id="275f6-206">Most data within the serialization manager is transient and only lives for the life of a serialization session.</span></span> <span data-ttu-id="275f6-207">Wenn eine Sitzung freigegeben wird, Serialisierung wird als abgeschlossen betrachtet, und diesem Übergangszustand deaktiviert ist.</span><span class="sxs-lookup"><span data-stu-id="275f6-207">When a session is disposed, serialization is considered to be complete and this transient state is cleared.</span></span> <span data-ttu-id="275f6-208">Dadurch wird eine einzelne Instanz eines Serialisierungs-Managers, um mehrerer Objektstrukturen verwendet werden soll.</span><span class="sxs-lookup"><span data-stu-id="275f6-208">This allows a single instance of a serialization manager to be used to serialize multiple object trees.</span></span> <span data-ttu-id="275f6-209">Umfassen Sie, einschließlich der Dienstanbieter und jeder benutzerdefinierte Serialisierungsprovider, die der Serialisierungs-Manager hinzugefügt wurden, einige Status Sitzungen.</span><span class="sxs-lookup"><span data-stu-id="275f6-209">Some state, including the service provider and any custom serialization providers that were added to the serialization manager, span sessions.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="275f6-210">The serialization manager is already within a session.</span>
          <span class="sxs-lookup">
            <span data-stu-id="275f6-210">The serialization manager is already within a session.</span>
          </span>
          <span data-ttu-id="275f6-211">This version of <see cref="T:System.ComponentModel.Design.Serialization.DesignerSerializationManager" /> does not support simultaneous sessions.</span>
          <span class="sxs-lookup">
            <span data-stu-id="275f6-211">This version of <see cref="T:System.ComponentModel.Design.Serialization.DesignerSerializationManager" /> does not support simultaneous sessions.</span>
          </span>
        </exception>
        <altmember cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnSessionCreated(System.EventArgs)" />
        <altmember cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnSessionDisposed(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="Errors">
      <MemberSignature Language="C#" Value="public System.Collections.IList Errors { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IList Errors" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.Errors" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Errors As IList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::IList ^ Errors { System::Collections::IList ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Errors : System.Collections.IList" Usage="System.ComponentModel.Design.Serialization.DesignerSerializationManager.Errors" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="275f6-212">Gets the list of errors that occurred during serialization or deserialization.</span>
          <span class="sxs-lookup">
            <span data-stu-id="275f6-212">Gets the list of errors that occurred during serialization or deserialization.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="275f6-213">Die Liste der Fehler, die während der Serialisierung oder Deserialisierung aufgetreten sind.</span>
          <span class="sxs-lookup">
            <span data-stu-id="275f6-213">The list of errors that occurred during serialization or deserialization.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="275f6-214">Sie können die Fehlerliste nur lesen, während eine Serialisierungssitzung aktiv ist.</span><span class="sxs-lookup"><span data-stu-id="275f6-214">You can only read the error list while a serialization session is active.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="275f6-215">This property was accessed outside of a serialization session.</span>
          <span class="sxs-lookup">
            <span data-stu-id="275f6-215">This property was accessed outside of a serialization session.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetRuntimeType">
      <MemberSignature Language="C#" Value="public Type GetRuntimeType (string typeName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Type GetRuntimeType(string typeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetRuntimeType(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRuntimeType (typeName As String) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Type ^ GetRuntimeType(System::String ^ typeName);" />
      <MemberSignature Language="F#" Value="member this.GetRuntimeType : string -&gt; Type" Usage="designerSerializationManager.GetRuntimeType typeName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="typeName">
          <span data-ttu-id="275f6-216">The name of the type to get.</span>
          <span class="sxs-lookup">
            <span data-stu-id="275f6-216">The name of the type to get.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="275f6-217">Gets the type corresponding to the specified type name.</span>
          <span class="sxs-lookup">
            <span data-stu-id="275f6-217">Gets the type corresponding to the specified type name.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="275f6-218">The specified type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="275f6-218">The specified type.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSerializer">
      <MemberSignature Language="C#" Value="public object GetSerializer (Type objectType, Type serializerType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object GetSerializer(class System.Type objectType, class System.Type serializerType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetSerializer(System.Type,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetSerializer (objectType As Type, serializerType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetSerializer(Type ^ objectType, Type ^ serializerType);" />
      <MemberSignature Language="F#" Value="member this.GetSerializer : Type * Type -&gt; obj" Usage="designerSerializationManager.GetSerializer (objectType, serializerType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="objectType" Type="System.Type" />
        <Parameter Name="serializerType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="objectType">
          <span data-ttu-id="275f6-219">The type of object for which to retrieve the serializer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="275f6-219">The type of object for which to retrieve the serializer.</span>
          </span>
        </param>
        <param name="serializerType">
          <span data-ttu-id="275f6-220">The type of serializer to retrieve.</span>
          <span class="sxs-lookup">
            <span data-stu-id="275f6-220">The type of serializer to retrieve.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="275f6-221">Gets the serializer for the given object type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="275f6-221">Gets the serializer for the given object type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="275f6-222">The serializer for <paramref name="objectType" />, or <see langword="null" />, if not found.</span>
          <span class="sxs-lookup">
            <span data-stu-id="275f6-222">The serializer for <paramref name="objectType" />, or <see langword="null" />, if not found.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="275f6-223">Sie können den Typ des Serialisierungsprogramms anfordern, die Sie möchten.</span><span class="sxs-lookup"><span data-stu-id="275f6-223">You can request the type of serializer you would like.</span></span> <span data-ttu-id="275f6-224">Diese Methode gibt `null` , wenn kein Serialisierungsprogramm vom angeforderten Typ für den angegebenen Objekttyp vorhanden ist.</span><span class="sxs-lookup"><span data-stu-id="275f6-224">This method returns `null` if there is no serializer of the requested type for the specified object type.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="275f6-225">
            <paramref name="objectType" /> or <paramref name="serializerType" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="275f6-225">
              <paramref name="objectType" /> or <paramref name="serializerType" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#AddSerializationProvider(System.ComponentModel.Design.Serialization.IDesignerSerializationProvider)" />
        <altmember cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#RemoveSerializationProvider(System.ComponentModel.Design.Serialization.IDesignerSerializationProvider)" />
      </Docs>
    </Member>
    <Member MemberName="GetService">
      <MemberSignature Language="C#" Value="protected virtual object GetService (Type serviceType);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance object GetService(class System.Type serviceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetService(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetService (serviceType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Object ^ GetService(Type ^ serviceType);" />
      <MemberSignature Language="F#" Value="abstract member GetService : Type -&gt; obj&#xA;override this.GetService : Type -&gt; obj" Usage="designerSerializationManager.GetService serviceType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="serviceType">
          <span data-ttu-id="275f6-226">The type of service to retrieve.</span>
          <span class="sxs-lookup">
            <span data-stu-id="275f6-226">The type of service to retrieve.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="275f6-227">Gets the requested service.</span>
          <span class="sxs-lookup">
            <span data-stu-id="275f6-227">Gets the requested service.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="275f6-228">The requested service, or <see langword="null" /> if the service cannot be resolved.</span>
          <span class="sxs-lookup">
            <span data-stu-id="275f6-228">The requested service, or <see langword="null" /> if the service cannot be resolved.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="275f6-229">Die <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetService%2A> -Methode bietet Zugriff auf die zugrunde liegenden Container oder Service Provider, der im Konstruktor festgelegt wurde.</span><span class="sxs-lookup"><span data-stu-id="275f6-229">The <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetService%2A> method provides access to the underlying container or service provider that was set in the constructor.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetType">
      <MemberSignature Language="C#" Value="protected virtual Type GetType (string typeName);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Type GetType(string typeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetType(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetType (typeName As String) As Type" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual Type ^ GetType(System::String ^ typeName);" />
      <MemberSignature Language="F#" Value="override this.GetType : string -&gt; Type" Usage="designerSerializationManager.GetType typeName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="typeName">
          <span data-ttu-id="275f6-230">The name of the type to retrieve.</span>
          <span class="sxs-lookup">
            <span data-stu-id="275f6-230">The name of the type to retrieve.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="275f6-231">Gets the requested type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="275f6-231">Gets the requested type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="275f6-232">The requested type, or <see langword="null" /> if the type cannot be resolved.</span>
          <span class="sxs-lookup">
            <span data-stu-id="275f6-232">The requested type, or <see langword="null" /> if the type cannot be resolved.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="275f6-233">Die <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetType%2A> Methode sucht den Dienstanbieter für eine <xref:System.ComponentModel.Design.ITypeResolutionService> und, falls verfügbar, er wird delegieren für den Dienst, den Typ aufzulösen.</span><span class="sxs-lookup"><span data-stu-id="275f6-233">The <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetType%2A> method will search the service provider for an <xref:System.ComponentModel.Design.ITypeResolutionService> and, if available, it will delegate to that service to resolve the type.</span></span> <span data-ttu-id="275f6-234">Wenn ein <xref:System.ComponentModel.Design.ITypeResolutionService> ist nicht verfügbar, <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetType%2A> Ruft die <xref:System.Object.GetType%2A?displayProperty=nameWithType> Methode.</span><span class="sxs-lookup"><span data-stu-id="275f6-234">If an <xref:System.ComponentModel.Design.ITypeResolutionService> is not available, <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetType%2A> will call the <xref:System.Object.GetType%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnResolveName">
      <MemberSignature Language="C#" Value="protected virtual void OnResolveName (System.ComponentModel.Design.Serialization.ResolveNameEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnResolveName(class System.ComponentModel.Design.Serialization.ResolveNameEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnResolveName(System.ComponentModel.Design.Serialization.ResolveNameEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnResolveName (e As ResolveNameEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnResolveName(System::ComponentModel::Design::Serialization::ResolveNameEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnResolveName : System.ComponentModel.Design.Serialization.ResolveNameEventArgs -&gt; unit&#xA;override this.OnResolveName : System.ComponentModel.Design.Serialization.ResolveNameEventArgs -&gt; unit" Usage="designerSerializationManager.OnResolveName e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.ComponentModel.Design.Serialization.ResolveNameEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="275f6-235">A <see cref="T:System.ComponentModel.Design.Serialization.ResolveNameEventArgs" /> that contains the event data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="275f6-235">A <see cref="T:System.ComponentModel.Design.Serialization.ResolveNameEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="275f6-236">Raises the <see cref="E:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ResolveName" /> event.</span>
          <span class="sxs-lookup">
            <span data-stu-id="275f6-236">Raises the <see cref="E:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ResolveName" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="275f6-237">Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="275f6-237">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="275f6-238">Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="275f6-238">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="275f6-239">Mit der <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnResolveName%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln.</span><span class="sxs-lookup"><span data-stu-id="275f6-239">The <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnResolveName%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="275f6-240">Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.</span><span class="sxs-lookup"><span data-stu-id="275f6-240">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="275f6-241">
            <para>Zum Überschreiben <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnResolveName(System.ComponentModel.Design.Serialization.ResolveNameEventArgs)" /> werden Sie in einer abgeleiteten Klasse der Basisklasse aufrufen <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnResolveName(System.ComponentModel.Design.Serialization.ResolveNameEventArgs)" /> Methode, damit registrierte Delegaten das Ereignis empfangen.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="275f6-241">
              <para>When overriding <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnResolveName(System.ComponentModel.Design.Serialization.ResolveNameEventArgs)" /> in a derived class, be sure to call the base class’s <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnResolveName(System.ComponentModel.Design.Serialization.ResolveNameEventArgs)" /> method so that registered delegates receive the event.</para>
            </span>
          </span>
        </block>
        <altmember cref="E:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ResolveName" />
        <altmember cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetName(System.Object)" />
        <altmember cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#SetName(System.Object,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="OnSessionCreated">
      <MemberSignature Language="C#" Value="protected virtual void OnSessionCreated (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSessionCreated(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnSessionCreated(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSessionCreated (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSessionCreated(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnSessionCreated : EventArgs -&gt; unit&#xA;override this.OnSessionCreated : EventArgs -&gt; unit" Usage="designerSerializationManager.OnSessionCreated e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="275f6-242">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="275f6-242">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="275f6-243">Raises the <see cref="E:System.ComponentModel.Design.Serialization.DesignerSerializationManager.SessionCreated" /> event.</span>
          <span class="sxs-lookup">
            <span data-stu-id="275f6-243">Raises the <see cref="E:System.ComponentModel.Design.Serialization.DesignerSerializationManager.SessionCreated" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="275f6-244">Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="275f6-244">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="275f6-245">Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="275f6-245">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="275f6-246">Mit der <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnSessionCreated%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln.</span><span class="sxs-lookup"><span data-stu-id="275f6-246">The <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnSessionCreated%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="275f6-247">Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.</span><span class="sxs-lookup"><span data-stu-id="275f6-247">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="275f6-248">
            <para>Zum Überschreiben <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnSessionCreated(System.EventArgs)" /> werden Sie in einer abgeleiteten Klasse der Basisklasse aufrufen <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnSessionCreated(System.EventArgs)" /> Methode, damit registrierte Delegaten das Ereignis empfangen.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="275f6-248">
              <para>When overriding <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnSessionCreated(System.EventArgs)" /> in a derived class, be sure to call the base class’s <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnSessionCreated(System.EventArgs)" /> method so that registered delegates receive the event.</para>
            </span>
          </span>
        </block>
        <altmember cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateSession" />
        <altmember cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnSessionDisposed(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnSessionDisposed">
      <MemberSignature Language="C#" Value="protected virtual void OnSessionDisposed (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSessionDisposed(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnSessionDisposed(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSessionDisposed (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSessionDisposed(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnSessionDisposed : EventArgs -&gt; unit&#xA;override this.OnSessionDisposed : EventArgs -&gt; unit" Usage="designerSerializationManager.OnSessionDisposed e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="275f6-249">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="275f6-249">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="275f6-250">Raises the <see cref="E:System.ComponentModel.Design.Serialization.DesignerSerializationManager.SessionDisposed" /> event.</span>
          <span class="sxs-lookup">
            <span data-stu-id="275f6-250">Raises the <see cref="E:System.ComponentModel.Design.Serialization.DesignerSerializationManager.SessionDisposed" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="275f6-251">Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="275f6-251">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="275f6-252">Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="275f6-252">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="275f6-253">Mit der <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnSessionDisposed%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln.</span><span class="sxs-lookup"><span data-stu-id="275f6-253">The <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnSessionDisposed%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="275f6-254">Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.</span><span class="sxs-lookup"><span data-stu-id="275f6-254">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="275f6-255">
            <para>Zum Überschreiben <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnSessionDisposed(System.EventArgs)" /> werden Sie in einer abgeleiteten Klasse der Basisklasse aufrufen <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnSessionDisposed(System.EventArgs)" /> Methode, damit registrierte Delegaten das Ereignis empfangen.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="275f6-255">
              <para>When overriding <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnSessionDisposed(System.EventArgs)" /> in a derived class, be sure to call the base class’s <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnSessionDisposed(System.EventArgs)" /> method so that registered delegates receive the event.</para>
            </span>
          </span>
        </block>
        <altmember cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateSession" />
        <altmember cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnSessionCreated(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="PreserveNames">
      <MemberSignature Language="C#" Value="public bool PreserveNames { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PreserveNames" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.PreserveNames" />
      <MemberSignature Language="VB.NET" Value="Public Property PreserveNames As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool PreserveNames { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.PreserveNames : bool with get, set" Usage="System.ComponentModel.Design.Serialization.DesignerSerializationManager.PreserveNames" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="275f6-256">Gets or sets a value indicating whether the <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /> method should check for the presence of the given name in the container.</span>
          <span class="sxs-lookup">
            <span data-stu-id="275f6-256">Gets or sets a value indicating whether the <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /> method should check for the presence of the given name in the container.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="275f6-257">
            <see langword="true" /> Wenn <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /> übergibt den Namen der angegebenen Komponente; <see langword="false" /> Wenn <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /> überprüft das Vorhandensein von dem angegebenen Namen in den Container.</span>
          <span class="sxs-lookup">
            <span data-stu-id="275f6-257">
              <see langword="true" /> if <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /> will pass the given component name; <see langword="false" /> if <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /> will check for the presence of the given name in the container.</span>
          </span>
          <span data-ttu-id="275f6-258">Die Standardeinstellung ist <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="275f6-258">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="275f6-259">Die <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.PreserveNames%2A> -Eigenschaft bestimmt das Verhalten der <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="275f6-259">The <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.PreserveNames%2A> property determines the behavior of the <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A> method.</span></span> <span data-ttu-id="275f6-260">Wenn `true`, <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A> den angegebenen Komponentennamen übergibt.</span><span class="sxs-lookup"><span data-stu-id="275f6-260">If `true`, <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A> will pass the given component name.</span></span> <span data-ttu-id="275f6-261">Wenn `false`, <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A> überprüft das Vorhandensein von dem angegebenen Namen in den Container.</span><span class="sxs-lookup"><span data-stu-id="275f6-261">If `false`, <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A> will check for the presence of the given name in the container.</span></span> <span data-ttu-id="275f6-262">Wenn der Name nicht, im Container vorhanden ist <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A> verwenden den angegebenen Namen.</span><span class="sxs-lookup"><span data-stu-id="275f6-262">If the name does not exist in the container, <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A> will use the given name.</span></span> <span data-ttu-id="275f6-263">Wenn der Name im Container vorhanden ist <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A> einen null-Wert wird als Name einer Komponente übergeben werden, wenn sie den Container, wodurch ihm einen neuen Namen hinzugefügt.</span><span class="sxs-lookup"><span data-stu-id="275f6-263">If the name does exist in the container, <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A> will pass a null value as the name of a component when adding it to the container, thereby giving it a new name.</span></span> <span data-ttu-id="275f6-264">Diese zweite Variante ist nützlich für das Implementieren eines Serialisierungsprogramms, das Objekte immer dupliziert, anstatt Sie zu vorausgesetzt, dass diese Objekte nicht vorhanden sind.</span><span class="sxs-lookup"><span data-stu-id="275f6-264">This second variation is useful for implementing a serializer that always duplicates objects, rather than assuming those objects do not exist.</span></span> <span data-ttu-id="275f6-265">Fügen Sie Befehle verwenden häufig dieses Typs des Serialisierungsprogramms.</span><span class="sxs-lookup"><span data-stu-id="275f6-265">Paste commands often use this type of serializer.</span></span>  
  
 <span data-ttu-id="275f6-266">Sie können diese Eigenschaft nur ändern, wenn Sie nicht in einer Serialisierungssitzung befinden.</span><span class="sxs-lookup"><span data-stu-id="275f6-266">You can only change this property when you are not in a serialization session.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="275f6-267">This property was changed from within a serialization session.</span>
          <span class="sxs-lookup">
            <span data-stu-id="275f6-267">This property was changed from within a serialization session.</span>
          </span>
        </exception>
        <altmember cref="Overload:System.ComponentModel.Design.Serialization.DesignerSerializationManager.#ctor" />
        <altmember cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="PropertyProvider">
      <MemberSignature Language="C#" Value="public object PropertyProvider { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object PropertyProvider" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.PropertyProvider" />
      <MemberSignature Language="VB.NET" Value="Public Property PropertyProvider As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ PropertyProvider { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.PropertyProvider : obj with get, set" Usage="System.ComponentModel.Design.Serialization.DesignerSerializationManager.PropertyProvider" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="275f6-268">Gets the object that should be used to provide properties to the serialization manager's <see cref="P:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties" /> property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="275f6-268">Gets the object that should be used to provide properties to the serialization manager's <see cref="P:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties" /> property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="275f6-269">Das Objekt, das verwendet werden soll, um Eigenschaften für des Serialisierungs-Managers bereitzustellen <see cref="P:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties" /> Eigenschaft.</span>
          <span class="sxs-lookup">
            <span data-stu-id="275f6-269">The object that should be used to provide properties to the serialization manager's <see cref="P:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties" /> property.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="275f6-270">Die <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.PropertyProvider%2A> Eigenschaft bietet eine Möglichkeit, dem Serialisierungs-Manager eine Reihe von Eigenschaften der Serialisierung erhalten, die Serialisierungsprogramme verwenden können, um deren Verhalten führen.</span><span class="sxs-lookup"><span data-stu-id="275f6-270">The <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.PropertyProvider%2A> property provides a way to give the serialization manager a set of serialization properties that serializers can use to guide their behavior.</span></span>  
  
 <span data-ttu-id="275f6-271">Öffentliche Eigenschaften dieses Objekts werden überprüft und in neuen Eigenschaftenbezeichner, die ein Zielobjekt, der der Serialisierungs-Manager eingeschlossen werden.</span><span class="sxs-lookup"><span data-stu-id="275f6-271">This object's public properties will be inspected and wrapped in new property descriptors that have a target object of the serialization manager.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RecycleInstances">
      <MemberSignature Language="C#" Value="public bool RecycleInstances { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RecycleInstances" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.RecycleInstances" />
      <MemberSignature Language="VB.NET" Value="Public Property RecycleInstances As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool RecycleInstances { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.RecycleInstances : bool with get, set" Usage="System.ComponentModel.Design.Serialization.DesignerSerializationManager.RecycleInstances" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="275f6-272">Gets or sets a flag indicating whether <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /> will always create a new instance of a type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="275f6-272">Gets or sets a flag indicating whether <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /> will always create a new instance of a type.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="275f6-273">
            <see langword="true" /> Wenn <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /> die vorhandene Instanz zurück <see langword="false" /> Wenn <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /> erstellt eine neue Instanz eines Typs.</span>
          <span class="sxs-lookup">
            <span data-stu-id="275f6-273">
              <see langword="true" /> if <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /> will return the existing instance; <see langword="false" /> if <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /> will create a new instance of a type.</span>
          </span>
          <span data-ttu-id="275f6-274">Die Standardeinstellung ist <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="275f6-274">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="275f6-275">Wenn die <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.RecycleInstances%2A> Eigenschaft `false`, <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A> Methode wird immer eine neue Instanz eines Typs erstellt.</span><span class="sxs-lookup"><span data-stu-id="275f6-275">If the <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.RecycleInstances%2A> property is `false`, the <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A> method will always create a new instance of a type.</span></span> <span data-ttu-id="275f6-276">Wenn <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.RecycleInstances%2A> ist `true`, <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A> wird zuerst gesucht, das Namenstabelle und den Container für ein Objekt mit dem gleichen Namen.</span><span class="sxs-lookup"><span data-stu-id="275f6-276">If <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.RecycleInstances%2A> is `true`, <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A> will first search the name table and container for an object of the same name.</span></span> <span data-ttu-id="275f6-277">Wenn ein solches Objekt vorhanden ist und denselben Typ, <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A> wird die vorhandene Instanz zurückgibt.</span><span class="sxs-lookup"><span data-stu-id="275f6-277">If such an object exists and is of the same type, <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A> will return the existing instance.</span></span> <span data-ttu-id="275f6-278">Diese zweite Variante ist nützlich für das Implementieren eines Serialisierungsprogramms, das Serialisierungszustand für einen vorhandenen Satz von Objekten gilt, anstatt immer eine neue Struktur erstellen.</span><span class="sxs-lookup"><span data-stu-id="275f6-278">This second variation is useful for implementing a serializer that applies serialization state to an existing set of objects, rather than always creating a new tree.</span></span> <span data-ttu-id="275f6-279">Die **Rückgängig** Befehl häufig verwendet dieses Typs des Serialisierungsprogramms.</span><span class="sxs-lookup"><span data-stu-id="275f6-279">The **Undo** command often uses this type of serializer.</span></span>  
  
 <span data-ttu-id="275f6-280">Im Fall, in denen die <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.RecycleInstances%2A> -Eigenschaft ist `true`, <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.ValidateRecycledTypes%2A> Eigenschaft ändert das Verhalten von weiteren <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A> je nach Art der beiden Objekte.</span><span class="sxs-lookup"><span data-stu-id="275f6-280">In the case where the <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.RecycleInstances%2A> property is `true`, the <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.ValidateRecycledTypes%2A> property will further modify the behavior of <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A> depending on the types of the two objects.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="275f6-281">The serialization manager has an active serialization session.</span>
          <span class="sxs-lookup">
            <span data-stu-id="275f6-281">The serialization manager has an active serialization session.</span>
          </span>
        </exception>
        <altmember cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" />
        <altmember cref="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.ValidateRecycledTypes" />
      </Docs>
    </Member>
    <Member MemberName="SessionCreated">
      <MemberSignature Language="C#" Value="public event EventHandler SessionCreated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler SessionCreated" />
      <MemberSignature Language="DocId" Value="E:System.ComponentModel.Design.Serialization.DesignerSerializationManager.SessionCreated" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SessionCreated As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ SessionCreated;" />
      <MemberSignature Language="F#" Value="member this.SessionCreated : EventHandler " Usage="member this.SessionCreated : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="275f6-282">Occurs when a session is created.</span>
          <span class="sxs-lookup">
            <span data-stu-id="275f6-282">Occurs when a session is created.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SessionDisposed">
      <MemberSignature Language="C#" Value="public event EventHandler SessionDisposed;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler SessionDisposed" />
      <MemberSignature Language="DocId" Value="E:System.ComponentModel.Design.Serialization.DesignerSerializationManager.SessionDisposed" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SessionDisposed As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ SessionDisposed;" />
      <MemberSignature Language="F#" Value="member this.SessionDisposed : EventHandler " Usage="member this.SessionDisposed : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="275f6-283">Occurs when a session is disposed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="275f6-283">Occurs when a session is disposed.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Design.Serialization.IDesignerSerializationManager.AddSerializationProvider">
      <MemberSignature Language="C#" Value="void IDesignerSerializationManager.AddSerializationProvider (System.ComponentModel.Design.Serialization.IDesignerSerializationProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ComponentModel.Design.Serialization.IDesignerSerializationManager.AddSerializationProvider(class System.ComponentModel.Design.Serialization.IDesignerSerializationProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#AddSerializationProvider(System.ComponentModel.Design.Serialization.IDesignerSerializationProvider)" />
      <MemberSignature Language="VB.NET" Value="Sub AddSerializationProvider (provider As IDesignerSerializationProvider) Implements IDesignerSerializationManager.AddSerializationProvider" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ComponentModel.Design.Serialization.IDesignerSerializationManager.AddSerializationProvider(System::ComponentModel::Design::Serialization::IDesignerSerializationProvider ^ provider) = System::ComponentModel::Design::Serialization::IDesignerSerializationManager::AddSerializationProvider;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="275f6-284">The serialization provider to add.</span>
          <span class="sxs-lookup">
            <span data-stu-id="275f6-284">The serialization provider to add.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="275f6-285">Adds a custom serialization provider to the serialization manager.</span>
          <span class="sxs-lookup">
            <span data-stu-id="275f6-285">Adds a custom serialization provider to the serialization manager.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="275f6-286">Wenn die <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetSerializer%2A> Methode wird verwendet, um einen Serialisierungsprovider anzufordern, der Serialisierungs-Manager fragt die benutzerdefinierte Serialisierung-Anbieter zunächst vor dem Suchen in den Metadaten des Typs der passende Serialisierer.</span><span class="sxs-lookup"><span data-stu-id="275f6-286">When the <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetSerializer%2A> method is used to request a serialization provider, the serialization manager queries the custom serialization providers first before looking in the type's metadata for the appropriate serializer.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetSerializer(System.Type,System.Type)" />
        <altmember cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#RemoveSerializationProvider(System.ComponentModel.Design.Serialization.IDesignerSerializationProvider)" />
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Context">
      <MemberSignature Language="C#" Value="System.ComponentModel.Design.Serialization.ContextStack System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Context { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.Design.Serialization.ContextStack System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Context" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#Context" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Context As ContextStack Implements IDesignerSerializationManager.Context" />
      <MemberSignature Language="C++ CLI" Value="property System::ComponentModel::Design::Serialization::ContextStack ^ System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Context { System::ComponentModel::Design::Serialization::ContextStack ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.ComponentModel.Design.Serialization.DesignerSerializationManager.System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Context" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.Serialization.ContextStack</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="275f6-287">Gets the context stack for this serialization session.</span>
          <span class="sxs-lookup">
            <span data-stu-id="275f6-287">Gets the context stack for this serialization session.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="275f6-288">Ein <see cref="T:System.ComponentModel.Design.Serialization.ContextStack" /> , die Daten speichert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="275f6-288">A <see cref="T:System.ComponentModel.Design.Serialization.ContextStack" /> that stores data.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="275f6-289">Ein Kontextstapel bietet es sich um einen benutzerdefinierten Speicherbereich, als einen Stapel implementiert.</span><span class="sxs-lookup"><span data-stu-id="275f6-289">A context stack provides a user-defined storage area, implemented as a stack.</span></span> <span data-ttu-id="275f6-290">Dieses ist eine gute Möglichkeit für die Kommunikation über Serialisierungsprogramme, wie die Serialisierung eines Prozesses in der Regel hierarchische ist.</span><span class="sxs-lookup"><span data-stu-id="275f6-290">This storage area is a useful way to provide communication across serializers, as serialization is a generally hierarchical process.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="275f6-291">This property was accessed outside of a serialization session.</span>
          <span class="sxs-lookup">
            <span data-stu-id="275f6-291">This property was accessed outside of a serialization session.</span>
          </span>
        </exception>
        <altmember cref="T:System.ComponentModel.Design.Serialization.ContextStack" />
        <altmember cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateSession" />
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance">
      <MemberSignature Language="C#" Value="object IDesignerSerializationManager.CreateInstance (Type type, System.Collections.ICollection arguments, string name, bool addToContainer);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance(class System.Type type, class System.Collections.ICollection arguments, string name, bool addToContainer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance(Type ^ type, System::Collections::ICollection ^ arguments, System::String ^ name, bool addToContainer) = System::ComponentModel::Design::Serialization::IDesignerSerializationManager::CreateInstance;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="arguments" Type="System.Collections.ICollection" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="addToContainer" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="275f6-292">The data type to create.</span>
          <span class="sxs-lookup">
            <span data-stu-id="275f6-292">The data type to create.</span>
          </span>
        </param>
        <param name="arguments">
          <span data-ttu-id="275f6-293">The arguments to pass to the constructor for this type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="275f6-293">The arguments to pass to the constructor for this type.</span>
          </span>
        </param>
        <param name="name">
          <span data-ttu-id="275f6-294">The name of the object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="275f6-294">The name of the object.</span>
          </span>
          <span data-ttu-id="275f6-295">This name can be used to access the object later through <see cref="M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetInstance(System.String)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="275f6-295">This name can be used to access the object later through <see cref="M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetInstance(System.String)" />.</span>
          </span>
          <span data-ttu-id="275f6-296">If <see langword="null" /> is passed, the object is still created but cannot be accessed by name.</span>
          <span class="sxs-lookup">
            <span data-stu-id="275f6-296">If <see langword="null" /> is passed, the object is still created but cannot be accessed by name.</span>
          </span>
        </param>
        <param name="addToContainer">
          <span data-ttu-id="275f6-297">
            <see langword="true" /> to add this object to the design container.</span>
          <span class="sxs-lookup">
            <span data-stu-id="275f6-297">
              <see langword="true" /> to add this object to the design container.</span>
          </span>
          <span data-ttu-id="275f6-298">The object must implement <see cref="T:System.ComponentModel.IComponent" /> for this to have any effect.</span>
          <span class="sxs-lookup">
            <span data-stu-id="275f6-298">The object must implement <see cref="T:System.ComponentModel.IComponent" /> for this to have any effect.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="275f6-299">Implements the <see cref="M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /> method.</span>
          <span class="sxs-lookup">
            <span data-stu-id="275f6-299">Implements the <see cref="M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="275f6-300">The newly created object instance.</span>
          <span class="sxs-lookup">
            <span data-stu-id="275f6-300">The newly created object instance.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetInstance">
      <MemberSignature Language="C#" Value="object IDesignerSerializationManager.GetInstance (string name);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetInstance(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetInstance(System.String)" />
      <MemberSignature Language="VB.NET" Value="Function GetInstance (name As String) As Object Implements IDesignerSerializationManager.GetInstance" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetInstance(System::String ^ name) = System::ComponentModel::Design::Serialization::IDesignerSerializationManager::GetInstance;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="275f6-301">The name of the object to retrieve.</span>
          <span class="sxs-lookup">
            <span data-stu-id="275f6-301">The name of the object to retrieve.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="275f6-302">Retrieves an instance of a created object of the specified name.</span>
          <span class="sxs-lookup">
            <span data-stu-id="275f6-302">Retrieves an instance of a created object of the specified name.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="275f6-303">An instance of the object with the given name, or <see langword="null" /> if no object by that name can be found.</span>
          <span class="sxs-lookup">
            <span data-stu-id="275f6-303">An instance of the object with the given name, or <see langword="null" /> if no object by that name can be found.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="275f6-304">
            <paramref name="name" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="275f6-304">
              <paramref name="name" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="275f6-305">This property was accessed outside of a serialization session.</span>
          <span class="sxs-lookup">
            <span data-stu-id="275f6-305">This property was accessed outside of a serialization session.</span>
          </span>
        </exception>
        <altmember cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" />
        <altmember cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetName(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetName">
      <MemberSignature Language="C#" Value="string IDesignerSerializationManager.GetName (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetName(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetName(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function GetName (value As Object) As String Implements IDesignerSerializationManager.GetName" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::String ^ System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetName(System::Object ^ value) = System::ComponentModel::Design::Serialization::IDesignerSerializationManager::GetName;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="275f6-306">The object for which to retrieve the name.</span>
          <span class="sxs-lookup">
            <span data-stu-id="275f6-306">The object for which to retrieve the name.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="275f6-307">Retrieves a name for the specified object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="275f6-307">Retrieves a name for the specified object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="275f6-308">The name of the object, or <see langword="null" /> if the object is unnamed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="275f6-308">The name of the object, or <see langword="null" /> if the object is unnamed.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="275f6-309">Wenn die <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System%23ComponentModel%23Design%23Serialization%23IDesignerSerializationManager%23GetName%2A> Methode wurde nicht gefunden für einen entsprechenden Namen der `value` Parameter, es wird ausgelöst, die <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ResolveName> Ereignis vor dem Zurückgeben `null`.</span><span class="sxs-lookup"><span data-stu-id="275f6-309">If the <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System%23ComponentModel%23Design%23Serialization%23IDesignerSerializationManager%23GetName%2A> method cannot find a corresponding name for the `value` parameter, it raises the <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ResolveName> event before it returns `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="275f6-310">
            <paramref name="value" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="275f6-310">
              <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="275f6-311">This property was accessed outside of a serialization session.</span>
          <span class="sxs-lookup">
            <span data-stu-id="275f6-311">This property was accessed outside of a serialization session.</span>
          </span>
        </exception>
        <altmember cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" />
        <altmember cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetInstance(System.String)" />
        <altmember cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#SetName(System.Object,System.String)" />
        <altmember cref="E:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ResolveName" />
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetSerializer">
      <MemberSignature Language="C#" Value="object IDesignerSerializationManager.GetSerializer (Type objectType, Type serializerType);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetSerializer(class System.Type objectType, class System.Type serializerType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetSerializer(System.Type,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Function GetSerializer (objectType As Type, serializerType As Type) As Object Implements IDesignerSerializationManager.GetSerializer" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetSerializer(Type ^ objectType, Type ^ serializerType) = System::ComponentModel::Design::Serialization::IDesignerSerializationManager::GetSerializer;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="objectType" Type="System.Type" />
        <Parameter Name="serializerType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="objectType">
          <span data-ttu-id="275f6-312">The type of the object to get the serializer for.</span>
          <span class="sxs-lookup">
            <span data-stu-id="275f6-312">The type of the object to get the serializer for.</span>
          </span>
        </param>
        <param name="serializerType">
          <span data-ttu-id="275f6-313">The type of the serializer to retrieve.</span>
          <span class="sxs-lookup">
            <span data-stu-id="275f6-313">The type of the serializer to retrieve.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="275f6-314">Gets a serializer of the requested type for the specified object type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="275f6-314">Gets a serializer of the requested type for the specified object type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="275f6-315">An instance of the requested serializer, or <see langword="null" /> if no appropriate serializer can be located.</span>
          <span class="sxs-lookup">
            <span data-stu-id="275f6-315">An instance of the requested serializer, or <see langword="null" /> if no appropriate serializer can be located.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetType">
      <MemberSignature Language="C#" Value="Type IDesignerSerializationManager.GetType (string typeName);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Type System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetType(string typeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetType(System.String)" />
      <MemberSignature Language="VB.NET" Value="Function GetType (typeName As String) As Type Implements IDesignerSerializationManager.GetType" />
      <MemberSignature Language="C++ CLI" Value=" virtual Type ^ System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetType(System::String ^ typeName) = System::ComponentModel::Design::Serialization::IDesignerSerializationManager::GetType;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="typeName">
          <span data-ttu-id="275f6-316">The fully qualified name of the type to load.</span>
          <span class="sxs-lookup">
            <span data-stu-id="275f6-316">The fully qualified name of the type to load.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="275f6-317">Gets a type of the specified name.</span>
          <span class="sxs-lookup">
            <span data-stu-id="275f6-317">Gets a type of the specified name.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="275f6-318">An instance of the type, or <see langword="null" /> if the type cannot be loaded.</span>
          <span class="sxs-lookup">
            <span data-stu-id="275f6-318">An instance of the type, or <see langword="null" /> if the type cannot be loaded.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="275f6-319">This property was accessed outside of a serialization session.</span>
          <span class="sxs-lookup">
            <span data-stu-id="275f6-319">This property was accessed outside of a serialization session.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties">
      <MemberSignature Language="C#" Value="System.ComponentModel.PropertyDescriptorCollection System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.PropertyDescriptorCollection System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#Properties" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Properties As PropertyDescriptorCollection Implements IDesignerSerializationManager.Properties" />
      <MemberSignature Language="C++ CLI" Value="property System::ComponentModel::PropertyDescriptorCollection ^ System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties { System::ComponentModel::PropertyDescriptorCollection ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.ComponentModel.Design.Serialization.DesignerSerializationManager.System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptorCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="275f6-320">Implements the <see cref="P:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties" /> property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="275f6-320">Implements the <see cref="P:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties" /> property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="275f6-321">Ein <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> , die die zu serialisierenden Eigenschaften enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="275f6-321">A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> containing the properties to be serialized.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Design.Serialization.IDesignerSerializationManager.RemoveSerializationProvider">
      <MemberSignature Language="C#" Value="void IDesignerSerializationManager.RemoveSerializationProvider (System.ComponentModel.Design.Serialization.IDesignerSerializationProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ComponentModel.Design.Serialization.IDesignerSerializationManager.RemoveSerializationProvider(class System.ComponentModel.Design.Serialization.IDesignerSerializationProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#RemoveSerializationProvider(System.ComponentModel.Design.Serialization.IDesignerSerializationProvider)" />
      <MemberSignature Language="VB.NET" Value="Sub RemoveSerializationProvider (provider As IDesignerSerializationProvider) Implements IDesignerSerializationManager.RemoveSerializationProvider" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ComponentModel.Design.Serialization.IDesignerSerializationManager.RemoveSerializationProvider(System::ComponentModel::Design::Serialization::IDesignerSerializationProvider ^ provider) = System::ComponentModel::Design::Serialization::IDesignerSerializationManager::RemoveSerializationProvider;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="275f6-322">The <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationProvider" /> to remove.</span>
          <span class="sxs-lookup">
            <span data-stu-id="275f6-322">The <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationProvider" /> to remove.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="275f6-323">Removes a previously added serialization provider.</span>
          <span class="sxs-lookup">
            <span data-stu-id="275f6-323">Removes a previously added serialization provider.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="275f6-324">Die <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System%23ComponentModel%23Design%23Serialization%23IDesignerSerializationManager%23RemoveSerializationProvider%2A> Methode entfernt einen benutzerdefinierten Serialisierungsprovider aus, die zuvor durch einen Aufruf von hinzugefügt wurde die <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System%23ComponentModel%23Design%23Serialization%23IDesignerSerializationManager%23AddSerializationProvider%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="275f6-324">The <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System%23ComponentModel%23Design%23Serialization%23IDesignerSerializationManager%23RemoveSerializationProvider%2A> method removes a custom serialization provider that was previously added by a call to the <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System%23ComponentModel%23Design%23Serialization%23IDesignerSerializationManager%23AddSerializationProvider%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetSerializer(System.Type,System.Type)" />
        <altmember cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#AddSerializationProvider(System.ComponentModel.Design.Serialization.IDesignerSerializationProvider)" />
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ReportError">
      <MemberSignature Language="C#" Value="void IDesignerSerializationManager.ReportError (object errorInformation);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ReportError(object errorInformation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#ReportError(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub ReportError (errorInformation As Object) Implements IDesignerSerializationManager.ReportError" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ReportError(System::Object ^ errorInformation) = System::ComponentModel::Design::Serialization::IDesignerSerializationManager::ReportError;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="errorInformation" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="errorInformation">
          <span data-ttu-id="275f6-325">An object containing the error information, usually of type <see cref="T:System.String" /> or <see cref="T:System.Exception" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="275f6-325">An object containing the error information, usually of type <see cref="T:System.String" /> or <see cref="T:System.Exception" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="275f6-326">Used to report a recoverable error in serialization.</span>
          <span class="sxs-lookup">
            <span data-stu-id="275f6-326">Used to report a recoverable error in serialization.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="275f6-327">Serialisierungsprogramme geschrieben werden können, um wiederherstellbare Fehler ordnungsgemäß behandelt werden durch Aufrufen der <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System%23ComponentModel%23Design%23Serialization%23IDesignerSerializationManager%23ReportError%2A> Methode mit den Fehlerinformationen.</span><span class="sxs-lookup"><span data-stu-id="275f6-327">Serializers can be written to handle recoverable errors gracefully by calling the <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System%23ComponentModel%23Design%23Serialization%23IDesignerSerializationManager%23ReportError%2A> method with the error information.</span></span> <span data-ttu-id="275f6-328">Der Serialisierungs-Manager kann eine Liste von Fehlern reporting, nachdem es abgeschlossen ist, oder löst eine Ausnahme von dieser Methode und Abbrechen des Serialisierungsprozesses unterstützen.</span><span class="sxs-lookup"><span data-stu-id="275f6-328">The serialization manager may support reporting a list of errors after it completes, or it may throw an exception from this method and abort the serialization process.</span></span> <span data-ttu-id="275f6-329">Das Serialisierungsprogramm sollte weiterhin nach dem Aufrufen dieser Funktion.</span><span class="sxs-lookup"><span data-stu-id="275f6-329">The serializer should continue after calling this function.</span></span>  
  
 <span data-ttu-id="275f6-330"><xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System%23ComponentModel%23Design%23Serialization%23IDesignerSerializationManager%23ReportError%2A> Fügt der `errorInformation` Parameter, um die <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.Errors%2A> Auflistung.</span><span class="sxs-lookup"><span data-stu-id="275f6-330"><xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System%23ComponentModel%23Design%23Serialization%23IDesignerSerializationManager%23ReportError%2A> adds the `errorInformation` parameter to the <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.Errors%2A> collection.</span></span> <span data-ttu-id="275f6-331">Wenn `errorInformation` ist `null`, wird keine Aktion ausgeführt.</span><span class="sxs-lookup"><span data-stu-id="275f6-331">If `errorInformation` is `null`, no action is taken.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="275f6-332">This property was accessed outside of a serialization session.</span>
          <span class="sxs-lookup">
            <span data-stu-id="275f6-332">This property was accessed outside of a serialization session.</span>
          </span>
        </exception>
        <altmember cref="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.Errors" />
        <altmember cref="M:System.Collections.ArrayList.Add(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ResolveName">
      <MemberSignature Language="C#" Value="event System.ComponentModel.Design.Serialization.ResolveNameEventHandler System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ResolveName;" />
      <MemberSignature Language="ILAsm" Value=".event class System.ComponentModel.Design.Serialization.ResolveNameEventHandler System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ResolveName" />
      <MemberSignature Language="DocId" Value="E:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#ResolveName" />
      <MemberSignature Language="VB.NET" Value="Custom Event ResolveName As ResolveNameEventHandler Implements System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ResolveName</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.Serialization.ResolveNameEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SerializationComplete">
      <MemberSignature Language="C#" Value="event EventHandler System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SerializationComplete;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SerializationComplete" />
      <MemberSignature Language="DocId" Value="E:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#SerializationComplete" />
      <MemberSignature Language="VB.NET" Value="Custom Event SerializationComplete As EventHandler Implements System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SerializationComplete</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SetName">
      <MemberSignature Language="C#" Value="void IDesignerSerializationManager.SetName (object instance, string name);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SetName(object instance, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#SetName(System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Sub SetName (instance As Object, name As String) Implements IDesignerSerializationManager.SetName" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SetName(System::Object ^ instance, System::String ^ name) = System::ComponentModel::Design::Serialization::IDesignerSerializationManager::SetName;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="instance">
          <span data-ttu-id="275f6-333">The object to set the name.</span>
          <span class="sxs-lookup">
            <span data-stu-id="275f6-333">The object to set the name.</span>
          </span>
        </param>
        <param name="name">
          <span data-ttu-id="275f6-334">A <see cref="T:System.String" /> used as the name of the object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="275f6-334">A <see cref="T:System.String" /> used as the name of the object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="275f6-335">Sets the name for the specified object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="275f6-335">Sets the name for the specified object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="275f6-336">Die <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System%23ComponentModel%23Design%23Serialization%23IDesignerSerializationManager%23SetName%2A> -Methode bietet eine Möglichkeit, den Namen eines vorhandenen Objekts festzulegen.</span><span class="sxs-lookup"><span data-stu-id="275f6-336">The <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System%23ComponentModel%23Design%23Serialization%23IDesignerSerializationManager%23SetName%2A> method provides a way to set the name of an existing object.</span></span> <span data-ttu-id="275f6-337">Dies ermöglicht die Erstellung einer Instanz des Objekts durch einen Aufruf der <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System%23ComponentModel%23Design%23Serialization%23IDesignerSerializationManager%23GetInstance%2A> -Methode, vermeiden den Aufwand für die <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="275f6-337">This enables creation of an instance of the object through a call to the <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System%23ComponentModel%23Design%23Serialization%23IDesignerSerializationManager%23GetInstance%2A> method, avoiding the overhead of the <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="275f6-338">One or both of the parameters are <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="275f6-338">One or both of the parameters are <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="275f6-339">The object specified by instance already has a name, or <paramref name="name" /> is already used by another named object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="275f6-339">The object specified by instance already has a name, or <paramref name="name" /> is already used by another named object.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="275f6-340">This property was accessed outside of a serialization session.</span>
          <span class="sxs-lookup">
            <span data-stu-id="275f6-340">This property was accessed outside of a serialization session.</span>
          </span>
        </exception>
        <altmember cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetName(System.Object)" />
        <altmember cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetInstance(System.String)" />
        <altmember cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="System.IServiceProvider.GetService">
      <MemberSignature Language="C#" Value="object IServiceProvider.GetService (Type serviceType);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.IServiceProvider.GetService(class System.Type serviceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#IServiceProvider#GetService(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Function GetService (serviceType As Type) As Object Implements IServiceProvider.GetService" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.IServiceProvider.GetService(Type ^ serviceType) = IServiceProvider::GetService;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="serviceType">
          <span data-ttu-id="275f6-341">An object that specifies the type of service object to get.</span>
          <span class="sxs-lookup">
            <span data-stu-id="275f6-341">An object that specifies the type of service object to get.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="275f6-342">For a description of this member, see the <see cref="M:System.IServiceProvider.GetService(System.Type)" /> method.</span>
          <span class="sxs-lookup">
            <span data-stu-id="275f6-342">For a description of this member, see the <see cref="M:System.IServiceProvider.GetService(System.Type)" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="275f6-343">A service object of type <paramref name="serviceType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="275f6-343">A service object of type <paramref name="serviceType" />.</span>
          </span>
          <span data-ttu-id="275f6-344">-or-  <see langword="null" /> if there is no service object of type <paramref name="serviceType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="275f6-344">-or-  <see langword="null" /> if there is no service object of type <paramref name="serviceType" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="275f6-345">Bei diesem Member handelt es sich um eine explizite Schnittstellenmember-Implementierung.</span><span class="sxs-lookup"><span data-stu-id="275f6-345">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="275f6-346">Er kann nur verwendet werden, wenn die <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager>-Instanz in eine <xref:System.IServiceProvider>-Schnittstelle umgewandelt wird.</span><span class="sxs-lookup"><span data-stu-id="275f6-346">It can be used only when the <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager> instance is cast to an <xref:System.IServiceProvider> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidateRecycledTypes">
      <MemberSignature Language="C#" Value="public bool ValidateRecycledTypes { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ValidateRecycledTypes" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.ValidateRecycledTypes" />
      <MemberSignature Language="VB.NET" Value="Public Property ValidateRecycledTypes As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ValidateRecycledTypes { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ValidateRecycledTypes : bool with get, set" Usage="System.ComponentModel.Design.Serialization.DesignerSerializationManager.ValidateRecycledTypes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="275f6-347">Gets or sets a flag indicating whether the <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /> method will verify that matching names refer to the same type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="275f6-347">Gets or sets a flag indicating whether the <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /> method will verify that matching names refer to the same type.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="275f6-348">
            <see langword="true" /> Wenn <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /> Typen überprüft; andernfalls <see langword="false" /> Wenn dies nicht der Fall.</span>
          <span class="sxs-lookup">
            <span data-stu-id="275f6-348">
              <see langword="true" /> if <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /> verifies types; otherwise, <see langword="false" /> if it does not.</span>
          </span>
          <span data-ttu-id="275f6-349">Die Standardeinstellung ist <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="275f6-349">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="275f6-350">Die <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.ValidateRecycledTypes%2A> Eigenschaft ändert das Verhalten von der <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A> Methode bei der <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.RecycleInstances%2A> -Eigenschaft ist `true`, finden Sie in der folgenden Tabelle.</span><span class="sxs-lookup"><span data-stu-id="275f6-350">The <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.ValidateRecycledTypes%2A> property modifies the behavior of the <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A> method when the <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.RecycleInstances%2A> property is `true`, as detailed in the following table.</span></span>  
  
|`RecycleInstances`|`ValidateRecycledTypes`|<span data-ttu-id="275f6-351">Verhalten von `CreateInstance`</span><span class="sxs-lookup"><span data-stu-id="275f6-351">Behavior of `CreateInstance`</span></span>|  
|------------------------|-----------------------------|----------------------------------|  
|`false`|<span data-ttu-id="275f6-352">`true` oder `false`</span><span class="sxs-lookup"><span data-stu-id="275f6-352">`true` or `false`</span></span>|<span data-ttu-id="275f6-353">Erstellen Sie immer eine neue Instanz des angegebenen Typs</span><span class="sxs-lookup"><span data-stu-id="275f6-353">Always create a new instance of the specified type</span></span>|  
|`true`|`false`|<span data-ttu-id="275f6-354">Sofern eine entsprechende Instanz gefunden wird, unabhängig vom Typ zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="275f6-354">If a matching instance is found it is returned, regardless of its type.</span></span>|  
|`true`|`true`|<span data-ttu-id="275f6-355">Wenn eine entsprechende Instanz gefunden wird, ist es nur zurückgegeben, wenn dessen Typ die gleiche wie im Aufruf Methode angegeben ist.</span><span class="sxs-lookup"><span data-stu-id="275f6-355">If a matching instance is found, it is returned only if its type is the same as specified in the method call.</span></span>|  
  
 <span data-ttu-id="275f6-356"><xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.ValidateRecycledTypes%2A> eignet sich für einen Typ des Objekts in ein anderes verwandeln, wenn sie ähnliche Eigenschaften haben, aber kein gemeinsames übergeordnetes Element Schnittstelle oder.</span><span class="sxs-lookup"><span data-stu-id="275f6-356"><xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.ValidateRecycledTypes%2A> is useful for morphing one type of object to another if they have similar properties but share no common parent or interface.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="275f6-357">The serialization manager has an active serialization session.</span>
          <span class="sxs-lookup">
            <span data-stu-id="275f6-357">The serialization manager has an active serialization session.</span>
          </span>
        </exception>
        <altmember cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" />
        <altmember cref="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.RecycleInstances" />
      </Docs>
    </Member>
  </Members>
</Type>