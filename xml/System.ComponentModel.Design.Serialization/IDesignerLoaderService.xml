<Type Name="IDesignerLoaderService" FullName="System.ComponentModel.Design.Serialization.IDesignerLoaderService">
  <Metadata><Meta Name="ms.openlocfilehash" Value="f4438738ad95585cb9d89ec4584de592177ebe65" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70671082" /></Metadata><TypeSignature Language="C#" Value="public interface IDesignerLoaderService" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IDesignerLoaderService" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Design.Serialization.IDesignerLoaderService" />
  <TypeSignature Language="VB.NET" Value="Public Interface IDesignerLoaderService" />
  <TypeSignature Language="C++ CLI" Value="public interface class IDesignerLoaderService" />
  <TypeSignature Language="F#" Value="type IDesignerLoaderService = interface" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="3d29a-101">Stellt eine Schnittstelle bereit, die ein Designerladeprogramm erweitern kann, um das asynchrone Laden externer Komponenten zu unterstützen.</span><span class="sxs-lookup"><span data-stu-id="3d29a-101">Provides an interface that can extend a designer loader to support asynchronous loading of external components.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d29a-102">Ein <xref:System.ComponentModel.Design.Serialization.DesignerLoader> kann diese Schnittstelle implementieren, um das Laden des Designers zu verwalten, das externe Komponenten umfasst.</span><span class="sxs-lookup"><span data-stu-id="3d29a-102">A <xref:System.ComponentModel.Design.Serialization.DesignerLoader> can implement this interface to manage designer loading that involves external components.</span></span> <span data-ttu-id="3d29a-103">Diese Schnittstelle ermöglicht es externen Komponenten auch, ein erneutes Laden der Entwurfs Oberfläche <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.Reload%2A>durch Aufrufen von zu initiieren.</span><span class="sxs-lookup"><span data-stu-id="3d29a-103">This interface also allows external components to initiate a reload of the design surface by calling <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.Reload%2A>.</span></span> <span data-ttu-id="3d29a-104">Ein Designer Lade Modul muss diese Schnittstelle nicht implementieren, wenn es keine Unterstützung für das asynchrone Laden erfordert.</span><span class="sxs-lookup"><span data-stu-id="3d29a-104">A designer loader does not have to implement this interface if it does not require support for asynchronous loading.</span></span>  
  
 <span data-ttu-id="3d29a-105">Das <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService> Laden des Designers mithilfe einer benutzerdefinierten Implementierung von kann auf verschiedene Weise erfolgen.</span><span class="sxs-lookup"><span data-stu-id="3d29a-105">Designer loading using a custom implementation of the <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService> can occur in a variety of ways.</span></span> <span data-ttu-id="3d29a-106">Manchmal sind externe Komponenten am Ladevorgang beteiligt.</span><span class="sxs-lookup"><span data-stu-id="3d29a-106">Sometimes external components are involved in the loading process.</span></span> <span data-ttu-id="3d29a-107">Um das Laden mit externen Abhängigkeiten zu vereinfachen, stellt die Designer Ladedienst-Schnittstelle einen Mechanismus bereit, der bestimmt, wann der Ladevorgang abgeschlossen ist, und ermöglicht jedem Lade Teil das Signal, dass er abgeschlossen wurde.</span><span class="sxs-lookup"><span data-stu-id="3d29a-107">To facilitate loading with external dependencies, the designer loader service interface provides a mechanism that determines when loading is complete and allows each portion of loading to signal that it has completed.</span></span> <span data-ttu-id="3d29a-108"><xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService> Bestimmt, wann der Ladevorgang durchgeführt wird, indem ein-Counter getestet wird, der die Anzahl der verbleibenden Lade Abhängigkeiten nachverfolgt.</span><span class="sxs-lookup"><span data-stu-id="3d29a-108">The <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService> typically determines when loading is complete by testing a counter that tracks the number of load dependencies remaining.</span></span> <span data-ttu-id="3d29a-109">Wenn jeder Teil der Last abgeschlossen ist, <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.DependentLoadComplete%2A> wird aufgerufen, und der Dienst Dekremente den Leistungs-und Leistungswert.</span><span class="sxs-lookup"><span data-stu-id="3d29a-109">When each portion of the load completes, <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.DependentLoadComplete%2A> is called, and the service decrements the counter.</span></span> <span data-ttu-id="3d29a-110">Um die Anzahl der abhängigen Ladeprozesse festzulegen, <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.AddLoadDependency%2A> rufen Sie einmal für jeden Ladevorgang <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.DependentLoadComplete%2A> auf, der aufruft, wenn das Laden beendet ist.</span><span class="sxs-lookup"><span data-stu-id="3d29a-110">To set the number of dependent load processes, call <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.AddLoadDependency%2A> once for each load process that calls <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.DependentLoadComplete%2A> when its loading is complete.</span></span> <span data-ttu-id="3d29a-111">Wenn der abschließende Ladevorgang abgeschlossen ist, ruft <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderHost.EndLoad%2A> der Dienst auf dem Lade Lade Host auf.</span><span class="sxs-lookup"><span data-stu-id="3d29a-111">When the final loading is complete, the service calls <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderHost.EndLoad%2A> on the loader host.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AddLoadDependency">
      <MemberSignature Language="C#" Value="public void AddLoadDependency ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddLoadDependency() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.IDesignerLoaderService.AddLoadDependency" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddLoadDependency ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddLoadDependency();" />
      <MemberSignature Language="F#" Value="abstract member AddLoadDependency : unit -&gt; unit" Usage="iDesignerLoaderService.AddLoadDependency " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3d29a-112">Registriert eine externe Komponente als Teil des Ladeprozesses, der von dieser Schnittstelle verwaltet wird.</span><span class="sxs-lookup"><span data-stu-id="3d29a-112">Registers an external component as part of the load process managed by this interface.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d29a-113">Ruft <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.AddLoadDependency%2A> für jedes externe Objekt, das am Ladeprozess teilnimmt, einmal auf.</span><span class="sxs-lookup"><span data-stu-id="3d29a-113">Call <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.AddLoadDependency%2A> once for each external object participating in the load process.</span></span> <span data-ttu-id="3d29a-114"><xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.DependentLoadComplete%2A>wird aufgerufen, wenn die Arbeit des Ladevorgangs abgeschlossen ist.</span><span class="sxs-lookup"><span data-stu-id="3d29a-114"><xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.DependentLoadComplete%2A> is called when the work of the load process is done.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DependentLoadComplete">
      <MemberSignature Language="C#" Value="public void DependentLoadComplete (bool successful, System.Collections.ICollection errorCollection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DependentLoadComplete(bool successful, class System.Collections.ICollection errorCollection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.IDesignerLoaderService.DependentLoadComplete(System.Boolean,System.Collections.ICollection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DependentLoadComplete (successful As Boolean, errorCollection As ICollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DependentLoadComplete(bool successful, System::Collections::ICollection ^ errorCollection);" />
      <MemberSignature Language="F#" Value="abstract member DependentLoadComplete : bool * System.Collections.ICollection -&gt; unit" Usage="iDesignerLoaderService.DependentLoadComplete (successful, errorCollection)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="successful" Type="System.Boolean" />
        <Parameter Name="errorCollection" Type="System.Collections.ICollection" />
      </Parameters>
      <Docs>
        <param name="successful"><span data-ttu-id="3d29a-115"><see langword="true" />, wenn das Laden des Designers erfolgreich war, <see langword="false" />, wenn der Ladevorgang aufgrund von Fehlern nicht beendet werden konnte.</span><span class="sxs-lookup"><span data-stu-id="3d29a-115"><see langword="true" /> if the load of the designer is successful; <see langword="false" /> if errors prevented the load from finishing.</span></span></param>
        <param name="errorCollection"><span data-ttu-id="3d29a-116">Eine Auflistung, die, wenn zutreffend, die während des Ladevorgangs aufgetretenen Fehler enthält.</span><span class="sxs-lookup"><span data-stu-id="3d29a-116">A collection of errors that occurred during the load, if any.</span></span> <span data-ttu-id="3d29a-117">Wenn keine Fehler aufgetreten sind, übergeben Sie eine leere Auflistung oder <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="3d29a-117">If no errors occurred, pass either an empty collection or <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="3d29a-118">Signalisiert, dass ein abhängiger Ladevorgang beendet wurde.</span><span class="sxs-lookup"><span data-stu-id="3d29a-118">Signals that a dependent load has finished.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d29a-119">Diese Methode wird aufgerufen, um zu signalisieren, dass ein abhängiger Ladevorgang abgeschlossen wurde.</span><span class="sxs-lookup"><span data-stu-id="3d29a-119">This method is called to signal that a dependent loading operation has completed.</span></span> <span data-ttu-id="3d29a-120">Rufen <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.DependentLoadComplete%2A> Sie einmal für jeden Prozess auf, der durch <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.AddLoadDependency%2A>Aufrufen von registriert wurde. Dies ist bereits abgeschlossen.</span><span class="sxs-lookup"><span data-stu-id="3d29a-120">Call <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.DependentLoadComplete%2A> once for every process that was registered by calling <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.AddLoadDependency%2A>, which has already completed.</span></span>  
  
 <span data-ttu-id="3d29a-121">Wenn der abhängige Ladevorgang erfolgreich ist, legt der `successful` Aufrufer den-Parameter auf `true` fest und `null` übergibt entweder `errorCollection` eine leere Auflistung oder an den-Parameter.</span><span class="sxs-lookup"><span data-stu-id="3d29a-121">If the dependent load succeeds, the caller sets the `successful` parameter to `true` and passes either an empty collection or `null` to the `errorCollection` parameter.</span></span> <span data-ttu-id="3d29a-122">Wenn bei der abhängigen Auslastung Fehler auftreten, legt der Aufrufer `false` den `successful` -Parameter auf fest und übergibt eine Auflistung von Ausnahmen, die den Grund oder `errorCollection` die Gründe für einen Fehler beim-Parameter angeben.</span><span class="sxs-lookup"><span data-stu-id="3d29a-122">If the dependent load encounters errors, the caller sets the `successful` parameter to `false` and passes a collection of exceptions that indicate the reason or reasons for failure to the `errorCollection` parameter.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Reload">
      <MemberSignature Language="C#" Value="public bool Reload ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Reload() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.IDesignerLoaderService.Reload" />
      <MemberSignature Language="VB.NET" Value="Public Function Reload () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Reload();" />
      <MemberSignature Language="F#" Value="abstract member Reload : unit -&gt; bool" Usage="iDesignerLoaderService.Reload " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3d29a-123">Lädt das Entwurfsdokument erneut.</span><span class="sxs-lookup"><span data-stu-id="3d29a-123">Reloads the design document.</span></span></summary>
        <returns><span data-ttu-id="3d29a-124"><see langword="true" />, wenn die Anforderung nach einem erneuten Ladevorgang akzeptiert wird, oder <see langword="false" />, wenn das Ladeprogramm den erneuten Ladevorgang nicht zulässt.</span><span class="sxs-lookup"><span data-stu-id="3d29a-124"><see langword="true" /> if the reload request is accepted, or <see langword="false" /> if the loader does not allow the reload.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d29a-125">Jedes Objekt kann diese Methode aufzurufen, um anzufordern, dass das Lade Modul das Entwurfsdokument erneut lädt.</span><span class="sxs-lookup"><span data-stu-id="3d29a-125">Any object can call this method to request that the loader reload the design document.</span></span> <span data-ttu-id="3d29a-126">Wenn das Lade Modul das erneute Laden unterstützt und dem erneuten Laden entspricht, kann das `true`Designer Lade Modul zurückgeben.</span><span class="sxs-lookup"><span data-stu-id="3d29a-126">If the loader supports reloading and complies with the reload, the designer loader can return `true`.</span></span> <span data-ttu-id="3d29a-127">Andernfalls wird zurück `false`gegeben, was darauf hinweist, dass das erneute Laden nicht stattfindet.</span><span class="sxs-lookup"><span data-stu-id="3d29a-127">Otherwise, it returns `false`, indicating that the reload will not occur.</span></span> <span data-ttu-id="3d29a-128">Aufrufer können nicht sofort auf den erneuten Ladevorgang zurückgreifen. Das Designer Lade Programm kann dies für eine andere Zeit planen, oder es kann versuchen, gleichzeitig neu zu laden.</span><span class="sxs-lookup"><span data-stu-id="3d29a-128">Callers cannot rely on the reload happening immediately; the designer loader can schedule this for some other time, or it can try to reload at once.</span></span>  
  
 <span data-ttu-id="3d29a-129">Der Aufrufer kann dem Benutzer eine Meldung anzeigen, wenn der Designer nicht erneut geladen werden kann.</span><span class="sxs-lookup"><span data-stu-id="3d29a-129">The caller can display a message to the user if the designer cannot be reloaded.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
