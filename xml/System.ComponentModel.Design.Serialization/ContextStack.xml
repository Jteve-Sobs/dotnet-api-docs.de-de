<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ContextStack.xml" source-language="en-US" target-language="de-DE">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5ee39372e13e8e5c6bb6ac16568007f4114539221.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ee39372e13e8e5c6bb6ac16568007f4114539221</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.Design.Serialization.ContextStack">
          <source>Provides a stack object that can be used by a serializer to make information available to nested serializers.</source>
          
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.Serialization.ContextStack">
          <source>Some serializers require information about the context of an object to correctly persist their state.</source>
          <target state="translated">Einige Serialisierungsprogramme benötigen Informationen zum Kontext eines Objekts, um jeweils den Status richtig beibehalten zu können.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.Serialization.ContextStack">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.ContextStack&gt;</ph> class enables a serializer to set data about the context of an object that is being serialized to a stack where another serializer can access it.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.ContextStack&gt;</ph> Klasse ermöglicht ein Serialisierungsprogramm Daten zum Kontext eines Objekts, das serialisiert wird auf einen Stapel festlegen, kann ein anderes Serialisierungsprogramm darauf zugreifen.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.Serialization.ContextStack">
          <source>The value of the <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Context%2A&gt;</ph> property is provided by an <ph id="ph2">&lt;xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager&gt;</ph> to share information of use to some serializers.</source>
          <target state="translated">Der Wert von der <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Context%2A&gt;</ph> Eigenschaft wird bereitgestellt, indem ein <ph id="ph2">&lt;xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager&gt;</ph> Informationen für einige Serialisierungsprogramme gemeinsam verwendet werden.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.Serialization.ContextStack">
          <source>A context stack is useful because the process of serializing a design document can be deeply nested, and objects at each level of nesting may require context information to correctly persist the state of the object.</source>
          <target state="translated">Eine kontextstapels ist hilfreich, da der Vorgang der Serialisierung von einem Entwurfsdokument tief geschachtelt werden kann und Objekte auf jeder Ebene der Schachtelung Kontextinformationen erfordern, um den Zustand des Objekts richtig beibehalten.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.Serialization.ContextStack">
          <source>A serializer can set a context object to the stack before invoking a nested serializer.</source>
          <target state="translated">Ein Serialisierungsprogramm kann ein Kontextobjekt auf den Stapel festlegen, vor dem Aufrufen eines geschachtelten Serialisierungsprogramms.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.Serialization.ContextStack">
          <source>Each object set to the stack should be removed by the serializer that set it after a call to a nested serializer returns.</source>
          <target state="translated">Jedes Objekt, das auf den Stapel festlegen sollten durch das Serialisierungsprogramm entfernt werden, die sie festlegen, nachdem ein Aufruf eines geschachtelten Serialisierungsprogramms zurück.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.Serialization.ContextStack">
          <source>Typically, the objects on the stack contain information about the context of the current object that is being serialized.</source>
          <target state="translated">In der Regel enthalten die Objekte auf dem Stapel Informationen über den Kontext des aktuellen Objekts, das serialisiert wird.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.Serialization.ContextStack">
          <source>A parent serializer adds context information to the stack about the next object to be serialized, calls an appropriate serializer and, when the serializer finishes executing on the object, removes the context information from the stack.</source>
          <target state="translated">Ein übergeordnetes Serialisierungsprogramm fügt Kontextinformationen für den Stapel zum nächsten Objekt serialisiert werden, ein geeignetes Serialisierungsprogramm aufruft und Abschluss das Serialisierungsprogramm für das Objekt ausführen entfernt, die Kontextinformationen aus dem Stapel.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.Serialization.ContextStack">
          <source>It is up to the implementation of each serializer to determine what objects get pushed on this stack.</source>
          <target state="translated">Es ist Aufgabe der Implementierung der einzelnen Serialisierungsprogramme, um zu bestimmen, welche Objekte auf diesem Stapel abgelegt abrufen.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.Serialization.ContextStack">
          <source>As an example, an object with a property named <ph id="ph1">`Enabled`</ph> has a data type of <ph id="ph2">&lt;xref:System.Boolean&gt;</ph>.</source>
          <target state="translated">Beispielsweise können ein Objekt mit einer Eigenschaft mit dem Namen <ph id="ph1">`Enabled`</ph> weist einen Datentyp der <ph id="ph2">&lt;xref:System.Boolean&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.Serialization.ContextStack">
          <source>If a serializer writes this value to a data stream, it might need to include the context or type of property it is writing.</source>
          <target state="translated">Wenn ein Serialisierungsprogramm diesen Wert in einen Datenstrom schreibt, müssen sie möglicherweise enthalten den Kontext oder Typ der Eigenschaft, die geschrieben wird.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.Serialization.ContextStack">
          <source>The serializer does not have this information, however, because it is only instructed to write the <ph id="ph1">&lt;xref:System.Boolean&gt;</ph> value.</source>
          <target state="translated">Das Serialisierungsprogramm verfügt nicht über diese Informationen jedoch, da es nur, zum Schreiben angewiesen wird der <ph id="ph1">&lt;xref:System.Boolean&gt;</ph> Wert.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.Serialization.ContextStack">
          <source>To provide this information to the serializer, the parent serializer can push a <ph id="ph1">&lt;xref:System.ComponentModel.PropertyDescriptor&gt;</ph> that points to the <ph id="ph2">`Enabled`</ph> property on the context stack.</source>
          <target state="translated">Diese Informationen, um dem Serialisierungsprogramm bereitzustellen, kann das übergeordnete Serialisierungsprogramm push eine <ph id="ph1">&lt;xref:System.ComponentModel.PropertyDescriptor&gt;</ph> , verweist auf die <ph id="ph2">`Enabled`</ph> Eigenschaft auf den Stapel.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.Serialization.ContextStack">
          <source>The following code example demonstrates using a <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.ContextStack&gt;</ph> to push and then remove 10 values.</source>
          <target state="translated">Das folgende Codebeispiel veranschaulicht die Verwendung einer <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.ContextStack&gt;</ph> mithilfe von Push übertragen, und entfernen Sie dann auf 10 Werte.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.Serialization.ContextStack">
          <source>for full access to system resources.</source>
          <target state="translated">für Vollzugriff auf Systemressourcen verfügbar sind.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.Serialization.ContextStack">
          <source>Demand values: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph>, <ph id="ph2">&lt;see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" /&gt;</ph>.</source>
          <target state="translated">"Demand" Werte: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph>, <ph id="ph2">&lt;see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.Serialization.ContextStack">
          <source>Associated state:</source>
          <target state="translated">Zugeordneten Zustand:</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.ContextStack.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.Serialization.ContextStack" /&gt;</ph> class.</source>
          
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.ContextStack.#ctor">
          <source>The following code example demonstrates creating a <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.ContextStack&gt;</ph> instance.</source>
          <target state="translated">Das folgende Codebeispiel veranschaulicht das Erstellen einer <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.ContextStack&gt;</ph> Instanz.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.ContextStack.Append(System.Object)">
          <source>A context object to append to the stack.</source>
          
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.ContextStack.Append(System.Object)">
          <source>Appends an object to the end of the stack, rather than pushing it onto the top of the stack.</source>
          
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.ContextStack.Append(System.Object)">
          <source>This method allows a serializer to communicate with other serializers by adding contextual data objects that do not have to be removed in order.</source>
          <target state="translated">Diese Methode kann ein Serialisierungsprogramm für die Kommunikation mit anderen Serialisierungsprogrammen durch Hinzufügen von Kontextdaten-Objekten, die nicht in Reihenfolge entfernt werden.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.ContextStack.Append(System.Object)">
          <source>There is no way to remove an object that was appended to the end of the stack without removing all other objects.</source>
          <target state="translated">Es gibt keine Möglichkeit zum Entfernen eines Objekts, das bis zum Ende des Stapels angefügt wurde, ohne zu entfernen aller anderen Objekte.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.ContextStack.Append(System.Object)">
          <source><ph id="ph1">&lt;paramref name="context" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.Design.Serialization.ContextStack.Current">
          <source>Gets the current object on the stack.</source>
          
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Design.Serialization.ContextStack.Current">
          <source>The current object on the stack, or <ph id="ph1">&lt;see langword="null" /&gt;</ph> if no objects were pushed.</source>
          <target state="translated">Das aktuelle Objekt auf dem Stapel oder <ph id="ph1">&lt;see langword="null" /&gt;</ph> Wenn keine Objekte abgelegt wurden.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Design.Serialization.ContextStack.Current">
          <source>The current object is the object at the top of the stack, or the object last added to the stack.</source>
          <target state="translated">Das aktuelle Objekt ist das Objekt am oberen Ende des Stapels oder das Objekt, auf dem Stapel zuletzt hinzugefügt wurde.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.Design.Serialization.ContextStack">
          <source>Gets or sets the object on the stack at the specified level.</source>
          
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.Design.Serialization.ContextStack.Item(System.Int32)">
          <source>The level of the object to retrieve on the stack.</source>
          
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.Design.Serialization.ContextStack.Item(System.Int32)">
          <source>Level 0 is the top of the stack, level 1 is the next down, and so on.</source>
          
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.Design.Serialization.ContextStack.Item(System.Int32)">
          <source>This level must be 0 or greater.</source>
          
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.Design.Serialization.ContextStack.Item(System.Int32)">
          <source>If level is greater than the number of levels on the stack, it returns <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.Design.Serialization.ContextStack.Item(System.Int32)">
          <source>Gets the object on the stack at the specified level.</source>
          
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Design.Serialization.ContextStack.Item(System.Int32)">
          <source>The object on the stack at the specified level, or <ph id="ph1">&lt;see langword="null" /&gt;</ph> if no object exists at that level.</source>
          <target state="translated">Das Objekt auf dem Stapel auf der angegebenen Ebene oder <ph id="ph1">&lt;see langword="null" /&gt;</ph> , wenn kein Objekt auf dieser Ebene vorhanden ist.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.Design.Serialization.ContextStack.Item(System.Int32)">
          <source><ph id="ph1">&lt;paramref name="level" /&gt;</ph> is less than 0.</source>
          
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.Design.Serialization.ContextStack.Item(System.Type)">
          <source>A type to retrieve from the context stack.</source>
          
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.Design.Serialization.ContextStack.Item(System.Type)">
          <source>Gets the first object on the stack that inherits from or implements the specified type.</source>
          
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Design.Serialization.ContextStack.Item(System.Type)">
          <source>The first object on the stack that inherits from or implements the specified type, or <ph id="ph1">&lt;see langword="null" /&gt;</ph> if no object on the stack implements the type.</source>
          <target state="translated">Das erste Objekt auf dem Stapel, die erbt oder den angegebenen Typ implementiert oder <ph id="ph1">&lt;see langword="null" /&gt;</ph> Wenn kein Objekt auf dem Stapel den Typ implementiert.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Design.Serialization.ContextStack.Item(System.Type)">
          <source>A check is made on each level of the stack, searching for an object that implements or inherits <ph id="ph1">`type`</ph>.</source>
          <target state="translated">Erfolgt eine Überprüfung für jede Ebene im Stapel, suchen für ein Objekt, das implementiert oder erbt <ph id="ph1">`type`</ph>.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Design.Serialization.ContextStack.Item(System.Type)">
          <source>If a match is found, it is returned.</source>
          <target state="translated">Wenn eine Übereinstimmung gefunden wird, wird es zurückgegeben.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.Design.Serialization.ContextStack.Item(System.Type)">
          <source><ph id="ph1">&lt;paramref name="type" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.ContextStack.Pop">
          <source>Removes the current object off of the stack, returning its value.</source>
          
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.ContextStack.Pop">
          <source>The object removed from the stack; <ph id="ph1">&lt;see langword="null" /&gt;</ph> if no objects are on the stack.</source>
          
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.ContextStack.Pop">
          <source>The following code example demonstrates removing a value from a <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.ContextStack&gt;</ph>.</source>
          <target state="translated">Im folgenden Codebeispiel wird veranschaulicht, entfernen einen Wert aus einem <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.ContextStack&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.ContextStack.Push(System.Object)">
          <source>The context object to push onto the stack.</source>
          
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.ContextStack.Push(System.Object)">
          <source>Pushes, or places, the specified object onto the stack.</source>
          
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.ContextStack.Push(System.Object)">
          <source>The following code example demonstrates pushing values to a <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.ContextStack&gt;</ph>.</source>
          <target state="translated">Im folgenden Codebeispiel wird veranschaulicht, wie Werte auf einer <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.ContextStack&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.ContextStack.Push(System.Object)">
          <source><ph id="ph1">&lt;paramref name="context" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>