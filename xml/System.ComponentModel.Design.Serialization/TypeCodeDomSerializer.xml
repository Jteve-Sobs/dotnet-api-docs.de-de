<Type Name="TypeCodeDomSerializer" FullName="System.ComponentModel.Design.Serialization.TypeCodeDomSerializer">
  <Metadata><Meta Name="ms.openlocfilehash" Value="cf21db9d5afb8d7a3f65772a10b16bb4b023599a" /><Meta Name="ms.sourcegitcommit" Value="11d168140aa8fade0768c2a9dde3e3bcacfdfb7d" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="05/27/2020" /><Meta Name="ms.locfileid" Value="83961710" /></Metadata><TypeSignature Language="C#" Value="public class TypeCodeDomSerializer : System.ComponentModel.Design.Serialization.CodeDomSerializerBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TypeCodeDomSerializer extends System.ComponentModel.Design.Serialization.CodeDomSerializerBase" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer" />
  <TypeSignature Language="VB.NET" Value="Public Class TypeCodeDomSerializer&#xA;Inherits CodeDomSerializerBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class TypeCodeDomSerializer : System::ComponentModel::Design::Serialization::CodeDomSerializerBase" />
  <TypeSignature Language="F#" Value="type TypeCodeDomSerializer = class&#xA;    inherit CodeDomSerializerBase" />
  <AssemblyInfo>
    <AssemblyName>System.Design</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms.Design</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="System.Design" FromVersion="5.0.0.0" To="System.Windows.Forms.Design" ToVersion="5.0.0.0" FrameworkAlternate="dotnet-plat-ext-5.0;net-5.0" />
    <TypeForwarding From="System.Design" FromVersion="4.0.0.0" To="System.Windows.Forms.Design" ToVersion="4.0.0.0" FrameworkAlternate="netcore-3.0;netcore-3.1" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.ComponentModel.Design.Serialization.CodeDomSerializerBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.Design.Serialization.DefaultSerializationProvider(typeof(System.ComponentModel.Design.Serialization.CodeDomSerializationProvider))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="20cf9-101">Serialisiert ein Objekt in einen neuen Typ.</span><span class="sxs-lookup"><span data-stu-id="20cf9-101">Serializes an object to a new type.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="20cf9-102">Die <xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer>-Klasse führt die gleichen Aufgaben wie eine <xref:System.ComponentModel.Design.Serialization.CodeDomSerializer>aus, aber durch die Serialisierung eines Objekts über diese Klasse wird ein neuer Typ definiert.</span><span class="sxs-lookup"><span data-stu-id="20cf9-102">The <xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer> class performs the same tasks as a <xref:System.ComponentModel.Design.Serialization.CodeDomSerializer>, but serializing an object through this class defines a new type.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializer" />
    <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
    <altmember cref="T:System.CodeDom.Compiler.CodeDomProvider" />
    <related type="Article" href="/dotnet/framework/reflection-and-codedom/dynamic-source-code-generation-and-compilation"><span data-ttu-id="20cf9-103">Generieren und Kompilieren von dynamischem Quellcode</span><span class="sxs-lookup"><span data-stu-id="20cf9-103">Dynamic Source Code Generation and Compilation</span></span></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TypeCodeDomSerializer ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TypeCodeDomSerializer();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="20cf9-104">Initialisiert eine neue Instanz der Klasse <see cref="T:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer" />.</span><span class="sxs-lookup"><span data-stu-id="20cf9-104">Initializes a new instance of the <see cref="T:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Deserialize">
      <MemberSignature Language="C#" Value="public virtual object Deserialize (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, System.CodeDom.CodeTypeDeclaration declaration);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Deserialize(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, class System.CodeDom.CodeTypeDeclaration declaration) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Deserialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeTypeDeclaration)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Deserialize (manager As IDesignerSerializationManager, declaration As CodeTypeDeclaration) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ Deserialize(System::ComponentModel::Design::Serialization::IDesignerSerializationManager ^ manager, System::CodeDom::CodeTypeDeclaration ^ declaration);" />
      <MemberSignature Language="F#" Value="abstract member Deserialize : System.ComponentModel.Design.Serialization.IDesignerSerializationManager * System.CodeDom.CodeTypeDeclaration -&gt; obj&#xA;override this.Deserialize : System.ComponentModel.Design.Serialization.IDesignerSerializationManager * System.CodeDom.CodeTypeDeclaration -&gt; obj" Usage="typeCodeDomSerializer.Deserialize (manager, declaration)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <Parameter Name="declaration" Type="System.CodeDom.CodeTypeDeclaration" />
      </Parameters>
      <Docs>
        <param name="manager"><span data-ttu-id="20cf9-105">Der Serialisierungs-Manager, der für die Serialisierung verwendet werden soll.</span><span class="sxs-lookup"><span data-stu-id="20cf9-105">The serialization manager to use for serialization.</span></span></param>
        <param name="declaration"><span data-ttu-id="20cf9-106">Die für die Serialisierung zu verwendende Typdeklaration.</span><span class="sxs-lookup"><span data-stu-id="20cf9-106">Type declaration to use for serialization.</span></span></param>
        <summary><span data-ttu-id="20cf9-107">Deserialisiert die angegebene Typdeklaration.</span><span class="sxs-lookup"><span data-stu-id="20cf9-107">Deserializes the given type declaration.</span></span></summary>
        <returns><span data-ttu-id="20cf9-108">Das Stammobjekt.</span><span class="sxs-lookup"><span data-stu-id="20cf9-108">The root object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="20cf9-109">Die <xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Deserialize%2A>-Methode deserialisiert eine zuvor serialisierte Codetyp Deklaration.</span><span class="sxs-lookup"><span data-stu-id="20cf9-109">The <xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Deserialize%2A> method deserializes a previously serialized code type declaration.</span></span> <span data-ttu-id="20cf9-110">Die folgende Tabelle zeigt die Aufgaben, die von der Standard Implementierung ausgeführt werden.</span><span class="sxs-lookup"><span data-stu-id="20cf9-110">The following table shows the tasks default implementation performs.</span></span>  
  
|<span data-ttu-id="20cf9-111">Aufgabe</span><span class="sxs-lookup"><span data-stu-id="20cf9-111">Task</span></span>|<span data-ttu-id="20cf9-112">BESCHREIBUNG</span><span class="sxs-lookup"><span data-stu-id="20cf9-112">Description</span></span>|  
|----------|-----------------|  
|<span data-ttu-id="20cf9-113">Überprüfungen der groß-</span><span class="sxs-lookup"><span data-stu-id="20cf9-113">Case Sensitivity Checks</span></span>|<span data-ttu-id="20cf9-114">Die-Implementierung sucht nach einem <xref:System.CodeDom.Compiler.CodeDomProvider>-Dienst, um zu entscheiden, ob Member bei der Groß-/Kleinschreibung beachtet werden sollen.</span><span class="sxs-lookup"><span data-stu-id="20cf9-114">The implementation searches for a <xref:System.CodeDom.Compiler.CodeDomProvider> service to decide if it should treat members as case sensitive or case insensitive.</span></span>|  
|<span data-ttu-id="20cf9-115">Anweisungs Sortierung</span><span class="sxs-lookup"><span data-stu-id="20cf9-115">Statement Sorting</span></span>|<span data-ttu-id="20cf9-116">Alle Element Variablen und lokalen Variablen aus init-Methoden werden in einer Tabelle gespeichert.</span><span class="sxs-lookup"><span data-stu-id="20cf9-116">All member variables and local variables from init methods are stored in a table.</span></span> <span data-ttu-id="20cf9-117">Anschließend wird jede Anweisung in einer Init-Methode einer Anweisungs Auflistung entsprechend der linken Seite hinzugefügt, sodass alle Anweisungen, die einer bestimmten Variablen zugewiesen oder ausgeführt werden, unter dieser Variablen gruppiert werden.</span><span class="sxs-lookup"><span data-stu-id="20cf9-117">Then each statement in an init method is added to a statement collection grouped according to its left-hand side, so all statements assigning or operating on a particular variable are grouped under that variable.</span></span> <span data-ttu-id="20cf9-118">Variablen, die keine-Anweisungen aufweisen, werden verworfen.</span><span class="sxs-lookup"><span data-stu-id="20cf9-118">Variables that have no statements are discarded.</span></span>|  
|<span data-ttu-id="20cf9-119">Deserialisierung</span><span class="sxs-lookup"><span data-stu-id="20cf9-119">Deserialization</span></span>|<span data-ttu-id="20cf9-120">Die Anweisungs Auflistungen für jede Variable werden entsprechend der Variablen deserialisiert.</span><span class="sxs-lookup"><span data-stu-id="20cf9-120">The statement collections for each variable are deserialized according to the variable.</span></span>|  
  
 <span data-ttu-id="20cf9-121">In der folgenden Tabelle sind die Dienste aufgeführt, die die <xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Deserialize%2A>-Methode erfordert.</span><span class="sxs-lookup"><span data-stu-id="20cf9-121">The following table shows the services the <xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Deserialize%2A> method requires.</span></span>  
  
|<span data-ttu-id="20cf9-122">Dienst</span><span class="sxs-lookup"><span data-stu-id="20cf9-122">Service</span></span>|<span data-ttu-id="20cf9-123">BESCHREIBUNG</span><span class="sxs-lookup"><span data-stu-id="20cf9-123">Description</span></span>|  
|-------------|-----------------|  
|<xref:System.CodeDom.Compiler.CodeDomProvider>|<span data-ttu-id="20cf9-124">Obwohl es nicht unbedingt erforderlich ist, wird der Dienst, falls verfügbar, verwendet, um zu bestimmen, ob bei der Serialisierung die Groß-/Kleinschreibung beachtet werden muss.</span><span class="sxs-lookup"><span data-stu-id="20cf9-124">While not strictly necessary, the service, if available, is used to determine if the serialization should be case sensitive or case insensitive.</span></span>|  
|<xref:System.ComponentModel.IContainer>|<span data-ttu-id="20cf9-125">Wenn ein Objekt während der Deserialisierung in der namens Tabelle nicht vorhanden ist, wird eine Abfrage für <xref:System.ComponentModel.IContainer> durchgeführt.</span><span class="sxs-lookup"><span data-stu-id="20cf9-125">If an object does not exist in the name table during deserialization, a query for <xref:System.ComponentModel.IContainer> is made.</span></span> <span data-ttu-id="20cf9-126">Wenn diese Abfrage erfolgreich ausgeführt wird, wird der Container für das Objekt geprüft.</span><span class="sxs-lookup"><span data-stu-id="20cf9-126">If this query succeeds, the container is checked for the object.</span></span> <span data-ttu-id="20cf9-127">Der Container wird auch als ein eigenständiger Container Argument verwendet, das von Komponenten benötigt wird.</span><span class="sxs-lookup"><span data-stu-id="20cf9-127">The container is also used as a stand-in for any container argument needed by components.</span></span>|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="20cf9-128"><paramref name="manager" /> oder <paramref name="typeDecl" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="20cf9-128"><paramref name="manager" /> or <paramref name="typeDecl" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializer" />
        <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <altmember cref="T:System.CodeDom.Compiler.CodeDomProvider" />
        <altmember cref="T:System.CodeDom.CodeTypeDeclaration" />
        <related type="Article" href="/dotnet/framework/reflection-and-codedom/dynamic-source-code-generation-and-compilation"><span data-ttu-id="20cf9-129">Generieren und Kompilieren von dynamischem Quellcode</span><span class="sxs-lookup"><span data-stu-id="20cf9-129">Dynamic Source Code Generation and Compilation</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetInitializeMethod">
      <MemberSignature Language="C#" Value="protected virtual System.CodeDom.CodeMemberMethod GetInitializeMethod (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, System.CodeDom.CodeTypeDeclaration declaration, object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.CodeDom.CodeMemberMethod GetInitializeMethod(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, class System.CodeDom.CodeTypeDeclaration declaration, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.GetInitializeMethod(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeTypeDeclaration,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetInitializeMethod (manager As IDesignerSerializationManager, declaration As CodeTypeDeclaration, value As Object) As CodeMemberMethod" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::CodeDom::CodeMemberMethod ^ GetInitializeMethod(System::ComponentModel::Design::Serialization::IDesignerSerializationManager ^ manager, System::CodeDom::CodeTypeDeclaration ^ declaration, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member GetInitializeMethod : System.ComponentModel.Design.Serialization.IDesignerSerializationManager * System.CodeDom.CodeTypeDeclaration * obj -&gt; System.CodeDom.CodeMemberMethod&#xA;override this.GetInitializeMethod : System.ComponentModel.Design.Serialization.IDesignerSerializationManager * System.CodeDom.CodeTypeDeclaration * obj -&gt; System.CodeDom.CodeMemberMethod" Usage="typeCodeDomSerializer.GetInitializeMethod (manager, declaration, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeMemberMethod</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <Parameter Name="declaration" Type="System.CodeDom.CodeTypeDeclaration" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="manager"><span data-ttu-id="20cf9-130">Der Serialisierungs-Manager, der für die Serialisierung verwendet werden soll.</span><span class="sxs-lookup"><span data-stu-id="20cf9-130">The serialization manager to use for serialization.</span></span></param>
        <param name="declaration"><span data-ttu-id="20cf9-131">Die Typdeklaration, die für die Serialisierung verwendet werden soll.</span><span class="sxs-lookup"><span data-stu-id="20cf9-131">The type declaration to use for serialization.</span></span></param>
        <param name="value"><span data-ttu-id="20cf9-132">Der für die Serialisierung zu verwendende Wert.</span><span class="sxs-lookup"><span data-stu-id="20cf9-132">The value to use for serialization.</span></span></param>
        <summary><span data-ttu-id="20cf9-133">Gibt die Methode zurück, in der die Anweisungen zum Serialisieren eines Members gespeichert werden.</span><span class="sxs-lookup"><span data-stu-id="20cf9-133">Returns the method where statements used to serialize a member are stored.</span></span></summary>
        <returns><span data-ttu-id="20cf9-134">Die Methode, die verwendet wird, um für den jeweiligen Member den gesamten Initialisierungscode auszugeben.</span><span class="sxs-lookup"><span data-stu-id="20cf9-134">The method used to emit all of the initialization code for the given member.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="20cf9-135">Die <xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.GetInitializeMethod%2A>-Methode gibt die-Methode zurück, um den gesamten Initialisierungs Code für den angegebenen Member auszugeben.</span><span class="sxs-lookup"><span data-stu-id="20cf9-135">The <xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.GetInitializeMethod%2A> method returns the method to emit all of the initialization code for the given member.</span></span> <span data-ttu-id="20cf9-136">Die Standard Implementierung gibt einen leeren Konstruktor zurück.</span><span class="sxs-lookup"><span data-stu-id="20cf9-136">The default implementation returns an empty constructor.</span></span> <span data-ttu-id="20cf9-137">Wenn dieselbe Methode für mehrere Werte zurückgegeben werden soll, sollte dieselbe Instanz der Methode zurückgegeben werden.</span><span class="sxs-lookup"><span data-stu-id="20cf9-137">If the same method is to be returned for multiple values, the same instance of the method should be returned.</span></span> <span data-ttu-id="20cf9-138">Sie können das <xref:System.CodeDom.CodeObject.UserData%2A?displayProperty=nameWithType> Wörterbuch verwenden, um die von Ihnen erstellten Methoden zu merken.</span><span class="sxs-lookup"><span data-stu-id="20cf9-138">You can use the <xref:System.CodeDom.CodeObject.UserData%2A?displayProperty=nameWithType> dictionary to remember methods you have created.</span></span> <span data-ttu-id="20cf9-139">Der `typeDecl`-Parameter kann auch zum Hinzufügen von Infrastruktur Methoden verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="20cf9-139">The `typeDecl` parameter can also be used to add infrastructure methods.</span></span> <span data-ttu-id="20cf9-140">Wenn Sie z. b. eine separate Methode für jedes Objekt ausgeben möchten, benötigen Sie eine einzelne Methode, die wiederum alle diese Methoden aufruft.</span><span class="sxs-lookup"><span data-stu-id="20cf9-140">For example, if you want to emit a separate method for each object, you need a single method that calls all of these methods in turn.</span></span> <span data-ttu-id="20cf9-141">Diese Methode kann bei Bedarf der Codetyp Deklaration hinzugefügt werden.</span><span class="sxs-lookup"><span data-stu-id="20cf9-141">This method can be added to the code type declaration as needed.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="20cf9-142"><paramref name="manager" />, <paramref name="typeDecl" /> oder <paramref name="value" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="20cf9-142"><paramref name="manager" />, <paramref name="typeDecl" />, or <paramref name="value" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializer" />
        <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <altmember cref="T:System.CodeDom.Compiler.CodeDomProvider" />
        <altmember cref="T:System.CodeDom.CodeTypeDeclaration" />
        <related type="Article" href="/dotnet/framework/reflection-and-codedom/dynamic-source-code-generation-and-compilation"><span data-ttu-id="20cf9-143">Generieren und Kompilieren von dynamischem Quellcode</span><span class="sxs-lookup"><span data-stu-id="20cf9-143">Dynamic Source Code Generation and Compilation</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetInitializeMethods">
      <MemberSignature Language="C#" Value="protected virtual System.CodeDom.CodeMemberMethod[] GetInitializeMethods (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, System.CodeDom.CodeTypeDeclaration declaration);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.CodeDom.CodeMemberMethod[] GetInitializeMethods(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, class System.CodeDom.CodeTypeDeclaration declaration) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.GetInitializeMethods(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeTypeDeclaration)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetInitializeMethods (manager As IDesignerSerializationManager, declaration As CodeTypeDeclaration) As CodeMemberMethod()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual cli::array &lt;System::CodeDom::CodeMemberMethod ^&gt; ^ GetInitializeMethods(System::ComponentModel::Design::Serialization::IDesignerSerializationManager ^ manager, System::CodeDom::CodeTypeDeclaration ^ declaration);" />
      <MemberSignature Language="F#" Value="abstract member GetInitializeMethods : System.ComponentModel.Design.Serialization.IDesignerSerializationManager * System.CodeDom.CodeTypeDeclaration -&gt; System.CodeDom.CodeMemberMethod[]&#xA;override this.GetInitializeMethods : System.ComponentModel.Design.Serialization.IDesignerSerializationManager * System.CodeDom.CodeTypeDeclaration -&gt; System.CodeDom.CodeMemberMethod[]" Usage="typeCodeDomSerializer.GetInitializeMethods (manager, declaration)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeMemberMethod[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <Parameter Name="declaration" Type="System.CodeDom.CodeTypeDeclaration" />
      </Parameters>
      <Docs>
        <param name="manager"><span data-ttu-id="20cf9-144">Der Serialisierungs-Manager, der für die Serialisierung verwendet werden soll.</span><span class="sxs-lookup"><span data-stu-id="20cf9-144">The serialization manager to use for serialization.</span></span></param>
        <param name="declaration"><span data-ttu-id="20cf9-145">Die Typdeklaration, die für die Serialisierung verwendet werden soll.</span><span class="sxs-lookup"><span data-stu-id="20cf9-145">The type declaration to use for serialization.</span></span></param>
        <summary><span data-ttu-id="20cf9-146">Gibt ein Array der Methoden zurück, die bei der Deserialisierung interpretiert werden sollen.</span><span class="sxs-lookup"><span data-stu-id="20cf9-146">Returns an array of methods to be interpreted during deserialization.</span></span></summary>
        <returns><span data-ttu-id="20cf9-147">Ein <see cref="T:System.CodeDom.CodeMemberMethod" />-Array der Methoden, die bei der Deserialisierung interpretiert werden sollen.</span><span class="sxs-lookup"><span data-stu-id="20cf9-147">A <see cref="T:System.CodeDom.CodeMemberMethod" /> array of methods to be interpreted during deserialization.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="20cf9-148">Die Standard Implementierung gibt ein Array mit einem einzelnen Element mit dem darin-Konstruktor zurück.</span><span class="sxs-lookup"><span data-stu-id="20cf9-148">The default implementation returns a single-element array with the constructor in it.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="20cf9-149"><paramref name="manager" /> oder <paramref name="typeDecl" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="20cf9-149"><paramref name="manager" /> or <paramref name="typeDecl" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializer" />
        <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <altmember cref="T:System.CodeDom.Compiler.CodeDomProvider" />
        <altmember cref="T:System.CodeDom.CodeTypeDeclaration" />
        <related type="Article" href="/dotnet/framework/reflection-and-codedom/dynamic-source-code-generation-and-compilation"><span data-ttu-id="20cf9-150">Generieren und Kompilieren von dynamischem Quellcode</span><span class="sxs-lookup"><span data-stu-id="20cf9-150">Dynamic Source Code Generation and Compilation</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Serialize">
      <MemberSignature Language="C#" Value="public virtual System.CodeDom.CodeTypeDeclaration Serialize (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object root, System.Collections.ICollection members);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.CodeDom.CodeTypeDeclaration Serialize(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object root, class System.Collections.ICollection members) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Serialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Collections.ICollection)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Serialize (manager As IDesignerSerializationManager, root As Object, members As ICollection) As CodeTypeDeclaration" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::CodeDom::CodeTypeDeclaration ^ Serialize(System::ComponentModel::Design::Serialization::IDesignerSerializationManager ^ manager, System::Object ^ root, System::Collections::ICollection ^ members);" />
      <MemberSignature Language="F#" Value="abstract member Serialize : System.ComponentModel.Design.Serialization.IDesignerSerializationManager * obj * System.Collections.ICollection -&gt; System.CodeDom.CodeTypeDeclaration&#xA;override this.Serialize : System.ComponentModel.Design.Serialization.IDesignerSerializationManager * obj * System.Collections.ICollection -&gt; System.CodeDom.CodeTypeDeclaration" Usage="typeCodeDomSerializer.Serialize (manager, root, members)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeTypeDeclaration</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <Parameter Name="root" Type="System.Object" />
        <Parameter Name="members" Type="System.Collections.ICollection" />
      </Parameters>
      <Docs>
        <param name="manager"><span data-ttu-id="20cf9-151">Der Serialisierungs-Manager, der für die Serialisierung verwendet werden soll.</span><span class="sxs-lookup"><span data-stu-id="20cf9-151">The serialization manager to use for serialization.</span></span></param>
        <param name="root"><span data-ttu-id="20cf9-152">Das zu serialisierende Objekt.</span><span class="sxs-lookup"><span data-stu-id="20cf9-152">The object to serialize.</span></span></param>
        <param name="members"><span data-ttu-id="20cf9-153">Optionale Auflistung der Member.</span><span class="sxs-lookup"><span data-stu-id="20cf9-153">Optional collection of members.</span></span> <span data-ttu-id="20cf9-154">Kann <see langword="null" /> oder leer sein.</span><span class="sxs-lookup"><span data-stu-id="20cf9-154">Can be <see langword="null" /> or empty.</span></span></param>
        <summary><span data-ttu-id="20cf9-155">Serialisiert den Objektstamm durch das Erstellen einer neuen Typdeklaration, die den Stamm definiert.</span><span class="sxs-lookup"><span data-stu-id="20cf9-155">Serializes the object root by creating a new type declaration that defines root.</span></span></summary>
        <returns><span data-ttu-id="20cf9-156">Eine <see cref="T:System.CodeDom.CodeTypeDeclaration" />, die das Stammobjekt definiert.</span><span class="sxs-lookup"><span data-stu-id="20cf9-156">A <see cref="T:System.CodeDom.CodeTypeDeclaration" /> that defines the root object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="20cf9-157">Die <xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Serialize%2A>-Methode serialisiert das angegebene Stamm Objekt und optional eine Auflistung von Membern, um eine neue Typdefinition zu erstellen.</span><span class="sxs-lookup"><span data-stu-id="20cf9-157">The <xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Serialize%2A> method serializes the given root object and optional collection of members to create a new type definition.</span></span> <span data-ttu-id="20cf9-158">Wenn die `members` Auflistung Werte enthält, werden diese Werte serialisiert.</span><span class="sxs-lookup"><span data-stu-id="20cf9-158">If the `members` collection contains values, these values are serialized.</span></span> <span data-ttu-id="20cf9-159">Werte selbst können als Element Variablen oder lokale Variablen serialisiert werden.</span><span class="sxs-lookup"><span data-stu-id="20cf9-159">Values themselves may serialize as either member variables or local variables.</span></span> <span data-ttu-id="20cf9-160">Diese Bestimmung erfolgt durch die Suche nach einer Extendereigenschaft für das Objekt mit dem Namen `GenerateMember`.</span><span class="sxs-lookup"><span data-stu-id="20cf9-160">This determination is done by searching for an extender property on the object called `GenerateMember`.</span></span> <span data-ttu-id="20cf9-161">Wenn `true`, wird ein Member generiert.</span><span class="sxs-lookup"><span data-stu-id="20cf9-161">If `true`, a member is generated.</span></span> <span data-ttu-id="20cf9-162">Andernfalls wird eine lokale Variable generiert.</span><span class="sxs-lookup"><span data-stu-id="20cf9-162">Otherwise, a local variable is generated.</span></span> <span data-ttu-id="20cf9-163">Der-`members` Auflistung kann das Root-Objekt enthalten.</span><span class="sxs-lookup"><span data-stu-id="20cf9-163">For convenience, the `members` collection can contain the root object.</span></span> <span data-ttu-id="20cf9-164">In diesem Fall wird das Stamm Objekt nicht auch als Member oder lokale Variable hinzugefügt.</span><span class="sxs-lookup"><span data-stu-id="20cf9-164">In this case, the root object is not also added as a member or local variable.</span></span>  
  
 <span data-ttu-id="20cf9-165">Der Name des zurückgegebenen Typs wird aus dem Namen des Stamm Objekts entnommen, wenn es sich um ein benanntes Objekt handelt.</span><span class="sxs-lookup"><span data-stu-id="20cf9-165">The name of the returned type is taken from the root object's name, if it was a named object.</span></span> <span data-ttu-id="20cf9-166">Andernfalls wird ein Name aus dem einfachen Typnamen der Stamm Klasse hergestellt.</span><span class="sxs-lookup"><span data-stu-id="20cf9-166">If not, a name is fabricated from the simple type name of the root class.</span></span>  
  
 <span data-ttu-id="20cf9-167">In der folgenden Tabelle sind die Aufgaben aufgeführt, die von der Standard Implementierung der <xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Serialize%2A>-Methode ausgeführt werden.</span><span class="sxs-lookup"><span data-stu-id="20cf9-167">The following table shows the tasks performed by the default implementation of the <xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Serialize%2A> method.</span></span>  
  
|<span data-ttu-id="20cf9-168">Aufgabe</span><span class="sxs-lookup"><span data-stu-id="20cf9-168">Task</span></span>|<span data-ttu-id="20cf9-169">BESCHREIBUNG</span><span class="sxs-lookup"><span data-stu-id="20cf9-169">Description</span></span>|  
|----------|-----------------|  
|<span data-ttu-id="20cf9-170">Context-Seeding</span><span class="sxs-lookup"><span data-stu-id="20cf9-170">Context Seeding</span></span>|<span data-ttu-id="20cf9-171">Der Serialisierungskontext wird mit Daten initialisiert, einschließlich der <xref:System.ComponentModel.Design.Serialization.RootContext> und <xref:System.CodeDom.CodeTypeDeclaration></span><span class="sxs-lookup"><span data-stu-id="20cf9-171">The serialization context is initialized with data including the <xref:System.ComponentModel.Design.Serialization.RootContext> and <xref:System.CodeDom.CodeTypeDeclaration></span></span>|  
|<span data-ttu-id="20cf9-172">Elementserialisierung</span><span class="sxs-lookup"><span data-stu-id="20cf9-172">Member Serialization</span></span>|<span data-ttu-id="20cf9-173">Als nächstes werden <xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Serialize%2A> alle Member durchlaufen und <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToExpression%2A>aufruft.</span><span class="sxs-lookup"><span data-stu-id="20cf9-173">Next, <xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Serialize%2A> walks all of the members and calls <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToExpression%2A>.</span></span> <span data-ttu-id="20cf9-174">Da die Serialisierung in <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToExpression%2A>opportunistisch erfolgt, wird dadurch sichergestellt, dass die Serialisierung nicht zweimal erfolgt.</span><span class="sxs-lookup"><span data-stu-id="20cf9-174">Because serialization is done opportunistically in <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToExpression%2A>, this ensures that serialization is not done twice.</span></span>|  
|<span data-ttu-id="20cf9-175">Stammserialisierung</span><span class="sxs-lookup"><span data-stu-id="20cf9-175">Root Serialization</span></span>|<span data-ttu-id="20cf9-176">Als nächstes wird das Stamm Objekt serialisiert, und seine Anweisungen werden der Anweisungs Auflistung hinzugefügt.</span><span class="sxs-lookup"><span data-stu-id="20cf9-176">Next, the root object is serialized and its statements are added to the statement collection.</span></span>|  
|<span data-ttu-id="20cf9-177">Anweisungs Integration</span><span class="sxs-lookup"><span data-stu-id="20cf9-177">Statement Integration</span></span>|<span data-ttu-id="20cf9-178">Nachdem alle Objekte serialisiert wurden, ordnet die <xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Serialize%2A>-Methode die-Anweisungen an und fügt Sie einer Methode hinzu, die von <xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.GetInitializeMethod%2A>zurückgegeben wird.</span><span class="sxs-lookup"><span data-stu-id="20cf9-178">After all objects are serialized, the <xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Serialize%2A> method orders the statements and adds them to a method returned from <xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.GetInitializeMethod%2A>.</span></span> <span data-ttu-id="20cf9-179">Schließlich wird ein Konstruktor erfunden, der alle Methoden aufruft, die von <xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.GetInitializeMethod%2A>zurückgegeben werden.</span><span class="sxs-lookup"><span data-stu-id="20cf9-179">Finally, a constructor is fabricated that calls all of the methods returned from <xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.GetInitializeMethod%2A>.</span></span>|  
  
-  
  
 <span data-ttu-id="20cf9-180">In der folgenden Tabelle sind die Objekte aufgeführt, die die <xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Serialize%2A>-Methode im Kontext Stapel platziert.</span><span class="sxs-lookup"><span data-stu-id="20cf9-180">The following table shows the objects the <xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Serialize%2A> method places on the context stack.</span></span>  
  
|<span data-ttu-id="20cf9-181">Instanz</span><span class="sxs-lookup"><span data-stu-id="20cf9-181">Instance</span></span>|<span data-ttu-id="20cf9-182">BESCHREIBUNG</span><span class="sxs-lookup"><span data-stu-id="20cf9-182">Description</span></span>|  
|--------------|-----------------|  
|<xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer>|<span data-ttu-id="20cf9-183">Dieses Serialisierungsprogramm.</span><span class="sxs-lookup"><span data-stu-id="20cf9-183">This serializer.</span></span> <span data-ttu-id="20cf9-184">Das Ableiten von Klassen kann es hilfreich sein, dieser Klasse öffentliche Eigenschaften hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="20cf9-184">Deriving classes may find it useful to add public properties to this class.</span></span>|  
|<xref:System.CodeDom.CodeTypeDeclaration>|<span data-ttu-id="20cf9-185">Der Typ, der erstellt wird.</span><span class="sxs-lookup"><span data-stu-id="20cf9-185">The type being created.</span></span> <span data-ttu-id="20cf9-186">Die meisten Objekte benötigen keinen direkten Zugriff auf dieses.</span><span class="sxs-lookup"><span data-stu-id="20cf9-186">Most objects do not need direct access to this.</span></span>|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="20cf9-187"><paramref name="manager" /> oder <paramref name="root" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="20cf9-187"><paramref name="manager" /> or <paramref name="root" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializer" />
        <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <altmember cref="T:System.CodeDom.Compiler.CodeDomProvider" />
        <altmember cref="T:System.CodeDom.CodeTypeDeclaration" />
        <related type="Article" href="/dotnet/framework/reflection-and-codedom/dynamic-source-code-generation-and-compilation"><span data-ttu-id="20cf9-188">Generieren und Kompilieren von dynamischem Quellcode</span><span class="sxs-lookup"><span data-stu-id="20cf9-188">Dynamic Source Code Generation and Compilation</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>
