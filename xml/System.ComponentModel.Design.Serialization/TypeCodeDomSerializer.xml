<Type Name="TypeCodeDomSerializer" FullName="System.ComponentModel.Design.Serialization.TypeCodeDomSerializer">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="65c87864b4321c7a14ca30be60b486679a4325c4" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class TypeCodeDomSerializer : System.ComponentModel.Design.Serialization.CodeDomSerializerBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TypeCodeDomSerializer extends System.ComponentModel.Design.Serialization.CodeDomSerializerBase" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer" />
  <TypeSignature Language="VB.NET" Value="Public Class TypeCodeDomSerializer&#xA;Inherits CodeDomSerializerBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class TypeCodeDomSerializer : System::ComponentModel::Design::Serialization::CodeDomSerializerBase" />
  <AssemblyInfo>
    <AssemblyName>System.Design</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.Design.Serialization.CodeDomSerializerBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.Design.Serialization.DefaultSerializationProvider(typeof(System.ComponentModel.Design.Serialization.CodeDomSerializationProvider))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="41ad8-101">Serialisiert ein Objekt in einen neuen Typ.</span>
      <span class="sxs-lookup">
        <span data-stu-id="41ad8-101">Serializes an object to a new type.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41ad8-102">Die <xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer> Klasse führt dieselben Aufgaben wie eine <xref:System.ComponentModel.Design.Serialization.CodeDomSerializer>, jedoch einen neuen Typ Serialisieren eines Objekts über diese Klasse definiert.</span><span class="sxs-lookup"><span data-stu-id="41ad8-102">The <xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer> class performs the same tasks as a <xref:System.ComponentModel.Design.Serialization.CodeDomSerializer>, but serializing an object through this class defines a new type.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializer" />
    <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
    <altmember cref="T:System.CodeDom.Compiler.CodeDomProvider" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TypeCodeDomSerializer ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TypeCodeDomSerializer();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="41ad8-103">Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer" />-Klasse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41ad8-103">Initializes a new instance of the <see cref="T:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Deserialize">
      <MemberSignature Language="C#" Value="public virtual object Deserialize (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, System.CodeDom.CodeTypeDeclaration declaration);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Deserialize(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, class System.CodeDom.CodeTypeDeclaration declaration) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Deserialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeTypeDeclaration)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Deserialize (manager As IDesignerSerializationManager, declaration As CodeTypeDeclaration) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ Deserialize(System::ComponentModel::Design::Serialization::IDesignerSerializationManager ^ manager, System::CodeDom::CodeTypeDeclaration ^ declaration);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <Parameter Name="declaration" Type="System.CodeDom.CodeTypeDeclaration" />
      </Parameters>
      <Docs>
        <param name="manager">
          <span data-ttu-id="41ad8-104">Der Serialisierungs-Manager, der für die Serialisierung verwendet werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41ad8-104">The serialization manager to use for serialization.</span>
          </span>
        </param>
        <param name="declaration">
          <span data-ttu-id="41ad8-105">Die für die Serialisierung zu verwendende Typdeklaration.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41ad8-105">Type declaration to use for serialization.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41ad8-106">Deserialisiert die angegebene Typdeklaration.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41ad8-106">Deserializes the given type declaration.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="41ad8-107">Das Stammobjekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41ad8-107">The root object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41ad8-108">Die <xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Deserialize%2A> Methode deserialisiert eine zuvor serialisierte Codetypdeklaration.</span><span class="sxs-lookup"><span data-stu-id="41ad8-108">The <xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Deserialize%2A> method deserializes a previously serialized code type declaration.</span></span> <span data-ttu-id="41ad8-109">Die folgende Tabelle zeigt, dass bei der Standardimplementierung Aufgaben ausführt.</span><span class="sxs-lookup"><span data-stu-id="41ad8-109">The following table shows the tasks default implementation performs.</span></span>  
  
|<span data-ttu-id="41ad8-110">Aufgabe</span><span class="sxs-lookup"><span data-stu-id="41ad8-110">Task</span></span>|<span data-ttu-id="41ad8-111">Beschreibung </span><span class="sxs-lookup"><span data-stu-id="41ad8-111">Description</span></span>|  
|----------|-----------------|  
|<span data-ttu-id="41ad8-112">Groß-/Kleinschreibung Überprüfungen</span><span class="sxs-lookup"><span data-stu-id="41ad8-112">Case Sensitivity Checks</span></span>|<span data-ttu-id="41ad8-113">Die Implementierung sucht nach einem <xref:System.CodeDom.Compiler.CodeDomProvider> Dienst entscheiden, ob es Member als Groß-/Kleinschreibung beachtet oder Groß-/Kleinschreibung beachten behandeln soll.</span><span class="sxs-lookup"><span data-stu-id="41ad8-113">The implementation searches for a <xref:System.CodeDom.Compiler.CodeDomProvider> service to decide if it should treat members as case sensitive or case insensitive.</span></span>|  
|<span data-ttu-id="41ad8-114">Anweisung sortieren</span><span class="sxs-lookup"><span data-stu-id="41ad8-114">Statement Sorting</span></span>|<span data-ttu-id="41ad8-115">Alle Membervariablen und lokale Variablen von Init-Methoden werden in einer Tabelle gespeichert.</span><span class="sxs-lookup"><span data-stu-id="41ad8-115">All member variables and local variables from init methods are stored in a table.</span></span> <span data-ttu-id="41ad8-116">Klicken Sie dann wird eine Anweisung nach der linken Seite gruppiert werden, damit alle Anweisungen zuweisen oder Vorgänge für eine bestimmte Variable unter diese Variable gruppiert sind jede Anweisung in einer Initialisierungsmethode, Auflistung hinzugefügt.</span><span class="sxs-lookup"><span data-stu-id="41ad8-116">Then each statement in an init method is added to a statement collection grouped according to its left-hand side, so all statements assigning or operating on a particular variable are grouped under that variable.</span></span> <span data-ttu-id="41ad8-117">Variablen, die keine Anweisungen haben, werden verworfen.</span><span class="sxs-lookup"><span data-stu-id="41ad8-117">Variables that have no statements are discarded.</span></span>|  
|<span data-ttu-id="41ad8-118">Deserialisierung</span><span class="sxs-lookup"><span data-stu-id="41ad8-118">Deserialization</span></span>|<span data-ttu-id="41ad8-119">Die Anweisung Sammlungen für jede Variable werden gemäß der Variable deserialisiert.</span><span class="sxs-lookup"><span data-stu-id="41ad8-119">The statement collections for each variable are deserialized according to the variable.</span></span>|  
  
 <span data-ttu-id="41ad8-120">Die folgende Tabelle zeigt die Dienste der <xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Deserialize%2A> Methode erfordert.</span><span class="sxs-lookup"><span data-stu-id="41ad8-120">The following table shows the services the <xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Deserialize%2A> method requires.</span></span>  
  
|<span data-ttu-id="41ad8-121">Dienst</span><span class="sxs-lookup"><span data-stu-id="41ad8-121">Service</span></span>|<span data-ttu-id="41ad8-122">Beschreibung </span><span class="sxs-lookup"><span data-stu-id="41ad8-122">Description</span></span>|  
|-------------|-----------------|  
|<xref:System.CodeDom.Compiler.CodeDomProvider>|<span data-ttu-id="41ad8-123">Zwar nicht unbedingt erforderlich ist, wird der Dienst, falls verfügbar, verwendet, um festzustellen, ob die Serialisierung Groß-/Kleinschreibung beachtet oder Groß-/Kleinschreibung beachtet werden soll.</span><span class="sxs-lookup"><span data-stu-id="41ad8-123">While not strictly necessary, the service, if available, is used to determine if the serialization should be case sensitive or case insensitive.</span></span>|  
|<xref:System.ComponentModel.IContainer>|<span data-ttu-id="41ad8-124">Wenn ein Objekt nicht in der Namenstabelle, während der Deserialisierung wird eine Abfrage für vorhanden ist <xref:System.ComponentModel.IContainer> erfolgt.</span><span class="sxs-lookup"><span data-stu-id="41ad8-124">If an object does not exist in the name table during deserialization, a query for <xref:System.ComponentModel.IContainer> is made.</span></span> <span data-ttu-id="41ad8-125">Wenn diese Abfrage erfolgreich ist, wird der Container für das Objekt überprüft.</span><span class="sxs-lookup"><span data-stu-id="41ad8-125">If this query succeeds, the container is checked for the object.</span></span> <span data-ttu-id="41ad8-126">Der Container dient auch als Ersatz für ein weiteres Containerargument von Komponenten benötigt werden.</span><span class="sxs-lookup"><span data-stu-id="41ad8-126">The container is also used as a stand-in for any container argument needed by components.</span></span>|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="41ad8-127">
            <paramref name="manager" /> oder <paramref name="typeDecl" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41ad8-127">
              <paramref name="manager" /> or <paramref name="typeDecl" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializer" />
        <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <altmember cref="T:System.CodeDom.Compiler.CodeDomProvider" />
        <altmember cref="T:System.CodeDom.CodeTypeDeclaration" />
      </Docs>
    </Member>
    <Member MemberName="GetInitializeMethod">
      <MemberSignature Language="C#" Value="protected virtual System.CodeDom.CodeMemberMethod GetInitializeMethod (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, System.CodeDom.CodeTypeDeclaration declaration, object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.CodeDom.CodeMemberMethod GetInitializeMethod(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, class System.CodeDom.CodeTypeDeclaration declaration, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.GetInitializeMethod(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeTypeDeclaration,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetInitializeMethod (manager As IDesignerSerializationManager, declaration As CodeTypeDeclaration, value As Object) As CodeMemberMethod" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::CodeDom::CodeMemberMethod ^ GetInitializeMethod(System::ComponentModel::Design::Serialization::IDesignerSerializationManager ^ manager, System::CodeDom::CodeTypeDeclaration ^ declaration, System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeMemberMethod</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <Parameter Name="declaration" Type="System.CodeDom.CodeTypeDeclaration" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="manager">
          <span data-ttu-id="41ad8-128">Der Serialisierungs-Manager, der für die Serialisierung verwendet werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41ad8-128">The serialization manager to use for serialization.</span>
          </span>
        </param>
        <param name="declaration">
          <span data-ttu-id="41ad8-129">Die Typdeklaration, die für die Serialisierung verwendet werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41ad8-129">The type declaration to use for serialization.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="41ad8-130">Der für die Serialisierung zu verwendende Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41ad8-130">The value to use for serialization.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41ad8-131">Gibt die Methode zurück, in der die Anweisungen zum Serialisieren eines Members gespeichert werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41ad8-131">Returns the method where statements used to serialize a member are stored.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="41ad8-132">Die Methode, die verwendet wird, um für den jeweiligen Member den gesamten Initialisierungscode auszugeben.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41ad8-132">The method used to emit all of the initialization code for the given member.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41ad8-133">Die <xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.GetInitializeMethod%2A> -Methode gibt die Methode, um für den jeweiligen Member den gesamten Initialisierungscode auszugeben.</span><span class="sxs-lookup"><span data-stu-id="41ad8-133">The <xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.GetInitializeMethod%2A> method returns the method to emit all of the initialization code for the given member.</span></span> <span data-ttu-id="41ad8-134">Die Standardimplementierung gibt einen leeren Konstruktor zurück.</span><span class="sxs-lookup"><span data-stu-id="41ad8-134">The default implementation returns an empty constructor.</span></span> <span data-ttu-id="41ad8-135">Wenn die gleiche Methode ist für mehrere Werte zurückgegeben werden soll, sollte die gleiche Instanz von der Methode zurückgegeben werden.</span><span class="sxs-lookup"><span data-stu-id="41ad8-135">If the same method is to be returned for multiple values, the same instance of the method should be returned.</span></span> <span data-ttu-id="41ad8-136">Sie können die <xref:System.CodeDom.CodeObject.UserData%2A?displayProperty=nameWithType> Wörterbuch Methoden merken Sie erstellt haben.</span><span class="sxs-lookup"><span data-stu-id="41ad8-136">You can use the <xref:System.CodeDom.CodeObject.UserData%2A?displayProperty=nameWithType> dictionary to remember methods you have created.</span></span> <span data-ttu-id="41ad8-137">Die `typeDecl` Parameter kann auch verwendet werden, um die Infrastrukturmethoden hinzufügen.</span><span class="sxs-lookup"><span data-stu-id="41ad8-137">The `typeDecl` parameter can also be used to add infrastructure methods.</span></span> <span data-ttu-id="41ad8-138">Wenn Sie eine separate Methode für jedes Objekt ausgeben möchten, benötigen Sie z. B. eine einzelne Methode, die wiederum von all diese Methoden aufruft.</span><span class="sxs-lookup"><span data-stu-id="41ad8-138">For example, if you want to emit a separate method for each object, you need a single method that calls all of these methods in turn.</span></span> <span data-ttu-id="41ad8-139">Diese Methode kann die Codetypdeklaration nach Bedarf hinzugefügt werden.</span><span class="sxs-lookup"><span data-stu-id="41ad8-139">This method can be added to the code type declaration as needed.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="41ad8-140">
            <paramref name="manager" />, <paramref name="typeDecl" /> oder <paramref name="value" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41ad8-140">
              <paramref name="manager" />, <paramref name="typeDecl" />, or <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializer" />
        <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <altmember cref="T:System.CodeDom.Compiler.CodeDomProvider" />
        <altmember cref="T:System.CodeDom.CodeTypeDeclaration" />
      </Docs>
    </Member>
    <Member MemberName="GetInitializeMethods">
      <MemberSignature Language="C#" Value="protected virtual System.CodeDom.CodeMemberMethod[] GetInitializeMethods (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, System.CodeDom.CodeTypeDeclaration declaration);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.CodeDom.CodeMemberMethod[] GetInitializeMethods(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, class System.CodeDom.CodeTypeDeclaration declaration) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.GetInitializeMethods(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeTypeDeclaration)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetInitializeMethods (manager As IDesignerSerializationManager, declaration As CodeTypeDeclaration) As CodeMemberMethod()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual cli::array &lt;System::CodeDom::CodeMemberMethod ^&gt; ^ GetInitializeMethods(System::ComponentModel::Design::Serialization::IDesignerSerializationManager ^ manager, System::CodeDom::CodeTypeDeclaration ^ declaration);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeMemberMethod[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <Parameter Name="declaration" Type="System.CodeDom.CodeTypeDeclaration" />
      </Parameters>
      <Docs>
        <param name="manager">
          <span data-ttu-id="41ad8-141">Der Serialisierungs-Manager, der für die Serialisierung verwendet werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41ad8-141">The serialization manager to use for serialization.</span>
          </span>
        </param>
        <param name="declaration">
          <span data-ttu-id="41ad8-142">Die Typdeklaration, die für die Serialisierung verwendet werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41ad8-142">The type declaration to use for serialization.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41ad8-143">Gibt ein Array der Methoden zurück, die bei der Deserialisierung interpretiert werden sollen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41ad8-143">Returns an array of methods to be interpreted during deserialization.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="41ad8-144">Ein <see cref="T:System.CodeDom.CodeMemberMethod" />-Array der Methoden, die bei der Deserialisierung interpretiert werden sollen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41ad8-144">A <see cref="T:System.CodeDom.CodeMemberMethod" /> array of methods to be interpreted during deserialization.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41ad8-145">Die Standardimplementierung gibt ein Array mit einzelnen Elementen mit dem Konstruktor darin zurück.</span><span class="sxs-lookup"><span data-stu-id="41ad8-145">The default implementation returns a single-element array with the constructor in it.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="41ad8-146">
            <paramref name="manager" /> oder <paramref name="typeDecl" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41ad8-146">
              <paramref name="manager" /> or <paramref name="typeDecl" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializer" />
        <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <altmember cref="T:System.CodeDom.Compiler.CodeDomProvider" />
        <altmember cref="T:System.CodeDom.CodeTypeDeclaration" />
      </Docs>
    </Member>
    <Member MemberName="Serialize">
      <MemberSignature Language="C#" Value="public virtual System.CodeDom.CodeTypeDeclaration Serialize (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object root, System.Collections.ICollection members);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.CodeDom.CodeTypeDeclaration Serialize(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object root, class System.Collections.ICollection members) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Serialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Collections.ICollection)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Serialize (manager As IDesignerSerializationManager, root As Object, members As ICollection) As CodeTypeDeclaration" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::CodeDom::CodeTypeDeclaration ^ Serialize(System::ComponentModel::Design::Serialization::IDesignerSerializationManager ^ manager, System::Object ^ root, System::Collections::ICollection ^ members);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeTypeDeclaration</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <Parameter Name="root" Type="System.Object" />
        <Parameter Name="members" Type="System.Collections.ICollection" />
      </Parameters>
      <Docs>
        <param name="manager">
          <span data-ttu-id="41ad8-147">Der Serialisierungs-Manager, der für die Serialisierung verwendet werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41ad8-147">The serialization manager to use for serialization.</span>
          </span>
        </param>
        <param name="root">
          <span data-ttu-id="41ad8-148">Das zu serialisierende Objekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41ad8-148">The object to serialize.</span>
          </span>
        </param>
        <param name="members">
          <span data-ttu-id="41ad8-149">Optionale Auflistung der Member.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41ad8-149">Optional collection of members.</span>
          </span>
          <span data-ttu-id="41ad8-150">Kann <see langword="null" /> oder leer sein.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41ad8-150">Can be <see langword="null" /> or empty.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41ad8-151">Serialisiert den Objektstamm durch das Erstellen einer neuen Typdeklaration, die den Stamm definiert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41ad8-151">Serializes the object root by creating a new type declaration that defines root.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="41ad8-152">Eine <see cref="T:System.CodeDom.CodeTypeDeclaration" />, die das Stammobjekt definiert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41ad8-152">A <see cref="T:System.CodeDom.CodeTypeDeclaration" /> that defines the root object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41ad8-153">Die <xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Serialize%2A> -Methode serialisiert das angegebene Stammobjekt und eine optionale Auflistung von Elementen, um eine neue Definition zu erstellen.</span><span class="sxs-lookup"><span data-stu-id="41ad8-153">The <xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Serialize%2A> method serializes the given root object and optional collection of members to create a new type definition.</span></span> <span data-ttu-id="41ad8-154">Wenn die `members` Auflistung Werte enthält, werden diese Werte serialisiert.</span><span class="sxs-lookup"><span data-stu-id="41ad8-154">If the `members` collection contains values, these values are serialized.</span></span> <span data-ttu-id="41ad8-155">Werte selbst können als Membervariablen oder lokalen Variablen zu serialisieren.</span><span class="sxs-lookup"><span data-stu-id="41ad8-155">Values themselves may serialize as either member variables or local variables.</span></span> <span data-ttu-id="41ad8-156">Diese Ermittlung erfolgt durch die Suche nach einer Extendereigenschaft für das Objekt aufgerufen `GenerateMember`.</span><span class="sxs-lookup"><span data-stu-id="41ad8-156">This determination is done by searching for an extender property on the object called `GenerateMember`.</span></span> <span data-ttu-id="41ad8-157">Wenn `true`, ein Element generiert wird.</span><span class="sxs-lookup"><span data-stu-id="41ad8-157">If `true`, a member is generated.</span></span> <span data-ttu-id="41ad8-158">Andernfalls wird eine lokale Variable generiert.</span><span class="sxs-lookup"><span data-stu-id="41ad8-158">Otherwise, a local variable is generated.</span></span> <span data-ttu-id="41ad8-159">Der Einfachheit halber der `members` -Auflistung das Stammobjekt enthalten kann.</span><span class="sxs-lookup"><span data-stu-id="41ad8-159">For convenience, the `members` collection can contain the root object.</span></span> <span data-ttu-id="41ad8-160">In diesem Fall wird das Stammobjekt nicht auch als ein Element oder eine lokale Variable hinzugefügt.</span><span class="sxs-lookup"><span data-stu-id="41ad8-160">In this case, the root object is not also added as a member or local variable.</span></span>  
  
 <span data-ttu-id="41ad8-161">Namen für das Stammobjekt, wird der Name des zurückgegebenen Typs entnommen, wenn es sich um ein benanntes Objekt war.</span><span class="sxs-lookup"><span data-stu-id="41ad8-161">The name of the returned type is taken from the root object’s name, if it was a named object.</span></span> <span data-ttu-id="41ad8-162">Wenn dies nicht der Fall ist, ein Namen aus der einfache Typname der Stammklasse erstellt wird.</span><span class="sxs-lookup"><span data-stu-id="41ad8-162">If not, a name is fabricated from the simple type name of the root class.</span></span>  
  
 <span data-ttu-id="41ad8-163">Die folgende Tabelle zeigt die durch die standardmäßige Implementierung des ausgeführten Aufgaben die <xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Serialize%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="41ad8-163">The following table shows the tasks performed by the default implementation of the <xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Serialize%2A> method.</span></span>  
  
|<span data-ttu-id="41ad8-164">Aufgabe</span><span class="sxs-lookup"><span data-stu-id="41ad8-164">Task</span></span>|<span data-ttu-id="41ad8-165">Beschreibung </span><span class="sxs-lookup"><span data-stu-id="41ad8-165">Description</span></span>|  
|----------|-----------------|  
|<span data-ttu-id="41ad8-166">Kontext Seeding</span><span class="sxs-lookup"><span data-stu-id="41ad8-166">Context Seeding</span></span>|<span data-ttu-id="41ad8-167">Der Serialisierungskontext wird initialisiert, wobei die Daten einschließlich der <xref:System.ComponentModel.Design.Serialization.RootContext> und <xref:System.CodeDom.CodeTypeDeclaration></span><span class="sxs-lookup"><span data-stu-id="41ad8-167">The serialization context is initialized with data including the <xref:System.ComponentModel.Design.Serialization.RootContext> and <xref:System.CodeDom.CodeTypeDeclaration></span></span>|  
|<span data-ttu-id="41ad8-168">Serialisierung der Member</span><span class="sxs-lookup"><span data-stu-id="41ad8-168">Member Serialization</span></span>|<span data-ttu-id="41ad8-169">Als Nächstes <xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Serialize%2A> führt alle Elemente und Aufrufe <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToExpression%2A>.</span><span class="sxs-lookup"><span data-stu-id="41ad8-169">Next, <xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Serialize%2A> walks all of the members and calls <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToExpression%2A>.</span></span> <span data-ttu-id="41ad8-170">Da die Serialisierung in Ausführung erfolgt <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToExpression%2A>, dadurch wird sichergestellt, dass Serialisierung nicht zweimal ausgeführt wird.</span><span class="sxs-lookup"><span data-stu-id="41ad8-170">Because serialization is done opportunistically in <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToExpression%2A>, this ensures that serialization is not done twice.</span></span>|  
|<span data-ttu-id="41ad8-171">Root-Serialisierung</span><span class="sxs-lookup"><span data-stu-id="41ad8-171">Root Serialization</span></span>|<span data-ttu-id="41ad8-172">Als Nächstes das Stammobjekt serialisiert wird, und die Anweisungen die anweisungssammlung hinzugefügt werden.</span><span class="sxs-lookup"><span data-stu-id="41ad8-172">Next, the root object is serialized and its statements are added to the statement collection.</span></span>|  
|<span data-ttu-id="41ad8-173">Anweisung-Integration</span><span class="sxs-lookup"><span data-stu-id="41ad8-173">Statement Integration</span></span>|<span data-ttu-id="41ad8-174">Nachdem alle Objekte serialisiert werden, die <xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Serialize%2A> Methode ordnet die Anweisungen und fügt diese an eine Methode, die vom zurückgegebenen <xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.GetInitializeMethod%2A>.</span><span class="sxs-lookup"><span data-stu-id="41ad8-174">After all objects are serialized, the <xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Serialize%2A> method orders the statements and adds them to a method returned from <xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.GetInitializeMethod%2A>.</span></span> <span data-ttu-id="41ad8-175">Schließlich wird ein Konstruktor erzeugt, die alle zurückgegebenen Methoden aufruft <xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.GetInitializeMethod%2A>.</span><span class="sxs-lookup"><span data-stu-id="41ad8-175">Finally, a constructor is fabricated that calls all of the methods returned from <xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.GetInitializeMethod%2A>.</span></span>|  
  
-  
  
 <span data-ttu-id="41ad8-176">Die folgende Tabelle zeigt die Objekte der <xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Serialize%2A> -Methode versetzt wird, auf dem Kontextstapel.</span><span class="sxs-lookup"><span data-stu-id="41ad8-176">The following table shows the objects the <xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Serialize%2A> method places on the context stack.</span></span>  
  
|<span data-ttu-id="41ad8-177">Instanz</span><span class="sxs-lookup"><span data-stu-id="41ad8-177">Instance</span></span>|<span data-ttu-id="41ad8-178">Beschreibung </span><span class="sxs-lookup"><span data-stu-id="41ad8-178">Description</span></span>|  
|--------------|-----------------|  
|<xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer>|<span data-ttu-id="41ad8-179">Dieses Serialisierungsprogramm.</span><span class="sxs-lookup"><span data-stu-id="41ad8-179">This serializer.</span></span> <span data-ttu-id="41ad8-180">Abgeleitete Klassen kann es zum Hinzufügen von öffentlicher Eigenschaften zu dieser Klasse hilfreich.</span><span class="sxs-lookup"><span data-stu-id="41ad8-180">Deriving classes may find it useful to add public properties to this class.</span></span>|  
|<xref:System.CodeDom.CodeTypeDeclaration>|<span data-ttu-id="41ad8-181">Der Typ, der erstellt wird.</span><span class="sxs-lookup"><span data-stu-id="41ad8-181">The type being created.</span></span> <span data-ttu-id="41ad8-182">Die meisten Objekte ist die direkten Zugriff auf diese nicht erforderlich.</span><span class="sxs-lookup"><span data-stu-id="41ad8-182">Most objects do not need direct access to this.</span></span>|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="41ad8-183">
            <paramref name="manager" /> oder <paramref name="root" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41ad8-183">
              <paramref name="manager" /> or <paramref name="root" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializer" />
        <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <altmember cref="T:System.CodeDom.Compiler.CodeDomProvider" />
        <altmember cref="T:System.CodeDom.CodeTypeDeclaration" />
      </Docs>
    </Member>
  </Members>
</Type>