<Type Name="CodeDomDesignerLoader" FullName="System.ComponentModel.Design.Serialization.CodeDomDesignerLoader">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="4cafcaaa69b973eae8dfaaa8798c79208ddb3cbe" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30370034" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class CodeDomDesignerLoader : System.ComponentModel.Design.Serialization.BasicDesignerLoader, System.ComponentModel.Design.Serialization.IDesignerSerializationService, System.ComponentModel.Design.Serialization.INameCreationService" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit CodeDomDesignerLoader extends System.ComponentModel.Design.Serialization.BasicDesignerLoader implements class System.ComponentModel.Design.Serialization.IDesignerSerializationService, class System.ComponentModel.Design.Serialization.INameCreationService" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class CodeDomDesignerLoader&#xA;Inherits BasicDesignerLoader&#xA;Implements IDesignerSerializationService, INameCreationService" />
  <TypeSignature Language="C++ CLI" Value="public ref class CodeDomDesignerLoader abstract : System::ComponentModel::Design::Serialization::BasicDesignerLoader, System::ComponentModel::Design::Serialization::IDesignerSerializationService, System::ComponentModel::Design::Serialization::INameCreationService" />
  <AssemblyInfo>
    <AssemblyName>System.Design</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.Design.Serialization.BasicDesignerLoader</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ComponentModel.Design.Serialization.IDesignerSerializationService</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ComponentModel.Design.Serialization.INameCreationService</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Security.SecurityCritical</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Stellt die Basisklasse zum Implementieren eines CodeDOM-basierten Designerladeprogramms bereit.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader> eine abstrakte Klasse, die ein vollständiges Designerladeprogramm enthält das Code Document Object Model (CodeDOM) basiert. Sie geben den CodeDOM-Parser und -Generator und einem Typauflösungsdienst.  
  
 ]]></format>
    </remarks>
    <permission cref="T:System.Security.NamedPermissionSet">für Vollzugriff auf Systemressourcen verfügbar sind. "Demand" Werte: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />, <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />. Zugeordneten Zustand:</permission>
    <altmember cref="T:System.ComponentModel.Design.Serialization.BasicDesignerLoader" />
    <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderService" />
    <altmember cref="T:System.ComponentModel.Design.IDesignerHost" />
    <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
    <altmember cref="N:System.CodeDom" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected CodeDomDesignerLoader ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; CodeDomDesignerLoader();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader" />-Klasse.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CodeDomProvider">
      <MemberSignature Language="C#" Value="protected abstract System.CodeDom.Compiler.CodeDomProvider CodeDomProvider { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.CodeDom.Compiler.CodeDomProvider CodeDomProvider" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.CodeDomProvider" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride ReadOnly Property CodeDomProvider As CodeDomProvider" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract property System::CodeDom::Compiler::CodeDomProvider ^ CodeDomProvider { System::CodeDom::Compiler::CodeDomProvider ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.Compiler.CodeDomProvider</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den vom Designerladeprogramm verwendeten <see cref="P:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.CodeDomProvider" /> ab.</summary>
        <value>Der vom Designerladeprogramm verwendete <see cref="P:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.CodeDomProvider" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Das Designerladeprogramm nicht analysiert oder Generieren von Code aus den zurückgegebenen <xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.CodeDomProvider%2A>, es unterstützt jedoch die Verwendung des Anbieters zum Abrufen einer <xref:System.CodeDom.Compiler.ICodeGenerator> , dass sie zum Überprüfen der Bezeichner in der Erstellung Dienst verwenden kann. Überprüfen Sie das Designerladeprogramm wird auch die <xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.CodeDomProvider%2A> um festzustellen, ob sie implementiert die <xref:System.ComponentModel.Design.Serialization.ICodeDomDesignerReload> Schnittstelle. Weitere Informationen zu analysieren oder Generieren von Code, finden Sie unter der <xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.Parse%2A> und <xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.Write%2A> Methoden.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public override void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Dispose();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt die von der <see cref="T:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader" />-Klasse verwendeten Ressourcen frei.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.Dispose%2A> Methode entfernt die Dienste, die hinzugefügt, indem die <xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.Initialize%2A> Methode.  
  
 Rufen Sie <xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.Dispose%2A> auf, wenn Sie <xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader> nicht mehr benötigen. Die <xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.Dispose%2A>-Methode bewirkt, dass <xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader> nicht mehr verwendet werden kann. Nach dem Aufruf <xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.Dispose%2A>, müssen Sie alle Verweise auf Freigeben der <xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader> , damit der Garbage Collector den Arbeitsspeicher freigeben kann, die die <xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader> belegt wurde. Weitere Informationen finden Sie unter [Bereinigen von nicht verwalteten Ressourcen](~/docs/standard/garbage-collection/unmanaged.md) und [Implementieren einer Dispose-Methode](~/docs/standard/garbage-collection/implementing-dispose.md).  
  
> [!NOTE]
>  Rufen Sie immer <xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.Dispose%2A> auf, bevor Sie den letzten Verweis auf das <xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader> freigeben. Andernfalls bleiben die verwendeten Ressourcen reserviert, bis die Garbage Collection die <xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader>-Methode des `Finalize`-Objekts aufruft.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="protected override void Initialize ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Initialize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.Initialize" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Initialize ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Initialize();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Initialisiert Dienste.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die folgende Tabelle beschreibt die ersetzbaren Dienste, von denen die <xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader> fügt dem Dienstcontainer.  
  
|Begriff|Definition|  
|----------|----------------|  
|<xref:System.ComponentModel.Design.Serialization.INameCreationService>|Stellt Semantik zum Erstellen von Namen von Objekten bereit. Der Dienst verwendet die CodeDOM-Anbieters <xref:System.CodeDom.Compiler.ICodeGenerator> Benutzeroberfläche zum Erstellen von Namen, die gültige Bezeichner für die Sprache sind. Darüber hinaus unterstützt die Erstellung Namensdienst leere Namen. Leere Namen sollten als temporäre lokale Variablen während der Serialisierung interpretiert werden.|  
|<xref:System.ComponentModel.Design.Serialization.IDesignerSerializationService>|Ermöglicht es anderen Objekten um eine Gruppe von Komponenten in ein binäres Objekt zu serialisieren. Dieser Dienst wird am häufigsten von Funktionen, z. B. kopieren und einfügen oder rückgängig und wiederholen. Die <xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader> Klasse bietet einen Designer Serialisierung-Dienst, der zum Erstellen von CodeDOM-Strukturen für Objekte basiert.|  
|<xref:System.ComponentModel.Design.Serialization.ComponentSerializationService>|Dieser Dienst ersetzt <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationService> als Mittel zur Serialisierung von Komponenten in ein binäres Objekt.|  
  
 Ausführliche ersetzbare und nicht ersetzbare Dienste finden Sie unter <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" /> wurde nicht initialisiert, oder vom Designerladeprogramm wurde kein für die CodeDom-Serialisierung erforderlicher Typauflösungsdienst bereitgestellt.</exception>
        <altmember cref="T:System.CodeDom.Compiler.ICodeGenerator" />
        <altmember cref="T:System.ComponentModel.Design.ITypeResolutionService" />
        <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationService" />
        <altmember cref="T:System.ComponentModel.Design.Serialization.ComponentSerializationService" />
        <altmember cref="T:System.ComponentModel.Design.Serialization.INameCreationService" />
      </Docs>
    </Member>
    <Member MemberName="IsReloadNeeded">
      <MemberSignature Language="C#" Value="protected override bool IsReloadNeeded ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool IsReloadNeeded() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.IsReloadNeeded" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function IsReloadNeeded () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool IsReloadNeeded();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt einen Wert zurück, der angibt, ob ein Neuladevorgang erforderlich ist.</summary>
        <returns>
          <see langword="true" />, wenn <see cref="P:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.CodeDomProvider" /> feststellt, dass ein Neuladevorgang erforderlich ist; andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.IsReloadNeeded%2A> Methode überprüft das Vorhandensein der <xref:System.ComponentModel.Design.Serialization.ICodeDomDesignerReload> -Schnittstelle für die <xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.CodeDomProvider%2A>. Der Anbieter die CodeDOM-Baum Analysepunkt und übergeben Sie die resultierende Analysestruktur an die <xref:System.ComponentModel.Design.Serialization.ICodeDomDesignerReload.ShouldReloadDesigner%2A> Methode. Wenn diese Methode zurückgibt `false`, nicht der Designer erneut geladen werden.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Die Sprache stellte keinen Codeparser für diese Datei bereit. Möglicherweise unterstützt dieser Dateityp keinen Designer.</exception>
        <exception cref="T:System.InvalidOperationException">Die Klasse kann entworfen werden, ist jedoch nicht die erste Klasse in der Datei, oder der Designer konnte für diese Datei nicht angezeigt werden, weil keine der darin enthaltenen Klassen entworfen werden kann.</exception>
      </Docs>
    </Member>
    <Member MemberName="OnBeginLoad">
      <MemberSignature Language="C#" Value="protected override void OnBeginLoad ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnBeginLoad() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.OnBeginLoad" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnBeginLoad ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnBeginLoad();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Benachrichtigt das Designerladeprogramm, dass der Ladevorgang gleich gestartet wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Weitere Informationen zu den <xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.OnBeginLoad%2A> -Methode finden Sie unter <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnBeginLoad%2A?displayProperty=nameWithType>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnBeginUnload">
      <MemberSignature Language="C#" Value="protected override void OnBeginUnload ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnBeginUnload() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.OnBeginUnload" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnBeginUnload ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnBeginUnload();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Benachrichtigt das Designerladeprogramm, dass das Entladen gleich gestartet wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Weitere Informationen zu den <xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.OnBeginUnload%2A> -Methode finden Sie unter <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnBeginUnload%2A?displayProperty=nameWithType>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnComponentRename">
      <MemberSignature Language="C#" Value="protected virtual void OnComponentRename (object component, string oldName, string newName);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnComponentRename(object component, string oldName, string newName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.OnComponentRename(System.Object,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnComponentRename (component As Object, oldName As String, newName As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnComponentRename(System::Object ^ component, System::String ^ oldName, System::String ^ newName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
        <Parameter Name="oldName" Type="System.String" />
        <Parameter Name="newName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="component">Die umzubenennende Komponente.</param>
        <param name="oldName">Der ursprüngliche Name der Komponente.</param>
        <param name="newName">Der neue Name der Komponente.</param>
        <summary>Löst das <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentRename" />-Ereignis aus.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnEndLoad">
      <MemberSignature Language="C#" Value="protected override void OnEndLoad (bool successful, System.Collections.ICollection errors);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnEndLoad(bool successful, class System.Collections.ICollection errors) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.OnEndLoad(System.Boolean,System.Collections.ICollection)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnEndLoad (successful As Boolean, errors As ICollection)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnEndLoad(bool successful, System::Collections::ICollection ^ errors);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="successful" Type="System.Boolean" />
        <Parameter Name="errors" Type="System.Collections.ICollection" />
      </Parameters>
      <Docs>
        <param name="successful">
          <see langword="true" />, um anzugeben, dass der Ladevorgang erfolgreich abgeschlossen wurde; andernfalls <see langword="false" />.</param>
        <param name="errors">Eine <see cref="T:System.Collections.ICollection" /> mit Objekten (normalerweise Ausnahmen), die als Fehler gemeldet wurden.</param>
        <summary>Benachrichtigt das Designerladeprogramm, dass der Ladevorgang abgeschlossen ist.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Weitere Informationen zu den <xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.OnEndLoad%2A> -Methode finden Sie unter <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnEndLoad%2A?displayProperty=nameWithType>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="protected abstract System.CodeDom.CodeCompileUnit Parse ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.CodeDom.CodeCompileUnit Parse() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.Parse" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function Parse () As CodeCompileUnit" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract System::CodeDom::CodeCompileUnit ^ Parse();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeCompileUnit</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Analysiert den Textspeicher oder einen anderen permanenten Speicher und gibt <see cref="T:System.CodeDom.CodeCompileUnit" /> zurück.</summary>
        <returns>Eine <see cref="T:System.CodeDom.CodeCompileUnit" /> als Ergebnis eines Analysevorgangs.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.Parse%2A> Methode wird aufgerufen, wenn die <xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader> Quellcode analysieren muss. Abgeleitete Klassen müssen die Quellcodespeicherort und das Format angegeben werden.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.CodeDom.CodeCompileUnit" />
      </Docs>
    </Member>
    <Member MemberName="PerformFlush">
      <MemberSignature Language="C#" Value="protected override void PerformFlush (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void PerformFlush(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.PerformFlush(System.ComponentModel.Design.Serialization.IDesignerSerializationManager)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub PerformFlush (manager As IDesignerSerializationManager)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void PerformFlush(System::ComponentModel::Design::Serialization::IDesignerSerializationManager ^ manager);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
      </Parameters>
      <Docs>
        <param name="manager">Der <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />, aus dem das Serialisierungsprogramm angefordert werden soll.</param>
        <summary>Fordert die Serialisierung der Stammkomponente des Designers an.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.PerformFlush%2A> Methode erhält das Stamm- <xref:System.ComponentModel.Design.Serialization.CodeDomSerializer> für die Stammkomponente des Designers und ruft das Serialisierungsprogramm zur Serialisierung der Komponente. Wenn das Ergebnis dieses Vorgangs ist ein <xref:System.CodeDom.CodeTypeDeclaration>, klicken Sie dann <xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.PerformFlush%2A> integriert die <xref:System.CodeDom.CodeTypeDeclaration> mit der vorhandenen CodeDOM Struktur. Das Ergebnis ist die ursprüngliche CodeDOM-Baum mit übereinstimmenden Elemente und-Anweisungen ersetzt. Schließlich <xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.PerformFlush%2A> Ruft die abstrakte <xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.Write%2A> Methode, um diese CodeDOM-Struktur zu speichern.  
  
 Wenn die Serialisierung der Stamm-Designer-Komponente nicht zu führt eine <xref:System.CodeDom.CodeTypeDeclaration>, klicken Sie dann <xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.PerformFlush%2A> führt keine weiteren Schritte.  
  
> [!IMPORTANT]
>  Es liegt die Verantwortung des Aufrufers, stellen Sie sicher, dass ein CodeDOM aus einer vertrauenswürdigen Quelle stammt. Akzeptiert ein CodeDOM-Objekt von einer nicht vertrauenswürdigen Partei kann dieser Partei zum Ausführen von bösartigen Codes ermöglichen. Ein CodeDOM in eine Datei zu löschen, wird das Framework Code dargestellte CodeDOM-Objekt und der serialisierte Inhalt des Objekts wie angegeben ausgeführt.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Die Sprache stellte keinen Codeparser für diese Datei bereit. Möglicherweise unterstützt dieser Dateityp keinen Designer.</exception>
        <exception cref="T:System.InvalidOperationException">Die Klasse kann entworfen werden, ist jedoch nicht die erste Klasse in der Datei, oder der Designer konnte für diese Datei nicht angezeigt werden, weil keine der darin enthaltenen Klassen entworfen werden kann.</exception>
      </Docs>
    </Member>
    <Member MemberName="PerformLoad">
      <MemberSignature Language="C#" Value="protected override void PerformLoad (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void PerformLoad(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.PerformLoad(System.ComponentModel.Design.Serialization.IDesignerSerializationManager)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub PerformLoad (manager As IDesignerSerializationManager)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void PerformLoad(System::ComponentModel::Design::Serialization::IDesignerSerializationManager ^ manager);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
      </Parameters>
      <Docs>
        <param name="manager">Der <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />, aus dem das Serialisierungsprogramm angefordert werden soll.</param>
        <summary>Analysiert Code aus einem CodeDOM-Anbieter.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.PerformLoad%2A> -Methode erhält ein <xref:System.CodeDom.Compiler.ICodeParser> von CodeDOM-Anbieters und der Code analysiert. <xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.PerformLoad%2A> Sucht nach der ersten Klasse in der Datei, erhält Sie einen Stamm <xref:System.ComponentModel.Design.Serialization.CodeDomSerializer> für den Datentyp und ruft dann das Serialisierungsprogramm, um den Datentyp zu deserialisieren. <xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.PerformLoad%2A> wird davon ausgegangen, dass alle erforderlichen Komponenten in dieser Vorgang erstellt die <xref:System.ComponentModel.IContainer> von der <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.LoaderHost%2A> Eigenschaft. Schließlich <xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.PerformLoad%2A> Aufrufe der <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.SetBaseComponentClassName%2A> Methode mit dem vollqualifizierten Namen des Typs, die sie an dem CodeDOM-Serialisierungsprogramm übergeben.  
  
> [!IMPORTANT]
>  Es liegt die Verantwortung des Aufrufers, stellen Sie sicher, dass ein CodeDOM aus einer vertrauenswürdigen Quelle stammt. Akzeptiert ein CodeDOM-Objekt von einer nicht vertrauenswürdigen Partei kann dieser Partei zum Ausführen von bösartigen Codes ermöglichen. Beim Laden einer CodeDOM in der Entwurfsoberfläche wird das Framework Code dargestellte CodeDOM-Objekt und der serialisierte Inhalt des Objekts wie angegeben ausgeführt.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Die Sprache stellte keinen Codeparser für diese Datei bereit. Möglicherweise unterstützt dieser Dateityp keinen Designer.</exception>
        <exception cref="T:System.InvalidOperationException">Die Klasse kann entworfen werden, ist jedoch nicht die erste Klasse in der Datei, oder der Designer konnte für diese Datei nicht angezeigt werden, weil keine der darin enthaltenen Klassen entworfen werden kann.</exception>
        <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Design.Serialization.IDesignerSerializationService.Deserialize">
      <MemberSignature Language="C#" Value="System.Collections.ICollection IDesignerSerializationService.Deserialize (object serializationData);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.ICollection System.ComponentModel.Design.Serialization.IDesignerSerializationService.Deserialize(object serializationData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.System#ComponentModel#Design#Serialization#IDesignerSerializationService#Deserialize(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Deserialize (serializationData As Object) As ICollection Implements IDesignerSerializationService.Deserialize" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::ICollection ^ System.ComponentModel.Design.Serialization.IDesignerSerializationService.Deserialize(System::Object ^ serializationData) = System::ComponentModel::Design::Serialization::IDesignerSerializationService::Deserialize;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serializationData" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="serializationData">Ein Objekt, das aus serialisierten Daten besteht.</param>
        <summary>Deserialisiert das angegebene Serialisierungsdatenobjekt und gibt eine Auflistung von Objekten zurück, die von diesen Daten dargestellt werden.</summary>
        <returns>Eine Auflistung der von <paramref name="serializationData" /> dargestellten Objekten.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="serializationData" /> ist keine <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Design.Serialization.IDesignerSerializationService.Serialize">
      <MemberSignature Language="C#" Value="object IDesignerSerializationService.Serialize (System.Collections.ICollection objects);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.ComponentModel.Design.Serialization.IDesignerSerializationService.Serialize(class System.Collections.ICollection objects) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.System#ComponentModel#Design#Serialization#IDesignerSerializationService#Serialize(System.Collections.ICollection)" />
      <MemberSignature Language="VB.NET" Value="Function Serialize (objects As ICollection) As Object Implements IDesignerSerializationService.Serialize" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.ComponentModel.Design.Serialization.IDesignerSerializationService.Serialize(System::Collections::ICollection ^ objects) = System::ComponentModel::Design::Serialization::IDesignerSerializationService::Serialize;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="objects" Type="System.Collections.ICollection" />
      </Parameters>
      <Docs>
        <param name="objects">Eine Auflistung zu serialisierender Objekte.</param>
        <summary>Serialisiert die angegebene Auflistung von Objekten und speichert sie in einem Serialisierungsdatenobjekt.</summary>
        <returns>Ein Objekt, das den serialisierten Zustand der angegebenen Auflistung von Objekten enthält.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="T:System.ComponentModel.Design.Serialization.ComponentSerializationService" /> wurde nicht gefunden.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Design.Serialization.INameCreationService.CreateName">
      <MemberSignature Language="C#" Value="string INameCreationService.CreateName (System.ComponentModel.IContainer container, Type dataType);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string System.ComponentModel.Design.Serialization.INameCreationService.CreateName(class System.ComponentModel.IContainer container, class System.Type dataType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.System#ComponentModel#Design#Serialization#INameCreationService#CreateName(System.ComponentModel.IContainer,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Function CreateName (container As IContainer, dataType As Type) As String Implements INameCreationService.CreateName" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::String ^ System.ComponentModel.Design.Serialization.INameCreationService.CreateName(System::ComponentModel::IContainer ^ container, Type ^ dataType) = System::ComponentModel::Design::Serialization::INameCreationService::CreateName;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="container" Type="System.ComponentModel.IContainer" />
        <Parameter Name="dataType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="container">Der Container, in dem das neue Objekt hinzugefügt wird.</param>
        <param name="dataType">Der Datentyp des Objekts, das den Namen erhält.</param>
        <summary>Erstellt einen neuen Namen, der für sämtliche Komponenten im angegebenen Container eindeutig ist.</summary>
        <returns>Ein eindeutiger Name für den Datentyp.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="dataType" /> ist <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Design.Serialization.INameCreationService.IsValidName">
      <MemberSignature Language="C#" Value="bool INameCreationService.IsValidName (string name);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.ComponentModel.Design.Serialization.INameCreationService.IsValidName(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.System#ComponentModel#Design#Serialization#INameCreationService#IsValidName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Function IsValidName (name As String) As Boolean Implements INameCreationService.IsValidName" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.ComponentModel.Design.Serialization.INameCreationService.IsValidName(System::String ^ name) = System::ComponentModel::Design::Serialization::INameCreationService::IsValidName;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Der Name, dessen Gültigkeit validiert werden soll.</param>
        <summary>Ruft einen Wert ab, der angibt, ob der angegebene Name gültig ist.</summary>
        <returns>
          <see langword="true" />, wenn der Name gültig ist, andernfalls <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="name" /> ist <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Design.Serialization.INameCreationService.ValidateName">
      <MemberSignature Language="C#" Value="void INameCreationService.ValidateName (string name);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ComponentModel.Design.Serialization.INameCreationService.ValidateName(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.System#ComponentModel#Design#Serialization#INameCreationService#ValidateName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Sub ValidateName (name As String) Implements INameCreationService.ValidateName" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ComponentModel.Design.Serialization.INameCreationService.ValidateName(System::String ^ name) = System::ComponentModel::Design::Serialization::INameCreationService::ValidateName;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Der Name, dessen Gültigkeit validiert werden soll.</param>
        <summary>Ruft einen Wert ab, der angibt, ob der angegebene Name gültig ist.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="name" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="name" /> ist kein gültiger Bezeichner, oder es gibt bereits eine Komponente mit demselben Namen.</exception>
      </Docs>
    </Member>
    <Member MemberName="TypeResolutionService">
      <MemberSignature Language="C#" Value="protected abstract System.ComponentModel.Design.ITypeResolutionService TypeResolutionService { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.Design.ITypeResolutionService TypeResolutionService" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.TypeResolutionService" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride ReadOnly Property TypeResolutionService As ITypeResolutionService" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract property System::ComponentModel::Design::ITypeResolutionService ^ TypeResolutionService { System::ComponentModel::Design::ITypeResolutionService ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.ITypeResolutionService</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Typauflösungsdienst ab, der mit dem Designerladeprogramm verwendet werden soll.</summary>
        <value>Ein <see cref="T:System.ComponentModel.Design.ITypeResolutionService" />, den die CodeDOM-Serialisierungsprogramme bei der Auflösung von Typen verwenden.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der <xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader> fügt automatisch dieser <xref:System.ComponentModel.Design.ITypeResolutionService> dem Dienstcontainer bei der <xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.Initialize%2A> Methode wird aufgerufen. Während der Typauflösungsdienst in vielen Szenarien optional ist, es ist erforderlich, damit der Codeinterpretation da Quellcode Typ enthält Namen, aber keine Assemblyverweise.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.ITypeResolutionService" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="protected abstract void Write (System.CodeDom.CodeCompileUnit unit);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Write(class System.CodeDom.CodeCompileUnit unit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.Write(System.CodeDom.CodeCompileUnit)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub Write (unit As CodeCompileUnit)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void Write(System::CodeDom::CodeCompileUnit ^ unit);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="unit" Type="System.CodeDom.CodeCompileUnit" />
      </Parameters>
      <Docs>
        <param name="unit">Die permanent zu speichernde <see cref="T:System.CodeDom.CodeCompileUnit" />.</param>
        <summary>Schreibt Änderungen an Kompilierungseinheiten in den permanenten Speicher.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.Write%2A> -Methode speichert einen <xref:System.CodeDom.CodeCompileUnit> in den persistenten Speicher. Die ableitende Klasse ist verantwortlich für das Aufrufen der <xref:System.CodeDom.Compiler.ICodeGenerator> auf den entsprechenden TextWriter, um den Code zu speichern. Die <xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader> wird sichergestellt, dass die CodeDOM-Objekte, die übergeben werden <xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.Write%2A> sind die gleichen Instanzen von Objekten, die aus abgerufen wurden <xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.Parse%2A>, außer in Fällen, bei denen der Serialisierungsprozess aufwies, um den Code zu ändern. Dies ermöglicht eine optimierte Designerladeprogramm zum Speichern von zusätzlicher Daten in der <xref:System.CodeDom.CodeObject.UserData%2A> Eigenschaft von Codeelementen. Diese Daten werden während der <xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.Write%2A> für alle Elemente, die nicht durch den Serialisierungsprozess ersetzt wurden.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.CodeDom.CodeCompileUnit" />
      </Docs>
    </Member>
  </Members>
</Type>