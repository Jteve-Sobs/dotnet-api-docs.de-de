<Type Name="IDesignerSerializationManager" FullName="System.ComponentModel.Design.Serialization.IDesignerSerializationManager">
  <TypeSignature Language="C#" Value="public interface IDesignerSerializationManager : IServiceProvider" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IDesignerSerializationManager implements class System.IServiceProvider" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
  <TypeSignature Language="VB.NET" Value="Public Interface IDesignerSerializationManager&#xA;Implements IServiceProvider" />
  <TypeSignature Language="C++ CLI" Value="public interface class IDesignerSerializationManager : IServiceProvider" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IServiceProvider</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="b3240-101">Stellt eine Schnittstelle bereit, mit der die Serialisierung zur Entwurfszeit verwaltet werden kann.</span><span class="sxs-lookup"><span data-stu-id="b3240-101">Provides an interface that can manage design-time serialization.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b3240-102">Ein Designer Clientfunktionen <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager> Dienste zugreifen, die zum Verwalten von Prozessen der Entwurfszeitserialisierung nützlich.</span><span class="sxs-lookup"><span data-stu-id="b3240-102">A designer can utilize <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager> to access services useful to managing design-time serialization processes.</span></span> <span data-ttu-id="b3240-103">Beispielsweise können eine Klasse, die den Designer Serialisierungs-Manager implementiert diese Schnittstelle zum Erstellen von Objekten, suchen Sie die Typen, Objekte identifiziert werden und die Serialisierung bestimmter Typen anzupassen.</span><span class="sxs-lookup"><span data-stu-id="b3240-103">For example, a class that implements the designer serialization manager can use this interface to create objects, look up types, identify objects, and customize the serialization of particular types.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b3240-104">Das folgende Beispiel zeigt, wie <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager> zum Serialisieren und Deserialisieren von CODEDOM-Anweisungen.</span><span class="sxs-lookup"><span data-stu-id="b3240-104">The following example illustrates how to use <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager> to serialize and deserialize Code DOM statements.</span></span>  
  
 [!code-cpp[IDesignerSerializationManagerSample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/IDesignerSerializationManagerSample/CPP/idesignerserializationmanagersample.cpp#1)]
 [!code-csharp[IDesignerSerializationManagerSample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/IDesignerSerializationManagerSample/CS/idesignerserializationmanagersample.cs#1)]
 [!code-vb[IDesignerSerializationManagerSample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/IDesignerSerializationManagerSample/VB/idesignerserializationmanagersample.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.IServiceProvider" />
  </Docs>
  <Members>
    <Member MemberName="AddSerializationProvider">
      <MemberSignature Language="C#" Value="public void AddSerializationProvider (System.ComponentModel.Design.Serialization.IDesignerSerializationProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddSerializationProvider(class System.ComponentModel.Design.Serialization.IDesignerSerializationProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.AddSerializationProvider(System.ComponentModel.Design.Serialization.IDesignerSerializationProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddSerializationProvider (provider As IDesignerSerializationProvider)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddSerializationProvider(System::ComponentModel::Design::Serialization::IDesignerSerializationProvider ^ provider);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="b3240-105">Der hinzuzufügende Serialisierungsprovider.</span><span class="sxs-lookup"><span data-stu-id="b3240-105">The serialization provider to add.</span></span></param>
        <summary><span data-ttu-id="b3240-106">Fügt dem Serialisierungs-Manager den angegebenen Serialisierungsprovider hinzu.</span><span class="sxs-lookup"><span data-stu-id="b3240-106">Adds the specified serialization provider to the serialization manager.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b3240-107">Diese Methode wird dem Serialisierungs-Manager einen benutzerdefinierten Serialisierungsprovider hinzugefügt.</span><span class="sxs-lookup"><span data-stu-id="b3240-107">This method adds a custom serialization provider to the serialization manager.</span></span> <span data-ttu-id="b3240-108">Serialisierungsprovider können benutzerdefinierte Serialisierungsprogramme für einen bestimmten Objekttyp oder eine Gruppe von Objekttypen bereitstellen.</span><span class="sxs-lookup"><span data-stu-id="b3240-108">Serialization providers can provide custom serializers for a particular type of object or set of types of objects.</span></span> <span data-ttu-id="b3240-109">Während der Serialisierung wird jeder benutzerdefinierte Serialisierungsprovider abgefragt, um, wenn möglich, ein Serialisierungsprogramm für einen spezifischen Datentyp zurückzugeben.</span><span class="sxs-lookup"><span data-stu-id="b3240-109">During serialization, each custom serialization provider is queried to return a serializer for a specific data type, if it can provide one.</span></span> <span data-ttu-id="b3240-110">Der Serialisierungs-Manager verwendet das von dieser Methode bereitgestellte benutzerdefinierte Serialisierungsprogramm, ehe er das Standardserialisierungsprogramm für einen bestimmten Typ verwendet.</span><span class="sxs-lookup"><span data-stu-id="b3240-110">The serialization manager uses the custom serializer provided by this method before using the default serializer for a particular type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Context">
      <MemberSignature Language="C#" Value="public System.ComponentModel.Design.Serialization.ContextStack Context { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.Design.Serialization.ContextStack Context" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Context" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Context As ContextStack" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ComponentModel::Design::Serialization::ContextStack ^ Context { System::ComponentModel::Design::Serialization::ContextStack ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.Serialization.ContextStack</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b3240-111">Ruft einen stapelbasierten, benutzerdefinierten Speicherbereich ab, der die Kommunikation zwischen Serialisierungsprogrammen erleichtert.</span><span class="sxs-lookup"><span data-stu-id="b3240-111">Gets a stack-based, user-defined storage area that is useful for communication between serializers.</span></span></summary>
        <value><span data-ttu-id="b3240-112">Ein <see cref="T:System.ComponentModel.Design.Serialization.ContextStack" />, in dem Daten gespeichert werden.</span><span class="sxs-lookup"><span data-stu-id="b3240-112">A <see cref="T:System.ComponentModel.Design.Serialization.ContextStack" /> that stores data.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b3240-113">Dieser Speicherbereich bietet Kommunikation der Kontext der Objektinformationen für Serialisierungsprogramme.</span><span class="sxs-lookup"><span data-stu-id="b3240-113">This storage area provides communication of object context information to serializers.</span></span> <span data-ttu-id="b3240-114">Kontextinformationen zu Objekten, die serialisiert werden, werden gespeichert und über diese zugegriffen werden <xref:System.ComponentModel.Design.Serialization.ContextStack>.</span><span class="sxs-lookup"><span data-stu-id="b3240-114">Context information about objects that are being serialized can be stored and accessed through this <xref:System.ComponentModel.Design.Serialization.ContextStack>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public object CreateInstance (Type type, System.Collections.ICollection arguments, string name, bool addToContainer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object CreateInstance(class System.Type type, class System.Collections.ICollection arguments, string name, bool addToContainer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ CreateInstance(Type ^ type, System::Collections::ICollection ^ arguments, System::String ^ name, bool addToContainer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="arguments" Type="System.Collections.ICollection" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="addToContainer" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="b3240-115">Der zu erstellende Datentyp.</span><span class="sxs-lookup"><span data-stu-id="b3240-115">The data type to create.</span></span></param>
        <param name="arguments"><span data-ttu-id="b3240-116">Die an den Konstruktor für diesen Typ zu übergebenden Argumente.</span><span class="sxs-lookup"><span data-stu-id="b3240-116">The arguments to pass to the constructor for this type.</span></span></param>
        <param name="name"><span data-ttu-id="b3240-117">Der Name des Objekts.</span><span class="sxs-lookup"><span data-stu-id="b3240-117">The name of the object.</span></span> <span data-ttu-id="b3240-118">Mit diesem Namen kann später über <see cref="M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetInstance(System.String)" /> auf das Objekt zugegriffen werden.</span><span class="sxs-lookup"><span data-stu-id="b3240-118">This name can be used to access the object later through <see cref="M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetInstance(System.String)" />.</span></span> <span data-ttu-id="b3240-119">Wenn <see langword="null" /> übergeben wird, dann wird das Objekt dennoch erstellt, jedoch kann darauf nicht über den Namen zugegriffen werden.</span><span class="sxs-lookup"><span data-stu-id="b3240-119">If <see langword="null" /> is passed, the object is still created but cannot be accessed by name.</span></span></param>
        <param name="addToContainer"><span data-ttu-id="b3240-120">Wird <see langword="true" /> übergeben, dann wird dieses Objekt dem Entwurfscontainer hinzugefügt.</span><span class="sxs-lookup"><span data-stu-id="b3240-120">If <see langword="true" />, this object is added to the design container.</span></span> <span data-ttu-id="b3240-121">Dies wirkt sich nur dann aus, wenn das Objekt <see cref="T:System.ComponentModel.IComponent" /> implementiert.</span><span class="sxs-lookup"><span data-stu-id="b3240-121">The object must implement <see cref="T:System.ComponentModel.IComponent" /> for this to have any effect.</span></span></param>
        <summary><span data-ttu-id="b3240-122">Erstellt eine Instanz des angegebenen Typs und fügt sie einer Auflistung benannter Instanzen hinzu.</span><span class="sxs-lookup"><span data-stu-id="b3240-122">Creates an instance of the specified type and adds it to a collection of named instances.</span></span></summary>
        <returns><span data-ttu-id="b3240-123">Die neu erstellte Objektinstanz.</span><span class="sxs-lookup"><span data-stu-id="b3240-123">The newly created object instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b3240-124">-Objekte implementiert, <xref:System.ComponentModel.IComponent> auf den Container zur Entwurfszeit hinzugefügt werden, wenn die `addToContainer` Parameter ist `true`.</span><span class="sxs-lookup"><span data-stu-id="b3240-124">Objects that implement <xref:System.ComponentModel.IComponent> are added to the design-time container if the `addToContainer` parameter is `true`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetInstance">
      <MemberSignature Language="C#" Value="public object GetInstance (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetInstance(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetInstance(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetInstance (name As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetInstance(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="b3240-125">Der Name des abzurufenden Objekts.</span><span class="sxs-lookup"><span data-stu-id="b3240-125">The name of the object to retrieve.</span></span></param>
        <summary><span data-ttu-id="b3240-126">Ruft eine Instanz eines erstellten Objekts mit dem angegebenen Namen ab oder <see langword="null" />, wenn dieses Objekt nicht vorhanden ist.</span><span class="sxs-lookup"><span data-stu-id="b3240-126">Gets an instance of a created object of the specified name, or <see langword="null" /> if that object does not exist.</span></span></summary>
        <returns><span data-ttu-id="b3240-127">Eine Instanz des Objekts mit dem angegebenen Namen oder <see langword="null" />, wenn kein Objekt mit diesem Namen gefunden wird.</span><span class="sxs-lookup"><span data-stu-id="b3240-127">An instance of the object with the given name, or <see langword="null" /> if no object by that name can be found.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b3240-128">Der Name des abzurufenden Objekts muss durch einen vorherigen Aufruf festgelegt wurden <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance%2A>.</span><span class="sxs-lookup"><span data-stu-id="b3240-128">The name of the object to retrieve must have been set through a prior call to <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetName">
      <MemberSignature Language="C#" Value="public string GetName (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetName(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetName(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetName (value As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetName(System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="b3240-129">Das Objekt, dessen Name abgerufen werden soll.</span><span class="sxs-lookup"><span data-stu-id="b3240-129">The object to retrieve the name for.</span></span></param>
        <summary><span data-ttu-id="b3240-130">Ruft den Namen des angegebenen Objekts ab oder <see langword="null" />, wenn dem Objekt kein Name zugewiesen ist.</span><span class="sxs-lookup"><span data-stu-id="b3240-130">Gets the name of the specified object, or <see langword="null" /> if the object has no name.</span></span></summary>
        <returns><span data-ttu-id="b3240-131">Der Name des Objekts oder <see langword="null" />, wenn das Objekt unbenannt ist.</span><span class="sxs-lookup"><span data-stu-id="b3240-131">The name of the object, or <see langword="null" /> if the object is unnamed.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSerializer">
      <MemberSignature Language="C#" Value="public object GetSerializer (Type objectType, Type serializerType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetSerializer(class System.Type objectType, class System.Type serializerType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetSerializer(System.Type,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetSerializer (objectType As Type, serializerType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetSerializer(Type ^ objectType, Type ^ serializerType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="objectType" Type="System.Type" />
        <Parameter Name="serializerType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="objectType"><span data-ttu-id="b3240-132">Der Typ des Objekts, für das das Serialisierungsprogramm abgerufen werden soll.</span><span class="sxs-lookup"><span data-stu-id="b3240-132">The type of the object to get the serializer for.</span></span></param>
        <param name="serializerType"><span data-ttu-id="b3240-133">Der Typ des abzurufenden Serialisierungsprogramms.</span><span class="sxs-lookup"><span data-stu-id="b3240-133">The type of the serializer to retrieve.</span></span></param>
        <summary><span data-ttu-id="b3240-134">Ruft ein Serialisierungsprogramm vom angeforderten Typ für den angegebenen Objekttyp ab.</span><span class="sxs-lookup"><span data-stu-id="b3240-134">Gets a serializer of the requested type for the specified object type.</span></span></summary>
        <returns><span data-ttu-id="b3240-135">Eine Instanz des angeforderten Serialisierungsprogramms oder <see langword="null" />, falls kein entsprechendes Serialisierungsprogramm gefunden werden kann.</span><span class="sxs-lookup"><span data-stu-id="b3240-135">An instance of the requested serializer, or <see langword="null" /> if no appropriate serializer can be located.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetType">
      <MemberSignature Language="C#" Value="public Type GetType (string typeName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type GetType(string typeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetType(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetType (typeName As String) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Type ^ GetType(System::String ^ typeName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="typeName"><span data-ttu-id="b3240-136">Der voll gekennzeichnete Name des zu ladenden Typs.</span><span class="sxs-lookup"><span data-stu-id="b3240-136">The fully qualified name of the type to load.</span></span></param>
        <summary><span data-ttu-id="b3240-137">Ruft einen Typ mit dem angegebenen Namen ab.</span><span class="sxs-lookup"><span data-stu-id="b3240-137">Gets a type of the specified name.</span></span></summary>
        <returns><span data-ttu-id="b3240-138">Eine Instanz des Typs oder <see langword="null" />, wenn der Typ nicht geladen werden kann.</span><span class="sxs-lookup"><span data-stu-id="b3240-138">An instance of the type, or <see langword="null" /> if the type cannot be loaded.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Properties">
      <MemberSignature Language="C#" Value="public System.ComponentModel.PropertyDescriptorCollection Properties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.PropertyDescriptorCollection Properties" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Properties As PropertyDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ComponentModel::PropertyDescriptorCollection ^ Properties { System::ComponentModel::PropertyDescriptorCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptorCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b3240-139">Gibt benutzerdefinierte Eigenschaften an, die mit verfügbaren Serialisierungsprogrammen serialisiert werden können.</span><span class="sxs-lookup"><span data-stu-id="b3240-139">Indicates custom properties that can be serializable with available serializers.</span></span></summary>
        <value><span data-ttu-id="b3240-140">Eine <see cref="T:System.ComponentModel.PropertyDescriptorCollection" />, die die zu serialisierenden Eigenschaften enthält.</span><span class="sxs-lookup"><span data-stu-id="b3240-140">A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> containing the properties to be serialized.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b3240-141">Diese Eigenschaft kann eine leere Auflistung enthalten.</span><span class="sxs-lookup"><span data-stu-id="b3240-141">This property can contain an empty collection.</span></span> <span data-ttu-id="b3240-142">Ein Serialisierungsprogramm sollte niemals davon ausgehen, dass solche Eigenschaften vorhanden sind.</span><span class="sxs-lookup"><span data-stu-id="b3240-142">A serializer should never assume that such properties exist.</span></span> <span data-ttu-id="b3240-143">Eine abgeleitete Klasse oder die Implementierung von <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager> definiert den Satz von Eigenschaften, die hier verfügbar gemacht werden.</span><span class="sxs-lookup"><span data-stu-id="b3240-143">A derived class or implementation of <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager> defines the set of properties that are exposed here.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="b3240-144">Diese Eigenschaft kann vom Benutzercode aufgefüllt werden.</span><span class="sxs-lookup"><span data-stu-id="b3240-144">This property can be populated by user code.</span></span> <span data-ttu-id="b3240-145">Möglicherweise ausreichend Aufrufen <see cref="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Type)" /> von <see cref="T:System.ComponentModel.TypeDescriptor" /> zum Auffüllen dieser Auflistung.</span><span class="sxs-lookup"><span data-stu-id="b3240-145">It may be sufficient to call <see cref="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Type)" /> of <see cref="T:System.ComponentModel.TypeDescriptor" /> to populate this collection.</span></span> <span data-ttu-id="b3240-146">Der Serialisierungs-Manager muss eine leere Auflistung zurückgeben, wenn keine benutzerdefinierten Eigenschaften vorhanden sind.</span><span class="sxs-lookup"><span data-stu-id="b3240-146">The serialization manager must return an empty collection if no custom properties exist.</span></span></para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="RemoveSerializationProvider">
      <MemberSignature Language="C#" Value="public void RemoveSerializationProvider (System.ComponentModel.Design.Serialization.IDesignerSerializationProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveSerializationProvider(class System.ComponentModel.Design.Serialization.IDesignerSerializationProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.RemoveSerializationProvider(System.ComponentModel.Design.Serialization.IDesignerSerializationProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveSerializationProvider (provider As IDesignerSerializationProvider)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveSerializationProvider(System::ComponentModel::Design::Serialization::IDesignerSerializationProvider ^ provider);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="b3240-147">Der zu entfernende Provider.</span><span class="sxs-lookup"><span data-stu-id="b3240-147">The provider to remove.</span></span> <span data-ttu-id="b3240-148">Dieses Objekt muss mithilfe von <see cref="M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.AddSerializationProvider(System.ComponentModel.Design.Serialization.IDesignerSerializationProvider)" /> hinzugefügt worden sein.</span><span class="sxs-lookup"><span data-stu-id="b3240-148">This object must have been added using <see cref="M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.AddSerializationProvider(System.ComponentModel.Design.Serialization.IDesignerSerializationProvider)" />.</span></span></param>
        <summary><span data-ttu-id="b3240-149">Entfernt einen benutzerdefinierten Serialisierungsprovider aus dem Serialisierungs-Manager.</span><span class="sxs-lookup"><span data-stu-id="b3240-149">Removes a custom serialization provider from the serialization manager.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReportError">
      <MemberSignature Language="C#" Value="public void ReportError (object errorInformation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReportError(object errorInformation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ReportError(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ReportError (errorInformation As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ReportError(System::Object ^ errorInformation);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="errorInformation" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="errorInformation"><span data-ttu-id="b3240-150">Der zu meldende Fehler.</span><span class="sxs-lookup"><span data-stu-id="b3240-150">The error to report.</span></span> <span data-ttu-id="b3240-151">Dieses Informationsobjekt kann einem beliebigen Objekttyp aufweisen.</span><span class="sxs-lookup"><span data-stu-id="b3240-151">This information object can be of any object type.</span></span> <span data-ttu-id="b3240-152">Wenn es sich um eine Ausnahme handelt, wird die Meldung der Ausnahme extrahiert und dem Benutzer angezeigt.</span><span class="sxs-lookup"><span data-stu-id="b3240-152">If it is an exception, the message of the exception is extracted and reported to the user.</span></span> <span data-ttu-id="b3240-153">Wenn es sich um einen anderen Typ handelt, wird <see cref="M:System.Object.ToString" /> aufgerufen, um dem Benutzer die Informationen anzuzeigen.</span><span class="sxs-lookup"><span data-stu-id="b3240-153">If it is any other type, <see cref="M:System.Object.ToString" /> is called to display the information to the user.</span></span></param>
        <summary><span data-ttu-id="b3240-154">Meldet einen Fehler bei der Serialisierung.</span><span class="sxs-lookup"><span data-stu-id="b3240-154">Reports an error in serialization.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b3240-155">Wenn der Serialisierungs-Manager unterstützt mehrere fehlerprotokollierung in seiner Implementierung von <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ReportError%2A>, können sie das Fehlerobjekt-Informationen für einen zukünftigen Bericht, in dem die aufgetretenen Fehler werden gleichzeitig angezeigt können, speichern.</span><span class="sxs-lookup"><span data-stu-id="b3240-155">If the serialization manager supports logging multiple errors in its implementation of <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ReportError%2A>, it can store the error information object for a future report where all the errors encountered can be displayed at once.</span></span> <span data-ttu-id="b3240-156">Wenn diese Methode mehrere Fehler speichert, kann Serialisierung nach einem Aufruf dieser Methode fortgesetzt werden.</span><span class="sxs-lookup"><span data-stu-id="b3240-156">If this method stores multiple errors, serialization can continue after a call to this method.</span></span> <span data-ttu-id="b3240-157">Wenn diese Methode nicht unterstützt mehrere Fehler protokollieren, sollte diese Methode eine Ausnahme auslösen, die Serialisierung abbricht.</span><span class="sxs-lookup"><span data-stu-id="b3240-157">If this method does not support logging multiple errors, this method should throw an exception, which aborts serialization.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b3240-158">Der Serialisierungs-Manager sollte nie eine Ausnahme während der Serialisierung aufgetretene Fehler auslösen.</span><span class="sxs-lookup"><span data-stu-id="b3240-158">The serialization manager should never throw an exception for errors encountered during serialization.</span></span> <span data-ttu-id="b3240-159">Es sollte nur eine Ausnahme während der Deserialisierung ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="b3240-159">It should only throw an exception during deserialization.</span></span> <span data-ttu-id="b3240-160">Andernfalls sollten Benutzer verwirrt werden, da das Dokument speichern nie fehl.</span><span class="sxs-lookup"><span data-stu-id="b3240-160">Otherwise, users become confused because saving the document should never fail.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResolveName">
      <MemberSignature Language="C#" Value="event System.ComponentModel.Design.Serialization.ResolveNameEventHandler ResolveName;" />
      <MemberSignature Language="ILAsm" Value=".event class System.ComponentModel.Design.Serialization.ResolveNameEventHandler ResolveName" />
      <MemberSignature Language="DocId" Value="E:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ResolveName" />
      <MemberSignature Language="VB.NET" Value="Event ResolveName As ResolveNameEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::ComponentModel::Design::Serialization::ResolveNameEventHandler ^ ResolveName;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.Serialization.ResolveNameEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b3240-161">Tritt ein, wenn <see cref="M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetName(System.Object)" /> den angegebenen Namen in der Namenstabelle des Serialisierungs-Managers nicht finden kann.</span><span class="sxs-lookup"><span data-stu-id="b3240-161">Occurs when <see cref="M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetName(System.Object)" /> cannot locate the specified name in the serialization manager's name table.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b3240-162">Dieses Ereignis bietet Serialisierungsprogrammen eine Möglichkeit, Objekte nach Bedarf zu erstellen, so dass bei der Anforderung zum Erstellen von Objekten keine Abhängigkeiten beachtet werden müssen.</span><span class="sxs-lookup"><span data-stu-id="b3240-162">This event provides a way for a serializer to create an object on demand, so that the serializer does not have to order object creation by dependency.</span></span> <span data-ttu-id="b3240-163">Der Delegat für dieses Ereignis wird unmittelbar nach Abschluss der Serialisierung oder Deserialisierung gelöscht.</span><span class="sxs-lookup"><span data-stu-id="b3240-163">The delegate for this event is cleared immediately after serialization or deserialization is complete.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SerializationComplete">
      <MemberSignature Language="C#" Value="event EventHandler SerializationComplete;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler SerializationComplete" />
      <MemberSignature Language="DocId" Value="E:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SerializationComplete" />
      <MemberSignature Language="VB.NET" Value="Event SerializationComplete As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ SerializationComplete;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b3240-164">Tritt ein, wenn die Serialisierung abgeschlossen ist.</span><span class="sxs-lookup"><span data-stu-id="b3240-164">Occurs when serialization is complete.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b3240-165">Dieses Ereignis wird ausgelöst, wenn die Serialisierung oder Deserialisierung abgeschlossen ist.</span><span class="sxs-lookup"><span data-stu-id="b3240-165">This event is raised when serialization or deserialization is complete.</span></span>  
  
 <span data-ttu-id="b3240-166">Im Allgemeinen wird Serialisierungscode für die Ausgabe von Serialisierungsdaten geschrieben und erfordert normalerweise keine Überprüfung und Verarbeitung von Zuständen.</span><span class="sxs-lookup"><span data-stu-id="b3240-166">Generally, serialization code is written to emit serialization data and does not typically require state-related checking and processing.</span></span> <span data-ttu-id="b3240-167">Wenn es für das Verwalten von Zustandsdaten während der Serialisierung erforderlich ist, kann ein Serialisierungsprogramm, das das <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SerializationComplete>-Ereignis überwachen kann, Daten festlegen, auf diese zugreifen und die Daten nach der Serialisierung löschen.</span><span class="sxs-lookup"><span data-stu-id="b3240-167">If it is necessary to maintain state data throughout serialization, data can be set and accessed by a serializer, which can listen to the <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SerializationComplete> event, and clear the data after serialization.</span></span> <span data-ttu-id="b3240-168">Wiederherstellen des richtigen Zustands an, nach der Serialisierung wichtig sein kann, da Serialisierungsprogramme während der Serialisierung wiederverwendet werden können und restliche Zustandsdaten oder offene Streams dann möglicherweise nicht richtig.</span><span class="sxs-lookup"><span data-stu-id="b3240-168">Restoring the proper state after serialization can be important because serializers can be reused during serialization, and leftover state data or open streams might not be correct.</span></span>  
  
 <span data-ttu-id="b3240-169">Z. B. wenn ein Serialisierungsprogramm zum Schreiben in eine andere Datei, z. B. eine Ressourcendatei benötigt ist es ineffizient, Entwerfen Sie das Serialisierungsprogramm, das die Datei nach Abschluss zu schließen.</span><span class="sxs-lookup"><span data-stu-id="b3240-169">For example, if a serializer needs to write to another file, such as a resource file, it is inefficient to design the serializer to close the file when finished.</span></span> <span data-ttu-id="b3240-170">Serialisieren eines Objektdiagramms in der Regel erforderlich mehrere Serialisierungsprogramme.</span><span class="sxs-lookup"><span data-stu-id="b3240-170">Serializing an object graph usually requires several serializers.</span></span> <span data-ttu-id="b3240-171">Die Ressourcendatei würde geöffnet und oft geschlossen werden.</span><span class="sxs-lookup"><span data-stu-id="b3240-171">The resource file would be opened and closed many times.</span></span> <span data-ttu-id="b3240-172">Stattdessen kann die Ressourcendatei am Ende der Serialisierung geschlossen werden, durch ein Objekt, das überwacht, die <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SerializationComplete> Ereignis.</span><span class="sxs-lookup"><span data-stu-id="b3240-172">Instead, the resource file can be closed at the end of serialization by an object that listened to the <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SerializationComplete> event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetName">
      <MemberSignature Language="C#" Value="public void SetName (object instance, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetName(object instance, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SetName(System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetName (instance As Object, name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetName(System::Object ^ instance, System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="instance"><span data-ttu-id="b3240-173">Die zu benennende Objektinstanz.</span><span class="sxs-lookup"><span data-stu-id="b3240-173">The object instance to name.</span></span></param>
        <param name="name"><span data-ttu-id="b3240-174">Der Name, der der Instanz gegeben werden soll.</span><span class="sxs-lookup"><span data-stu-id="b3240-174">The name to give the instance.</span></span></param>
        <summary><span data-ttu-id="b3240-175">Legt den Namen des angegebenen vorhandenen Objekts fest.</span><span class="sxs-lookup"><span data-stu-id="b3240-175">Sets the name of the specified existing object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b3240-176">Diese Methode ist nützlich, wenn es erforderlich ist, erstellen und benennen Sie eine Instanz eines Objekts ohne <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance%2A>.</span><span class="sxs-lookup"><span data-stu-id="b3240-176">This method is useful when it is necessary to create and then name an instance of an object without using <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance%2A>.</span></span> <span data-ttu-id="b3240-177">Es wird eine Ausnahme ausgelöst, wenn Sie versuchen, ein vorhandenes Objekt umzubenennen oder einem neuen Objekt einen bereits vergebenen Namen zu geben.</span><span class="sxs-lookup"><span data-stu-id="b3240-177">An exception is thrown if you try to rename an existing object or if you try to give a new object a name that is already taken.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>