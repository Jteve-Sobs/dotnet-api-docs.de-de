<Namespace Name="System.Timers">
  <Metadata><Meta Name="ms.openlocfilehash" Value="16e8a11b0b2e9a1da17eb506a6408b9e4ee97265" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70417076" /></Metadata><Docs>
    <summary>Der <see cref="N:System.Timers" />-Namespace stellt die <see cref="T:System.Timers.Timer" />-Komponente bereit, mit der Sie ein Ereignis in einem angegebenen Intervall auslösen können.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bei <xref:System.Timers.Timer> der Komponente handelt es sich um einen serverbasierten Timer, der es Ihnen ermöglicht, ein wiederkehrendes <xref:System.Timers.Timer.Elapsed> Intervall anzugeben, in dem das Ereignis in der Anwendung ausgelöst wird. Anschließend können Sie dieses Ereignis behandeln, um eine reguläre Verarbeitung bereitzustellen. Nehmen wir beispielsweise an, Sie haben einen kritischen Server, der rund um die Uhr in Betrieb gehalten werden muss. Sie können einen Dienst erstellen, der einen <xref:System.Timers.Timer> verwendet, um den Server in regelmäßigen Abständen zu überprüfen und sicherzustellen, dass das System ausgeführt wird. Falls das System nicht reagiert, könnte der Dienst versuchen, den Server neu zu starten, oder einen Administrator benachrichtigen.  
  
 Der serverbasierte <xref:System.Timers.Timer> ist für die Verwendung mit Arbeitsthreads in einer Multithreadumgebung konzipiert. Servertimer können threadübergreifend eingesetzt werden, um das ausgelöste <xref:System.Timers.Timer.Elapsed>-Ereignis zu behandeln. Hierdurch wird eine im Vergleich zu Windows-Timern größere Genauigkeit beim rechtzeitigen Auslösen des Ereignisses erzielt.  
  
 ]]></format>
    </remarks>
  </Docs>
</Namespace>