<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="KeyedCollection`2.xml" source-language="en-US" target-language="de-DE">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac53375080ab008f35379a851d18f700db732edfd23.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3375080ab008f35379a851d18f700db732edfd23</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.ObjectModel.KeyedCollection`2">
          <source>The type of keys in the collection.</source>
          <target state="translated">Der Typ der Schlüssel in der Auflistung.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.ObjectModel.KeyedCollection`2">
          <source>The type of items in the collection.</source>
          <target state="translated">Der Typ der Elemente in der Auflistung.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" uid="T:System.Collections.ObjectModel.KeyedCollection`2">
          <source>Provides the abstract base class for a collection whose keys are embedded in the values.</source>
          <target state="translated">Stellt die abstrakte Basisklasse für eine Auflistung bereit, deren Schlüssel in die Werte eingebettet sind.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.ObjectModel.KeyedCollection`2">
          <source>The <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph> class provides both O(1) indexed retrieval and keyed retrieval that approaches O(1).</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph> -Klasse stellt sowohl O(1) Abruf und schlüsselgebundenen Abruf, die O(1) annähert.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.ObjectModel.KeyedCollection`2">
          <source>It is an abstract type, or more accurately an infinite set of abstract types, because each of its constructed generic types is an abstract base class.</source>
          <target state="translated">Es ist ein abstrakter Typ, oder genauer eine unendliche Datensatz abstrakten Typen, da jeder der konstruierten generischen Typen einer abstrakten Klasse darstellt.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.ObjectModel.KeyedCollection`2">
          <source>To use <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph>, derive your collection type from the appropriate constructed type.</source>
          <target state="translated">Mit <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph>, leiten Sie Ihre "Sammlung" aus den entsprechenden konstruierten Typ.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.ObjectModel.KeyedCollection`2">
          <source>The <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph> class is a hybrid between a collection based on the <ph id="ph2">&lt;xref:System.Collections.Generic.IList%601&gt;</ph> generic interface and a collection based on the <ph id="ph3">&lt;xref:System.Collections.Generic.IDictionary%602&gt;</ph> generic interface.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph> Klasse ist eine Mischung aus einer Sammlung auf Grundlage der <ph id="ph2">&lt;xref:System.Collections.Generic.IList%601&gt;</ph> generischen Schnittstellen und einer Sammlung basierend auf den <ph id="ph3">&lt;xref:System.Collections.Generic.IDictionary%602&gt;</ph> generische Schnittstelle.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.ObjectModel.KeyedCollection`2">
          <source>Like collections based on the <ph id="ph1">&lt;xref:System.Collections.Generic.IList%601&gt;</ph> generic interface, <ph id="ph2">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph> is an indexed list of items.</source>
          <target state="translated">Wie Auflistungen anhand der <ph id="ph1">&lt;xref:System.Collections.Generic.IList%601&gt;</ph> generische Schnittstelle <ph id="ph2">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph> ist eine indizierte Liste von Elementen.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.ObjectModel.KeyedCollection`2">
          <source>Like collections based on the <ph id="ph1">&lt;xref:System.Collections.Generic.IDictionary%602&gt;</ph> generic interface, <ph id="ph2">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph> has a key associated with each element.</source>
          <target state="translated">Wie Auflistungen anhand der <ph id="ph1">&lt;xref:System.Collections.Generic.IDictionary%602&gt;</ph> generische Schnittstelle <ph id="ph2">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph> verfügt über einen Schlüssel, die jedem Element zugeordnet.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.ObjectModel.KeyedCollection`2">
          <source>Unlike dictionaries, an element of <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph> is not a key/value pair; instead, the entire element is the value and the key is embedded within the value.</source>
          <target state="translated">Im Gegensatz zu Wörterbüchern ist ein Element der <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph> ist ein Schlüssel/Wert-Paar; stattdessen das gesamte Element ist der Wert und den Wert des Schlüssels eingebettet ist.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.ObjectModel.KeyedCollection`2">
          <source>For example, an element of a collection derived from <ph id="ph1">`KeyedCollection\&lt;String,String&gt;`</ph> (<ph id="ph2">`KeyedCollection(Of String, String)`</ph> in Visual Basic) might be "John Doe Jr."</source>
          <target state="translated">Angenommen, ein Element einer Auflistung abgeleitet <ph id="ph1">`KeyedCollection\&lt;String,String&gt;`</ph> (<ph id="ph2">`KeyedCollection(Of String, String)`</ph> in Visual Basic) möglicherweise "John Doe Jr."</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.ObjectModel.KeyedCollection`2">
          <source>where the value is "John Doe Jr."</source>
          <target state="translated">Dabei ist der Wert "John Doe Jr."</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.ObjectModel.KeyedCollection`2">
          <source>and the key is "Doe"; or a collection of employee records containing integer keys could be derived from <ph id="ph1">`KeyedCollection\&lt;int,Employee&gt;`</ph>.</source>
          <target state="translated">Schlüssel: "Doe"; oder eine Auflistung von Mitarbeiterdatensätze Ganzzahlschlüssel konnte vom abgeleitet werden <ph id="ph1">`KeyedCollection\&lt;int,Employee&gt;`</ph>.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.ObjectModel.KeyedCollection`2">
          <source>The abstract <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.GetKeyForItem%2A&gt;</ph> method extracts the key from the element.</source>
          <target state="translated">Die abstrakte <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.GetKeyForItem%2A&gt;</ph> Methode extrahiert den Schlüssel aus dem Element.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.ObjectModel.KeyedCollection`2">
          <source>By default, the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph> includes a lookup dictionary that you can obtain with the <ph id="ph2">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.Dictionary%2A&gt;</ph> property.</source>
          <target state="translated">Wird standardmäßig die <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph> enthält ein Suchwörterbuch, die mit dem Sie erhalten die <ph id="ph2">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.Dictionary%2A&gt;</ph> Eigenschaft.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.ObjectModel.KeyedCollection`2">
          <source>When an item is added to the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph>, the item's key is extracted once and saved in the lookup dictionary for faster searches.</source>
          <target state="translated">Wenn ein Element hinzugefügt wird, um die <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph>, der Schlüssel des Elements einmal extrahiert und im Suchwörterbuch für schnellere Suchvorgänge gespeichert ist.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.ObjectModel.KeyedCollection`2">
          <source>This behavior is overridden by specifying a dictionary creation threshold when you create the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph>.</source>
          <target state="translated">Dieses Verhalten wird überschrieben, indem ein Wörterbuch Erstellung Schwellenwert angeben, bei der Erstellung der <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.ObjectModel.KeyedCollection`2">
          <source>The lookup dictionary is created the first time the number of elements exceeds that threshold.</source>
          <target state="translated">Das Suchwörterbuch wird erstmalig erstellt, wenn die Anzahl der Elemente dieser Schwellenwert überschreitet.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.ObjectModel.KeyedCollection`2">
          <source>If you specify –1 as the threshold, the lookup dictionary is never created.</source>
          <target state="translated">Wenn Sie – 1 als Schwellenwert angeben, wird das Suchwörterbuch nie erstellt.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.ObjectModel.KeyedCollection`2">
          <source>When the internal lookup dictionary is used, it contains references to all the items in the collection if <ph id="ph1">`TItem`</ph> is a reference type, or copies of all the items in the collection if <ph id="ph2">`TItem`</ph> is a value type.</source>
          <target state="translated">Wenn das interne Suchwörterbuch verwendet wird, können sie Verweise auf alle Elemente in der Auflistung enthält, wenn <ph id="ph1">`TItem`</ph> ist ein Verweistyp oder aller Elemente in der Auflistung kopiert werden, wenn <ph id="ph2">`TItem`</ph> ein Werttyp ist.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.ObjectModel.KeyedCollection`2">
          <source>Thus, using the lookup dictionary may not be appropriate if <ph id="ph1">`TItem`</ph> is a value type.</source>
          <target state="translated">Daher verwenden das Suchwörterbuch nicht eignet sich möglicherweise Wenn <ph id="ph1">`TItem`</ph> ein Werttyp ist.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.ObjectModel.KeyedCollection`2">
          <source>You can access an item by its index or key by using the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.Item%2A&gt;</ph> property.</source>
          <target state="translated">Sie können ein Element über seinen Index oder Schlüssel zugreifen, indem Sie mit der <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.Item%2A&gt;</ph> Eigenschaft.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.ObjectModel.KeyedCollection`2">
          <source>You can add items without a key, but these items can subsequently be accessed only by index.</source>
          <target state="translated">Sie können Elemente ohne einen Schlüssel hinzufügen, aber diese Elemente können anschließend nur über einen Index zugegriffen werden.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.ObjectModel.KeyedCollection`2">
          <source>This section contains two code examples.</source>
          <target state="translated">Dieser Abschnitt enthält zwei Codebeispiele.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.ObjectModel.KeyedCollection`2">
          <source>The first example shows the minimum code required to derive from <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph>, and demonstrates many of the inherited methods.</source>
          <target state="translated">Das erste Beispiel zeigt die Ableitung erforderlichen minimale Code <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph>, und viele der geerbten Methoden veranschaulicht.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.ObjectModel.KeyedCollection`2">
          <source>The second example shows how to override the protected methods of <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph> to provide custom behavior.</source>
          <target state="translated">Im zweite Beispiel wird gezeigt, wie die geschützten Methoden überschreiben <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph> um benutzerdefiniertes Verhalten bereitzustellen.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.ObjectModel.KeyedCollection`2">
          <source><bpt id="p1">**</bpt>Example 1<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>Beispiel 1<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.ObjectModel.KeyedCollection`2">
          <source>This code example shows the minimum code necessary to derive a collection class from <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph>: overriding the <ph id="ph2">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.GetKeyForItem%2A&gt;</ph> method and providing a public constructor that delegates to a base class constructor.</source>
          <target state="translated">Dieses Codebeispiel zeigt die minimalen Code erforderlich, leiten Sie eine Auflistungsklasse von <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph>: Überschreiben der <ph id="ph2">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.GetKeyForItem%2A&gt;</ph> -Methode und ein öffentlicher Konstruktor bereitgestellt ist, die an einen Basisklassenkonstruktor delegiert.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.ObjectModel.KeyedCollection`2">
          <source>The code example also demonstrates many of the properties and methods inherited from <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph> and <ph id="ph2">&lt;xref:System.Collections.ObjectModel.Collection%601&gt;</ph> classes.</source>
          <target state="translated">Das Codebeispiel zeigt außerdem viele Eigenschaften und Methoden von geerbt <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph> und <ph id="ph2">&lt;xref:System.Collections.ObjectModel.Collection%601&gt;</ph> Klassen.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.ObjectModel.KeyedCollection`2">
          <source>The <ph id="ph1">`SimpleOrder`</ph> class is a very simple requisition list that contains <ph id="ph2">`OrderItem`</ph> objects, each of which represents a line item in the order.</source>
          <target state="translated">Die <ph id="ph1">`SimpleOrder`</ph> Klasse ist eine sehr einfache Bestellliste, enthält <ph id="ph2">`OrderItem`</ph> Objekte, von denen jedes einen Eintrag in der Reihenfolge darstellt.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.ObjectModel.KeyedCollection`2">
          <source>The key of <ph id="ph1">`OrderItem`</ph> is immutable, an important consideration for classes that derive from <ph id="ph2">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph>.</source>
          <target state="translated">Der Schlüssel des <ph id="ph1">`OrderItem`</ph> unveränderlich ist, ist ein wichtiger Aspekt für abgeleitete Klassen <ph id="ph2">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.ObjectModel.KeyedCollection`2">
          <source>For a code example that uses mutable keys, see <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A&gt;</ph>.</source>
          <target state="translated">Ein Codebeispiel, die änderbare Schlüssel verwendet, finden Sie unter <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.ObjectModel.KeyedCollection`2">
          <source><bpt id="p1">**</bpt>Example 2<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>Beispiel 2<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.ObjectModel.KeyedCollection`2">
          <source>The following code example shows how to override the protected <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A&gt;</ph>, and <ph id="ph4">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A&gt;</ph> methods, to provide custom behavior for the <ph id="ph5">&lt;xref:System.Collections.ObjectModel.Collection%601.Add%2A&gt;</ph>, <ph id="ph6">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.Remove%2A&gt;</ph>, and <ph id="ph7">&lt;xref:System.Collections.ObjectModel.Collection%601.Clear%2A&gt;</ph> methods, and for setting the default <ph id="ph8">&lt;xref:System.Collections.ObjectModel.Collection%601.Item%2A&gt;</ph> property (the indexer in C#).</source>
          <target state="translated">Im folgenden Codebeispiel wird veranschaulicht, wie die geschützte überschreiben <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A&gt;</ph>, und <ph id="ph4">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A&gt;</ph> Methoden, die zur Bereitstellung eines benutzerdefinierten Verhaltens für die <ph id="ph5">&lt;xref:System.Collections.ObjectModel.Collection%601.Add%2A&gt;</ph>, <ph id="ph6">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.Remove%2A&gt;</ph>, und <ph id="ph7">&lt;xref:System.Collections.ObjectModel.Collection%601.Clear%2A&gt;</ph> Methoden, und für Festlegen des standardmäßigen <ph id="ph8">&lt;xref:System.Collections.ObjectModel.Collection%601.Item%2A&gt;</ph> -Eigenschaft (Indexer in c#).</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.ObjectModel.KeyedCollection`2">
          <source>The custom behavior provided in this example is a notification event named <ph id="ph1">`Changed`</ph>, which is raised at the end of each of the overridden methods.</source>
          <target state="translated">In diesem Beispiel bereitgestellte benutzerdefinierte Verhalten wird ein Benachrichtigungsereignis mit dem Namen <ph id="ph1">`Changed`</ph>, das am Ende der überschriebenen Methoden ausgelöst wird.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.ObjectModel.KeyedCollection`2">
          <source>The code example creates the <ph id="ph1">`SimpleOrder`</ph> class, which derives from <ph id="ph2">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph> and represents a simple order form.</source>
          <target state="translated">Das Codebeispiel erstellt die <ph id="ph1">`SimpleOrder`</ph> -Klasse, abgeleitet von <ph id="ph2">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph> und ein einfaches Bestellformular darstellt.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.ObjectModel.KeyedCollection`2">
          <source>The order form contains <ph id="ph1">`OrderItem`</ph> objects representing items ordered.</source>
          <target state="translated">Enthält die Bestellformular <ph id="ph1">`OrderItem`</ph> Objekte, die bestellte Artikel darstellen.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.ObjectModel.KeyedCollection`2">
          <source>The code example also creates a <ph id="ph1">`SimpleOrderChangedEventArgs`</ph> class to contain the event information, and an enumeration to identify the type of change.</source>
          <target state="translated">Das Codebeispiel erstellt außerdem eine <ph id="ph1">`SimpleOrderChangedEventArgs`</ph> Klasse, um die Ereignisinformationen und eine Enumeration zum Identifizieren der Art der Änderung enthalten.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.ObjectModel.KeyedCollection`2">
          <source>The code example demonstrates the custom behavior by calling the properties and methods of the derived class, in the <ph id="ph1">`Main`</ph> method of the <ph id="ph2">`Demo`</ph> class.</source>
          <target state="translated">Im Codebeispiel wird veranschaulicht, das benutzerdefinierte Verhalten durch Aufrufen von Eigenschaften und Methoden der abgeleiteten Klasse in der <ph id="ph1">`Main`</ph> Methode der <ph id="ph2">`Demo`</ph> Klasse.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.ObjectModel.KeyedCollection`2">
          <source>This code example uses objects with immutable keys.</source>
          <target state="translated">Dieses Codebeispiel verwendet die Objekte mit unveränderlichen Schlüsseln.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.ObjectModel.KeyedCollection`2">
          <source>For a code example that uses mutable keys, see <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A&gt;</ph>.</source>
          <target state="translated">Ein Codebeispiel, die änderbare Schlüssel verwendet, finden Sie unter <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="T:System.Collections.ObjectModel.KeyedCollection`2">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Collections.ObjectModel.KeyedCollection`2" /&gt;</ph> class.</source>
          <target state="translated">Initialisiert eine neue Instanz der <ph id="ph1">&lt;see cref="T:System.Collections.ObjectModel.KeyedCollection`2" /&gt;</ph>-Klasse.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.KeyedCollection`2.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Collections.ObjectModel.KeyedCollection`2" /&gt;</ph> class that uses the default equality comparer.</source>
          <target state="translated">Initialisiert eine neue Instanz der <ph id="ph1">&lt;see cref="T:System.Collections.ObjectModel.KeyedCollection`2" /&gt;</ph>-Klasse, die einen Standardgleichheitsvergleich verwendet.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.#ctor">
          <source>A <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph> created with this constructor uses the default generic equality comparer for the type of the key, obtained from <ph id="ph2">&lt;xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Ein <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph> erstellt, die mit diesem Konstruktor verwendet den generischen Standardgleichheitsvergleich für der Typ des Schlüssels, abgerufenes <ph id="ph2">&lt;xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.#ctor">
          <source>To specify a different generic equality comparer, use the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.%23ctor%28System.Collections.Generic.IEqualityComparer%7B%600%7D%29&gt;</ph> constructor or the <ph id="ph2">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.%23ctor%28System.Collections.Generic.IEqualityComparer%7B%600%7D%2CSystem.Int32%29&gt;</ph> constructor.</source>
          <target state="translated">Verwenden Sie zum Angeben eines anderen generischen Gleichheitsvergleich die <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.%23ctor%28System.Collections.Generic.IEqualityComparer%7B%600%7D%29&gt;</ph> Konstruktor oder die <ph id="ph2">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.%23ctor%28System.Collections.Generic.IEqualityComparer%7B%600%7D%2CSystem.Int32%29&gt;</ph> Konstruktor.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.#ctor">
          <source>By default, the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph> includes a lookup dictionary that is created when the first item is added.</source>
          <target state="translated">Wird standardmäßig die <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph> enthält ein Suchwörterbuch, die erstellt wird, wenn das erste Element hinzugefügt wird.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.#ctor">
          <source>When an item is added to the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph>, the item's key is extracted once and saved in the lookup dictionary for faster searches.</source>
          <target state="translated">Wenn ein Element hinzugefügt wird, um die <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph>, der Schlüssel des Elements einmal extrahiert und im Suchwörterbuch für schnellere Suchvorgänge gespeichert ist.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.#ctor">
          <source>This behavior can be overridden by using the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.%23ctor%28System.Collections.Generic.IEqualityComparer%7B%600%7D%2CSystem.Int32%29&gt;</ph> constructor and specifying a dictionary creation threshold.</source>
          <target state="translated">Dieses Verhalten kann überschrieben werden, mithilfe der <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.%23ctor%28System.Collections.Generic.IEqualityComparer%7B%600%7D%2CSystem.Int32%29&gt;</ph> Konstruktor und einen Wörterbuch Erstellung Schwellenwert angeben.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.#ctor">
          <source>Because the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph> class is abstract (<ph id="ph2">`MustInherit`</ph> in Visual Basic), you must derive from it in order to use it.</source>
          <target state="translated">Da die <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph> Klasse ist abstrakt (<ph id="ph2">`MustInherit`</ph> in Visual Basic), Sie müssen daraus ableiten, um sie zu verwenden.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.#ctor">
          <source>In the constructor for your derived type, call the appropriate <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph> constructor.</source>
          <target state="translated">Im Konstruktor für den abgeleiteten Typ, rufen Sie die entsprechende <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph> Konstruktor.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.#ctor">
          <source>It is not necessary to expose functionality like the equality comparer or the dictionary creation threshold in your constructors.</source>
          <target state="translated">Es ist nicht erforderlich, um Funktionen wie den Gleichheitsvergleich oder dem Wörterbuch Erstellung Schwellenwert in Ihre Konstruktoren verfügbar zu machen.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.#ctor">
          <source>This constructor is an O(1) operation.</source>
          <target state="translated">Dieser Konstruktor ist ein o(1)-Vorgang.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.#ctor">
          <source>This code example shows the minimum code necessary to derive a collection class from <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph>: overriding the <ph id="ph2">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.GetKeyForItem%2A&gt;</ph> method and providing a public constructor that delegates to a base class constructor.</source>
          <target state="translated">Dieses Codebeispiel zeigt die minimalen Code erforderlich, leiten Sie eine Auflistungsklasse von <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph>: Überschreiben der <ph id="ph2">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.GetKeyForItem%2A&gt;</ph> -Methode und ein öffentlicher Konstruktor bereitgestellt ist, die an einen Basisklassenkonstruktor delegiert.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.#ctor">
          <source>The code example also demonstrates many of the properties and methods inherited from <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph> and <ph id="ph2">&lt;xref:System.Collections.ObjectModel.Collection%601&gt;</ph> classes.</source>
          <target state="translated">Das Codebeispiel zeigt außerdem viele Eigenschaften und Methoden von geerbt <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph> und <ph id="ph2">&lt;xref:System.Collections.ObjectModel.Collection%601&gt;</ph> Klassen.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.#ctor">
          <source>The <ph id="ph1">`SimpleOrder`</ph> class is a very simple requisition list that contains <ph id="ph2">`OrderItem`</ph> objects, each of which represents a line item in the order.</source>
          <target state="translated">Die <ph id="ph1">`SimpleOrder`</ph> Klasse ist eine sehr einfache Bestellliste, enthält <ph id="ph2">`OrderItem`</ph> Objekte, von denen jedes einen Eintrag in der Reihenfolge darstellt.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.#ctor">
          <source>The key of <ph id="ph1">`OrderItem`</ph> is immutable, an important consideration for classes that derive from <ph id="ph2">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph>.</source>
          <target state="translated">Der Schlüssel des <ph id="ph1">`OrderItem`</ph> unveränderlich ist, ist ein wichtiger Aspekt für abgeleitete Klassen <ph id="ph2">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.#ctor">
          <source>For a code example that uses mutable keys, see <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A&gt;</ph>.</source>
          <target state="translated">Ein Codebeispiel, die änderbare Schlüssel verwendet, finden Sie unter <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.KeyedCollection`2.#ctor(System.Collections.Generic.IEqualityComparer{`0})">
          <source>The implementation of the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph> generic interface to use when comparing keys, or <ph id="ph2">&lt;see langword="null" /&gt;</ph> to use the default equality comparer for the type of the key, obtained from <ph id="ph3">&lt;see cref="P:System.Collections.Generic.EqualityComparer`1.Default" /&gt;</ph>.</source>
          <target state="translated">Die Implementierung der generischen <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph>-Schnittstelle, die beim Schlüsselvergleich verwendet werden soll, oder <ph id="ph2">&lt;see langword="null" /&gt;</ph>, damit der Standardgleichheitsvergleich für den Typ des Schlüssels verwendet wird, der aus dem <ph id="ph3">&lt;see cref="P:System.Collections.Generic.EqualityComparer`1.Default" /&gt;</ph> abgerufen wird.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.KeyedCollection`2.#ctor(System.Collections.Generic.IEqualityComparer{`0})">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Collections.ObjectModel.KeyedCollection`2" /&gt;</ph> class that uses the specified equality comparer.</source>
          <target state="translated">Initialisiert eine neue Instanz der <ph id="ph1">&lt;see cref="T:System.Collections.ObjectModel.KeyedCollection`2" /&gt;</ph>-Klasse, die den angegebenen Gleichheitsvergleich verwendet.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.#ctor(System.Collections.Generic.IEqualityComparer{`0})">
          <source>By default, the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph> includes a lookup dictionary that is created when the first item is added.</source>
          <target state="translated">Wird standardmäßig die <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph> enthält ein Suchwörterbuch, die erstellt wird, wenn das erste Element hinzugefügt wird.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.#ctor(System.Collections.Generic.IEqualityComparer{`0})">
          <source>When an item is added to the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph>, the item's key is extracted once and saved in the lookup dictionary for faster searches.</source>
          <target state="translated">Wenn ein Element hinzugefügt wird, um die <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph>, der Schlüssel des Elements einmal extrahiert und im Suchwörterbuch für schnellere Suchvorgänge gespeichert ist.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.#ctor(System.Collections.Generic.IEqualityComparer{`0})">
          <source>This behavior can be overridden by using the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.%23ctor%28System.Collections.Generic.IEqualityComparer%7B%600%7D%2CSystem.Int32%29&gt;</ph> constructor and specifying a dictionary creation threshold.</source>
          <target state="translated">Dieses Verhalten kann überschrieben werden, mithilfe der <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.%23ctor%28System.Collections.Generic.IEqualityComparer%7B%600%7D%2CSystem.Int32%29&gt;</ph> Konstruktor und einen Wörterbuch Erstellung Schwellenwert angeben.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.#ctor(System.Collections.Generic.IEqualityComparer{`0})">
          <source>Because the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph> class is abstract (<ph id="ph2">`MustInherit`</ph> in Visual Basic), you must derive from it in order to use it.</source>
          <target state="translated">Da die <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph> Klasse ist abstrakt (<ph id="ph2">`MustInherit`</ph> in Visual Basic), Sie müssen daraus ableiten, um sie zu verwenden.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.#ctor(System.Collections.Generic.IEqualityComparer{`0})">
          <source>In the constructor for your derived type, call the appropriate <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph> constructor.</source>
          <target state="translated">Im Konstruktor für den abgeleiteten Typ, rufen Sie die entsprechende <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph> Konstruktor.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.#ctor(System.Collections.Generic.IEqualityComparer{`0})">
          <source>It is not necessary to expose functionality like the equality comparer or the dictionary creation threshold in your constructors.</source>
          <target state="translated">Es ist nicht erforderlich, um Funktionen wie den Gleichheitsvergleich oder dem Wörterbuch Erstellung Schwellenwert in Ihre Konstruktoren verfügbar zu machen.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.#ctor(System.Collections.Generic.IEqualityComparer{`0})">
          <source>This constructor is an O(1) operation.</source>
          <target state="translated">Dieser Konstruktor ist ein o(1)-Vorgang.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.KeyedCollection`2.#ctor(System.Collections.Generic.IEqualityComparer{`0},System.Int32)">
          <source>The implementation of the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph> generic interface to use when comparing keys, or <ph id="ph2">&lt;see langword="null" /&gt;</ph> to use the default equality comparer for the type of the key, obtained from <ph id="ph3">&lt;see cref="P:System.Collections.Generic.EqualityComparer`1.Default" /&gt;</ph>.</source>
          <target state="translated">Die Implementierung der generischen <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph>-Schnittstelle, die beim Schlüsselvergleich verwendet werden soll, oder <ph id="ph2">&lt;see langword="null" /&gt;</ph>, damit der Standardgleichheitsvergleich für den Typ des Schlüssels verwendet wird, der aus dem <ph id="ph3">&lt;see cref="P:System.Collections.Generic.EqualityComparer`1.Default" /&gt;</ph> abgerufen wird.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.KeyedCollection`2.#ctor(System.Collections.Generic.IEqualityComparer{`0},System.Int32)">
          <source>The number of elements the collection can hold without creating a lookup dictionary (0 creates the lookup dictionary when the first item is added), or –1 to specify that a lookup dictionary is never created.</source>
          <target state="translated">Die Anzahl von Elementen, die die Auflistung enthalten kann, ohne dass ein Suchwörterbuch erstellt wird (bei Angabe von 0 wird bereits beim Hinzufügen des ersten Elements ein Suchwörterbuch erstellt), oder -1, um anzugeben, dass nie ein Suchwörterbuch erstellt wird.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.KeyedCollection`2.#ctor(System.Collections.Generic.IEqualityComparer{`0},System.Int32)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Collections.ObjectModel.KeyedCollection`2" /&gt;</ph> class that uses the specified equality comparer and creates a lookup dictionary when the specified threshold is exceeded.</source>
          <target state="translated">Initialisiert eine neue Instanz der <ph id="ph1">&lt;see cref="T:System.Collections.ObjectModel.KeyedCollection`2" /&gt;</ph>-Klasse, bei der der angegebene Gleichheitsvergleich verwendet und beim Überschreiten des angegebenen Schwellenwerts ein Suchwörterbuch erstellt wird.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.#ctor(System.Collections.Generic.IEqualityComparer{`0},System.Int32)">
          <source>By default, the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph> includes a lookup dictionary that is created when the first item is added.</source>
          <target state="translated">Wird standardmäßig die <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph> enthält ein Suchwörterbuch, die erstellt wird, wenn das erste Element hinzugefügt wird.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.#ctor(System.Collections.Generic.IEqualityComparer{`0},System.Int32)">
          <source>When an item is added to the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph>, the item's key is extracted once and saved in the lookup dictionary for faster searches.</source>
          <target state="translated">Wenn ein Element hinzugefügt wird, um die <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph>, der Schlüssel des Elements einmal extrahiert und im Suchwörterbuch für schnellere Suchvorgänge gespeichert ist.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.#ctor(System.Collections.Generic.IEqualityComparer{`0},System.Int32)">
          <source>This constructor allows you to override that behavior.</source>
          <target state="translated">Mit diesem Konstruktor können Sie dieses Verhalten außer Kraft setzen.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.#ctor(System.Collections.Generic.IEqualityComparer{`0},System.Int32)">
          <source>Specify 0 to create the dictionary when the first element is added, 1 to create the dictionary when the second element is added, and so on.</source>
          <target state="translated">Geben Sie 0 ein, um das Wörterbuch zu erstellen, wenn das erste Element hinzugefügt wird, 1, um das Wörterbuch zu erstellen, wenn das zweite Element hinzugefügt wird, usw. an.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.#ctor(System.Collections.Generic.IEqualityComparer{`0},System.Int32)">
          <source>If you specify –1 as the threshold, the lookup dictionary is never created.</source>
          <target state="translated">Wenn Sie – 1 als Schwellenwert angeben, wird das Suchwörterbuch nie erstellt.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.#ctor(System.Collections.Generic.IEqualityComparer{`0},System.Int32)">
          <source>For very small collections the improvement in retrieval speed provided by the lookup dictionary might not be worth the extra memory required by the dictionary.</source>
          <target state="translated">Für sehr kleine Auflistungen möglicherweise die Verbesserung der Abruf Geschwindigkeit gebotenen Suchwörterbuch nicht zu den zusätzlichen Arbeitsspeicher erforderlich, die für das Wörterbuch.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.#ctor(System.Collections.Generic.IEqualityComparer{`0},System.Int32)">
          <source>Setting a threshold allows you to decide when to make that tradeoff.</source>
          <target state="translated">Einen Schwellenwert festzulegen, können Sie entscheiden, wann dieser Kompromiss.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.#ctor(System.Collections.Generic.IEqualityComparer{`0},System.Int32)">
          <source>Because the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph> class is abstract (<ph id="ph2">`MustInherit`</ph> in Visual Basic), you must derive from it in order to use it.</source>
          <target state="translated">Da die <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph> Klasse ist abstrakt (<ph id="ph2">`MustInherit`</ph> in Visual Basic), Sie müssen daraus ableiten, um sie zu verwenden.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.#ctor(System.Collections.Generic.IEqualityComparer{`0},System.Int32)">
          <source>In the constructor for your derived type, call the appropriate <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph> constructor.</source>
          <target state="translated">Im Konstruktor für den abgeleiteten Typ, rufen Sie die entsprechende <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph> Konstruktor.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.#ctor(System.Collections.Generic.IEqualityComparer{`0},System.Int32)">
          <source>It is not necessary to expose functionality like the equality comparer or the dictionary creation threshold in your constructors.</source>
          <target state="translated">Es ist nicht erforderlich, um Funktionen wie den Gleichheitsvergleich oder dem Wörterbuch Erstellung Schwellenwert in Ihre Konstruktoren verfügbar zu machen.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.#ctor(System.Collections.Generic.IEqualityComparer{`0},System.Int32)">
          <source>This constructor is an O(1) operation.</source>
          <target state="translated">Dieser Konstruktor ist ein o(1)-Vorgang.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.#ctor(System.Collections.Generic.IEqualityComparer{`0},System.Int32)">
          <source>The following code example shows how to override the protected <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A&gt;</ph>, and <ph id="ph4">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A&gt;</ph> methods, to provide custom behavior for the <ph id="ph5">&lt;xref:System.Collections.ObjectModel.Collection%601.Add%2A&gt;</ph>, <ph id="ph6">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.Remove%2A&gt;</ph>, and <ph id="ph7">&lt;xref:System.Collections.ObjectModel.Collection%601.Clear%2A&gt;</ph> methods, and for setting the default <ph id="ph8">&lt;xref:System.Collections.ObjectModel.Collection%601.Item%2A&gt;</ph> property (the indexer in C#).</source>
          <target state="translated">Im folgenden Codebeispiel wird veranschaulicht, wie die geschützte überschreiben <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A&gt;</ph>, und <ph id="ph4">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A&gt;</ph> Methoden, die zur Bereitstellung eines benutzerdefinierten Verhaltens für die <ph id="ph5">&lt;xref:System.Collections.ObjectModel.Collection%601.Add%2A&gt;</ph>, <ph id="ph6">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.Remove%2A&gt;</ph>, und <ph id="ph7">&lt;xref:System.Collections.ObjectModel.Collection%601.Clear%2A&gt;</ph> Methoden, und für Festlegen des standardmäßigen <ph id="ph8">&lt;xref:System.Collections.ObjectModel.Collection%601.Item%2A&gt;</ph> -Eigenschaft (Indexer in c#).</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.#ctor(System.Collections.Generic.IEqualityComparer{`0},System.Int32)">
          <source>The custom behavior provided in this example is a notification event named <ph id="ph1">`Changed`</ph>, which is raised at the end of each of the overridden methods.</source>
          <target state="translated">In diesem Beispiel bereitgestellte benutzerdefinierte Verhalten wird ein Benachrichtigungsereignis mit dem Namen <ph id="ph1">`Changed`</ph>, das am Ende der überschriebenen Methoden ausgelöst wird.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.#ctor(System.Collections.Generic.IEqualityComparer{`0},System.Int32)">
          <source>The code example uses the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.%23ctor%28System.Collections.Generic.IEqualityComparer%7B%600%7D%2CSystem.Int32%29&gt;</ph> constructor with a threshold of 0, so that the internal dictionary is created the first time an object is added to the collection.</source>
          <target state="translated">Das Codebeispiel verwendet die <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.%23ctor%28System.Collections.Generic.IEqualityComparer%7B%600%7D%2CSystem.Int32%29&gt;</ph> Konstruktor mit einem Schwellenwert von 0 (null), damit das interne Wörterbuch erstellt, das erste Mal ein Objekt wird auf die Auflistung hinzugefügt.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.#ctor(System.Collections.Generic.IEqualityComparer{`0},System.Int32)">
          <source>The code example creates the <ph id="ph1">`SimpleOrder`</ph> class, which derives from <ph id="ph2">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph> and represents a simple order form.</source>
          <target state="translated">Das Codebeispiel erstellt die <ph id="ph1">`SimpleOrder`</ph> -Klasse, abgeleitet von <ph id="ph2">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph> und ein einfaches Bestellformular darstellt.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.#ctor(System.Collections.Generic.IEqualityComparer{`0},System.Int32)">
          <source>The order form contains <ph id="ph1">`OrderItem`</ph> objects representing items ordered.</source>
          <target state="translated">Enthält die Bestellformular <ph id="ph1">`OrderItem`</ph> Objekte, die bestellte Artikel darstellen.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.#ctor(System.Collections.Generic.IEqualityComparer{`0},System.Int32)">
          <source>The code example also creates a <ph id="ph1">`SimpleOrderChangedEventArgs`</ph> class to contain the event information, and an enumeration to identify the type of change.</source>
          <target state="translated">Das Codebeispiel erstellt außerdem eine <ph id="ph1">`SimpleOrderChangedEventArgs`</ph> Klasse, um die Ereignisinformationen und eine Enumeration zum Identifizieren der Art der Änderung enthalten.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.#ctor(System.Collections.Generic.IEqualityComparer{`0},System.Int32)">
          <source>The code example demonstrates the custom behavior by calling the properties and methods of the derived class, in the <ph id="ph1">`Main`</ph> method of the <ph id="ph2">`Demo`</ph> class.</source>
          <target state="translated">Im Codebeispiel wird veranschaulicht, das benutzerdefinierte Verhalten durch Aufrufen von Eigenschaften und Methoden der abgeleiteten Klasse in der <ph id="ph1">`Main`</ph> Methode der <ph id="ph2">`Demo`</ph> Klasse.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.#ctor(System.Collections.Generic.IEqualityComparer{`0},System.Int32)">
          <source>This code example uses objects with immutable keys.</source>
          <target state="translated">Dieses Codebeispiel verwendet die Objekte mit unveränderlichen Schlüsseln.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.#ctor(System.Collections.Generic.IEqualityComparer{`0},System.Int32)">
          <source>For a code example that uses mutable keys, see <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A&gt;</ph>.</source>
          <target state="translated">Ein Codebeispiel, die änderbare Schlüssel verwendet, finden Sie unter <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.KeyedCollection`2.#ctor(System.Collections.Generic.IEqualityComparer{`0},System.Int32)">
          <source><ph id="ph1">&lt;paramref name="dictionaryCreationThreshold" /&gt;</ph> is less than –1.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="dictionaryCreationThreshold" /&gt;</ph> ist kleiner als –1.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.KeyedCollection`2.ChangeItemKey(`1,`0)">
          <source>The element to change the key of.</source>
          <target state="translated">Das Element, dessen Schlüssel geändert werden soll.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.KeyedCollection`2.ChangeItemKey(`1,`0)">
          <source>The new key for <bpt id="p1">&lt;c&gt;</bpt>item<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Der neue Schlüssel für <bpt id="p1">&lt;c&gt;</bpt>item<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.KeyedCollection`2.ChangeItemKey(`1,`0)">
          <source>Changes the key associated with the specified element in the lookup dictionary.</source>
          <target state="translated">Ändert den dem angegebenen Element im Suchwörterbuch zugeordneten Schlüssel.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.ChangeItemKey(`1,`0)">
          <source>This method does not modify the key embedded in <ph id="ph1">`item`</ph>; it simply replaces the key saved in the lookup dictionary.</source>
          <target state="translated">Diese Methode ändert nicht den Schlüssel in eingebetteten <ph id="ph1">`item`</ph>; er einfach ersetzt den Schlüssel im Suchwörterbuch gespeichert.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.ChangeItemKey(`1,`0)">
          <source>Therefore, if <ph id="ph1">`newKey`</ph> is different from the key that is embedded in <ph id="ph2">`item`</ph>, you cannot access <ph id="ph3">`item`</ph> by using the key returned by <ph id="ph4">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.GetKeyForItem%2A&gt;</ph>.</source>
          <target state="translated">Aus diesem Grund Wenn <ph id="ph1">`newKey`</ph> unterscheidet sich von den Schlüssel, der in eingebetteten <ph id="ph2">`item`</ph>, kann nicht auf <ph id="ph3">`item`</ph> mithilfe des Schlüssels zurückgegebenes <ph id="ph4">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.GetKeyForItem%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.ChangeItemKey(`1,`0)">
          <source>This method does nothing if the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph> does not have a lookup dictionary.</source>
          <target state="translated">Diese Methode bewirkt nichts, wenn die <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph> verfügt nicht über ein Suchwörterbuch.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.ChangeItemKey(`1,`0)">
          <source>Every key in a <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph> must be unique.</source>
          <target state="translated">Jeder Schlüssel im einem <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph> muss eindeutig sein.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.ChangeItemKey(`1,`0)">
          <source>A key cannot be <ph id="ph1">`null`</ph>.</source>
          <target state="translated">Ein Schlüssel kann nicht <ph id="ph1">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.ChangeItemKey(`1,`0)">
          <source>This method is an O(1) operation.</source>
          <target state="translated">Diese Methode ist ein o(1)-Vorgang.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.ChangeItemKey(`1,`0)">
          <source>Notes for Implementers</source>
          <target state="translated">Hinweise für Implementierer</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.ChangeItemKey(`1,`0)">
          <source>Before modifying the key embedded in an item, you must call this method to update the key in the lookup dictionary.</source>
          <target state="translated">Vor dem Ändern des Schlüssels in einem Element eingebettet werden, müssen Sie diese Methode, um die Aktualisierung des Schlüssels im Suchwörterbuch aufrufen.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.ChangeItemKey(`1,`0)">
          <source>If the dictionary creation threshold is –1, calling this method is not necessary.</source>
          <target state="translated">Wenn das Wörterbuch Erstellung Schwellenwert – 1 ist, ist das Aufrufen dieser Methode nicht erforderlich.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.ChangeItemKey(`1,`0)">
          <source>Do not expose the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A&gt;</ph> method as a public method of a derived class.</source>
          <target state="translated">Machen Sie nicht die <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A&gt;</ph> -Methode, wie eine öffentliche Methode in einer abgeleiteten Klasse.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.ChangeItemKey(`1,`0)">
          <source>Misuse of this method puts the lookup dictionary out of sync with item keys.</source>
          <target state="translated">Missbrauch dieser Methode setzt das Suchwörterbuch mit Elementschlüsseln synchron.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.ChangeItemKey(`1,`0)">
          <source>For example, setting the key to <ph id="ph1">`null`</ph> and then setting it to another value adds multiple keys for an item to the lookup dictionary.</source>
          <target state="translated">Z. B. Festlegen des Schlüssels auf <ph id="ph1">`null`</ph> , und klicken Sie dann einen anderen Wert festlegen Suchwörterbuch mehrere Schlüssel für ein Element hinzugefügt.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.ChangeItemKey(`1,`0)">
          <source>Expose this method internally to allow mutable item keys: When the key for an item changes, this method is used to change the key in the lookup dictionary.</source>
          <target state="translated">Verfügbarmachen dieser Methode intern, um änderbare Elementschlüssel zulässig:, wenn der Schlüssel für ein Element geändert wird, wird diese Methode verwendet, um den Schlüssel im Suchwörterbuch zu ändern.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.ChangeItemKey(`1,`0)">
          <source>The following code example shows how to override the protected <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A&gt;</ph> method to support mutable keys, and how to override the protected <ph id="ph2">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A&gt;</ph>, and <ph id="ph5">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A&gt;</ph> methods to maintain the integrity of the keys and the collection.</source>
          <target state="translated">Im folgenden Codebeispiel wird veranschaulicht, wie die geschützte überschreiben <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A&gt;</ph> -Methode zur Unterstützung der änderbare Schlüssel und den geschützten Außerkraftsetzen <ph id="ph2">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A&gt;</ph>, und <ph id="ph5">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A&gt;</ph> Methoden, um die Integrität der Schlüssel zu verwalten und die Auflistung.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.ChangeItemKey(`1,`0)">
          <source>The code example creates the <ph id="ph1">`MutableKeys`</ph> collection, which derives from <ph id="ph2">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph>, and the <ph id="ph3">`MutableKey`</ph> class.</source>
          <target state="translated">Das Codebeispiel erstellt die <ph id="ph1">`MutableKeys`</ph> -Auflistung, die abgeleitet <ph id="ph2">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph>, und die <ph id="ph3">`MutableKey`</ph> Klasse.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.ChangeItemKey(`1,`0)">
          <source>The <ph id="ph1">`MutableKey`</ph> class has a settable <ph id="ph2">`Key`</ph> property.</source>
          <target state="translated">Die <ph id="ph1">`MutableKey`</ph> -Klasse verfügt über eine festlegbare <ph id="ph2">`Key`</ph> Eigenschaft.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.ChangeItemKey(`1,`0)">
          <source>When a new key is assigned to the property, the property setter calls the <ph id="ph1">`internal`</ph> (<ph id="ph2">`Friend`</ph> in Visual Basic) <ph id="ph3">`ChangeKey`</ph> method of the collection to test whether the new key would conflict with an existing key.</source>
          <target state="translated">Wenn ein neuer Schlüssel der Eigenschaft zugewiesen wird, ruft der Setter für eine Eigenschaft der <ph id="ph1">`internal`</ph> (<ph id="ph2">`Friend`</ph> in Visual Basic) <ph id="ph3">`ChangeKey`</ph> -Methode der Auflistung zu prüfen, ob der neue Schlüssel durch einen vorhandenen Schlüssel in Konflikt stehen würde.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.ChangeItemKey(`1,`0)">
          <source>If so, an exception is thrown and the property value is not changed.</source>
          <target state="translated">Wenn dies der Fall ist, wird eine Ausnahme ausgelöst, und der Eigenschaftswert wird nicht geändert.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.ChangeItemKey(`1,`0)">
          <source>In order to maintain the connection between a <ph id="ph1">`MutableKey`</ph> object and the <ph id="ph2">`MutableKeys`</ph> collection and to prevent an object from being inserted into two collections, the <ph id="ph3">`MutableKey`</ph> class has an <ph id="ph4">`internal`</ph> (<ph id="ph5">`Friend`</ph> in Visual Basic) <ph id="ph6">`Collection`</ph> field.</source>
          <target state="translated">Um die Verbindung zwischen Verwalten einer <ph id="ph1">`MutableKey`</ph> Objekt und die <ph id="ph2">`MutableKeys`</ph> Auflistung und zu verhindern, dass ein Objekt in zwei Auflistungen eingefügt wird die <ph id="ph3">`MutableKey`</ph> -Klasse verfügt über eine <ph id="ph4">`internal`</ph> (<ph id="ph5">`Friend`</ph> in Visual Basic) <ph id="ph6">`Collection`</ph>Feld.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.ChangeItemKey(`1,`0)">
          <source>This field is maintained by the protected methods that provide custom behavior for adding and removing items from the collection, such as the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A&gt;</ph> method.</source>
          <target state="translated">Dieses Feld wird von den geschützten Methoden, die benutzerdefiniertes Verhalten zu bieten, zum Hinzufügen und Entfernen von Elementen aus der Auflistung, z. B. verwaltet die <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.ChangeItemKey(`1,`0)">
          <source>The field is set when the item is added to a collection and cleared when the item is removed.</source>
          <target state="translated">Das Feld wird festgelegt, wenn das Element der Auflistung hinzugefügt und gelöscht, wenn das Element entfernt wird.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.KeyedCollection`2.ChangeItemKey(`1,`0)">
          <source><ph id="ph1">&lt;paramref name="item" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="item" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.KeyedCollection`2.ChangeItemKey(`1,`0)">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.KeyedCollection`2.ChangeItemKey(`1,`0)">
          <source><ph id="ph1">&lt;paramref name="key" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="key" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.KeyedCollection`2.ChangeItemKey(`1,`0)">
          <source><ph id="ph1">&lt;paramref name="item" /&gt;</ph> is not found.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="item" /&gt;</ph> wurde nicht gefunden.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.KeyedCollection`2.ChangeItemKey(`1,`0)">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.KeyedCollection`2.ChangeItemKey(`1,`0)">
          <source><ph id="ph1">&lt;paramref name="key" /&gt;</ph> already exists in the <ph id="ph2">&lt;see cref="T:System.Collections.ObjectModel.KeyedCollection`2" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="key" /&gt;</ph> ist bereits in der <ph id="ph2">&lt;see cref="T:System.Collections.ObjectModel.KeyedCollection`2" /&gt;</ph> vorhanden.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.KeyedCollection`2.ClearItems">
          <source>Removes all elements from the <ph id="ph1">&lt;see cref="T:System.Collections.ObjectModel.KeyedCollection`2" /&gt;</ph>.</source>
          <target state="translated">Entfernt alle Elemente aus der <ph id="ph1">&lt;see cref="T:System.Collections.ObjectModel.KeyedCollection`2" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.ClearItems">
          <source>If there is a lookup dictionary, this method clears it but does not delete it.</source>
          <target state="translated">Wenn ein Suchwörterbuch vorhanden ist, wird diese Methode gelöscht, aber nicht gelöscht.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.ClearItems">
          <source>If the number of elements has exceeded the dictionary creation threshold and the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph> is using a lookup dictionary, it will continue to use a lookup dictionary even though the number of elements is again under the threshold.</source>
          <target state="translated">Wenn die Anzahl der Elemente den Wörterbuch Erstellung Schwellenwert überschritten hat und die <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph> wird über ein Suchwörterbuch, ist sie weiterhin ein Suchwörterbuch verwenden, auch wenn die Anzahl der Elemente wieder unter dem Schwellenwert ist.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.ClearItems">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.ObjectModel.Collection%601.Count%2A&gt;</ph>.</source>
          <target state="translated">Diese Methode ist eine O (<ph id="ph1">`n`</ph>) Vorgang, wobei <ph id="ph2">`n`</ph> ist <ph id="ph3">&lt;xref:System.Collections.ObjectModel.Collection%601.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.ClearItems">
          <source>Notes for Implementers</source>
          <target state="translated">Hinweise für Implementierer</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.ClearItems">
          <source>Override this method to provide customized behavior for the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601.Clear%2A&gt;</ph> method, inherited from the <ph id="ph2">&lt;xref:System.Collections.ObjectModel.Collection%601&gt;</ph> generic class.</source>
          <target state="translated">Überschreiben Sie diese Methode zum Bereitstellen von benutzerdefinierten Verhaltens für die <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601.Clear%2A&gt;</ph> geerbte-Methode der <ph id="ph2">&lt;xref:System.Collections.ObjectModel.Collection%601&gt;</ph> generische Klasse.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.ClearItems">
          <source>Call the base class implementation of this method to clear the underlying collection and to clear the lookup dictionary.</source>
          <target state="translated">Rufen Sie die basisklassenimplementierung dieser Methode, die zugrunde liegende Auflistung löschen und deaktivieren Sie das Suchwörterbuch.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.ClearItems">
          <source>This section contains two code examples that demonstrate overriding the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A&gt;</ph> method to provide custom behavior for clearing all objects from the collection.</source>
          <target state="translated">Dieser Abschnitt enthält zwei Codebeispielen überschreiben die <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A&gt;</ph> Methode, um benutzerdefiniertes Verhalten bereitzustellen, für das Löschen aller Objekte aus der Auflistung.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.ClearItems">
          <source>The first example adds a custom notification event and the second provides support for a collection of objects with mutable keys.</source>
          <target state="translated">Im erste Beispiel wird ein benutzerdefiniertes Benachrichtigungsereignis hinzugefügt, und die zweite bietet Unterstützung für eine Auflistung von Objekten mit änderbaren Schlüsseln.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.ClearItems">
          <source>Example 1</source>
          <target state="translated">Beispiel 1</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.ClearItems">
          <source>The following code example shows how to override the protected <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A&gt;</ph>, and <ph id="ph4">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A&gt;</ph> methods, to provide custom behavior for the <ph id="ph5">&lt;xref:System.Collections.ObjectModel.Collection%601.Add%2A&gt;</ph>, <ph id="ph6">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.Remove%2A&gt;</ph>, and <ph id="ph7">&lt;xref:System.Collections.ObjectModel.Collection%601.Clear%2A&gt;</ph> methods, and for setting the default <ph id="ph8">&lt;xref:System.Collections.ObjectModel.Collection%601.Item%2A&gt;</ph> property (the indexer in C#).</source>
          <target state="translated">Im folgenden Codebeispiel wird veranschaulicht, wie die geschützte überschreiben <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A&gt;</ph>, und <ph id="ph4">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A&gt;</ph> Methoden, die zur Bereitstellung eines benutzerdefinierten Verhaltens für die <ph id="ph5">&lt;xref:System.Collections.ObjectModel.Collection%601.Add%2A&gt;</ph>, <ph id="ph6">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.Remove%2A&gt;</ph>, und <ph id="ph7">&lt;xref:System.Collections.ObjectModel.Collection%601.Clear%2A&gt;</ph> Methoden, und für Festlegen des standardmäßigen <ph id="ph8">&lt;xref:System.Collections.ObjectModel.Collection%601.Item%2A&gt;</ph> -Eigenschaft (Indexer in c#).</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.ClearItems">
          <source>The custom behavior provided in this example is a notification event named <ph id="ph1">`Changed`</ph>, which is raised at the end of each of the overridden methods.</source>
          <target state="translated">In diesem Beispiel bereitgestellte benutzerdefinierte Verhalten wird ein Benachrichtigungsereignis mit dem Namen <ph id="ph1">`Changed`</ph>, das am Ende der überschriebenen Methoden ausgelöst wird.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.ClearItems">
          <source>The code example creates the <ph id="ph1">`SimpleOrder`</ph> class, which derives from <ph id="ph2">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph> and represents a simple order form.</source>
          <target state="translated">Das Codebeispiel erstellt die <ph id="ph1">`SimpleOrder`</ph> -Klasse, abgeleitet von <ph id="ph2">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph> und ein einfaches Bestellformular darstellt.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.ClearItems">
          <source>The order form contains <ph id="ph1">`OrderItem`</ph> objects representing items ordered.</source>
          <target state="translated">Enthält die Bestellformular <ph id="ph1">`OrderItem`</ph> Objekte, die bestellte Artikel darstellen.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.ClearItems">
          <source>The code example also creates a <ph id="ph1">`SimpleOrderChangedEventArgs`</ph> class to contain the event information, and an enumeration to identify the type of change.</source>
          <target state="translated">Das Codebeispiel erstellt außerdem eine <ph id="ph1">`SimpleOrderChangedEventArgs`</ph> Klasse, um die Ereignisinformationen und eine Enumeration zum Identifizieren der Art der Änderung enthalten.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.ClearItems">
          <source>The code example demonstrates the custom behavior by calling the properties and methods of the derived class, in the <ph id="ph1">`Main`</ph> method of the <ph id="ph2">`Demo`</ph> class.</source>
          <target state="translated">Im Codebeispiel wird veranschaulicht, das benutzerdefinierte Verhalten durch Aufrufen von Eigenschaften und Methoden der abgeleiteten Klasse in der <ph id="ph1">`Main`</ph> Methode der <ph id="ph2">`Demo`</ph> Klasse.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.ClearItems">
          <source>This code example uses objects with immutable keys.</source>
          <target state="translated">Dieses Codebeispiel verwendet die Objekte mit unveränderlichen Schlüsseln.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.ClearItems">
          <source>For a code example that uses mutable keys, see <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A&gt;</ph>.</source>
          <target state="translated">Ein Codebeispiel, die änderbare Schlüssel verwendet, finden Sie unter <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.ClearItems">
          <source>Example 2</source>
          <target state="translated">Beispiel 2</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.ClearItems">
          <source>The following code example shows how to override the protected <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A&gt;</ph> method to support mutable keys, and how to override the protected <ph id="ph2">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A&gt;</ph>, and <ph id="ph5">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A&gt;</ph> methods to maintain the integrity of the keys and the collection.</source>
          <target state="translated">Im folgenden Codebeispiel wird veranschaulicht, wie die geschützte überschreiben <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A&gt;</ph> -Methode zur Unterstützung der änderbare Schlüssel und den geschützten Außerkraftsetzen <ph id="ph2">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A&gt;</ph>, und <ph id="ph5">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A&gt;</ph> Methoden, um die Integrität der Schlüssel zu verwalten und die Auflistung.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.ClearItems">
          <source>The code example creates the <ph id="ph1">`MutableKeys`</ph> collection, which derives from <ph id="ph2">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph>, and the <ph id="ph3">`MutableKey`</ph> class.</source>
          <target state="translated">Das Codebeispiel erstellt die <ph id="ph1">`MutableKeys`</ph> -Auflistung, die abgeleitet <ph id="ph2">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph>, und die <ph id="ph3">`MutableKey`</ph> Klasse.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.ClearItems">
          <source>The <ph id="ph1">`MutableKey`</ph> class has a settable <ph id="ph2">`Key`</ph> property.</source>
          <target state="translated">Die <ph id="ph1">`MutableKey`</ph> -Klasse verfügt über eine festlegbare <ph id="ph2">`Key`</ph> Eigenschaft.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.ClearItems">
          <source>When a new key is assigned to the property, the property setter calls the <ph id="ph1">`internal`</ph> (<ph id="ph2">`Friend`</ph> in Visual Basic) <ph id="ph3">`ChangeKey`</ph> method of the collection to test whether the new key would conflict with an existing key.</source>
          <target state="translated">Wenn ein neuer Schlüssel der Eigenschaft zugewiesen wird, ruft der Setter für eine Eigenschaft der <ph id="ph1">`internal`</ph> (<ph id="ph2">`Friend`</ph> in Visual Basic) <ph id="ph3">`ChangeKey`</ph> -Methode der Auflistung zu prüfen, ob der neue Schlüssel durch einen vorhandenen Schlüssel in Konflikt stehen würde.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.ClearItems">
          <source>If so, an exception is thrown and the property value is not changed.</source>
          <target state="translated">Wenn dies der Fall ist, wird eine Ausnahme ausgelöst, und der Eigenschaftswert wird nicht geändert.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.ClearItems">
          <source>In order to maintain the connection between a <ph id="ph1">`MutableKey`</ph> object and the <ph id="ph2">`MutableKeys`</ph> collection and to prevent an object from being inserted into two collections, the <ph id="ph3">`MutableKey`</ph> class has an <ph id="ph4">`internal`</ph> (<ph id="ph5">`Friend`</ph> in Visual Basic) <ph id="ph6">`Collection`</ph> field.</source>
          <target state="translated">Um die Verbindung zwischen Verwalten einer <ph id="ph1">`MutableKey`</ph> Objekt und die <ph id="ph2">`MutableKeys`</ph> Auflistung und zu verhindern, dass ein Objekt in zwei Auflistungen eingefügt wird die <ph id="ph3">`MutableKey`</ph> -Klasse verfügt über eine <ph id="ph4">`internal`</ph> (<ph id="ph5">`Friend`</ph> in Visual Basic) <ph id="ph6">`Collection`</ph>Feld.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.ClearItems">
          <source>This field is maintained by the protected methods that provide custom behavior for adding and removing items from the collection, such as the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A&gt;</ph> method.</source>
          <target state="translated">Dieses Feld wird von den geschützten Methoden, die benutzerdefiniertes Verhalten zu bieten, zum Hinzufügen und Entfernen von Elementen aus der Auflistung, z. B. verwaltet die <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.ClearItems">
          <source>The field is set when the item is added to a collection and cleared when the item is removed.</source>
          <target state="translated">Das Feld wird festgelegt, wenn das Element der Auflistung hinzugefügt und gelöscht, wenn das Element entfernt wird.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" uid="P:System.Collections.ObjectModel.KeyedCollection`2.Comparer">
          <source>Gets the generic equality comparer that is used to determine equality of keys in the collection.</source>
          <target state="translated">Ruft den generischen Gleichheitsvergleich ab, der verwendet wird, um die Gleichheit von Schlüsseln in der Auflistung zu bestimmen.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ObjectModel.KeyedCollection`2.Comparer">
          <source>The implementation of the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph> generic interface that is used to determine equality of keys in the collection.</source>
          <target state="translated">Die Implementierung der generischen <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph>-Schnittstelle, die verwendet wird, um die Gleichheit von Schlüsseln in der Auflistung zu bestimmen.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ObjectModel.KeyedCollection`2.Comparer">
          <source>Retrieving the value of this property is an O(1) operation.</source>
          <target state="translated">Das Abrufen des Werts dieser Eigenschaft ist ein O(1)-Vorgang.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.KeyedCollection`2.Contains(`0)">
          <source>The key to locate in the <ph id="ph1">&lt;see cref="T:System.Collections.ObjectModel.KeyedCollection`2" /&gt;</ph>.</source>
          <target state="translated">Der im <ph id="ph1">&lt;see cref="T:System.Collections.ObjectModel.KeyedCollection`2" /&gt;</ph> zu suchende Schlüssel.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.KeyedCollection`2.Contains(`0)">
          <source>Determines whether the collection contains an element with the specified key.</source>
          <target state="translated">Ermittelt, ob die Auflistung ein Element mit dem angegebenen Wert enthält.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.KeyedCollection`2.Contains(`0)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Collections.ObjectModel.KeyedCollection`2" /&gt;</ph> contains an element with the specified key; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, wenn das <ph id="ph2">&lt;see cref="T:System.Collections.ObjectModel.KeyedCollection`2" /&gt;</ph> ein Element mit dem angegebenen Schlüssel enthält, andernfalls <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.Contains(`0)">
          <source>If the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph> has a lookup dictionary, <ph id="ph2">`key`</ph> is used to search the dictionary.</source>
          <target state="translated">Wenn die <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph> hat ein Suchwörterbuch <ph id="ph2">`key`</ph> wird verwendet, um das Wörterbuch zu durchsuchen.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.Contains(`0)">
          <source>If there is no lookup dictionary, the key of each element is extracted using the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.GetKeyForItem%2A&gt;</ph> method and compared with the specified key.</source>
          <target state="translated">Wenn kein Suchwörterbuch vorhanden ist, der Schlüssel für jedes Element extrahiert mithilfe der <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.GetKeyForItem%2A&gt;</ph> Methode und mit dem angegebenen Schlüssel verglichen.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.Contains(`0)">
          <source>This method is an O(1) operation if the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph> has a lookup dictionary; otherwise it is an O(<ph id="ph2">`n`</ph>) operation, where <ph id="ph3">`n`</ph> is <ph id="ph4">&lt;xref:System.Collections.ObjectModel.Collection%601.Count%2A&gt;</ph>.</source>
          <target state="translated">Diese Methode ist ein o(1)-Vorgang aus, wenn die <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph> hat ein Suchwörterbuch; andernfalls handelt es sich um eine O (<ph id="ph2">`n`</ph>)-Vorgang, in dem <ph id="ph3">`n`</ph> ist <ph id="ph4">&lt;xref:System.Collections.ObjectModel.Collection%601.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.Contains(`0)">
          <source>This code example shows the minimum code necessary to derive a collection class from <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph>: overriding the <ph id="ph2">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.GetKeyForItem%2A&gt;</ph> method and providing a public constructor that delegates to a base class constructor.</source>
          <target state="translated">Dieses Codebeispiel zeigt die minimalen Code erforderlich, leiten Sie eine Auflistungsklasse von <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph>: Überschreiben der <ph id="ph2">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.GetKeyForItem%2A&gt;</ph> -Methode und ein öffentlicher Konstruktor bereitgestellt ist, die an einen Basisklassenkonstruktor delegiert.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.Contains(`0)">
          <source>The code example also demonstrates many of the properties and methods inherited from <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph> and <ph id="ph2">&lt;xref:System.Collections.ObjectModel.Collection%601&gt;</ph> classes.</source>
          <target state="translated">Das Codebeispiel zeigt außerdem viele Eigenschaften und Methoden von geerbt <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph> und <ph id="ph2">&lt;xref:System.Collections.ObjectModel.Collection%601&gt;</ph> Klassen.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.Contains(`0)">
          <source>The <ph id="ph1">`SimpleOrder`</ph> class is a very simple requisition list that contains <ph id="ph2">`OrderItem`</ph> objects, each of which represents a line item in the order.</source>
          <target state="translated">Die <ph id="ph1">`SimpleOrder`</ph> Klasse ist eine sehr einfache Bestellliste, enthält <ph id="ph2">`OrderItem`</ph> Objekte, von denen jedes einen Eintrag in der Reihenfolge darstellt.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.Contains(`0)">
          <source>The key of <ph id="ph1">`OrderItem`</ph> is immutable, an important consideration for classes that derive from <ph id="ph2">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph>.</source>
          <target state="translated">Der Schlüssel des <ph id="ph1">`OrderItem`</ph> unveränderlich ist, ist ein wichtiger Aspekt für abgeleitete Klassen <ph id="ph2">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.Contains(`0)">
          <source>For a code example that uses mutable keys, see <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A&gt;</ph>.</source>
          <target state="translated">Ein Codebeispiel, die änderbare Schlüssel verwendet, finden Sie unter <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.KeyedCollection`2.Contains(`0)">
          <source><ph id="ph1">&lt;paramref name="key" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="key" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" uid="P:System.Collections.ObjectModel.KeyedCollection`2.Dictionary">
          <source>Gets the lookup dictionary of the <ph id="ph1">&lt;see cref="T:System.Collections.ObjectModel.KeyedCollection`2" /&gt;</ph>.</source>
          <target state="translated">Ruft das Suchwörterbuch der <ph id="ph1">&lt;see cref="T:System.Collections.ObjectModel.KeyedCollection`2" /&gt;</ph> ab.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ObjectModel.KeyedCollection`2.Dictionary">
          <source>The lookup dictionary of the <ph id="ph1">&lt;see cref="T:System.Collections.ObjectModel.KeyedCollection`2" /&gt;</ph>, if it exists; otherwise, <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Das Suchwörterbuch der <ph id="ph1">&lt;see cref="T:System.Collections.ObjectModel.KeyedCollection`2" /&gt;</ph>, sofern vorhanden, andernfalls <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ObjectModel.KeyedCollection`2.Dictionary">
          <source>By default, the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph> includes a lookup dictionary that is created when the first item is added.</source>
          <target state="translated">Wird standardmäßig die <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph> enthält ein Suchwörterbuch, die erstellt wird, wenn das erste Element hinzugefügt wird.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ObjectModel.KeyedCollection`2.Dictionary">
          <source>When an item is added to the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph>, the item's key is extracted once and saved in the lookup dictionary for faster searches.</source>
          <target state="translated">Wenn ein Element hinzugefügt wird, um die <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph>, der Schlüssel des Elements einmal extrahiert und im Suchwörterbuch für schnellere Suchvorgänge gespeichert ist.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ObjectModel.KeyedCollection`2.Dictionary">
          <source>This behavior can be overridden by using the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.%23ctor%28System.Collections.Generic.IEqualityComparer%7B%600%7D%2CSystem.Int32%29&gt;</ph> constructor and specifying a dictionary creation threshold.</source>
          <target state="translated">Dieses Verhalten kann überschrieben werden, mithilfe der <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.%23ctor%28System.Collections.Generic.IEqualityComparer%7B%600%7D%2CSystem.Int32%29&gt;</ph> Konstruktor und einen Wörterbuch Erstellung Schwellenwert angeben.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ObjectModel.KeyedCollection`2.Dictionary">
          <source>Retrieving the value of this property is an O(1) operation.</source>
          <target state="translated">Das Abrufen des Werts dieser Eigenschaft ist ein O(1)-Vorgang.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ObjectModel.KeyedCollection`2.Dictionary">
          <source>The following code example shows how to override the protected <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A&gt;</ph> method to support mutable keys, and how to override the protected <ph id="ph2">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A&gt;</ph>, and <ph id="ph5">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A&gt;</ph> methods to maintain the integrity of the keys and the collection.</source>
          <target state="translated">Im folgenden Codebeispiel wird veranschaulicht, wie die geschützte überschreiben <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A&gt;</ph> -Methode zur Unterstützung der änderbare Schlüssel und den geschützten Außerkraftsetzen <ph id="ph2">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A&gt;</ph>, und <ph id="ph5">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A&gt;</ph> Methoden, um die Integrität der Schlüssel zu verwalten und die Auflistung.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ObjectModel.KeyedCollection`2.Dictionary">
          <source>The code example creates the <ph id="ph1">`MutableKeys`</ph> collection, which derives from <ph id="ph2">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph>, and the <ph id="ph3">`MutableKey`</ph> class.</source>
          <target state="translated">Das Codebeispiel erstellt die <ph id="ph1">`MutableKeys`</ph> -Auflistung, die abgeleitet <ph id="ph2">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph>, und die <ph id="ph3">`MutableKey`</ph> Klasse.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ObjectModel.KeyedCollection`2.Dictionary">
          <source>The <ph id="ph1">`MutableKey`</ph> class has a settable <ph id="ph2">`Key`</ph> property.</source>
          <target state="translated">Die <ph id="ph1">`MutableKey`</ph> -Klasse verfügt über eine festlegbare <ph id="ph2">`Key`</ph> Eigenschaft.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ObjectModel.KeyedCollection`2.Dictionary">
          <source>When a new key is assigned to the property, the property setter calls the <ph id="ph1">`internal`</ph> (<ph id="ph2">`Friend`</ph> in Visual Basic) <ph id="ph3">`ChangeKey`</ph> method of the collection to test whether the new key would conflict with an existing key.</source>
          <target state="translated">Wenn ein neuer Schlüssel der Eigenschaft zugewiesen wird, ruft der Setter für eine Eigenschaft der <ph id="ph1">`internal`</ph> (<ph id="ph2">`Friend`</ph> in Visual Basic) <ph id="ph3">`ChangeKey`</ph> -Methode der Auflistung zu prüfen, ob der neue Schlüssel durch einen vorhandenen Schlüssel in Konflikt stehen würde.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ObjectModel.KeyedCollection`2.Dictionary">
          <source>If so, an exception is thrown and the property value is not changed.</source>
          <target state="translated">Wenn dies der Fall ist, wird eine Ausnahme ausgelöst, und der Eigenschaftswert wird nicht geändert.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ObjectModel.KeyedCollection`2.Dictionary">
          <source>In order to maintain the connection between a <ph id="ph1">`MutableKey`</ph> object and the <ph id="ph2">`MutableKeys`</ph> collection and to prevent an object from being inserted into two collections, the <ph id="ph3">`MutableKey`</ph> class has an <ph id="ph4">`internal`</ph> (<ph id="ph5">`Friend`</ph> in Visual Basic) <ph id="ph6">`Collection`</ph> field.</source>
          <target state="translated">Um die Verbindung zwischen Verwalten einer <ph id="ph1">`MutableKey`</ph> Objekt und die <ph id="ph2">`MutableKeys`</ph> Auflistung und zu verhindern, dass ein Objekt in zwei Auflistungen eingefügt wird die <ph id="ph3">`MutableKey`</ph> -Klasse verfügt über eine <ph id="ph4">`internal`</ph> (<ph id="ph5">`Friend`</ph> in Visual Basic) <ph id="ph6">`Collection`</ph>Feld.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ObjectModel.KeyedCollection`2.Dictionary">
          <source>This field is maintained by the protected methods that provide custom behavior for adding and removing items from the collection, such as the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A&gt;</ph> method.</source>
          <target state="translated">Dieses Feld wird von den geschützten Methoden, die benutzerdefiniertes Verhalten zu bieten, zum Hinzufügen und Entfernen von Elementen aus der Auflistung, z. B. verwaltet die <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ObjectModel.KeyedCollection`2.Dictionary">
          <source>The field is set when the item is added to a collection and cleared when the item is removed.</source>
          <target state="translated">Das Feld wird festgelegt, wenn das Element der Auflistung hinzugefügt und gelöscht, wenn das Element entfernt wird.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.KeyedCollection`2.GetKeyForItem(`1)">
          <source>The element from which to extract the key.</source>
          <target state="translated">Das Element, aus dem der Schlüssel extrahiert werden soll.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.KeyedCollection`2.GetKeyForItem(`1)">
          <source>When implemented in a derived class, extracts the key from the specified element.</source>
          <target state="translated">Bei Implementierung in einer abgeleiteten Klasse wird der Schlüssel aus dem angegebenen Element extrahiert.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.KeyedCollection`2.GetKeyForItem(`1)">
          <source>The key for the specified element.</source>
          <target state="translated">Der Schlüssel für das angegebene Element.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.GetKeyForItem(`1)">
          <source>If the key in the lookup dictionary is different from the key that is embedded in <ph id="ph1">`item`</ph>, you cannot access <ph id="ph2">`item`</ph> by using the key returned by <ph id="ph3">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.GetKeyForItem%2A&gt;</ph>.</source>
          <target state="translated">Wenn der Schlüssel im Suchwörterbuch des Schlüssels unterscheiden, die in eingebettet ist <ph id="ph1">`item`</ph>, kann nicht auf <ph id="ph2">`item`</ph> mithilfe des Schlüssels zurückgegebenes <ph id="ph3">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.GetKeyForItem%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.GetKeyForItem(`1)">
          <source>You can implement this method to return <ph id="ph1">`null`</ph> for a collection that contains items without keys, in which case the items can be accessed only by their index.</source>
          <target state="translated">Sie können diese Methode zurückzugebenden implementieren <ph id="ph1">`null`</ph> für eine Sammlung, die Elemente ohne Schlüssel enthält, in diesem Fall die-Elemente zugegriffen werden kann nur durch ihren Index.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.GetKeyForItem(`1)">
          <source>This method is an O(1) operation.</source>
          <target state="translated">Diese Methode ist ein o(1)-Vorgang.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.GetKeyForItem(`1)">
          <source>Notes for Implementers</source>
          <target state="translated">Hinweise für Implementierer</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.GetKeyForItem(`1)">
          <source>You must override this method to provide the dictionary with a way to extract keys from items in the dictionary.</source>
          <target state="translated">Sie müssen diese Methode, um das Wörterbuch eine Möglichkeit zum Extrahieren von Schlüsseln von Elementen im Wörterbuch bereitstellen überschreiben.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.GetKeyForItem(`1)">
          <source>This method is called internally.</source>
          <target state="translated">Diese Methode wird intern aufgerufen.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.GetKeyForItem(`1)">
          <source>It is not necessary for it to be public.</source>
          <target state="translated">Es ist nicht erforderlich, damit er öffentlich sein.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.GetKeyForItem(`1)">
          <source>This code example shows the minimum code necessary to derive a collection class from <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph>: overriding the <ph id="ph2">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.GetKeyForItem%2A&gt;</ph> method and providing a public constructor that delegates to a base class constructor.</source>
          <target state="translated">Dieses Codebeispiel zeigt die minimalen Code erforderlich, leiten Sie eine Auflistungsklasse von <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph>: Überschreiben der <ph id="ph2">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.GetKeyForItem%2A&gt;</ph> -Methode und ein öffentlicher Konstruktor bereitgestellt ist, die an einen Basisklassenkonstruktor delegiert.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.GetKeyForItem(`1)">
          <source>The code example also demonstrates many of the properties and methods inherited from <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph> and <ph id="ph2">&lt;xref:System.Collections.ObjectModel.Collection%601&gt;</ph> classes.</source>
          <target state="translated">Das Codebeispiel zeigt außerdem viele Eigenschaften und Methoden von geerbt <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph> und <ph id="ph2">&lt;xref:System.Collections.ObjectModel.Collection%601&gt;</ph> Klassen.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.GetKeyForItem(`1)">
          <source>The <ph id="ph1">`SimpleOrder`</ph> class is a very simple requisition list that contains <ph id="ph2">`OrderItem`</ph> objects, each of which represents a line item in the order.</source>
          <target state="translated">Die <ph id="ph1">`SimpleOrder`</ph> Klasse ist eine sehr einfache Bestellliste, enthält <ph id="ph2">`OrderItem`</ph> Objekte, von denen jedes einen Eintrag in der Reihenfolge darstellt.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.GetKeyForItem(`1)">
          <source>The key of <ph id="ph1">`OrderItem`</ph> is immutable, an important consideration for classes that derive from <ph id="ph2">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph>.</source>
          <target state="translated">Der Schlüssel des <ph id="ph1">`OrderItem`</ph> unveränderlich ist, ist ein wichtiger Aspekt für abgeleitete Klassen <ph id="ph2">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.GetKeyForItem(`1)">
          <source>For a code example that uses mutable keys, see <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A&gt;</ph>.</source>
          <target state="translated">Ein Codebeispiel, die änderbare Schlüssel verwendet, finden Sie unter <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.KeyedCollection`2.InsertItem(System.Int32,`1)">
          <source>The zero-based index at which <bpt id="p1">&lt;c&gt;</bpt>item<ept id="p1">&lt;/c&gt;</ept> should be inserted.</source>
          <target state="translated">Der nullbasierte Index, an dem <bpt id="p1">&lt;c&gt;</bpt>item<ept id="p1">&lt;/c&gt;</ept> eingefügt werden soll.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.KeyedCollection`2.InsertItem(System.Int32,`1)">
          <source>The object to insert.</source>
          <target state="translated">Das einzufügende Objekt.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.KeyedCollection`2.InsertItem(System.Int32,`1)">
          <source>Inserts an element into the <ph id="ph1">&lt;see cref="T:System.Collections.ObjectModel.KeyedCollection`2" /&gt;</ph> at the specified index.</source>
          <target state="translated">Fügt am angegebenen Index ein Element in die <ph id="ph1">&lt;see cref="T:System.Collections.ObjectModel.KeyedCollection`2" /&gt;</ph> ein.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.InsertItem(System.Int32,`1)">
          <source>If <ph id="ph1">`index`</ph> is equal to <ph id="ph2">&lt;xref:System.Collections.ObjectModel.Collection%601.Count%2A&gt;</ph>, <ph id="ph3">`item`</ph> is added to the end of the <ph id="ph4">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph>.</source>
          <target state="translated">Wenn <ph id="ph1">`index`</ph> gleich <ph id="ph2">&lt;xref:System.Collections.ObjectModel.Collection%601.Count%2A&gt;</ph>, <ph id="ph3">`item`</ph> wird hinzugefügt, bis zum Ende der <ph id="ph4">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.InsertItem(System.Int32,`1)">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.ObjectModel.Collection%601.Count%2A&gt;</ph>.</source>
          <target state="translated">Diese Methode ist eine O (<ph id="ph1">`n`</ph>) Vorgang, wobei <ph id="ph2">`n`</ph> ist <ph id="ph3">&lt;xref:System.Collections.ObjectModel.Collection%601.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.InsertItem(System.Int32,`1)">
          <source><ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A&gt;</ph> is called by the <ph id="ph2">&lt;xref:System.Collections.ObjectModel.Collection%601.Add%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Collections.ObjectModel.Collection%601.Insert%2A&gt;</ph> methods.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A&gt;</ph> wird aufgerufen, indem Sie die <ph id="ph2">&lt;xref:System.Collections.ObjectModel.Collection%601.Add%2A&gt;</ph> und <ph id="ph3">&lt;xref:System.Collections.ObjectModel.Collection%601.Insert%2A&gt;</ph> Methoden.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.InsertItem(System.Int32,`1)">
          <source>Notes for Implementers</source>
          <target state="translated">Hinweise für Implementierer</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.InsertItem(System.Int32,`1)">
          <source>Override this method to provide customized behavior for the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601.Add%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Collections.ObjectModel.Collection%601.Insert%2A&gt;</ph> methods, inherited from the <ph id="ph3">&lt;xref:System.Collections.ObjectModel.Collection%601&gt;</ph> generic class.</source>
          <target state="translated">Überschreiben Sie diese Methode zum Bereitstellen von benutzerdefinierten Verhaltens für die <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601.Add%2A&gt;</ph> und <ph id="ph2">&lt;xref:System.Collections.ObjectModel.Collection%601.Insert%2A&gt;</ph> von geerbten Methoden der <ph id="ph3">&lt;xref:System.Collections.ObjectModel.Collection%601&gt;</ph> generische Klasse.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.InsertItem(System.Int32,`1)">
          <source>Call the base class implementation of this method to insert the item into the underlying collection and to update the lookup dictionary.</source>
          <target state="translated">Rufen Sie die basisklassenimplementierung dieser Methode das Element in der zugrunde liegenden Auflistung eingefügt und das Suchwörterbuch zu aktualisieren.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.InsertItem(System.Int32,`1)">
          <source>This section contains two code examples that demonstrate overriding the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A&gt;</ph> method to provide custom behavior for adding or inserting objects into the collection.</source>
          <target state="translated">Dieser Abschnitt enthält zwei Codebeispielen überschreiben die <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A&gt;</ph> Methode, um benutzerdefiniertes Verhalten bereitzustellen, zum Hinzufügen oder Einfügen von Objekten in der Auflistung.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.InsertItem(System.Int32,`1)">
          <source>The first example adds a custom notification event and the second provides support for a collection of objects with mutable keys.</source>
          <target state="translated">Im erste Beispiel wird ein benutzerdefiniertes Benachrichtigungsereignis hinzugefügt, und die zweite bietet Unterstützung für eine Auflistung von Objekten mit änderbaren Schlüsseln.</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.InsertItem(System.Int32,`1)">
          <source>Example 1</source>
          <target state="translated">Beispiel 1</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.InsertItem(System.Int32,`1)">
          <source>The following code example shows how to override the protected <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A&gt;</ph>, and <ph id="ph4">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A&gt;</ph> methods, to provide custom behavior for the <ph id="ph5">&lt;xref:System.Collections.ObjectModel.Collection%601.Add%2A&gt;</ph>, <ph id="ph6">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.Remove%2A&gt;</ph>, and <ph id="ph7">&lt;xref:System.Collections.ObjectModel.Collection%601.Clear%2A&gt;</ph> methods, and for setting the default <ph id="ph8">&lt;xref:System.Collections.ObjectModel.Collection%601.Item%2A&gt;</ph> property (the indexer in C#).</source>
          <target state="translated">Im folgenden Codebeispiel wird veranschaulicht, wie die geschützte überschreiben <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A&gt;</ph>, und <ph id="ph4">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A&gt;</ph> Methoden, die zur Bereitstellung eines benutzerdefinierten Verhaltens für die <ph id="ph5">&lt;xref:System.Collections.ObjectModel.Collection%601.Add%2A&gt;</ph>, <ph id="ph6">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.Remove%2A&gt;</ph>, und <ph id="ph7">&lt;xref:System.Collections.ObjectModel.Collection%601.Clear%2A&gt;</ph> Methoden, und für Festlegen des standardmäßigen <ph id="ph8">&lt;xref:System.Collections.ObjectModel.Collection%601.Item%2A&gt;</ph> -Eigenschaft (Indexer in c#).</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.InsertItem(System.Int32,`1)">
          <source>The custom behavior provided in this example is a notification event named <ph id="ph1">`Changed`</ph>, which is raised at the end of each of the overridden methods.</source>
          <target state="translated">In diesem Beispiel bereitgestellte benutzerdefinierte Verhalten wird ein Benachrichtigungsereignis mit dem Namen <ph id="ph1">`Changed`</ph>, das am Ende der überschriebenen Methoden ausgelöst wird.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.InsertItem(System.Int32,`1)">
          <source>The code example creates the <ph id="ph1">`SimpleOrder`</ph> class, which derives from <ph id="ph2">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph> and represents a simple order form.</source>
          <target state="translated">Das Codebeispiel erstellt die <ph id="ph1">`SimpleOrder`</ph> -Klasse, abgeleitet von <ph id="ph2">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph> und ein einfaches Bestellformular darstellt.</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.InsertItem(System.Int32,`1)">
          <source>The order form contains <ph id="ph1">`OrderItem`</ph> objects representing items ordered.</source>
          <target state="translated">Enthält die Bestellformular <ph id="ph1">`OrderItem`</ph> Objekte, die bestellte Artikel darstellen.</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.InsertItem(System.Int32,`1)">
          <source>The code example also creates a <ph id="ph1">`SimpleOrderChangedEventArgs`</ph> class to contain the event information, and an enumeration to identify the type of change.</source>
          <target state="translated">Das Codebeispiel erstellt außerdem eine <ph id="ph1">`SimpleOrderChangedEventArgs`</ph> Klasse, um die Ereignisinformationen und eine Enumeration zum Identifizieren der Art der Änderung enthalten.</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.InsertItem(System.Int32,`1)">
          <source>The code example demonstrates the custom behavior by calling the properties and methods of the derived class, in the <ph id="ph1">`Main`</ph> method of the <ph id="ph2">`Demo`</ph> class.</source>
          <target state="translated">Im Codebeispiel wird veranschaulicht, das benutzerdefinierte Verhalten durch Aufrufen von Eigenschaften und Methoden der abgeleiteten Klasse in der <ph id="ph1">`Main`</ph> Methode der <ph id="ph2">`Demo`</ph> Klasse.</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.InsertItem(System.Int32,`1)">
          <source>This code example uses objects with immutable keys.</source>
          <target state="translated">Dieses Codebeispiel verwendet die Objekte mit unveränderlichen Schlüsseln.</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.InsertItem(System.Int32,`1)">
          <source>For a code example that uses mutable keys, see <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A&gt;</ph>.</source>
          <target state="translated">Ein Codebeispiel, die änderbare Schlüssel verwendet, finden Sie unter <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.InsertItem(System.Int32,`1)">
          <source>Example 2</source>
          <target state="translated">Beispiel 2</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.InsertItem(System.Int32,`1)">
          <source>The following code example shows how to override the protected <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A&gt;</ph> method to support mutable keys, and how to override the protected <ph id="ph2">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A&gt;</ph>, and <ph id="ph5">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A&gt;</ph> methods to maintain the integrity of the keys and the collection.</source>
          <target state="translated">Im folgenden Codebeispiel wird veranschaulicht, wie die geschützte überschreiben <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A&gt;</ph> -Methode zur Unterstützung der änderbare Schlüssel und den geschützten Außerkraftsetzen <ph id="ph2">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A&gt;</ph>, und <ph id="ph5">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A&gt;</ph> Methoden, um die Integrität der Schlüssel zu verwalten und die Auflistung.</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.InsertItem(System.Int32,`1)">
          <source>The code example creates the <ph id="ph1">`MutableKeys`</ph> collection, which derives from <ph id="ph2">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph>, and the <ph id="ph3">`MutableKey`</ph> class.</source>
          <target state="translated">Das Codebeispiel erstellt die <ph id="ph1">`MutableKeys`</ph> -Auflistung, die abgeleitet <ph id="ph2">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph>, und die <ph id="ph3">`MutableKey`</ph> Klasse.</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.InsertItem(System.Int32,`1)">
          <source>The <ph id="ph1">`MutableKey`</ph> class has a settable <ph id="ph2">`Key`</ph> property.</source>
          <target state="translated">Die <ph id="ph1">`MutableKey`</ph> -Klasse verfügt über eine festlegbare <ph id="ph2">`Key`</ph> Eigenschaft.</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.InsertItem(System.Int32,`1)">
          <source>When a new key is assigned to the property, the property setter calls the <ph id="ph1">`internal`</ph> (<ph id="ph2">`Friend`</ph> in Visual Basic) <ph id="ph3">`ChangeKey`</ph> method of the collection to test whether the new key would conflict with an existing key.</source>
          <target state="translated">Wenn ein neuer Schlüssel der Eigenschaft zugewiesen wird, ruft der Setter für eine Eigenschaft der <ph id="ph1">`internal`</ph> (<ph id="ph2">`Friend`</ph> in Visual Basic) <ph id="ph3">`ChangeKey`</ph> -Methode der Auflistung zu prüfen, ob der neue Schlüssel durch einen vorhandenen Schlüssel in Konflikt stehen würde.</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.InsertItem(System.Int32,`1)">
          <source>If so, an exception is thrown and the property value is not changed.</source>
          <target state="translated">Wenn dies der Fall ist, wird eine Ausnahme ausgelöst, und der Eigenschaftswert wird nicht geändert.</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.InsertItem(System.Int32,`1)">
          <source>In order to maintain the connection between a <ph id="ph1">`MutableKey`</ph> object and the <ph id="ph2">`MutableKeys`</ph> collection and to prevent an object from being inserted into two collections, the <ph id="ph3">`MutableKey`</ph> class has an <ph id="ph4">`internal`</ph> (<ph id="ph5">`Friend`</ph> in Visual Basic) <ph id="ph6">`Collection`</ph> field.</source>
          <target state="translated">Um die Verbindung zwischen Verwalten einer <ph id="ph1">`MutableKey`</ph> Objekt und die <ph id="ph2">`MutableKeys`</ph> Auflistung und zu verhindern, dass ein Objekt in zwei Auflistungen eingefügt wird die <ph id="ph3">`MutableKey`</ph> -Klasse verfügt über eine <ph id="ph4">`internal`</ph> (<ph id="ph5">`Friend`</ph> in Visual Basic) <ph id="ph6">`Collection`</ph>Feld.</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.InsertItem(System.Int32,`1)">
          <source>This field is maintained by the protected methods that provide custom behavior for adding and removing items from the collection, such as the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A&gt;</ph> method.</source>
          <target state="translated">Dieses Feld wird von den geschützten Methoden, die benutzerdefiniertes Verhalten zu bieten, zum Hinzufügen und Entfernen von Elementen aus der Auflistung, z. B. verwaltet die <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.InsertItem(System.Int32,`1)">
          <source>The field is set when the item is added to a collection and cleared when the item is removed.</source>
          <target state="translated">Das Feld wird festgelegt, wenn das Element der Auflistung hinzugefügt und gelöscht, wenn das Element entfernt wird.</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.KeyedCollection`2.InsertItem(System.Int32,`1)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is less than 0.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> ist kleiner als 0.</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.KeyedCollection`2.InsertItem(System.Int32,`1)">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.KeyedCollection`2.InsertItem(System.Int32,`1)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is greater than <ph id="ph2">&lt;see cref="P:System.Collections.ObjectModel.Collection`1.Count" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> ist größer als <ph id="ph2">&lt;see cref="P:System.Collections.ObjectModel.Collection`1.Count" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" uid="P:System.Collections.ObjectModel.KeyedCollection`2.Item(`0)">
          <source>The key of the element to get.</source>
          <target state="translated">Der Schlüssel des abzurufenden Elements.</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" uid="P:System.Collections.ObjectModel.KeyedCollection`2.Item(`0)">
          <source>Gets the element with the specified key.</source>
          <target state="translated">Ruft das Element mit dem angegebenen Schlüssel ab.</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ObjectModel.KeyedCollection`2.Item(`0)">
          <source>The element with the specified key.</source>
          <target state="translated">Das Element mit dem angegebenen Schlüssel.</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ObjectModel.KeyedCollection`2.Item(`0)">
          <source>If an element with the specified key is not found, an exception is thrown.</source>
          <target state="translated">Wenn kein Element mit dem angegebenen Schlüssel gefunden wird, wird eine Ausnahme ausgelöst.</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ObjectModel.KeyedCollection`2.Item(`0)">
          <source>This property provides the ability to access a specific element in the collection by using the following syntax: <ph id="ph1">`myCollection[key]`</ph> (<ph id="ph2">`myCollection(key)`</ph> in Visual Basic).</source>
          <target state="translated">Diese Eigenschaft ermöglicht den Zugriff auf ein bestimmtes Element in der Auflistung mithilfe folgenden Syntax: <ph id="ph1">`myCollection[key]`</ph> (<ph id="ph2">`myCollection(key)`</ph> in Visual Basic).</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ObjectModel.KeyedCollection`2.Item(`0)">
          <source>This property is distinct from the inherited <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601.Item%2A?displayProperty=nameWithType&gt;</ph> property, which gets and sets elements by numeric index.</source>
          <target state="translated">Diese Eigenschaft unterscheidet sich von der geerbten <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601.Item%2A?displayProperty=nameWithType&gt;</ph> -Eigenschaft, die ermittelt und definiert Elemente über einen numerischen Index.</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ObjectModel.KeyedCollection`2.Item(`0)">
          <source>However, if <ph id="ph1">`TKey`</ph> is of type <ph id="ph2">&lt;xref:System.Int32&gt;</ph>, this property masks the inherited property.</source>
          <target state="translated">Jedoch wenn <ph id="ph1">`TKey`</ph> ist vom Typ <ph id="ph2">&lt;xref:System.Int32&gt;</ph>, diese Eigenschaft maskiert die geerbte Eigenschaft.</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ObjectModel.KeyedCollection`2.Item(`0)">
          <source>In that case, you can access the inherited property by casting the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph> to its base type.</source>
          <target state="translated">In diesem Fall können Sie die geerbte Eigenschaft zugreifen, durch Umwandlung der <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph> mit seinem Basistyp.</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ObjectModel.KeyedCollection`2.Item(`0)">
          <source>For example, <ph id="ph1">`KeyedCollection&lt;int, MyType&gt;`</ph> (<ph id="ph2">`KeyedCollection(Of Integer, MyType)`</ph> in Visual Basic, <ph id="ph3">`KeyedCollection&lt;int, MyType^&gt;`</ph> in C++) can be cast to <ph id="ph4">`Collection&lt;MyType&gt;`</ph> (<ph id="ph5">`Collection(Of MyType)`</ph> in Visual Basic, <ph id="ph6">`Collection&lt;MyType^&gt;`</ph> in C++).</source>
          <target state="translated">Beispielsweise <ph id="ph1">`KeyedCollection&lt;int, MyType&gt;`</ph> (<ph id="ph2">`KeyedCollection(Of Integer, MyType)`</ph> in Visual Basic <ph id="ph3">`KeyedCollection&lt;int, MyType^&gt;`</ph> in C++) umgewandelt werden kann, um <ph id="ph4">`Collection&lt;MyType&gt;`</ph> (<ph id="ph5">`Collection(Of MyType)`</ph> in Visual Basic <ph id="ph6">`Collection&lt;MyType^&gt;`</ph> in C++).</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ObjectModel.KeyedCollection`2.Item(`0)">
          <source>If the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph> has a lookup dictionary, <ph id="ph2">`key`</ph> is used to retrieve the element from the dictionary.</source>
          <target state="translated">Wenn die <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph> hat ein Suchwörterbuch <ph id="ph2">`key`</ph> wird verwendet, um das Element aus dem Wörterbuch abzurufen.</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ObjectModel.KeyedCollection`2.Item(`0)">
          <source>If there is no lookup dictionary, the key of each element is extracted using the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.GetKeyForItem%2A&gt;</ph> method and compared with the specified key.</source>
          <target state="translated">Wenn kein Suchwörterbuch vorhanden ist, der Schlüssel für jedes Element extrahiert mithilfe der <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.GetKeyForItem%2A&gt;</ph> Methode und mit dem angegebenen Schlüssel verglichen.</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ObjectModel.KeyedCollection`2.Item(`0)">
          <source>The C# language uses the  keyword to define the indexers instead of implementing the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.Item%2A&gt;</ph> property.</source>
          <target state="translated">Die Programmiersprache c# verwendet das Schlüsselwort der Indexer definieren die <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.Item%2A&gt;</ph> Eigenschaft.</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ObjectModel.KeyedCollection`2.Item(`0)">
          <source>Visual Basic implements <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.Item%2A&gt;</ph> as a default property, which provides the same indexing functionality.</source>
          <target state="translated">Visual Basic implementiert <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.Item%2A&gt;</ph> als Standardeigenschaft und stellt auf diese Weise dieselbe Indizierungsfunktionalität bereit.</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ObjectModel.KeyedCollection`2.Item(`0)">
          <source>Retrieving the value of this property is an O(1) operation if the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph> has a lookup dictionary; otherwise it is an O(<ph id="ph2">`n`</ph>) operation, where <ph id="ph3">`n`</ph> is <ph id="ph4">&lt;xref:System.Collections.ObjectModel.Collection%601.Count%2A&gt;</ph>.</source>
          <target state="translated">Das Abrufen des Werts dieser Eigenschaft ist ein o(1)-Vorgang, wenn die <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph> hat ein Suchwörterbuch; andernfalls handelt es sich um eine O (<ph id="ph2">`n`</ph>)-Vorgang, in dem <ph id="ph3">`n`</ph> ist <ph id="ph4">&lt;xref:System.Collections.ObjectModel.Collection%601.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ObjectModel.KeyedCollection`2.Item(`0)">
          <source>This code example shows the minimum code necessary to derive a collection class from <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph>: overriding the <ph id="ph2">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.GetKeyForItem%2A&gt;</ph> method and providing a public constructor that delegates to a base class constructor.</source>
          <target state="translated">Dieses Codebeispiel zeigt die minimalen Code erforderlich, leiten Sie eine Auflistungsklasse von <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph>: Überschreiben der <ph id="ph2">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.GetKeyForItem%2A&gt;</ph> -Methode und ein öffentlicher Konstruktor bereitgestellt ist, die an einen Basisklassenkonstruktor delegiert.</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ObjectModel.KeyedCollection`2.Item(`0)">
          <source>The code example also demonstrates many of the properties and methods inherited from <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph> and <ph id="ph2">&lt;xref:System.Collections.ObjectModel.Collection%601&gt;</ph> classes.</source>
          <target state="translated">Das Codebeispiel zeigt außerdem viele Eigenschaften und Methoden von geerbt <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph> und <ph id="ph2">&lt;xref:System.Collections.ObjectModel.Collection%601&gt;</ph> Klassen.</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ObjectModel.KeyedCollection`2.Item(`0)">
          <source>The code example calls both the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.Item%2A?displayProperty=nameWithType&gt;</ph> property, which is read-only and retrieves by key, and the <ph id="ph2">&lt;xref:System.Collections.ObjectModel.Collection%601.Item%2A?displayProperty=nameWithType&gt;</ph> property, which is settable and retrieves by index.</source>
          <target state="translated">Das Codebeispiel ruft sowohl die <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.Item%2A?displayProperty=nameWithType&gt;</ph> Eigenschaft, die schreibgeschützt ist, und ruft nach Schlüssel ab, und die <ph id="ph2">&lt;xref:System.Collections.ObjectModel.Collection%601.Item%2A?displayProperty=nameWithType&gt;</ph> Eigenschaft, die festgelegt werden kann, und ruft nach Index ab.</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ObjectModel.KeyedCollection`2.Item(`0)">
          <source>It shows how to access the latter property when the objects in the derived collection have integer keys, indistinguishable from the integers used for indexed retrieval.</source>
          <target state="translated">Es wird gezeigt, wie auf letztere Eigenschaft zugreifen, wenn die Objekte in der abgeleiteten Auflistung ganzzahligen Schlüssel, die nicht von der ganzen Zahlen, die für den indizierten Abruf verwendet haben.</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ObjectModel.KeyedCollection`2.Item(`0)">
          <source>The <ph id="ph1">`SimpleOrder`</ph> class is a very simple requisition list that contains <ph id="ph2">`OrderItem`</ph> objects, each of which represents a line item in the order.</source>
          <target state="translated">Die <ph id="ph1">`SimpleOrder`</ph> Klasse ist eine sehr einfache Bestellliste, enthält <ph id="ph2">`OrderItem`</ph> Objekte, von denen jedes einen Eintrag in der Reihenfolge darstellt.</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ObjectModel.KeyedCollection`2.Item(`0)">
          <source>The key of <ph id="ph1">`OrderItem`</ph> is immutable, an important consideration for classes that derive from <ph id="ph2">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph>.</source>
          <target state="translated">Der Schlüssel des <ph id="ph1">`OrderItem`</ph> unveränderlich ist, ist ein wichtiger Aspekt für abgeleitete Klassen <ph id="ph2">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ObjectModel.KeyedCollection`2.Item(`0)">
          <source>For a code example that uses mutable keys, see <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A&gt;</ph>.</source>
          <target state="translated">Ein Codebeispiel, die änderbare Schlüssel verwendet, finden Sie unter <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" uid="P:System.Collections.ObjectModel.KeyedCollection`2.Item(`0)">
          <source><ph id="ph1">&lt;paramref name="key" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="key" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" uid="P:System.Collections.ObjectModel.KeyedCollection`2.Item(`0)">
          <source>An element with the specified key does not exist in the collection.</source>
          <target state="translated">In der Auflistung ist kein Element mit dem angegebenen Schlüssel vorhanden.</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.KeyedCollection`2.Remove(`0)">
          <source>The key of the element to remove.</source>
          <target state="translated">Der Schlüssel des zu entfernenden Elements.</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.KeyedCollection`2.Remove(`0)">
          <source>Removes the element with the specified key from the <ph id="ph1">&lt;see cref="T:System.Collections.ObjectModel.KeyedCollection`2" /&gt;</ph>.</source>
          <target state="translated">Entfernt das Element mit dem angegebenen Schlüssel aus dem <ph id="ph1">&lt;see cref="T:System.Collections.ObjectModel.KeyedCollection`2" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.KeyedCollection`2.Remove(`0)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the element is successfully removed; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, wenn das Element erfolgreich entfernt wurde, andernfalls <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.KeyedCollection`2.Remove(`0)">
          <source>This method also returns <ph id="ph1">&lt;see langword="false" /&gt;</ph> if <ph id="ph2">&lt;paramref name="key" /&gt;</ph> is not found in the <ph id="ph3">&lt;see cref="T:System.Collections.ObjectModel.KeyedCollection`2" /&gt;</ph>.</source>
          <target state="translated">Diese Methode gibt auch dann <ph id="ph1">&lt;see langword="false" /&gt;</ph> zurück, wenn <ph id="ph2">&lt;paramref name="key" /&gt;</ph> nicht in der <ph id="ph3">&lt;see cref="T:System.Collections.ObjectModel.KeyedCollection`2" /&gt;</ph> gefunden wurde.</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.Remove(`0)">
          <source>The key of the element is also removed from the lookup dictionary.</source>
          <target state="translated">Der Schlüssel des Elements wird aus dem Suchwörterbuch ebenfalls entfernt.</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.Remove(`0)">
          <source>If the number of elements has exceeded the dictionary creation threshold and the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph> is using a lookup dictionary, it will continue to use a lookup dictionary even though the number of elements is again under the threshold.</source>
          <target state="translated">Wenn die Anzahl der Elemente den Wörterbuch Erstellung Schwellenwert überschritten hat und die <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph> wird über ein Suchwörterbuch, ist sie weiterhin ein Suchwörterbuch verwenden, auch wenn die Anzahl der Elemente wieder unter dem Schwellenwert ist.</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.Remove(`0)">
          <source>To customize the behavior of this method, override the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A&gt;</ph> method.</source>
          <target state="translated">Um das Verhalten dieser Methode anzupassen, überschreiben die <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.Remove(`0)">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.ObjectModel.Collection%601.Count%2A&gt;</ph>.</source>
          <target state="translated">Diese Methode ist eine O (<ph id="ph1">`n`</ph>) Vorgang, wobei <ph id="ph2">`n`</ph> ist <ph id="ph3">&lt;xref:System.Collections.ObjectModel.Collection%601.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.Remove(`0)">
          <source>This code example shows the minimum code necessary to derive a collection class from <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph>: overriding the <ph id="ph2">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.GetKeyForItem%2A&gt;</ph> method and providing a public constructor that delegates to a base class constructor.</source>
          <target state="translated">Dieses Codebeispiel zeigt die minimalen Code erforderlich, leiten Sie eine Auflistungsklasse von <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph>: Überschreiben der <ph id="ph2">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.GetKeyForItem%2A&gt;</ph> -Methode und ein öffentlicher Konstruktor bereitgestellt ist, die an einen Basisklassenkonstruktor delegiert.</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.Remove(`0)">
          <source>The code example also demonstrates many of the properties and methods inherited from <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph> and <ph id="ph2">&lt;xref:System.Collections.ObjectModel.Collection%601&gt;</ph> classes.</source>
          <target state="translated">Das Codebeispiel zeigt außerdem viele Eigenschaften und Methoden von geerbt <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph> und <ph id="ph2">&lt;xref:System.Collections.ObjectModel.Collection%601&gt;</ph> Klassen.</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.Remove(`0)">
          <source>The example demonstrates <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.Remove%2A&gt;</ph> method inherited from <ph id="ph2">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph>, which removes the item with a specified key, and also the <ph id="ph3">&lt;xref:System.Collections.ObjectModel.Collection%601.Remove%2A&gt;</ph> and <ph id="ph4">&lt;xref:System.Collections.ObjectModel.Collection%601.RemoveAt%2A&gt;</ph> methods inherited from <ph id="ph5">&lt;xref:System.Collections.ObjectModel.Collection%601&gt;</ph>, which remove by object and by index respectively.</source>
          <target state="translated">Im Beispiel wird veranschaulicht, <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.Remove%2A&gt;</ph> Methode geerbt von <ph id="ph2">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph>, entfernt das Element mit dem angegebenen Schlüssel und auch die <ph id="ph3">&lt;xref:System.Collections.ObjectModel.Collection%601.Remove%2A&gt;</ph> und <ph id="ph4">&lt;xref:System.Collections.ObjectModel.Collection%601.RemoveAt%2A&gt;</ph> von geerbten Methoden <ph id="ph5">&lt;xref:System.Collections.ObjectModel.Collection%601&gt;</ph>, die vom Objekt als auch über Indizes bzw. entfernen.</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.Remove(`0)">
          <source>The <ph id="ph1">`SimpleOrder`</ph> class is a very simple requisition list that contains <ph id="ph2">`OrderItem`</ph> objects, each of which represents a line item in the order.</source>
          <target state="translated">Die <ph id="ph1">`SimpleOrder`</ph> Klasse ist eine sehr einfache Bestellliste, enthält <ph id="ph2">`OrderItem`</ph> Objekte, von denen jedes einen Eintrag in der Reihenfolge darstellt.</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.Remove(`0)">
          <source>The key of <ph id="ph1">`OrderItem`</ph> is immutable, an important consideration for classes that derive from <ph id="ph2">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph>.</source>
          <target state="translated">Der Schlüssel des <ph id="ph1">`OrderItem`</ph> unveränderlich ist, ist ein wichtiger Aspekt für abgeleitete Klassen <ph id="ph2">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.Remove(`0)">
          <source>For a code example that uses mutable keys, see <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A&gt;</ph>.</source>
          <target state="translated">Ein Codebeispiel, die änderbare Schlüssel verwendet, finden Sie unter <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.KeyedCollection`2.Remove(`0)">
          <source><ph id="ph1">&lt;paramref name="key" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="key" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.KeyedCollection`2.RemoveItem(System.Int32)">
          <source>The index of the element to remove.</source>
          <target state="translated">Der Index des zu entfernenden Elements.</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.KeyedCollection`2.RemoveItem(System.Int32)">
          <source>Removes the element at the specified index of the <ph id="ph1">&lt;see cref="T:System.Collections.ObjectModel.KeyedCollection`2" /&gt;</ph>.</source>
          <target state="translated">Entfernt das Element am angegebenen Index aus der <ph id="ph1">&lt;see cref="T:System.Collections.ObjectModel.KeyedCollection`2" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.RemoveItem(System.Int32)">
          <source>The key of the element is also removed from the lookup dictionary.</source>
          <target state="translated">Der Schlüssel des Elements wird aus dem Suchwörterbuch ebenfalls entfernt.</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.RemoveItem(System.Int32)">
          <source>If the number of elements has exceeded the dictionary creation threshold and the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph> is using a lookup dictionary, it will continue to use a lookup dictionary even though the number of elements is again under the threshold.</source>
          <target state="translated">Wenn die Anzahl der Elemente den Wörterbuch Erstellung Schwellenwert überschritten hat und die <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph> wird über ein Suchwörterbuch, ist sie weiterhin ein Suchwörterbuch verwenden, auch wenn die Anzahl der Elemente wieder unter dem Schwellenwert ist.</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.RemoveItem(System.Int32)">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.ObjectModel.Collection%601.Count%2A&gt;</ph>.</source>
          <target state="translated">Diese Methode ist eine O (<ph id="ph1">`n`</ph>) Vorgang, wobei <ph id="ph2">`n`</ph> ist <ph id="ph3">&lt;xref:System.Collections.ObjectModel.Collection%601.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.RemoveItem(System.Int32)">
          <source>Notes for Implementers</source>
          <target state="translated">Hinweise für Implementierer</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.RemoveItem(System.Int32)">
          <source>Override this method to provide customized behavior for the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601.Remove%28%600%29&gt;</ph> and <ph id="ph2">&lt;xref:System.Collections.ObjectModel.Collection%601.RemoveAt%28System.Int32%29&gt;</ph> methods, inherited from the <ph id="ph3">&lt;xref:System.Collections.ObjectModel.Collection%601&gt;</ph> generic class, and the <ph id="ph4">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.Remove%28%600%29&gt;</ph> method.</source>
          <target state="translated">Überschreiben Sie diese Methode zum Bereitstellen von benutzerdefinierten Verhaltens für die <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601.Remove%28%600%29&gt;</ph> und <ph id="ph2">&lt;xref:System.Collections.ObjectModel.Collection%601.RemoveAt%28System.Int32%29&gt;</ph> von geerbten Methoden der <ph id="ph3">&lt;xref:System.Collections.ObjectModel.Collection%601&gt;</ph> generische Klasse und die <ph id="ph4">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.Remove%28%600%29&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.RemoveItem(System.Int32)">
          <source>Call the base class implementation of this method to remove the item from the underlying collection and to update the lookup dictionary.</source>
          <target state="translated">Rufen Sie die basisklassenimplementierung dieser Methode das Element aus der zugrunde liegenden Auflistung entfernt und das Suchwörterbuch zu aktualisieren.</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.RemoveItem(System.Int32)">
          <source>This section contains two code examples that demonstrate overriding the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A&gt;</ph> method to provide custom behavior for removing objects from the collection.</source>
          <target state="translated">Dieser Abschnitt enthält zwei Codebeispielen überschreiben die <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A&gt;</ph> Methode, um benutzerdefiniertes Verhalten bereitzustellen, für die Objekte aus der Auflistung zu entfernen.</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.RemoveItem(System.Int32)">
          <source>The first example adds a custom notification event and the second provides support for a collection of objects with mutable keys.</source>
          <target state="translated">Im erste Beispiel wird ein benutzerdefiniertes Benachrichtigungsereignis hinzugefügt, und die zweite bietet Unterstützung für eine Auflistung von Objekten mit änderbaren Schlüsseln.</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.RemoveItem(System.Int32)">
          <source>Example 1</source>
          <target state="translated">Beispiel 1</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.RemoveItem(System.Int32)">
          <source>The following code example shows how to override the protected <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A&gt;</ph>, and <ph id="ph4">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A&gt;</ph> methods, to provide custom behavior for the <ph id="ph5">&lt;xref:System.Collections.ObjectModel.Collection%601.Add%2A&gt;</ph>, <ph id="ph6">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.Remove%2A&gt;</ph>, and <ph id="ph7">&lt;xref:System.Collections.ObjectModel.Collection%601.Clear%2A&gt;</ph> methods, and for setting the default <ph id="ph8">&lt;xref:System.Collections.ObjectModel.Collection%601.Item%2A&gt;</ph> property (the indexer in C#).</source>
          <target state="translated">Im folgenden Codebeispiel wird veranschaulicht, wie die geschützte überschreiben <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A&gt;</ph>, und <ph id="ph4">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A&gt;</ph> Methoden, die zur Bereitstellung eines benutzerdefinierten Verhaltens für die <ph id="ph5">&lt;xref:System.Collections.ObjectModel.Collection%601.Add%2A&gt;</ph>, <ph id="ph6">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.Remove%2A&gt;</ph>, und <ph id="ph7">&lt;xref:System.Collections.ObjectModel.Collection%601.Clear%2A&gt;</ph> Methoden, und für Festlegen des standardmäßigen <ph id="ph8">&lt;xref:System.Collections.ObjectModel.Collection%601.Item%2A&gt;</ph> -Eigenschaft (Indexer in c#).</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.RemoveItem(System.Int32)">
          <source>The custom behavior provided in this example is a notification event named <ph id="ph1">`Changed`</ph>, which is raised at the end of each of the overridden methods.</source>
          <target state="translated">In diesem Beispiel bereitgestellte benutzerdefinierte Verhalten wird ein Benachrichtigungsereignis mit dem Namen <ph id="ph1">`Changed`</ph>, das am Ende der überschriebenen Methoden ausgelöst wird.</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.RemoveItem(System.Int32)">
          <source>The code example creates the <ph id="ph1">`SimpleOrder`</ph> class, which derives from <ph id="ph2">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph> and represents a simple order form.</source>
          <target state="translated">Das Codebeispiel erstellt die <ph id="ph1">`SimpleOrder`</ph> -Klasse, abgeleitet von <ph id="ph2">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph> und ein einfaches Bestellformular darstellt.</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.RemoveItem(System.Int32)">
          <source>The order form contains <ph id="ph1">`OrderItem`</ph> objects representing items ordered.</source>
          <target state="translated">Enthält die Bestellformular <ph id="ph1">`OrderItem`</ph> Objekte, die bestellte Artikel darstellen.</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.RemoveItem(System.Int32)">
          <source>The code example also creates a <ph id="ph1">`SimpleOrderChangedEventArgs`</ph> class to contain the event information, and an enumeration to identify the type of change.</source>
          <target state="translated">Das Codebeispiel erstellt außerdem eine <ph id="ph1">`SimpleOrderChangedEventArgs`</ph> Klasse, um die Ereignisinformationen und eine Enumeration zum Identifizieren der Art der Änderung enthalten.</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.RemoveItem(System.Int32)">
          <source>The code example demonstrates the custom behavior by calling the properties and methods of the derived class, in the <ph id="ph1">`Main`</ph> method of the <ph id="ph2">`Demo`</ph> class.</source>
          <target state="translated">Im Codebeispiel wird veranschaulicht, das benutzerdefinierte Verhalten durch Aufrufen von Eigenschaften und Methoden der abgeleiteten Klasse in der <ph id="ph1">`Main`</ph> Methode der <ph id="ph2">`Demo`</ph> Klasse.</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.RemoveItem(System.Int32)">
          <source>This code example uses objects with immutable keys.</source>
          <target state="translated">Dieses Codebeispiel verwendet die Objekte mit unveränderlichen Schlüsseln.</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.RemoveItem(System.Int32)">
          <source>For a code example that uses mutable keys, see <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A&gt;</ph>.</source>
          <target state="translated">Ein Codebeispiel, die änderbare Schlüssel verwendet, finden Sie unter <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.RemoveItem(System.Int32)">
          <source>Example 2</source>
          <target state="translated">Beispiel 2</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.RemoveItem(System.Int32)">
          <source>The following code example shows how to override the protected <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A&gt;</ph> method to support mutable keys, and how to override the protected <ph id="ph2">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A&gt;</ph>, and <ph id="ph5">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A&gt;</ph> methods to maintain the integrity of the keys and the collection.</source>
          <target state="translated">Im folgenden Codebeispiel wird veranschaulicht, wie die geschützte überschreiben <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A&gt;</ph> -Methode zur Unterstützung der änderbare Schlüssel und den geschützten Außerkraftsetzen <ph id="ph2">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A&gt;</ph>, und <ph id="ph5">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A&gt;</ph> Methoden, um die Integrität der Schlüssel zu verwalten und die Auflistung.</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.RemoveItem(System.Int32)">
          <source>The code example creates the <ph id="ph1">`MutableKeys`</ph> collection, which derives from <ph id="ph2">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph>, and the <ph id="ph3">`MutableKey`</ph> class.</source>
          <target state="translated">Das Codebeispiel erstellt die <ph id="ph1">`MutableKeys`</ph> -Auflistung, die abgeleitet <ph id="ph2">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph>, und die <ph id="ph3">`MutableKey`</ph> Klasse.</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.RemoveItem(System.Int32)">
          <source>The <ph id="ph1">`MutableKey`</ph> class has a settable <ph id="ph2">`Key`</ph> property.</source>
          <target state="translated">Die <ph id="ph1">`MutableKey`</ph> -Klasse verfügt über eine festlegbare <ph id="ph2">`Key`</ph> Eigenschaft.</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.RemoveItem(System.Int32)">
          <source>When a new key is assigned to the property, the property setter calls the <ph id="ph1">`internal`</ph> (<ph id="ph2">`Friend`</ph> in Visual Basic) <ph id="ph3">`ChangeKey`</ph> method of the collection to test whether the new key would conflict with an existing key.</source>
          <target state="translated">Wenn ein neuer Schlüssel der Eigenschaft zugewiesen wird, ruft der Setter für eine Eigenschaft der <ph id="ph1">`internal`</ph> (<ph id="ph2">`Friend`</ph> in Visual Basic) <ph id="ph3">`ChangeKey`</ph> -Methode der Auflistung zu prüfen, ob der neue Schlüssel durch einen vorhandenen Schlüssel in Konflikt stehen würde.</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.RemoveItem(System.Int32)">
          <source>If so, an exception is thrown and the property value is not changed.</source>
          <target state="translated">Wenn dies der Fall ist, wird eine Ausnahme ausgelöst, und der Eigenschaftswert wird nicht geändert.</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.RemoveItem(System.Int32)">
          <source>In order to maintain the connection between a <ph id="ph1">`MutableKey`</ph> object and the <ph id="ph2">`MutableKeys`</ph> collection and to prevent an object from being inserted into two collections, the <ph id="ph3">`MutableKey`</ph> class has an <ph id="ph4">`internal`</ph> (<ph id="ph5">`Friend`</ph> in Visual Basic) <ph id="ph6">`Collection`</ph> field.</source>
          <target state="translated">Um die Verbindung zwischen Verwalten einer <ph id="ph1">`MutableKey`</ph> Objekt und die <ph id="ph2">`MutableKeys`</ph> Auflistung und zu verhindern, dass ein Objekt in zwei Auflistungen eingefügt wird die <ph id="ph3">`MutableKey`</ph> -Klasse verfügt über eine <ph id="ph4">`internal`</ph> (<ph id="ph5">`Friend`</ph> in Visual Basic) <ph id="ph6">`Collection`</ph>Feld.</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.RemoveItem(System.Int32)">
          <source>This field is maintained by the protected methods that provide custom behavior for adding and removing items from the collection, such as the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A&gt;</ph> method.</source>
          <target state="translated">Dieses Feld wird von den geschützten Methoden, die benutzerdefiniertes Verhalten zu bieten, zum Hinzufügen und Entfernen von Elementen aus der Auflistung, z. B. verwaltet die <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.RemoveItem(System.Int32)">
          <source>The field is set when the item is added to a collection and cleared when the item is removed.</source>
          <target state="translated">Das Feld wird festgelegt, wenn das Element der Auflistung hinzugefügt und gelöscht, wenn das Element entfernt wird.</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.KeyedCollection`2.SetItem(System.Int32,`1)">
          <source>The zero-based index of the item to be replaced.</source>
          <target state="translated">Der nullbasierte Index des zu ersetzenden Elements.</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.KeyedCollection`2.SetItem(System.Int32,`1)">
          <source>The new item.</source>
          <target state="translated">Das neue Element.</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.KeyedCollection`2.SetItem(System.Int32,`1)">
          <source>Replaces the item at the specified index with the specified item.</source>
          <target state="translated">Ersetzt das Element im angegebenen Index durch ein angegebenes Element.</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.SetItem(System.Int32,`1)">
          <source>The lookup dictionary is updated accordingly.</source>
          <target state="translated">Das Suchwörterbuch wird entsprechend aktualisiert.</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.SetItem(System.Int32,`1)">
          <source>That is, the key of the item that is being replaced is removed from the lookup dictionary, and the key of the new item is added.</source>
          <target state="translated">D. h. der Schlüssel des Elements, das ersetzt wird wird aus dem Suchwörterbuch entfernt und der Schlüssel des neuen Elements hinzugefügt wird.</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.SetItem(System.Int32,`1)">
          <source>This method is an O(1) operation.</source>
          <target state="translated">Diese Methode ist ein o(1)-Vorgang.</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.SetItem(System.Int32,`1)">
          <source>Notes for Implementers</source>
          <target state="translated">Hinweise für Implementierer</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.SetItem(System.Int32,`1)">
          <source>Override this method to provide customized behavior for setting the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601.Item%2A&gt;</ph> property inherited from the <ph id="ph2">&lt;xref:System.Collections.ObjectModel.Collection%601&gt;</ph> generic class.</source>
          <target state="translated">Überschreiben Sie diese Methode zum Bereitstellen von benutzerdefinierten Verhaltens für das Festlegen der <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601.Item%2A&gt;</ph> Eigenschaft vererbt wird, aus der <ph id="ph2">&lt;xref:System.Collections.ObjectModel.Collection%601&gt;</ph> generische Klasse.</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.SetItem(System.Int32,`1)">
          <source>This method does not affect the behavior of the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.Item%2A?displayProperty=nameWithType&gt;</ph> property, which is read-only.</source>
          <target state="translated">Diese Methode wirkt sich nicht auf das Verhalten der <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.Item%2A?displayProperty=nameWithType&gt;</ph> -Eigenschaft, die schreibgeschützt ist.</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.SetItem(System.Int32,`1)">
          <source>Call the base class implementation of this method to set the item in the underlying collection and to update the lookup dictionary.</source>
          <target state="translated">Rufen Sie die basisklassenimplementierung dieser Methode das Element in der zugrunde liegenden Auflistung festgelegt und das Suchwörterbuch zu aktualisieren.</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.SetItem(System.Int32,`1)">
          <source>This section contains two code examples that demonstrate overriding the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A&gt;</ph> method to provide custom behavior for setting the <ph id="ph2">&lt;xref:System.Collections.ObjectModel.Collection%601.Item%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">Dieser Abschnitt enthält zwei Codebeispielen überschreiben die <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A&gt;</ph> -Methode zum Bereitstellen von benutzerdefinierten Verhaltens für das Festlegen der <ph id="ph2">&lt;xref:System.Collections.ObjectModel.Collection%601.Item%2A?displayProperty=nameWithType&gt;</ph> Eigenschaft.</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.SetItem(System.Int32,`1)">
          <source>The first example adds a custom notification event and the second provides support for a collection of objects with mutable keys.</source>
          <target state="translated">Im erste Beispiel wird ein benutzerdefiniertes Benachrichtigungsereignis hinzugefügt, und die zweite bietet Unterstützung für eine Auflistung von Objekten mit änderbaren Schlüsseln.</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.SetItem(System.Int32,`1)">
          <source>Example 1</source>
          <target state="translated">Beispiel 1</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.SetItem(System.Int32,`1)">
          <source>The following code example shows how to override the protected <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A&gt;</ph>, and <ph id="ph4">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A&gt;</ph> methods, to provide custom behavior for the <ph id="ph5">&lt;xref:System.Collections.ObjectModel.Collection%601.Add%2A&gt;</ph>, <ph id="ph6">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.Remove%2A&gt;</ph>, and <ph id="ph7">&lt;xref:System.Collections.ObjectModel.Collection%601.Clear%2A&gt;</ph> methods, and for setting the default <ph id="ph8">&lt;xref:System.Collections.ObjectModel.Collection%601.Item%2A&gt;</ph> property (the indexer in C#).</source>
          <target state="translated">Im folgenden Codebeispiel wird veranschaulicht, wie die geschützte überschreiben <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A&gt;</ph>, und <ph id="ph4">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A&gt;</ph> Methoden, die zur Bereitstellung eines benutzerdefinierten Verhaltens für die <ph id="ph5">&lt;xref:System.Collections.ObjectModel.Collection%601.Add%2A&gt;</ph>, <ph id="ph6">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.Remove%2A&gt;</ph>, und <ph id="ph7">&lt;xref:System.Collections.ObjectModel.Collection%601.Clear%2A&gt;</ph> Methoden, und für Festlegen des standardmäßigen <ph id="ph8">&lt;xref:System.Collections.ObjectModel.Collection%601.Item%2A&gt;</ph> -Eigenschaft (Indexer in c#).</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.SetItem(System.Int32,`1)">
          <source>The custom behavior provided in this example is a notification event named <ph id="ph1">`Changed`</ph>, which is raised at the end of each of the overridden methods.</source>
          <target state="translated">In diesem Beispiel bereitgestellte benutzerdefinierte Verhalten wird ein Benachrichtigungsereignis mit dem Namen <ph id="ph1">`Changed`</ph>, das am Ende der überschriebenen Methoden ausgelöst wird.</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.SetItem(System.Int32,`1)">
          <source>The code example creates the <ph id="ph1">`SimpleOrder`</ph> class, which derives from <ph id="ph2">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph> and represents a simple order form.</source>
          <target state="translated">Das Codebeispiel erstellt die <ph id="ph1">`SimpleOrder`</ph> -Klasse, abgeleitet von <ph id="ph2">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph> und ein einfaches Bestellformular darstellt.</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.SetItem(System.Int32,`1)">
          <source>The order form contains <ph id="ph1">`OrderItem`</ph> objects representing items ordered.</source>
          <target state="translated">Enthält die Bestellformular <ph id="ph1">`OrderItem`</ph> Objekte, die bestellte Artikel darstellen.</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.SetItem(System.Int32,`1)">
          <source>The code example also creates a <ph id="ph1">`SimpleOrderChangedEventArgs`</ph> class to contain the event information, and an enumeration to identify the type of change.</source>
          <target state="translated">Das Codebeispiel erstellt außerdem eine <ph id="ph1">`SimpleOrderChangedEventArgs`</ph> Klasse, um die Ereignisinformationen und eine Enumeration zum Identifizieren der Art der Änderung enthalten.</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.SetItem(System.Int32,`1)">
          <source>The code example demonstrates the custom behavior by calling the properties and methods of the derived class, in the <ph id="ph1">`Main`</ph> method of the <ph id="ph2">`Demo`</ph> class.</source>
          <target state="translated">Im Codebeispiel wird veranschaulicht, das benutzerdefinierte Verhalten durch Aufrufen von Eigenschaften und Methoden der abgeleiteten Klasse in der <ph id="ph1">`Main`</ph> Methode der <ph id="ph2">`Demo`</ph> Klasse.</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.SetItem(System.Int32,`1)">
          <source>This code example uses objects with immutable keys.</source>
          <target state="translated">Dieses Codebeispiel verwendet die Objekte mit unveränderlichen Schlüsseln.</target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.SetItem(System.Int32,`1)">
          <source>For a code example that uses mutable keys, see <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A&gt;</ph>.</source>
          <target state="translated">Ein Codebeispiel, die änderbare Schlüssel verwendet, finden Sie unter <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.SetItem(System.Int32,`1)">
          <source>Example 2</source>
          <target state="translated">Beispiel 2</target>       </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.SetItem(System.Int32,`1)">
          <source>The following code example shows how to override the protected <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A&gt;</ph> method to support mutable keys, and how to override the protected <ph id="ph2">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A&gt;</ph>, and <ph id="ph5">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A&gt;</ph> methods to maintain the integrity of the keys and the collection.</source>
          <target state="translated">Im folgenden Codebeispiel wird veranschaulicht, wie die geschützte überschreiben <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A&gt;</ph> -Methode zur Unterstützung der änderbare Schlüssel und den geschützten Außerkraftsetzen <ph id="ph2">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A&gt;</ph>, und <ph id="ph5">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A&gt;</ph> Methoden, um die Integrität der Schlüssel zu verwalten und die Auflistung.</target>       </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.SetItem(System.Int32,`1)">
          <source>The code example creates the <ph id="ph1">`MutableKeys`</ph> collection, which derives from <ph id="ph2">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph>, and the <ph id="ph3">`MutableKey`</ph> class.</source>
          <target state="translated">Das Codebeispiel erstellt die <ph id="ph1">`MutableKeys`</ph> -Auflistung, die abgeleitet <ph id="ph2">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph>, und die <ph id="ph3">`MutableKey`</ph> Klasse.</target>       </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.SetItem(System.Int32,`1)">
          <source>The <ph id="ph1">`MutableKey`</ph> class has a settable <ph id="ph2">`Key`</ph> property.</source>
          <target state="translated">Die <ph id="ph1">`MutableKey`</ph> -Klasse verfügt über eine festlegbare <ph id="ph2">`Key`</ph> Eigenschaft.</target>       </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.SetItem(System.Int32,`1)">
          <source>When a new key is assigned to the property, the property setter calls the <ph id="ph1">`internal`</ph> (<ph id="ph2">`Friend`</ph> in Visual Basic) <ph id="ph3">`ChangeKey`</ph> method of the collection to test whether the new key would conflict with an existing key.</source>
          <target state="translated">Wenn ein neuer Schlüssel der Eigenschaft zugewiesen wird, ruft der Setter für eine Eigenschaft der <ph id="ph1">`internal`</ph> (<ph id="ph2">`Friend`</ph> in Visual Basic) <ph id="ph3">`ChangeKey`</ph> -Methode der Auflistung zu prüfen, ob der neue Schlüssel durch einen vorhandenen Schlüssel in Konflikt stehen würde.</target>       </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.SetItem(System.Int32,`1)">
          <source>If so, an exception is thrown and the property value is not changed.</source>
          <target state="translated">Wenn dies der Fall ist, wird eine Ausnahme ausgelöst, und der Eigenschaftswert wird nicht geändert.</target>       </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.SetItem(System.Int32,`1)">
          <source>In order to maintain the connection between a <ph id="ph1">`MutableKey`</ph> object and the <ph id="ph2">`MutableKeys`</ph> collection and to prevent an object from being inserted into two collections, the <ph id="ph3">`MutableKey`</ph> class has an <ph id="ph4">`internal`</ph> (<ph id="ph5">`Friend`</ph> in Visual Basic) <ph id="ph6">`Collection`</ph> field.</source>
          <target state="translated">Um die Verbindung zwischen Verwalten einer <ph id="ph1">`MutableKey`</ph> Objekt und die <ph id="ph2">`MutableKeys`</ph> Auflistung und zu verhindern, dass ein Objekt in zwei Auflistungen eingefügt wird die <ph id="ph3">`MutableKey`</ph> -Klasse verfügt über eine <ph id="ph4">`internal`</ph> (<ph id="ph5">`Friend`</ph> in Visual Basic) <ph id="ph6">`Collection`</ph>Feld.</target>       </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.SetItem(System.Int32,`1)">
          <source>This field is maintained by the protected methods that provide custom behavior for adding and removing items from the collection, such as the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A&gt;</ph> method.</source>
          <target state="translated">Dieses Feld wird von den geschützten Methoden, die benutzerdefiniertes Verhalten zu bieten, zum Hinzufügen und Entfernen von Elementen aus der Auflistung, z. B. verwaltet die <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.KeyedCollection`2.SetItem(System.Int32,`1)">
          <source>The field is set when the item is added to a collection and cleared when the item is removed.</source>
          <target state="translated">Das Feld wird festgelegt, wenn das Element der Auflistung hinzugefügt und gelöscht, wenn das Element entfernt wird.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>