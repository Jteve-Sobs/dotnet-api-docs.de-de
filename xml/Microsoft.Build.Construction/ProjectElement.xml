<Type Name="ProjectElement" FullName="Microsoft.Build.Construction.ProjectElement">
  <Metadata><Meta Name="ms.openlocfilehash" Value="18c30d551c35d5431031a073e2d7e7fb40670317" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86667591" /></Metadata><TypeSignature Language="C#" Value="public abstract class ProjectElement : Microsoft.Build.Framework.IProjectElement" FrameworkAlternate="msbuild-15;msbuild-15-netcore;msbuild-16;msbuild-16-netcore" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ProjectElement extends System.Object implements class Microsoft.Build.Framework.IProjectElement" FrameworkAlternate="msbuild-15;msbuild-15-netcore;msbuild-16;msbuild-16-netcore" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Build.Construction.ProjectElement" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ProjectElement&#xA;Implements IProjectElement" FrameworkAlternate="msbuild-15;msbuild-15-netcore;msbuild-16;msbuild-16-netcore" />
  <TypeSignature Language="C++ CLI" Value="public ref class ProjectElement abstract : Microsoft::Build::Framework::IProjectElement" FrameworkAlternate="msbuild-15;msbuild-15-netcore;msbuild-16;msbuild-16-netcore" />
  <TypeSignature Language="F#" Value="type ProjectElement = class&#xA;    interface IProjectElement" FrameworkAlternate="msbuild-15;msbuild-15-netcore;msbuild-16;msbuild-16-netcore" />
  <TypeSignature Language="C#" Value="public abstract class ProjectElement" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ProjectElement extends System.Object" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ProjectElement" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <TypeSignature Language="C++ CLI" Value="public ref class ProjectElement abstract" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <TypeSignature Language="F#" Value="type ProjectElement = class" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Build</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>15.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface FrameworkAlternate="msbuild-15;msbuild-15-netcore;msbuild-16;msbuild-16-netcore">
      <InterfaceName>Microsoft.Build.Framework.IProjectElement</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Abstrakte Basisklasse für Modellelemente des MSBuild-Konstruktionsobjekts.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="AllParents">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Construction.ProjectElementContainer&gt; AllParents { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Build.Construction.ProjectElementContainer&gt; AllParents" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Construction.ProjectElement.AllParents" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AllParents As IEnumerable(Of ProjectElementContainer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Construction::ProjectElementContainer ^&gt; ^ AllParents { System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Construction::ProjectElementContainer ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AllParents : seq&lt;Microsoft.Build.Construction.ProjectElementContainer&gt;" Usage="Microsoft.Build.Construction.ProjectElement.AllParents" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="msbuild-15;msbuild-15-netcore">
          <AttributeName Language="C#">[get: System.Runtime.CompilerServices.IteratorStateMachine(typeof(Microsoft.Build.Construction.ProjectElement/&lt;get_AllParents&gt;d__20))]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.CompilerServices.IteratorStateMachine(typeof(Microsoft.Build.Construction.ProjectElement/&lt;get_AllParents&gt;d__20))&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="msbuild-16;msbuild-16-netcore">
          <AttributeName Language="C#">[get: System.Runtime.CompilerServices.IteratorStateMachine(typeof(Microsoft.Build.Construction.ProjectElement/&lt;get_AllParents&gt;d__23))]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.CompilerServices.IteratorStateMachine(typeof(Microsoft.Build.Construction.ProjectElement/&lt;get_AllParents&gt;d__23))&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.6">
          <AttributeName Language="C#">[get: System.Runtime.CompilerServices.IteratorStateMachine(typeof(Microsoft.Build.Construction.ProjectElement/&lt;get_AllParents&gt;d__1))]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.CompilerServices.IteratorStateMachine(typeof(Microsoft.Build.Construction.ProjectElement/&lt;get_AllParents&gt;d__1))&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[get: System.Runtime.CompilerServices.IteratorStateMachine(typeof(Microsoft.Build.Construction.ProjectElement/&lt;get_AllParents&gt;d__14))]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.CompilerServices.IteratorStateMachine(typeof(Microsoft.Build.Construction.ProjectElement/&lt;get_AllParents&gt;d__14))&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Construction.ProjectElementContainer&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Alle übergeordneten Elemente dieses Elements, bis oben zum ProjectRootElement.
„None“, wenn dies selbst ein ProjectRootElement ist.
„None“, wenn dies selbst noch keinem übergeordneten Element angefügt wurde.</summary>
        <value>Ein Enumerator für alle übergeordneten Elemente. Es gibt keine übergeordneten Elemente, wenn das Projektelement ein ProjectRootElement ist oder wenn es noch nicht an ein übergeordnetes Element angefügt ist.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Construction.ProjectElement Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Build.Construction.ProjectElement Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Construction.ProjectElement.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As ProjectElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Build::Construction::ProjectElement ^ Clone();" />
      <MemberSignature Language="F#" Value="member this.Clone : unit -&gt; Microsoft.Build.Construction.ProjectElement" Usage="projectElement.Clone " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Construction.ProjectElement</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt einen flachen Klon dieses Projektelements zurück.</summary>
        <returns>Das geklonte Element.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="protected internal virtual Microsoft.Build.Construction.ProjectElement Clone (Microsoft.Build.Construction.ProjectRootElement factory);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class Microsoft.Build.Construction.ProjectElement Clone(class Microsoft.Build.Construction.ProjectRootElement factory) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Construction.ProjectElement.Clone(Microsoft.Build.Construction.ProjectRootElement)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function Clone (factory As ProjectRootElement) As ProjectElement" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual Microsoft::Build::Construction::ProjectElement ^ Clone(Microsoft::Build::Construction::ProjectRootElement ^ factory);" />
      <MemberSignature Language="F#" Value="abstract member Clone : Microsoft.Build.Construction.ProjectRootElement -&gt; Microsoft.Build.Construction.ProjectElement&#xA;override this.Clone : Microsoft.Build.Construction.ProjectRootElement -&gt; Microsoft.Build.Construction.ProjectElement" Usage="projectElement.Clone factory" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Construction.ProjectElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="factory" Type="Microsoft.Build.Construction.ProjectRootElement" Index="0" FrameworkAlternate="msbuild-15;msbuild-15-netcore;msbuild-16;msbuild-16-netcore" />
      </Parameters>
      <Docs>
        <param name="factory">Die Factory, die zum Erstellen der neuen Instanz verwendet werden soll.</param>
        <summary>Gibt einen flachen Klon dieses Projektelements zurück.</summary>
        <returns>Das geklonte Element.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Condition">
      <MemberSignature Language="C#" Value="public virtual string Condition { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Condition" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Construction.ProjectElement.Condition" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Condition As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Condition { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Condition : string with get, set" Usage="Microsoft.Build.Construction.ProjectElement.Condition" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: System.Diagnostics.DebuggerStepThrough]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Diagnostics.DebuggerStepThrough&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: System.Diagnostics.DebuggerStepThrough]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Diagnostics.DebuggerStepThrough&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Bedingungswert ab oder legt diesen fest. Es gibt eine leere Zeichenfolge zurück, WENN ein Bedingungsattribut zwar zulässig ist, aber nicht vorhanden ist oder keinen Wert hat. Gibt NULL zurück, falls ein Bedingungsattribut für dieses Element ungültig ist.
Entfernt das Attribut, wenn der festzulegende Wert leer ist.
Es besteht die Möglichkeit, dass abgeleitete Klassen <see cref="T:System.InvalidOperationException" /> auslösen, wenn das Festlegen der Bedingung für diese Elemente anwendbar ist.</summary>
        <value>Der Condition-Attribut Wert oder eine leere Zeichenfolge, wenn das Attribut nicht vorhanden ist.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Entfernt das Condition-Attribut, wenn der festzulegende Wert auf NULL oder eine leere Zeichenfolge festgelegt ist. Wenn das Condition-Attribut nicht vorhanden ist, wird eine leere Zeichenfolge zurückgegeben, anstatt eine Ausnahme auszulösen, da eine nicht vorhandene Bedingung implizit true ist.  
  
 Für das ProjectExtensions-Element gibt der Getter NULL zurück, und der Setter löst eine Ausnahme für jeden beliebigen Wert aus.  
  
 ]]></format>
        </remarks>
        <example>Für das ProjectExtensions-Element gibt der Getter NULL zurück, und der Setter löst eine Ausnahme für jeden beliebigen Wert aus.</example>
      </Docs>
    </Member>
    <Member MemberName="ConditionLocation">
      <MemberSignature Language="C#" Value="public virtual Microsoft.Build.Construction.ElementLocation ConditionLocation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Build.Construction.ElementLocation ConditionLocation" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Construction.ProjectElement.ConditionLocation" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ConditionLocation As ElementLocation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Microsoft::Build::Construction::ElementLocation ^ ConditionLocation { Microsoft::Build::Construction::ElementLocation ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ConditionLocation : Microsoft.Build.Construction.ElementLocation" Usage="Microsoft.Build.Construction.ProjectElement.ConditionLocation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Construction.ElementLocation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Speicherort des "Condition"-Attributs dieses Elements, sofern vorhanden.
Wenn kein derartiges Attribut vorhanden ist, wird von NULL zurückgegeben.</summary>
        <value>Gibt <see cref="T:Microsoft.Build.Construction.ElementLocation" />zurück.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContainingProject">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Construction.ProjectRootElement ContainingProject { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Build.Construction.ProjectRootElement ContainingProject" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Construction.ProjectElement.ContainingProject" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ContainingProject As ProjectRootElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Build::Construction::ProjectRootElement ^ ContainingProject { Microsoft::Build::Construction::ProjectRootElement ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ContainingProject : Microsoft.Build.Construction.ProjectRootElement" Usage="Microsoft.Build.Construction.ProjectElement.ContainingProject" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Diagnostics.DebuggerStepThrough]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Diagnostics.DebuggerStepThrough&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[set: System.Diagnostics.DebuggerStepThrough]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Diagnostics.DebuggerStepThrough&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Construction.ProjectRootElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ProjectRootElement (ggf. importiert), das dieses XML enthält.
Darf nicht NULL sein.</summary>
        <value>Der Projektstamm Container, der dieses Projekt enthält.</value>
        <remarks>Setter wäre idealerweise "geschützt und intern". hier gibt es einige Tricks, um den Platz eines Felds zu sparen: Es gibt viele dieser Objekte.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyFrom">
      <MemberSignature Language="C#" Value="public virtual void CopyFrom (Microsoft.Build.Construction.ProjectElement element);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyFrom(class Microsoft.Build.Construction.ProjectElement element) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Construction.ProjectElement.CopyFrom(Microsoft.Build.Construction.ProjectElement)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub CopyFrom (element As ProjectElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyFrom(Microsoft::Build::Construction::ProjectElement ^ element);" />
      <MemberSignature Language="F#" Value="abstract member CopyFrom : Microsoft.Build.Construction.ProjectElement -&gt; unit&#xA;override this.CopyFrom : Microsoft.Build.Construction.ProjectElement -&gt; unit" Usage="projectElement.CopyFrom element" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="Microsoft.Build.Construction.ProjectElement" Index="0" FrameworkAlternate="msbuild-15;msbuild-15-netcore;msbuild-16;msbuild-16-netcore" />
      </Parameters>
      <Docs>
        <param name="element">Das Element, das als Vorlage fungieren soll, aus der kopiert werden soll.</param>
        <summary>Wendet Eigenschaften des angegebenen Typs auf diese Instanz an.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateNewInstance">
      <MemberSignature Language="C#" Value="protected abstract Microsoft.Build.Construction.ProjectElement CreateNewInstance (Microsoft.Build.Construction.ProjectRootElement owner);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class Microsoft.Build.Construction.ProjectElement CreateNewInstance(class Microsoft.Build.Construction.ProjectRootElement owner) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Construction.ProjectElement.CreateNewInstance(Microsoft.Build.Construction.ProjectRootElement)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function CreateNewInstance (owner As ProjectRootElement) As ProjectElement" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract Microsoft::Build::Construction::ProjectElement ^ CreateNewInstance(Microsoft::Build::Construction::ProjectRootElement ^ owner);" />
      <MemberSignature Language="F#" Value="abstract member CreateNewInstance : Microsoft.Build.Construction.ProjectRootElement -&gt; Microsoft.Build.Construction.ProjectElement" Usage="projectElement.CreateNewInstance owner" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Construction.ProjectElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="owner" Type="Microsoft.Build.Construction.ProjectRootElement" Index="0" FrameworkAlternate="msbuild-15;msbuild-15-netcore;msbuild-16;msbuild-16-netcore" />
      </Parameters>
      <Docs>
        <param name="owner">Die Factory, die zum Erstellen der neuen Instanz verwendet werden soll.</param>
        <summary>Gibt eine neue Instanz desselben Typs zurück.
Alle Eigenschaften, die nach der Erstellung nicht festgelegt werden können, müssen auf Kopien von Werten festgelegt werden, wie sie für diese Instanz festgelegt wurden.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ElementName">
      <MemberSignature Language="C#" Value="public string ElementName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ElementName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Construction.ProjectElement.ElementName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ElementName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ElementName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ElementName : string" Usage="Microsoft.Build.Construction.ProjectElement.ElementName" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Build.Framework.IProjectElement.ElementName</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="Label">
      <MemberSignature Language="C#" Value="public string Label { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Label" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Construction.ProjectElement.Label" />
      <MemberSignature Language="VB.NET" Value="Public Property Label As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Label { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Label : string with get, set" Usage="Microsoft.Build.Construction.ProjectElement.Label" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: System.Diagnostics.DebuggerStepThrough]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Diagnostics.DebuggerStepThrough&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: System.Diagnostics.DebuggerStepThrough]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Diagnostics.DebuggerStepThrough&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Label-Wert ab oder legt ihn fest. Gibt eine leere Zeichenfolge zurück, wenn kein Wert vorhanden ist.
Entfernt das Attribut, wenn der festzulegende Wert leer ist.</summary>
        <value>Die Bezeichnung oder eine leere Zeichenfolge, wenn keine Bezeichnung vorhanden ist.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Entfernt das Attribut, wenn der festzulegende Wert leer ist.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LabelLocation">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Construction.ElementLocation LabelLocation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Build.Construction.ElementLocation LabelLocation" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Construction.ProjectElement.LabelLocation" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LabelLocation As ElementLocation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Build::Construction::ElementLocation ^ LabelLocation { Microsoft::Build::Construction::ElementLocation ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.LabelLocation : Microsoft.Build.Construction.ElementLocation" Usage="Microsoft.Build.Construction.ProjectElement.LabelLocation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Construction.ElementLocation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Speicherort des "Label"-Attributs dieses Elements, sofern vorhanden.
Wenn kein derartiges Attribut vorhanden ist, wird von NULL zurückgegeben.</summary>
        <value>Gibt <see cref="T:Microsoft.Build.Construction.ElementLocation" />zurück.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Location">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Construction.ElementLocation Location { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Build.Construction.ElementLocation Location" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Construction.ProjectElement.Location" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Location As ElementLocation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Build::Construction::ElementLocation ^ Location { Microsoft::Build::Construction::ElementLocation ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Location : Microsoft.Build.Construction.ElementLocation" Usage="Microsoft.Build.Construction.ProjectElement.Location" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Construction.ElementLocation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Speicherort des entsprechenden Xml-Elements.
Ist möglicherweise nicht richtig, wenn die Datei nicht gespeichert wurde oder die Datei bearbeitet wurde, nachdem sie zuletzt gespeichert wurde.
Bei einer nicht gespeicherten Bearbeitung enthält der Speicherort nur den Pfad zur Datei, aus der das Element stammt.</summary>
        <value>Gibt <see cref="T:Microsoft.Build.Construction.ElementLocation" />zurück.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NextSibling">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Construction.ProjectElement NextSibling { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Build.Construction.ProjectElement NextSibling" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Construction.ProjectElement.NextSibling" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NextSibling As ProjectElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Build::Construction::ProjectElement ^ NextSibling { Microsoft::Build::Construction::ProjectElement ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.NextSibling : Microsoft.Build.Construction.ProjectElement" Usage="Microsoft.Build.Construction.ProjectElement.NextSibling" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: System.Diagnostics.DebuggerStepThrough]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Diagnostics.DebuggerStepThrough&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: System.Diagnostics.DebuggerStepThrough]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Diagnostics.DebuggerStepThrough&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Construction.ProjectElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Das nächste nebengeordnete Element.
Ist möglicherweise NULL.</summary>
        <value>Das nächste gleich geordnete Element dieses Projekt Elements oder, <see langword="null" /> Wenn kein nächstes gleich geordnetes Element vorhanden ist.</value>
        <remarks>Setter sollte idealerweise "geschützt und intern" sein.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OuterElement">
      <MemberSignature Language="C#" Value="public string OuterElement { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OuterElement" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Construction.ProjectElement.OuterElement" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OuterElement As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OuterElement { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.OuterElement : string" Usage="Microsoft.Build.Construction.ProjectElement.OuterElement" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Build.Framework.IProjectElement.OuterElement</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Construction.ProjectElementContainer Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Build.Construction.ProjectElementContainer Parent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Construction.ProjectElement.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As ProjectElementContainer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Build::Construction::ProjectElementContainer ^ Parent { Microsoft::Build::Construction::ProjectElementContainer ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Parent : Microsoft.Build.Construction.ProjectElementContainer" Usage="Microsoft.Build.Construction.ProjectElement.Parent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: System.Diagnostics.DebuggerStepThrough]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Diagnostics.DebuggerStepThrough&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Construction.ProjectElementContainer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Null, wenn dies ein ProjectRootElement ist.
NULL, wenn dies noch keinem übergeordneten Element angefügt wurde.</summary>
        <value>Der Projekt Element Container, der dieses Projekt enthält.</value>
        <remarks>Das übergeordnete Element sollte nur von projectelementcontainer festgelegt werden.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviousSibling">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Construction.ProjectElement PreviousSibling { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Build.Construction.ProjectElement PreviousSibling" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Construction.ProjectElement.PreviousSibling" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PreviousSibling As ProjectElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Build::Construction::ProjectElement ^ PreviousSibling { Microsoft::Build::Construction::ProjectElement ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PreviousSibling : Microsoft.Build.Construction.ProjectElement" Usage="Microsoft.Build.Construction.ProjectElement.PreviousSibling" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: System.Diagnostics.DebuggerStepThrough]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Diagnostics.DebuggerStepThrough&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: System.Diagnostics.DebuggerStepThrough]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Diagnostics.DebuggerStepThrough&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Construction.ProjectElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Das vorherige nebengeordnete Element.
Ist möglicherweise NULL.</summary>
        <value>Das vorherige gleich geordnete Element dieses Projekt Elements oder, <see langword="null" /> Wenn kein vorheriges gleich geordnetes Element vorhanden ist.</value>
        <remarks>Setter sollte idealerweise "geschützt und intern" sein.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldCloneXmlAttribute">
      <MemberSignature Language="C#" Value="protected virtual bool ShouldCloneXmlAttribute (System.Xml.XmlAttribute attribute);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool ShouldCloneXmlAttribute(class System.Xml.XmlAttribute attribute) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Construction.ProjectElement.ShouldCloneXmlAttribute(System.Xml.XmlAttribute)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function ShouldCloneXmlAttribute (attribute As XmlAttribute) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool ShouldCloneXmlAttribute(System::Xml::XmlAttribute ^ attribute);" />
      <MemberSignature Language="F#" Value="abstract member ShouldCloneXmlAttribute : System.Xml.XmlAttribute -&gt; bool&#xA;override this.ShouldCloneXmlAttribute : System.Xml.XmlAttribute -&gt; bool" Usage="projectElement.ShouldCloneXmlAttribute attribute" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attribute" Type="System.Xml.XmlAttribute" Index="0" FrameworkAlternate="msbuild-15;msbuild-15-netcore;msbuild-16;msbuild-16-netcore" />
      </Parameters>
      <Docs>
        <param name="attribute">To be added.</param>
        <summary>Hook für Unterklassen, um anzugeben, ob das angegebene Element <param name="attribute" /> geklont werden muss oder nicht</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
