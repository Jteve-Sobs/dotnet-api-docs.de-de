<Type Name="ProjectElementContainer" FullName="Microsoft.Build.Construction.ProjectElementContainer">
  <Metadata><Meta Name="ms.openlocfilehash" Value="6a53db5668a61597a3f0324088be22af342c1815" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70563451" /></Metadata><TypeSignature Language="C#" Value="public abstract class ProjectElementContainer : Microsoft.Build.Construction.ProjectElement" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ProjectElementContainer extends Microsoft.Build.Construction.ProjectElement" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Build.Construction.ProjectElementContainer" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ProjectElementContainer&#xA;Inherits ProjectElement" />
  <TypeSignature Language="C++ CLI" Value="public ref class ProjectElementContainer abstract : Microsoft::Build::Construction::ProjectElement" />
  <TypeSignature Language="F#" Value="type ProjectElementContainer = class&#xA;    inherit ProjectElement" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Build</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.Build.Construction.ProjectElement</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="23924-101">Stellt eine abstrakte Containerklasse für Projektelemente bereit.</span><span class="sxs-lookup"><span data-stu-id="23924-101">Provides an abstract container class for project elements.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="AllChildren">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Construction.ProjectElement&gt; AllChildren { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Build.Construction.ProjectElement&gt; AllChildren" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Construction.ProjectElementContainer.AllChildren" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AllChildren As IEnumerable(Of ProjectElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Construction::ProjectElement ^&gt; ^ AllChildren { System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Construction::ProjectElement ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AllChildren : seq&lt;Microsoft.Build.Construction.ProjectElement&gt;" Usage="Microsoft.Build.Construction.ProjectElementContainer.AllChildren" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Construction.ProjectElement&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="23924-102">Ruft einen rekursiven Tiefensuche-Enumerator über alle untergeordneten Elemente ab.</span><span class="sxs-lookup"><span data-stu-id="23924-102">Gets a recursive depth-first enumerator over all child elements.</span></span></summary>
        <value><span data-ttu-id="23924-103">Ein rekursiver tiefen basierter Enumerator für alle untergeordneten Elemente.</span><span class="sxs-lookup"><span data-stu-id="23924-103">A recursive depth-first enumerator over all child elements.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="23924-104">Rekursion ist möglich, da Projekt Element Container möglicherweise untergeordnete Elemente enthalten, die selbst Projekt Element Container sind.</span><span class="sxs-lookup"><span data-stu-id="23924-104">Recursion is possible because project element containers may contain children that are themselves project element containers.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendChild">
      <MemberSignature Language="C#" Value="public void AppendChild (Microsoft.Build.Construction.ProjectElement child);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendChild(class Microsoft.Build.Construction.ProjectElement child) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Construction.ProjectElementContainer.AppendChild(Microsoft.Build.Construction.ProjectElement)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendChild (child As ProjectElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendChild(Microsoft::Build::Construction::ProjectElement ^ child);" />
      <MemberSignature Language="F#" Value="member this.AppendChild : Microsoft.Build.Construction.ProjectElement -&gt; unit" Usage="projectElementContainer.AppendChild child" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="child" Type="Microsoft.Build.Construction.ProjectElement" />
      </Parameters>
      <Docs>
        <param name="child"><span data-ttu-id="23924-105">Das anzufügende Projektelement.</span><span class="sxs-lookup"><span data-stu-id="23924-105">The project element to be appended.</span></span></param>
        <summary><span data-ttu-id="23924-106">Fügt das <paramref name="child" />-Element als letztes untergeordnetes Element dieses Projektcontainers an.</span><span class="sxs-lookup"><span data-stu-id="23924-106">Appends the <paramref name="child" /> element as the last child of this project container.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="23924-107">Löst eine Ausnahme aus, wenn dieser Projekt Container nicht übergeordnet ist, oder `child` wenn das Element bereits übergeordnet ist, oder `child` wenn das Element von einem anderen <xref:Microsoft.Build.Construction.ProjectRootElement>erstellt wurde.</span><span class="sxs-lookup"><span data-stu-id="23924-107">Throws an exception if this project container is not parented, or if the `child` element is already parented, or if the `child` element was created by a different <xref:Microsoft.Build.Construction.ProjectRootElement>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Children">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;Microsoft.Build.Construction.ProjectElement&gt; Children { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.ICollection`1&lt;class Microsoft.Build.Construction.ProjectElement&gt; Children" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Construction.ProjectElementContainer.Children" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Children As ICollection(Of ProjectElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::ICollection&lt;Microsoft::Build::Construction::ProjectElement ^&gt; ^ Children { System::Collections::Generic::ICollection&lt;Microsoft::Build::Construction::ProjectElement ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Children : System.Collections.Generic.ICollection&lt;Microsoft.Build.Construction.ProjectElement&gt;" Usage="Microsoft.Build.Construction.ProjectElementContainer.Children" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;Microsoft.Build.Construction.ProjectElement&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="23924-108">Ruft alle untergeordneten Elementen ab.</span><span class="sxs-lookup"><span data-stu-id="23924-108">Gets all child elements.</span></span></summary>
        <value><span data-ttu-id="23924-109">Alle untergeordneten Elemente.</span><span class="sxs-lookup"><span data-stu-id="23924-109">All child elements.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ChildrenReversed">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;Microsoft.Build.Construction.ProjectElement&gt; ChildrenReversed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.ICollection`1&lt;class Microsoft.Build.Construction.ProjectElement&gt; ChildrenReversed" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Construction.ProjectElementContainer.ChildrenReversed" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ChildrenReversed As ICollection(Of ProjectElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::ICollection&lt;Microsoft::Build::Construction::ProjectElement ^&gt; ^ ChildrenReversed { System::Collections::Generic::ICollection&lt;Microsoft::Build::Construction::ProjectElement ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ChildrenReversed : System.Collections.Generic.ICollection&lt;Microsoft.Build.Construction.ProjectElement&gt;" Usage="Microsoft.Build.Construction.ProjectElementContainer.ChildrenReversed" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;Microsoft.Build.Construction.ProjectElement&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="23924-110">Ruft alle untergeordneten Elemente ab, beginnend beim letzten untergeordneten Element.</span><span class="sxs-lookup"><span data-stu-id="23924-110">Gets all child elements, starting from the last child.</span></span></summary>
        <value><span data-ttu-id="23924-111">Alle untergeordneten Elemente, beginnend mit dem letzten untergeordneten Element.</span><span class="sxs-lookup"><span data-stu-id="23924-111">All child elements, starting from the last child.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Construction.ProjectElementContainer.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="Microsoft.Build.Construction.ProjectElementContainer.Count" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="23924-112">Ruft die Anzahl untergeordneter Elemente ab.</span><span class="sxs-lookup"><span data-stu-id="23924-112">Gets the number of child elements.</span></span></summary>
        <value><span data-ttu-id="23924-113">Die Anzahl untergeordneter Elemente.</span><span class="sxs-lookup"><span data-stu-id="23924-113">The number of child elements.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FirstChild">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Construction.ProjectElement FirstChild { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Build.Construction.ProjectElement FirstChild" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Construction.ProjectElementContainer.FirstChild" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FirstChild As ProjectElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Build::Construction::ProjectElement ^ FirstChild { Microsoft::Build::Construction::ProjectElement ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FirstChild : Microsoft.Build.Construction.ProjectElement" Usage="Microsoft.Build.Construction.ProjectElementContainer.FirstChild" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Construction.ProjectElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="23924-114">Ruft das erste untergeordnete Element ab.</span><span class="sxs-lookup"><span data-stu-id="23924-114">Gets the first child element.</span></span></summary>
        <value><span data-ttu-id="23924-115">Das erste untergeordnete Element oder <see langword="null" /> , wenn kein untergeordnetes Element vorhanden ist.</span><span class="sxs-lookup"><span data-stu-id="23924-115">The first child element, or <see langword="null" /> if no child element exists.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="23924-116">Verwenden <xref:Microsoft.Build.Construction.ProjectElementContainer.PrependChild%2A> Sie, um diese Eigenschaft zu initialisieren.</span><span class="sxs-lookup"><span data-stu-id="23924-116">Use <xref:Microsoft.Build.Construction.ProjectElementContainer.PrependChild%2A> to initialize this property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertAfterChild">
      <MemberSignature Language="C#" Value="public void InsertAfterChild (Microsoft.Build.Construction.ProjectElement child, Microsoft.Build.Construction.ProjectElement reference);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void InsertAfterChild(class Microsoft.Build.Construction.ProjectElement child, class Microsoft.Build.Construction.ProjectElement reference) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Construction.ProjectElementContainer.InsertAfterChild(Microsoft.Build.Construction.ProjectElement,Microsoft.Build.Construction.ProjectElement)" />
      <MemberSignature Language="VB.NET" Value="Public Sub InsertAfterChild (child As ProjectElement, reference As ProjectElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void InsertAfterChild(Microsoft::Build::Construction::ProjectElement ^ child, Microsoft::Build::Construction::ProjectElement ^ reference);" />
      <MemberSignature Language="F#" Value="member this.InsertAfterChild : Microsoft.Build.Construction.ProjectElement * Microsoft.Build.Construction.ProjectElement -&gt; unit" Usage="projectElementContainer.InsertAfterChild (child, reference)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="child" Type="Microsoft.Build.Construction.ProjectElement" />
        <Parameter Name="reference" Type="Microsoft.Build.Construction.ProjectElement" />
      </Parameters>
      <Docs>
        <param name="child"><span data-ttu-id="23924-117">Das einzufügende Projektelement.</span><span class="sxs-lookup"><span data-stu-id="23924-117">The project element to be inserted.</span></span></param>
        <param name="reference"><span data-ttu-id="23924-118">Das Projektelement, nach dem eingefügt werden soll.</span><span class="sxs-lookup"><span data-stu-id="23924-118">The project element to be inserted after.</span></span></param>
        <summary><span data-ttu-id="23924-119">Fügt das <paramref name="child" />-Element nach dem <paramref name="reference" />-Element ein.</span><span class="sxs-lookup"><span data-stu-id="23924-119">Inserts the <paramref name="child" /> element after the <paramref name="reference" /> element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="23924-120">Wenn das `reference` Element NULL ist, <xref:Microsoft.Build.Construction.ProjectElementContainer.PrependChild%2A>entspricht diese Methode.</span><span class="sxs-lookup"><span data-stu-id="23924-120">If the `reference` element is null, this method is equivalent to <xref:Microsoft.Build.Construction.ProjectElementContainer.PrependChild%2A>.</span></span>  
  
 <span data-ttu-id="23924-121">Löst eine Ausnahme aus, wenn dieser Projekt Container nicht übergeordnet ist, oder `child` wenn das Element bereits übergeordnet ist, oder `child` wenn das Element von einem anderen <xref:Microsoft.Build.Construction.ProjectRootElement>erstellt wurde oder wenn `reference` das Element kein untergeordnetes Element dieses Projekt Containers ist. .</span><span class="sxs-lookup"><span data-stu-id="23924-121">Throws an exception if this project container is not parented, or if the `child` element is already parented, or if the `child` element was created by a different <xref:Microsoft.Build.Construction.ProjectRootElement>, or if the `reference` element is not a child of this project container.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertBeforeChild">
      <MemberSignature Language="C#" Value="public void InsertBeforeChild (Microsoft.Build.Construction.ProjectElement child, Microsoft.Build.Construction.ProjectElement reference);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void InsertBeforeChild(class Microsoft.Build.Construction.ProjectElement child, class Microsoft.Build.Construction.ProjectElement reference) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Construction.ProjectElementContainer.InsertBeforeChild(Microsoft.Build.Construction.ProjectElement,Microsoft.Build.Construction.ProjectElement)" />
      <MemberSignature Language="VB.NET" Value="Public Sub InsertBeforeChild (child As ProjectElement, reference As ProjectElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void InsertBeforeChild(Microsoft::Build::Construction::ProjectElement ^ child, Microsoft::Build::Construction::ProjectElement ^ reference);" />
      <MemberSignature Language="F#" Value="member this.InsertBeforeChild : Microsoft.Build.Construction.ProjectElement * Microsoft.Build.Construction.ProjectElement -&gt; unit" Usage="projectElementContainer.InsertBeforeChild (child, reference)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="child" Type="Microsoft.Build.Construction.ProjectElement" />
        <Parameter Name="reference" Type="Microsoft.Build.Construction.ProjectElement" />
      </Parameters>
      <Docs>
        <param name="child"><span data-ttu-id="23924-122">Das einzufügende Projektelement.</span><span class="sxs-lookup"><span data-stu-id="23924-122">The project element to be inserted.</span></span></param>
        <param name="reference"><span data-ttu-id="23924-123">Das Projektelement, vor dem eingefügt werden soll.</span><span class="sxs-lookup"><span data-stu-id="23924-123">The project element to be inserted before.</span></span></param>
        <summary><span data-ttu-id="23924-124">Fügt das <paramref name="child" />-Element vor dem <paramref name="reference" />-Element ein.</span><span class="sxs-lookup"><span data-stu-id="23924-124">Inserts the <paramref name="child" /> element before the <paramref name="reference" /> element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="23924-125">Wenn das `reference` Element NULL ist, <xref:Microsoft.Build.Construction.ProjectElementContainer.AppendChild%2A>entspricht diese Methode.</span><span class="sxs-lookup"><span data-stu-id="23924-125">If the `reference` element is null, this method is equivalent to <xref:Microsoft.Build.Construction.ProjectElementContainer.AppendChild%2A>.</span></span>  
  
 <span data-ttu-id="23924-126">Löst eine Ausnahme aus, wenn dieser Projekt Container nicht übergeordnet ist, oder `child` wenn das Element bereits übergeordnet ist, oder `child` wenn das Element von einem anderen <xref:Microsoft.Build.Construction.ProjectRootElement>erstellt wurde oder wenn `reference` das Element kein untergeordnetes Element dieses Projekt Containers ist. .</span><span class="sxs-lookup"><span data-stu-id="23924-126">Throws an exception if this project container is not parented, or if the `child` element is already parented, or if the `child` element was created by a different <xref:Microsoft.Build.Construction.ProjectRootElement>, or if the `reference` element is not a child of this project container.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LastChild">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Construction.ProjectElement LastChild { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Build.Construction.ProjectElement LastChild" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Construction.ProjectElementContainer.LastChild" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LastChild As ProjectElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Build::Construction::ProjectElement ^ LastChild { Microsoft::Build::Construction::ProjectElement ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.LastChild : Microsoft.Build.Construction.ProjectElement" Usage="Microsoft.Build.Construction.ProjectElementContainer.LastChild" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Construction.ProjectElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="23924-127">Ruft das letzte untergeordnete Element ab.</span><span class="sxs-lookup"><span data-stu-id="23924-127">Gets the last child element.</span></span></summary>
        <value><span data-ttu-id="23924-128">Das letzte untergeordnete Element oder <see langword="null" /> , wenn kein untergeordnetes Element vorhanden ist.</span><span class="sxs-lookup"><span data-stu-id="23924-128">The last child element, or <see langword="null" /> if no child element exists.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="23924-129">Verwenden <xref:Microsoft.Build.Construction.ProjectElementContainer.AppendChild%2A> Sie, um diese Eigenschaft zu initialisieren.</span><span class="sxs-lookup"><span data-stu-id="23924-129">Use <xref:Microsoft.Build.Construction.ProjectElementContainer.AppendChild%2A> to initialize this property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PrependChild">
      <MemberSignature Language="C#" Value="public void PrependChild (Microsoft.Build.Construction.ProjectElement child);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void PrependChild(class Microsoft.Build.Construction.ProjectElement child) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Construction.ProjectElementContainer.PrependChild(Microsoft.Build.Construction.ProjectElement)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PrependChild (child As ProjectElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PrependChild(Microsoft::Build::Construction::ProjectElement ^ child);" />
      <MemberSignature Language="F#" Value="member this.PrependChild : Microsoft.Build.Construction.ProjectElement -&gt; unit" Usage="projectElementContainer.PrependChild child" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="child" Type="Microsoft.Build.Construction.ProjectElement" />
      </Parameters>
      <Docs>
        <param name="child"><span data-ttu-id="23924-130">Das Projektelement, das vorangestellt werden soll.</span><span class="sxs-lookup"><span data-stu-id="23924-130">The project element to be prepended.</span></span></param>
        <summary><span data-ttu-id="23924-131">Stellt das <paramref name="child" />-Element als erstes untergeordnetes Element dieses Projektcontainers voran.</span><span class="sxs-lookup"><span data-stu-id="23924-131">Prepends the <paramref name="child" /> element as the first child of this project container.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="23924-132">Löst eine Ausnahme aus, wenn dieser Projekt Container nicht übergeordnet ist, oder `child` wenn das Element bereits übergeordnet ist, oder `child` wenn das Element von einem anderen <xref:Microsoft.Build.Construction.ProjectRootElement>erstellt wurde.</span><span class="sxs-lookup"><span data-stu-id="23924-132">Throws an exception if this project container is not parented, or if the `child` element is already parented, or if the `child` element was created by a different <xref:Microsoft.Build.Construction.ProjectRootElement>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveAllChildren">
      <MemberSignature Language="C#" Value="public void RemoveAllChildren ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveAllChildren() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Construction.ProjectElementContainer.RemoveAllChildren" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAllChildren ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveAllChildren();" />
      <MemberSignature Language="F#" Value="member this.RemoveAllChildren : unit -&gt; unit" Usage="projectElementContainer.RemoveAllChildren " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="23924-133">Entfernt alle untergeordneten Elemente, falls vorhanden, aus diesem Projektcontainer.</span><span class="sxs-lookup"><span data-stu-id="23924-133">Removes all the children, if any, from this project container.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="23924-134">Es ist sicher, die untergeordneten Elemente während der Enumeration auf diese Weise zu ändern.</span><span class="sxs-lookup"><span data-stu-id="23924-134">It is safe to modify the children in this way during enumeration.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveChild">
      <MemberSignature Language="C#" Value="public void RemoveChild (Microsoft.Build.Construction.ProjectElement child);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveChild(class Microsoft.Build.Construction.ProjectElement child) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Construction.ProjectElementContainer.RemoveChild(Microsoft.Build.Construction.ProjectElement)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveChild (child As ProjectElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveChild(Microsoft::Build::Construction::ProjectElement ^ child);" />
      <MemberSignature Language="F#" Value="member this.RemoveChild : Microsoft.Build.Construction.ProjectElement -&gt; unit" Usage="projectElementContainer.RemoveChild child" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="child" Type="Microsoft.Build.Construction.ProjectElement" />
      </Parameters>
      <Docs>
        <param name="child"><span data-ttu-id="23924-135">Das zu entfernende Projektelement.</span><span class="sxs-lookup"><span data-stu-id="23924-135">The project element to be removed.</span></span></param>
        <summary><span data-ttu-id="23924-136">Entfernt ein <paramref name="child" />-Element aus diesem Projektcontainer.</span><span class="sxs-lookup"><span data-stu-id="23924-136">Removes a <paramref name="child" /> element from this project container.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="23924-137">Löst eine Ausnahme aus, wenn das untergeordnete Element zurzeit nicht von diesem Projekt Container übergeordnet ist.</span><span class="sxs-lookup"><span data-stu-id="23924-137">Throws an exception if the child element is not currently parented by this project container.</span></span> <span data-ttu-id="23924-138">Es ist sicher, ein untergeordnetes Element auf diese Weise während der Enumeration zu entfernen.</span><span class="sxs-lookup"><span data-stu-id="23924-138">It is safe to remove a child this way during enumeration.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
