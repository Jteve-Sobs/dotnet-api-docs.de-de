<Type Name="Extensions" FullName="System.Xml.XPath.Extensions">
  <Metadata><Meta Name="ms.openlocfilehash" Value="dee2ade6a9a75ddb77cfd1a182292812f070994a" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69424045" /></Metadata><TypeSignature Language="C#" Value="public static class Extensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit Extensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Xml.XPath.Extensions" />
  <TypeSignature Language="VB.NET" Value="Public Module Extensions" />
  <TypeSignature Language="C++ CLI" Value="public ref class Extensions abstract sealed" />
  <TypeSignature Language="F#" Value="type Extensions = class" />
  <AssemblyInfo>
    <AssemblyName>System.Xml.XPath.XDocument</AssemblyName>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.Linq</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="e06fd-101">Diese Klasse enthält die LINQ to XML-Erweiterungsmethoden zum Auswerten von XPath-Ausdrücken.</span><span class="sxs-lookup"><span data-stu-id="e06fd-101">This class contains the LINQ to XML extension methods that enable you to evaluate XPath expressions.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e06fd-102">Es gibt eine Leistungs Einbuße bei der Verwendung dieser Methoden.</span><span class="sxs-lookup"><span data-stu-id="e06fd-102">There is some performance penalty for using these methods.</span></span> <span data-ttu-id="e06fd-103">Die [!INCLUDE[sqltecxlinq](~/includes/sqltecxlinq-md.md)] Verwendung von Abfragen führt zu einer besseren Leistung.</span><span class="sxs-lookup"><span data-stu-id="e06fd-103">Using [!INCLUDE[sqltecxlinq](~/includes/sqltecxlinq-md.md)] queries yields better performance.</span></span>  
  
 <span data-ttu-id="e06fd-104">Obwohl die Reihenfolge der zurückgegebenen Auflistungen in der XML XPath Language 1,0-Empfehlung nicht angegeben ist, gibt diese Erweiterungsmethode Knoten in Dokument Reihenfolge zurück.</span><span class="sxs-lookup"><span data-stu-id="e06fd-104">Although the ordering of returned collections is not specified in the XML XPath Language 1.0 Recommendation, this extension method returns nodes in document order.</span></span>  
  
 <span data-ttu-id="e06fd-105">Beachten Sie, dass Knoten in Dokument Reihenfolge zurückgegeben werden, auch wenn Sie eine `preceding-sibling` umgekehrte `ancestor-or-self`Achse verwenden, z. b. oder.</span><span class="sxs-lookup"><span data-stu-id="e06fd-105">Note that nodes are returned in document order even when you use a reverse axis, such as `preceding-sibling` or `ancestor-or-self`.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName="CreateNavigator">
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath.XDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e06fd-106">Erstellt einen <see cref="T:System.Xml.XPath.XPathNavigator" /> für einen <see cref="T:System.Xml.Linq.XNode" />.</span><span class="sxs-lookup"><span data-stu-id="e06fd-106">Creates an <see cref="T:System.Xml.XPath.XPathNavigator" /> for an <see cref="T:System.Xml.Linq.XNode" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e06fd-107">Die XML-Struktur kann nicht mit dem bearbeitet <xref:System.Xml.XPath.XPathNavigator> werden, der von dieser Methode zurückgegeben wird.</span><span class="sxs-lookup"><span data-stu-id="e06fd-107">You cannot edit the XML tree by using the <xref:System.Xml.XPath.XPathNavigator> that is returned by this method.</span></span> <span data-ttu-id="e06fd-108">Die <xref:System.Xml.XPath.XPathNavigator.CanEdit%2A>-Eigenschaft gibt `false` zurück.</span><span class="sxs-lookup"><span data-stu-id="e06fd-108">The <xref:System.Xml.XPath.XPathNavigator.CanEdit%2A> property returns `false`.</span></span>  
  
 <span data-ttu-id="e06fd-109">Für einen <xref:System.Xml.XPath.XPathNavigator> <xref:System.Xml.Linq.XDocumentType> Knoten kann kein erstellt werden.</span><span class="sxs-lookup"><span data-stu-id="e06fd-109">You cannot create an <xref:System.Xml.XPath.XPathNavigator> for a <xref:System.Xml.Linq.XDocumentType> node.</span></span> <span data-ttu-id="e06fd-110">Dokumenttypen sind nicht Teil des XPath-Datenmodells.</span><span class="sxs-lookup"><span data-stu-id="e06fd-110">Document types do not participate in the XPath data model.</span></span>  
  
 <span data-ttu-id="e06fd-111">Namespace Deklarationen werden von links nach rechts gemeldet.</span><span class="sxs-lookup"><span data-stu-id="e06fd-111">Namespace declarations are reported from left to right.</span></span> <span data-ttu-id="e06fd-112">Im Gegensatz dazu werden <xref:System.Xml.XmlDocument> für Namespaces von rechts nach Links gemeldet.</span><span class="sxs-lookup"><span data-stu-id="e06fd-112">In contrast, for <xref:System.Xml.XmlDocument> namespaces are reported from right to left.</span></span> <span data-ttu-id="e06fd-113">Dies ist ein konformes Verhalten, da Namespace Deklarationen nicht im XPath-Datenmodell geordnet sind.</span><span class="sxs-lookup"><span data-stu-id="e06fd-113">This is conformant behavior because namespace declarations are not ordered in the XPath data model.</span></span>  
  
 <span data-ttu-id="e06fd-114">Die- <xref:System.Xml.XPath.XPathNavigator.MoveToId%2A> Methode wird für Navigatoren, die von dieser Methode zurückgegeben werden, nicht unterstützt.</span><span class="sxs-lookup"><span data-stu-id="e06fd-114">The method <xref:System.Xml.XPath.XPathNavigator.MoveToId%2A> is not supported for navigators that are returned by this method.</span></span>  
  
 <span data-ttu-id="e06fd-115">Sie können diese Methode verwenden, um eine XSLT-Transformation auszuführen.</span><span class="sxs-lookup"><span data-stu-id="e06fd-115">You can use this method to perform an XSLT transformation.</span></span> <span data-ttu-id="e06fd-116">Sie können eine XML-Struktur erstellen, einen <xref:System.Xml.XPath.XPathNavigator> aus der XML-Struktur erstellen, ein neues Dokument erstellen und einen <xref:System.Xml.XmlWriter> erstellen, der in das neue Dokument schreibt.</span><span class="sxs-lookup"><span data-stu-id="e06fd-116">You can create an XML tree, create an <xref:System.Xml.XPath.XPathNavigator> from the XML tree, create a new document, and create a <xref:System.Xml.XmlWriter> that will write into the new document.</span></span> <span data-ttu-id="e06fd-117">Anschließend können Sie die XSLT-Transformation aufrufen und den <xref:System.Xml.XPath.XPathNavigator> sowie den <xref:System.Xml.XmlWriter> an die Transformation übergeben.</span><span class="sxs-lookup"><span data-stu-id="e06fd-117">Then, you can invoke the XSLT transformation, passing the <xref:System.Xml.XPath.XPathNavigator> and <xref:System.Xml.XmlWriter> to the transformation.</span></span> <span data-ttu-id="e06fd-118">Nach erfolgreichem Abschluss der Transformation wird die neue XML-Struktur mit den Ergebnissen der Transformation aufgefüllt.</span><span class="sxs-lookup"><span data-stu-id="e06fd-118">After the transformation successfully completes, the new XML tree is populated with the results of the transformation.</span></span>  
  
 <span data-ttu-id="e06fd-119">Zum Ausführen einer XSLT-Transformation können Sie entweder <xref:System.Xml.XmlReader> <xref:System.Xml.XPath.XPathNavigator>oder verwenden.</span><span class="sxs-lookup"><span data-stu-id="e06fd-119">To perform an XSLT transformation, you can use either an <xref:System.Xml.XmlReader> or an <xref:System.Xml.XPath.XPathNavigator>.</span></span> <span data-ttu-id="e06fd-120">Die beiden Ansätze weisen unterschiedliche Leistungsmerkmale auf.</span><span class="sxs-lookup"><span data-stu-id="e06fd-120">The two approaches have different performance characteristics.</span></span> <span data-ttu-id="e06fd-121">Einige Transformationen werden schneller ausgeführt <xref:System.Xml.XmlReader>, wenn ein verwendet wird, und andere werden schneller ausgeführt, wenn eine <xref:System.Xml.XPath.XPathNavigator>verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="e06fd-121">Some transformations will execute faster when using an <xref:System.Xml.XmlReader>, and others will execute faster when using a <xref:System.Xml.XPath.XPathNavigator>.</span></span> <span data-ttu-id="e06fd-122">Wenn die Leistung von Bedeutung ist, empfiehlt es sich, jeden Ansatz zu experimentieren, um zu ermitteln, welche in Ihren Umständen besser geeignet ist.</span><span class="sxs-lookup"><span data-stu-id="e06fd-122">If performance is a concern, we recommend that you experiment with each approach to determine which will perform better in your circumstances.</span></span>  
  
```csharp  
  
            string xslMarkup = @"<?xml version='1.0'?>  
<xsl:stylesheet xmlns:xsl='http://www.w3.org/1999/XSL/Transform' version='1.0'>  
    <xsl:template match='/Parent'>  
        <Root>  
            <C1><xsl:value-of select='Child1'/></C1>  
            <C2><xsl:value-of select='Child2'/></C2>  
        </Root>  
    </xsl:template>  
</xsl:stylesheet>";  
  
XDocument xmlTree = new XDocument(  
    new XElement("Parent",  
        new XElement("Child1", "Child1 data"),  
        new XElement("Child2", "Child2 data")  
    )  
);  
  
XDocument newTree = new XDocument();  
using (XmlWriter writer = newTree.CreateWriter()) {  
    // Load the style sheet.  
    XslCompiledTransform xslt = new XslCompiledTransform();  
    xslt.Load(XmlReader.Create(new StringReader(xslMarkup)));  
  
    // Execute the transform and output the results to a writer.  
    xslt.Transform(xmlTree.CreateNavigator(), writer);  
}  
  
Console.WriteLine(newTree);  
```  
  
```vb  
  
            Dim xslMarkup As XDocument = <?xml version='1.0'?>  
                             <xsl:stylesheet xmlns:xsl='http://www.w3.org/1999/XSL/Transform' version='1.0'>  
                                 <xsl:template match='/Parent'>  
                                     <Root>  
                                         <C1><xsl:value-of select='Child1'/></C1>  
                                         <C2><xsl:value-of select='Child2'/></C2>  
                                     </Root>  
                                 </xsl:template>  
                             </xsl:stylesheet>  
  
Dim xmlTree As XDocument = <?xml version='1.0'?>  
                           <Parent>  
                               <Child1>Child1 data</Child1>  
                               <Child2>Child2 data</Child2>  
                           </Parent>  
  
Dim newTree As XDocument = New XDocument()  
  
Using writer As XmlWriter = newTree.CreateWriter()  
    ' Load the style sheet.  
    Dim xslt As XslCompiledTransform = _  
        New XslCompiledTransform()  
    xslt.Load(xslMarkup.CreateReader())  
  
    ' Execute the transform and output the results to a writer.  
    xslt.Transform(xmlTree.CreateNavigator(), writer)  
End Using  
  
Console.WriteLine(newTree)  
```  
  
 <span data-ttu-id="e06fd-123">Dieses Beispiel erzeugt die folgende Ausgabe:</span><span class="sxs-lookup"><span data-stu-id="e06fd-123">This example produces the following output:</span></span>  
  
```xml  
  
            <Root>  
  <C1>Child1 data</C1>  
  <C2>Child2 data</C2>  
</Root>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateNavigator">
      <MemberSignature Language="C#" Value="public static System.Xml.XPath.XPathNavigator CreateNavigator (this System.Xml.Linq.XNode node);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XPath.XPathNavigator CreateNavigator(class System.Xml.Linq.XNode node) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XPath.Extensions.CreateNavigator(System.Xml.Linq.XNode)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function CreateNavigator (node As XNode) As XPathNavigator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Xml::XPath::XPathNavigator ^ CreateNavigator(System::Xml::Linq::XNode ^ node);" />
      <MemberSignature Language="F#" Value="static member CreateNavigator : System.Xml.Linq.XNode -&gt; System.Xml.XPath.XPathNavigator" Usage="System.Xml.XPath.Extensions.CreateNavigator node" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath.XDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Linq</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.XPath.XPathNavigator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="System.Xml.Linq.XNode" RefType="this" />
      </Parameters>
      <Docs>
        <param name="node"><span data-ttu-id="e06fd-124">Ein <see cref="T:System.Xml.Linq.XNode" />, der XPath-Abfragen verarbeiten kann.</span><span class="sxs-lookup"><span data-stu-id="e06fd-124">An <see cref="T:System.Xml.Linq.XNode" /> that can process XPath queries.</span></span></param>
        <summary><span data-ttu-id="e06fd-125">Erstellt einen <see cref="T:System.Xml.XPath.XPathNavigator" /> für einen <see cref="T:System.Xml.Linq.XNode" />.</span><span class="sxs-lookup"><span data-stu-id="e06fd-125">Creates an <see cref="T:System.Xml.XPath.XPathNavigator" /> for an <see cref="T:System.Xml.Linq.XNode" />.</span></span></summary>
        <returns><span data-ttu-id="e06fd-126">Ein <see cref="T:System.Xml.XPath.XPathNavigator" />, der XPath-Abfragen verarbeiten kann.</span><span class="sxs-lookup"><span data-stu-id="e06fd-126">An <see cref="T:System.Xml.XPath.XPathNavigator" /> that can process XPath queries.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e06fd-127">Die XML-Struktur kann nicht mit dem bearbeitet <xref:System.Xml.XPath.XPathNavigator> werden, der von dieser Methode zurückgegeben wird.</span><span class="sxs-lookup"><span data-stu-id="e06fd-127">You cannot edit the XML tree by using the <xref:System.Xml.XPath.XPathNavigator> that is returned by this method.</span></span> <span data-ttu-id="e06fd-128">Die <xref:System.Xml.XPath.XPathNavigator.CanEdit%2A>-Eigenschaft gibt `false` zurück.</span><span class="sxs-lookup"><span data-stu-id="e06fd-128">The <xref:System.Xml.XPath.XPathNavigator.CanEdit%2A> property returns `false`.</span></span>  
  
 <span data-ttu-id="e06fd-129">Für einen <xref:System.Xml.XPath.XPathNavigator> <xref:System.Xml.Linq.XDocumentType> Knoten kann kein erstellt werden.</span><span class="sxs-lookup"><span data-stu-id="e06fd-129">You cannot create an <xref:System.Xml.XPath.XPathNavigator> for a <xref:System.Xml.Linq.XDocumentType> node.</span></span> <span data-ttu-id="e06fd-130">Dokumenttypen sind nicht Teil des XPath-Datenmodells.</span><span class="sxs-lookup"><span data-stu-id="e06fd-130">Document types do not participate in the XPath data model.</span></span>  
  
 <span data-ttu-id="e06fd-131">Namespace Deklarationen werden von links nach rechts gemeldet.</span><span class="sxs-lookup"><span data-stu-id="e06fd-131">Namespace declarations are reported from left to right.</span></span> <span data-ttu-id="e06fd-132">Im Gegensatz dazu werden <xref:System.Xml.XmlDocument> für Namespaces von rechts nach Links gemeldet.</span><span class="sxs-lookup"><span data-stu-id="e06fd-132">In contrast, for <xref:System.Xml.XmlDocument> namespaces are reported from right to left.</span></span> <span data-ttu-id="e06fd-133">Dies ist ein konformes Verhalten, da Namespace Deklarationen nicht im XPath-Datenmodell geordnet sind.</span><span class="sxs-lookup"><span data-stu-id="e06fd-133">This is conformant behavior because namespace declarations are not ordered in the XPath data model.</span></span>  
  
 <span data-ttu-id="e06fd-134">Die- <xref:System.Xml.XPath.XPathNavigator.MoveToId%2A> Methode wird für Navigatoren, die von dieser Methode zurückgegeben werden, nicht unterstützt.</span><span class="sxs-lookup"><span data-stu-id="e06fd-134">The method <xref:System.Xml.XPath.XPathNavigator.MoveToId%2A> is not supported for navigators that are returned by this method.</span></span>  
  
 <span data-ttu-id="e06fd-135">Sie können diese Methode verwenden, um eine XSLT-Transformation auszuführen.</span><span class="sxs-lookup"><span data-stu-id="e06fd-135">You can use this method to perform an XSLT transformation.</span></span> <span data-ttu-id="e06fd-136">Sie können eine XML-Struktur erstellen, einen <xref:System.Xml.XPath.XPathNavigator> aus der XML-Struktur erstellen, ein neues Dokument erstellen und einen <xref:System.Xml.XmlWriter> erstellen, der in das neue Dokument schreibt.</span><span class="sxs-lookup"><span data-stu-id="e06fd-136">You can create an XML tree, create an <xref:System.Xml.XPath.XPathNavigator> from the XML tree, create a new document, and create a <xref:System.Xml.XmlWriter> that will write into the new document.</span></span> <span data-ttu-id="e06fd-137">Anschließend können Sie die XSLT <xref:System.Xml.XPath.XPathNavigator> -Transformation aufrufen und <xref:System.Xml.XmlWriter> an die Transformation übergeben.</span><span class="sxs-lookup"><span data-stu-id="e06fd-137">Then, you can invoke the XSLT transformation, passing the <xref:System.Xml.XPath.XPathNavigator> and <xref:System.Xml.XmlWriter> to the transform.</span></span> <span data-ttu-id="e06fd-138">Nach erfolgreichem Abschluss der Transformation wird die neue XML-Struktur mit den Ergebnissen der Transformation aufgefüllt.</span><span class="sxs-lookup"><span data-stu-id="e06fd-138">After the transformation successfully completes, the new XML tree is populated with the results of the transformation.</span></span>  
  
 <span data-ttu-id="e06fd-139">Zum Ausführen einer XSLT-Transformation können Sie entweder <xref:System.Xml.XmlReader> <xref:System.Xml.XPath.XPathNavigator>oder verwenden.</span><span class="sxs-lookup"><span data-stu-id="e06fd-139">To perform an XSLT transformation, you can use either an <xref:System.Xml.XmlReader> or an <xref:System.Xml.XPath.XPathNavigator>.</span></span> <span data-ttu-id="e06fd-140">Die beiden Ansätze weisen unterschiedliche Leistungsmerkmale auf.</span><span class="sxs-lookup"><span data-stu-id="e06fd-140">The two approaches have different performance characteristics.</span></span> <span data-ttu-id="e06fd-141">Einige Transformationen werden schneller ausgeführt <xref:System.Xml.XmlReader>, wenn ein verwendet wird, und andere werden schneller ausgeführt, wenn eine <xref:System.Xml.XPath.XPathNavigator>verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="e06fd-141">Some transformations will execute faster when using an <xref:System.Xml.XmlReader>, and others will execute faster when using a <xref:System.Xml.XPath.XPathNavigator>.</span></span> <span data-ttu-id="e06fd-142">Wenn die Leistung von Bedeutung ist, empfiehlt es sich, jeden Ansatz zu experimentieren, um zu ermitteln, welche in Ihren Umständen besser geeignet ist.</span><span class="sxs-lookup"><span data-stu-id="e06fd-142">If performance is a concern, we recommend that you experiment with each approach to determine which will perform better in your circumstances.</span></span>  
  
   
  
## Examples  
  
```csharp  
  
                string xslMarkup = @"<?xml version='1.0'?>  
<xsl:stylesheet xmlns:xsl='http://www.w3.org/1999/XSL/Transform' version='1.0'>  
    <xsl:template match='/Parent'>  
        <Root>  
            <C1><xsl:value-of select='Child1'/></C1>  
            <C2><xsl:value-of select='Child2'/></C2>  
        </Root>  
    </xsl:template>  
</xsl:stylesheet>";  
  
XDocument xmlTree = new XDocument(  
    new XElement("Parent",  
        new XElement("Child1", "Child1 data"),  
        new XElement("Child2", "Child2 data")  
    )  
);  
  
XDocument newTree = new XDocument();  
using (XmlWriter writer = newTree.CreateWriter()) {  
    // Load the style sheet.  
    XslCompiledTransform xslt = new XslCompiledTransform();  
    xslt.Load(XmlReader.Create(new StringReader(xslMarkup)));  
  
    // Execute the transform and output the results to a writer.  
    xslt.Transform(xmlTree.CreateNavigator(), writer);  
}  
  
Console.WriteLine(newTree);  
```  
  
```vb  
  
                Dim xslMarkup As XDocument = _  
    <?xml version='1.0'?>  
    <xsl:stylesheet xmlns:xsl='http://www.w3.org/1999/XSL/Transform' version='1.0'>  
        <xsl:template match='/Parent'>  
            <Root>  
                <C1><xsl:value-of select='Child1'/></C1>  
                <C2><xsl:value-of select='Child2'/></C2>  
            </Root>  
        </xsl:template>  
    </xsl:stylesheet>  
  
Dim xmlTree As XDocument = _  
    <?xml version='1.0'?>  
    <Parent>  
        <Child1>Child1 data</Child1>  
        <Child2>Child2 data</Child2>  
    </Parent>  
  
Dim newTree As XDocument = New XDocument()  
  
Using writer As XmlWriter = newTree.CreateWriter()  
    ' Load the style sheet.  
    Dim xslt As XslCompiledTransform = _  
        New XslCompiledTransform()  
    xslt.Load(xslMarkup.CreateReader())  
  
    ' Execute the transform and output the results to a writer.  
    xslt.Transform(xmlTree.CreateNavigator(), writer)  
End Using  
  
Console.WriteLine(newTree)  
```  
  
 <span data-ttu-id="e06fd-143">Dieses Beispiel erzeugt die folgende Ausgabe:</span><span class="sxs-lookup"><span data-stu-id="e06fd-143">This example produces the following output:</span></span>  
  
```xml  
  
                <Root>  
  <C1>Child1 data</C1>  
  <C2>Child2 data</C2>  
</Root>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateNavigator">
      <MemberSignature Language="C#" Value="public static System.Xml.XPath.XPathNavigator CreateNavigator (this System.Xml.Linq.XNode node, System.Xml.XmlNameTable nameTable);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XPath.XPathNavigator CreateNavigator(class System.Xml.Linq.XNode node, class System.Xml.XmlNameTable nameTable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XPath.Extensions.CreateNavigator(System.Xml.Linq.XNode,System.Xml.XmlNameTable)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function CreateNavigator (node As XNode, nameTable As XmlNameTable) As XPathNavigator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Xml::XPath::XPathNavigator ^ CreateNavigator(System::Xml::Linq::XNode ^ node, System::Xml::XmlNameTable ^ nameTable);" />
      <MemberSignature Language="F#" Value="static member CreateNavigator : System.Xml.Linq.XNode * System.Xml.XmlNameTable -&gt; System.Xml.XPath.XPathNavigator" Usage="System.Xml.XPath.Extensions.CreateNavigator (node, nameTable)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath.XDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Linq</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XPath.XPathNavigator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="System.Xml.Linq.XNode" RefType="this" />
        <Parameter Name="nameTable" Type="System.Xml.XmlNameTable" />
      </Parameters>
      <Docs>
        <param name="node"><span data-ttu-id="e06fd-144">Ein <see cref="T:System.Xml.Linq.XNode" />, der eine XPath-Abfrage verarbeiten kann.</span><span class="sxs-lookup"><span data-stu-id="e06fd-144">An <see cref="T:System.Xml.Linq.XNode" /> that can process an XPath query.</span></span></param>
        <param name="nameTable"><span data-ttu-id="e06fd-145">Eine <see cref="T:System.Xml.XmlNameTable" />, die vom <see cref="T:System.Xml.XPath.XPathNavigator" /> verwendet werden soll.</span><span class="sxs-lookup"><span data-stu-id="e06fd-145">A <see cref="T:System.Xml.XmlNameTable" /> to be used by <see cref="T:System.Xml.XPath.XPathNavigator" />.</span></span></param>
        <summary><span data-ttu-id="e06fd-146">Erstellt einen <see cref="T:System.Xml.XPath.XPathNavigator" /> für einen <see cref="T:System.Xml.Linq.XNode" />.</span><span class="sxs-lookup"><span data-stu-id="e06fd-146">Creates an <see cref="T:System.Xml.XPath.XPathNavigator" /> for an <see cref="T:System.Xml.Linq.XNode" />.</span></span> <span data-ttu-id="e06fd-147">Die <see cref="T:System.Xml.XmlNameTable" /> ermöglicht eine effizientere Verarbeitung von XPath-Ausdrücken.</span><span class="sxs-lookup"><span data-stu-id="e06fd-147">The <see cref="T:System.Xml.XmlNameTable" /> enables more efficient XPath expression processing.</span></span></summary>
        <returns><span data-ttu-id="e06fd-148">Ein <see cref="T:System.Xml.XPath.XPathNavigator" />, der XPath-Abfragen verarbeiten kann.</span><span class="sxs-lookup"><span data-stu-id="e06fd-148">An <see cref="T:System.Xml.XPath.XPathNavigator" /> that can process XPath queries.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e06fd-149">Die XML-Struktur kann nicht mit dem <xref:System.Xml.XPath.XPathNavigator> bearbeitet werden, der von dieser Methode zurückgegeben wird.</span><span class="sxs-lookup"><span data-stu-id="e06fd-149">You cannot edit the XML tree using the <xref:System.Xml.XPath.XPathNavigator> that is returned by this method.</span></span> <span data-ttu-id="e06fd-150">Die <xref:System.Xml.XPath.XPathNavigator.CanEdit%2A>-Eigenschaft gibt `false` zurück.</span><span class="sxs-lookup"><span data-stu-id="e06fd-150">The <xref:System.Xml.XPath.XPathNavigator.CanEdit%2A> property returns `false`.</span></span>  
  
 <span data-ttu-id="e06fd-151">Für einen <xref:System.Xml.XPath.XPathNavigator> <xref:System.Xml.Linq.XDocumentType> Knoten kann kein erstellt werden.</span><span class="sxs-lookup"><span data-stu-id="e06fd-151">You cannot create an <xref:System.Xml.XPath.XPathNavigator> for a <xref:System.Xml.Linq.XDocumentType> node.</span></span> <span data-ttu-id="e06fd-152">Dokumenttypen sind nicht Teil des XPath-Datenmodells.</span><span class="sxs-lookup"><span data-stu-id="e06fd-152">Document types do not participate in the XPath data model.</span></span>  
  
 <span data-ttu-id="e06fd-153">Namespace Deklarationen werden von links nach rechts gemeldet.</span><span class="sxs-lookup"><span data-stu-id="e06fd-153">Namespace declarations are reported from left to right.</span></span> <span data-ttu-id="e06fd-154">Im Gegensatz dazu werden <xref:System.Xml.XmlDocument> für Namespaces von rechts nach Links gemeldet.</span><span class="sxs-lookup"><span data-stu-id="e06fd-154">In contrast, for <xref:System.Xml.XmlDocument> namespaces are reported from right to left.</span></span> <span data-ttu-id="e06fd-155">Dies ist ein konformes Verhalten, da Namespace Deklarationen nicht im XPath-Datenmodell geordnet sind.</span><span class="sxs-lookup"><span data-stu-id="e06fd-155">This is conformant behavior because namespace declarations are not ordered in the XPath data model.</span></span>  
  
 <span data-ttu-id="e06fd-156">Die- <xref:System.Xml.XPath.XPathNavigator.MoveToId%2A> Methode wird für Navigatoren, die von dieser Methode zurückgegeben werden, nicht unterstützt.</span><span class="sxs-lookup"><span data-stu-id="e06fd-156">The method <xref:System.Xml.XPath.XPathNavigator.MoveToId%2A> is not supported for navigators that are returned by this method.</span></span>  
  
 <span data-ttu-id="e06fd-157">Wenn Sie mit dieser <xref:System.Xml.XmlNameTable> Methode zum Erstellen des <xref:System.Xml.XPath.XPathNavigator>verwenden, erhalten Sie bei der Auswertung von XPath-Ausdrücken eine bessere Leistung.</span><span class="sxs-lookup"><span data-stu-id="e06fd-157">If you use an <xref:System.Xml.XmlNameTable> with this method to create the <xref:System.Xml.XPath.XPathNavigator>, you will get better performance when evaluating XPath expressions.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="XPathEvaluate">
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath.XDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e06fd-158">Wertet einen XPath-Ausdruck aus.</span><span class="sxs-lookup"><span data-stu-id="e06fd-158">Evaluates an XPath expression.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e06fd-159">Obwohl die Reihenfolge der zurückgegebenen Auflistungen in der XML XPath Language 1,0-Empfehlung nicht angegeben ist, gibt diese Erweiterungsmethode Knoten in Dokument Reihenfolge zurück.</span><span class="sxs-lookup"><span data-stu-id="e06fd-159">Although the ordering of returned collections is not specified in the XML XPath Language 1.0 Recommendation, this extension method returns nodes in document order.</span></span>  
  
 <span data-ttu-id="e06fd-160">Beachten Sie, dass Knoten in Dokument Reihenfolge zurückgegeben werden, auch wenn Sie eine `preceding-sibling` umgekehrte `ancestor-or-self`Achse verwenden, z. b. oder.</span><span class="sxs-lookup"><span data-stu-id="e06fd-160">Note that nodes are returned in document order even when you use a reverse axis, such as `preceding-sibling` or `ancestor-or-self`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="XPathEvaluate">
      <MemberSignature Language="C#" Value="public static object XPathEvaluate (this System.Xml.Linq.XNode node, string expression);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object XPathEvaluate(class System.Xml.Linq.XNode node, string expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XPath.Extensions.XPathEvaluate(System.Xml.Linq.XNode,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function XPathEvaluate (node As XNode, expression As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Object ^ XPathEvaluate(System::Xml::Linq::XNode ^ node, System::String ^ expression);" />
      <MemberSignature Language="F#" Value="static member XPathEvaluate : System.Xml.Linq.XNode * string -&gt; obj" Usage="System.Xml.XPath.Extensions.XPathEvaluate (node, expression)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath.XDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Linq</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="System.Xml.Linq.XNode" RefType="this" />
        <Parameter Name="expression" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="node"><span data-ttu-id="e06fd-161">Der <see cref="T:System.Xml.Linq.XNode" />, in dem der XPath-Ausdruck ausgewertet wird.</span><span class="sxs-lookup"><span data-stu-id="e06fd-161">The <see cref="T:System.Xml.Linq.XNode" /> on which to evaluate the XPath expression.</span></span></param>
        <param name="expression"><span data-ttu-id="e06fd-162">Ein <see cref="T:System.String" />, der einen XPath-Ausdruck enthält.</span><span class="sxs-lookup"><span data-stu-id="e06fd-162">A <see cref="T:System.String" /> that contains an XPath expression.</span></span></param>
        <summary><span data-ttu-id="e06fd-163">Wertet einen XPath-Ausdruck aus.</span><span class="sxs-lookup"><span data-stu-id="e06fd-163">Evaluates an XPath expression.</span></span></summary>
        <returns><span data-ttu-id="e06fd-164">Ein Objekt, das einen <see langword="bool" />, einen <see langword="double" />, einen <see langword="string" /> oder einen <see cref="T:System.Collections.Generic.IEnumerable`1" /> enthalten kann.</span><span class="sxs-lookup"><span data-stu-id="e06fd-164">An object that can contain a <see langword="bool" />, a <see langword="double" />, a <see langword="string" />, or an <see cref="T:System.Collections.Generic.IEnumerable`1" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e06fd-165">Wenn die Auflistung eine Enumeration von Elementen oder Attributen ist, können Sie den `Cast` -Operator verwenden, um eine Auflistung von <xref:System.Xml.Linq.XAttribute> <xref:System.Xml.Linq.XElement> oder zu erhalten.</span><span class="sxs-lookup"><span data-stu-id="e06fd-165">If the collection is an enumeration of elements or attributes, you can use the `Cast` operator to get a collection of <xref:System.Xml.Linq.XElement> or <xref:System.Xml.Linq.XAttribute>.</span></span>  
  
 <span data-ttu-id="e06fd-166">Obwohl die Reihenfolge der zurückgegebenen Auflistungen in der XML XPath Language 1,0-Empfehlung nicht angegeben ist, gibt diese Erweiterungsmethode Knoten in Dokument Reihenfolge zurück.</span><span class="sxs-lookup"><span data-stu-id="e06fd-166">Although the ordering of returned collections is not specified in the XML XPath Language 1.0 Recommendation, this extension method returns nodes in document order.</span></span>  
  
 <span data-ttu-id="e06fd-167">Beachten Sie, dass Knoten in Dokument Reihenfolge zurückgegeben werden, auch wenn Sie eine `preceding-sibling` umgekehrte `ancestor-or-self`Achse verwenden, z. b. oder.</span><span class="sxs-lookup"><span data-stu-id="e06fd-167">Note that nodes are returned in document order even when you use a reverse axis, such as `preceding-sibling` or `ancestor-or-self`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e06fd-168">Im folgenden Beispiel wird eine kleine XML-Struktur mit einem-Attribut erstellt und <xref:System.Xml.XPath.Extensions.XPathEvaluate%2A> dann die-Methode verwendet, um das-Attribut abzurufen.</span><span class="sxs-lookup"><span data-stu-id="e06fd-168">The following example creates a small XML tree with an attribute, then uses the <xref:System.Xml.XPath.Extensions.XPathEvaluate%2A> method to retrieve the attribute.</span></span>  
  
```csharp  
  
                String xml = "<root a='value'/>";  
XDocument d = XDocument.Parse(xml);  
IEnumerable att = (IEnumerable)d.XPathEvaluate("/root/@a");  
Console.WriteLine(att.Cast<XAttribute>().FirstOrDefault());  
```  
  
```vb  
  
                Dim d As XDocument = _  
    <?xml version='1.0'?>  
    <root a='value'/>  
Dim att As IEnumerable = CType(d.XPathEvaluate("/root/@a"), IEnumerable)  
Console.WriteLine(att.Cast(Of XAttribute)().FirstOrDefault())  
```  
  
 <span data-ttu-id="e06fd-169">Dieses Beispiel erzeugt die folgende Ausgabe:</span><span class="sxs-lookup"><span data-stu-id="e06fd-169">This example produces the following output:</span></span>  
  
```  
a="value"  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XPathEvaluate">
      <MemberSignature Language="C#" Value="public static object XPathEvaluate (this System.Xml.Linq.XNode node, string expression, System.Xml.IXmlNamespaceResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object XPathEvaluate(class System.Xml.Linq.XNode node, string expression, class System.Xml.IXmlNamespaceResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XPath.Extensions.XPathEvaluate(System.Xml.Linq.XNode,System.String,System.Xml.IXmlNamespaceResolver)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function XPathEvaluate (node As XNode, expression As String, resolver As IXmlNamespaceResolver) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Object ^ XPathEvaluate(System::Xml::Linq::XNode ^ node, System::String ^ expression, System::Xml::IXmlNamespaceResolver ^ resolver);" />
      <MemberSignature Language="F#" Value="static member XPathEvaluate : System.Xml.Linq.XNode * string * System.Xml.IXmlNamespaceResolver -&gt; obj" Usage="System.Xml.XPath.Extensions.XPathEvaluate (node, expression, resolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath.XDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Linq</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="System.Xml.Linq.XNode" RefType="this" />
        <Parameter Name="expression" Type="System.String" />
        <Parameter Name="resolver" Type="System.Xml.IXmlNamespaceResolver" />
      </Parameters>
      <Docs>
        <param name="node"><span data-ttu-id="e06fd-170">Der <see cref="T:System.Xml.Linq.XNode" />, in dem der XPath-Ausdruck ausgewertet wird.</span><span class="sxs-lookup"><span data-stu-id="e06fd-170">The <see cref="T:System.Xml.Linq.XNode" /> on which to evaluate the XPath expression.</span></span></param>
        <param name="expression"><span data-ttu-id="e06fd-171">Ein <see cref="T:System.String" />, der einen XPath-Ausdruck enthält.</span><span class="sxs-lookup"><span data-stu-id="e06fd-171">A <see cref="T:System.String" /> that contains an XPath expression.</span></span></param>
        <param name="resolver"><span data-ttu-id="e06fd-172">Ein <see cref="T:System.Xml.IXmlNamespaceResolver" /> für die Namespacepräfixe im XPath-Ausdruck.</span><span class="sxs-lookup"><span data-stu-id="e06fd-172">A <see cref="T:System.Xml.IXmlNamespaceResolver" /> for the namespace prefixes in the XPath expression.</span></span></param>
        <summary><span data-ttu-id="e06fd-173">Wertet einen XPath-Ausdruck aus und löst Namespacepräfixe mit dem angegebenen <see cref="T:System.Xml.IXmlNamespaceResolver" /> auf.</span><span class="sxs-lookup"><span data-stu-id="e06fd-173">Evaluates an XPath expression, resolving namespace prefixes using the specified <see cref="T:System.Xml.IXmlNamespaceResolver" />.</span></span></summary>
        <returns><span data-ttu-id="e06fd-174">Ein Objekt, das das Ergebnis aus der Auswertung des Ausdrucks enthält.</span><span class="sxs-lookup"><span data-stu-id="e06fd-174">An object that contains the result of evaluating the expression.</span></span> <span data-ttu-id="e06fd-175">Das Objekt kann ein <see langword="bool" />, ein <see langword="double" />, ein <see langword="string" /> oder ein <see cref="T:System.Collections.Generic.IEnumerable`1" /> sein.</span><span class="sxs-lookup"><span data-stu-id="e06fd-175">The object can be a <see langword="bool" />, a <see langword="double" />, a <see langword="string" />, or an <see cref="T:System.Collections.Generic.IEnumerable`1" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e06fd-176">Mit dieser Methode können Sie XPath-Ausdrücke auswerten, die Namespace Präfixe enthalten.</span><span class="sxs-lookup"><span data-stu-id="e06fd-176">You can use this method to evaluate XPath expressions that contain namespace prefixes.</span></span>  
  
 <span data-ttu-id="e06fd-177">Obwohl die Reihenfolge der zurückgegebenen Auflistungen in der XML XPath Language 1,0-Empfehlung nicht angegeben ist, gibt diese Erweiterungsmethode Knoten in Dokument Reihenfolge zurück.</span><span class="sxs-lookup"><span data-stu-id="e06fd-177">Although the ordering of returned collections is not specified in the XML XPath Language 1.0 Recommendation, this extension method returns nodes in document order.</span></span>  
  
 <span data-ttu-id="e06fd-178">Beachten Sie, dass Knoten in Dokument Reihenfolge zurückgegeben werden, auch wenn Sie eine `preceding-sibling` umgekehrte `ancestor-or-self`Achse verwenden, z. b. oder.</span><span class="sxs-lookup"><span data-stu-id="e06fd-178">Note that nodes are returned in document order even when you use a reverse axis, such as `preceding-sibling` or `ancestor-or-self`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e06fd-179">Im folgenden Beispiel wird eine XML-Struktur erstellt, die einen Namespace enthält.</span><span class="sxs-lookup"><span data-stu-id="e06fd-179">The following example creates an XML tree that contains a namespace.</span></span> <span data-ttu-id="e06fd-180">Zum Lesen des XML-Dokuments kommt dabei ein <xref:System.Xml.XmlReader> zum Einsatz.</span><span class="sxs-lookup"><span data-stu-id="e06fd-180">It uses an <xref:System.Xml.XmlReader> to read the XML document.</span></span> <span data-ttu-id="e06fd-181">Anschließend werden eine <xref:System.Xml.XmlNameTable> aus dem <xref:System.Xml.XmlReader> und ein <xref:System.Xml.XmlNamespaceManager> aus der <xref:System.Xml.XmlNameTable> abgerufen.</span><span class="sxs-lookup"><span data-stu-id="e06fd-181">It then gets an <xref:System.Xml.XmlNameTable> from the <xref:System.Xml.XmlReader>, and an <xref:System.Xml.XmlNamespaceManager> from the <xref:System.Xml.XmlNameTable>.</span></span> <span data-ttu-id="e06fd-182">Wenn ein Element <xref:System.Xml.XmlNamespaceManager> ausgewählt wird, wird das verwendet.</span><span class="sxs-lookup"><span data-stu-id="e06fd-182">It uses the <xref:System.Xml.XmlNamespaceManager> when selecting an element.</span></span>  
  
```csharp  
  
                string markup =  
@"<aw:Root xmlns:aw='http://www.adventure-works.com'>  
    <aw:Child1 aw:Att='attdata'>child one data 1</aw:Child1>  
</aw:Root>";  
XmlReader reader = XmlReader.Create(new StringReader(markup));  
XElement root = XElement.Load(reader);  
XmlNameTable nameTable = reader.NameTable;  
XmlNamespaceManager namespaceManager = new XmlNamespaceManager(nameTable);  
namespaceManager.AddNamespace("aw", "http://www.adventure-works.com");  
IEnumerable atts = (IEnumerable)root.XPathEvaluate("./aw:Child1/@aw:Att", namespaceManager);  
IEnumerable<XAttribute> attList = atts.Cast<XAttribute>();  
XAttribute att = attList.First();  
Console.WriteLine(att);  
```  
  
```vb  
  
                Dim markup As XElement = _  
    <aw:Root xmlns:aw='http://www.adventure-works.com'>  
        <aw:Child1 aw:Att='attdata'>child one data 1</aw:Child1>  
    </aw:Root>  
Dim reader As XmlReader = markup.CreateReader  
Dim nameTable As XmlNameTable = reader.NameTable  
Dim namespaceManager As XmlNamespaceManager = New XmlNamespaceManager(nameTable)  
namespaceManager.AddNamespace("aw", "http://www.adventure-works.com")  
Dim atts As IEnumerable = CType(markup.XPathEvaluate("./aw:Child1/@aw:Att", namespaceManager), IEnumerable)  
Dim attList As IEnumerable(Of XAttribute) = atts.Cast(Of XAttribute)()  
Dim att As XAttribute = attList.First()  
Console.WriteLine(att)  
```  
  
 <span data-ttu-id="e06fd-183">Dieses Beispiel erzeugt die folgende Ausgabe:</span><span class="sxs-lookup"><span data-stu-id="e06fd-183">This example produces the following output:</span></span>  
  
```  
aw:Att="attdata"  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="XPathSelectElement">
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath.XDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e06fd-184">Wählt mithilfe eines XPath-Ausdrucks ein <see cref="T:System.Xml.Linq.XElement" /> aus.</span><span class="sxs-lookup"><span data-stu-id="e06fd-184">Selects an <see cref="T:System.Xml.Linq.XElement" /> using a XPath expression.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="XPathSelectElement">
      <MemberSignature Language="C#" Value="public static System.Xml.Linq.XElement XPathSelectElement (this System.Xml.Linq.XNode node, string expression);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.Linq.XElement XPathSelectElement(class System.Xml.Linq.XNode node, string expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XPath.Extensions.XPathSelectElement(System.Xml.Linq.XNode,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function XPathSelectElement (node As XNode, expression As String) As XElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Xml::Linq::XElement ^ XPathSelectElement(System::Xml::Linq::XNode ^ node, System::String ^ expression);" />
      <MemberSignature Language="F#" Value="static member XPathSelectElement : System.Xml.Linq.XNode * string -&gt; System.Xml.Linq.XElement" Usage="System.Xml.XPath.Extensions.XPathSelectElement (node, expression)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath.XDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Linq</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.Linq.XElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="System.Xml.Linq.XNode" RefType="this" />
        <Parameter Name="expression" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="node"><span data-ttu-id="e06fd-185">Der <see cref="T:System.Xml.Linq.XNode" />, in dem der XPath-Ausdruck ausgewertet wird.</span><span class="sxs-lookup"><span data-stu-id="e06fd-185">The <see cref="T:System.Xml.Linq.XNode" /> on which to evaluate the XPath expression.</span></span></param>
        <param name="expression"><span data-ttu-id="e06fd-186">Ein <see cref="T:System.String" />, der einen XPath-Ausdruck enthält.</span><span class="sxs-lookup"><span data-stu-id="e06fd-186">A <see cref="T:System.String" /> that contains an XPath expression.</span></span></param>
        <summary><span data-ttu-id="e06fd-187">Wählt mithilfe eines XPath-Ausdrucks ein <see cref="T:System.Xml.Linq.XElement" /> aus.</span><span class="sxs-lookup"><span data-stu-id="e06fd-187">Selects an <see cref="T:System.Xml.Linq.XElement" /> using a XPath expression.</span></span></summary>
        <returns><span data-ttu-id="e06fd-188">Ein <see cref="T:System.Xml.Linq.XElement" /> oder NULL.</span><span class="sxs-lookup"><span data-stu-id="e06fd-188">An <see cref="T:System.Xml.Linq.XElement" />, or null.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="e06fd-189">Im folgenden Beispiel wird eine kleine XML-Struktur erstellt <xref:System.Xml.XPath.Extensions.XPathSelectElement%2A> und verwendet, um ein einzelnes Element auszuwählen.</span><span class="sxs-lookup"><span data-stu-id="e06fd-189">The following example creates a small XML tree and uses <xref:System.Xml.XPath.Extensions.XPathSelectElement%2A> to select a single element.</span></span>  
  
```csharp  
  
                XElement root = new XElement("Root",  
    new XElement("Child1", 1),  
    new XElement("Child2", 2),  
    new XElement("Child3", 3),  
    new XElement("Child4", 4),  
    new XElement("Child5", 5),  
    new XElement("Child6", 6)  
);  
XElement el = root.XPathSelectElement("./Child4");  
Console.WriteLine(el);  
```  
  
```vb  
  
                Dim root As XElement = _  
    <Root>  
        <Child1>1</Child1>  
        <Child2>2</Child2>  
        <Child3>3</Child3>  
        <Child4>4</Child4>  
        <Child5>5</Child5>  
        <Child6>6</Child6>  
    </Root>  
Dim el As XElement = root.XPathSelectElement("./Child4")  
Console.WriteLine(el)  
```  
  
 <span data-ttu-id="e06fd-190">Dieses Beispiel erzeugt die folgende Ausgabe:</span><span class="sxs-lookup"><span data-stu-id="e06fd-190">This example produces the following output:</span></span>  
  
```xml  
<Child4>4</Child4>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XPathSelectElement">
      <MemberSignature Language="C#" Value="public static System.Xml.Linq.XElement XPathSelectElement (this System.Xml.Linq.XNode node, string expression, System.Xml.IXmlNamespaceResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.Linq.XElement XPathSelectElement(class System.Xml.Linq.XNode node, string expression, class System.Xml.IXmlNamespaceResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XPath.Extensions.XPathSelectElement(System.Xml.Linq.XNode,System.String,System.Xml.IXmlNamespaceResolver)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function XPathSelectElement (node As XNode, expression As String, resolver As IXmlNamespaceResolver) As XElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Xml::Linq::XElement ^ XPathSelectElement(System::Xml::Linq::XNode ^ node, System::String ^ expression, System::Xml::IXmlNamespaceResolver ^ resolver);" />
      <MemberSignature Language="F#" Value="static member XPathSelectElement : System.Xml.Linq.XNode * string * System.Xml.IXmlNamespaceResolver -&gt; System.Xml.Linq.XElement" Usage="System.Xml.XPath.Extensions.XPathSelectElement (node, expression, resolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath.XDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Linq</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Linq.XElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="System.Xml.Linq.XNode" RefType="this" />
        <Parameter Name="expression" Type="System.String" />
        <Parameter Name="resolver" Type="System.Xml.IXmlNamespaceResolver" />
      </Parameters>
      <Docs>
        <param name="node"><span data-ttu-id="e06fd-191">Der <see cref="T:System.Xml.Linq.XNode" />, in dem der XPath-Ausdruck ausgewertet wird.</span><span class="sxs-lookup"><span data-stu-id="e06fd-191">The <see cref="T:System.Xml.Linq.XNode" /> on which to evaluate the XPath expression.</span></span></param>
        <param name="expression"><span data-ttu-id="e06fd-192">Ein <see cref="T:System.String" />, der einen XPath-Ausdruck enthält.</span><span class="sxs-lookup"><span data-stu-id="e06fd-192">A <see cref="T:System.String" /> that contains an XPath expression.</span></span></param>
        <param name="resolver"><span data-ttu-id="e06fd-193">Ein <see cref="T:System.Xml.IXmlNamespaceResolver" /> für die Namespacepräfixe im XPath-Ausdruck.</span><span class="sxs-lookup"><span data-stu-id="e06fd-193">An <see cref="T:System.Xml.IXmlNamespaceResolver" /> for the namespace prefixes in the XPath expression.</span></span></param>
        <summary><span data-ttu-id="e06fd-194">Wählt mithilfe eines XPath-Ausdrucks ein <see cref="T:System.Xml.Linq.XElement" /> aus und löst Namespacepräfixe mit dem angegebenen <see cref="T:System.Xml.IXmlNamespaceResolver" /> auf.</span><span class="sxs-lookup"><span data-stu-id="e06fd-194">Selects an <see cref="T:System.Xml.Linq.XElement" /> using a XPath expression, resolving namespace prefixes using the specified <see cref="T:System.Xml.IXmlNamespaceResolver" />.</span></span></summary>
        <returns><span data-ttu-id="e06fd-195">Ein <see cref="T:System.Xml.Linq.XElement" /> oder NULL.</span><span class="sxs-lookup"><span data-stu-id="e06fd-195">An <see cref="T:System.Xml.Linq.XElement" />, or null.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e06fd-196">Mit dieser Methode können Sie XPath-Ausdrücke auswerten, die Namespace Präfixe enthalten.</span><span class="sxs-lookup"><span data-stu-id="e06fd-196">You can use this method to evaluate XPath expressions that contain namespace prefixes.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e06fd-197">Im folgenden Beispiel wird eine XML-Struktur erstellt, die einen Namespace enthält.</span><span class="sxs-lookup"><span data-stu-id="e06fd-197">The following example creates an XML tree that contains a namespace.</span></span> <span data-ttu-id="e06fd-198">Zum Lesen des XML-Dokuments kommt dabei ein <xref:System.Xml.XmlReader> zum Einsatz.</span><span class="sxs-lookup"><span data-stu-id="e06fd-198">It uses an <xref:System.Xml.XmlReader> to read the XML document.</span></span> <span data-ttu-id="e06fd-199">Anschließend werden eine <xref:System.Xml.XmlNameTable> aus dem <xref:System.Xml.XmlReader> und ein <xref:System.Xml.XmlNamespaceManager> aus der <xref:System.Xml.XmlNameTable> abgerufen.</span><span class="sxs-lookup"><span data-stu-id="e06fd-199">It then gets an <xref:System.Xml.XmlNameTable> from the <xref:System.Xml.XmlReader>, and an <xref:System.Xml.XmlNamespaceManager> from the <xref:System.Xml.XmlNameTable>.</span></span> <span data-ttu-id="e06fd-200">Wenn ein Element <xref:System.Xml.XmlNamespaceManager> ausgewählt wird, wird das verwendet.</span><span class="sxs-lookup"><span data-stu-id="e06fd-200">It uses the <xref:System.Xml.XmlNamespaceManager> when selecting an element.</span></span>  
  
```csharp  
  
                string markup = @"  
<aw:Root xmlns:aw='http://www.adventure-works.com'>  
    <aw:Child1>child one data</aw:Child1>  
    <aw:Child2>child two data</aw:Child2>  
</aw:Root>";  
XmlReader reader = XmlReader.Create(new StringReader(markup));  
XElement root = XElement.Load(reader);  
XmlNameTable nameTable = reader.NameTable;  
XmlNamespaceManager namespaceManager = new XmlNamespaceManager(nameTable);  
namespaceManager.AddNamespace("aw", "http://www.adventure-works.com");  
XElement child1 = root.XPathSelectElement("./aw:Child1", namespaceManager);  
Console.WriteLine(child1);  
```  
  
```vb  
  
                Dim markup As XElement = _  
    <aw:Root xmlns:aw='http://www.adventure-works.com'>  
        <aw:Child1>child one data</aw:Child1>  
        <aw:Child2>child two data</aw:Child2>  
    </aw:Root>  
Dim reader As XmlReader = markup.CreateReader  
Dim nameTable As XmlNameTable = reader.NameTable  
Dim namespaceManager As XmlNamespaceManager = New XmlNamespaceManager(nameTable)  
namespaceManager.AddNamespace("aw", "http://www.adventure-works.com")  
Dim child1 As XElement = markup.XPathSelectElement("./aw:Child1", namespaceManager)  
Console.WriteLine(child1)  
```  
  
 <span data-ttu-id="e06fd-201">Dieses Beispiel erzeugt die folgende Ausgabe:</span><span class="sxs-lookup"><span data-stu-id="e06fd-201">This example produces the following output:</span></span>  
  
```  
<aw:Child1 xmlns:aw="http://www.adventure-works.com">child one data</aw:Child1>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="XPathSelectElements">
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath.XDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e06fd-202">Wählt mithilfe eines XPath-Ausdrucks eine Auflistung von Elementen aus.</span><span class="sxs-lookup"><span data-stu-id="e06fd-202">Selects a collection of elements using an XPath expression.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e06fd-203">Obwohl die Reihenfolge der zurückgegebenen Auflistungen in der XML XPath Language 1,0-Empfehlung nicht angegeben ist, gibt diese Erweiterungsmethode Knoten in Dokument Reihenfolge zurück.</span><span class="sxs-lookup"><span data-stu-id="e06fd-203">Although the ordering of returned collections is not specified in the XML XPath Language 1.0 Recommendation, this extension method returns nodes in document order.</span></span>  
  
 <span data-ttu-id="e06fd-204">Beachten Sie, dass Knoten in Dokument Reihenfolge zurückgegeben werden, auch wenn Sie eine `preceding-sibling` umgekehrte `ancestor-or-self`Achse verwenden, z. b. oder.</span><span class="sxs-lookup"><span data-stu-id="e06fd-204">Note that nodes are returned in document order even when you use a reverse axis, such as `preceding-sibling` or `ancestor-or-self`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="XPathSelectElements">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IEnumerable&lt;System.Xml.Linq.XElement&gt; XPathSelectElements (this System.Xml.Linq.XNode node, string expression);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IEnumerable`1&lt;class System.Xml.Linq.XElement&gt; XPathSelectElements(class System.Xml.Linq.XNode node, string expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XPath.Extensions.XPathSelectElements(System.Xml.Linq.XNode,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function XPathSelectElements (node As XNode, expression As String) As IEnumerable(Of XElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::Generic::IEnumerable&lt;System::Xml::Linq::XElement ^&gt; ^ XPathSelectElements(System::Xml::Linq::XNode ^ node, System::String ^ expression);" />
      <MemberSignature Language="F#" Value="static member XPathSelectElements : System.Xml.Linq.XNode * string -&gt; seq&lt;System.Xml.Linq.XElement&gt;" Usage="System.Xml.XPath.Extensions.XPathSelectElements (node, expression)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath.XDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Linq</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Xml.Linq.XElement&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="System.Xml.Linq.XNode" RefType="this" />
        <Parameter Name="expression" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="node"><span data-ttu-id="e06fd-205">Der <see cref="T:System.Xml.Linq.XNode" />, in dem der XPath-Ausdruck ausgewertet wird.</span><span class="sxs-lookup"><span data-stu-id="e06fd-205">The <see cref="T:System.Xml.Linq.XNode" /> on which to evaluate the XPath expression.</span></span></param>
        <param name="expression"><span data-ttu-id="e06fd-206">Ein <see cref="T:System.String" />, der einen XPath-Ausdruck enthält.</span><span class="sxs-lookup"><span data-stu-id="e06fd-206">A <see cref="T:System.String" /> that contains an XPath expression.</span></span></param>
        <summary><span data-ttu-id="e06fd-207">Wählt mithilfe eines XPath-Ausdrucks eine Auflistung von Elementen aus.</span><span class="sxs-lookup"><span data-stu-id="e06fd-207">Selects a collection of elements using an XPath expression.</span></span></summary>
        <returns><span data-ttu-id="e06fd-208">Ein <see cref="T:System.Collections.Generic.IEnumerable`1" /> vom Typ <see cref="T:System.Xml.Linq.XElement" />, die die ausgewählten Elemente enthält.</span><span class="sxs-lookup"><span data-stu-id="e06fd-208">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> of <see cref="T:System.Xml.Linq.XElement" /> that contains the selected elements.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e06fd-209">Obwohl die Reihenfolge der zurückgegebenen Auflistungen in der XML XPath Language 1,0-Empfehlung nicht angegeben ist, gibt diese Erweiterungsmethode Knoten in Dokument Reihenfolge zurück.</span><span class="sxs-lookup"><span data-stu-id="e06fd-209">Although the ordering of returned collections is not specified in the XML XPath Language 1.0 Recommendation, this extension method returns nodes in document order.</span></span>  
  
 <span data-ttu-id="e06fd-210">Beachten Sie, dass Knoten in Dokument Reihenfolge zurückgegeben werden, auch wenn Sie eine `preceding-sibling` umgekehrte `ancestor-or-self`Achse verwenden, z. b. oder.</span><span class="sxs-lookup"><span data-stu-id="e06fd-210">Note that nodes are returned in document order even when you use a reverse axis, such as `preceding-sibling` or `ancestor-or-self`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e06fd-211">Das folgende Beispiel erstellt eine kleine XML-Struktur und verwendet zum Auswählen eines Satzes von Elementen <xref:System.Xml.XPath.Extensions.XPathSelectElements%2A>.</span><span class="sxs-lookup"><span data-stu-id="e06fd-211">The following example creates a small XML tree and uses <xref:System.Xml.XPath.Extensions.XPathSelectElements%2A> to select a set of elements.</span></span>  
  
```csharp  
  
                XElement root = new XElement("Root",  
    new XElement("Child1", 1),  
    new XElement("Child1", 2),  
    new XElement("Child1", 3),  
    new XElement("Child2", 4),  
    new XElement("Child2", 5),  
    new XElement("Child2", 6)  
);  
IEnumerable<XElement> list = root.XPathSelectElements("./Child2");  
foreach (XElement el in list)  
    Console.WriteLine(el);  
```  
  
```vb  
  
                Dim root As XElement = _  
    <Root>  
        <Child1>1</Child1>  
        <Child1>2</Child1>  
        <Child1>3</Child1>  
        <Child2>4</Child2>  
        <Child2>5</Child2>  
        <Child2>6</Child2>  
    </Root>  
Dim list As IEnumerable(Of XElement) = root.XPathSelectElements("./Child2")  
For Each el As XElement In list  
    Console.WriteLine(el)  
Next  
```  
  
 <span data-ttu-id="e06fd-212">Dieses Beispiel erzeugt die folgende Ausgabe:</span><span class="sxs-lookup"><span data-stu-id="e06fd-212">This example produces the following output:</span></span>  
  
```xml  
<Child2>4</Child2>  
<Child2>5</Child2>  
<Child2>6</Child2>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XPathSelectElements">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IEnumerable&lt;System.Xml.Linq.XElement&gt; XPathSelectElements (this System.Xml.Linq.XNode node, string expression, System.Xml.IXmlNamespaceResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IEnumerable`1&lt;class System.Xml.Linq.XElement&gt; XPathSelectElements(class System.Xml.Linq.XNode node, string expression, class System.Xml.IXmlNamespaceResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XPath.Extensions.XPathSelectElements(System.Xml.Linq.XNode,System.String,System.Xml.IXmlNamespaceResolver)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function XPathSelectElements (node As XNode, expression As String, resolver As IXmlNamespaceResolver) As IEnumerable(Of XElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::Generic::IEnumerable&lt;System::Xml::Linq::XElement ^&gt; ^ XPathSelectElements(System::Xml::Linq::XNode ^ node, System::String ^ expression, System::Xml::IXmlNamespaceResolver ^ resolver);" />
      <MemberSignature Language="F#" Value="static member XPathSelectElements : System.Xml.Linq.XNode * string * System.Xml.IXmlNamespaceResolver -&gt; seq&lt;System.Xml.Linq.XElement&gt;" Usage="System.Xml.XPath.Extensions.XPathSelectElements (node, expression, resolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath.XDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Linq</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Xml.Linq.XElement&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="System.Xml.Linq.XNode" RefType="this" />
        <Parameter Name="expression" Type="System.String" />
        <Parameter Name="resolver" Type="System.Xml.IXmlNamespaceResolver" />
      </Parameters>
      <Docs>
        <param name="node"><span data-ttu-id="e06fd-213">Der <see cref="T:System.Xml.Linq.XNode" />, in dem der XPath-Ausdruck ausgewertet wird.</span><span class="sxs-lookup"><span data-stu-id="e06fd-213">The <see cref="T:System.Xml.Linq.XNode" /> on which to evaluate the XPath expression.</span></span></param>
        <param name="expression"><span data-ttu-id="e06fd-214">Ein <see cref="T:System.String" />, der einen XPath-Ausdruck enthält.</span><span class="sxs-lookup"><span data-stu-id="e06fd-214">A <see cref="T:System.String" /> that contains an XPath expression.</span></span></param>
        <param name="resolver"><span data-ttu-id="e06fd-215">Ein <see cref="T:System.Xml.IXmlNamespaceResolver" /> für die Namespacepräfixe im XPath-Ausdruck.</span><span class="sxs-lookup"><span data-stu-id="e06fd-215">A <see cref="T:System.Xml.IXmlNamespaceResolver" /> for the namespace prefixes in the XPath expression.</span></span></param>
        <summary><span data-ttu-id="e06fd-216">Wählt mithilfe eines XPath-Ausdrucks eine Auflistung von Elementen aus und löst Namespacepräfixe mit dem angegebenen <see cref="T:System.Xml.IXmlNamespaceResolver" /> auf.</span><span class="sxs-lookup"><span data-stu-id="e06fd-216">Selects a collection of elements using an XPath expression, resolving namespace prefixes using the specified <see cref="T:System.Xml.IXmlNamespaceResolver" />.</span></span></summary>
        <returns><span data-ttu-id="e06fd-217">Ein <see cref="T:System.Collections.Generic.IEnumerable`1" /> vom Typ <see cref="T:System.Xml.Linq.XElement" />, die die ausgewählten Elemente enthält.</span><span class="sxs-lookup"><span data-stu-id="e06fd-217">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> of <see cref="T:System.Xml.Linq.XElement" /> that contains the selected elements.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e06fd-218">Mit dieser Methode können Sie XPath-Ausdrücke auswerten, die Namespace Präfixe enthalten.</span><span class="sxs-lookup"><span data-stu-id="e06fd-218">You can use this method to evaluate XPath expressions that contain namespace prefixes.</span></span>  
  
 <span data-ttu-id="e06fd-219">Obwohl die Reihenfolge der zurückgegebenen Auflistungen in der XML XPath Language 1,0-Empfehlung nicht angegeben ist, gibt diese Erweiterungsmethode Knoten in Dokument Reihenfolge zurück.</span><span class="sxs-lookup"><span data-stu-id="e06fd-219">Although the ordering of returned collections is not specified in the XML XPath Language 1.0 Recommendation, this extension method returns nodes in document order.</span></span>  
  
 <span data-ttu-id="e06fd-220">Beachten Sie, dass Knoten in Dokument Reihenfolge zurückgegeben werden, auch wenn Sie eine `preceding-sibling` umgekehrte `ancestor-or-self`Achse verwenden, z. b. oder.</span><span class="sxs-lookup"><span data-stu-id="e06fd-220">Note that nodes are returned in document order even when you use a reverse axis, such as `preceding-sibling` or `ancestor-or-self`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e06fd-221">In diesem Beispiel wird eine XML-Struktur erstellt, die einen Namespace enthält.</span><span class="sxs-lookup"><span data-stu-id="e06fd-221">This example creates an XML tree that contains a namespace.</span></span> <span data-ttu-id="e06fd-222">Zum Lesen des XML-Dokuments kommt dabei ein <xref:System.Xml.XmlReader> zum Einsatz.</span><span class="sxs-lookup"><span data-stu-id="e06fd-222">It uses an <xref:System.Xml.XmlReader> to read the XML document.</span></span> <span data-ttu-id="e06fd-223">Anschließend werden eine <xref:System.Xml.XmlNameTable> aus dem <xref:System.Xml.XmlReader> und ein <xref:System.Xml.XmlNamespaceManager> aus der <xref:System.Xml.XmlNameTable> abgerufen.</span><span class="sxs-lookup"><span data-stu-id="e06fd-223">It then gets an <xref:System.Xml.XmlNameTable> from the <xref:System.Xml.XmlReader>, and an <xref:System.Xml.XmlNamespaceManager> from the <xref:System.Xml.XmlNameTable>.</span></span> <span data-ttu-id="e06fd-224">Beim Auswählen der <xref:System.Xml.XmlNamespaceManager> Liste der Elemente wird der verwendet.</span><span class="sxs-lookup"><span data-stu-id="e06fd-224">It uses the <xref:System.Xml.XmlNamespaceManager> when selecting the list of elements.</span></span>  
  
```csharp  
  
                string markup = @"  
<aw:Root xmlns:aw='http://www.adventure-works.com'>  
    <aw:Child1>child one data 1</aw:Child1>  
    <aw:Child1>child one data 2</aw:Child1>  
    <aw:Child1>child one data 3</aw:Child1>  
    <aw:Child2>child two data 4</aw:Child2>  
    <aw:Child2>child two data 5</aw:Child2>  
    <aw:Child2>child two data 6</aw:Child2>  
</aw:Root>";  
XmlReader reader = XmlReader.Create(new StringReader(markup));  
XElement root = XElement.Load(reader);  
XmlNameTable nameTable = reader.NameTable;  
XmlNamespaceManager namespaceManager = new XmlNamespaceManager(nameTable);  
namespaceManager.AddNamespace("aw", "http://www.adventure-works.com");  
IEnumerable<XElement> elements = root.XPathSelectElements("./aw:Child1", namespaceManager);  
foreach (XElement el in elements)  
    Console.WriteLine(el);  
```  
  
```vb  
  
                Dim markup As XElement = _  
<aw:Root xmlns:aw="http://www.adventure-works.com">  
    <aw:Child1>child one data 1</aw:Child1>  
    <aw:Child1>child one data 2</aw:Child1>  
    <aw:Child1>child one data 3</aw:Child1>  
    <aw:Child2>child two data 4</aw:Child2>  
    <aw:Child2>child two data 5</aw:Child2>  
    <aw:Child2>child two data 6</aw:Child2>  
</aw:Root>  
Dim reader As XmlReader = markup.CreateReader  
Dim nameTable As XmlNameTable = reader.NameTable  
Dim namespaceManager As XmlNamespaceManager = New XmlNamespaceManager(nameTable)  
namespaceManager.AddNamespace("aw", "http://www.adventure-works.com")  
Dim elements As IEnumerable(Of XElement) = markup.XPathSelectElements("./aw:Child1", namespaceManager)  
For Each el As XElement In elements  
    Console.WriteLine(el)  
Next  
```  
  
 <span data-ttu-id="e06fd-225">Dieses Beispiel erzeugt die folgende Ausgabe:</span><span class="sxs-lookup"><span data-stu-id="e06fd-225">This example produces the following output:</span></span>  
  
```xml  
<aw:Child1 xmlns:aw="http://www.adventure-works.com">child one data 1</aw:Child1>  
<aw:Child1 xmlns:aw="http://www.adventure-works.com">child one data 2</aw:Child1>  
<aw:Child1 xmlns:aw="http://www.adventure-works.com">child one data 3</aw:Child1>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
