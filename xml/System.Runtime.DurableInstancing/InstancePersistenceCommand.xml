<Type Name="InstancePersistenceCommand" FullName="System.Runtime.DurableInstancing.InstancePersistenceCommand">
  <Metadata><Meta Name="ms.openlocfilehash" Value="0355a98cc073e21df572c70fc630f4c04edd8065" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69272203" /></Metadata><TypeSignature Language="C#" Value="public abstract class InstancePersistenceCommand" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit InstancePersistenceCommand extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.DurableInstancing.InstancePersistenceCommand" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class InstancePersistenceCommand" />
  <TypeSignature Language="C++ CLI" Value="public ref class InstancePersistenceCommand abstract" />
  <TypeSignature Language="F#" Value="type InstancePersistenceCommand = class" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="a0f64-101">Basisklasse für alle Befehle mit Dauerhaftigkeitsbezug.</span><span class="sxs-lookup"><span data-stu-id="a0f64-101">Base class for all persistence related commands.</span></span> <span data-ttu-id="a0f64-102">Befehle werden anhand ihres Namens unterschieden.</span><span class="sxs-lookup"><span data-stu-id="a0f64-102">Commands are distinguished by their Name.</span></span> <span data-ttu-id="a0f64-103">In der Regel können Befehle auch anhand ihres abgeleiteten Typs unterschieden werden.</span><span class="sxs-lookup"><span data-stu-id="a0f64-103">Usually commands can also be distinguished by their derived type.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected InstancePersistenceCommand (System.Xml.Linq.XName name);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Xml.Linq.XName name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstancePersistenceCommand.#ctor(System.Xml.Linq.XName)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (name As XName)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; InstancePersistenceCommand(System::Xml::Linq::XName ^ name);" />
      <MemberSignature Language="F#" Value="new System.Runtime.DurableInstancing.InstancePersistenceCommand : System.Xml.Linq.XName -&gt; System.Runtime.DurableInstancing.InstancePersistenceCommand" Usage="new System.Runtime.DurableInstancing.InstancePersistenceCommand name" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.Xml.Linq.XName" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="a0f64-104">Der XName (Kombination aus Namespace und Name) des Befehls.</span><span class="sxs-lookup"><span data-stu-id="a0f64-104">The XName (the combination of namespace and name) of the command.</span></span></param>
        <summary><span data-ttu-id="a0f64-105">Initialisiert eine Instanz der <see cref="T:System.Runtime.DurableInstancing.InstancePersistenceCommand" />-Klasse.</span><span class="sxs-lookup"><span data-stu-id="a0f64-105">Initializes an instance of the <see cref="T:System.Runtime.DurableInstancing.InstancePersistenceCommand" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AutomaticallyAcquiringLock">
      <MemberSignature Language="C#" Value="protected internal virtual bool AutomaticallyAcquiringLock { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutomaticallyAcquiringLock" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.DurableInstancing.InstancePersistenceCommand.AutomaticallyAcquiringLock" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable ReadOnly Property AutomaticallyAcquiringLock As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual property bool AutomaticallyAcquiringLock { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.AutomaticallyAcquiringLock : bool" Usage="System.Runtime.DurableInstancing.InstancePersistenceCommand.AutomaticallyAcquiringLock" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a0f64-106">Gibt an, ob es bei dem Befehl die Möglichkeit gibt, die Instanz zu sperren.</span><span class="sxs-lookup"><span data-stu-id="a0f64-106">Indicates whether the command could attempt to acquire a lock on the instance.</span></span></summary>
        <value><span data-ttu-id="a0f64-107"><see langword="true" />, wenn der Befehl die Instanz sperrt; anderenfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="a0f64-107"><see langword="true" /> if the command acquires a lock on the instance;, otherwise <see langword="false" />.</span></span> <span data-ttu-id="a0f64-108">Die Standardeinstellung ist <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="a0f64-108">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0f64-109">Die Befehls Klassen, die von dieser Klasse abgeleitet werden, können diese Eigenschaft überschreiben `true`, um Sie auf festzulegen.</span><span class="sxs-lookup"><span data-stu-id="a0f64-109">The command classes that derive from this class can override this property to set it to `true`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsTransactionEnlistmentOptional">
      <MemberSignature Language="C#" Value="protected internal virtual bool IsTransactionEnlistmentOptional { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsTransactionEnlistmentOptional" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.DurableInstancing.InstancePersistenceCommand.IsTransactionEnlistmentOptional" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable ReadOnly Property IsTransactionEnlistmentOptional As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual property bool IsTransactionEnlistmentOptional { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsTransactionEnlistmentOptional : bool" Usage="System.Runtime.DurableInstancing.InstancePersistenceCommand.IsTransactionEnlistmentOptional" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a0f64-110">Gibt einen Wert zurück, der angibt, ob der Dauerhaftigkeitsanbieter bei Ausführung dieses Befehls die Möglichkeit hat, sich gegen die Eintragung in die Ambient-Transaktion (Transaction.Current) zu entscheiden.</span><span class="sxs-lookup"><span data-stu-id="a0f64-110">Returns a value that indicates whether the persistence provider may choose not to enlist in the ambient transaction (Transaction.Current) when executing this command.</span></span></summary>
        <value><span data-ttu-id="a0f64-111"><see langword="true" />, wenn das Eintragen in die Transaktion für diesen Befehl optional ist; anderenfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="a0f64-111"><see langword="true" /> if enlisting in the transaction is optional for this command, otherwise <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0f64-112">Die Befehls Klassen, die von dieser Klasse abgeleitet werden, können diese Eigenschaft überschreiben `true`, um Sie auf festzulegen.</span><span class="sxs-lookup"><span data-stu-id="a0f64-112">The command classes that derive from this class can override this property to set it to `true`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public System.Xml.Linq.XName Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Linq.XName Name" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.DurableInstancing.InstancePersistenceCommand.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As XName" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Linq::XName ^ Name { System::Xml::Linq::XName ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Name : System.Xml.Linq.XName" Usage="System.Runtime.DurableInstancing.InstancePersistenceCommand.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.Linq.XName</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a0f64-113">Ruft den Namen des Dauerhaftigkeitsbefehls ab.</span><span class="sxs-lookup"><span data-stu-id="a0f64-113">Gets the name of the persistence command.</span></span></summary>
        <value><span data-ttu-id="a0f64-114">Ein XName (Kombination aus Namespace und Name).</span><span class="sxs-lookup"><span data-stu-id="a0f64-114">An XName (the combination of namespace and name).</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Validate">
      <MemberSignature Language="C#" Value="protected internal virtual void Validate (System.Runtime.DurableInstancing.InstanceView view);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void Validate(class System.Runtime.DurableInstancing.InstanceView view) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstancePersistenceCommand.Validate(System.Runtime.DurableInstancing.InstanceView)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub Validate (view As InstanceView)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void Validate(System::Runtime::DurableInstancing::InstanceView ^ view);" />
      <MemberSignature Language="F#" Value="abstract member Validate : System.Runtime.DurableInstancing.InstanceView -&gt; unit&#xA;override this.Validate : System.Runtime.DurableInstancing.InstanceView -&gt; unit" Usage="instancePersistenceCommand.Validate view" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="view" Type="System.Runtime.DurableInstancing.InstanceView" />
      </Parameters>
      <Docs>
        <param name="view"><span data-ttu-id="a0f64-115">Ein <see cref="T:System.Runtime.DurableInstancing.InstanceView" />-Objekt, das den aktuellen Zustand des Instanzhandles darstellt.</span><span class="sxs-lookup"><span data-stu-id="a0f64-115">An <see cref="T:System.Runtime.DurableInstancing.InstanceView" /> object representing the current state of the instance handle.</span></span></param>
        <summary><span data-ttu-id="a0f64-116">Validiert den Befehl.</span><span class="sxs-lookup"><span data-stu-id="a0f64-116">Validates the command.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0f64-117">Befehle überschreiben "Validate", um sicherzustellen, dass ein Befehl zum jetzigen Zeitpunkt ausgeführt werden darf.</span><span class="sxs-lookup"><span data-stu-id="a0f64-117">Commands override Validate to ensure that a command is valid to execute at the current time.</span></span> <span data-ttu-id="a0f64-118">Implementierungen sollten eine "InvalidOperationException" auslösen, wenn es nicht zulässig ist, dass der Befehl für die "InstanceView" ausgeführt wird, die als Parameter übergeben wurde.</span><span class="sxs-lookup"><span data-stu-id="a0f64-118">Implementations should throw an InvalidOperationException if the command is not valid to execute against the InstanceView passed as a parameter.</span></span>  <span data-ttu-id="a0f64-119">Die Validate-Methode wird von "InstanceStore" aufgerufen, bevor der Befehl an "InstanceStore.TryCommand" übergeben wird.</span><span class="sxs-lookup"><span data-stu-id="a0f64-119">The Validate method is called by InstanceStore before the command is passed to InstanceStore.TryCommand.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
