<Type Name="AsnWriter" FullName="System.Formats.Asn1.AsnWriter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="f9bc56b7a5576d4ed278327f340b2ae18e8b97a4" /><Meta Name="ms.sourcegitcommit" Value="2f78d0752398ee2d15afbf06143cb62a01dc6d71" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="08/14/2020" /><Meta Name="ms.locfileid" Value="88242700" /></Metadata><TypeSignature Language="C#" Value="public sealed class AsnWriter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit AsnWriter extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Formats.Asn1.AsnWriter" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class AsnWriter" />
  <TypeSignature Language="C++ CLI" Value="public ref class AsnWriter sealed" />
  <TypeSignature Language="F#" Value="type AsnWriter = class" />
  <AssemblyInfo>
    <AssemblyName>System.Formats.Asn1</AssemblyName>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Ein Writer für BER-, CER- und DER-codierte ASN.1-Daten.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AsnWriter (System.Formats.Asn1.AsnEncodingRules ruleSet);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Formats.Asn1.AsnEncodingRules ruleSet) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Formats.Asn1.AsnWriter.#ctor(System.Formats.Asn1.AsnEncodingRules)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (ruleSet As AsnEncodingRules)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AsnWriter(System::Formats::Asn1::AsnEncodingRules ruleSet);" />
      <MemberSignature Language="F#" Value="new System.Formats.Asn1.AsnWriter : System.Formats.Asn1.AsnEncodingRules -&gt; System.Formats.Asn1.AsnWriter" Usage="new System.Formats.Asn1.AsnWriter ruleSet" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Formats.Asn1</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="ruleSet" Type="System.Formats.Asn1.AsnEncodingRules" />
      </Parameters>
      <Docs>
        <param name="ruleSet">Die Codierungseinschränkungen für den Writer.</param>
        <summary>Erstellt einen neuen <see cref="T:System.Formats.Asn1.AsnWriter" /> mit einem angegebenen Satz von Codierungsregeln.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="ruleSet" /> ist nicht definiert.</exception>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (System.Formats.Asn1.AsnWriter destination);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyTo(class System.Formats.Asn1.AsnWriter destination) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Formats.Asn1.AsnWriter.CopyTo(System.Formats.Asn1.AsnWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (destination As AsnWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopyTo(System::Formats::Asn1::AsnWriter ^ destination);" />
      <MemberSignature Language="F#" Value="member this.CopyTo : System.Formats.Asn1.AsnWriter -&gt; unit" Usage="asnWriter.CopyTo destination" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Formats.Asn1</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.Formats.Asn1.AsnWriter" />
      </Parameters>
      <Docs>
        <param name="destination">Der Writer, der den Wert empfangen soll.</param>
        <summary>Kopiert den Wert dieses Writers in einen anderen.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="destination" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Ein <see cref="M:System.Formats.Asn1.AsnWriter.PushSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> oder <see cref="M:System.Formats.Asn1.AsnWriter.PushSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> wurde nicht über <see cref="M:System.Formats.Asn1.AsnWriter.PopSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> oder <see cref="M:System.Formats.Asn1.AsnWriter.PopSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> geschlossen.
Oder dieser Writer ist leer.
Oder dieser Writer stellt mehrere Werte der obersten Ebene dar.
Oder der Wert dieses Writers wird in einer Weise codiert, die nicht mit dem Regelsatz für den Zielwriter kompatibel ist.</exception>
      </Docs>
    </Member>
    <Member MemberName="Encode">
      <MemberSignature Language="C#" Value="public byte[] Encode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] Encode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Formats.Asn1.AsnWriter.Encode" />
      <MemberSignature Language="VB.NET" Value="Public Function Encode () As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ Encode();" />
      <MemberSignature Language="F#" Value="member this.Encode : unit -&gt; byte[]" Usage="asnWriter.Encode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Formats.Asn1</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt ein neues Array zurück, das den codierten Wert enthält.</summary>
        <returns>Ein Array mit genauer Größe, das den codierten Wert enthält.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">Ein <see cref="M:System.Formats.Asn1.AsnWriter.PushSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> oder <see cref="M:System.Formats.Asn1.AsnWriter.PushSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> wurde nicht über <see cref="M:System.Formats.Asn1.AsnWriter.PopSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> oder <see cref="M:System.Formats.Asn1.AsnWriter.PopSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> geschlossen.</exception>
      </Docs>
    </Member>
    <Member MemberName="Encode">
      <MemberSignature Language="C#" Value="public int Encode (Span&lt;byte&gt; destination);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Encode(valuetype System.Span`1&lt;unsigned int8&gt; destination) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Formats.Asn1.AsnWriter.Encode(System.Span{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Function Encode (destination As Span(Of Byte)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Encode(Span&lt;System::Byte&gt; destination);" />
      <MemberSignature Language="F#" Value="member this.Encode : Span&lt;byte&gt; -&gt; int" Usage="asnWriter.Encode destination" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Formats.Asn1</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.Span&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="destination">Der Puffer, in den geschrieben werden soll.</param>
        <summary>Schreibt die codierte Darstellung der Daten in <paramref name="destination" />.</summary>
        <returns>Die Anzahl der Bytes, die in <paramref name="destination" /> geschrieben wurden.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">Ein <see cref="M:System.Formats.Asn1.AsnWriter.PushSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> oder <see cref="M:System.Formats.Asn1.AsnWriter.PushSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> wurde nicht über <see cref="M:System.Formats.Asn1.AsnWriter.PopSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> oder <see cref="M:System.Formats.Asn1.AsnWriter.PopSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> geschlossen.</exception>
      </Docs>
    </Member>
    <Member MemberName="EncodedValueEquals">
      <MemberSignature Language="C#" Value="public bool EncodedValueEquals (System.Formats.Asn1.AsnWriter other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool EncodedValueEquals(class System.Formats.Asn1.AsnWriter other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Formats.Asn1.AsnWriter.EncodedValueEquals(System.Formats.Asn1.AsnWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Function EncodedValueEquals (other As AsnWriter) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool EncodedValueEquals(System::Formats::Asn1::AsnWriter ^ other);" />
      <MemberSignature Language="F#" Value="member this.EncodedValueEquals : System.Formats.Asn1.AsnWriter -&gt; bool" Usage="asnWriter.EncodedValueEquals other" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Formats.Asn1</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Formats.Asn1.AsnWriter" />
      </Parameters>
      <Docs>
        <param name="other">To be added.</param>
        <summary>Ermittelt, ob <see cref="M:System.Formats.Asn1.AsnWriter.Encode" /> eine mit <paramref name="other" /> identische Ausgabe generieren würde.</summary>
        <returns><see langword="true" />, wenn die ausstehenden codierten Daten mit identisch <paramref name="other" /> sind, andernfalls <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="other" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Ein <see cref="M:System.Formats.Asn1.AsnWriter.PushSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> oder <see cref="M:System.Formats.Asn1.AsnWriter.PushSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> wurde nicht über <see cref="M:System.Formats.Asn1.AsnWriter.PopSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> oder <see cref="M:System.Formats.Asn1.AsnWriter.PopSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> geschlossen.</exception>
      </Docs>
    </Member>
    <Member MemberName="EncodedValueEquals">
      <MemberSignature Language="C#" Value="public bool EncodedValueEquals (ReadOnlySpan&lt;byte&gt; other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool EncodedValueEquals(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Formats.Asn1.AsnWriter.EncodedValueEquals(System.ReadOnlySpan{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Function EncodedValueEquals (other As ReadOnlySpan(Of Byte)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool EncodedValueEquals(ReadOnlySpan&lt;System::Byte&gt; other);" />
      <MemberSignature Language="F#" Value="member this.EncodedValueEquals : ReadOnlySpan&lt;byte&gt; -&gt; bool" Usage="asnWriter.EncodedValueEquals other" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Formats.Asn1</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="other">To be added.</param>
        <summary>Ermittelt, ob <see cref="M:System.Formats.Asn1.AsnWriter.Encode" /> eine mit <paramref name="other" /> identische Ausgabe generieren würde.</summary>
        <returns><see langword="true" />, wenn die ausstehenden codierten Daten mit identisch <paramref name="other" /> sind, andernfalls <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">Ein <see cref="M:System.Formats.Asn1.AsnWriter.PushSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> oder <see cref="M:System.Formats.Asn1.AsnWriter.PushSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> wurde nicht über <see cref="M:System.Formats.Asn1.AsnWriter.PopSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> oder <see cref="M:System.Formats.Asn1.AsnWriter.PopSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> geschlossen.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetEncodedLength">
      <MemberSignature Language="C#" Value="public int GetEncodedLength ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetEncodedLength() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Formats.Asn1.AsnWriter.GetEncodedLength" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEncodedLength () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetEncodedLength();" />
      <MemberSignature Language="F#" Value="member this.GetEncodedLength : unit -&gt; int" Usage="asnWriter.GetEncodedLength " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Formats.Asn1</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ruft die Anzahl der Bytes ab, die von <see cref="M:System.Formats.Asn1.AsnWriter.TryEncode(System.Span{System.Byte},System.Int32@)" /> geschrieben würden.</summary>
        <returns>Die Anzahl der Bytes, die von <see cref="M:System.Formats.Asn1.AsnWriter.TryEncode(System.Span{System.Byte},System.Int32@)" /> geschrieben würden.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="M:System.Formats.Asn1.AsnWriter.PushSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})" />, <see cref="M:System.Formats.Asn1.AsnWriter.PushSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> oder <see cref="M:System.Formats.Asn1.AsnWriter.PushOctetString(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> wurde ohne die entsprechende Pop-Methode aufgerufen.</exception>
      </Docs>
    </Member>
    <Member MemberName="PopOctetString">
      <MemberSignature Language="C#" Value="public void PopOctetString (System.Formats.Asn1.Asn1Tag? tag = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void PopOctetString(valuetype System.Nullable`1&lt;valuetype System.Formats.Asn1.Asn1Tag&gt; tag) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Formats.Asn1.AsnWriter.PopOctetString(System.Nullable{System.Formats.Asn1.Asn1Tag})" />
      <MemberSignature Language="VB.NET" Value="Public Sub PopOctetString (Optional tag As Nullable(Of Asn1Tag) = Nothing)" />
      <MemberSignature Language="F#" Value="member this.PopOctetString : Nullable&lt;System.Formats.Asn1.Asn1Tag&gt; -&gt; unit" Usage="asnWriter.PopOctetString tag" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Formats.Asn1</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tag" Type="System.Nullable&lt;System.Formats.Asn1.Asn1Tag&gt;" />
      </Parameters>
      <Docs>
        <param name="tag">Das zu schreibende Tag oder <see langword="null" /> für das Standardtag (Universal 4).</param>
        <summary>Gibt an, dass die geöffnete Oktettzeichenfolge mit dem Tag UNIVERSAL 4 geschlossen und der Writer an den übergeordneten Kontext zurückgegeben wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

In <xref:System.Formats.Asn1.AsnEncodingRules.BER> -und- <xref:System.Formats.Asn1.AsnEncodingRules.DER> Modi verbleibt der codierte Inhalt in einer einzelnen primitiven Oktett-Zeichenfolge.
Im- <xref:System.Formats.Asn1.AsnEncodingRules.CER> Modus wird der Inhalt bei Bedarf in mehrere Segmente aufgeteilt.

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> ist <see cref="F:System.Formats.Asn1.TagClass.Universal" />, aber <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> ist für die Methode nicht richtig.</exception>
        <exception cref="T:System.InvalidOperationException">Der Writer befindet sich derzeit nicht innerhalb einer Oktettzeichenfolge mit dem angegebenen Tag.</exception>
      </Docs>
    </Member>
    <Member MemberName="PopSequence">
      <MemberSignature Language="C#" Value="public void PopSequence (System.Formats.Asn1.Asn1Tag? tag = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void PopSequence(valuetype System.Nullable`1&lt;valuetype System.Formats.Asn1.Asn1Tag&gt; tag) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Formats.Asn1.AsnWriter.PopSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})" />
      <MemberSignature Language="VB.NET" Value="Public Sub PopSequence (Optional tag As Nullable(Of Asn1Tag) = Nothing)" />
      <MemberSignature Language="F#" Value="member this.PopSequence : Nullable&lt;System.Formats.Asn1.Asn1Tag&gt; -&gt; unit" Usage="asnWriter.PopSequence tag" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Formats.Asn1</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tag" Type="System.Nullable&lt;System.Formats.Asn1.Asn1Tag&gt;" />
      </Parameters>
      <Docs>
        <param name="tag">Das zu schreibende Tag oder <see langword="null" /> für das Standardtag (Universal 16).</param>
        <summary>Gibt an, dass die geöffnete Sequenz mit dem angegebenen Tag geschlossen und der Writer an den übergeordneten Kontext zurückgegeben wird.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> ist <see cref="F:System.Formats.Asn1.TagClass.Universal" />, aber <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> ist für die Methode nicht richtig.</exception>
        <exception cref="T:System.InvalidOperationException">Der Writer befindet sich derzeit nicht in einer Sequenz mit dem angegebenen Tag.</exception>
      </Docs>
    </Member>
    <Member MemberName="PopSetOf">
      <MemberSignature Language="C#" Value="public void PopSetOf (System.Formats.Asn1.Asn1Tag? tag = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void PopSetOf(valuetype System.Nullable`1&lt;valuetype System.Formats.Asn1.Asn1Tag&gt; tag) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Formats.Asn1.AsnWriter.PopSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})" />
      <MemberSignature Language="VB.NET" Value="Public Sub PopSetOf (Optional tag As Nullable(Of Asn1Tag) = Nothing)" />
      <MemberSignature Language="F#" Value="member this.PopSetOf : Nullable&lt;System.Formats.Asn1.Asn1Tag&gt; -&gt; unit" Usage="asnWriter.PopSetOf tag" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Formats.Asn1</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tag" Type="System.Nullable&lt;System.Formats.Asn1.Asn1Tag&gt;" />
      </Parameters>
      <Docs>
        <param name="tag">Das zu schreibende Tag oder <see langword="null" /> für das Standardtag (Universal 17).</param>
        <summary>Gibt an, dass das geöffnete Set-Of-Element mit dem angegebenen Tag geschlossen und der Writer an den übergeordneten Kontext zurückgegeben wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

In <xref:System.Formats.Asn1.AsnEncodingRules.CER> -und- <xref:System.Formats.Asn1.AsnEncodingRules.DER> Modi sortiert der Writer die Element Elemente, wenn das Tag geschlossen wird.

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> ist <see cref="F:System.Formats.Asn1.TagClass.Universal" />, aber <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> ist für die Methode nicht richtig.</exception>
        <exception cref="T:System.InvalidOperationException">Der Writer befindet sich derzeit nicht innerhalb eines Set-Of-Elements mit dem angegebenen Tag.</exception>
      </Docs>
    </Member>
    <Member MemberName="PushOctetString">
      <MemberSignature Language="C#" Value="public System.Formats.Asn1.AsnWriter.Scope PushOctetString (System.Formats.Asn1.Asn1Tag? tag = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Formats.Asn1.AsnWriter/Scope PushOctetString(valuetype System.Nullable`1&lt;valuetype System.Formats.Asn1.Asn1Tag&gt; tag) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Formats.Asn1.AsnWriter.PushOctetString(System.Nullable{System.Formats.Asn1.Asn1Tag})" />
      <MemberSignature Language="VB.NET" Value="Public Function PushOctetString (Optional tag As Nullable(Of Asn1Tag) = Nothing) As AsnWriter.Scope" />
      <MemberSignature Language="F#" Value="member this.PushOctetString : Nullable&lt;System.Formats.Asn1.Asn1Tag&gt; -&gt; System.Formats.Asn1.AsnWriter.Scope" Usage="asnWriter.PushOctetString tag" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Formats.Asn1</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Formats.Asn1.AsnWriter+Scope</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tag" Type="System.Nullable&lt;System.Formats.Asn1.Asn1Tag&gt;" />
      </Parameters>
      <Docs>
        <param name="tag">Das zu schreibende Tag oder <see langword="null" /> für das Standardtag (Universal 4).</param>
        <summary>Beginnt mit dem Schreiben eines Oktett-Zeichenfolgenwerts mit einem angegebenen Tag.</summary>
        <returns>Ein verwerfbarer Wert, der <see cref="M:System.Formats.Asn1.AsnWriter.PopOctetString(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> automatisch aufruft.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

Diese Methode ist nur eine Zugriffstaste zum Schreiben eines Oktett-Zeichen folgen Werts, bei dem der Inhalt ebenfalls ASN. 1-Daten ist, die unter demselben Codierungssystem codiert sind.
Wenn <xref:System.Formats.Asn1.AsnWriter.PopOctetString(System.Nullable{System.Formats.Asn1.Asn1Tag})> aufgerufen wird, wird der gesamte Inhalt als einzelner Oktett-Zeichen folgen Wert normalisiert, der ordnungsgemäß für die aktuellen Codierungsregeln codiert ist.
Diese Methode erstellt nicht notwendigerweise eine konstruierte Codierung, und es ist nicht möglich, in diesem Push/Pop andere Werte als Oktett-Zeichen folgen zu schreiben.

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PushSequence">
      <MemberSignature Language="C#" Value="public System.Formats.Asn1.AsnWriter.Scope PushSequence (System.Formats.Asn1.Asn1Tag? tag = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Formats.Asn1.AsnWriter/Scope PushSequence(valuetype System.Nullable`1&lt;valuetype System.Formats.Asn1.Asn1Tag&gt; tag) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Formats.Asn1.AsnWriter.PushSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})" />
      <MemberSignature Language="VB.NET" Value="Public Function PushSequence (Optional tag As Nullable(Of Asn1Tag) = Nothing) As AsnWriter.Scope" />
      <MemberSignature Language="F#" Value="member this.PushSequence : Nullable&lt;System.Formats.Asn1.Asn1Tag&gt; -&gt; System.Formats.Asn1.AsnWriter.Scope" Usage="asnWriter.PushSequence tag" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Formats.Asn1</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Formats.Asn1.AsnWriter+Scope</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tag" Type="System.Nullable&lt;System.Formats.Asn1.Asn1Tag&gt;" />
      </Parameters>
      <Docs>
        <param name="tag">Das zu schreibende Tag oder <see langword="null" /> für das Standardtag (Universal 16).</param>
        <summary>Beginnt mit dem Schreiben einer Sequenz mit einem angegebenen Tag.</summary>
        <returns>Ein verwerfbarer Wert, der <see cref="M:System.Formats.Asn1.AsnWriter.PopSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> automatisch aufruft.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> ist <see cref="F:System.Formats.Asn1.TagClass.Universal" />, aber <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> ist für die Methode nicht richtig.</exception>
      </Docs>
    </Member>
    <Member MemberName="PushSetOf">
      <MemberSignature Language="C#" Value="public System.Formats.Asn1.AsnWriter.Scope PushSetOf (System.Formats.Asn1.Asn1Tag? tag = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Formats.Asn1.AsnWriter/Scope PushSetOf(valuetype System.Nullable`1&lt;valuetype System.Formats.Asn1.Asn1Tag&gt; tag) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Formats.Asn1.AsnWriter.PushSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})" />
      <MemberSignature Language="VB.NET" Value="Public Function PushSetOf (Optional tag As Nullable(Of Asn1Tag) = Nothing) As AsnWriter.Scope" />
      <MemberSignature Language="F#" Value="member this.PushSetOf : Nullable&lt;System.Formats.Asn1.Asn1Tag&gt; -&gt; System.Formats.Asn1.AsnWriter.Scope" Usage="asnWriter.PushSetOf tag" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Formats.Asn1</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Formats.Asn1.AsnWriter+Scope</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tag" Type="System.Nullable&lt;System.Formats.Asn1.Asn1Tag&gt;" />
      </Parameters>
      <Docs>
        <param name="tag">Das zu schreibende Tag oder <see langword="null" /> für das Standardtag (Universal 17).</param>
        <summary>Beginnt mit dem Schreiben eines Set-Of-Elements mit einem angegebenen Tag.</summary>
        <returns>Ein verwerfbarer Wert, der <see cref="M:System.Formats.Asn1.AsnWriter.PopSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> automatisch aufruft.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

In <xref:System.Formats.Asn1.AsnEncodingRules.CER> -und- <xref:System.Formats.Asn1.AsnEncodingRules.DER> Modi sortiert der Writer die Element Elemente, wenn das Tag geschlossen wird.

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> ist <see cref="F:System.Formats.Asn1.TagClass.Universal" />, aber <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> ist für die Methode nicht richtig.</exception>
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Formats.Asn1.AsnWriter.Reset" />
      <MemberSignature Language="VB.NET" Value="Public Sub Reset ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Reset();" />
      <MemberSignature Language="F#" Value="member this.Reset : unit -&gt; unit" Usage="asnWriter.Reset " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Formats.Asn1</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Setzt den Writer so zurück, dass keine Daten vorhanden sind, ohne Ressourcen freizugeben.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RuleSet">
      <MemberSignature Language="C#" Value="public System.Formats.Asn1.AsnEncodingRules RuleSet { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Formats.Asn1.AsnEncodingRules RuleSet" />
      <MemberSignature Language="DocId" Value="P:System.Formats.Asn1.AsnWriter.RuleSet" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RuleSet As AsnEncodingRules" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Formats::Asn1::AsnEncodingRules RuleSet { System::Formats::Asn1::AsnEncodingRules get(); };" />
      <MemberSignature Language="F#" Value="member this.RuleSet : System.Formats.Asn1.AsnEncodingRules" Usage="System.Formats.Asn1.AsnWriter.RuleSet" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Formats.Asn1</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Formats.Asn1.AsnEncodingRules</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Codierungsregeln ab, die von diesem Writer verwendet werden.</summary>
        <value>Die von diesem Writer verwendeten Codierungsregeln.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryEncode">
      <MemberSignature Language="C#" Value="public bool TryEncode (Span&lt;byte&gt; destination, out int bytesWritten);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryEncode(valuetype System.Span`1&lt;unsigned int8&gt; destination, [out] int32&amp; bytesWritten) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Formats.Asn1.AsnWriter.TryEncode(System.Span{System.Byte},System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryEncode (destination As Span(Of Byte), ByRef bytesWritten As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryEncode(Span&lt;System::Byte&gt; destination, [Runtime::InteropServices::Out] int % bytesWritten);" />
      <MemberSignature Language="F#" Value="member this.TryEncode : Span&lt;byte&gt; * int -&gt; bool" Usage="asnWriter.TryEncode (destination, bytesWritten)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Formats.Asn1</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.Span&lt;System.Byte&gt;" />
        <Parameter Name="bytesWritten" Type="System.Int32" RefType="out" />
      </Parameters>
      <Docs>
        <param name="destination">Der Puffer, in den geschrieben werden soll.</param>
        <param name="bytesWritten">Empfängt bei Erfolg die Anzahl der in <paramref name="destination" /> geschriebenen Bytes.</param>
        <summary>Versucht, die codierte Darstellung der Daten in <paramref name="destination" /> zu schreiben.</summary>
        <returns><see langword="true" />, wenn die Codierung erfolgreich war, <see langword="false" />, wenn <paramref name="destination" /> zu klein ist.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">Ein <see cref="M:System.Formats.Asn1.AsnWriter.PushSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> oder <see cref="M:System.Formats.Asn1.AsnWriter.PushSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> wurde nicht über <see cref="M:System.Formats.Asn1.AsnWriter.PopSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> oder <see cref="M:System.Formats.Asn1.AsnWriter.PopSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> geschlossen.</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteBitString">
      <MemberSignature Language="C#" Value="public void WriteBitString (ReadOnlySpan&lt;byte&gt; value, int unusedBitCount = 0, System.Formats.Asn1.Asn1Tag? tag = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteBitString(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; value, int32 unusedBitCount, valuetype System.Nullable`1&lt;valuetype System.Formats.Asn1.Asn1Tag&gt; tag) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Formats.Asn1.AsnWriter.WriteBitString(System.ReadOnlySpan{System.Byte},System.Int32,System.Nullable{System.Formats.Asn1.Asn1Tag})" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteBitString (value As ReadOnlySpan(Of Byte), Optional unusedBitCount As Integer = 0, Optional tag As Nullable(Of Asn1Tag) = Nothing)" />
      <MemberSignature Language="F#" Value="member this.WriteBitString : ReadOnlySpan&lt;byte&gt; * int * Nullable&lt;System.Formats.Asn1.Asn1Tag&gt; -&gt; unit" Usage="asnWriter.WriteBitString (value, unusedBitCount, tag)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Formats.Asn1</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="unusedBitCount" Type="System.Int32" />
        <Parameter Name="tag" Type="System.Nullable&lt;System.Formats.Asn1.Asn1Tag&gt;" />
      </Parameters>
      <Docs>
        <param name="value">Der zu schreibende Wert.</param>
        <param name="unusedBitCount">Die Anzahl der nachstehenden Bits, die nicht semantisch sind.</param>
        <param name="tag">Das zu schreibende Tag oder <see langword="null" /> für das Standardtag (Universal 3).</param>
        <summary>Schreibt einen Bit-Zeichenfolgenwert mit einem angegebenen Tag.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> ist <see cref="F:System.Formats.Asn1.TagClass.Universal" />, aber <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> ist für die Methode nicht richtig.
Oder <paramref name="value" /> hat die Länge 0 und <paramref name="unusedBitCount" /> ist nicht 0 oder <paramref name="value" /> ist nicht leer, und alle von <paramref name="unusedBitCount" /> identifizierten Bits sind festgelegt.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="unusedBitCount" /> liegt nicht im Bereich [0,7].</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteBoolean">
      <MemberSignature Language="C#" Value="public void WriteBoolean (bool value, System.Formats.Asn1.Asn1Tag? tag = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteBoolean(bool value, valuetype System.Nullable`1&lt;valuetype System.Formats.Asn1.Asn1Tag&gt; tag) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Formats.Asn1.AsnWriter.WriteBoolean(System.Boolean,System.Nullable{System.Formats.Asn1.Asn1Tag})" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteBoolean (value As Boolean, Optional tag As Nullable(Of Asn1Tag) = Nothing)" />
      <MemberSignature Language="F#" Value="member this.WriteBoolean : bool * Nullable&lt;System.Formats.Asn1.Asn1Tag&gt; -&gt; unit" Usage="asnWriter.WriteBoolean (value, tag)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Formats.Asn1</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Boolean" />
        <Parameter Name="tag" Type="System.Nullable&lt;System.Formats.Asn1.Asn1Tag&gt;" />
      </Parameters>
      <Docs>
        <param name="value">Der zu schreibende Wert.</param>
        <param name="tag">Das zu schreibende Tag oder <see langword="null" /> für das Standardtag (Universal 1).</param>
        <summary>Schreibt einen booleschen Wert mit einem angegebenen Tag.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> ist <see cref="F:System.Formats.Asn1.TagClass.Universal" />, aber <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> ist für die Methode nicht richtig.</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteCharacterString">
      <MemberSignature Language="C#" Value="public void WriteCharacterString (System.Formats.Asn1.UniversalTagNumber encodingType, ReadOnlySpan&lt;char&gt; str, System.Formats.Asn1.Asn1Tag? tag = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteCharacterString(valuetype System.Formats.Asn1.UniversalTagNumber encodingType, valuetype System.ReadOnlySpan`1&lt;char&gt; str, valuetype System.Nullable`1&lt;valuetype System.Formats.Asn1.Asn1Tag&gt; tag) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Formats.Asn1.AsnWriter.WriteCharacterString(System.Formats.Asn1.UniversalTagNumber,System.ReadOnlySpan{System.Char},System.Nullable{System.Formats.Asn1.Asn1Tag})" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteCharacterString (encodingType As UniversalTagNumber, str As ReadOnlySpan(Of Char), Optional tag As Nullable(Of Asn1Tag) = Nothing)" />
      <MemberSignature Language="F#" Value="member this.WriteCharacterString : System.Formats.Asn1.UniversalTagNumber * ReadOnlySpan&lt;char&gt; * Nullable&lt;System.Formats.Asn1.Asn1Tag&gt; -&gt; unit" Usage="asnWriter.WriteCharacterString (encodingType, str, tag)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Formats.Asn1</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="encodingType" Type="System.Formats.Asn1.UniversalTagNumber" />
        <Parameter Name="str" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="tag" Type="System.Nullable&lt;System.Formats.Asn1.Asn1Tag&gt;" />
      </Parameters>
      <Docs>
        <param name="encodingType">Einer der Enumerationswerte, der die zu verwendende Codierung darstellt.</param>
        <param name="str">Die zu schreibende Zeichenfolge.</param>
        <param name="tag">Das zu schreibende Tag oder <see langword="null" /> für das universelle Tag, das für den angeforderten Codierungstyp geeignet ist.</param>
        <summary>Schreibt die angegebene Zeichenfolge unter Verwendung des angegebenen Codierungstyps mit dem angegebenen Tag, das dem Codierungstyp entspricht.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="encodingType" /> ist kein eingeschränkter Zeichenfolgen-Codierungstyp.
Oder <paramref name="encodingType" /> ist ein eingeschränkter Zeichenfolgen-Codierungstyp, der von dieser Methode derzeit nicht unterstützt wird.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> ist <see cref="F:System.Formats.Asn1.TagClass.Universal" />, aber <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> ist für die Methode nicht richtig.</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteCharacterString">
      <MemberSignature Language="C#" Value="public void WriteCharacterString (System.Formats.Asn1.UniversalTagNumber encodingType, string value, System.Formats.Asn1.Asn1Tag? tag = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteCharacterString(valuetype System.Formats.Asn1.UniversalTagNumber encodingType, string value, valuetype System.Nullable`1&lt;valuetype System.Formats.Asn1.Asn1Tag&gt; tag) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Formats.Asn1.AsnWriter.WriteCharacterString(System.Formats.Asn1.UniversalTagNumber,System.String,System.Nullable{System.Formats.Asn1.Asn1Tag})" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteCharacterString (encodingType As UniversalTagNumber, value As String, Optional tag As Nullable(Of Asn1Tag) = Nothing)" />
      <MemberSignature Language="F#" Value="member this.WriteCharacterString : System.Formats.Asn1.UniversalTagNumber * string * Nullable&lt;System.Formats.Asn1.Asn1Tag&gt; -&gt; unit" Usage="asnWriter.WriteCharacterString (encodingType, value, tag)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Formats.Asn1</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="encodingType" Type="System.Formats.Asn1.UniversalTagNumber" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="tag" Type="System.Nullable&lt;System.Formats.Asn1.Asn1Tag&gt;" />
      </Parameters>
      <Docs>
        <param name="encodingType">Einer der Enumerationswerte, der die zu verwendende Codierung darstellt.</param>
        <param name="value">Die zu schreibende Zeichenfolge.</param>
        <param name="tag">Das zu schreibende Tag oder <see langword="null" /> für das universelle Tag, das für den angeforderten Codierungstyp geeignet ist.</param>
        <summary>Schreibt die angegebene Zeichenfolge unter Verwendung des angegebenen Codierungstyps mit dem angegebenen Tag, das dem Codierungstyp entspricht.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="value" /> ist gleich <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="encodingType" /> ist kein eingeschränkter Zeichenfolgen-Codierungstyp.
Oder <paramref name="encodingType" /> ist ein eingeschränkter Zeichenfolgen-Codierungstyp, der von dieser Methode derzeit nicht unterstützt wird.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> ist <see cref="F:System.Formats.Asn1.TagClass.Universal" />, aber <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> ist für die Methode nicht richtig.</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteEncodedValue">
      <MemberSignature Language="C#" Value="public void WriteEncodedValue (ReadOnlySpan&lt;byte&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteEncodedValue(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Formats.Asn1.AsnWriter.WriteEncodedValue(System.ReadOnlySpan{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteEncodedValue (value As ReadOnlySpan(Of Byte))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteEncodedValue(ReadOnlySpan&lt;System::Byte&gt; value);" />
      <MemberSignature Language="F#" Value="member this.WriteEncodedValue : ReadOnlySpan&lt;byte&gt; -&gt; unit" Usage="asnWriter.WriteEncodedValue value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Formats.Asn1</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="value">Der zu schreibende Wert.</param>
        <summary>Schreibt einen einzelnen Wert, der bereits codiert wurde.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

Diese Methode überprüft nur, ob Tag und Länge gemäß dem aktuellen Regelsatz codiert sind, und dass das Ende des Werts das Ende der Eingabe ist. Der Inhalt wird nicht für die semantische Bedeutung ausgewertet.

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="value" /> konnte gemäß den aktuellen Codierungsregeln nicht gelesen werden.
Oder <paramref name="value" /> enthält Daten, die über das Ende des ersten Werts hinausgehen.</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteEnumeratedValue">
      <MemberSignature Language="C#" Value="public void WriteEnumeratedValue (Enum value, System.Formats.Asn1.Asn1Tag? tag = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteEnumeratedValue(class System.Enum value, valuetype System.Nullable`1&lt;valuetype System.Formats.Asn1.Asn1Tag&gt; tag) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Formats.Asn1.AsnWriter.WriteEnumeratedValue(System.Enum,System.Nullable{System.Formats.Asn1.Asn1Tag})" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteEnumeratedValue (value As Enum, Optional tag As Nullable(Of Asn1Tag) = Nothing)" />
      <MemberSignature Language="F#" Value="member this.WriteEnumeratedValue : Enum * Nullable&lt;System.Formats.Asn1.Asn1Tag&gt; -&gt; unit" Usage="asnWriter.WriteEnumeratedValue (value, tag)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Formats.Asn1</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Enum" />
        <Parameter Name="tag" Type="System.Nullable&lt;System.Formats.Asn1.Asn1Tag&gt;" />
      </Parameters>
      <Docs>
        <param name="value">Der zu schreibende geschachtelte Enumerationswert.</param>
        <param name="tag">Das zu schreibende Tag oder <see langword="null" /> für das Standardtag (Universal 10).</param>
        <summary>Schreibt einen Nicht-[<see cref="T:System.FlagsAttribute" />]-Enumerationswert als „Enumerated“ mit dem Tag UNIVERSAL 10.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="value" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> ist <see cref="F:System.Formats.Asn1.TagClass.Universal" />, aber <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> ist für die Methode nicht richtig.
Oder <paramref name="value" /> ist kein geschachtelter Enumerationswert.
Oder der ungeschachtelte Typ von <paramref name="value" /> wird als [<see cref="T:System.FlagsAttribute" />] deklariert.</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteEnumeratedValue&lt;TEnum&gt;">
      <MemberSignature Language="C#" Value="public void WriteEnumeratedValue&lt;TEnum&gt; (TEnum value, System.Formats.Asn1.Asn1Tag? tag = default) where TEnum : Enum;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteEnumeratedValue&lt;(class System.Enum) TEnum&gt;(!!TEnum value, valuetype System.Nullable`1&lt;valuetype System.Formats.Asn1.Asn1Tag&gt; tag) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Formats.Asn1.AsnWriter.WriteEnumeratedValue``1(``0,System.Nullable{System.Formats.Asn1.Asn1Tag})" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteEnumeratedValue(Of TEnum As Enum) (value As TEnum, Optional tag As Nullable(Of Asn1Tag) = Nothing)" />
      <MemberSignature Language="F#" Value="member this.WriteEnumeratedValue : 'Enum * Nullable&lt;System.Formats.Asn1.Asn1Tag&gt; -&gt; unit (requires 'Enum :&gt; Enum)" Usage="asnWriter.WriteEnumeratedValue (value, tag)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Formats.Asn1</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TEnum">
          <Constraints>
            <BaseTypeName>System.Enum</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="value" Type="TEnum" />
        <Parameter Name="tag" Type="System.Nullable&lt;System.Formats.Asn1.Asn1Tag&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TEnum">To be added.</typeparam>
        <param name="value">Der zu schreibende geschachtelte Enumerationswert.</param>
        <param name="tag">Das zu schreibende Tag.</param>
        <summary>Schreibt einen Nicht-[<see cref="T:System.FlagsAttribute" />]-Enumerationswert als „Enumerated“ mit dem Tag UNIVERSAL 10.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="value" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> ist <see cref="F:System.Formats.Asn1.TagClass.Universal" />, aber <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> ist für die Methode nicht richtig.
Oder <typeparamref name="TEnum" /> ist keine Enumeration.
Oder <typeparamref name="TEnum" /> wird als [<see cref="T:System.FlagsAttribute" />] deklariert.</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteGeneralizedTime">
      <MemberSignature Language="C#" Value="public void WriteGeneralizedTime (DateTimeOffset value, bool omitFractionalSeconds = false, System.Formats.Asn1.Asn1Tag? tag = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteGeneralizedTime(valuetype System.DateTimeOffset value, bool omitFractionalSeconds, valuetype System.Nullable`1&lt;valuetype System.Formats.Asn1.Asn1Tag&gt; tag) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Formats.Asn1.AsnWriter.WriteGeneralizedTime(System.DateTimeOffset,System.Boolean,System.Nullable{System.Formats.Asn1.Asn1Tag})" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteGeneralizedTime (value As DateTimeOffset, Optional omitFractionalSeconds As Boolean = false, Optional tag As Nullable(Of Asn1Tag) = Nothing)" />
      <MemberSignature Language="F#" Value="member this.WriteGeneralizedTime : DateTimeOffset * bool * Nullable&lt;System.Formats.Asn1.Asn1Tag&gt; -&gt; unit" Usage="asnWriter.WriteGeneralizedTime (value, omitFractionalSeconds, tag)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Formats.Asn1</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.DateTimeOffset" />
        <Parameter Name="omitFractionalSeconds" Type="System.Boolean" />
        <Parameter Name="tag" Type="System.Nullable&lt;System.Formats.Asn1.Asn1Tag&gt;" />
      </Parameters>
      <Docs>
        <param name="value">Der zu schreibende Wert.</param>
        <param name="omitFractionalSeconds"><see langword="true" />, wenn die Sekundenbruchteile in <paramref name="value" /> selbst dann als 0 behandelt werden sollen, wenn ein Wert ungleich NULL vorhanden ist.</param>
        <param name="tag">Das zu schreibende Tag oder <see langword="null" /> für das Standardtag (Universal 24).</param>
        <summary>Schreibt den bereitgestellten <see cref="T:System.DateTimeOffset" /> als GeneralizedTime mit einem angegebenen Tag UNIVERSAL 24, wobei optional die Sekundenbruchteile ausgeschlossen werden.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> ist <see cref="F:System.Formats.Asn1.TagClass.Universal" />, aber <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> ist für die Methode nicht richtig.</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteInteger">
      <MemberSignature Language="C#" Value="public void WriteInteger (long value, System.Formats.Asn1.Asn1Tag? tag = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteInteger(int64 value, valuetype System.Nullable`1&lt;valuetype System.Formats.Asn1.Asn1Tag&gt; tag) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Formats.Asn1.AsnWriter.WriteInteger(System.Int64,System.Nullable{System.Formats.Asn1.Asn1Tag})" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteInteger (value As Long, Optional tag As Nullable(Of Asn1Tag) = Nothing)" />
      <MemberSignature Language="F#" Value="member this.WriteInteger : int64 * Nullable&lt;System.Formats.Asn1.Asn1Tag&gt; -&gt; unit" Usage="asnWriter.WriteInteger (value, tag)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Formats.Asn1</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
        <Parameter Name="tag" Type="System.Nullable&lt;System.Formats.Asn1.Asn1Tag&gt;" />
      </Parameters>
      <Docs>
        <param name="value">Der zu schreibende Wert.</param>
        <param name="tag">Das zu schreibende Tag oder <see langword="null" /> für das Standardtag (Universal 2).</param>
        <summary>Schreibt einen Integerwert mit einem angegebenen Tag.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> ist <see cref="F:System.Formats.Asn1.TagClass.Universal" />, aber <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> ist für die Methode nicht richtig.</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteInteger">
      <MemberSignature Language="C#" Value="public void WriteInteger (System.Numerics.BigInteger value, System.Formats.Asn1.Asn1Tag? tag = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteInteger(valuetype System.Numerics.BigInteger value, valuetype System.Nullable`1&lt;valuetype System.Formats.Asn1.Asn1Tag&gt; tag) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Formats.Asn1.AsnWriter.WriteInteger(System.Numerics.BigInteger,System.Nullable{System.Formats.Asn1.Asn1Tag})" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteInteger (value As BigInteger, Optional tag As Nullable(Of Asn1Tag) = Nothing)" />
      <MemberSignature Language="F#" Value="member this.WriteInteger : System.Numerics.BigInteger * Nullable&lt;System.Formats.Asn1.Asn1Tag&gt; -&gt; unit" Usage="asnWriter.WriteInteger (value, tag)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Formats.Asn1</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.BigInteger" />
        <Parameter Name="tag" Type="System.Nullable&lt;System.Formats.Asn1.Asn1Tag&gt;" />
      </Parameters>
      <Docs>
        <param name="value">Der zu schreibende Wert.</param>
        <param name="tag">Das zu schreibende Tag oder <see langword="null" /> für das Standardtag (Universal 2).</param>
        <summary>Schreibt einen Integerwert mit einem angegebenen Tag.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> ist <see cref="F:System.Formats.Asn1.TagClass.Universal" />, aber <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> ist für die Methode nicht richtig.</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteInteger">
      <MemberSignature Language="C#" Value="public void WriteInteger (ReadOnlySpan&lt;byte&gt; value, System.Formats.Asn1.Asn1Tag? tag = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteInteger(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; value, valuetype System.Nullable`1&lt;valuetype System.Formats.Asn1.Asn1Tag&gt; tag) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Formats.Asn1.AsnWriter.WriteInteger(System.ReadOnlySpan{System.Byte},System.Nullable{System.Formats.Asn1.Asn1Tag})" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteInteger (value As ReadOnlySpan(Of Byte), Optional tag As Nullable(Of Asn1Tag) = Nothing)" />
      <MemberSignature Language="F#" Value="member this.WriteInteger : ReadOnlySpan&lt;byte&gt; * Nullable&lt;System.Formats.Asn1.Asn1Tag&gt; -&gt; unit" Usage="asnWriter.WriteInteger (value, tag)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Formats.Asn1</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="tag" Type="System.Nullable&lt;System.Formats.Asn1.Asn1Tag&gt;" />
      </Parameters>
      <Docs>
        <param name="value">Der zu schreibende Integerwert in der big-endian-Bytereihenfolge mit Vorzeichen.</param>
        <param name="tag">Das zu schreibende Tag oder <see langword="null" /> für das Standardtag (Universal 2).</param>
        <summary>Schreibt einen Integerwert mit einem angegebenen Tag.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> ist <see cref="F:System.Formats.Asn1.TagClass.Universal" />, aber <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> ist für die Methode nicht richtig.</exception>
        <exception cref="T:System.ArgumentException">Die 9 signifikantesten Bits sind alle festgelegt.
Oder die 9 signifikantesten Bits sind alle nicht festgelegt.</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteInteger">
      <MemberSignature Language="C#" Value="public void WriteInteger (ulong value, System.Formats.Asn1.Asn1Tag? tag = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteInteger(unsigned int64 value, valuetype System.Nullable`1&lt;valuetype System.Formats.Asn1.Asn1Tag&gt; tag) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Formats.Asn1.AsnWriter.WriteInteger(System.UInt64,System.Nullable{System.Formats.Asn1.Asn1Tag})" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteInteger (value As ULong, Optional tag As Nullable(Of Asn1Tag) = Nothing)" />
      <MemberSignature Language="F#" Value="member this.WriteInteger : uint64 * Nullable&lt;System.Formats.Asn1.Asn1Tag&gt; -&gt; unit" Usage="asnWriter.WriteInteger (value, tag)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Formats.Asn1</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.CLSCompliant(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.CLSCompliant(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt64" />
        <Parameter Name="tag" Type="System.Nullable&lt;System.Formats.Asn1.Asn1Tag&gt;" />
      </Parameters>
      <Docs>
        <param name="value">Der zu schreibende Wert.</param>
        <param name="tag">Das zu schreibende Tag oder <see langword="null" /> für das Standardtag (Universal 2).</param>
        <summary>Schreibt einen Integerwert mit einem angegebenen Tag.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> ist <see cref="F:System.Formats.Asn1.TagClass.Universal" />, aber <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> ist für die Methode nicht richtig.</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteIntegerUnsigned">
      <MemberSignature Language="C#" Value="public void WriteIntegerUnsigned (ReadOnlySpan&lt;byte&gt; value, System.Formats.Asn1.Asn1Tag? tag = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteIntegerUnsigned(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; value, valuetype System.Nullable`1&lt;valuetype System.Formats.Asn1.Asn1Tag&gt; tag) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Formats.Asn1.AsnWriter.WriteIntegerUnsigned(System.ReadOnlySpan{System.Byte},System.Nullable{System.Formats.Asn1.Asn1Tag})" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteIntegerUnsigned (value As ReadOnlySpan(Of Byte), Optional tag As Nullable(Of Asn1Tag) = Nothing)" />
      <MemberSignature Language="F#" Value="member this.WriteIntegerUnsigned : ReadOnlySpan&lt;byte&gt; * Nullable&lt;System.Formats.Asn1.Asn1Tag&gt; -&gt; unit" Usage="asnWriter.WriteIntegerUnsigned (value, tag)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Formats.Asn1</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="tag" Type="System.Nullable&lt;System.Formats.Asn1.Asn1Tag&gt;" />
      </Parameters>
      <Docs>
        <param name="value">Der zu schreibende Integerwert in big-endian-Bytereihenfolge ohne Vorzeichen.</param>
        <param name="tag">Das zu schreibende Tag oder <see langword="null" /> für das Standardtag (Universal 2).</param>
        <summary>Schreibt einen Integerwert mit einem angegebenen Tag.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> ist <see cref="F:System.Formats.Asn1.TagClass.Universal" />, aber <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> ist für die Methode nicht richtig.</exception>
        <exception cref="T:System.ArgumentException">Die 9 signifikantesten Bits sind alle nicht festgelegt.</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteNamedBitList">
      <MemberSignature Language="C#" Value="public void WriteNamedBitList (System.Collections.BitArray value, System.Formats.Asn1.Asn1Tag? tag = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteNamedBitList(class System.Collections.BitArray value, valuetype System.Nullable`1&lt;valuetype System.Formats.Asn1.Asn1Tag&gt; tag) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Formats.Asn1.AsnWriter.WriteNamedBitList(System.Collections.BitArray,System.Nullable{System.Formats.Asn1.Asn1Tag})" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteNamedBitList (value As BitArray, Optional tag As Nullable(Of Asn1Tag) = Nothing)" />
      <MemberSignature Language="F#" Value="member this.WriteNamedBitList : System.Collections.BitArray * Nullable&lt;System.Formats.Asn1.Asn1Tag&gt; -&gt; unit" Usage="asnWriter.WriteNamedBitList (value, tag)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Formats.Asn1</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Collections.BitArray" />
        <Parameter Name="tag" Type="System.Nullable&lt;System.Formats.Asn1.Asn1Tag&gt;" />
      </Parameters>
      <Docs>
        <param name="value">Die zu schreibende Bits.</param>
        <param name="tag">Das zu schreibende Tag oder <see langword="null" /> für das Standardtag (Universal 3).</param>
        <summary>Schreibt einen Bit-Arraywert als NamedBitList mit einem angegebenen Tag.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

Der Index des Bitarrays entspricht der Bitzahl im codierten Format, das sich von dem Wert unterscheidet, der von <xref:System.Collections.BitArray.CopyTo(System.Array,System.Int32)> mit einem Bytearray erzeugt wird.
Das BitArray `{ false, true, true }` codiert z `0b0110_0000` . b. wie bei fünf nicht verwendeten Bits.

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> ist <see cref="F:System.Formats.Asn1.TagClass.Universal" />, aber <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> ist für die Methode nicht richtig.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="value" /> ist <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteNamedBitList">
      <MemberSignature Language="C#" Value="public void WriteNamedBitList (Enum value, System.Formats.Asn1.Asn1Tag? tag = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteNamedBitList(class System.Enum value, valuetype System.Nullable`1&lt;valuetype System.Formats.Asn1.Asn1Tag&gt; tag) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Formats.Asn1.AsnWriter.WriteNamedBitList(System.Enum,System.Nullable{System.Formats.Asn1.Asn1Tag})" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteNamedBitList (value As Enum, Optional tag As Nullable(Of Asn1Tag) = Nothing)" />
      <MemberSignature Language="F#" Value="member this.WriteNamedBitList : Enum * Nullable&lt;System.Formats.Asn1.Asn1Tag&gt; -&gt; unit" Usage="asnWriter.WriteNamedBitList (value, tag)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Formats.Asn1</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Enum" />
        <Parameter Name="tag" Type="System.Nullable&lt;System.Formats.Asn1.Asn1Tag&gt;" />
      </Parameters>
      <Docs>
        <param name="value">Der zu schreibende geschachtelte Enumerationswert.</param>
        <param name="tag">Das zu schreibende Tag oder <see langword="null" /> für das Standardtag (Universal 3).</param>
        <summary>Schreibt einen [<see cref="T:System.FlagsAttribute" />]-Enumerationswert als NamedBitList mit einem angegebenen Tag.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> ist <see cref="F:System.Formats.Asn1.TagClass.Universal" />, aber <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> ist für die Methode nicht richtig.
Oder <paramref name="value" /> ist kein geschachtelter Enumerationswert.
Oder der nicht geschachtelte Typ von <paramref name="value" /> wird nicht als [<see cref="T:System.FlagsAttribute" />] deklariert.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="value" /> ist <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteNamedBitList&lt;TEnum&gt;">
      <MemberSignature Language="C#" Value="public void WriteNamedBitList&lt;TEnum&gt; (TEnum value, System.Formats.Asn1.Asn1Tag? tag = default) where TEnum : Enum;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteNamedBitList&lt;(class System.Enum) TEnum&gt;(!!TEnum value, valuetype System.Nullable`1&lt;valuetype System.Formats.Asn1.Asn1Tag&gt; tag) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Formats.Asn1.AsnWriter.WriteNamedBitList``1(``0,System.Nullable{System.Formats.Asn1.Asn1Tag})" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteNamedBitList(Of TEnum As Enum) (value As TEnum, Optional tag As Nullable(Of Asn1Tag) = Nothing)" />
      <MemberSignature Language="F#" Value="member this.WriteNamedBitList : 'Enum * Nullable&lt;System.Formats.Asn1.Asn1Tag&gt; -&gt; unit (requires 'Enum :&gt; Enum)" Usage="asnWriter.WriteNamedBitList (value, tag)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Formats.Asn1</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TEnum">
          <Constraints>
            <BaseTypeName>System.Enum</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="value" Type="TEnum" />
        <Parameter Name="tag" Type="System.Nullable&lt;System.Formats.Asn1.Asn1Tag&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TEnum">To be added.</typeparam>
        <param name="value">Der zu schreibende Enumerationswert.</param>
        <param name="tag">Das zu schreibende Tag oder <see langword="null" /> für das Standardtag (Universal 3).</param>
        <summary>Schreibt einen [<see cref="T:System.FlagsAttribute" />]-Enumerationswert als NamedBitList mit einem angegebenen Tag.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> ist <see cref="F:System.Formats.Asn1.TagClass.Universal" />, aber <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> ist für die Methode nicht richtig.
Oder <typeparamref name="TEnum" /> ist kein Enumerationswert.
Oder <typeparamref name="TEnum" /> ist nicht als [<see cref="T:System.FlagsAttribute" />] deklariert.</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteNull">
      <MemberSignature Language="C#" Value="public void WriteNull (System.Formats.Asn1.Asn1Tag? tag = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteNull(valuetype System.Nullable`1&lt;valuetype System.Formats.Asn1.Asn1Tag&gt; tag) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Formats.Asn1.AsnWriter.WriteNull(System.Nullable{System.Formats.Asn1.Asn1Tag})" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteNull (Optional tag As Nullable(Of Asn1Tag) = Nothing)" />
      <MemberSignature Language="F#" Value="member this.WriteNull : Nullable&lt;System.Formats.Asn1.Asn1Tag&gt; -&gt; unit" Usage="asnWriter.WriteNull tag" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Formats.Asn1</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tag" Type="System.Nullable&lt;System.Formats.Asn1.Asn1Tag&gt;" />
      </Parameters>
      <Docs>
        <param name="tag">Das zu schreibende Tag oder <see langword="null" /> für das Standardtag (Universal 5).</param>
        <summary>Schreibt NULL mit einem angegebenen Tag.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> ist <see cref="F:System.Formats.Asn1.TagClass.Universal" />, aber <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> ist für die Methode nicht richtig.</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteObjectIdentifier">
      <MemberSignature Language="C#" Value="public void WriteObjectIdentifier (ReadOnlySpan&lt;char&gt; oidValue, System.Formats.Asn1.Asn1Tag? tag = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteObjectIdentifier(valuetype System.ReadOnlySpan`1&lt;char&gt; oidValue, valuetype System.Nullable`1&lt;valuetype System.Formats.Asn1.Asn1Tag&gt; tag) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Formats.Asn1.AsnWriter.WriteObjectIdentifier(System.ReadOnlySpan{System.Char},System.Nullable{System.Formats.Asn1.Asn1Tag})" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteObjectIdentifier (oidValue As ReadOnlySpan(Of Char), Optional tag As Nullable(Of Asn1Tag) = Nothing)" />
      <MemberSignature Language="F#" Value="member this.WriteObjectIdentifier : ReadOnlySpan&lt;char&gt; * Nullable&lt;System.Formats.Asn1.Asn1Tag&gt; -&gt; unit" Usage="asnWriter.WriteObjectIdentifier (oidValue, tag)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Formats.Asn1</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oidValue" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="tag" Type="System.Nullable&lt;System.Formats.Asn1.Asn1Tag&gt;" />
      </Parameters>
      <Docs>
        <param name="oidValue">Der zu schreibende Objektbezeichner.</param>
        <param name="tag">Das zu schreibende Tag oder <see langword="null" /> für das Standardtag (Universal 6).</param>
        <summary>Schreibt einen Objektbezeichner mit einem angegebenen Tag.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> ist <see cref="F:System.Formats.Asn1.TagClass.Universal" />, aber <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> ist für die Methode nicht richtig.
Oder <paramref name="oidValue" /> ist kein gültiger punktierter Dezimalobjektbezeichner.</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteObjectIdentifier">
      <MemberSignature Language="C#" Value="public void WriteObjectIdentifier (string oidValue, System.Formats.Asn1.Asn1Tag? tag = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteObjectIdentifier(string oidValue, valuetype System.Nullable`1&lt;valuetype System.Formats.Asn1.Asn1Tag&gt; tag) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Formats.Asn1.AsnWriter.WriteObjectIdentifier(System.String,System.Nullable{System.Formats.Asn1.Asn1Tag})" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteObjectIdentifier (oidValue As String, Optional tag As Nullable(Of Asn1Tag) = Nothing)" />
      <MemberSignature Language="F#" Value="member this.WriteObjectIdentifier : string * Nullable&lt;System.Formats.Asn1.Asn1Tag&gt; -&gt; unit" Usage="asnWriter.WriteObjectIdentifier (oidValue, tag)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Formats.Asn1</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oidValue" Type="System.String" />
        <Parameter Name="tag" Type="System.Nullable&lt;System.Formats.Asn1.Asn1Tag&gt;" />
      </Parameters>
      <Docs>
        <param name="oidValue">Der zu schreibende Objektbezeichner.</param>
        <param name="tag">Das zu schreibende Tag oder <see langword="null" /> für das Standardtag (Universal 6).</param>
        <summary>Schreibt einen Objektbezeichner mit einem angegebenen Tag.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> ist <see cref="F:System.Formats.Asn1.TagClass.Universal" />, aber <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> ist für die Methode nicht richtig.
Oder <paramref name="oidValue" /> ist kein gültiger punktierter Dezimalobjektbezeichner.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="oidValue" /> ist <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteOctetString">
      <MemberSignature Language="C#" Value="public void WriteOctetString (ReadOnlySpan&lt;byte&gt; value, System.Formats.Asn1.Asn1Tag? tag = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteOctetString(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; value, valuetype System.Nullable`1&lt;valuetype System.Formats.Asn1.Asn1Tag&gt; tag) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Formats.Asn1.AsnWriter.WriteOctetString(System.ReadOnlySpan{System.Byte},System.Nullable{System.Formats.Asn1.Asn1Tag})" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteOctetString (value As ReadOnlySpan(Of Byte), Optional tag As Nullable(Of Asn1Tag) = Nothing)" />
      <MemberSignature Language="F#" Value="member this.WriteOctetString : ReadOnlySpan&lt;byte&gt; * Nullable&lt;System.Formats.Asn1.Asn1Tag&gt; -&gt; unit" Usage="asnWriter.WriteOctetString (value, tag)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Formats.Asn1</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="tag" Type="System.Nullable&lt;System.Formats.Asn1.Asn1Tag&gt;" />
      </Parameters>
      <Docs>
        <param name="value">Der zu schreibende Wert.</param>
        <param name="tag">Das zu schreibende Tag oder <see langword="null" /> für das Standardtag (Universal 4).</param>
        <summary>Schreibt einen Oktett-Zeichenfolgenwert mit einem angegebenen Tag.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> ist <see cref="F:System.Formats.Asn1.TagClass.Universal" />, aber <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> ist für die Methode nicht richtig.</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteUtcTime">
      <MemberSignature Language="C#" Value="public void WriteUtcTime (DateTimeOffset value, System.Formats.Asn1.Asn1Tag? tag = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteUtcTime(valuetype System.DateTimeOffset value, valuetype System.Nullable`1&lt;valuetype System.Formats.Asn1.Asn1Tag&gt; tag) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Formats.Asn1.AsnWriter.WriteUtcTime(System.DateTimeOffset,System.Nullable{System.Formats.Asn1.Asn1Tag})" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteUtcTime (value As DateTimeOffset, Optional tag As Nullable(Of Asn1Tag) = Nothing)" />
      <MemberSignature Language="F#" Value="member this.WriteUtcTime : DateTimeOffset * Nullable&lt;System.Formats.Asn1.Asn1Tag&gt; -&gt; unit" Usage="asnWriter.WriteUtcTime (value, tag)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Formats.Asn1</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.DateTimeOffset" />
        <Parameter Name="tag" Type="System.Nullable&lt;System.Formats.Asn1.Asn1Tag&gt;" />
      </Parameters>
      <Docs>
        <param name="value">Der zu schreibende Wert.</param>
        <param name="tag">Das zu schreibende Tag oder <see langword="null" /> für das Standardtag (Universal 23).</param>
        <summary>Schreibt den bereitgestellten Wert als UTCTime mit einem angegebenen Tag und akzeptiert das zweistellige Jahr als im Kontext gültig.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> ist <see cref="F:System.Formats.Asn1.TagClass.Universal" />, aber <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> ist für die Methode nicht richtig.</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteUtcTime">
      <MemberSignature Language="C#" Value="public void WriteUtcTime (DateTimeOffset value, int twoDigitYearMax, System.Formats.Asn1.Asn1Tag? tag = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteUtcTime(valuetype System.DateTimeOffset value, int32 twoDigitYearMax, valuetype System.Nullable`1&lt;valuetype System.Formats.Asn1.Asn1Tag&gt; tag) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Formats.Asn1.AsnWriter.WriteUtcTime(System.DateTimeOffset,System.Int32,System.Nullable{System.Formats.Asn1.Asn1Tag})" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteUtcTime (value As DateTimeOffset, twoDigitYearMax As Integer, Optional tag As Nullable(Of Asn1Tag) = Nothing)" />
      <MemberSignature Language="F#" Value="member this.WriteUtcTime : DateTimeOffset * int * Nullable&lt;System.Formats.Asn1.Asn1Tag&gt; -&gt; unit" Usage="asnWriter.WriteUtcTime (value, twoDigitYearMax, tag)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Formats.Asn1</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.DateTimeOffset" />
        <Parameter Name="twoDigitYearMax" Type="System.Int32" />
        <Parameter Name="tag" Type="System.Nullable&lt;System.Formats.Asn1.Asn1Tag&gt;" />
      </Parameters>
      <Docs>
        <param name="value">Der zu schreibende Wert.</param>
        <param name="twoDigitYearMax">Das maximale gültige Jahr für <paramref name="value" /> nach der Konvertierung in UTC.
Übergibt für den X.509-Time.utcTime-Bereich von 1950 bis 2049 den Wert <c>2049</c>.</param>
        <param name="tag">Das zu schreibende Tag oder <see langword="null" /> für das Standardtag (Universal 23).</param>
        <summary>Schreibt den bereitgestellten Wert als UTCTime mit einem angegebenen Tag, sofern das Jahr im zulässigen Bereich liegt.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> ist <see cref="F:System.Formats.Asn1.TagClass.Universal" />, aber <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> ist für die Methode nicht richtig.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="value" />.<see cref="P:System.DateTimeOffset.Year" /> (nach der Konvertierung in UTC) liegt nicht im Bereich (<paramref name="twoDigitYearMax" /> - 100, <paramref name="twoDigitYearMax" />].</exception>
      </Docs>
    </Member>
  </Members>
</Type>
