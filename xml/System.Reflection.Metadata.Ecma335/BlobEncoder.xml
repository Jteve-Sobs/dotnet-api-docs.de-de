<Type Name="BlobEncoder" FullName="System.Reflection.Metadata.Ecma335.BlobEncoder">
  <Metadata><Meta Name="ms.openlocfilehash" Value="a87db275000ff3a7d8db431ddd66d4a80aed55d3" /><Meta Name="ms.sourcegitcommit" Value="99247877c0ae3f6b8619b55f52be0419280a6aa5" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="08/27/2020" /><Meta Name="ms.locfileid" Value="88952484" /></Metadata><TypeSignature Language="C#" Value="public struct BlobEncoder" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit BlobEncoder extends System.ValueType" />
  <TypeSignature Language="DocId" Value="T:System.Reflection.Metadata.Ecma335.BlobEncoder" />
  <TypeSignature Language="VB.NET" Value="Public Structure BlobEncoder" />
  <TypeSignature Language="C++ CLI" Value="public value class BlobEncoder" />
  <TypeSignature Language="F#" Value="type BlobEncoder = struct" />
  <AssemblyInfo>
    <AssemblyName>System.Reflection.Metadata</AssemblyName>
    <AssemblyVersion>1.4.1.0</AssemblyVersion>
    <AssemblyVersion>1.4.2.0</AssemblyVersion>
    <AssemblyVersion>1.4.3.0</AssemblyVersion>
    <AssemblyVersion>1.4.4.0</AssemblyVersion>
    <AssemblyVersion>1.4.5.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="net-5.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1">
      <AttributeName Language="C#">[System.Runtime.CompilerServices.IsReadOnly]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.IsReadOnly&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BlobEncoder (System.Reflection.Metadata.BlobBuilder builder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Reflection.Metadata.BlobBuilder builder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.Ecma335.BlobEncoder.#ctor(System.Reflection.Metadata.BlobBuilder)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (builder As BlobBuilder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BlobEncoder(System::Reflection::Metadata::BlobBuilder ^ builder);" />
      <MemberSignature Language="F#" Value="new System.Reflection.Metadata.Ecma335.BlobEncoder : System.Reflection.Metadata.BlobBuilder -&gt; System.Reflection.Metadata.Ecma335.BlobEncoder" Usage="new System.Reflection.Metadata.Ecma335.BlobEncoder builder" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
        <AssemblyVersion>1.4.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="builder" Type="System.Reflection.Metadata.BlobBuilder" />
      </Parameters>
      <Docs>
        <param name="builder">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Builder">
      <MemberSignature Language="C#" Value="public System.Reflection.Metadata.BlobBuilder Builder { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.Metadata.BlobBuilder Builder" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Metadata.Ecma335.BlobEncoder.Builder" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Builder As BlobBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Reflection::Metadata::BlobBuilder ^ Builder { System::Reflection::Metadata::BlobBuilder ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Builder : System.Reflection.Metadata.BlobBuilder" Usage="System.Reflection.Metadata.Ecma335.BlobEncoder.Builder" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
        <AssemblyVersion>1.4.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Metadata.BlobBuilder</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CustomAttributeSignature">
      <MemberSignature Language="C#" Value="public void CustomAttributeSignature (Action&lt;System.Reflection.Metadata.Ecma335.FixedArgumentsEncoder&gt; fixedArguments, Action&lt;System.Reflection.Metadata.Ecma335.CustomAttributeNamedArgumentsEncoder&gt; namedArguments);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CustomAttributeSignature(class System.Action`1&lt;valuetype System.Reflection.Metadata.Ecma335.FixedArgumentsEncoder&gt; fixedArguments, class System.Action`1&lt;valuetype System.Reflection.Metadata.Ecma335.CustomAttributeNamedArgumentsEncoder&gt; namedArguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.Ecma335.BlobEncoder.CustomAttributeSignature(System.Action{System.Reflection.Metadata.Ecma335.FixedArgumentsEncoder},System.Action{System.Reflection.Metadata.Ecma335.CustomAttributeNamedArgumentsEncoder})" />
      <MemberSignature Language="VB.NET" Value="Public Sub CustomAttributeSignature (fixedArguments As Action(Of FixedArgumentsEncoder), namedArguments As Action(Of CustomAttributeNamedArgumentsEncoder))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CustomAttributeSignature(Action&lt;System::Reflection::Metadata::Ecma335::FixedArgumentsEncoder&gt; ^ fixedArguments, Action&lt;System::Reflection::Metadata::Ecma335::CustomAttributeNamedArgumentsEncoder&gt; ^ namedArguments);" />
      <MemberSignature Language="F#" Value="member this.CustomAttributeSignature : Action&lt;System.Reflection.Metadata.Ecma335.FixedArgumentsEncoder&gt; * Action&lt;System.Reflection.Metadata.Ecma335.CustomAttributeNamedArgumentsEncoder&gt; -&gt; unit" Usage="blobEncoder.CustomAttributeSignature (fixedArguments, namedArguments)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
        <AssemblyVersion>1.4.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fixedArguments" Type="System.Action&lt;System.Reflection.Metadata.Ecma335.FixedArgumentsEncoder&gt;" />
        <Parameter Name="namedArguments" Type="System.Action&lt;System.Reflection.Metadata.Ecma335.CustomAttributeNamedArgumentsEncoder&gt;" />
      </Parameters>
      <Docs>
        <param name="fixedArguments"><span data-ttu-id="b36cb-101">Wird zuerst aufgerufen, um feste Argumente zu codieren.</span><span class="sxs-lookup"><span data-stu-id="b36cb-101">Called first, to encode fixed arguments.</span></span></param>
        <param name="namedArguments"><span data-ttu-id="b36cb-102">Wird als Zweites aufgerufen, um benannte Argumente zu codieren.</span><span class="sxs-lookup"><span data-stu-id="b36cb-102">Called second, to encode named arguments.</span></span></param>
        <summary><span data-ttu-id="b36cb-103">Codiert einen benutzerdefinierten Attributsignatur-Blob.</span><span class="sxs-lookup"><span data-stu-id="b36cb-103">Encodes custom attribute signature blob.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b36cb-104"><paramref name="fixedArguments" /> oder <paramref name="namedArguments" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="b36cb-104"><paramref name="fixedArguments" /> or <paramref name="namedArguments" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CustomAttributeSignature">
      <MemberSignature Language="C#" Value="public void CustomAttributeSignature (out System.Reflection.Metadata.Ecma335.FixedArgumentsEncoder fixedArguments, out System.Reflection.Metadata.Ecma335.CustomAttributeNamedArgumentsEncoder namedArguments);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CustomAttributeSignature([out] valuetype System.Reflection.Metadata.Ecma335.FixedArgumentsEncoder&amp; fixedArguments, [out] valuetype System.Reflection.Metadata.Ecma335.CustomAttributeNamedArgumentsEncoder&amp; namedArguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.Ecma335.BlobEncoder.CustomAttributeSignature(System.Reflection.Metadata.Ecma335.FixedArgumentsEncoder@,System.Reflection.Metadata.Ecma335.CustomAttributeNamedArgumentsEncoder@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CustomAttributeSignature (ByRef fixedArguments As FixedArgumentsEncoder, ByRef namedArguments As CustomAttributeNamedArgumentsEncoder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CustomAttributeSignature([Runtime::InteropServices::Out] System::Reflection::Metadata::Ecma335::FixedArgumentsEncoder % fixedArguments, [Runtime::InteropServices::Out] System::Reflection::Metadata::Ecma335::CustomAttributeNamedArgumentsEncoder % namedArguments);" />
      <MemberSignature Language="F#" Value="member this.CustomAttributeSignature : FixedArgumentsEncoder * CustomAttributeNamedArgumentsEncoder -&gt; unit" Usage="blobEncoder.CustomAttributeSignature (fixedArguments, namedArguments)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
        <AssemblyVersion>1.4.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fixedArguments" Type="System.Reflection.Metadata.Ecma335.FixedArgumentsEncoder" RefType="out" />
        <Parameter Name="namedArguments" Type="System.Reflection.Metadata.Ecma335.CustomAttributeNamedArgumentsEncoder" RefType="out" />
      </Parameters>
      <Docs>
        <param name="fixedArguments"><span data-ttu-id="b36cb-105">Zuerst verwenden, um feste Argumente zu codieren.</span><span class="sxs-lookup"><span data-stu-id="b36cb-105">Use first, to encode fixed arguments.</span></span></param>
        <param name="namedArguments"><span data-ttu-id="b36cb-106">Als Zweites verwenden, um benannte Argumente zu codieren.</span><span class="sxs-lookup"><span data-stu-id="b36cb-106">Use second, to encode named arguments.</span></span></param>
        <summary><span data-ttu-id="b36cb-107">Codiert einen benutzerdefinierten Attributsignatur-Blob.</span><span class="sxs-lookup"><span data-stu-id="b36cb-107">Encodes custom attribute signature blob.</span></span>
<span data-ttu-id="b36cb-108">Gibt ein Encoderpaar zurück, das in der Reihenfolge verwendet werden muss, in der die Encoder in der Parameterliste angezeigt werden.</span><span class="sxs-lookup"><span data-stu-id="b36cb-108">Returns a pair of encoders that must be used in the order they appear in the parameter list.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FieldSignature">
      <MemberSignature Language="C#" Value="public System.Reflection.Metadata.Ecma335.SignatureTypeEncoder FieldSignature ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Reflection.Metadata.Ecma335.SignatureTypeEncoder FieldSignature() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.Ecma335.BlobEncoder.FieldSignature" />
      <MemberSignature Language="VB.NET" Value="Public Function FieldSignature () As SignatureTypeEncoder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Metadata::Ecma335::SignatureTypeEncoder FieldSignature();" />
      <MemberSignature Language="F#" Value="member this.FieldSignature : unit -&gt; System.Reflection.Metadata.Ecma335.SignatureTypeEncoder" Usage="blobEncoder.FieldSignature " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
        <AssemblyVersion>1.4.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Metadata.Ecma335.SignatureTypeEncoder</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b36cb-109">Codiert einen Feldsignatur-Blob.</span><span class="sxs-lookup"><span data-stu-id="b36cb-109">Encodes field signature blob.</span></span></summary>
        <returns><span data-ttu-id="b36cb-110">Encoder des Feldtyps.</span><span class="sxs-lookup"><span data-stu-id="b36cb-110">Encoder of the field type.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LocalVariableSignature">
      <MemberSignature Language="C#" Value="public System.Reflection.Metadata.Ecma335.LocalVariablesEncoder LocalVariableSignature (int variableCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Reflection.Metadata.Ecma335.LocalVariablesEncoder LocalVariableSignature(int32 variableCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.Ecma335.BlobEncoder.LocalVariableSignature(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function LocalVariableSignature (variableCount As Integer) As LocalVariablesEncoder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Metadata::Ecma335::LocalVariablesEncoder LocalVariableSignature(int variableCount);" />
      <MemberSignature Language="F#" Value="member this.LocalVariableSignature : int -&gt; System.Reflection.Metadata.Ecma335.LocalVariablesEncoder" Usage="blobEncoder.LocalVariableSignature variableCount" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
        <AssemblyVersion>1.4.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Metadata.Ecma335.LocalVariablesEncoder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="variableCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="variableCount"><span data-ttu-id="b36cb-111">Anzahl der lokalen Variablen.</span><span class="sxs-lookup"><span data-stu-id="b36cb-111">Number of local variables.</span></span></param>
        <summary><span data-ttu-id="b36cb-112">Codiert die lokale Variablensignatur.</span><span class="sxs-lookup"><span data-stu-id="b36cb-112">Encodes local variable signature.</span></span></summary>
        <returns><span data-ttu-id="b36cb-113">Encoder einer Sequenz von lokalen Variablen.</span><span class="sxs-lookup"><span data-stu-id="b36cb-113">Encoder of a sequence of local variables.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="b36cb-114"><paramref name="variableCount" /> liegt nicht im Bereich [0, 0x1fffffff].</span><span class="sxs-lookup"><span data-stu-id="b36cb-114"><paramref name="variableCount" /> is not in range [0, 0x1fffffff].</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="MethodSignature">
      <MemberSignature Language="C#" Value="public System.Reflection.Metadata.Ecma335.MethodSignatureEncoder MethodSignature (System.Reflection.Metadata.SignatureCallingConvention convention = System.Reflection.Metadata.SignatureCallingConvention.Default, int genericParameterCount = 0, bool isInstanceMethod = false);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Reflection.Metadata.Ecma335.MethodSignatureEncoder MethodSignature(valuetype System.Reflection.Metadata.SignatureCallingConvention convention, int32 genericParameterCount, bool isInstanceMethod) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.Ecma335.BlobEncoder.MethodSignature(System.Reflection.Metadata.SignatureCallingConvention,System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function MethodSignature (Optional convention As SignatureCallingConvention = System.Reflection.Metadata.SignatureCallingConvention.Default, Optional genericParameterCount As Integer = 0, Optional isInstanceMethod As Boolean = false) As MethodSignatureEncoder" />
      <MemberSignature Language="F#" Value="member this.MethodSignature : System.Reflection.Metadata.SignatureCallingConvention * int * bool -&gt; System.Reflection.Metadata.Ecma335.MethodSignatureEncoder" Usage="blobEncoder.MethodSignature (convention, genericParameterCount, isInstanceMethod)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
        <AssemblyVersion>1.4.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Metadata.Ecma335.MethodSignatureEncoder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="convention" Type="System.Reflection.Metadata.SignatureCallingConvention" />
        <Parameter Name="genericParameterCount" Type="System.Int32" />
        <Parameter Name="isInstanceMethod" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="convention"><span data-ttu-id="b36cb-115">Aufrufkonvention.</span><span class="sxs-lookup"><span data-stu-id="b36cb-115">Calling convention.</span></span></param>
        <param name="genericParameterCount"><span data-ttu-id="b36cb-116">Anzahl generischer Parameter.</span><span class="sxs-lookup"><span data-stu-id="b36cb-116">Number of generic parameters.</span></span></param>
        <param name="isInstanceMethod"><span data-ttu-id="b36cb-117"><see langword="true" /> zum Codieren einer Instanzmethodensignatur, <see langword="false" /> zum Codieren einer statischen Methodensignatur.</span><span class="sxs-lookup"><span data-stu-id="b36cb-117"><see langword="true" /> to encode an instance method signature, <see langword="false" /> to encode a static method signature.</span></span></param>
        <summary><span data-ttu-id="b36cb-118">Codiert einen Methodensignatur-Blob.</span><span class="sxs-lookup"><span data-stu-id="b36cb-118">Encodes method signature blob.</span></span></summary>
        <returns><span data-ttu-id="b36cb-119">Ein Encoder des Rests der Signatur, einschließlich Rückgabewert und Parameter.</span><span class="sxs-lookup"><span data-stu-id="b36cb-119">An encoder of the rest of the signature including return value and parameters.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="b36cb-120"><paramref name="genericParameterCount" /> liegt nicht im Bereich [0, 0xffff].</span><span class="sxs-lookup"><span data-stu-id="b36cb-120"><paramref name="genericParameterCount" /> is not in range [0, 0xffff].</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="MethodSpecificationSignature">
      <MemberSignature Language="C#" Value="public System.Reflection.Metadata.Ecma335.GenericTypeArgumentsEncoder MethodSpecificationSignature (int genericArgumentCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Reflection.Metadata.Ecma335.GenericTypeArgumentsEncoder MethodSpecificationSignature(int32 genericArgumentCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.Ecma335.BlobEncoder.MethodSpecificationSignature(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function MethodSpecificationSignature (genericArgumentCount As Integer) As GenericTypeArgumentsEncoder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Metadata::Ecma335::GenericTypeArgumentsEncoder MethodSpecificationSignature(int genericArgumentCount);" />
      <MemberSignature Language="F#" Value="member this.MethodSpecificationSignature : int -&gt; System.Reflection.Metadata.Ecma335.GenericTypeArgumentsEncoder" Usage="blobEncoder.MethodSpecificationSignature genericArgumentCount" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
        <AssemblyVersion>1.4.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Metadata.Ecma335.GenericTypeArgumentsEncoder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="genericArgumentCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="genericArgumentCount"><span data-ttu-id="b36cb-121">Anzahl von generischen Argumenten.</span><span class="sxs-lookup"><span data-stu-id="b36cb-121">Number of generic arguments.</span></span></param>
        <summary><span data-ttu-id="b36cb-122">Codiert einen Methodensignatur-Blob zur Spezifizierung.</span><span class="sxs-lookup"><span data-stu-id="b36cb-122">Encodes method specification signature blob.</span></span></summary>
        <returns><span data-ttu-id="b36cb-123">Encoder von generischen Argumenten.</span><span class="sxs-lookup"><span data-stu-id="b36cb-123">Encoder of generic arguments.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="b36cb-124"><paramref name="genericArgumentCount" /> liegt nicht im Bereich [0, 0xffff].</span><span class="sxs-lookup"><span data-stu-id="b36cb-124"><paramref name="genericArgumentCount" /> is not in range [0, 0xffff].</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="PermissionSetArguments">
      <MemberSignature Language="C#" Value="public System.Reflection.Metadata.Ecma335.NamedArgumentsEncoder PermissionSetArguments (int argumentCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Reflection.Metadata.Ecma335.NamedArgumentsEncoder PermissionSetArguments(int32 argumentCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.Ecma335.BlobEncoder.PermissionSetArguments(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function PermissionSetArguments (argumentCount As Integer) As NamedArgumentsEncoder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Metadata::Ecma335::NamedArgumentsEncoder PermissionSetArguments(int argumentCount);" />
      <MemberSignature Language="F#" Value="member this.PermissionSetArguments : int -&gt; System.Reflection.Metadata.Ecma335.NamedArgumentsEncoder" Usage="blobEncoder.PermissionSetArguments argumentCount" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
        <AssemblyVersion>1.4.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Metadata.Ecma335.NamedArgumentsEncoder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="argumentCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="argumentCount"><span data-ttu-id="b36cb-125">Anzahl der Argumente im Satz.</span><span class="sxs-lookup"><span data-stu-id="b36cb-125">Number of arguments in the set.</span></span></param>
        <summary><span data-ttu-id="b36cb-126">Codiert Argumente von Berechtigungssätzen.</span><span class="sxs-lookup"><span data-stu-id="b36cb-126">Encodes permission set arguments.</span></span></summary>
        <returns><span data-ttu-id="b36cb-127">Encoder der Argumente des Satzes.</span><span class="sxs-lookup"><span data-stu-id="b36cb-127">Encoder of the arguments of the set.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PermissionSetBlob">
      <MemberSignature Language="C#" Value="public System.Reflection.Metadata.Ecma335.PermissionSetEncoder PermissionSetBlob (int attributeCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Reflection.Metadata.Ecma335.PermissionSetEncoder PermissionSetBlob(int32 attributeCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.Ecma335.BlobEncoder.PermissionSetBlob(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function PermissionSetBlob (attributeCount As Integer) As PermissionSetEncoder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Metadata::Ecma335::PermissionSetEncoder PermissionSetBlob(int attributeCount);" />
      <MemberSignature Language="F#" Value="member this.PermissionSetBlob : int -&gt; System.Reflection.Metadata.Ecma335.PermissionSetEncoder" Usage="blobEncoder.PermissionSetBlob attributeCount" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
        <AssemblyVersion>1.4.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Metadata.Ecma335.PermissionSetEncoder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributeCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="attributeCount"><span data-ttu-id="b36cb-128">Anzahl der Attribute im Satz.</span><span class="sxs-lookup"><span data-stu-id="b36cb-128">Number of attributes in the set.</span></span></param>
        <summary><span data-ttu-id="b36cb-129">Codiert einen Berechtigungssatz-Blob.</span><span class="sxs-lookup"><span data-stu-id="b36cb-129">Encodes a permission set blob.</span></span></summary>
        <returns><span data-ttu-id="b36cb-130">Berechtigungssatz-Encoder.</span><span class="sxs-lookup"><span data-stu-id="b36cb-130">Permission set encoder.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="b36cb-131"><paramref name="attributeCount" /> liegt nicht im Bereich [0, 0x1fffffff].</span><span class="sxs-lookup"><span data-stu-id="b36cb-131"><paramref name="attributeCount" /> is not in range [0, 0x1fffffff].</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="PropertySignature">
      <MemberSignature Language="C#" Value="public System.Reflection.Metadata.Ecma335.MethodSignatureEncoder PropertySignature (bool isInstanceProperty = false);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Reflection.Metadata.Ecma335.MethodSignatureEncoder PropertySignature(bool isInstanceProperty) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.Ecma335.BlobEncoder.PropertySignature(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function PropertySignature (Optional isInstanceProperty As Boolean = false) As MethodSignatureEncoder" />
      <MemberSignature Language="F#" Value="member this.PropertySignature : bool -&gt; System.Reflection.Metadata.Ecma335.MethodSignatureEncoder" Usage="blobEncoder.PropertySignature isInstanceProperty" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
        <AssemblyVersion>1.4.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Metadata.Ecma335.MethodSignatureEncoder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="isInstanceProperty" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="isInstanceProperty"><span data-ttu-id="b36cb-132"><see langword="true" /> zum Codieren einer Instanzeigenschaftssignatur, <see langword="false" /> zum Codieren einer statischen Eigenschaftssignatur.</span><span class="sxs-lookup"><span data-stu-id="b36cb-132"><see langword="true" /> to encode an instance property signature, <see langword="false" /> to encode a static property signature.</span></span></param>
        <summary><span data-ttu-id="b36cb-133">Codiert einen Eigenschaftensignatur-Blob.</span><span class="sxs-lookup"><span data-stu-id="b36cb-133">Encodes property signature blob.</span></span></summary>
        <returns><span data-ttu-id="b36cb-134">Ein Encoder des Rests der Signatur, einschließlich Rückgabewert und Parametern, die die gleiche Struktur wie die Methodensignatur aufweist.</span><span class="sxs-lookup"><span data-stu-id="b36cb-134">An encoder of the rest of the signature including return value and parameters, which has the same structure as method signature.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TypeSpecificationSignature">
      <MemberSignature Language="C#" Value="public System.Reflection.Metadata.Ecma335.SignatureTypeEncoder TypeSpecificationSignature ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Reflection.Metadata.Ecma335.SignatureTypeEncoder TypeSpecificationSignature() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.Ecma335.BlobEncoder.TypeSpecificationSignature" />
      <MemberSignature Language="VB.NET" Value="Public Function TypeSpecificationSignature () As SignatureTypeEncoder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Metadata::Ecma335::SignatureTypeEncoder TypeSpecificationSignature();" />
      <MemberSignature Language="F#" Value="member this.TypeSpecificationSignature : unit -&gt; System.Reflection.Metadata.Ecma335.SignatureTypeEncoder" Usage="blobEncoder.TypeSpecificationSignature " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
        <AssemblyVersion>1.4.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Metadata.Ecma335.SignatureTypeEncoder</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b36cb-135">Codiert die Signatur zur Typspezifikation.</span><span class="sxs-lookup"><span data-stu-id="b36cb-135">Encodes type specification signature.</span></span></summary>
        <returns><span data-ttu-id="b36cb-136">Typencoder vom strukturierten Typ, dargestellt durch die Typspezifikation (er codiert keinen primitiven Typ).</span><span class="sxs-lookup"><span data-stu-id="b36cb-136">Type encoder of the structured type represented by the type specification (it shall not encode a primitive type).</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
