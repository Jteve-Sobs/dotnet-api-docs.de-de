<Type Name="CodedIndex" FullName="System.Reflection.Metadata.Ecma335.CodedIndex">
  <Metadata><Meta Name="ms.openlocfilehash" Value="b911f5fc31744ff9e3ea6bf6adf1d3b15d0fa39f" /><Meta Name="ms.sourcegitcommit" Value="48fd27f6aa659b18a958a72b9c956a9db49f2d96" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="03/12/2020" /><Meta Name="ms.locfileid" Value="79191002" /></Metadata><TypeSignature Language="C#" Value="public static class CodedIndex" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit CodedIndex extends System.Object" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1" />
  <TypeSignature Language="DocId" Value="T:System.Reflection.Metadata.Ecma335.CodedIndex" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1" />
  <TypeSignature Language="VB.NET" Value="Public Class CodedIndex" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1" />
  <TypeSignature Language="C++ CLI" Value="public ref class CodedIndex abstract sealed" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1" />
  <TypeSignature Language="F#" Value="type CodedIndex = class" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1" />
  <AssemblyInfo>
    <AssemblyName>System.Reflection.Metadata</AssemblyName>
    <AssemblyVersion>1.4.1.0</AssemblyVersion>
    <AssemblyVersion>1.4.2.0</AssemblyVersion>
    <AssemblyVersion>1.4.3.0</AssemblyVersion>
    <AssemblyVersion>1.4.4.0</AssemblyVersion>
    <AssemblyVersion>1.4.5.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="CustomAttributeType">
      <MemberSignature Language="C#" Value="public static int CustomAttributeType (System.Reflection.Metadata.EntityHandle handle);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 CustomAttributeType(valuetype System.Reflection.Metadata.EntityHandle handle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.Ecma335.CodedIndex.CustomAttributeType(System.Reflection.Metadata.EntityHandle)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CustomAttributeType (handle As EntityHandle) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int CustomAttributeType(System::Reflection::Metadata::EntityHandle handle);" />
      <MemberSignature Language="F#" Value="static member CustomAttributeType : System.Reflection.Metadata.EntityHandle -&gt; int" Usage="System.Reflection.Metadata.Ecma335.CodedIndex.CustomAttributeType handle" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
        <AssemblyVersion>1.4.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handle" Type="System.Reflection.Metadata.EntityHandle" Index="0" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="handle"><span data-ttu-id="6b815-101"><see cref="T:System.Reflection.Metadata.MethodDefinitionHandle" /> oder <see cref="T:System.Reflection.Metadata.MemberReferenceHandle" /></span><span class="sxs-lookup"><span data-stu-id="6b815-101"><see cref="T:System.Reflection.Metadata.MethodDefinitionHandle" /> or <see cref="T:System.Reflection.Metadata.MemberReferenceHandle" /></span></span></param>
        <summary><span data-ttu-id="6b815-102">Berechnet einen mit CustomAttributeType codierten Index für das angegebene Handle.</span><span class="sxs-lookup"><span data-stu-id="6b815-102">Calculates a CustomAttributeType coded index for the specified handle.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasConstant">
      <MemberSignature Language="C#" Value="public static int HasConstant (System.Reflection.Metadata.EntityHandle handle);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 HasConstant(valuetype System.Reflection.Metadata.EntityHandle handle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.Ecma335.CodedIndex.HasConstant(System.Reflection.Metadata.EntityHandle)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function HasConstant (handle As EntityHandle) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int HasConstant(System::Reflection::Metadata::EntityHandle handle);" />
      <MemberSignature Language="F#" Value="static member HasConstant : System.Reflection.Metadata.EntityHandle -&gt; int" Usage="System.Reflection.Metadata.Ecma335.CodedIndex.HasConstant handle" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
        <AssemblyVersion>1.4.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handle" Type="System.Reflection.Metadata.EntityHandle" Index="0" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="handle"><span data-ttu-id="6b815-103"><see cref="T:System.Reflection.Metadata.ParameterHandle" />, <see cref="T:System.Reflection.Metadata.FieldDefinitionHandle" />oder <see cref="T:System.Reflection.Metadata.PropertyDefinitionHandle" /></span><span class="sxs-lookup"><span data-stu-id="6b815-103"><see cref="T:System.Reflection.Metadata.ParameterHandle" />, <see cref="T:System.Reflection.Metadata.FieldDefinitionHandle" />, or <see cref="T:System.Reflection.Metadata.PropertyDefinitionHandle" /></span></span></param>
        <summary><span data-ttu-id="6b815-104">Berechnet einen mit HasConstant codierten Index für das angegebene Handle.</span><span class="sxs-lookup"><span data-stu-id="6b815-104">Calculates a HasConstant coded index for the specified handle.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasCustomAttribute">
      <MemberSignature Language="C#" Value="public static int HasCustomAttribute (System.Reflection.Metadata.EntityHandle handle);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 HasCustomAttribute(valuetype System.Reflection.Metadata.EntityHandle handle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.Ecma335.CodedIndex.HasCustomAttribute(System.Reflection.Metadata.EntityHandle)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function HasCustomAttribute (handle As EntityHandle) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int HasCustomAttribute(System::Reflection::Metadata::EntityHandle handle);" />
      <MemberSignature Language="F#" Value="static member HasCustomAttribute : System.Reflection.Metadata.EntityHandle -&gt; int" Usage="System.Reflection.Metadata.Ecma335.CodedIndex.HasCustomAttribute handle" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
        <AssemblyVersion>1.4.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handle" Type="System.Reflection.Metadata.EntityHandle" Index="0" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="handle"><span data-ttu-id="6b815-105"><see cref="T:System.Reflection.Metadata.MethodDefinitionHandle" />, <see cref="T:System.Reflection.Metadata.FieldDefinitionHandle" />, <see cref="T:System.Reflection.Metadata.TypeReferenceHandle" />, <see cref="T:System.Reflection.Metadata.TypeDefinitionHandle" />, <see cref="T:System.Reflection.Metadata.ParameterHandle" />, <see cref="T:System.Reflection.Metadata.InterfaceImplementationHandle" />, <see cref="T:System.Reflection.Metadata.MemberReferenceHandle" />, <see cref="T:System.Reflection.Metadata.ModuleDefinitionHandle" />, <see cref="T:System.Reflection.Metadata.DeclarativeSecurityAttributeHandle" />, <see cref="T:System.Reflection.Metadata.PropertyDefinitionHandle" />, <see cref="T:System.Reflection.Metadata.EventDefinitionHandle" />, <see cref="T:System.Reflection.Metadata.StandaloneSignatureHandle" />, <see cref="T:System.Reflection.Metadata.ModuleReferenceHandle" />, <see cref="T:System.Reflection.Metadata.TypeSpecificationHandle" />, <see cref="T:System.Reflection.Metadata.AssemblyDefinitionHandle" />, <see cref="T:System.Reflection.Metadata.AssemblyReferenceHandle" />, <see cref="T:System.Reflection.Metadata.AssemblyFileHandle" />, <see cref="T:System.Reflection.Metadata.ExportedTypeHandle" />, <see cref="T:System.Reflection.Metadata.ManifestResourceHandle" />, <see cref="T:System.Reflection.Metadata.GenericParameterHandle" />, <see cref="T:System.Reflection.Metadata.GenericParameterConstraintHandle" /> oder <see cref="T:System.Reflection.Metadata.MethodSpecificationHandle" />.</span><span class="sxs-lookup"><span data-stu-id="6b815-105"><see cref="T:System.Reflection.Metadata.MethodDefinitionHandle" />, <see cref="T:System.Reflection.Metadata.FieldDefinitionHandle" />, <see cref="T:System.Reflection.Metadata.TypeReferenceHandle" />, <see cref="T:System.Reflection.Metadata.TypeDefinitionHandle" />, <see cref="T:System.Reflection.Metadata.ParameterHandle" />, <see cref="T:System.Reflection.Metadata.InterfaceImplementationHandle" />, <see cref="T:System.Reflection.Metadata.MemberReferenceHandle" />, <see cref="T:System.Reflection.Metadata.ModuleDefinitionHandle" />, <see cref="T:System.Reflection.Metadata.DeclarativeSecurityAttributeHandle" />, <see cref="T:System.Reflection.Metadata.PropertyDefinitionHandle" />, <see cref="T:System.Reflection.Metadata.EventDefinitionHandle" />, <see cref="T:System.Reflection.Metadata.StandaloneSignatureHandle" />, <see cref="T:System.Reflection.Metadata.ModuleReferenceHandle" />, <see cref="T:System.Reflection.Metadata.TypeSpecificationHandle" />, <see cref="T:System.Reflection.Metadata.AssemblyDefinitionHandle" />, <see cref="T:System.Reflection.Metadata.AssemblyReferenceHandle" />, <see cref="T:System.Reflection.Metadata.AssemblyFileHandle" />, <see cref="T:System.Reflection.Metadata.ExportedTypeHandle" />, <see cref="T:System.Reflection.Metadata.ManifestResourceHandle" />, <see cref="T:System.Reflection.Metadata.GenericParameterHandle" />, <see cref="T:System.Reflection.Metadata.GenericParameterConstraintHandle" /> or <see cref="T:System.Reflection.Metadata.MethodSpecificationHandle" />.</span></span></param>
        <summary><span data-ttu-id="6b815-106">Berechnet einen mit HasCustomAttribute codierten Index für das angegebene Handle.</span><span class="sxs-lookup"><span data-stu-id="6b815-106">Calculates a HasCustomAttribute coded index for the specified handle.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasCustomDebugInformation">
      <MemberSignature Language="C#" Value="public static int HasCustomDebugInformation (System.Reflection.Metadata.EntityHandle handle);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 HasCustomDebugInformation(valuetype System.Reflection.Metadata.EntityHandle handle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.Ecma335.CodedIndex.HasCustomDebugInformation(System.Reflection.Metadata.EntityHandle)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function HasCustomDebugInformation (handle As EntityHandle) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int HasCustomDebugInformation(System::Reflection::Metadata::EntityHandle handle);" />
      <MemberSignature Language="F#" Value="static member HasCustomDebugInformation : System.Reflection.Metadata.EntityHandle -&gt; int" Usage="System.Reflection.Metadata.Ecma335.CodedIndex.HasCustomDebugInformation handle" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
        <AssemblyVersion>1.4.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handle" Type="System.Reflection.Metadata.EntityHandle" Index="0" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="handle"><span data-ttu-id="6b815-107"><see cref="T:System.Reflection.Metadata.MethodDefinitionHandle" />, <see cref="T:System.Reflection.Metadata.FieldDefinitionHandle" />, <see cref="T:System.Reflection.Metadata.TypeReferenceHandle" />, <see cref="T:System.Reflection.Metadata.TypeDefinitionHandle" />, <see cref="T:System.Reflection.Metadata.ParameterHandle" />, <see cref="T:System.Reflection.Metadata.InterfaceImplementationHandle" />, <see cref="T:System.Reflection.Metadata.MemberReferenceHandle" />, <see cref="T:System.Reflection.Metadata.ModuleDefinitionHandle" />, <see cref="T:System.Reflection.Metadata.DeclarativeSecurityAttributeHandle" />, <see cref="T:System.Reflection.Metadata.PropertyDefinitionHandle" />, <see cref="T:System.Reflection.Metadata.EventDefinitionHandle" />, <see cref="T:System.Reflection.Metadata.StandaloneSignatureHandle" />, <see cref="T:System.Reflection.Metadata.ModuleReferenceHandle" />, <see cref="T:System.Reflection.Metadata.TypeSpecificationHandle" />, <see cref="T:System.Reflection.Metadata.AssemblyDefinitionHandle" />, <see cref="T:System.Reflection.Metadata.AssemblyReferenceHandle" />, <see cref="T:System.Reflection.Metadata.AssemblyFileHandle" />, <see cref="T:System.Reflection.Metadata.ExportedTypeHandle" />, <see cref="T:System.Reflection.Metadata.ManifestResourceHandle" />, <see cref="T:System.Reflection.Metadata.GenericParameterHandle" />, <see cref="T:System.Reflection.Metadata.GenericParameterConstraintHandle" />, <see cref="T:System.Reflection.Metadata.MethodSpecificationHandle" />, <see cref="T:System.Reflection.Metadata.DocumentHandle" />, <see cref="T:System.Reflection.Metadata.LocalScopeHandle" />, <see cref="T:System.Reflection.Metadata.LocalVariableHandle" />, <see cref="T:System.Reflection.Metadata.LocalConstantHandle" /> oder <see cref="T:System.Reflection.Metadata.ImportScopeHandle" />.</span><span class="sxs-lookup"><span data-stu-id="6b815-107"><see cref="T:System.Reflection.Metadata.MethodDefinitionHandle" />, <see cref="T:System.Reflection.Metadata.FieldDefinitionHandle" />, <see cref="T:System.Reflection.Metadata.TypeReferenceHandle" />, <see cref="T:System.Reflection.Metadata.TypeDefinitionHandle" />, <see cref="T:System.Reflection.Metadata.ParameterHandle" />, <see cref="T:System.Reflection.Metadata.InterfaceImplementationHandle" />, <see cref="T:System.Reflection.Metadata.MemberReferenceHandle" />, <see cref="T:System.Reflection.Metadata.ModuleDefinitionHandle" />, <see cref="T:System.Reflection.Metadata.DeclarativeSecurityAttributeHandle" />, <see cref="T:System.Reflection.Metadata.PropertyDefinitionHandle" />, <see cref="T:System.Reflection.Metadata.EventDefinitionHandle" />, <see cref="T:System.Reflection.Metadata.StandaloneSignatureHandle" />, <see cref="T:System.Reflection.Metadata.ModuleReferenceHandle" />, <see cref="T:System.Reflection.Metadata.TypeSpecificationHandle" />, <see cref="T:System.Reflection.Metadata.AssemblyDefinitionHandle" />, <see cref="T:System.Reflection.Metadata.AssemblyReferenceHandle" />, <see cref="T:System.Reflection.Metadata.AssemblyFileHandle" />, <see cref="T:System.Reflection.Metadata.ExportedTypeHandle" />, <see cref="T:System.Reflection.Metadata.ManifestResourceHandle" />, <see cref="T:System.Reflection.Metadata.GenericParameterHandle" />, <see cref="T:System.Reflection.Metadata.GenericParameterConstraintHandle" />, <see cref="T:System.Reflection.Metadata.MethodSpecificationHandle" />, <see cref="T:System.Reflection.Metadata.DocumentHandle" />, <see cref="T:System.Reflection.Metadata.LocalScopeHandle" />, <see cref="T:System.Reflection.Metadata.LocalVariableHandle" />, <see cref="T:System.Reflection.Metadata.LocalConstantHandle" /> or <see cref="T:System.Reflection.Metadata.ImportScopeHandle" />.</span></span></param>
        <summary><span data-ttu-id="6b815-108">Berechnet einen mit HasCustomDebugInformation codierten Index für das angegebene Handle.</span><span class="sxs-lookup"><span data-stu-id="6b815-108">Calculates a HasCustomDebugInformation coded index for the specified handle.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasDeclSecurity">
      <MemberSignature Language="C#" Value="public static int HasDeclSecurity (System.Reflection.Metadata.EntityHandle handle);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 HasDeclSecurity(valuetype System.Reflection.Metadata.EntityHandle handle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.Ecma335.CodedIndex.HasDeclSecurity(System.Reflection.Metadata.EntityHandle)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function HasDeclSecurity (handle As EntityHandle) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int HasDeclSecurity(System::Reflection::Metadata::EntityHandle handle);" />
      <MemberSignature Language="F#" Value="static member HasDeclSecurity : System.Reflection.Metadata.EntityHandle -&gt; int" Usage="System.Reflection.Metadata.Ecma335.CodedIndex.HasDeclSecurity handle" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
        <AssemblyVersion>1.4.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handle" Type="System.Reflection.Metadata.EntityHandle" Index="0" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="handle"><span data-ttu-id="6b815-109"><see cref="T:System.Reflection.Metadata.TypeDefinitionHandle" />, <see cref="T:System.Reflection.Metadata.MethodDefinitionHandle" />oder <see cref="T:System.Reflection.Metadata.AssemblyDefinitionHandle" /></span><span class="sxs-lookup"><span data-stu-id="6b815-109"><see cref="T:System.Reflection.Metadata.TypeDefinitionHandle" />, <see cref="T:System.Reflection.Metadata.MethodDefinitionHandle" />, or <see cref="T:System.Reflection.Metadata.AssemblyDefinitionHandle" /></span></span></param>
        <summary><span data-ttu-id="6b815-110">Berechnet einen mit HasDeclSecurity codierten Index für das angegebene Handle.</span><span class="sxs-lookup"><span data-stu-id="6b815-110">Calculates a HasDeclSecurity coded index for the specified handle.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasFieldMarshal">
      <MemberSignature Language="C#" Value="public static int HasFieldMarshal (System.Reflection.Metadata.EntityHandle handle);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 HasFieldMarshal(valuetype System.Reflection.Metadata.EntityHandle handle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.Ecma335.CodedIndex.HasFieldMarshal(System.Reflection.Metadata.EntityHandle)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function HasFieldMarshal (handle As EntityHandle) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int HasFieldMarshal(System::Reflection::Metadata::EntityHandle handle);" />
      <MemberSignature Language="F#" Value="static member HasFieldMarshal : System.Reflection.Metadata.EntityHandle -&gt; int" Usage="System.Reflection.Metadata.Ecma335.CodedIndex.HasFieldMarshal handle" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
        <AssemblyVersion>1.4.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handle" Type="System.Reflection.Metadata.EntityHandle" Index="0" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="handle"><span data-ttu-id="6b815-111"><see cref="T:System.Reflection.Metadata.ParameterHandle" /> oder <see cref="T:System.Reflection.Metadata.FieldDefinitionHandle" /></span><span class="sxs-lookup"><span data-stu-id="6b815-111"><see cref="T:System.Reflection.Metadata.ParameterHandle" /> or <see cref="T:System.Reflection.Metadata.FieldDefinitionHandle" /></span></span></param>
        <summary><span data-ttu-id="6b815-112">Berechnet einen mit HasFieldMarshal codierten Index für das angegebene Handle.</span><span class="sxs-lookup"><span data-stu-id="6b815-112">Calculates a HasFieldMarshal coded index for the specified handle.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasSemantics">
      <MemberSignature Language="C#" Value="public static int HasSemantics (System.Reflection.Metadata.EntityHandle handle);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 HasSemantics(valuetype System.Reflection.Metadata.EntityHandle handle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.Ecma335.CodedIndex.HasSemantics(System.Reflection.Metadata.EntityHandle)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function HasSemantics (handle As EntityHandle) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int HasSemantics(System::Reflection::Metadata::EntityHandle handle);" />
      <MemberSignature Language="F#" Value="static member HasSemantics : System.Reflection.Metadata.EntityHandle -&gt; int" Usage="System.Reflection.Metadata.Ecma335.CodedIndex.HasSemantics handle" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
        <AssemblyVersion>1.4.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handle" Type="System.Reflection.Metadata.EntityHandle" Index="0" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="handle"><span data-ttu-id="6b815-113"><see cref="T:System.Reflection.Metadata.EventDefinitionHandle" /> oder <see cref="T:System.Reflection.Metadata.PropertyDefinitionHandle" /></span><span class="sxs-lookup"><span data-stu-id="6b815-113"><see cref="T:System.Reflection.Metadata.EventDefinitionHandle" /> or <see cref="T:System.Reflection.Metadata.PropertyDefinitionHandle" /></span></span></param>
        <summary><span data-ttu-id="6b815-114">Berechnet einen mit HasSemantics codierten Index für das angegebene Handle.</span><span class="sxs-lookup"><span data-stu-id="6b815-114">Calculates a HasSemantics coded index for the specified handle.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Implementation">
      <MemberSignature Language="C#" Value="public static int Implementation (System.Reflection.Metadata.EntityHandle handle);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Implementation(valuetype System.Reflection.Metadata.EntityHandle handle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.Ecma335.CodedIndex.Implementation(System.Reflection.Metadata.EntityHandle)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Implementation (handle As EntityHandle) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Implementation(System::Reflection::Metadata::EntityHandle handle);" />
      <MemberSignature Language="F#" Value="static member Implementation : System.Reflection.Metadata.EntityHandle -&gt; int" Usage="System.Reflection.Metadata.Ecma335.CodedIndex.Implementation handle" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
        <AssemblyVersion>1.4.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handle" Type="System.Reflection.Metadata.EntityHandle" Index="0" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="handle"><span data-ttu-id="6b815-115"><see cref="T:System.Reflection.Metadata.AssemblyFileHandle" />, <see cref="T:System.Reflection.Metadata.ExportedTypeHandle" /> oder <see cref="T:System.Reflection.Metadata.AssemblyReferenceHandle" /></span><span class="sxs-lookup"><span data-stu-id="6b815-115"><see cref="T:System.Reflection.Metadata.AssemblyFileHandle" />, <see cref="T:System.Reflection.Metadata.ExportedTypeHandle" /> or <see cref="T:System.Reflection.Metadata.AssemblyReferenceHandle" /></span></span></param>
        <summary><span data-ttu-id="6b815-116">Berechnet einen implementierungscodierten Index für das angegebene Handle.</span><span class="sxs-lookup"><span data-stu-id="6b815-116">Calculates an implementation coded index for the specified handle.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MemberForwarded">
      <MemberSignature Language="C#" Value="public static int MemberForwarded (System.Reflection.Metadata.EntityHandle handle);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 MemberForwarded(valuetype System.Reflection.Metadata.EntityHandle handle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.Ecma335.CodedIndex.MemberForwarded(System.Reflection.Metadata.EntityHandle)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function MemberForwarded (handle As EntityHandle) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int MemberForwarded(System::Reflection::Metadata::EntityHandle handle);" />
      <MemberSignature Language="F#" Value="static member MemberForwarded : System.Reflection.Metadata.EntityHandle -&gt; int" Usage="System.Reflection.Metadata.Ecma335.CodedIndex.MemberForwarded handle" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
        <AssemblyVersion>1.4.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handle" Type="System.Reflection.Metadata.EntityHandle" Index="0" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="handle"><span data-ttu-id="6b815-117"><see cref="T:System.Reflection.Metadata.FieldDefinition" />, <see cref="T:System.Reflection.Metadata.MethodDefinition" /></span><span class="sxs-lookup"><span data-stu-id="6b815-117"><see cref="T:System.Reflection.Metadata.FieldDefinition" />, <see cref="T:System.Reflection.Metadata.MethodDefinition" /></span></span></param>
        <summary><span data-ttu-id="6b815-118">Berechnet einen mit MemberForwarded codierten Index für das angegebene Handle.</span><span class="sxs-lookup"><span data-stu-id="6b815-118">Calculates a MemberForwarded coded index for the specified handle.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MemberRefParent">
      <MemberSignature Language="C#" Value="public static int MemberRefParent (System.Reflection.Metadata.EntityHandle handle);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 MemberRefParent(valuetype System.Reflection.Metadata.EntityHandle handle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.Ecma335.CodedIndex.MemberRefParent(System.Reflection.Metadata.EntityHandle)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function MemberRefParent (handle As EntityHandle) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int MemberRefParent(System::Reflection::Metadata::EntityHandle handle);" />
      <MemberSignature Language="F#" Value="static member MemberRefParent : System.Reflection.Metadata.EntityHandle -&gt; int" Usage="System.Reflection.Metadata.Ecma335.CodedIndex.MemberRefParent handle" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
        <AssemblyVersion>1.4.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handle" Type="System.Reflection.Metadata.EntityHandle" Index="0" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="handle"><span data-ttu-id="6b815-119"><see cref="T:System.Reflection.Metadata.TypeDefinitionHandle" />, <see cref="T:System.Reflection.Metadata.TypeReferenceHandle" />, <see cref="T:System.Reflection.Metadata.ModuleReferenceHandle" />, <see cref="T:System.Reflection.Metadata.MethodDefinitionHandle" /> oder <see cref="T:System.Reflection.Metadata.TypeSpecificationHandle" />.</span><span class="sxs-lookup"><span data-stu-id="6b815-119"><see cref="T:System.Reflection.Metadata.TypeDefinitionHandle" />, <see cref="T:System.Reflection.Metadata.TypeReferenceHandle" />, <see cref="T:System.Reflection.Metadata.ModuleReferenceHandle" />, <see cref="T:System.Reflection.Metadata.MethodDefinitionHandle" />, or <see cref="T:System.Reflection.Metadata.TypeSpecificationHandle" />.</span></span></param>
        <summary><span data-ttu-id="6b815-120">Berechnet einen mit MemberRefParent codierten Index für das angegebene Handle.</span><span class="sxs-lookup"><span data-stu-id="6b815-120">Calculates a MemberRefParent coded index for the specified handle.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MethodDefOrRef">
      <MemberSignature Language="C#" Value="public static int MethodDefOrRef (System.Reflection.Metadata.EntityHandle handle);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 MethodDefOrRef(valuetype System.Reflection.Metadata.EntityHandle handle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.Ecma335.CodedIndex.MethodDefOrRef(System.Reflection.Metadata.EntityHandle)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function MethodDefOrRef (handle As EntityHandle) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int MethodDefOrRef(System::Reflection::Metadata::EntityHandle handle);" />
      <MemberSignature Language="F#" Value="static member MethodDefOrRef : System.Reflection.Metadata.EntityHandle -&gt; int" Usage="System.Reflection.Metadata.Ecma335.CodedIndex.MethodDefOrRef handle" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
        <AssemblyVersion>1.4.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handle" Type="System.Reflection.Metadata.EntityHandle" Index="0" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="handle"><span data-ttu-id="6b815-121"><see cref="T:System.Reflection.Metadata.MethodDefinitionHandle" /> oder <see cref="T:System.Reflection.Metadata.MemberReferenceHandle" /></span><span class="sxs-lookup"><span data-stu-id="6b815-121"><see cref="T:System.Reflection.Metadata.MethodDefinitionHandle" /> or <see cref="T:System.Reflection.Metadata.MemberReferenceHandle" /></span></span></param>
        <summary><span data-ttu-id="6b815-122">Berechnet einen mit MethodDefOrRef codierten Index für das angegebene Handle.</span><span class="sxs-lookup"><span data-stu-id="6b815-122">Calculates a MethodDefOrRef coded index for the specified handle.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResolutionScope">
      <MemberSignature Language="C#" Value="public static int ResolutionScope (System.Reflection.Metadata.EntityHandle handle);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 ResolutionScope(valuetype System.Reflection.Metadata.EntityHandle handle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.Ecma335.CodedIndex.ResolutionScope(System.Reflection.Metadata.EntityHandle)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ResolutionScope (handle As EntityHandle) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int ResolutionScope(System::Reflection::Metadata::EntityHandle handle);" />
      <MemberSignature Language="F#" Value="static member ResolutionScope : System.Reflection.Metadata.EntityHandle -&gt; int" Usage="System.Reflection.Metadata.Ecma335.CodedIndex.ResolutionScope handle" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
        <AssemblyVersion>1.4.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handle" Type="System.Reflection.Metadata.EntityHandle" Index="0" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="handle"><span data-ttu-id="6b815-123"><see cref="T:System.Reflection.Metadata.ModuleDefinitionHandle" />, <see cref="T:System.Reflection.Metadata.ModuleReferenceHandle" />, <see cref="T:System.Reflection.Metadata.AssemblyReferenceHandle" /> oder <see cref="T:System.Reflection.Metadata.TypeReferenceHandle" /></span><span class="sxs-lookup"><span data-stu-id="6b815-123"><see cref="T:System.Reflection.Metadata.ModuleDefinitionHandle" />, <see cref="T:System.Reflection.Metadata.ModuleReferenceHandle" />, <see cref="T:System.Reflection.Metadata.AssemblyReferenceHandle" /> or <see cref="T:System.Reflection.Metadata.TypeReferenceHandle" /></span></span></param>
        <summary><span data-ttu-id="6b815-124">Berechnet einen mit ResolutionScope codierten Index für das angegebene Handle.</span><span class="sxs-lookup"><span data-stu-id="6b815-124">Calculates a ResolutionScope coded index for the specified handle.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TypeDefOrRef">
      <MemberSignature Language="C#" Value="public static int TypeDefOrRef (System.Reflection.Metadata.EntityHandle handle);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 TypeDefOrRef(valuetype System.Reflection.Metadata.EntityHandle handle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.Ecma335.CodedIndex.TypeDefOrRef(System.Reflection.Metadata.EntityHandle)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TypeDefOrRef (handle As EntityHandle) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int TypeDefOrRef(System::Reflection::Metadata::EntityHandle handle);" />
      <MemberSignature Language="F#" Value="static member TypeDefOrRef : System.Reflection.Metadata.EntityHandle -&gt; int" Usage="System.Reflection.Metadata.Ecma335.CodedIndex.TypeDefOrRef handle" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
        <AssemblyVersion>1.4.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handle" Type="System.Reflection.Metadata.EntityHandle" Index="0" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="handle"><span data-ttu-id="6b815-125"><see cref="T:System.Reflection.Metadata.TypeDefinitionHandle" /> oder <see cref="T:System.Reflection.Metadata.TypeReferenceHandle" /></span><span class="sxs-lookup"><span data-stu-id="6b815-125"><see cref="T:System.Reflection.Metadata.TypeDefinitionHandle" /> or <see cref="T:System.Reflection.Metadata.TypeReferenceHandle" /></span></span></param>
        <summary><span data-ttu-id="6b815-126">Berechnet einen mit TypeDefOrRef codierten Index für das angegebene Handle.</span><span class="sxs-lookup"><span data-stu-id="6b815-126">Calculates a TypeDefOrRef coded index for the specified handle.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TypeDefOrRefOrSpec">
      <MemberSignature Language="C#" Value="public static int TypeDefOrRefOrSpec (System.Reflection.Metadata.EntityHandle handle);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 TypeDefOrRefOrSpec(valuetype System.Reflection.Metadata.EntityHandle handle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.Ecma335.CodedIndex.TypeDefOrRefOrSpec(System.Reflection.Metadata.EntityHandle)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TypeDefOrRefOrSpec (handle As EntityHandle) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int TypeDefOrRefOrSpec(System::Reflection::Metadata::EntityHandle handle);" />
      <MemberSignature Language="F#" Value="static member TypeDefOrRefOrSpec : System.Reflection.Metadata.EntityHandle -&gt; int" Usage="System.Reflection.Metadata.Ecma335.CodedIndex.TypeDefOrRefOrSpec handle" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
        <AssemblyVersion>1.4.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handle" Type="System.Reflection.Metadata.EntityHandle" Index="0" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="handle"><span data-ttu-id="6b815-127"><see cref="T:System.Reflection.Metadata.TypeDefinitionHandle" />, <see cref="T:System.Reflection.Metadata.TypeReferenceHandle" /> oder <see cref="T:System.Reflection.Metadata.TypeSpecificationHandle" /></span><span class="sxs-lookup"><span data-stu-id="6b815-127"><see cref="T:System.Reflection.Metadata.TypeDefinitionHandle" />, <see cref="T:System.Reflection.Metadata.TypeReferenceHandle" /> or <see cref="T:System.Reflection.Metadata.TypeSpecificationHandle" /></span></span></param>
        <summary><span data-ttu-id="6b815-128">Berechnet einen mit TypeDefOrRefOrSpec codierten Index für das angegebene Handle.</span><span class="sxs-lookup"><span data-stu-id="6b815-128">Calculates a TypeDefOrRefOrSpec coded index for the specified handle.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TypeOrMethodDef">
      <MemberSignature Language="C#" Value="public static int TypeOrMethodDef (System.Reflection.Metadata.EntityHandle handle);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 TypeOrMethodDef(valuetype System.Reflection.Metadata.EntityHandle handle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.Ecma335.CodedIndex.TypeOrMethodDef(System.Reflection.Metadata.EntityHandle)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TypeOrMethodDef (handle As EntityHandle) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int TypeOrMethodDef(System::Reflection::Metadata::EntityHandle handle);" />
      <MemberSignature Language="F#" Value="static member TypeOrMethodDef : System.Reflection.Metadata.EntityHandle -&gt; int" Usage="System.Reflection.Metadata.Ecma335.CodedIndex.TypeOrMethodDef handle" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
        <AssemblyVersion>1.4.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handle" Type="System.Reflection.Metadata.EntityHandle" Index="0" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="handle"><span data-ttu-id="6b815-129"><see cref="T:System.Reflection.Metadata.TypeDefinitionHandle" /> oder <see cref="T:System.Reflection.Metadata.MethodDefinitionHandle" /></span><span class="sxs-lookup"><span data-stu-id="6b815-129"><see cref="T:System.Reflection.Metadata.TypeDefinitionHandle" /> or <see cref="T:System.Reflection.Metadata.MethodDefinitionHandle" /></span></span></param>
        <summary><span data-ttu-id="6b815-130">Berechnet einen mit TypeOrMethodDef codierten Index für das angegebene Handle.</span><span class="sxs-lookup"><span data-stu-id="6b815-130">Calculates a TypeOrMethodDef coded index for the specified handle.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
