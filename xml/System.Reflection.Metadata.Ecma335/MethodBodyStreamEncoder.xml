<Type Name="MethodBodyStreamEncoder" FullName="System.Reflection.Metadata.Ecma335.MethodBodyStreamEncoder">
  <Metadata><Meta Name="ms.openlocfilehash" Value="dca118d74ee68e794f8562d2800e07c2a41ed1ba" /><Meta Name="ms.sourcegitcommit" Value="99247877c0ae3f6b8619b55f52be0419280a6aa5" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="08/27/2020" /><Meta Name="ms.locfileid" Value="88952380" /></Metadata><TypeSignature Language="C#" Value="public struct MethodBodyStreamEncoder" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit MethodBodyStreamEncoder extends System.ValueType" />
  <TypeSignature Language="DocId" Value="T:System.Reflection.Metadata.Ecma335.MethodBodyStreamEncoder" />
  <TypeSignature Language="VB.NET" Value="Public Structure MethodBodyStreamEncoder" />
  <TypeSignature Language="C++ CLI" Value="public value class MethodBodyStreamEncoder" />
  <TypeSignature Language="F#" Value="type MethodBodyStreamEncoder = struct" />
  <AssemblyInfo>
    <AssemblyName>System.Reflection.Metadata</AssemblyName>
    <AssemblyVersion>1.4.1.0</AssemblyVersion>
    <AssemblyVersion>1.4.2.0</AssemblyVersion>
    <AssemblyVersion>1.4.3.0</AssemblyVersion>
    <AssemblyVersion>1.4.4.0</AssemblyVersion>
    <AssemblyVersion>1.4.5.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="net-5.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1">
      <AttributeName Language="C#">[System.Runtime.CompilerServices.IsReadOnly]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.IsReadOnly&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="b283a-101">Stellt einen Encoder für einen Methodentext-Datenstrom bereit.</span><span class="sxs-lookup"><span data-stu-id="b283a-101">Provides an encoder for a method body stream.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MethodBodyStreamEncoder (System.Reflection.Metadata.BlobBuilder builder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Reflection.Metadata.BlobBuilder builder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.Ecma335.MethodBodyStreamEncoder.#ctor(System.Reflection.Metadata.BlobBuilder)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (builder As BlobBuilder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MethodBodyStreamEncoder(System::Reflection::Metadata::BlobBuilder ^ builder);" />
      <MemberSignature Language="F#" Value="new System.Reflection.Metadata.Ecma335.MethodBodyStreamEncoder : System.Reflection.Metadata.BlobBuilder -&gt; System.Reflection.Metadata.Ecma335.MethodBodyStreamEncoder" Usage="new System.Reflection.Metadata.Ecma335.MethodBodyStreamEncoder builder" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
        <AssemblyVersion>1.4.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="builder" Type="System.Reflection.Metadata.BlobBuilder" />
      </Parameters>
      <Docs>
        <param name="builder">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddMethodBody">
      <MemberSignature Language="C#" Value="public int AddMethodBody (System.Reflection.Metadata.Ecma335.InstructionEncoder instructionEncoder, int maxStack, System.Reflection.Metadata.StandaloneSignatureHandle localVariablesSignature, System.Reflection.Metadata.Ecma335.MethodBodyAttributes attributes);" FrameworkAlternate="net-5.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 AddMethodBody(valuetype System.Reflection.Metadata.Ecma335.InstructionEncoder instructionEncoder, int32 maxStack, valuetype System.Reflection.Metadata.StandaloneSignatureHandle localVariablesSignature, valuetype System.Reflection.Metadata.Ecma335.MethodBodyAttributes attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.Ecma335.MethodBodyStreamEncoder.AddMethodBody(System.Reflection.Metadata.Ecma335.InstructionEncoder,System.Int32,System.Reflection.Metadata.StandaloneSignatureHandle,System.Reflection.Metadata.Ecma335.MethodBodyAttributes)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddMethodBody (instructionEncoder As InstructionEncoder, maxStack As Integer, localVariablesSignature As StandaloneSignatureHandle, attributes As MethodBodyAttributes) As Integer" FrameworkAlternate="net-5.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int AddMethodBody(System::Reflection::Metadata::Ecma335::InstructionEncoder instructionEncoder, int maxStack, System::Reflection::Metadata::StandaloneSignatureHandle localVariablesSignature, System::Reflection::Metadata::Ecma335::MethodBodyAttributes attributes);" FrameworkAlternate="net-5.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="F#" Value="member this.AddMethodBody : System.Reflection.Metadata.Ecma335.InstructionEncoder * int * System.Reflection.Metadata.StandaloneSignatureHandle * System.Reflection.Metadata.Ecma335.MethodBodyAttributes -&gt; int" Usage="methodBodyStreamEncoder.AddMethodBody (instructionEncoder, maxStack, localVariablesSignature, attributes)" />
      <MemberSignature Language="C#" Value="public int AddMethodBody (System.Reflection.Metadata.Ecma335.InstructionEncoder instructionEncoder, int maxStack = 8, System.Reflection.Metadata.StandaloneSignatureHandle localVariablesSignature = default, System.Reflection.Metadata.Ecma335.MethodBodyAttributes attributes = System.Reflection.Metadata.Ecma335.MethodBodyAttributes.InitLocals);" FrameworkAlternate="netcore-1.1;netcore-2.0" />
      <MemberSignature Language="VB.NET" Value="Public Function AddMethodBody (instructionEncoder As InstructionEncoder, Optional maxStack As Integer = 8, Optional localVariablesSignature As StandaloneSignatureHandle = Nothing, Optional attributes As MethodBodyAttributes = System.Reflection.Metadata.Ecma335.MethodBodyAttributes.InitLocals) As Integer" FrameworkAlternate="netcore-1.1;netcore-2.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
        <AssemblyVersion>1.4.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instructionEncoder" Type="System.Reflection.Metadata.Ecma335.InstructionEncoder" />
        <Parameter Name="maxStack" Type="System.Int32" />
        <Parameter Name="localVariablesSignature" Type="System.Reflection.Metadata.StandaloneSignatureHandle" />
        <Parameter Name="attributes" Type="System.Reflection.Metadata.Ecma335.MethodBodyAttributes" />
      </Parameters>
      <Docs>
        <param name="instructionEncoder"><span data-ttu-id="b283a-102">Der Anweisungsencoder.</span><span class="sxs-lookup"><span data-stu-id="b283a-102">The instruction encoder.</span></span></param>
        <param name="maxStack"><span data-ttu-id="b283a-103">Die maximale Stapelgröße.</span><span class="sxs-lookup"><span data-stu-id="b283a-103">The maximum stack size.</span></span></param>
        <param name="localVariablesSignature"><span data-ttu-id="b283a-104">Das Signaturhandle der lokalen Variablen.</span><span class="sxs-lookup"><span data-stu-id="b283a-104">The local variables' signature handle.</span></span></param>
        <param name="attributes"><span data-ttu-id="b283a-105">Die Methodentextattribute.</span><span class="sxs-lookup"><span data-stu-id="b283a-105">The method body attributes.</span></span></param>
        <summary><span data-ttu-id="b283a-106">Codiert einen Methodentext und fügt ihn dem Methodentext-Datenstrom hinzu.</span><span class="sxs-lookup"><span data-stu-id="b283a-106">Encodes a method body and adds it to the method body stream.</span></span></summary>
        <returns><span data-ttu-id="b283a-107">Der Offset des codierten Texts im Methodentext-Datenstrom.</span><span class="sxs-lookup"><span data-stu-id="b283a-107">The offset of the encoded body within the method body stream.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b283a-108"><paramref name="instructionEncoder" /> weist den Standardwert auf.</span><span class="sxs-lookup"><span data-stu-id="b283a-108"><paramref name="instructionEncoder" /> has default value.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="b283a-109"><paramref name="maxStack" /> liegt außerhalb des gültigen Bereichs [0, <see cref="F:System.UInt16.MaxValue" />].</span><span class="sxs-lookup"><span data-stu-id="b283a-109"><paramref name="maxStack" /> is out of range [0, <see cref="F:System.UInt16.MaxValue" />].</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="b283a-110">Eine Bezeichnung, die das Ziel eines Branches im Anweisungsstream ist, wurde nicht gekennzeichnet, oder der Abstand zwischen einer Branchanweisung und der Zielbezeichnung entspricht nicht der Größe des Anweisungsoperanden.</span><span class="sxs-lookup"><span data-stu-id="b283a-110">A label targeted by a branch in the instruction stream has not been marked, or the distance between a branch instruction and the target label doesn't fit the size of the instruction operand.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AddMethodBody">
      <MemberSignature Language="C#" Value="public int AddMethodBody (System.Reflection.Metadata.Ecma335.InstructionEncoder instructionEncoder, int maxStack = 8, System.Reflection.Metadata.StandaloneSignatureHandle localVariablesSignature = default, System.Reflection.Metadata.Ecma335.MethodBodyAttributes attributes = System.Reflection.Metadata.Ecma335.MethodBodyAttributes.InitLocals, bool hasDynamicStackAllocation = false);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 AddMethodBody(valuetype System.Reflection.Metadata.Ecma335.InstructionEncoder instructionEncoder, int32 maxStack, valuetype System.Reflection.Metadata.StandaloneSignatureHandle localVariablesSignature, valuetype System.Reflection.Metadata.Ecma335.MethodBodyAttributes attributes, bool hasDynamicStackAllocation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.Ecma335.MethodBodyStreamEncoder.AddMethodBody(System.Reflection.Metadata.Ecma335.InstructionEncoder,System.Int32,System.Reflection.Metadata.StandaloneSignatureHandle,System.Reflection.Metadata.Ecma335.MethodBodyAttributes,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddMethodBody (instructionEncoder As InstructionEncoder, Optional maxStack As Integer = 8, Optional localVariablesSignature As StandaloneSignatureHandle = Nothing, Optional attributes As MethodBodyAttributes = System.Reflection.Metadata.Ecma335.MethodBodyAttributes.InitLocals, Optional hasDynamicStackAllocation As Boolean = false) As Integer" />
      <MemberSignature Language="F#" Value="member this.AddMethodBody : System.Reflection.Metadata.Ecma335.InstructionEncoder * int * System.Reflection.Metadata.StandaloneSignatureHandle * System.Reflection.Metadata.Ecma335.MethodBodyAttributes * bool -&gt; int" Usage="methodBodyStreamEncoder.AddMethodBody (instructionEncoder, maxStack, localVariablesSignature, attributes, hasDynamicStackAllocation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
        <AssemblyVersion>1.4.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instructionEncoder" Type="System.Reflection.Metadata.Ecma335.InstructionEncoder" Index="0" FrameworkAlternate="net-5.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1" />
        <Parameter Name="maxStack" Type="System.Int32" Index="1" FrameworkAlternate="net-5.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1" />
        <Parameter Name="localVariablesSignature" Type="System.Reflection.Metadata.StandaloneSignatureHandle" Index="2" FrameworkAlternate="net-5.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1" />
        <Parameter Name="attributes" Type="System.Reflection.Metadata.Ecma335.MethodBodyAttributes" Index="3" FrameworkAlternate="net-5.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1" />
        <Parameter Name="hasDynamicStackAllocation" Type="System.Boolean" Index="4" FrameworkAlternate="net-5.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="instructionEncoder"><span data-ttu-id="b283a-111">Der Anweisungsencoder.</span><span class="sxs-lookup"><span data-stu-id="b283a-111">The instruction encoder.</span></span></param>
        <param name="maxStack"><span data-ttu-id="b283a-112">Die maximale Stapelgröße.</span><span class="sxs-lookup"><span data-stu-id="b283a-112">The maximum stack size.</span></span></param>
        <param name="localVariablesSignature"><span data-ttu-id="b283a-113">Das Signaturhandle der lokalen Variablen.</span><span class="sxs-lookup"><span data-stu-id="b283a-113">The local variables' signature handle.</span></span></param>
        <param name="attributes"><span data-ttu-id="b283a-114">Die Methodentextattribute.</span><span class="sxs-lookup"><span data-stu-id="b283a-114">The method body attributes.</span></span></param>
        <param name="hasDynamicStackAllocation"><span data-ttu-id="b283a-115"><see langword="true" />, wenn die Methode aus dem dynamischen lokalen Speicherpool zugeordnet wird (die IL enthält die <see langword="localloc" />-Anweisung), andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="b283a-115"><see langword="true" /> if the method allocates from the dynamic local memory pool (the IL contains the <see langword="localloc" /> instruction); <see langword="false" /> otherwise.</span></span></param>
        <summary><span data-ttu-id="b283a-116">Codiert einen Methodentext und fügt ihn dem Methodentext-Datenstrom mithilfe des bereitgestellten Anweisungsencoders, der maximalen Stapelgröße, des Signaturhandles der lokalen Variablen und der Methodentextattribute hinzu. Ermöglicht außerdem die Angabe, ob die Methode Zuordnungen aus dem dynamischen lokalen Speicherpool vornehmen soll.</span><span class="sxs-lookup"><span data-stu-id="b283a-116">Encodes a method body and adds it to the method body stream, using the provided instruction encoder, maximum stack size, local variables' signature handle, method body attributes, and allowing to indicate whether the method should allocate from the dynamic local memory pool or not.</span></span></summary>
        <returns><span data-ttu-id="b283a-117">Der Offset des codierten Texts im Methodentext-Datenstrom.</span><span class="sxs-lookup"><span data-stu-id="b283a-117">The offset of the encoded body within the method body stream.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b283a-118"><paramref name="instructionEncoder" /> weist den Standardwert auf.</span><span class="sxs-lookup"><span data-stu-id="b283a-118"><paramref name="instructionEncoder" /> has default value.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="b283a-119"><paramref name="maxStack" /> liegt außerhalb des gültigen Bereichs [0, <see cref="F:System.UInt16.MaxValue" />].</span><span class="sxs-lookup"><span data-stu-id="b283a-119"><paramref name="maxStack" /> is out of range [0, <see cref="F:System.UInt16.MaxValue" />].</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="b283a-120">Eine Bezeichnung, die das Ziel eines Branches im Anweisungsstream ist, wurde nicht gekennzeichnet, oder der Abstand zwischen einer Branchanweisung und der Zielbezeichnung entspricht nicht der Größe des Anweisungsoperanden.</span><span class="sxs-lookup"><span data-stu-id="b283a-120">A label targeted by a branch in the instruction stream has not been marked, or the distance between a branch instruction and the target label doesn't fit the size of the instruction operand.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AddMethodBody">
      <MemberSignature Language="C#" Value="public System.Reflection.Metadata.Ecma335.MethodBodyStreamEncoder.MethodBody AddMethodBody (int codeSize, int maxStack, int exceptionRegionCount, bool hasSmallExceptionRegions, System.Reflection.Metadata.StandaloneSignatureHandle localVariablesSignature, System.Reflection.Metadata.Ecma335.MethodBodyAttributes attributes);" FrameworkAlternate="net-5.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Reflection.Metadata.Ecma335.MethodBodyStreamEncoder/MethodBody AddMethodBody(int32 codeSize, int32 maxStack, int32 exceptionRegionCount, bool hasSmallExceptionRegions, valuetype System.Reflection.Metadata.StandaloneSignatureHandle localVariablesSignature, valuetype System.Reflection.Metadata.Ecma335.MethodBodyAttributes attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.Ecma335.MethodBodyStreamEncoder.AddMethodBody(System.Int32,System.Int32,System.Int32,System.Boolean,System.Reflection.Metadata.StandaloneSignatureHandle,System.Reflection.Metadata.Ecma335.MethodBodyAttributes)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddMethodBody (codeSize As Integer, maxStack As Integer, exceptionRegionCount As Integer, hasSmallExceptionRegions As Boolean, localVariablesSignature As StandaloneSignatureHandle, attributes As MethodBodyAttributes) As MethodBodyStreamEncoder.MethodBody" FrameworkAlternate="net-5.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Metadata::Ecma335::MethodBodyStreamEncoder::MethodBody AddMethodBody(int codeSize, int maxStack, int exceptionRegionCount, bool hasSmallExceptionRegions, System::Reflection::Metadata::StandaloneSignatureHandle localVariablesSignature, System::Reflection::Metadata::Ecma335::MethodBodyAttributes attributes);" FrameworkAlternate="net-5.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="F#" Value="member this.AddMethodBody : int * int * int * bool * System.Reflection.Metadata.StandaloneSignatureHandle * System.Reflection.Metadata.Ecma335.MethodBodyAttributes -&gt; System.Reflection.Metadata.Ecma335.MethodBodyStreamEncoder.MethodBody" Usage="methodBodyStreamEncoder.AddMethodBody (codeSize, maxStack, exceptionRegionCount, hasSmallExceptionRegions, localVariablesSignature, attributes)" />
      <MemberSignature Language="C#" Value="public System.Reflection.Metadata.Ecma335.MethodBodyStreamEncoder.MethodBody AddMethodBody (int codeSize, int maxStack = 8, int exceptionRegionCount = 0, bool hasSmallExceptionRegions = true, System.Reflection.Metadata.StandaloneSignatureHandle localVariablesSignature = default, System.Reflection.Metadata.Ecma335.MethodBodyAttributes attributes = System.Reflection.Metadata.Ecma335.MethodBodyAttributes.InitLocals);" FrameworkAlternate="netcore-1.1;netcore-2.0" />
      <MemberSignature Language="VB.NET" Value="Public Function AddMethodBody (codeSize As Integer, Optional maxStack As Integer = 8, Optional exceptionRegionCount As Integer = 0, Optional hasSmallExceptionRegions As Boolean = true, Optional localVariablesSignature As StandaloneSignatureHandle = Nothing, Optional attributes As MethodBodyAttributes = System.Reflection.Metadata.Ecma335.MethodBodyAttributes.InitLocals) As MethodBodyStreamEncoder.MethodBody" FrameworkAlternate="netcore-1.1;netcore-2.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
        <AssemblyVersion>1.4.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Metadata.Ecma335.MethodBodyStreamEncoder+MethodBody</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="codeSize" Type="System.Int32" />
        <Parameter Name="maxStack" Type="System.Int32" />
        <Parameter Name="exceptionRegionCount" Type="System.Int32" />
        <Parameter Name="hasSmallExceptionRegions" Type="System.Boolean" />
        <Parameter Name="localVariablesSignature" Type="System.Reflection.Metadata.StandaloneSignatureHandle" />
        <Parameter Name="attributes" Type="System.Reflection.Metadata.Ecma335.MethodBodyAttributes" />
      </Parameters>
      <Docs>
        <param name="codeSize"><span data-ttu-id="b283a-121">Die Anzahl von Bytes, die für Anweisungen reserviert werden soll.</span><span class="sxs-lookup"><span data-stu-id="b283a-121">The number of bytes to be reserved for instructions.</span></span></param>
        <param name="maxStack"><span data-ttu-id="b283a-122">Die maximale Stapelgröße.</span><span class="sxs-lookup"><span data-stu-id="b283a-122">The maximum stack size.</span></span></param>
        <param name="exceptionRegionCount"><span data-ttu-id="b283a-123">Die Anzahl der Ausnahmebereiche.</span><span class="sxs-lookup"><span data-stu-id="b283a-123">The number of exception regions.</span></span></param>
        <param name="hasSmallExceptionRegions"><span data-ttu-id="b283a-124"><see langword="true" />, wenn die Ausnahmebereiche im kleinem Format codiert werden sollen, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="b283a-124"><see langword="true" /> if the exception regions should be encoded in small format; <see langword="false" /> otherwise.</span></span></param>
        <param name="localVariablesSignature"><span data-ttu-id="b283a-125">Das Signaturhandle der lokalen Variablen.</span><span class="sxs-lookup"><span data-stu-id="b283a-125">The local variables' signature handle.</span></span></param>
        <param name="attributes"><span data-ttu-id="b283a-126">Die Methodentextattribute.</span><span class="sxs-lookup"><span data-stu-id="b283a-126">The method body attributes.</span></span></param>
        <summary><span data-ttu-id="b283a-127">Codiert einen Methodentext und fügt ihn dem Methodentext-Datenstrom mithilfe der bereitgestellten Codegröße, der maximalen Stapelgröße, der Anzahl der Ausnahmebereiche, des Signaturhandles der lokalen Variablen und der Methodentextattribute hinzu. Ermöglicht außerdem die Angabe, ob die Ausnahmebereiche im kleinen Format codiert werden sollen.</span><span class="sxs-lookup"><span data-stu-id="b283a-127">Encodes a method body and adds it to the method body stream, using the provided code size, maximum stack size, number of exception regions, local variables' signature handle, method body attributes and allowing to indicate whether the exception regions should be encoded in small format or not.</span></span></summary>
        <returns><span data-ttu-id="b283a-128">Der Offset des codierten Texts im Methodentext-Datenstrom.</span><span class="sxs-lookup"><span data-stu-id="b283a-128">The offset of the encoded body within the method body stream.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="b283a-129"><paramref name="codeSize" />, <paramref name="exceptionRegionCount" /> oder <paramref name="maxStack" /> liegt außerhalb des zulässigen Bereichs.</span><span class="sxs-lookup"><span data-stu-id="b283a-129"><paramref name="codeSize" />, <paramref name="exceptionRegionCount" />, or <paramref name="maxStack" /> is out of the allowed range.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AddMethodBody">
      <MemberSignature Language="C#" Value="public System.Reflection.Metadata.Ecma335.MethodBodyStreamEncoder.MethodBody AddMethodBody (int codeSize, int maxStack = 8, int exceptionRegionCount = 0, bool hasSmallExceptionRegions = true, System.Reflection.Metadata.StandaloneSignatureHandle localVariablesSignature = default, System.Reflection.Metadata.Ecma335.MethodBodyAttributes attributes = System.Reflection.Metadata.Ecma335.MethodBodyAttributes.InitLocals, bool hasDynamicStackAllocation = false);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Reflection.Metadata.Ecma335.MethodBodyStreamEncoder/MethodBody AddMethodBody(int32 codeSize, int32 maxStack, int32 exceptionRegionCount, bool hasSmallExceptionRegions, valuetype System.Reflection.Metadata.StandaloneSignatureHandle localVariablesSignature, valuetype System.Reflection.Metadata.Ecma335.MethodBodyAttributes attributes, bool hasDynamicStackAllocation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.Ecma335.MethodBodyStreamEncoder.AddMethodBody(System.Int32,System.Int32,System.Int32,System.Boolean,System.Reflection.Metadata.StandaloneSignatureHandle,System.Reflection.Metadata.Ecma335.MethodBodyAttributes,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddMethodBody (codeSize As Integer, Optional maxStack As Integer = 8, Optional exceptionRegionCount As Integer = 0, Optional hasSmallExceptionRegions As Boolean = true, Optional localVariablesSignature As StandaloneSignatureHandle = Nothing, Optional attributes As MethodBodyAttributes = System.Reflection.Metadata.Ecma335.MethodBodyAttributes.InitLocals, Optional hasDynamicStackAllocation As Boolean = false) As MethodBodyStreamEncoder.MethodBody" />
      <MemberSignature Language="F#" Value="member this.AddMethodBody : int * int * int * bool * System.Reflection.Metadata.StandaloneSignatureHandle * System.Reflection.Metadata.Ecma335.MethodBodyAttributes * bool -&gt; System.Reflection.Metadata.Ecma335.MethodBodyStreamEncoder.MethodBody" Usage="methodBodyStreamEncoder.AddMethodBody (codeSize, maxStack, exceptionRegionCount, hasSmallExceptionRegions, localVariablesSignature, attributes, hasDynamicStackAllocation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
        <AssemblyVersion>1.4.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Metadata.Ecma335.MethodBodyStreamEncoder+MethodBody</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="codeSize" Type="System.Int32" Index="0" FrameworkAlternate="net-5.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1" />
        <Parameter Name="maxStack" Type="System.Int32" Index="1" FrameworkAlternate="net-5.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1" />
        <Parameter Name="exceptionRegionCount" Type="System.Int32" Index="2" FrameworkAlternate="net-5.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1" />
        <Parameter Name="hasSmallExceptionRegions" Type="System.Boolean" Index="3" FrameworkAlternate="net-5.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1" />
        <Parameter Name="localVariablesSignature" Type="System.Reflection.Metadata.StandaloneSignatureHandle" Index="4" FrameworkAlternate="net-5.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1" />
        <Parameter Name="attributes" Type="System.Reflection.Metadata.Ecma335.MethodBodyAttributes" Index="5" FrameworkAlternate="net-5.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1" />
        <Parameter Name="hasDynamicStackAllocation" Type="System.Boolean" Index="6" FrameworkAlternate="net-5.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="codeSize"><span data-ttu-id="b283a-130">Die Anzahl von Bytes, die für Anweisungen reserviert werden soll.</span><span class="sxs-lookup"><span data-stu-id="b283a-130">The number of bytes to be reserved for instructions.</span></span></param>
        <param name="maxStack"><span data-ttu-id="b283a-131">Die maximale Stapelgröße.</span><span class="sxs-lookup"><span data-stu-id="b283a-131">The maximum stack size.</span></span></param>
        <param name="exceptionRegionCount"><span data-ttu-id="b283a-132">Die Anzahl der Ausnahmebereiche.</span><span class="sxs-lookup"><span data-stu-id="b283a-132">The number of exception regions.</span></span></param>
        <param name="hasSmallExceptionRegions"><span data-ttu-id="b283a-133"><see langword="true" />, wenn die Ausnahmebereiche im kleinem Format codiert werden sollen, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="b283a-133"><see langword="true" /> if the exception regions should be encoded in small format; <see langword="false" /> otherwise.</span></span></param>
        <param name="localVariablesSignature"><span data-ttu-id="b283a-134">Das Signaturhandle der lokalen Variablen.</span><span class="sxs-lookup"><span data-stu-id="b283a-134">The local variables' signature handle.</span></span></param>
        <param name="attributes"><span data-ttu-id="b283a-135">Die Methodentextattribute.</span><span class="sxs-lookup"><span data-stu-id="b283a-135">The method body attributes.</span></span></param>
        <param name="hasDynamicStackAllocation"><span data-ttu-id="b283a-136"><see langword="true" />, wenn die Methode aus dem dynamischen lokalen Speicherpool zugeordnet wird (die <see langword="localloc" />-Anweisung), andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="b283a-136"><see langword="true" /> if the method allocates from the dynamic local memory pool (the <see langword="localloc" /> instruction); <see langword="false" /> otherwise.</span></span></param>
        <summary><span data-ttu-id="b283a-137">Codiert einen Methodentext und fügt ihn dem Methodentext-Datenstrom mithilfe der bereitgestellten Codegröße, der maximalen Stapelgröße, der Anzahl der Ausnahmebereiche, des Signaturhandles der lokalen Variablen und der Methodentextattribute hinzu. Ermöglicht außerdem die Angabe, ob die Ausnahmebereiche im kleinen Format codiert werden sollen. Ermöglicht auch die Angabe, ob die Methode aus dem dynamischen lokalen Speicherpool zugeordnet werden soll.</span><span class="sxs-lookup"><span data-stu-id="b283a-137">Encodes a method body and adds it to the method body stream, using the provided code size, maximum stack size, number of exception regions, local variables' signature handle, method body attributes, allowing to indicate whether the exception regions should be encoded in small format or not, and allowing to indicate whether the method should allocate from the dynamic local memory pool or not.</span></span></summary>
        <returns><span data-ttu-id="b283a-138">Der Offset des codierten Texts im Methodentext-Datenstrom.</span><span class="sxs-lookup"><span data-stu-id="b283a-138">The offset of the encoded body within the method body stream.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="b283a-139"><paramref name="codeSize" />, <paramref name="exceptionRegionCount" /> oder <paramref name="maxStack" /> liegt außerhalb des zulässigen Bereichs.</span><span class="sxs-lookup"><span data-stu-id="b283a-139"><paramref name="codeSize" />, <paramref name="exceptionRegionCount" />, or <paramref name="maxStack" /> is out of the allowed range.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Builder">
      <MemberSignature Language="C#" Value="public System.Reflection.Metadata.BlobBuilder Builder { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.Metadata.BlobBuilder Builder" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Metadata.Ecma335.MethodBodyStreamEncoder.Builder" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Builder As BlobBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Reflection::Metadata::BlobBuilder ^ Builder { System::Reflection::Metadata::BlobBuilder ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Builder : System.Reflection.Metadata.BlobBuilder" Usage="System.Reflection.Metadata.Ecma335.MethodBodyStreamEncoder.Builder" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
        <AssemblyVersion>1.4.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Metadata.BlobBuilder</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
