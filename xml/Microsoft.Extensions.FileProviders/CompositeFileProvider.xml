<Type Name="CompositeFileProvider" FullName="Microsoft.Extensions.FileProviders.CompositeFileProvider">
  <Metadata><Meta Name="ms.openlocfilehash" Value="67663d05bb2f60f9c238fea8d29d1e755699820c" /><Meta Name="ms.sourcegitcommit" Value="3001e6bfbacb09c47be86e2ade5b0c2bd91bb0cb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="07/31/2020" /><Meta Name="ms.locfileid" Value="87469518" /></Metadata><TypeSignature Language="C#" Value="public class CompositeFileProvider : Microsoft.Extensions.FileProviders.IFileProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CompositeFileProvider extends System.Object implements class Microsoft.Extensions.FileProviders.IFileProvider" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Extensions.FileProviders.CompositeFileProvider" />
  <TypeSignature Language="VB.NET" Value="Public Class CompositeFileProvider&#xA;Implements IFileProvider" />
  <TypeSignature Language="C++ CLI" Value="public ref class CompositeFileProvider : Microsoft::Extensions::FileProviders::IFileProvider" />
  <TypeSignature Language="F#" Value="type CompositeFileProvider = class&#xA;    interface IFileProvider" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Extensions.FileProviders.Composite</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.2.0.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>3.1.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.Extensions.FileProviders.IFileProvider</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Sucht nach Dateien mithilfe der Sammlung der <see cref="T:Microsoft.Extensions.FileProviders.IFileProvider" />-Schnittstelle.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CompositeFileProvider (params Microsoft.Extensions.FileProviders.IFileProvider[] fileProviders);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.Extensions.FileProviders.IFileProvider[] fileProviders) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.FileProviders.CompositeFileProvider.#ctor(Microsoft.Extensions.FileProviders.IFileProvider[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (ParamArray fileProviders As IFileProvider())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CompositeFileProvider(... cli::array &lt;Microsoft::Extensions::FileProviders::IFileProvider ^&gt; ^ fileProviders);" />
      <MemberSignature Language="F#" Value="new Microsoft.Extensions.FileProviders.CompositeFileProvider : Microsoft.Extensions.FileProviders.IFileProvider[] -&gt; Microsoft.Extensions.FileProviders.CompositeFileProvider" Usage="new Microsoft.Extensions.FileProviders.CompositeFileProvider fileProviders" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.FileProviders.Composite</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="fileProviders" Type="Microsoft.Extensions.FileProviders.IFileProvider[]">
          <Attributes>
            <Attribute FrameworkAlternate="dotnet-plat-ext-1.0">
              <AttributeName Language="C#">[System.ParamArray]</AttributeName>
              <AttributeName Language="F#">[&lt;System.ParamArray&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="fileProviders">Die Sammlung der <see cref="T:Microsoft.Extensions.FileProviders.IFileProvider" />-Schnittstelle</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:Microsoft.Extensions.FileProviders.CompositeFileProvider" />-Klasse unter Verwendung der angegebenen Sammlung des Dateianbieters.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CompositeFileProvider (System.Collections.Generic.IEnumerable&lt;Microsoft.Extensions.FileProviders.IFileProvider&gt; fileProviders);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Extensions.FileProviders.IFileProvider&gt; fileProviders) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.FileProviders.CompositeFileProvider.#ctor(System.Collections.Generic.IEnumerable{Microsoft.Extensions.FileProviders.IFileProvider})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (fileProviders As IEnumerable(Of IFileProvider))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CompositeFileProvider(System::Collections::Generic::IEnumerable&lt;Microsoft::Extensions::FileProviders::IFileProvider ^&gt; ^ fileProviders);" />
      <MemberSignature Language="F#" Value="new Microsoft.Extensions.FileProviders.CompositeFileProvider : seq&lt;Microsoft.Extensions.FileProviders.IFileProvider&gt; -&gt; Microsoft.Extensions.FileProviders.CompositeFileProvider" Usage="new Microsoft.Extensions.FileProviders.CompositeFileProvider fileProviders" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.FileProviders.Composite</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="fileProviders" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Extensions.FileProviders.IFileProvider&gt;" />
      </Parameters>
      <Docs>
        <param name="fileProviders">Die Sammlung der <see cref="T:Microsoft.Extensions.FileProviders.IFileProvider" />-Schnittstelle</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:Microsoft.Extensions.FileProviders.CompositeFileProvider" />-Klasse unter Verwendung der angegebenen Sammlung des Dateianbieters.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FileProviders">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;Microsoft.Extensions.FileProviders.IFileProvider&gt; FileProviders { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Extensions.FileProviders.IFileProvider&gt; FileProviders" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.FileProviders.CompositeFileProvider.FileProviders" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FileProviders As IEnumerable(Of IFileProvider)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IEnumerable&lt;Microsoft::Extensions::FileProviders::IFileProvider ^&gt; ^ FileProviders { System::Collections::Generic::IEnumerable&lt;Microsoft::Extensions::FileProviders::IFileProvider ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FileProviders : seq&lt;Microsoft.Extensions.FileProviders.IFileProvider&gt;" Usage="Microsoft.Extensions.FileProviders.CompositeFileProvider.FileProviders" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.FileProviders.Composite</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;Microsoft.Extensions.FileProviders.IFileProvider&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Liste der konfigurierten <see cref="T:Microsoft.Extensions.FileProviders.IFileProvider" />-Instanzen ab.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDirectoryContents">
      <MemberSignature Language="C#" Value="public Microsoft.Extensions.FileProviders.IDirectoryContents GetDirectoryContents (string subpath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Extensions.FileProviders.IDirectoryContents GetDirectoryContents(string subpath) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.FileProviders.CompositeFileProvider.GetDirectoryContents(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetDirectoryContents (subpath As String) As IDirectoryContents" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Microsoft::Extensions::FileProviders::IDirectoryContents ^ GetDirectoryContents(System::String ^ subpath);" />
      <MemberSignature Language="F#" Value="abstract member GetDirectoryContents : string -&gt; Microsoft.Extensions.FileProviders.IDirectoryContents&#xA;override this.GetDirectoryContents : string -&gt; Microsoft.Extensions.FileProviders.IDirectoryContents" Usage="compositeFileProvider.GetDirectoryContents subpath" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Extensions.FileProviders.IFileProvider.GetDirectoryContents(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.FileProviders.Composite</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.FileProviders.IDirectoryContents</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subpath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="subpath">Der Pfad, der das Verzeichnis identifiziert.</param>
        <summary>Listet ggf. ein Verzeichnis im angegebenen Pfad auf.</summary>
        <returns>Der Inhalt des Verzeichnisses. Der Aufrufer muss die Exists-Eigenschaft überprüfen.
Der Inhalt stellt eine Zusammenführung der Inhalte der angegebenen <see cref="T:Microsoft.Extensions.FileProviders.IFileProvider" />-Schnittstelle dar.
Wenn es mehrere <see cref="T:Microsoft.Extensions.FileProviders.IFileInfo" />-Schnittstellen mit der gleichen Namenseigenschaft gibt, wird nur die erste in die Ergebnisse einbezogen.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFileInfo">
      <MemberSignature Language="C#" Value="public Microsoft.Extensions.FileProviders.IFileInfo GetFileInfo (string subpath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Extensions.FileProviders.IFileInfo GetFileInfo(string subpath) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.FileProviders.CompositeFileProvider.GetFileInfo(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFileInfo (subpath As String) As IFileInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Microsoft::Extensions::FileProviders::IFileInfo ^ GetFileInfo(System::String ^ subpath);" />
      <MemberSignature Language="F#" Value="abstract member GetFileInfo : string -&gt; Microsoft.Extensions.FileProviders.IFileInfo&#xA;override this.GetFileInfo : string -&gt; Microsoft.Extensions.FileProviders.IFileInfo" Usage="compositeFileProvider.GetFileInfo subpath" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Extensions.FileProviders.IFileProvider.GetFileInfo(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.FileProviders.Composite</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.FileProviders.IFileInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subpath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="subpath">Der Pfad, der die Datei identifiziert.</param>
        <summary>Sucht eine Datei im angegebenen Pfad.</summary>
        <returns>Die Dateiinformationen. Der Aufrufer muss die Exists-Eigenschaft überprüfen. Dies ist die erste vorhandene <see cref="T:Microsoft.Extensions.FileProviders.IFileInfo" />-Schnittstelle, die von der angegebenen <see cref="T:Microsoft.Extensions.FileProviders.IFileProvider" />-Schnittstelle zurückgegeben wird, oder eine nicht gefundene <see cref="T:Microsoft.Extensions.FileProviders.IFileInfo" />-Schnittstelle, wenn keine vorhandenen Dateien gefunden werden.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Watch">
      <MemberSignature Language="C#" Value="public Microsoft.Extensions.Primitives.IChangeToken Watch (string pattern);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Extensions.Primitives.IChangeToken Watch(string pattern) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.FileProviders.CompositeFileProvider.Watch(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Watch (pattern As String) As IChangeToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Microsoft::Extensions::Primitives::IChangeToken ^ Watch(System::String ^ pattern);" />
      <MemberSignature Language="F#" Value="abstract member Watch : string -&gt; Microsoft.Extensions.Primitives.IChangeToken&#xA;override this.Watch : string -&gt; Microsoft.Extensions.Primitives.IChangeToken" Usage="compositeFileProvider.Watch pattern" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Extensions.FileProviders.IFileProvider.Watch(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.FileProviders.Composite</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.Primitives.IChangeToken</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pattern" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="pattern">Filterzeichenfolge, mit der bestimmt wird, welche Dateien oder Ordner überwacht werden sollen. Beispiel: **/*.cs, *.*, Unterordner/**/*.cshtml.</param>
        <summary>Erstellt einen <see cref="T:Microsoft.Extensions.Primitives.IChangeToken" /> für das angegebene <paramref name="pattern" />.</summary>
        <returns>Eine <see cref="T:Microsoft.Extensions.Primitives.IChangeToken" />-Schnittstelle, die benachrichtigt wird, wenn eine mit <paramref name="pattern" /> übereinstimmende Datei hinzugefügt, geändert oder gelöscht wird.
Das Änderungstoken wird benachrichtigt, wenn einer der von dem angegebenen <see cref="T:Microsoft.Extensions.FileProviders.IFileProvider" /> zurückgegebenen Änderungstoken benachrichtigt wird.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
