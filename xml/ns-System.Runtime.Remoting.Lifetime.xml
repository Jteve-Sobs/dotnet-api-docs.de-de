<Namespace Name="System.Runtime.Remoting.Lifetime">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="5ac8c7510ea8c5026f390f2936bebfb8b315c4f4" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="08/24/2018" />
    <Meta Name="ms.locfileid" Value="30735634" />
  </Metadata>
  <Docs>
    <summary>Der <see cref="N:System.Runtime.Remoting.Lifetime" />-Namespace enthält Klassen, die die Lebensdauer von Remoteobjekten verwalten.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 In der Vergangenheit verwendet verteilte Garbagecollection, Verweiszähler als auch für die Kontrolle über die Lebensdauer der Objekte. Dies funktioniert gut, wenn einige Clients pro Dienst, jedoch nicht gut, wenn Tausende von Kunden pro Dienst skaliert. Remoting-Lebensdauerdienst ordnet jeder Dienst eine Lease, und löscht einen Dienst aus, nach dem Ablauf der Leasedauer. Der Lebensdauerdienst für die Funktion von einem herkömmlichen verteilte Garbage Collector durchführen kann und auch passt gut bei der Anzahl der Clients pro Server erhöht.  
  
 Jede Anwendungsdomäne enthält einen Lease-Manager, der zum Steuern der Leases in seiner Domäne zuständig ist. Alle Leases werden in regelmäßigen Abständen auf deren Ablauf untersucht. Wenn eine Lease abgelaufen ist, werden mindestens eines seiner Sponsoren aufgerufen und die Gelegenheit, die Lease zu erneuern. Wenn einer der Sponsoren die Lease erneuern möchte, wird die Lease für der Lease-Manager, und das Objekt vom Garbage Collector gesammelt werden kann. Der Lease-Manager verwaltet eine Liste mit Leases, sortiert nach der verbleibenden Leasedauer. Die Leasedauer mit der kürzesten Zeitangabe für die verbleibenden werden am oberen Rand der Liste gespeichert.  
  
 ]]></format>
    </remarks>
  </Docs>
</Namespace>