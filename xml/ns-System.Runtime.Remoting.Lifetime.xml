<Namespace Name="System.Runtime.Remoting.Lifetime">
  <Metadata><Meta Name="ms.openlocfilehash" Value="5ac8c7510ea8c5026f390f2936bebfb8b315c4f4" /><Meta Name="ms.sourcegitcommit" Value="397961a0164281b579f68064c3bb66c071f374d9" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="07/14/2020" /><Meta Name="ms.locfileid" Value="64445181" /></Metadata><Docs>
    <summary>Der <see cref="N:System.Runtime.Remoting.Lifetime" />-Namespace enthält Klassen, die die Lebensdauer von Remoteobjekten verwalten.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 In der Regel verwendet verteilte Garbage Collection Verweis Zähler und Pings für die Kontrolle über die Lebensdauer von Objekten. Dies funktioniert gut, wenn mehrere Clients pro Dienst vorhanden sind, aber keine gute Skalierung, wenn Tausende von Clients pro Dienst vorhanden sind. Der Dienst für die Remoting-Lebensdauer ordnet jedem Dienst eine Lease zu und löscht einen Dienst, wenn die Lease abläuft. Der Lebensdauer Dienst kann die Funktion eines herkömmlichen verteilten Garbage Collector nutzen und passt auch gut an, wenn sich die Anzahl der Clients pro Server erhöht.  
  
 Jede Anwendungsdomäne enthält einen Lease-Manager, der für das Steuern von Leases in der Domäne zuständig ist. Alle Leases werden regelmäßig für abgelaufene Leasedauer überprüft. Wenn eine Lease abgelaufen ist, werden eine oder mehrere der Sponsoren der Lease aufgerufen und haben die Möglichkeit, die Lease zu erneuern. Wenn keiner der Sponsoren beschließt, die Lease zu erneuern, entfernt der Lease-Manager die Lease, und das Objekt kann vom Garbage Collector gesammelt werden. Der Lease-Manager verwaltet eine Leaseliste mit Leases, sortiert nach verbleibender Leasedauer. Die Leases mit der kürzesten verbleibenden Zeit werden am Anfang der Liste gespeichert.  
  
 ]]></format>
    </remarks>
  </Docs>
</Namespace>