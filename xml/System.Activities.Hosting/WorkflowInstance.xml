<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="WorkflowInstance.xml" source-language="en-US" target-language="de-DE">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac58d6a7b9b8156534bc27bc0b13ae178961d5c41c8.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8d6a7b9b8156534bc27bc0b13ae178961d5c41c8</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Activities.Hosting.WorkflowInstance">
          <source><ph id="ph1">&lt;see cref="T:System.Activities.Hosting.WorkflowInstance" /&gt;</ph> is a lightweight, per-instance runtime for executing a workflow program.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Activities.Hosting.WorkflowInstance" /&gt;</ph> ist eine einfache Pro-Instanz-Laufzeit zum Ausführen eines Workflowprogramms.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Activities.Hosting.WorkflowInstance">
          <source>It can be constructed to create a new workflow instance or from existing instance state.</source>
          <target state="translated">Sie dient dazu, eine neue Workflowinstanz oder eine Workflowinstanz aus einer vorhandenen Instanz zu erstellen.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" uid="T:System.Activities.Hosting.WorkflowInstance">
          <source>The APIs that <ph id="ph1">&lt;see cref="T:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl" /&gt;</ph> exposes are the minimal set of runtime controls from which higher level operations can be implemented.</source>
          <target state="translated">Die APIs, welche die <ph id="ph1">&lt;see cref="T:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl" /&gt;</ph> verfügbar macht, stellen den minimalen Satz von Laufzeitsteuerelementen dar, von denen Vorgänge auf höherer Ebene implementiert werden können.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" uid="T:System.Activities.Hosting.WorkflowInstance">
          <source>This API set represents the entire breadth of functionality of the runtime.</source>
          <target state="translated">Dieser API-Satz stellt die ganze Bandbreite der Laufzeitfunktionalität dar.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" uid="T:System.Activities.Hosting.WorkflowInstance">
          <source><ph id="ph1">&lt;see cref="T:System.Activities.Hosting.WorkflowInstance" /&gt;</ph> is an abstract class and relies on a host’s implementation of its abstract methods in order to provide host functionality such as synchronization, persistence, tracking, and extensions.</source>
          <target state="translated">Die <ph id="ph1">&lt;see cref="T:System.Activities.Hosting.WorkflowInstance" /&gt;</ph> ist eine abstrakte Klasse und benötigt die Implementierung der abstrakten Methoden eines Hosts, um Hostfunktionen (wie etwa Synchronisierung, Dauerhaftigkeit, Nachverfolgung und Erweiterungen) bereitzustellen.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Activities.Hosting.WorkflowInstance">
          <source><ph id="ph1">&lt;xref:System.Activities.Hosting.WorkflowInstance&gt;</ph> is single threaded and assumes that the host synchronizes all access to it.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Activities.Hosting.WorkflowInstance&gt;</ph> ist eine Singlethread-Instanz und nimmt an, dass der Host jeden Zugriff darauf synchronisiert.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Activities.Hosting.WorkflowInstance">
          <source>An attempt to call multiple APIs simultaneously will result in an <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> being thrown.</source>
          <target state="translated">Ein Versuch, mehrere APIs gleichzeitig aufzurufen, führt dazu, dass eine <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> ausgegeben wird.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Activities.Hosting.WorkflowInstance">
          <source>Internally, a <ph id="ph1">&lt;xref:System.Activities.Hosting.WorkflowInstance&gt;</ph> has two states: Running and Paused.</source>
          <target state="translated">Intern hat eine <ph id="ph1">&lt;xref:System.Activities.Hosting.WorkflowInstance&gt;</ph> zwei Zustände: den Zustand der Ausführung und den angehaltenen Zustand.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Activities.Hosting.WorkflowInstance">
          <source>The only way to cause the runtime to transition from paused to running is to call <ph id="ph1">&lt;xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.Run%2A&gt;</ph>.</source>
          <target state="translated">Die einzige Möglichkeit, die Laufzeit zu einem Wechsel vom angehaltenen Zustand in den Zustand der Ausführung zu bringen, besteht darin, <ph id="ph1">&lt;xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.Run%2A&gt;</ph> aufzurufen.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Activities.Hosting.WorkflowInstance">
          <source>All actions (except Pause) can only be taken while the runtime is Paused.</source>
          <target state="translated">Alle Aktionen (außer PAUSE) können nur ausgeführt werden, während sich die Laufzeit im angehaltenen Zustand befindet.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Activities.Hosting.WorkflowInstance">
          <source>The runtime will become spontaneously Paused in the following situations:</source>
          <target state="translated">Die Laufzeit wird in den folgenden Situationen spontan angehalten:</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Activities.Hosting.WorkflowInstance">
          <source>An error fatal to the runtime has occurred.</source>
          <target state="translated">Ein schwerwiegender Laufzeitfehler ist aufgetreten.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Activities.Hosting.WorkflowInstance">
          <source>The host will be signaled through <ph id="ph1">&lt;xref:System.Activities.Hosting.WorkflowInstance.OnRequestAbort%2A&gt;</ph> (which does not signal a transition to Paused) and then notified through <ph id="ph2">&lt;xref:System.Activities.Hosting.WorkflowInstance.OnNotifyPaused%2A&gt;</ph>.</source>
          <target state="translated">Der Host wird durch <ph id="ph1">&lt;xref:System.Activities.Hosting.WorkflowInstance.OnRequestAbort%2A&gt;</ph> signalisiert (hierbei wird kein Übergang zum angehaltenen Zustand signalisiert) und wird dann durch <ph id="ph2">&lt;xref:System.Activities.Hosting.WorkflowInstance.OnNotifyPaused%2A&gt;</ph> benachrichtigt.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Activities.Hosting.WorkflowInstance">
          <source>An exception in the workflow was uncaught and escaped the root.</source>
          <target state="translated">Eine Ausnahme im Workflow wurde nicht abgefangen und hat den Stamm verlassen.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Activities.Hosting.WorkflowInstance">
          <source>The host will be notified through the <ph id="ph1">&lt;xref:System.Activities.Hosting.WorkflowInstance.OnNotifyUnhandledException%2A&gt;</ph> method.</source>
          <target state="translated">Der Host wird durch die <ph id="ph1">&lt;xref:System.Activities.Hosting.WorkflowInstance.OnNotifyUnhandledException%2A&gt;</ph>-Methode benachrichtigt.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Activities.Hosting.WorkflowInstance">
          <source>The scheduler has run out of work items and is now <ph id="ph1">&lt;xref:System.Activities.Hosting.WorkflowInstanceState.Idle&gt;</ph>.</source>
          <target state="translated">Dem Planer sind Arbeitsaufgaben ausgegangen. Er befindet sich jetzt im Zustand <ph id="ph1">&lt;xref:System.Activities.Hosting.WorkflowInstanceState.Idle&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Activities.Hosting.WorkflowInstance">
          <source>The host will be notified through the <ph id="ph1">&lt;xref:System.Activities.Hosting.WorkflowInstance.OnNotifyPaused%2A&gt;</ph> method.</source>
          <target state="translated">Der Host wird durch die <ph id="ph1">&lt;xref:System.Activities.Hosting.WorkflowInstance.OnNotifyPaused%2A&gt;</ph>-Methode benachrichtigt.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Activities.Hosting.WorkflowInstance">
          <source>Note that the scheduler could have run out of work items because the instance is idle or because the instance is complete.</source>
          <target state="translated">Beachten Sie, dass dem Planer Arbeitsaufgaben ausgegangen sein könnten, da sich die Instanz im Leerlauf befindet oder abgeschlossen ist.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Activities.Hosting.WorkflowInstance">
          <source>The <ph id="ph1">&lt;xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.State%2A&gt;</ph> value of the <ph id="ph2">&lt;xref:System.Activities.Hosting.WorkflowInstance.Controller%2A&gt;</ph> property can be used to differentiate between the two.</source>
          <target state="translated">Mithilfe des <ph id="ph1">&lt;xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.State%2A&gt;</ph>-Werts der <ph id="ph2">&lt;xref:System.Activities.Hosting.WorkflowInstance.Controller%2A&gt;</ph>-Eigenschaft kann zwischen den beiden Werten unterschieden werden.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Activities.Hosting.WorkflowInstance">
          <source>The host can request a change from Running to Paused by calling the <ph id="ph1">&lt;xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.RequestPause%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.PauseWhenPersistable%2A&gt;</ph> methods of the <ph id="ph3">&lt;xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl&gt;</ph> instance returned by the <ph id="ph4">&lt;xref:System.Activities.Hosting.WorkflowInstance.Controller%2A&gt;</ph> property.</source>
          <target state="translated">Der Host kann einen Wechsel vom Zustand der Ausführung in den angehaltenen Zustand anfordern, indem er die <ph id="ph1">&lt;xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.RequestPause%2A&gt;</ph>-Methode oder <ph id="ph2">&lt;xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.PauseWhenPersistable%2A&gt;</ph>-Methode der <ph id="ph3">&lt;xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl&gt;</ph>-Instanz aufruft, die von der <ph id="ph4">&lt;xref:System.Activities.Hosting.WorkflowInstance.Controller%2A&gt;</ph>-Eigenschaft zurückgegeben wurde.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Activities.Hosting.WorkflowInstance">
          <source>This request should not be considered to have a specific response meaning that the host should not attempt to correlate an OnNotify* or <ph id="ph1">&lt;xref:System.Activities.Hosting.WorkflowInstance.OnRequestAbort%2A&gt;</ph> with a specific call to pause.</source>
          <target state="translated">Diese Anforderung liefert keine bestimmte Antwort. Das bedeutet, dass der Host nicht versuchen sollte, einen OnNotify* oder <ph id="ph1">&lt;xref:System.Activities.Hosting.WorkflowInstance.OnRequestAbort%2A&gt;</ph> mit einer bestimmten Anforderung zum Anhalten zu korrelieren.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Activities.Hosting.WorkflowInstance">
          <source>In response to a pause request, the runtime may transition to Paused and call <ph id="ph1">&lt;xref:System.Activities.Hosting.WorkflowInstance.OnNotifyPaused%2A&gt;</ph> while the scheduler still has pending work items.</source>
          <target state="translated">Als Reaktion auf eine Pausenanforderung kann die Laufzeit in den angehaltenen Status wechseln und <ph id="ph1">&lt;xref:System.Activities.Hosting.WorkflowInstance.OnNotifyPaused%2A&gt;</ph> aufrufen, während der Planer immer noch ausstehende Arbeitsaufgaben zu bewältigen hat.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Activities.Hosting.WorkflowInstance">
          <source>The <ph id="ph1">&lt;xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.State%2A&gt;</ph> value of the <ph id="ph2">&lt;xref:System.Activities.Hosting.WorkflowInstance.Controller%2A&gt;</ph> property can be used to determine whether the scheduler has no more work or was interrupted by a request to pause.</source>
          <target state="translated">Der <ph id="ph1">&lt;xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.State%2A&gt;</ph>-Wert der <ph id="ph2">&lt;xref:System.Activities.Hosting.WorkflowInstance.Controller%2A&gt;</ph>-Eigenschaft kann verwendet werden, um zu bestimmen, ob der Planer keine weitere Arbeit aufweist oder von einer Pausenanforderung unterbrochen wurde.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Activities.Hosting.WorkflowInstance">
          <source>The <ph id="ph1">&lt;xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.RequestPause%2A&gt;</ph> method of the <ph id="ph2">&lt;xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl&gt;</ph> instance returned by the <ph id="ph3">&lt;xref:System.Activities.Hosting.WorkflowInstance.Controller%2A&gt;</ph> property is the only method which can be called while the <ph id="ph4">&lt;xref:System.Activities.Hosting.WorkflowInstance&gt;</ph> is in the Running state.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.RequestPause%2A&gt;</ph>-Methode der <ph id="ph2">&lt;xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl&gt;</ph>-Instanz, die von der <ph id="ph3">&lt;xref:System.Activities.Hosting.WorkflowInstance.Controller%2A&gt;</ph>-Eigenschaft zurückgegeben wurde, ist die einzige Methode, die aufgerufen werden kann, während sich die <ph id="ph4">&lt;xref:System.Activities.Hosting.WorkflowInstance&gt;</ph> im Status der Ausführung befindet.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Activities.Hosting.WorkflowInstance">
          <source>All other methods will throw an <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> if called.Given the rules for how <ph id="ph2">&lt;xref:System.Activities.Hosting.WorkflowInstance&gt;</ph> transitions from one state to another, the public notion of Running and Paused can be defined as follows:</source>
          <target state="translated">Alle anderen Methoden lösen eine <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> aus, wenn sie aufgerufen werden. Aufgrund der Regeln für den Wechsel der <ph id="ph2">&lt;xref:System.Activities.Hosting.WorkflowInstance&gt;</ph> von einem Zustand in einen anderen kann das allgemeine Konzept für den Zustand der Ausführung und den angehaltenen Zustand wie folgt definiert werden:</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Activities.Hosting.WorkflowInstance">
          <source>Running – The state between a call to <ph id="ph1">&lt;xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.Run%2A&gt;</ph> and the next WorkflowInstance.OnNotify*.</source>
          <target state="translated">Zustand der Ausführung: Der Zustand zwischen einem Aufruf von <ph id="ph1">&lt;xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.Run%2A&gt;</ph> und der nächsten WorkflowInstance.OnNotify*.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Activities.Hosting.WorkflowInstance">
          <source>Paused – The state between the last WorkflowInstance.OnNotify* and the next call to <ph id="ph1">&lt;xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.Run%2A&gt;</ph>.</source>
          <target state="translated">Angehaltener Zustand: Der Zustand zwischen der letzten WorkflowInstance.OnNotify* und dem nächsten Aufruf von <ph id="ph1">&lt;xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.Run%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="T:System.Activities.Hosting.WorkflowInstance">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Activities.Hosting.WorkflowInstance" /&gt;</ph> class.</source>
          <target state="translated">Initialisiert eine neue Instanz der <ph id="ph1">&lt;see cref="T:System.Activities.Hosting.WorkflowInstance" /&gt;</ph>-Klasse.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Activities.Hosting.WorkflowInstance.#ctor(System.Activities.Activity)">
          <source>The activity that defines the workflow.</source>
          <target state="translated">Die Aktivität, die den Workflow definiert.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Activities.Hosting.WorkflowInstance.#ctor(System.Activities.Activity)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Activities.Hosting.WorkflowInstance" /&gt;</ph> class with the specified workflow definition.</source>
          <target state="translated">Initialisiert eine neue Instanz der <ph id="ph1">&lt;see cref="T:System.Activities.Hosting.WorkflowInstance" /&gt;</ph>-Klasse mit der angegebenen Workflowdefinition.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Activities.Hosting.WorkflowInstance.#ctor(System.Activities.Activity,System.Activities.WorkflowIdentity)">
          <source>The activity that defines the workflow.</source>
          <target state="translated">Die Aktivität, die den Workflow definiert.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Activities.Hosting.WorkflowInstance.#ctor(System.Activities.Activity,System.Activities.WorkflowIdentity)">
          <source>The definition identity.</source>
          <target state="translated">Die Definitionsidentität.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Activities.Hosting.WorkflowInstance.#ctor(System.Activities.Activity,System.Activities.WorkflowIdentity)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Activities.Hosting.WorkflowInstance" /&gt;</ph> class with the specified workflow definition and definition identity.</source>
          <target state="translated">Initialisiert eine neue Instanz der <ph id="ph1">&lt;see cref="T:System.Activities.Hosting.WorkflowInstance" /&gt;</ph>-Klasse mit der angegebenen Workflowdefinition und Definitionsidentität.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Activities.Hosting.WorkflowInstance.BeginFlushTrackingRecords(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The time period after which to abort the attempt.</source>
          <target state="translated">Der Zeitraum, nach dem der Versuch abgebrochen wird.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Activities.Hosting.WorkflowInstance.BeginFlushTrackingRecords(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The method to be called when the track operation has completed.</source>
          <target state="translated">Die Methode, die aufgerufen wird, wenn der Nachverfolgungsvorgang abgeschlossen ist.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Activities.Hosting.WorkflowInstance.BeginFlushTrackingRecords(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The information about the asynchronous operation.</source>
          <target state="translated">Die Informationen über den asynchronen Vorgang.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Activities.Hosting.WorkflowInstance.BeginFlushTrackingRecords(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>Called by the workflow runtime to begin sending pending tracking records to tracking participants asynchronously.</source>
          <target state="translated">Wird von der Workflowlaufzeit aufgerufen, um damit zu beginnen, ausstehende Nachverfolgungsdatensätze asynchron an Nachverfolgungsteilnehmer zu senden.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Activities.Hosting.WorkflowInstance.BeginFlushTrackingRecords(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The status of the current track operation.</source>
          <target state="translated">Der Status des aktuellen Nachverfolgungsvorgangs.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="P:System.Activities.Hosting.WorkflowInstance.Controller">
          <source>Gets the <ph id="ph1">&lt;see cref="T:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl" /&gt;</ph> instance for this <ph id="ph2">&lt;see cref="T:System.Activities.Hosting.WorkflowInstance" /&gt;</ph>.</source>
          <target state="translated">Ruft die <ph id="ph1">&lt;see cref="T:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl" /&gt;</ph>-Instanz für diese <ph id="ph2">&lt;see cref="T:System.Activities.Hosting.WorkflowInstance" /&gt;</ph> ab.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Activities.Hosting.WorkflowInstance.Controller">
          <source>The controller instance for this workflow instance.</source>
          <target state="translated">Die Controllerinstanz für diese Workflowinstanz.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="P:System.Activities.Hosting.WorkflowInstance.DefinitionIdentity">
          <source>Gets or sets the definition identity of <ph id="ph1">&lt;see cref="T:System.Activities.Hosting.WorkflowInstance" /&gt;</ph>.</source>
          <target state="translated">Ruft die Definitionsidentität der <ph id="ph1">&lt;see cref="T:System.Activities.Hosting.WorkflowInstance" /&gt;</ph> ab oder legt diese fest.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Activities.Hosting.WorkflowInstance.DefinitionIdentity">
          <source>The definition identity of <ph id="ph1">&lt;see cref="T:System.Activities.Hosting.WorkflowInstance" /&gt;</ph>.</source>
          <target state="translated">Die Definitionidentität einer <ph id="ph1">&lt;see cref="T:System.Activities.Hosting.WorkflowInstance" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Activities.Hosting.WorkflowInstance.DisposeExtensions">
          <source>Calls <ph id="ph1">&lt;see cref="M:System.Disposable.Dispose" /&gt;</ph> on all extensions that implement <ph id="ph2">&lt;see cref="T:System.IDisposable" /&gt;</ph>.</source>
          <target state="translated">Ruft <ph id="ph1">&lt;see cref="M:System.Disposable.Dispose" /&gt;</ph> für alle Erweiterungen auf, die <ph id="ph2">&lt;see cref="T:System.IDisposable" /&gt;</ph> implementieren.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Activities.Hosting.WorkflowInstance.EndFlushTrackingRecords(System.IAsyncResult)">
          <source>The status of the asynchronous track operation.</source>
          <target state="translated">Der Status des asynchronen Nachverfolgungsvorgangs.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Activities.Hosting.WorkflowInstance.EndFlushTrackingRecords(System.IAsyncResult)">
          <source>Called by the workflow runtime to end the track operation.</source>
          <target state="translated">Wird von der Workflowlaufzeit zum Beenden der Nachverfolgungsaktivität aufgerufen.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Activities.Hosting.WorkflowInstance.FlushTrackingRecords(System.TimeSpan)">
          <source>The time period after which to abort the attempt.</source>
          <target state="translated">Der Zeitraum, nach dem der Versuch abgebrochen wird.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Activities.Hosting.WorkflowInstance.FlushTrackingRecords(System.TimeSpan)">
          <source>Called by the workflow runtime to send pending tracking records to tracking participants.</source>
          <target state="translated">Wird von der Workflowlaufzeit aufgerufen, um ausstehende Nachverfolgungsdatensätze an Nachverfolgungsteilnehmer zu senden.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Activities.Hosting.WorkflowInstance.GetActivitiesBlockingUpdate(System.Object,System.Activities.DynamicUpdate.DynamicUpdateMap)">
          <source>The deserialized runtime state.</source>
          <target state="translated">Der deserialisierte Laufzeitzustand.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Activities.Hosting.WorkflowInstance.GetActivitiesBlockingUpdate(System.Object,System.Activities.DynamicUpdate.DynamicUpdateMap)">
          <source>The update map.</source>
          <target state="translated">Die Updatezuordnung.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Activities.Hosting.WorkflowInstance.GetActivitiesBlockingUpdate(System.Object,System.Activities.DynamicUpdate.DynamicUpdateMap)">
          <source>Retrieves the list of activity that is blocking the update of the workflow.</source>
          <target state="translated">Ruft die Liste der Aktivität ab, die das Update des Workflows blockiert.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Activities.Hosting.WorkflowInstance.GetActivitiesBlockingUpdate(System.Object,System.Activities.DynamicUpdate.DynamicUpdateMap)">
          <source>The list of activity that is blocking the update.</source>
          <target state="translated">Die Liste der Aktivitäten, die das Update blockieren.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.Hosting.WorkflowInstance.GetExtension``1">
          <source>The type of the extension to find.</source>
          <target state="translated">Der Typ der zu suchenden Erweiterung.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Activities.Hosting.WorkflowInstance.GetExtension``1">
          <source>Returns an extension of the specified type.</source>
          <target state="translated">Gibt eine Erweiterung des angegebenen Typs zurück.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Activities.Hosting.WorkflowInstance.GetExtension``1">
          <source>An extension of the specified type.</source>
          <target state="translated">Eine Erweiterung des angegebenen Typs.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.Hosting.WorkflowInstance.GetExtensions``1">
          <source>The type of the extension to find.</source>
          <target state="translated">Der Typ der zu suchenden Erweiterung.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Activities.Hosting.WorkflowInstance.GetExtensions``1">
          <source>Returns all extensions found for the specified type.</source>
          <target state="translated">Gibt alle für den angegebenen Typ gefundenen Erweiterungen zurück.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Activities.Hosting.WorkflowInstance.GetExtensions``1">
          <source>All extensions found for the specified type.</source>
          <target state="translated">Alle für den angegebenen Typ gefundenen Erweiterungen.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="P:System.Activities.Hosting.WorkflowInstance.HostEnvironment">
          <source>Gets or sets the root environment for the workflow instance’s arguments and variables.</source>
          <target state="translated">Ruft die Stammumgebung für die Argumente und Variablen der Workflowinstanz ab oder legt sie fest.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Activities.Hosting.WorkflowInstance.HostEnvironment">
          <source>The root environment for the workflow instance’s arguments and variables.</source>
          <target state="translated">Die Stammumgebung für die Argumente und Variablen der Workflowinstanz.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Activities.Hosting.WorkflowInstance.HostEnvironment">
          <source>If this property is set after the workflow instance is initialized and <ph id="ph1">&lt;xref:System.Activities.Hosting.WorkflowInstance.IsReadOnly%2A&gt;</ph> returns <ph id="ph2">`true`</ph>, an <ph id="ph3">&lt;xref:System.InvalidOperationException&gt;</ph> is thrown.</source>
          <target state="translated">Wenn diese Eigenschaft festgelegt wird, nachdem die Workflowinstanz initialisiert wurde und <ph id="ph1">&lt;xref:System.Activities.Hosting.WorkflowInstance.IsReadOnly%2A&gt;</ph> gibt <ph id="ph2">`true`</ph>, wird eine <ph id="ph3">&lt;xref:System.InvalidOperationException&gt;</ph> ausgelöst wird.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="P:System.Activities.Hosting.WorkflowInstance.Id">
          <source>Gets the unique identifier for the workflow instance.</source>
          <target state="translated">Ruft den eindeutigen Bezeichner der Workflowinstanz ab.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Activities.Hosting.WorkflowInstance.Id">
          <source>The unique identifier for the workflow instance.</source>
          <target state="translated">Der eindeutige Bezeichner der Workflowinstanz.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="T:System.Activities.Hosting.WorkflowInstance">
          <source>Called by the host to initialize the workflow instance.</source>
          <target state="translated">Wird vom Host aufgerufen, um die Workflowinstanz zu initialisieren.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Activities.Hosting.WorkflowInstance.Initialize(System.Object)">
          <source>The run-time state used to execute the workflow.</source>
          <target state="translated">Der Laufzeitzustand, der verwendet wurde, um den Workflow auszuführen.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Activities.Hosting.WorkflowInstance.Initialize(System.Object)">
          <source>Called by the host to initialize the workflow instance with the workflow run-time state.</source>
          <target state="translated">Wird vom Host aufgerufen, um die Workflowinstanz mit dem Workflowlaufzeitzustand zu initialisieren.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.Activities.Hosting.WorkflowInstance.Initialize(System.Collections.Generic.IDictionary{System.String,System.Object},System.Collections.Generic.IList{System.Activities.Handle})">
          <source>The input parameters to the workflow, keyed by argument name.</source>
          <target state="translated">Die Eingabeparameter für den Workflow, nach Argumentname geordnet.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.Activities.Hosting.WorkflowInstance.Initialize(System.Collections.Generic.IDictionary{System.String,System.Object},System.Collections.Generic.IList{System.Activities.Handle})">
          <source>The list of workflow execution properties.</source>
          <target state="translated">Die Liste der Workflowausführungseigenschaften.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.Activities.Hosting.WorkflowInstance.Initialize(System.Collections.Generic.IDictionary{System.String,System.Object},System.Collections.Generic.IList{System.Activities.Handle})">
          <source>Called by the host to initialize the workflow instance with the argument values and execution properties.</source>
          <target state="translated">Wird vom Host aufgerufen, um die Workflowinstanz mit den Argumentwerten und Ausführungseigenschaften zu initialisieren.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.Activities.Hosting.WorkflowInstance.Initialize(System.Object,System.Activities.DynamicUpdate.DynamicUpdateMap)">
          <source>The run-time state used to execute the workflow.</source>
          <target state="translated">Der Laufzeitzustand, der verwendet wurde, um den Workflow auszuführen.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.Activities.Hosting.WorkflowInstance.Initialize(System.Object,System.Activities.DynamicUpdate.DynamicUpdateMap)">
          <source>The update map.</source>
          <target state="translated">Die Updatezuordnung.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.Activities.Hosting.WorkflowInstance.Initialize(System.Object,System.Activities.DynamicUpdate.DynamicUpdateMap)">
          <source>Called by the host to initialize the workflow instance with the workflow run-time state and update map.</source>
          <target state="translated">Wird vom Host aufgerufen, um die Workflowinstanz mit dem Workflowlaufzeitzustand und der Update-Zuordnung zu initialisieren.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="P:System.Activities.Hosting.WorkflowInstance.IsReadOnly">
          <source>Gets a value that indicates whether the workflow instance has been initialized.</source>
          <target state="translated">Ruft einen Wert ab, der angibt, ob die Workflowinstanz initialisiert wurde.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Activities.Hosting.WorkflowInstance.IsReadOnly">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the workflow instance has been initialized; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, wenn die Workflowinstanz initialisiert wurde, andernfalls <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.Activities.Hosting.WorkflowInstance.OnBeginAssociateKeys(System.Collections.Generic.ICollection{System.Runtime.DurableInstancing.InstanceKey},System.AsyncCallback,System.Object)">
          <source>The instance keys to associate with this workflow instance.</source>
          <target state="translated">Die dieser Workflowinstanz zuzuordnenden Instanzschlüssel.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.Activities.Hosting.WorkflowInstance.OnBeginAssociateKeys(System.Collections.Generic.ICollection{System.Runtime.DurableInstancing.InstanceKey},System.AsyncCallback,System.Object)">
          <source>The method to be called when the operation completes.</source>
          <target state="translated">Die Methode, die aufgerufen wird, wenn der Vorgang abgeschlossen ist.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.Activities.Hosting.WorkflowInstance.OnBeginAssociateKeys(System.Collections.Generic.ICollection{System.Runtime.DurableInstancing.InstanceKey},System.AsyncCallback,System.Object)">
          <source>An optional application-specific object that contains information about the asynchronous operation.</source>
          <target state="translated">Ein optionales, anwendungsspezifisches Objekt, das Informationen über die asynchrone Operation enthält.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.Activities.Hosting.WorkflowInstance.OnBeginAssociateKeys(System.Collections.Generic.ICollection{System.Runtime.DurableInstancing.InstanceKey},System.AsyncCallback,System.Object)">
          <source>Called by the workflow runtime to notify the host that new instance keys should be associated with this instance.</source>
          <target state="translated">Wird von der Workflowlaufzeit aufgerufen, um den Host zu benachrichtigen, dass neue Instanzschlüssel dieser Instanz zugeordnet werden müssen.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.Activities.Hosting.WorkflowInstance.OnBeginAssociateKeys(System.Collections.Generic.ICollection{System.Runtime.DurableInstancing.InstanceKey},System.AsyncCallback,System.Object)">
          <source>A reference to the asynchronous associate keys operation.</source>
          <target state="translated">Ein Verweis auf den asynchronen Vorgang zum Zuordnen von Schlüsseln.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.Activities.Hosting.WorkflowInstance.OnBeginFlushTrackingRecords(System.AsyncCallback,System.Object)">
          <source>The method to be called when the track operation has completed.</source>
          <target state="translated">Die Methode, die aufgerufen wird, wenn der Nachverfolgungsvorgang abgeschlossen ist.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.Activities.Hosting.WorkflowInstance.OnBeginFlushTrackingRecords(System.AsyncCallback,System.Object)">
          <source>The information about the asynchronous operation.</source>
          <target state="translated">Die Informationen über den asynchronen Vorgang.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.Activities.Hosting.WorkflowInstance.OnBeginFlushTrackingRecords(System.AsyncCallback,System.Object)">
          <source>Asynchronous call to ask host to flush pending tracking records to tracking participants.</source>
          <target state="translated">Asynchroner Aufruf, um den Host zu bitten, ausstehende Nachverfolgungsdatensätze für Nachverfolgungsteilnehmer zu leeren.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.Activities.Hosting.WorkflowInstance.OnBeginFlushTrackingRecords(System.AsyncCallback,System.Object)">
          <source>The status of the current track operation.</source>
          <target state="translated">Der Status des aktuellen Nachverfolgungsvorgangs.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:System.Activities.Hosting.WorkflowInstance.OnBeginPersist(System.AsyncCallback,System.Object)">
          <source>The method to be called when the persist operation has completed.</source>
          <target state="translated">Die Methode, die aufgerufen wird, wenn der Beibehaltungsvorgang abgeschlossen ist.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:System.Activities.Hosting.WorkflowInstance.OnBeginPersist(System.AsyncCallback,System.Object)">
          <source>An optional application-specific object that contains information about the asynchronous operation.</source>
          <target state="translated">Ein optionales, anwendungsspezifisches Objekt, das Informationen über die asynchrone Operation enthält.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.Activities.Hosting.WorkflowInstance.OnBeginPersist(System.AsyncCallback,System.Object)">
          <source>Asynchronous call to ask the host to persist the workflow.</source>
          <target state="translated">Asynchroner Aufruf, um den Host aufzufordern, den Workflow beizubehalten.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="M:System.Activities.Hosting.WorkflowInstance.OnBeginPersist(System.AsyncCallback,System.Object)">
          <source>A reference to the current persist operation.</source>
          <target state="translated">Ein Verweis auf den aktuellen Beibehaltungsvorgang.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="M:System.Activities.Hosting.WorkflowInstance.OnBeginResumeBookmark(System.Activities.Bookmark,System.Object,System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The bookmark to resume.</source>
          <target state="translated">Das wiederaufzunehmende Lesezeichen.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:System.Activities.Hosting.WorkflowInstance.OnBeginResumeBookmark(System.Activities.Bookmark,System.Object,System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The data to be passed to the activity that created the <ph id="ph1">&lt;see cref="T:System.Activities.Bookmark" /&gt;</ph>.</source>
          <target state="translated">Die Daten, die an die Aktivität weitergegeben werden sollen, mit der das <ph id="ph1">&lt;see cref="T:System.Activities.Bookmark" /&gt;</ph> erstellt wurde.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="M:System.Activities.Hosting.WorkflowInstance.OnBeginResumeBookmark(System.Activities.Bookmark,System.Object,System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The interval in which the resume operation must complete before the operation is canceled and a <ph id="ph1">&lt;see cref="T:System.TimeoutException" /&gt;</ph> is thrown.</source>
          <target state="translated">Das Intervall, in dem der Wiederaufnahmevorgang abgeschlossen werden muss, bevor der Vorgang abgebrochen und eine <ph id="ph1">&lt;see cref="T:System.TimeoutException" /&gt;</ph> ausgelöst wird.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="M:System.Activities.Hosting.WorkflowInstance.OnBeginResumeBookmark(System.Activities.Bookmark,System.Object,System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The method to be called when the resume operation has completed.</source>
          <target state="translated">Die Methode, die aufgerufen wird, wenn der Wiederaufnahmevorgang abgeschlossen ist.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.Activities.Hosting.WorkflowInstance.OnBeginResumeBookmark(System.Activities.Bookmark,System.Object,System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>An optional application-specific object that contains information about the asynchronous operation.</source>
          <target state="translated">Ein optionales, anwendungsspezifisches Objekt, das Informationen über die asynchrone Operation enthält.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.Activities.Hosting.WorkflowInstance.OnBeginResumeBookmark(System.Activities.Bookmark,System.Object,System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>Called by the workflow runtime to notify the host that a resume bookmark operation is beginning.</source>
          <target state="translated">Wird von der Workflowlaufzeit aufgerufen, um den Host zu benachrichtigen, dass ein Vorgang zur Lesezeichenwiederaufnahme beginnt.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.Activities.Hosting.WorkflowInstance.OnBeginResumeBookmark(System.Activities.Bookmark,System.Object,System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>A reference to the asynchronous resume operation.</source>
          <target state="translated">Ein Verweis auf den asynchronen Wiederaufnahmevorgang.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.Activities.Hosting.WorkflowInstance.OnDisassociateKeys(System.Collections.Generic.ICollection{System.Runtime.DurableInstancing.InstanceKey})">
          <source>The list of keys to disassociate.</source>
          <target state="translated">Die Liste der Schlüssel, für die die Zuordnung aufgehoben werden soll.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.Activities.Hosting.WorkflowInstance.OnDisassociateKeys(System.Collections.Generic.ICollection{System.Runtime.DurableInstancing.InstanceKey})">
          <source>Called by the workflow runtime to notify the host that a certain set of instance keys should no longer be associated with this instance.</source>
          <target state="translated">Wird von der Workflowlaufzeit aufgerufen, um den Host zu benachrichtigen, dass ein bestimmter Satz Instanzschlüssel dieser Instanz nicht länger zugeordnet werden darf.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.Activities.Hosting.WorkflowInstance.OnEndAssociateKeys(System.IAsyncResult)">
          <source>The reference to the asynchronous associate keys operation.</source>
          <target state="translated">Der Verweis auf den asynchronen Vorgang zum Zuordnen von Schlüsseln.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.Activities.Hosting.WorkflowInstance.OnEndAssociateKeys(System.IAsyncResult)">
          <source>Called by the workflow runtime to notify the host that an associate keys operation is complete.</source>
          <target state="translated">Wird von der Workflowlaufzeit aufgerufen, um den Host zu benachrichtigen, dass ein Vorgang zum Zuordnen von Schlüsseln abgeschlossen wurde.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="M:System.Activities.Hosting.WorkflowInstance.OnEndFlushTrackingRecords(System.IAsyncResult)">
          <source>The status of the asynchronous flush tracking records operation.</source>
          <target state="translated">Der Status des asynchronen Vorgangs zum Löschen von Nachverfolgungsdatensätzen.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="M:System.Activities.Hosting.WorkflowInstance.OnEndFlushTrackingRecords(System.IAsyncResult)">
          <source>Called by the workflow runtime to notify the host when the flush tracking records operation is complete.</source>
          <target state="translated">Wird von der Workflowlaufzeit aufgerufen, um den Host zu benachrichtigen, wenn ein Vorgang zur Löschung von Nachverfolgungsdatensätzen abgeschlossen wurde.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="M:System.Activities.Hosting.WorkflowInstance.OnEndPersist(System.IAsyncResult)">
          <source>The reference to the asynchronous persist operation.</source>
          <target state="translated">Der Verweis auf den asynchronen Beibehaltungsvorgang.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="M:System.Activities.Hosting.WorkflowInstance.OnEndPersist(System.IAsyncResult)">
          <source>Called by the workflow runtime to notify the host that a persist operation is complete.</source>
          <target state="translated">Wird von der Workflowlaufzeit aufgerufen, um den Host zu benachrichtigen, dass ein Beibehaltungsvorgang abgeschlossen wurde.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="M:System.Activities.Hosting.WorkflowInstance.OnEndResumeBookmark(System.IAsyncResult)">
          <source>The reference to the asynchronous resume bookmark operation.</source>
          <target state="translated">Der Verweis auf den asynchronen Vorgang zur Lesezeichenwiederaufnahme.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="M:System.Activities.Hosting.WorkflowInstance.OnEndResumeBookmark(System.IAsyncResult)">
          <source>Called by the workflow runtime to notify the host that a resume bookmark operation is complete.</source>
          <target state="translated">Wird von der Workflowlaufzeit aufgerufen, um den Host zu benachrichtigen, dass ein Vorgang zur Lesezeichenwiederaufnahme abgeschlossen wurde.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="M:System.Activities.Hosting.WorkflowInstance.OnEndResumeBookmark(System.IAsyncResult)">
          <source>One of the enumeration values that indicates the result of a <ph id="ph1">&lt;see cref="T:System.Activities.Bookmark" /&gt;</ph> resume operation.</source>
          <target state="translated">Einer der Enumerationswerte, der das Ergebnis einer <ph id="ph1">&lt;see cref="T:System.Activities.Bookmark" /&gt;</ph>-Wiederaufnahme anzeigt.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:System.Activities.Hosting.WorkflowInstance.OnNotifyPaused">
          <source>Called by the workflow runtime to notify the host that the workflow instance has transitioned from the running state to the paused state.</source>
          <target state="translated">Wird von der Workflowlaufzeit aufgerufen, um den Host zu benachrichtigen, dass die Workflowinstanz vom Zustand der Ausführung in den angehaltenen Zustand gewechselt hat.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="M:System.Activities.Hosting.WorkflowInstance.OnNotifyUnhandledException(System.Exception,System.Activities.Activity,System.String)">
          <source>The unhandled exception.</source>
          <target state="translated">Die nicht behandelte Ausnahme.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:System.Activities.Hosting.WorkflowInstance.OnNotifyUnhandledException(System.Exception,System.Activities.Activity,System.String)">
          <source>The activity that threw the exception.</source>
          <target state="translated">Die Aktivität, die die Ausnahme ausgelöst hat.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="M:System.Activities.Hosting.WorkflowInstance.OnNotifyUnhandledException(System.Exception,System.Activities.Activity,System.String)">
          <source>The unique identifier of the <ph id="ph1">&lt;see cref="T:System.Activities.ActivityInstance" /&gt;</ph> representing the activity that threw the exception.</source>
          <target state="translated">Der eindeutige Bezeichner der <ph id="ph1">&lt;see cref="T:System.Activities.ActivityInstance" /&gt;</ph>, welche die Aktivität repräsentiert, die die Ausnahme ausgelöst hat.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="M:System.Activities.Hosting.WorkflowInstance.OnNotifyUnhandledException(System.Exception,System.Activities.Activity,System.String)">
          <source>Called by the workflow runtime to notify the host an unhandled exception has occurred in the workflow instance.</source>
          <target state="translated">Wird von der Workflowlaufzeit aufgerufen, um den Host zu benachrichtigen, dass eine nicht behandelte Ausnahme in der Workflowinstanz aufgetreten ist.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:System.Activities.Hosting.WorkflowInstance.OnRequestAbort(System.Exception)">
          <source>The reason for aborting the workflow instance.</source>
          <target state="translated">Die Ursache für das Abbrechen der Workflowinstanz.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:System.Activities.Hosting.WorkflowInstance.OnRequestAbort(System.Exception)">
          <source>Called by the workflow runtime to notify the host that an abort operation has been requested for the workflow instance.</source>
          <target state="translated">Wird von der Workflowlaufzeit aufgerufen, um den Host zu benachrichtigen, dass ein Abbruchvorgang für die Workflowinstanz angefordert wurde.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.Hosting.WorkflowInstance.OnRequestAbort(System.Exception)">
          <source>Once <ph id="ph1">&lt;xref:System.Activities.Hosting.WorkflowInstance.OnRequestAbort%2A&gt;</ph> is called, most <ph id="ph2">&lt;xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl&gt;</ph> APIs except <ph id="ph3">&lt;xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.Abort%2A&gt;</ph> will throw an <ph id="ph4">&lt;xref:System.InvalidOperationException&gt;</ph>.</source>
          <target state="translated">Sobald ein <ph id="ph1">&lt;xref:System.Activities.Hosting.WorkflowInstance.OnRequestAbort%2A&gt;</ph> aufgerufen wird, geben die meisten <ph id="ph2">&lt;xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl&gt;</ph>-APIs mit Ausnahme von <ph id="ph3">&lt;xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.Abort%2A&gt;</ph> eine Ausnahme vom Typ <ph id="ph4">&lt;xref:System.InvalidOperationException&gt;</ph> aus.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.Hosting.WorkflowInstance.OnRequestAbort(System.Exception)">
          <source>It is expected that after <ph id="ph1">&lt;xref:System.Activities.Hosting.WorkflowInstance.OnRequestAbort%2A&gt;</ph> is called a host will trend toward a state in which it can satisfy the abort.</source>
          <target state="translated">Es wird erwartet, dass, nachdem der <ph id="ph1">&lt;xref:System.Activities.Hosting.WorkflowInstance.OnRequestAbort%2A&gt;</ph> aufgerufen wurde, ein Host einen Zustand anstrebt, in dem er den Abbruch ausführen kann.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="M:System.Activities.Hosting.WorkflowInstance.RegisterExtensionManager(System.Activities.Hosting.WorkflowInstanceExtensionManager)">
          <source>The extension manager to register.</source>
          <target state="translated">Der zu registrierende Erweiterungs-Manager.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="M:System.Activities.Hosting.WorkflowInstance.RegisterExtensionManager(System.Activities.Hosting.WorkflowInstanceExtensionManager)">
          <source>Called by the host to register the specified extension manager, validate that all required extensions are present, and to initialize the collection of extensions to be used.</source>
          <target state="translated">Wird vom Host aufgerufen, um den angegebenen Erweiterungs-Manager zu registrieren, zu überprüfen, dass alle erforderlichen Erweiterungen vorhanden sind, und die Auflistung der zu verwendenden Erweiterungen zu initialisieren.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.Hosting.WorkflowInstance.RegisterExtensionManager(System.Activities.Hosting.WorkflowInstanceExtensionManager)">
          <source>Extensions are keyed by type, and a host provided extension will always be used if provided.</source>
          <target state="translated">Erweiterungen werden nach Typ geordnet, und eine vom Host bereitgestellte Erweiterung wird immer verwendet, sofern vorhanden.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.Hosting.WorkflowInstance.RegisterExtensionManager(System.Activities.Hosting.WorkflowInstanceExtensionManager)">
          <source>Extensions added through <ph id="ph1">&lt;xref:System.Activities.Hosting.WorkflowInstanceExtensionManager.Add%2A&gt;</ph> use the runtime type of the object as the type key.</source>
          <target state="translated">Durch den <ph id="ph1">&lt;xref:System.Activities.Hosting.WorkflowInstanceExtensionManager.Add%2A&gt;</ph> hinzugefügte Erweiterungen verwenden den Laufzeittyp des Objekts als Typschlüssel.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.Hosting.WorkflowInstance.RegisterExtensionManager(System.Activities.Hosting.WorkflowInstanceExtensionManager)">
          <source>Extensions providers added through <ph id="ph1">&lt;xref:System.Activities.Hosting.WorkflowInstanceExtensionManager.Add%2A&gt;</ph> use the decared type T of the Func<ph id="ph2">\&lt;</ph>T&gt; as the type key.</source>
          <target state="translated">Hinzugefügte Erweiterungsanbieter über <ph id="ph1">&lt;xref:System.Activities.Hosting.WorkflowInstanceExtensionManager.Add%2A&gt;</ph> verwenden typschlüssel den deklarierten Typ T von Func<ph id="ph2">\&lt;</ph>T &gt; als typschlüssel.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.Hosting.WorkflowInstance.RegisterExtensionManager(System.Activities.Hosting.WorkflowInstanceExtensionManager)">
          <source>Extension providers contributed by activities through the various *ActivityMetadata.AddDefaultExtensionProvider methods are dropped if a host extension exists for the declared type or if there is a broader type provided through AddDefaultExtensionProvider (ex.</source>
          <target state="translated">Die mithilfe der verschiedenen *ActivityMetadata.AddDefaultExtensionProvider-Methoden von Aktivitäten bereitgestellten Erweiterungsanbieter werden gelöscht, wenn eine Hosterweiterung für den deklarierten Typ vorhanden ist oder wenn es einen breiteren durch AddDefaultExtensionProvider bereitgestellten Typ gibt</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.Hosting.WorkflowInstance.RegisterExtensionManager(System.Activities.Hosting.WorkflowInstanceExtensionManager)">
          <source>if Func<ph id="ph1">\&lt;</ph>StreamWriter&gt; is provided and Func<ph id="ph2">\&lt;</ph>TextWriter&gt; is provided, only Func<ph id="ph3">\&lt;</ph>StreamWriter&gt; will be kept).</source>
          <target state="translated">Wenn Func<ph id="ph1">\&lt;</ph>StreamWriter &gt; wird bereitgestellt und Func<ph id="ph2">\&lt;</ph>"TextWriter" &gt; angegeben ist, wird nur Func<ph id="ph3">\&lt;</ph>StreamWriter &gt; beibehalten wird).</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.Hosting.WorkflowInstance.RegisterExtensionManager(System.Activities.Hosting.WorkflowInstanceExtensionManager)">
          <source>If an extension does not exist in the collection that is required by an activity (expressed by calling *ActivityMetadata.RequireExtension) a <ph id="ph1">&lt;xref:System.Activities.ValidationException&gt;</ph> is thrown.</source>
          <target state="translated">Wenn in der Auflistung keine Erweiterung vorhanden ist, die von einer Aktivität benötigt wird (ausgedrückt durch Aufrufen von * ActivityMetadata.RequireExtension), wird eine <ph id="ph1">&lt;xref:System.Activities.ValidationException&gt;</ph> ausgelöst.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="P:System.Activities.Hosting.WorkflowInstance.SupportsInstanceKeys">
          <source>Gets a value that indicates whether the host supports the association of <ph id="ph1">&lt;see cref="P:System.Runtime.Persistence.InstanceView.InstanceKeys" /&gt;</ph> with a run-time instance.</source>
          <target state="translated">Ruft einen Wert ab, der angibt, ob der Host die Zuordnung von <ph id="ph1">&lt;see cref="P:System.Runtime.Persistence.InstanceView.InstanceKeys" /&gt;</ph> mit einer Laufzeitinstanz unterstützt.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Activities.Hosting.WorkflowInstance.SupportsInstanceKeys">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the host supports the association of <ph id="ph2">&lt;see cref="P:System.Runtime.Persistence.InstanceView.InstanceKeys" /&gt;</ph> with a workflow instance; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, wenn der Host die Zuordnung von <ph id="ph2">&lt;see cref="P:System.Runtime.Persistence.InstanceView.InstanceKeys" /&gt;</ph> mit einer Workflowinstanz unterstützt, andernfalls <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="P:System.Activities.Hosting.WorkflowInstance.SynchronizationContext">
          <source>Gets or sets the <ph id="ph1">&lt;see cref="T:System.Threading.SynchronizationContext" /&gt;</ph> used for scheduling the workflow instance.</source>
          <target state="translated">Ruft den <ph id="ph1">&lt;see cref="T:System.Threading.SynchronizationContext" /&gt;</ph> für die Planung der Workflowinstanz ab.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Activities.Hosting.WorkflowInstance.SynchronizationContext">
          <source>The synchronization context used for scheduling the workflow instance.</source>
          <target state="translated">Der Synchronisierungskontext für die Planung der Workflowinstanz.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Activities.Hosting.WorkflowInstance.SynchronizationContext">
          <source>If this property is set after the workflow instance is initialized and <ph id="ph1">&lt;xref:System.Activities.Hosting.WorkflowInstance.IsReadOnly%2A&gt;</ph> returns <ph id="ph2">`true`</ph>, an <ph id="ph3">&lt;xref:System.InvalidOperationException&gt;</ph> is thrown.</source>
          <target state="translated">Wenn diese Eigenschaft festgelegt wird, nachdem die Workflowinstanz initialisiert wurde und <ph id="ph1">&lt;xref:System.Activities.Hosting.WorkflowInstance.IsReadOnly%2A&gt;</ph> gibt <ph id="ph2">`true`</ph>, wird eine <ph id="ph3">&lt;xref:System.InvalidOperationException&gt;</ph> ausgelöst wird.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" uid="M:System.Activities.Hosting.WorkflowInstance.ThrowIfReadOnly">
          <source>Throws an <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> if the workflow instance has been initialized, as determined by <ph id="ph2">&lt;see cref="P:System.Activities.Hosting.WorkflowInstance.IsReadOnly" /&gt;</ph>.</source>
          <target state="translated">Löst eine <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> aus, wenn die Workflowinstanz initialisiert wurde, wie von <ph id="ph2">&lt;see cref="P:System.Activities.Hosting.WorkflowInstance.IsReadOnly" /&gt;</ph> bestimmt.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.Hosting.WorkflowInstance.ThrowIfReadOnly">
          <source>If <ph id="ph1">&lt;xref:System.Activities.Hosting.WorkflowInstance.IsReadOnly%2A&gt;</ph> returns <ph id="ph2">`true`</ph>, then an <ph id="ph3">&lt;xref:System.InvalidOperationException&gt;</ph> is thrown.</source>
          <target state="translated">Wenn <ph id="ph1">&lt;xref:System.Activities.Hosting.WorkflowInstance.IsReadOnly%2A&gt;</ph> gibt <ph id="ph2">`true`</ph>, ein <ph id="ph3">&lt;xref:System.InvalidOperationException&gt;</ph> ausgelöst wird.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" uid="P:System.Activities.Hosting.WorkflowInstance.WorkflowDefinition">
          <source>Gets the workflow definition of the workflow instance.</source>
          <target state="translated">Ruft die Workflowdefinition der Workflowinstanz ab.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Activities.Hosting.WorkflowInstance.WorkflowDefinition">
          <source>The workflow definition of the workflow instance.</source>
          <target state="translated">Die Workflowdefinition der Workflowinstanz.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>