<Type Name="WorkflowInstance" FullName="System.Activities.Hosting.WorkflowInstance">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="d315816115611de8c387fecbcb3fd4aac1e1aff6" />
    <Meta Name="ms.sourcegitcommit" Value="44933aff38db926168781f50300446344189a04d" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="07/16/2018" />
    <Meta Name="ms.locfileid" Value="39064847" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class WorkflowInstance" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract WorkflowInstance extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Activities.Hosting.WorkflowInstance" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class WorkflowInstance" />
  <TypeSignature Language="C++ CLI" Value="public ref class WorkflowInstance abstract" />
  <TypeSignature Language="F#" Value="type WorkflowInstance = class" />
  <AssemblyInfo>
    <AssemblyName>System.Activities</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="08fef-101">
        <see cref="T:System.Activities.Hosting.WorkflowInstance" /> ist eine einfache Pro-Instanz-Laufzeit zum Ausführen eines Workflowprogramms.</span>
      <span class="sxs-lookup">
        <span data-stu-id="08fef-101">
          <see cref="T:System.Activities.Hosting.WorkflowInstance" /> is a lightweight, per-instance runtime for executing a workflow program.</span>
      </span>
      <span data-ttu-id="08fef-102">Sie dient dazu, eine neue Workflowinstanz oder eine Workflowinstanz aus einer vorhandenen Instanz zu erstellen.</span>
      <span class="sxs-lookup">
        <span data-stu-id="08fef-102">It can be constructed to create a new workflow instance or from existing instance state.</span>
      </span>
      <span data-ttu-id="08fef-103">Die APIs, welche die <see cref="T:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl" /> verfügbar macht, stellen den minimalen Satz von Laufzeitsteuerelementen dar, von denen Vorgänge auf höherer Ebene implementiert werden können.</span>
      <span class="sxs-lookup">
        <span data-stu-id="08fef-103">The APIs that <see cref="T:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl" /> exposes are the minimal set of runtime controls from which higher level operations can be implemented.</span>
      </span>
      <span data-ttu-id="08fef-104">Dieser API-Satz stellt die ganze Bandbreite der Laufzeitfunktionalität dar.</span>
      <span class="sxs-lookup">
        <span data-stu-id="08fef-104">This API set represents the entire breadth of functionality of the runtime.</span>
      </span>
      <span data-ttu-id="08fef-105">Die <see cref="T:System.Activities.Hosting.WorkflowInstance" /> ist eine abstrakte Klasse und benötigt die Implementierung der abstrakten Methoden eines Hosts, um Hostfunktionen (wie etwa Synchronisierung, Dauerhaftigkeit, Nachverfolgung und Erweiterungen) bereitzustellen.</span>
      <span class="sxs-lookup">
        <span data-stu-id="08fef-105">
          <see cref="T:System.Activities.Hosting.WorkflowInstance" /> is an abstract class and relies on a host’s implementation of its abstract methods in order to provide host functionality such as synchronization, persistence, tracking, and extensions.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="08fef-106">Die <xref:System.Activities.Hosting.WorkflowInstance> ist eine Singlethread-Instanz und nimmt an, dass der Host jeden Zugriff darauf synchronisiert.</span><span class="sxs-lookup"><span data-stu-id="08fef-106"><xref:System.Activities.Hosting.WorkflowInstance> is single threaded and assumes that the host synchronizes all access to it.</span></span> <span data-ttu-id="08fef-107">Ein Versuch, mehrere APIs gleichzeitig aufzurufen, führt dazu, dass eine <xref:System.InvalidOperationException> ausgegeben wird.</span><span class="sxs-lookup"><span data-stu-id="08fef-107">An attempt to call multiple APIs simultaneously will result in an <xref:System.InvalidOperationException> being thrown.</span></span>  
  
 <span data-ttu-id="08fef-108">Intern hat eine <xref:System.Activities.Hosting.WorkflowInstance> zwei Zustände: den Zustand der Ausführung und den angehaltenen Zustand.</span><span class="sxs-lookup"><span data-stu-id="08fef-108">Internally, a <xref:System.Activities.Hosting.WorkflowInstance> has two states: Running and Paused.</span></span> <span data-ttu-id="08fef-109">Die einzige Möglichkeit, die Laufzeit zu einem Wechsel vom angehaltenen Zustand in den Zustand der Ausführung zu bringen, besteht darin, <xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.Run%2A> aufzurufen.</span><span class="sxs-lookup"><span data-stu-id="08fef-109">The only way to cause the runtime to transition from paused to running is to call <xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.Run%2A>.</span></span> <span data-ttu-id="08fef-110">Alle Aktionen (außer PAUSE) können nur ausgeführt werden, während sich die Laufzeit im angehaltenen Zustand befindet.</span><span class="sxs-lookup"><span data-stu-id="08fef-110">All actions (except Pause) can only be taken while the runtime is Paused.</span></span> <span data-ttu-id="08fef-111">Die Laufzeit wird in den folgenden Situationen spontan angehalten:</span><span class="sxs-lookup"><span data-stu-id="08fef-111">The runtime will become spontaneously Paused in the following situations:</span></span>  
  
-   <span data-ttu-id="08fef-112">Ein schwerwiegender Laufzeitfehler ist aufgetreten.</span><span class="sxs-lookup"><span data-stu-id="08fef-112">An error fatal to the runtime has occurred.</span></span> <span data-ttu-id="08fef-113">Der Host wird durch <xref:System.Activities.Hosting.WorkflowInstance.OnRequestAbort%2A> signalisiert (hierbei wird kein Übergang zum angehaltenen Zustand signalisiert) und wird dann durch <xref:System.Activities.Hosting.WorkflowInstance.OnNotifyPaused%2A> benachrichtigt.</span><span class="sxs-lookup"><span data-stu-id="08fef-113">The host will be signaled through <xref:System.Activities.Hosting.WorkflowInstance.OnRequestAbort%2A> (which does not signal a transition to Paused) and then notified through <xref:System.Activities.Hosting.WorkflowInstance.OnNotifyPaused%2A>.</span></span>  
  
-   <span data-ttu-id="08fef-114">Eine Ausnahme im Workflow wurde nicht abgefangen und hat den Stamm verlassen.</span><span class="sxs-lookup"><span data-stu-id="08fef-114">An exception in the workflow was uncaught and escaped the root.</span></span> <span data-ttu-id="08fef-115">Der Host wird durch die <xref:System.Activities.Hosting.WorkflowInstance.OnNotifyUnhandledException%2A>-Methode benachrichtigt.</span><span class="sxs-lookup"><span data-stu-id="08fef-115">The host will be notified through the <xref:System.Activities.Hosting.WorkflowInstance.OnNotifyUnhandledException%2A> method.</span></span>  
  
-   <span data-ttu-id="08fef-116">Dem Planer sind Arbeitsaufgaben ausgegangen. Er befindet sich jetzt im Zustand <xref:System.Activities.Hosting.WorkflowInstanceState.Idle>.</span><span class="sxs-lookup"><span data-stu-id="08fef-116">The scheduler has run out of work items and is now <xref:System.Activities.Hosting.WorkflowInstanceState.Idle>.</span></span> <span data-ttu-id="08fef-117">Der Host wird durch die <xref:System.Activities.Hosting.WorkflowInstance.OnNotifyPaused%2A>-Methode benachrichtigt.</span><span class="sxs-lookup"><span data-stu-id="08fef-117">The host will be notified through the <xref:System.Activities.Hosting.WorkflowInstance.OnNotifyPaused%2A> method.</span></span> <span data-ttu-id="08fef-118">Beachten Sie, dass dem Planer Arbeitsaufgaben ausgegangen sein könnten, da sich die Instanz im Leerlauf befindet oder abgeschlossen ist.</span><span class="sxs-lookup"><span data-stu-id="08fef-118">Note that the scheduler could have run out of work items because the instance is idle or because the instance is complete.</span></span> <span data-ttu-id="08fef-119">Mithilfe des <xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.State%2A>-Werts der <xref:System.Activities.Hosting.WorkflowInstance.Controller%2A>-Eigenschaft kann zwischen den beiden Werten unterschieden werden.</span><span class="sxs-lookup"><span data-stu-id="08fef-119">The <xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.State%2A> value of the <xref:System.Activities.Hosting.WorkflowInstance.Controller%2A> property can be used to differentiate between the two.</span></span>  
  
 <span data-ttu-id="08fef-120">Der Host kann einen Wechsel vom Zustand der Ausführung in den angehaltenen Zustand anfordern, indem er die <xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.RequestPause%2A>-Methode oder <xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.PauseWhenPersistable%2A>-Methode der <xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl>-Instanz aufruft, die von der <xref:System.Activities.Hosting.WorkflowInstance.Controller%2A>-Eigenschaft zurückgegeben wurde.</span><span class="sxs-lookup"><span data-stu-id="08fef-120">The host can request a change from Running to Paused by calling the <xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.RequestPause%2A> or <xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.PauseWhenPersistable%2A> methods of the <xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl> instance returned by the <xref:System.Activities.Hosting.WorkflowInstance.Controller%2A> property.</span></span> <span data-ttu-id="08fef-121">Diese Anforderung liefert keine bestimmte Antwort. Das bedeutet, dass der Host nicht versuchen sollte, einen OnNotify\* oder <xref:System.Activities.Hosting.WorkflowInstance.OnRequestAbort%2A> mit einer bestimmten Anforderung zum Anhalten zu korrelieren.</span><span class="sxs-lookup"><span data-stu-id="08fef-121">This request should not be considered to have a specific response meaning that the host should not attempt to correlate an OnNotify\* or <xref:System.Activities.Hosting.WorkflowInstance.OnRequestAbort%2A> with a specific call to pause.</span></span> <span data-ttu-id="08fef-122">Als Reaktion auf eine Pausenanforderung kann die Laufzeit in den angehaltenen Status wechseln und <xref:System.Activities.Hosting.WorkflowInstance.OnNotifyPaused%2A> aufrufen, während der Planer immer noch ausstehende Arbeitsaufgaben zu bewältigen hat.</span><span class="sxs-lookup"><span data-stu-id="08fef-122">In response to a pause request, the runtime may transition to Paused and call <xref:System.Activities.Hosting.WorkflowInstance.OnNotifyPaused%2A> while the scheduler still has pending work items.</span></span> <span data-ttu-id="08fef-123">Der <xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.State%2A>-Wert der <xref:System.Activities.Hosting.WorkflowInstance.Controller%2A>-Eigenschaft kann verwendet werden, um zu bestimmen, ob der Planer keine weitere Arbeit aufweist oder von einer Pausenanforderung unterbrochen wurde.</span><span class="sxs-lookup"><span data-stu-id="08fef-123">The <xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.State%2A> value of the <xref:System.Activities.Hosting.WorkflowInstance.Controller%2A> property can be used to determine whether the scheduler has no more work or was interrupted by a request to pause.</span></span>  
  
 <span data-ttu-id="08fef-124">Die <xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.RequestPause%2A>-Methode der <xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl>-Instanz, die von der <xref:System.Activities.Hosting.WorkflowInstance.Controller%2A>-Eigenschaft zurückgegeben wurde, ist die einzige Methode, die aufgerufen werden kann, während sich die <xref:System.Activities.Hosting.WorkflowInstance> im Status der Ausführung befindet.</span><span class="sxs-lookup"><span data-stu-id="08fef-124">The <xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.RequestPause%2A> method of the <xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl> instance returned by the <xref:System.Activities.Hosting.WorkflowInstance.Controller%2A> property is the only method which can be called while the <xref:System.Activities.Hosting.WorkflowInstance> is in the Running state.</span></span> <span data-ttu-id="08fef-125">Alle anderen Methoden lösen eine <xref:System.InvalidOperationException> aus, wenn sie aufgerufen werden. Aufgrund der Regeln für den Wechsel der <xref:System.Activities.Hosting.WorkflowInstance> von einem Zustand in einen anderen kann das allgemeine Konzept für den Zustand der Ausführung und den angehaltenen Zustand wie folgt definiert werden:</span><span class="sxs-lookup"><span data-stu-id="08fef-125">All other methods will throw an <xref:System.InvalidOperationException> if called.Given the rules for how <xref:System.Activities.Hosting.WorkflowInstance> transitions from one state to another, the public notion of Running and Paused can be defined as follows:</span></span>  
  
-   <span data-ttu-id="08fef-126">Zustand der Ausführung: Der Zustand zwischen einem Aufruf von <xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.Run%2A> und der nächsten WorkflowInstance.OnNotify\*.</span><span class="sxs-lookup"><span data-stu-id="08fef-126">Running – The state between a call to <xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.Run%2A> and the next WorkflowInstance.OnNotify\*.</span></span>  
  
-   <span data-ttu-id="08fef-127">Angehaltener Zustand: Der Zustand zwischen der letzten WorkflowInstance.OnNotify\* und dem nächsten Aufruf von <xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.Run%2A>.</span><span class="sxs-lookup"><span data-stu-id="08fef-127">Paused – The state between the last WorkflowInstance.OnNotify\* and the next call to <xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.Run%2A>.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="08fef-128">Initialisiert eine neue Instanz der <see cref="T:System.Activities.Hosting.WorkflowInstance" />-Klasse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="08fef-128">Initializes a new instance of the <see cref="T:System.Activities.Hosting.WorkflowInstance" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected WorkflowInstance (System.Activities.Activity workflowDefinition);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Activities.Activity workflowDefinition) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Hosting.WorkflowInstance.#ctor(System.Activities.Activity)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (workflowDefinition As Activity)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; WorkflowInstance(System::Activities::Activity ^ workflowDefinition);" />
      <MemberSignature Language="F#" Value="new System.Activities.Hosting.WorkflowInstance : System.Activities.Activity -&gt; System.Activities.Hosting.WorkflowInstance" Usage="new System.Activities.Hosting.WorkflowInstance workflowDefinition" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="workflowDefinition" Type="System.Activities.Activity" />
      </Parameters>
      <Docs>
        <param name="workflowDefinition">
          <span data-ttu-id="08fef-129">Die Aktivität, die den Workflow definiert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="08fef-129">The activity that defines the workflow.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="08fef-130">Initialisiert eine neue Instanz der <see cref="T:System.Activities.Hosting.WorkflowInstance" />-Klasse mit der angegebenen Workflowdefinition.</span>
          <span class="sxs-lookup">
            <span data-stu-id="08fef-130">Initializes a new instance of the <see cref="T:System.Activities.Hosting.WorkflowInstance" /> class with the specified workflow definition.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected WorkflowInstance (System.Activities.Activity workflowDefinition, System.Activities.WorkflowIdentity definitionIdentity);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Activities.Activity workflowDefinition, class System.Activities.WorkflowIdentity definitionIdentity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Hosting.WorkflowInstance.#ctor(System.Activities.Activity,System.Activities.WorkflowIdentity)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (workflowDefinition As Activity, definitionIdentity As WorkflowIdentity)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; WorkflowInstance(System::Activities::Activity ^ workflowDefinition, System::Activities::WorkflowIdentity ^ definitionIdentity);" />
      <MemberSignature Language="F#" Value="new System.Activities.Hosting.WorkflowInstance : System.Activities.Activity * System.Activities.WorkflowIdentity -&gt; System.Activities.Hosting.WorkflowInstance" Usage="new System.Activities.Hosting.WorkflowInstance (workflowDefinition, definitionIdentity)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="workflowDefinition" Type="System.Activities.Activity" />
        <Parameter Name="definitionIdentity" Type="System.Activities.WorkflowIdentity" />
      </Parameters>
      <Docs>
        <param name="workflowDefinition">
          <span data-ttu-id="08fef-131">Die Aktivität, die den Workflow definiert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="08fef-131">The activity that defines the workflow.</span>
          </span>
        </param>
        <param name="definitionIdentity">
          <span data-ttu-id="08fef-132">Die Definitionsidentität.</span>
          <span class="sxs-lookup">
            <span data-stu-id="08fef-132">The definition identity.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="08fef-133">Initialisiert eine neue Instanz der <see cref="T:System.Activities.Hosting.WorkflowInstance" />-Klasse mit der angegebenen Workflowdefinition und Definitionsidentität.</span>
          <span class="sxs-lookup">
            <span data-stu-id="08fef-133">Initializes a new instance of the <see cref="T:System.Activities.Hosting.WorkflowInstance" /> class with the specified workflow definition and definition identity.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginFlushTrackingRecords">
      <MemberSignature Language="C#" Value="protected IAsyncResult BeginFlushTrackingRecords (TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.IAsyncResult BeginFlushTrackingRecords(valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Hosting.WorkflowInstance.BeginFlushTrackingRecords(System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Function BeginFlushTrackingRecords (timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; IAsyncResult ^ BeginFlushTrackingRecords(TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginFlushTrackingRecords : TimeSpan * AsyncCallback * obj -&gt; IAsyncResult" Usage="workflowInstance.BeginFlushTrackingRecords (timeout, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="timeout">
          <span data-ttu-id="08fef-134">Der Zeitraum, nach dem der Versuch abgebrochen wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="08fef-134">The time period after which to abort the attempt.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="08fef-135">Die Methode, die aufgerufen wird, wenn der Nachverfolgungsvorgang abgeschlossen ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="08fef-135">The method to be called when the track operation has completed.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="08fef-136">Die Informationen über den asynchronen Vorgang.</span>
          <span class="sxs-lookup">
            <span data-stu-id="08fef-136">The information about the asynchronous operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="08fef-137">Wird von der Workflowlaufzeit aufgerufen, um damit zu beginnen, ausstehende Nachverfolgungsdatensätze asynchron an Nachverfolgungsteilnehmer zu senden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="08fef-137">Called by the workflow runtime to begin sending pending tracking records to tracking participants asynchronously.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="08fef-138">Der Status des aktuellen Nachverfolgungsvorgangs.</span>
          <span class="sxs-lookup">
            <span data-stu-id="08fef-138">The status of the current track operation.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Controller">
      <MemberSignature Language="C#" Value="protected System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl Controller { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Activities.Hosting.WorkflowInstance/WorkflowInstanceControl Controller" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Hosting.WorkflowInstance.Controller" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property Controller As WorkflowInstance.WorkflowInstanceControl" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Activities::Hosting::WorkflowInstance::WorkflowInstanceControl Controller { System::Activities::Hosting::WorkflowInstance::WorkflowInstanceControl get(); };" />
      <MemberSignature Language="F#" Value="member this.Controller : System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl" Usage="System.Activities.Hosting.WorkflowInstance.Controller" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.Hosting.WorkflowInstance+WorkflowInstanceControl</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="08fef-139">Ruft die <see cref="T:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl" />-Instanz für diese <see cref="T:System.Activities.Hosting.WorkflowInstance" /> ab.</span>
          <span class="sxs-lookup">
            <span data-stu-id="08fef-139">Gets the <see cref="T:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl" /> instance for this <see cref="T:System.Activities.Hosting.WorkflowInstance" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="08fef-140">Die Controllerinstanz für diese Workflowinstanz.</span>
          <span class="sxs-lookup">
            <span data-stu-id="08fef-140">The controller instance for this workflow instance.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefinitionIdentity">
      <MemberSignature Language="C#" Value="public System.Activities.WorkflowIdentity DefinitionIdentity { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Activities.WorkflowIdentity DefinitionIdentity" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Hosting.WorkflowInstance.DefinitionIdentity" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DefinitionIdentity As WorkflowIdentity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Activities::WorkflowIdentity ^ DefinitionIdentity { System::Activities::WorkflowIdentity ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DefinitionIdentity : System.Activities.WorkflowIdentity" Usage="System.Activities.Hosting.WorkflowInstance.DefinitionIdentity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.WorkflowIdentity</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="08fef-141">Ruft die Definitionsidentität der <see cref="T:System.Activities.Hosting.WorkflowInstance" /> ab oder legt diese fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="08fef-141">Gets or sets the definition identity of <see cref="T:System.Activities.Hosting.WorkflowInstance" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="08fef-142">Die Definitionidentität einer <see cref="T:System.Activities.Hosting.WorkflowInstance" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="08fef-142">The definition identity of <see cref="T:System.Activities.Hosting.WorkflowInstance" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisposeExtensions">
      <MemberSignature Language="C#" Value="protected void DisposeExtensions ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void DisposeExtensions() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Hosting.WorkflowInstance.DisposeExtensions" />
      <MemberSignature Language="VB.NET" Value="Protected Sub DisposeExtensions ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void DisposeExtensions();" />
      <MemberSignature Language="F#" Value="member this.DisposeExtensions : unit -&gt; unit" Usage="workflowInstance.DisposeExtensions " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="08fef-143">Ruft <see cref="M:System.IDisposable.Dispose" /> für alle Erweiterungen auf, die <see cref="T:System.IDisposable" /> implementieren.</span>
          <span class="sxs-lookup">
            <span data-stu-id="08fef-143">Calls <see cref="M:System.IDisposable.Dispose" /> on all extensions that implement <see cref="T:System.IDisposable" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndFlushTrackingRecords">
      <MemberSignature Language="C#" Value="protected void EndFlushTrackingRecords (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void EndFlushTrackingRecords(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Hosting.WorkflowInstance.EndFlushTrackingRecords(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub EndFlushTrackingRecords (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void EndFlushTrackingRecords(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="member this.EndFlushTrackingRecords : IAsyncResult -&gt; unit" Usage="workflowInstance.EndFlushTrackingRecords result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">
          <span data-ttu-id="08fef-144">Der Status des asynchronen Nachverfolgungsvorgangs.</span>
          <span class="sxs-lookup">
            <span data-stu-id="08fef-144">The status of the asynchronous track operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="08fef-145">Wird von der Workflowlaufzeit zum Beenden der Nachverfolgungsaktivität aufgerufen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="08fef-145">Called by the workflow runtime to end the track operation.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FlushTrackingRecords">
      <MemberSignature Language="C#" Value="protected void FlushTrackingRecords (TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void FlushTrackingRecords(valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Hosting.WorkflowInstance.FlushTrackingRecords(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub FlushTrackingRecords (timeout As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void FlushTrackingRecords(TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="member this.FlushTrackingRecords : TimeSpan -&gt; unit" Usage="workflowInstance.FlushTrackingRecords timeout" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="timeout">
          <span data-ttu-id="08fef-146">Der Zeitraum, nach dem der Versuch abgebrochen wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="08fef-146">The time period after which to abort the attempt.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="08fef-147">Wird von der Workflowlaufzeit aufgerufen, um ausstehende Nachverfolgungsdatensätze an Nachverfolgungsteilnehmer zu senden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="08fef-147">Called by the workflow runtime to send pending tracking records to tracking participants.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetActivitiesBlockingUpdate">
      <MemberSignature Language="C#" Value="protected static System.Collections.Generic.IList&lt;System.Activities.DynamicUpdate.ActivityBlockingUpdate&gt; GetActivitiesBlockingUpdate (object deserializedRuntimeState, System.Activities.DynamicUpdate.DynamicUpdateMap updateMap);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig class System.Collections.Generic.IList`1&lt;class System.Activities.DynamicUpdate.ActivityBlockingUpdate&gt; GetActivitiesBlockingUpdate(object deserializedRuntimeState, class System.Activities.DynamicUpdate.DynamicUpdateMap updateMap) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Hosting.WorkflowInstance.GetActivitiesBlockingUpdate(System.Object,System.Activities.DynamicUpdate.DynamicUpdateMap)" />
      <MemberSignature Language="VB.NET" Value="Protected Shared Function GetActivitiesBlockingUpdate (deserializedRuntimeState As Object, updateMap As DynamicUpdateMap) As IList(Of ActivityBlockingUpdate)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static System::Collections::Generic::IList&lt;System::Activities::DynamicUpdate::ActivityBlockingUpdate ^&gt; ^ GetActivitiesBlockingUpdate(System::Object ^ deserializedRuntimeState, System::Activities::DynamicUpdate::DynamicUpdateMap ^ updateMap);" />
      <MemberSignature Language="F#" Value="static member GetActivitiesBlockingUpdate : obj * System.Activities.DynamicUpdate.DynamicUpdateMap -&gt; System.Collections.Generic.IList&lt;System.Activities.DynamicUpdate.ActivityBlockingUpdate&gt;" Usage="System.Activities.Hosting.WorkflowInstance.GetActivitiesBlockingUpdate (deserializedRuntimeState, updateMap)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Activities.DynamicUpdate.ActivityBlockingUpdate&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="deserializedRuntimeState" Type="System.Object" />
        <Parameter Name="updateMap" Type="System.Activities.DynamicUpdate.DynamicUpdateMap" />
      </Parameters>
      <Docs>
        <param name="deserializedRuntimeState">
          <span data-ttu-id="08fef-148">Der deserialisierte Laufzeitzustand.</span>
          <span class="sxs-lookup">
            <span data-stu-id="08fef-148">The deserialized runtime state.</span>
          </span>
        </param>
        <param name="updateMap">
          <span data-ttu-id="08fef-149">Die Updatezuordnung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="08fef-149">The update map.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="08fef-150">Ruft die Liste der Aktivität ab, die das Update des Workflows blockiert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="08fef-150">Retrieves the list of activity that is blocking the update of the workflow.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="08fef-151">Die Liste der Aktivitäten, die das Update blockieren.</span>
          <span class="sxs-lookup">
            <span data-stu-id="08fef-151">The list of activity that is blocking the update.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetExtension&lt;T&gt;">
      <MemberSignature Language="C#" Value="protected internal T GetExtension&lt;T&gt; () where T : class;" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance !!T GetExtension&lt;class T&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Hosting.WorkflowInstance.GetExtension``1" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Function GetExtension(Of T As Class) () As T" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA;generic &lt;typename T&gt;&#xA; where T : class T GetExtension();" />
      <MemberSignature Language="F#" Value="member this.GetExtension : unit -&gt; 'T (requires 'T : null)" Usage="workflowInstance.GetExtension " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="08fef-152">Der Typ der zu suchenden Erweiterung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="08fef-152">The type of the extension to find.</span>
          </span>
        </typeparam>
        <summary>
          <span data-ttu-id="08fef-153">Gibt eine Erweiterung des angegebenen Typs zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="08fef-153">Returns an extension of the specified type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="08fef-154">Eine Erweiterung des angegebenen Typs.</span>
          <span class="sxs-lookup">
            <span data-stu-id="08fef-154">An extension of the specified type.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetExtensions&lt;T&gt;">
      <MemberSignature Language="C#" Value="protected internal System.Collections.Generic.IEnumerable&lt;T&gt; GetExtensions&lt;T&gt; () where T : class;" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance class System.Collections.Generic.IEnumerable`1&lt;!!T&gt; GetExtensions&lt;class T&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Hosting.WorkflowInstance.GetExtensions``1" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Function GetExtensions(Of T As Class) () As IEnumerable(Of T)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA;generic &lt;typename T&gt;&#xA; where T : class System::Collections::Generic::IEnumerable&lt;T&gt; ^ GetExtensions();" />
      <MemberSignature Language="F#" Value="member this.GetExtensions : unit -&gt; seq&lt;'T (requires 'T : null)&gt; (requires 'T : null)" Usage="workflowInstance.GetExtensions " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="08fef-155">Der Typ der zu suchenden Erweiterung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="08fef-155">The type of the extension to find.</span>
          </span>
        </typeparam>
        <summary>
          <span data-ttu-id="08fef-156">Gibt alle für den angegebenen Typ gefundenen Erweiterungen zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="08fef-156">Returns all extensions found for the specified type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="08fef-157">Alle für den angegebenen Typ gefundenen Erweiterungen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="08fef-157">All extensions found for the specified type.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HostEnvironment">
      <MemberSignature Language="C#" Value="public System.Activities.LocationReferenceEnvironment HostEnvironment { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Activities.LocationReferenceEnvironment HostEnvironment" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Hosting.WorkflowInstance.HostEnvironment" />
      <MemberSignature Language="VB.NET" Value="Public Property HostEnvironment As LocationReferenceEnvironment" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Activities::LocationReferenceEnvironment ^ HostEnvironment { System::Activities::LocationReferenceEnvironment ^ get(); void set(System::Activities::LocationReferenceEnvironment ^ value); };" />
      <MemberSignature Language="F#" Value="member this.HostEnvironment : System.Activities.LocationReferenceEnvironment with get, set" Usage="System.Activities.Hosting.WorkflowInstance.HostEnvironment" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.LocationReferenceEnvironment</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="08fef-158">Ruft die Stammumgebung für die Argumente und Variablen der Workflowinstanz ab oder legt sie fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="08fef-158">Gets or sets the root environment for the workflow instance’s arguments and variables.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="08fef-159">Die Stammumgebung für die Argumente und Variablen der Workflowinstanz.</span>
          <span class="sxs-lookup">
            <span data-stu-id="08fef-159">The root environment for the workflow instance’s arguments and variables.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="08fef-160">Wenn diese Eigenschaft festgelegt wird, nachdem die Workflowinstanz initialisiert wurde und <xref:System.Activities.Hosting.WorkflowInstance.IsReadOnly%2A> gibt `true`, <xref:System.InvalidOperationException> ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="08fef-160">If this property is set after the workflow instance is initialized and <xref:System.Activities.Hosting.WorkflowInstance.IsReadOnly%2A> returns `true`, an <xref:System.InvalidOperationException> is thrown.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Id">
      <MemberSignature Language="C#" Value="public abstract Guid Id { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Guid Id" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Hosting.WorkflowInstance.Id" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Id As Guid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property Guid Id { Guid get(); };" />
      <MemberSignature Language="F#" Value="member this.Id : Guid" Usage="System.Activities.Hosting.WorkflowInstance.Id" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="08fef-161">Ruft den eindeutigen Bezeichner der Workflowinstanz ab.</span>
          <span class="sxs-lookup">
            <span data-stu-id="08fef-161">Gets the unique identifier for the workflow instance.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="08fef-162">Der eindeutige Bezeichner der Workflowinstanz.</span>
          <span class="sxs-lookup">
            <span data-stu-id="08fef-162">The unique identifier for the workflow instance.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Initialize">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="08fef-163">Wird vom Host aufgerufen, um die Workflowinstanz zu initialisieren.</span>
          <span class="sxs-lookup">
            <span data-stu-id="08fef-163">Called by the host to initialize the workflow instance.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="protected void Initialize (object deserializedRuntimeState);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void Initialize(object deserializedRuntimeState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Hosting.WorkflowInstance.Initialize(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub Initialize (deserializedRuntimeState As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void Initialize(System::Object ^ deserializedRuntimeState);" />
      <MemberSignature Language="F#" Value="member this.Initialize : obj -&gt; unit" Usage="workflowInstance.Initialize deserializedRuntimeState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="deserializedRuntimeState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="deserializedRuntimeState">
          <span data-ttu-id="08fef-164">Der Laufzeitzustand, der verwendet wurde, um den Workflow auszuführen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="08fef-164">The run-time state used to execute the workflow.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="08fef-165">Wird vom Host aufgerufen, um die Workflowinstanz mit dem Workflowlaufzeitzustand zu initialisieren.</span>
          <span class="sxs-lookup">
            <span data-stu-id="08fef-165">Called by the host to initialize the workflow instance with the workflow run-time state.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="protected void Initialize (System.Collections.Generic.IDictionary&lt;string,object&gt; workflowArgumentValues, System.Collections.Generic.IList&lt;System.Activities.Handle&gt; workflowExecutionProperties);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void Initialize(class System.Collections.Generic.IDictionary`2&lt;string, object&gt; workflowArgumentValues, class System.Collections.Generic.IList`1&lt;class System.Activities.Handle&gt; workflowExecutionProperties) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Hosting.WorkflowInstance.Initialize(System.Collections.Generic.IDictionary{System.String,System.Object},System.Collections.Generic.IList{System.Activities.Handle})" />
      <MemberSignature Language="VB.NET" Value="Protected Sub Initialize (workflowArgumentValues As IDictionary(Of String, Object), workflowExecutionProperties As IList(Of Handle))" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void Initialize(System::Collections::Generic::IDictionary&lt;System::String ^, System::Object ^&gt; ^ workflowArgumentValues, System::Collections::Generic::IList&lt;System::Activities::Handle ^&gt; ^ workflowExecutionProperties);" />
      <MemberSignature Language="F#" Value="member this.Initialize : System.Collections.Generic.IDictionary&lt;string, obj&gt; * System.Collections.Generic.IList&lt;System.Activities.Handle&gt; -&gt; unit" Usage="workflowInstance.Initialize (workflowArgumentValues, workflowExecutionProperties)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="workflowArgumentValues" Type="System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;" />
        <Parameter Name="workflowExecutionProperties" Type="System.Collections.Generic.IList&lt;System.Activities.Handle&gt;" />
      </Parameters>
      <Docs>
        <param name="workflowArgumentValues">
          <span data-ttu-id="08fef-166">Die Eingabeparameter für den Workflow, nach Argumentname geordnet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="08fef-166">The input parameters to the workflow, keyed by argument name.</span>
          </span>
        </param>
        <param name="workflowExecutionProperties">
          <span data-ttu-id="08fef-167">Die Liste der Workflowausführungseigenschaften.</span>
          <span class="sxs-lookup">
            <span data-stu-id="08fef-167">The list of workflow execution properties.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="08fef-168">Wird vom Host aufgerufen, um die Workflowinstanz mit den Argumentwerten und Ausführungseigenschaften zu initialisieren.</span>
          <span class="sxs-lookup">
            <span data-stu-id="08fef-168">Called by the host to initialize the workflow instance with the argument values and execution properties.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="protected void Initialize (object deserializedRuntimeState, System.Activities.DynamicUpdate.DynamicUpdateMap updateMap);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void Initialize(object deserializedRuntimeState, class System.Activities.DynamicUpdate.DynamicUpdateMap updateMap) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Hosting.WorkflowInstance.Initialize(System.Object,System.Activities.DynamicUpdate.DynamicUpdateMap)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub Initialize (deserializedRuntimeState As Object, updateMap As DynamicUpdateMap)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void Initialize(System::Object ^ deserializedRuntimeState, System::Activities::DynamicUpdate::DynamicUpdateMap ^ updateMap);" />
      <MemberSignature Language="F#" Value="member this.Initialize : obj * System.Activities.DynamicUpdate.DynamicUpdateMap -&gt; unit" Usage="workflowInstance.Initialize (deserializedRuntimeState, updateMap)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="deserializedRuntimeState" Type="System.Object" />
        <Parameter Name="updateMap" Type="System.Activities.DynamicUpdate.DynamicUpdateMap" />
      </Parameters>
      <Docs>
        <param name="deserializedRuntimeState">
          <span data-ttu-id="08fef-169">Der Laufzeitzustand, der verwendet wurde, um den Workflow auszuführen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="08fef-169">The run-time state used to execute the workflow.</span>
          </span>
        </param>
        <param name="updateMap">
          <span data-ttu-id="08fef-170">Die Updatezuordnung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="08fef-170">The update map.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="08fef-171">Wird vom Host aufgerufen, um die Workflowinstanz mit dem Workflowlaufzeitzustand und der Update-Zuordnung zu initialisieren.</span>
          <span class="sxs-lookup">
            <span data-stu-id="08fef-171">Called by the host to initialize the workflow instance with the workflow run-time state and update map.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="protected bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Hosting.WorkflowInstance.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property bool IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsReadOnly : bool" Usage="System.Activities.Hosting.WorkflowInstance.IsReadOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="08fef-172">Ruft einen Wert ab, der angibt, ob die Workflowinstanz initialisiert wurde.</span>
          <span class="sxs-lookup">
            <span data-stu-id="08fef-172">Gets a value that indicates whether the workflow instance has been initialized.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="08fef-173">
            <see langword="true" />, wenn die Workflowinstanz initialisiert wurde, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="08fef-173">
              <see langword="true" /> if the workflow instance has been initialized; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnBeginAssociateKeys">
      <MemberSignature Language="C#" Value="protected internal abstract IAsyncResult OnBeginAssociateKeys (System.Collections.Generic.ICollection&lt;System.Runtime.DurableInstancing.InstanceKey&gt; keys, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class System.IAsyncResult OnBeginAssociateKeys(class System.Collections.Generic.ICollection`1&lt;class System.Runtime.DurableInstancing.InstanceKey&gt; keys, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Hosting.WorkflowInstance.OnBeginAssociateKeys(System.Collections.Generic.ICollection{System.Runtime.DurableInstancing.InstanceKey},System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend MustOverride Function OnBeginAssociateKeys (keys As ICollection(Of InstanceKey), callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; abstract IAsyncResult ^ OnBeginAssociateKeys(System::Collections::Generic::ICollection&lt;System::Runtime::DurableInstancing::InstanceKey ^&gt; ^ keys, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member OnBeginAssociateKeys : System.Collections.Generic.ICollection&lt;System.Runtime.DurableInstancing.InstanceKey&gt; * AsyncCallback * obj -&gt; IAsyncResult" Usage="workflowInstance.OnBeginAssociateKeys (keys, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keys" Type="System.Collections.Generic.ICollection&lt;System.Runtime.DurableInstancing.InstanceKey&gt;" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="keys">
          <span data-ttu-id="08fef-174">Die dieser Workflowinstanz zuzuordnenden Instanzschlüssel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="08fef-174">The instance keys to associate with this workflow instance.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="08fef-175">Die Methode, die aufgerufen wird, wenn der Vorgang abgeschlossen ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="08fef-175">The method to be called when the operation completes.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="08fef-176">Ein optionales, anwendungsspezifisches Objekt, das Informationen über die asynchrone Operation enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="08fef-176">An optional application-specific object that contains information about the asynchronous operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="08fef-177">Wird von der Workflowlaufzeit aufgerufen, um den Host zu benachrichtigen, dass neue Instanzschlüssel dieser Instanz zugeordnet werden müssen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="08fef-177">Called by the workflow runtime to notify the host that new instance keys should be associated with this instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="08fef-178">Ein Verweis auf den asynchronen Vorgang zum Zuordnen von Schlüsseln.</span>
          <span class="sxs-lookup">
            <span data-stu-id="08fef-178">A reference to the asynchronous associate keys operation.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnBeginFlushTrackingRecords">
      <MemberSignature Language="C#" Value="protected virtual IAsyncResult OnBeginFlushTrackingRecords (AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.IAsyncResult OnBeginFlushTrackingRecords(class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Hosting.WorkflowInstance.OnBeginFlushTrackingRecords(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function OnBeginFlushTrackingRecords (callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual IAsyncResult ^ OnBeginFlushTrackingRecords(AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member OnBeginFlushTrackingRecords : AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.OnBeginFlushTrackingRecords : AsyncCallback * obj -&gt; IAsyncResult" Usage="workflowInstance.OnBeginFlushTrackingRecords (callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="callback">
          <span data-ttu-id="08fef-179">Die Methode, die aufgerufen wird, wenn der Nachverfolgungsvorgang abgeschlossen ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="08fef-179">The method to be called when the track operation has completed.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="08fef-180">Die Informationen über den asynchronen Vorgang.</span>
          <span class="sxs-lookup">
            <span data-stu-id="08fef-180">The information about the asynchronous operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="08fef-181">Asynchroner Aufruf, um den Host zu bitten, ausstehende Nachverfolgungsdatensätze für Nachverfolgungsteilnehmer zu leeren.</span>
          <span class="sxs-lookup">
            <span data-stu-id="08fef-181">Asynchronous call to ask host to flush pending tracking records to tracking participants.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="08fef-182">Der Status des aktuellen Nachverfolgungsvorgangs.</span>
          <span class="sxs-lookup">
            <span data-stu-id="08fef-182">The status of the current track operation.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnBeginPersist">
      <MemberSignature Language="C#" Value="protected internal abstract IAsyncResult OnBeginPersist (AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class System.IAsyncResult OnBeginPersist(class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Hosting.WorkflowInstance.OnBeginPersist(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend MustOverride Function OnBeginPersist (callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; abstract IAsyncResult ^ OnBeginPersist(AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member OnBeginPersist : AsyncCallback * obj -&gt; IAsyncResult" Usage="workflowInstance.OnBeginPersist (callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="callback">
          <span data-ttu-id="08fef-183">Die Methode, die aufgerufen wird, wenn der Beibehaltungsvorgang abgeschlossen ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="08fef-183">The method to be called when the persist operation has completed.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="08fef-184">Ein optionales, anwendungsspezifisches Objekt, das Informationen über die asynchrone Operation enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="08fef-184">An optional application-specific object that contains information about the asynchronous operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="08fef-185">Asynchroner Aufruf, um den Host aufzufordern, den Workflow beizubehalten.</span>
          <span class="sxs-lookup">
            <span data-stu-id="08fef-185">Asynchronous call to ask the host to persist the workflow.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="08fef-186">Ein Verweis auf den aktuellen Beibehaltungsvorgang.</span>
          <span class="sxs-lookup">
            <span data-stu-id="08fef-186">A reference to the current persist operation.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnBeginResumeBookmark">
      <MemberSignature Language="C#" Value="protected internal abstract IAsyncResult OnBeginResumeBookmark (System.Activities.Bookmark bookmark, object value, TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class System.IAsyncResult OnBeginResumeBookmark(class System.Activities.Bookmark bookmark, object value, valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Hosting.WorkflowInstance.OnBeginResumeBookmark(System.Activities.Bookmark,System.Object,System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; abstract IAsyncResult ^ OnBeginResumeBookmark(System::Activities::Bookmark ^ bookmark, System::Object ^ value, TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member OnBeginResumeBookmark : System.Activities.Bookmark * obj * TimeSpan * AsyncCallback * obj -&gt; IAsyncResult" Usage="workflowInstance.OnBeginResumeBookmark (bookmark, value, timeout, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bookmark" Type="System.Activities.Bookmark" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="bookmark">
          <span data-ttu-id="08fef-187">Das wiederaufzunehmende Lesezeichen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="08fef-187">The bookmark to resume.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="08fef-188">Die Daten, die an die Aktivität weitergegeben werden sollen, mit der das <see cref="T:System.Activities.Bookmark" /> erstellt wurde.</span>
          <span class="sxs-lookup">
            <span data-stu-id="08fef-188">The data to be passed to the activity that created the <see cref="T:System.Activities.Bookmark" />.</span>
          </span>
        </param>
        <param name="timeout">
          <span data-ttu-id="08fef-189">Das Intervall, in dem der Wiederaufnahmevorgang abgeschlossen werden muss, bevor der Vorgang abgebrochen und eine <see cref="T:System.TimeoutException" /> ausgelöst wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="08fef-189">The interval in which the resume operation must complete before the operation is canceled and a <see cref="T:System.TimeoutException" /> is thrown.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="08fef-190">Die Methode, die aufgerufen wird, wenn der Wiederaufnahmevorgang abgeschlossen ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="08fef-190">The method to be called when the resume operation has completed.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="08fef-191">Ein optionales, anwendungsspezifisches Objekt, das Informationen über die asynchrone Operation enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="08fef-191">An optional application-specific object that contains information about the asynchronous operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="08fef-192">Wird von der Workflowlaufzeit aufgerufen, um den Host zu benachrichtigen, dass ein Vorgang zur Lesezeichenwiederaufnahme beginnt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="08fef-192">Called by the workflow runtime to notify the host that a resume bookmark operation is beginning.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="08fef-193">Ein Verweis auf den asynchronen Wiederaufnahmevorgang.</span>
          <span class="sxs-lookup">
            <span data-stu-id="08fef-193">A reference to the asynchronous resume operation.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDisassociateKeys">
      <MemberSignature Language="C#" Value="protected internal abstract void OnDisassociateKeys (System.Collections.Generic.ICollection&lt;System.Runtime.DurableInstancing.InstanceKey&gt; keys);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnDisassociateKeys(class System.Collections.Generic.ICollection`1&lt;class System.Runtime.DurableInstancing.InstanceKey&gt; keys) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Hosting.WorkflowInstance.OnDisassociateKeys(System.Collections.Generic.ICollection{System.Runtime.DurableInstancing.InstanceKey})" />
      <MemberSignature Language="VB.NET" Value="Protected Friend MustOverride Sub OnDisassociateKeys (keys As ICollection(Of InstanceKey))" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; abstract void OnDisassociateKeys(System::Collections::Generic::ICollection&lt;System::Runtime::DurableInstancing::InstanceKey ^&gt; ^ keys);" />
      <MemberSignature Language="F#" Value="abstract member OnDisassociateKeys : System.Collections.Generic.ICollection&lt;System.Runtime.DurableInstancing.InstanceKey&gt; -&gt; unit" Usage="workflowInstance.OnDisassociateKeys keys" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keys" Type="System.Collections.Generic.ICollection&lt;System.Runtime.DurableInstancing.InstanceKey&gt;" />
      </Parameters>
      <Docs>
        <param name="keys">
          <span data-ttu-id="08fef-194">Die Liste der Schlüssel, für die die Zuordnung aufgehoben werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="08fef-194">The list of keys to disassociate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="08fef-195">Wird von der Workflowlaufzeit aufgerufen, um den Host zu benachrichtigen, dass ein bestimmter Satz Instanzschlüssel dieser Instanz nicht länger zugeordnet werden darf.</span>
          <span class="sxs-lookup">
            <span data-stu-id="08fef-195">Called by the workflow runtime to notify the host that a certain set of instance keys should no longer be associated with this instance.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnEndAssociateKeys">
      <MemberSignature Language="C#" Value="protected internal abstract void OnEndAssociateKeys (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnEndAssociateKeys(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Hosting.WorkflowInstance.OnEndAssociateKeys(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend MustOverride Sub OnEndAssociateKeys (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; abstract void OnEndAssociateKeys(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="abstract member OnEndAssociateKeys : IAsyncResult -&gt; unit" Usage="workflowInstance.OnEndAssociateKeys result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">
          <span data-ttu-id="08fef-196">Der Verweis auf den asynchronen Vorgang zum Zuordnen von Schlüsseln.</span>
          <span class="sxs-lookup">
            <span data-stu-id="08fef-196">The reference to the asynchronous associate keys operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="08fef-197">Wird von der Workflowlaufzeit aufgerufen, um den Host zu benachrichtigen, dass ein Vorgang zum Zuordnen von Schlüsseln abgeschlossen wurde.</span>
          <span class="sxs-lookup">
            <span data-stu-id="08fef-197">Called by the workflow runtime to notify the host that an associate keys operation is complete.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnEndFlushTrackingRecords">
      <MemberSignature Language="C#" Value="protected virtual void OnEndFlushTrackingRecords (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnEndFlushTrackingRecords(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Hosting.WorkflowInstance.OnEndFlushTrackingRecords(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnEndFlushTrackingRecords (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnEndFlushTrackingRecords(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="abstract member OnEndFlushTrackingRecords : IAsyncResult -&gt; unit&#xA;override this.OnEndFlushTrackingRecords : IAsyncResult -&gt; unit" Usage="workflowInstance.OnEndFlushTrackingRecords result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">
          <span data-ttu-id="08fef-198">Der Status des asynchronen Vorgangs zum Löschen von Nachverfolgungsdatensätzen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="08fef-198">The status of the asynchronous flush tracking records operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="08fef-199">Wird von der Workflowlaufzeit aufgerufen, um den Host zu benachrichtigen, wenn ein Vorgang zur Löschung von Nachverfolgungsdatensätzen abgeschlossen wurde.</span>
          <span class="sxs-lookup">
            <span data-stu-id="08fef-199">Called by the workflow runtime to notify the host when the flush tracking records operation is complete.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnEndPersist">
      <MemberSignature Language="C#" Value="protected internal abstract void OnEndPersist (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnEndPersist(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Hosting.WorkflowInstance.OnEndPersist(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend MustOverride Sub OnEndPersist (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; abstract void OnEndPersist(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="abstract member OnEndPersist : IAsyncResult -&gt; unit" Usage="workflowInstance.OnEndPersist result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">
          <span data-ttu-id="08fef-200">Der Verweis auf den asynchronen Beibehaltungsvorgang.</span>
          <span class="sxs-lookup">
            <span data-stu-id="08fef-200">The reference to the asynchronous persist operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="08fef-201">Wird von der Workflowlaufzeit aufgerufen, um den Host zu benachrichtigen, dass ein Beibehaltungsvorgang abgeschlossen wurde.</span>
          <span class="sxs-lookup">
            <span data-stu-id="08fef-201">Called by the workflow runtime to notify the host that a persist operation is complete.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnEndResumeBookmark">
      <MemberSignature Language="C#" Value="protected internal abstract System.Activities.BookmarkResumptionResult OnEndResumeBookmark (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance valuetype System.Activities.BookmarkResumptionResult OnEndResumeBookmark(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Hosting.WorkflowInstance.OnEndResumeBookmark(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend MustOverride Function OnEndResumeBookmark (result As IAsyncResult) As BookmarkResumptionResult" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; abstract System::Activities::BookmarkResumptionResult OnEndResumeBookmark(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="abstract member OnEndResumeBookmark : IAsyncResult -&gt; System.Activities.BookmarkResumptionResult" Usage="workflowInstance.OnEndResumeBookmark result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.BookmarkResumptionResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">
          <span data-ttu-id="08fef-202">Der Verweis auf den asynchronen Vorgang zur Lesezeichenwiederaufnahme.</span>
          <span class="sxs-lookup">
            <span data-stu-id="08fef-202">The reference to the asynchronous resume bookmark operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="08fef-203">Wird von der Workflowlaufzeit aufgerufen, um den Host zu benachrichtigen, dass ein Vorgang zur Lesezeichenwiederaufnahme abgeschlossen wurde.</span>
          <span class="sxs-lookup">
            <span data-stu-id="08fef-203">Called by the workflow runtime to notify the host that a resume bookmark operation is complete.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="08fef-204">Einer der Enumerationswerte, der das Ergebnis einer <see cref="T:System.Activities.Bookmark" />-Wiederaufnahme anzeigt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="08fef-204">One of the enumeration values that indicates the result of a <see cref="T:System.Activities.Bookmark" /> resume operation.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnNotifyPaused">
      <MemberSignature Language="C#" Value="protected abstract void OnNotifyPaused ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnNotifyPaused() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Hosting.WorkflowInstance.OnNotifyPaused" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub OnNotifyPaused ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void OnNotifyPaused();" />
      <MemberSignature Language="F#" Value="abstract member OnNotifyPaused : unit -&gt; unit" Usage="workflowInstance.OnNotifyPaused " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="08fef-205">Wird von der Workflowlaufzeit aufgerufen, um den Host zu benachrichtigen, dass die Workflowinstanz vom Zustand der Ausführung in den angehaltenen Zustand gewechselt hat.</span>
          <span class="sxs-lookup">
            <span data-stu-id="08fef-205">Called by the workflow runtime to notify the host that the workflow instance has transitioned from the running state to the paused state.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnNotifyUnhandledException">
      <MemberSignature Language="C#" Value="protected abstract void OnNotifyUnhandledException (Exception exception, System.Activities.Activity source, string sourceInstanceId);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnNotifyUnhandledException(class System.Exception exception, class System.Activities.Activity source, string sourceInstanceId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Hosting.WorkflowInstance.OnNotifyUnhandledException(System.Exception,System.Activities.Activity,System.String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void OnNotifyUnhandledException(Exception ^ exception, System::Activities::Activity ^ source, System::String ^ sourceInstanceId);" />
      <MemberSignature Language="F#" Value="abstract member OnNotifyUnhandledException : Exception * System.Activities.Activity * string -&gt; unit" Usage="workflowInstance.OnNotifyUnhandledException (exception, source, sourceInstanceId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="exception" Type="System.Exception" />
        <Parameter Name="source" Type="System.Activities.Activity" />
        <Parameter Name="sourceInstanceId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="exception">
          <span data-ttu-id="08fef-206">Die nicht behandelte Ausnahme.</span>
          <span class="sxs-lookup">
            <span data-stu-id="08fef-206">The unhandled exception.</span>
          </span>
        </param>
        <param name="source">
          <span data-ttu-id="08fef-207">Die Aktivität, die die Ausnahme ausgelöst hat.</span>
          <span class="sxs-lookup">
            <span data-stu-id="08fef-207">The activity that threw the exception.</span>
          </span>
        </param>
        <param name="sourceInstanceId">
          <span data-ttu-id="08fef-208">Der eindeutige Bezeichner der <see cref="T:System.Activities.ActivityInstance" />, welche die Aktivität repräsentiert, die die Ausnahme ausgelöst hat.</span>
          <span class="sxs-lookup">
            <span data-stu-id="08fef-208">The unique identifier of the <see cref="T:System.Activities.ActivityInstance" /> representing the activity that threw the exception.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="08fef-209">Wird von der Workflowlaufzeit aufgerufen, um den Host zu benachrichtigen, dass eine nicht behandelte Ausnahme in der Workflowinstanz aufgetreten ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="08fef-209">Called by the workflow runtime to notify the host an unhandled exception has occurred in the workflow instance.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnRequestAbort">
      <MemberSignature Language="C#" Value="protected internal abstract void OnRequestAbort (Exception reason);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnRequestAbort(class System.Exception reason) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Hosting.WorkflowInstance.OnRequestAbort(System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend MustOverride Sub OnRequestAbort (reason As Exception)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; abstract void OnRequestAbort(Exception ^ reason);" />
      <MemberSignature Language="F#" Value="abstract member OnRequestAbort : Exception -&gt; unit" Usage="workflowInstance.OnRequestAbort reason" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reason" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="reason">
          <span data-ttu-id="08fef-210">Die Ursache für das Abbrechen der Workflowinstanz.</span>
          <span class="sxs-lookup">
            <span data-stu-id="08fef-210">The reason for aborting the workflow instance.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="08fef-211">Wird von der Workflowlaufzeit aufgerufen, um den Host zu benachrichtigen, dass ein Abbruchvorgang für die Workflowinstanz angefordert wurde.</span>
          <span class="sxs-lookup">
            <span data-stu-id="08fef-211">Called by the workflow runtime to notify the host that an abort operation has been requested for the workflow instance.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="08fef-212">Sobald ein <xref:System.Activities.Hosting.WorkflowInstance.OnRequestAbort%2A> aufgerufen wird, geben die meisten <xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl>-APIs mit Ausnahme von <xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.Abort%2A> eine Ausnahme vom Typ <xref:System.InvalidOperationException> aus.</span><span class="sxs-lookup"><span data-stu-id="08fef-212">Once <xref:System.Activities.Hosting.WorkflowInstance.OnRequestAbort%2A> is called, most <xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl> APIs except <xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.Abort%2A> will throw an <xref:System.InvalidOperationException>.</span></span> <span data-ttu-id="08fef-213">Es wird erwartet, dass, nachdem der <xref:System.Activities.Hosting.WorkflowInstance.OnRequestAbort%2A> aufgerufen wurde, ein Host einen Zustand anstrebt, in dem er den Abbruch ausführen kann.</span><span class="sxs-lookup"><span data-stu-id="08fef-213">It is expected that after <xref:System.Activities.Hosting.WorkflowInstance.OnRequestAbort%2A> is called a host will trend toward a state in which it can satisfy the abort.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RegisterExtensionManager">
      <MemberSignature Language="C#" Value="protected void RegisterExtensionManager (System.Activities.Hosting.WorkflowInstanceExtensionManager extensionManager);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void RegisterExtensionManager(class System.Activities.Hosting.WorkflowInstanceExtensionManager extensionManager) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Hosting.WorkflowInstance.RegisterExtensionManager(System.Activities.Hosting.WorkflowInstanceExtensionManager)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub RegisterExtensionManager (extensionManager As WorkflowInstanceExtensionManager)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void RegisterExtensionManager(System::Activities::Hosting::WorkflowInstanceExtensionManager ^ extensionManager);" />
      <MemberSignature Language="F#" Value="member this.RegisterExtensionManager : System.Activities.Hosting.WorkflowInstanceExtensionManager -&gt; unit" Usage="workflowInstance.RegisterExtensionManager extensionManager" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="extensionManager" Type="System.Activities.Hosting.WorkflowInstanceExtensionManager" />
      </Parameters>
      <Docs>
        <param name="extensionManager">
          <span data-ttu-id="08fef-214">Der zu registrierende Erweiterungs-Manager.</span>
          <span class="sxs-lookup">
            <span data-stu-id="08fef-214">The extension manager to register.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="08fef-215">Wird vom Host aufgerufen, um den angegebenen Erweiterungs-Manager zu registrieren, zu überprüfen, dass alle erforderlichen Erweiterungen vorhanden sind, und die Auflistung der zu verwendenden Erweiterungen zu initialisieren.</span>
          <span class="sxs-lookup">
            <span data-stu-id="08fef-215">Called by the host to register the specified extension manager, validate that all required extensions are present, and to initialize the collection of extensions to be used.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="08fef-216">Erweiterungen werden nach Typ geordnet, und eine vom Host bereitgestellte Erweiterung wird immer verwendet, sofern vorhanden.</span><span class="sxs-lookup"><span data-stu-id="08fef-216">Extensions are keyed by type, and a host provided extension will always be used if provided.</span></span> <span data-ttu-id="08fef-217">Durch den <xref:System.Activities.Hosting.WorkflowInstanceExtensionManager.Add%2A> hinzugefügte Erweiterungen verwenden den Laufzeittyp des Objekts als Typschlüssel.</span><span class="sxs-lookup"><span data-stu-id="08fef-217">Extensions added through <xref:System.Activities.Hosting.WorkflowInstanceExtensionManager.Add%2A> use the runtime type of the object as the type key.</span></span> <span data-ttu-id="08fef-218">Anbieter von Erweiterungen hinzugefügt, über <xref:System.Activities.Hosting.WorkflowInstanceExtensionManager.Add%2A> verwenden typschlüssel den deklarierten Typ T von Func\<T > als typschlüssel.</span><span class="sxs-lookup"><span data-stu-id="08fef-218">Extensions providers added through <xref:System.Activities.Hosting.WorkflowInstanceExtensionManager.Add%2A> use the decared type T of the Func\<T> as the type key.</span></span> <span data-ttu-id="08fef-219">Die mithilfe der verschiedenen \*ActivityMetadata.AddDefaultExtensionProvider-Methoden von Aktivitäten bereitgestellten Erweiterungsanbieter werden gelöscht, wenn eine Hosterweiterung für den deklarierten Typ vorhanden ist oder wenn es einen breiteren durch AddDefaultExtensionProvider bereitgestellten Typ gibt</span><span class="sxs-lookup"><span data-stu-id="08fef-219">Extension providers contributed by activities through the various \*ActivityMetadata.AddDefaultExtensionProvider methods are dropped if a host extension exists for the declared type or if there is a broader type provided through AddDefaultExtensionProvider (ex.</span></span> <span data-ttu-id="08fef-220">Wenn Func\<StreamWriter > wird bereitgestellt und Func\<TextWriter > angegeben ist, wird nur Func\<StreamWriter > beibehalten).</span><span class="sxs-lookup"><span data-stu-id="08fef-220">if Func\<StreamWriter> is provided and Func\<TextWriter> is provided, only Func\<StreamWriter> will be kept).</span></span> <span data-ttu-id="08fef-221">Wenn in der Auflistung keine Erweiterung vorhanden ist, die von einer Aktivität benötigt wird (ausgedrückt durch Aufrufen von \* ActivityMetadata.RequireExtension), wird eine <xref:System.Activities.ValidationException> ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="08fef-221">If an extension does not exist in the collection that is required by an activity (expressed by calling \*ActivityMetadata.RequireExtension) a <xref:System.Activities.ValidationException> is thrown.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsInstanceKeys">
      <MemberSignature Language="C#" Value="protected internal abstract bool SupportsInstanceKeys { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsInstanceKeys" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Hosting.WorkflowInstance.SupportsInstanceKeys" />
      <MemberSignature Language="VB.NET" Value="Protected Friend MustOverride ReadOnly Property SupportsInstanceKeys As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; abstract property bool SupportsInstanceKeys { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.SupportsInstanceKeys : bool" Usage="System.Activities.Hosting.WorkflowInstance.SupportsInstanceKeys" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="08fef-222">Ruft einen Wert ab, der angibt, ob der Host die Zuordnung von <see cref="P:System.Runtime.DurableInstancing.InstanceView.InstanceKeys" /> mit einer Laufzeitinstanz unterstützt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="08fef-222">Gets a value that indicates whether the host supports the association of <see cref="P:System.Runtime.DurableInstancing.InstanceView.InstanceKeys" /> with a run-time instance.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="08fef-223">
            <see langword="true" />, wenn der Host die Zuordnung von <see cref="P:System.Runtime.DurableInstancing.InstanceView.InstanceKeys" /> mit einer Workflowinstanz unterstützt, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="08fef-223">
              <see langword="true" /> if the host supports the association of <see cref="P:System.Runtime.DurableInstancing.InstanceView.InstanceKeys" /> with a workflow instance; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SynchronizationContext">
      <MemberSignature Language="C#" Value="public System.Threading.SynchronizationContext SynchronizationContext { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Threading.SynchronizationContext SynchronizationContext" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Hosting.WorkflowInstance.SynchronizationContext" />
      <MemberSignature Language="VB.NET" Value="Public Property SynchronizationContext As SynchronizationContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Threading::SynchronizationContext ^ SynchronizationContext { System::Threading::SynchronizationContext ^ get(); void set(System::Threading::SynchronizationContext ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SynchronizationContext : System.Threading.SynchronizationContext with get, set" Usage="System.Activities.Hosting.WorkflowInstance.SynchronizationContext" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.SynchronizationContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="08fef-224">Ruft den <see cref="T:System.Threading.SynchronizationContext" /> für die Planung der Workflowinstanz ab.</span>
          <span class="sxs-lookup">
            <span data-stu-id="08fef-224">Gets or sets the <see cref="T:System.Threading.SynchronizationContext" /> used for scheduling the workflow instance.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="08fef-225">Der Synchronisierungskontext für die Planung der Workflowinstanz.</span>
          <span class="sxs-lookup">
            <span data-stu-id="08fef-225">The synchronization context used for scheduling the workflow instance.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="08fef-226">Wenn diese Eigenschaft festgelegt wird, nachdem die Workflowinstanz initialisiert wurde und <xref:System.Activities.Hosting.WorkflowInstance.IsReadOnly%2A> gibt `true`, <xref:System.InvalidOperationException> ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="08fef-226">If this property is set after the workflow instance is initialized and <xref:System.Activities.Hosting.WorkflowInstance.IsReadOnly%2A> returns `true`, an <xref:System.InvalidOperationException> is thrown.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThrowIfReadOnly">
      <MemberSignature Language="C#" Value="protected void ThrowIfReadOnly ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void ThrowIfReadOnly() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Hosting.WorkflowInstance.ThrowIfReadOnly" />
      <MemberSignature Language="VB.NET" Value="Protected Sub ThrowIfReadOnly ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void ThrowIfReadOnly();" />
      <MemberSignature Language="F#" Value="member this.ThrowIfReadOnly : unit -&gt; unit" Usage="workflowInstance.ThrowIfReadOnly " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="08fef-227">Löst eine <see cref="T:System.InvalidOperationException" /> aus, wenn die Workflowinstanz initialisiert wurde, wie von <see cref="P:System.Activities.Hosting.WorkflowInstance.IsReadOnly" /> bestimmt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="08fef-227">Throws an <see cref="T:System.InvalidOperationException" /> if the workflow instance has been initialized, as determined by <see cref="P:System.Activities.Hosting.WorkflowInstance.IsReadOnly" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="08fef-228">Wenn <xref:System.Activities.Hosting.WorkflowInstance.IsReadOnly%2A> gibt `true`, und klicken Sie dann eine <xref:System.InvalidOperationException> ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="08fef-228">If <xref:System.Activities.Hosting.WorkflowInstance.IsReadOnly%2A> returns `true`, then an <xref:System.InvalidOperationException> is thrown.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WorkflowDefinition">
      <MemberSignature Language="C#" Value="public System.Activities.Activity WorkflowDefinition { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Activities.Activity WorkflowDefinition" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Hosting.WorkflowInstance.WorkflowDefinition" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property WorkflowDefinition As Activity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Activities::Activity ^ WorkflowDefinition { System::Activities::Activity ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.WorkflowDefinition : System.Activities.Activity" Usage="System.Activities.Hosting.WorkflowInstance.WorkflowDefinition" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.Activity</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="08fef-229">Ruft die Workflowdefinition der Workflowinstanz ab.</span>
          <span class="sxs-lookup">
            <span data-stu-id="08fef-229">Gets the workflow definition of the workflow instance.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="08fef-230">Die Workflowdefinition der Workflowinstanz.</span>
          <span class="sxs-lookup">
            <span data-stu-id="08fef-230">The workflow definition of the workflow instance.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>