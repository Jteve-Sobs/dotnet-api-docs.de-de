<Type Name="ActiveDirectorySchedule" FullName="System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule">
  <Metadata><Meta Name="ms.openlocfilehash" Value="7624b3c4ce604b042a4781e8a39c1d44eaf59d87" /><Meta Name="ms.sourcegitcommit" Value="1654a92bac785a221098172d9cacd405ceaac9b7" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="12/01/2018" /><Meta Name="ms.locfileid" Value="52731860" /></Metadata><TypeSignature Language="C#" Value="public class ActiveDirectorySchedule" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ActiveDirectorySchedule extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule" />
  <TypeSignature Language="VB.NET" Value="Public Class ActiveDirectorySchedule" />
  <TypeSignature Language="C++ CLI" Value="public ref class ActiveDirectorySchedule" />
  <TypeSignature Language="F#" Value="type ActiveDirectorySchedule = class" />
  <AssemblyInfo>
    <AssemblyName>System.DirectoryServices</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Die <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule" />-Klasse stellt den wöchentlichen Zeitplan für eine Active Directory-Domänendienste-Replikation dar.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule" />-Klasse.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ActiveDirectorySchedule ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ActiveDirectorySchedule();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule" />-Klasse.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ActiveDirectorySchedule (System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule schedule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule schedule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.#ctor(System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (schedule As ActiveDirectorySchedule)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ActiveDirectorySchedule(System::DirectoryServices::ActiveDirectory::ActiveDirectorySchedule ^ schedule);" />
      <MemberSignature Language="F#" Value="new System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule : System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule -&gt; System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule" Usage="new System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule schedule" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="schedule" Type="System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule" />
      </Parameters>
      <Docs>
        <param name="schedule">Ein <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule" />-Objekt, das in dieses Objekt kopiert wird.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule" />-Klasse unter Verwendung des angegebenen <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule" />-Objekts.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="schedule" /> ist <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="RawSchedule">
      <MemberSignature Language="C#" Value="public bool[,,] RawSchedule { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool[,,] RawSchedule" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.RawSchedule" />
      <MemberSignature Language="VB.NET" Value="Public Property RawSchedule As Boolean(,,)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;bool, 3&gt; ^ RawSchedule { cli::array &lt;bool, 3&gt; ^ get(); void set(cli::array &lt;bool, 3&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.RawSchedule : bool[,,] with get, set" Usage="System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.RawSchedule" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean[,,]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ein dreidimensionales Array ab, das angibt, zu welchen Zeiten der Woche die Quelle für die Replikation verfügbar ist.</summary>
        <value>Ein dreidimensionales Array von <see cref="T:System.Boolean" />-Elementen. Das Element ist <see langword="true" />, wenn die Quelle während des entsprechenden 15-Minuten-Intervalls für die Replikation verfügbar ist. Das Element ist <see langword="false" />, wenn die Quelle für die Replikation nicht verfügbar ist.  
  
Das Array ist das Format RawSchedule [&lt;Tag der Woche&gt;, &lt;Stunde&gt;, &lt;15-Minuten-Intervall&gt;]. Alle Werte sind nullbasiert. Die Woche beginnt am Sonntagmorgen um 00:00 Uhr, koordinierte Weltzeit (UTC).  
  
Folgende Werte sind für den Wochentag gültig.  
  
 <list type="table"><listheader><term> Wochentagwert 
 </term><description> Angegebener Wochentag  
  
 </description></listheader><item><term> 0 
 </term><description> Sonntag 
 </description></item><item><term> 1 
 </term><description> Montag 
 </description></item><item><term> 2 
 </term><description> Dienstag 
 </description></item><item><term> 3 
 </term><description> Mittwoch 
 </description></item><item><term> 4 
 </term><description> Donnerstag 
 </description></item><item><term> 5 
 </term><description> Freitag 
 </description></item><item><term> 6 
 </term><description> Samstag 
 </description></item></list>  

 Die Stunde ist nullbasiert und wird im 24-Stunden-Format angegeben. Z. B. 14: 00 Uhr als 14 angegeben werden. Gültige Werte sind 0-23.  
  
Das 15-Minuten-Intervall gibt den 15-Minuten-Block innerhalb der Stunde an, in dem die Quelle für die Replikation verfügbar ist. In der folgenden Tabelle werden die möglichen Werte für das 15-Minuten-Intervall angegeben.  
  
 <list type="table"><listheader><term> 15-Minuten-Intervall 
 </term><description> Beschreibung  
 </description></listheader><item><term> 0 
 </term><description> Die Quelle ist von der 0. bis zur 14. Minute nach der vollen Stunde für die Replikation verfügbar.  
  
 </description></item><item><term> 1 
 </term><description> Die Quelle ist für die Replikation von 15 bis 29 Minuten nach der vollen Stunde verfügbar.  
  
 </description></item><item><term> 2 
 </term><description> Die Quelle ist für die Replikation von 30 bis 44 Minuten nach der vollen Stunde verfügbar.  
  
 </description></item><item><term> 3 
 </term><description> Die Quelle ist für die Replikation von 45 bis 59 Minuten nach der vollen Stunde verfügbar.  
  
 </description></item></list>  

 Im folgenden C#-Beispiel wird veranschaulicht, wie mit dieser Eigenschaft bestimmt werden kann, ob die Quelle am Dienstag, um 15:50 Uhr (koordinierte Weltzeit) verfügbar ist.  
  
```csharp  
Boolean isAvailable = scheduleObject.RawSchedule[2, 15, 3];  
```  
  
Im folgenden C#-Beispiel wird veranschaulicht, wie mit dieser Eigenschaft das 15-Minuten-Intervall zur Laufzeit berechnet wird, indem die Minuten durch 15 dividiert werden.  
  
```csharp  
Boolean isAvailable = scheduleObject.RawSchedule[2, 15, (Int32)50/15];  
```</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetSchedule">
      <MemberSignature Language="C#" Value="public void ResetSchedule ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResetSchedule() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.ResetSchedule" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResetSchedule ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResetSchedule();" />
      <MemberSignature Language="F#" Value="member this.ResetSchedule : unit -&gt; unit" Usage="activeDirectorySchedule.ResetSchedule " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Setzt den gesamten Zeitplan auf nicht verfügbar zurück.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetDailySchedule">
      <MemberSignature Language="C#" Value="public void SetDailySchedule (System.DirectoryServices.ActiveDirectory.HourOfDay fromHour, System.DirectoryServices.ActiveDirectory.MinuteOfHour fromMinute, System.DirectoryServices.ActiveDirectory.HourOfDay toHour, System.DirectoryServices.ActiveDirectory.MinuteOfHour toMinute);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetDailySchedule(valuetype System.DirectoryServices.ActiveDirectory.HourOfDay fromHour, valuetype System.DirectoryServices.ActiveDirectory.MinuteOfHour fromMinute, valuetype System.DirectoryServices.ActiveDirectory.HourOfDay toHour, valuetype System.DirectoryServices.ActiveDirectory.MinuteOfHour toMinute) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.SetDailySchedule(System.DirectoryServices.ActiveDirectory.HourOfDay,System.DirectoryServices.ActiveDirectory.MinuteOfHour,System.DirectoryServices.ActiveDirectory.HourOfDay,System.DirectoryServices.ActiveDirectory.MinuteOfHour)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetDailySchedule (fromHour As HourOfDay, fromMinute As MinuteOfHour, toHour As HourOfDay, toMinute As MinuteOfHour)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetDailySchedule(System::DirectoryServices::ActiveDirectory::HourOfDay fromHour, System::DirectoryServices::ActiveDirectory::MinuteOfHour fromMinute, System::DirectoryServices::ActiveDirectory::HourOfDay toHour, System::DirectoryServices::ActiveDirectory::MinuteOfHour toMinute);" />
      <MemberSignature Language="F#" Value="member this.SetDailySchedule : System.DirectoryServices.ActiveDirectory.HourOfDay * System.DirectoryServices.ActiveDirectory.MinuteOfHour * System.DirectoryServices.ActiveDirectory.HourOfDay * System.DirectoryServices.ActiveDirectory.MinuteOfHour -&gt; unit" Usage="activeDirectorySchedule.SetDailySchedule (fromHour, fromMinute, toHour, toMinute)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fromHour" Type="System.DirectoryServices.ActiveDirectory.HourOfDay" />
        <Parameter Name="fromMinute" Type="System.DirectoryServices.ActiveDirectory.MinuteOfHour" />
        <Parameter Name="toHour" Type="System.DirectoryServices.ActiveDirectory.HourOfDay" />
        <Parameter Name="toMinute" Type="System.DirectoryServices.ActiveDirectory.MinuteOfHour" />
      </Parameters>
      <Docs>
        <param name="fromHour">Einer der <see cref="T:System.DirectoryServices.ActiveDirectory.HourOfDay" />-Member, der die erste Stunde angibt, in der die Quelle für die Replikation verfügbar ist.</param>
        <param name="fromMinute">Einer der <see cref="T:System.DirectoryServices.ActiveDirectory.MinuteOfHour" />-Member, der das erste 15-Minuten-Intervall angibt, in dem die Quelle für die Replikation verfügbar ist.</param>
        <param name="toHour">Einer der <see cref="T:System.DirectoryServices.ActiveDirectory.HourOfDay" />-Member, der die letzte Stunde angibt, in der die Quelle für die Replikation verfügbar ist.</param>
        <param name="toMinute">Einer der <see cref="T:System.DirectoryServices.ActiveDirectory.MinuteOfHour" />-Member, der das letzte 15-Minuten-Intervall angibt, in dem die Quelle für die Replikation verfügbar ist.</param>
        <summary>Fügt dem Zeitplan einen Zeitbereich für jeden Wochentag hinzu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Alle Parameter in dieser Methode sind inklusiv.  
  
 Diese Methode ist ein kumulatives Update, und alle vorhandenen Zeitplaninformationen werden nicht entfernt. Wenn Sie einen vorhandenen Zeitplan und den neuen Zeitplan überschneiden, wird das Ergebnis immer noch kumulative sein. Um den Zeitplan zu löschen, verwenden die <xref:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.ResetSchedule%2A> Methode.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.DirectoryServices.ActiveDirectory.HourOfDay" />
        <altmember cref="T:System.DirectoryServices.ActiveDirectory.MinuteOfHour" />
        <altmember cref="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.ResetSchedule" />
      </Docs>
    </Member>
    <MemberGroup MemberName="SetSchedule">
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Fügt der Auflistung einen Zeitbereich hinzu.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetSchedule">
      <MemberSignature Language="C#" Value="public void SetSchedule (DayOfWeek day, System.DirectoryServices.ActiveDirectory.HourOfDay fromHour, System.DirectoryServices.ActiveDirectory.MinuteOfHour fromMinute, System.DirectoryServices.ActiveDirectory.HourOfDay toHour, System.DirectoryServices.ActiveDirectory.MinuteOfHour toMinute);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetSchedule(valuetype System.DayOfWeek day, valuetype System.DirectoryServices.ActiveDirectory.HourOfDay fromHour, valuetype System.DirectoryServices.ActiveDirectory.MinuteOfHour fromMinute, valuetype System.DirectoryServices.ActiveDirectory.HourOfDay toHour, valuetype System.DirectoryServices.ActiveDirectory.MinuteOfHour toMinute) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.SetSchedule(System.DayOfWeek,System.DirectoryServices.ActiveDirectory.HourOfDay,System.DirectoryServices.ActiveDirectory.MinuteOfHour,System.DirectoryServices.ActiveDirectory.HourOfDay,System.DirectoryServices.ActiveDirectory.MinuteOfHour)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetSchedule (day As DayOfWeek, fromHour As HourOfDay, fromMinute As MinuteOfHour, toHour As HourOfDay, toMinute As MinuteOfHour)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetSchedule(DayOfWeek day, System::DirectoryServices::ActiveDirectory::HourOfDay fromHour, System::DirectoryServices::ActiveDirectory::MinuteOfHour fromMinute, System::DirectoryServices::ActiveDirectory::HourOfDay toHour, System::DirectoryServices::ActiveDirectory::MinuteOfHour toMinute);" />
      <MemberSignature Language="F#" Value="member this.SetSchedule : DayOfWeek * System.DirectoryServices.ActiveDirectory.HourOfDay * System.DirectoryServices.ActiveDirectory.MinuteOfHour * System.DirectoryServices.ActiveDirectory.HourOfDay * System.DirectoryServices.ActiveDirectory.MinuteOfHour -&gt; unit" Usage="activeDirectorySchedule.SetSchedule (day, fromHour, fromMinute, toHour, toMinute)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="day" Type="System.DayOfWeek" />
        <Parameter Name="fromHour" Type="System.DirectoryServices.ActiveDirectory.HourOfDay" />
        <Parameter Name="fromMinute" Type="System.DirectoryServices.ActiveDirectory.MinuteOfHour" />
        <Parameter Name="toHour" Type="System.DirectoryServices.ActiveDirectory.HourOfDay" />
        <Parameter Name="toMinute" Type="System.DirectoryServices.ActiveDirectory.MinuteOfHour" />
      </Parameters>
      <Docs>
        <param name="day">Einer der <see cref="T:System.DayOfWeek" />-Member, der den Wochentag angibt, an dem die Quelle für die Replikation verfügbar ist.</param>
        <param name="fromHour">Einer der <see cref="T:System.DirectoryServices.ActiveDirectory.HourOfDay" />-Member, der die erste Stunde angibt, in der die Quelle für die Replikation verfügbar ist.</param>
        <param name="fromMinute">Einer der <see cref="T:System.DirectoryServices.ActiveDirectory.MinuteOfHour" />-Member, der das erste 15-Minuten-Intervall angibt, in dem die Quelle für die Replikation verfügbar ist.</param>
        <param name="toHour">Einer der <see cref="T:System.DirectoryServices.ActiveDirectory.HourOfDay" />-Member, der die letzte Stunde angibt, in der die Quelle für die Replikation verfügbar ist.</param>
        <param name="toMinute">Einer der <see cref="T:System.DirectoryServices.ActiveDirectory.MinuteOfHour" />-Member, der das letzte 15-Minuten-Intervall angibt, in dem die Quelle für die Replikation verfügbar ist.</param>
        <summary>Fügt dem Zeitplan einen Zeitbereich für einen einzelnen Tag hinzu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Alle Parameter in dieser Methode sind inklusiv.  
  
 Diese Methode ist ein kumulatives Update, und alle vorhandenen Zeitplaninformationen werden nicht entfernt. Wenn Sie einen vorhandenen Zeitplan und den neuen Zeitplan überschneiden, wird das Ergebnis immer noch kumulative sein. Um den Zeitplan zu löschen, verwenden die <xref:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.ResetSchedule%2A> Methode.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Die Startzeit liegt nach der Endzeit.</exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">Mindestens ein Parameter ist ungültig.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="days" /> ist <see langword="null" />.</exception>
        <altmember cref="T:System.DayOfWeek" />
        <altmember cref="T:System.DirectoryServices.ActiveDirectory.HourOfDay" />
        <altmember cref="T:System.DirectoryServices.ActiveDirectory.MinuteOfHour" />
        <altmember cref="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.ResetSchedule" />
      </Docs>
    </Member>
    <Member MemberName="SetSchedule">
      <MemberSignature Language="C#" Value="public void SetSchedule (DayOfWeek[] days, System.DirectoryServices.ActiveDirectory.HourOfDay fromHour, System.DirectoryServices.ActiveDirectory.MinuteOfHour fromMinute, System.DirectoryServices.ActiveDirectory.HourOfDay toHour, System.DirectoryServices.ActiveDirectory.MinuteOfHour toMinute);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetSchedule(valuetype System.DayOfWeek[] days, valuetype System.DirectoryServices.ActiveDirectory.HourOfDay fromHour, valuetype System.DirectoryServices.ActiveDirectory.MinuteOfHour fromMinute, valuetype System.DirectoryServices.ActiveDirectory.HourOfDay toHour, valuetype System.DirectoryServices.ActiveDirectory.MinuteOfHour toMinute) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.SetSchedule(System.DayOfWeek[],System.DirectoryServices.ActiveDirectory.HourOfDay,System.DirectoryServices.ActiveDirectory.MinuteOfHour,System.DirectoryServices.ActiveDirectory.HourOfDay,System.DirectoryServices.ActiveDirectory.MinuteOfHour)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetSchedule (days As DayOfWeek(), fromHour As HourOfDay, fromMinute As MinuteOfHour, toHour As HourOfDay, toMinute As MinuteOfHour)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetSchedule(cli::array &lt;DayOfWeek&gt; ^ days, System::DirectoryServices::ActiveDirectory::HourOfDay fromHour, System::DirectoryServices::ActiveDirectory::MinuteOfHour fromMinute, System::DirectoryServices::ActiveDirectory::HourOfDay toHour, System::DirectoryServices::ActiveDirectory::MinuteOfHour toMinute);" />
      <MemberSignature Language="F#" Value="member this.SetSchedule : DayOfWeek[] * System.DirectoryServices.ActiveDirectory.HourOfDay * System.DirectoryServices.ActiveDirectory.MinuteOfHour * System.DirectoryServices.ActiveDirectory.HourOfDay * System.DirectoryServices.ActiveDirectory.MinuteOfHour -&gt; unit" Usage="activeDirectorySchedule.SetSchedule (days, fromHour, fromMinute, toHour, toMinute)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="days" Type="System.DayOfWeek[]" />
        <Parameter Name="fromHour" Type="System.DirectoryServices.ActiveDirectory.HourOfDay" />
        <Parameter Name="fromMinute" Type="System.DirectoryServices.ActiveDirectory.MinuteOfHour" />
        <Parameter Name="toHour" Type="System.DirectoryServices.ActiveDirectory.HourOfDay" />
        <Parameter Name="toMinute" Type="System.DirectoryServices.ActiveDirectory.MinuteOfHour" />
      </Parameters>
      <Docs>
        <param name="days">Einer der <see cref="T:System.DayOfWeek" />-Member, der den Wochentag angibt, an dem die Quelle für die Replikation verfügbar ist.</param>
        <param name="fromHour">Einer der <see cref="T:System.DirectoryServices.ActiveDirectory.HourOfDay" />-Member, der die erste Stunde angibt, in der die Quelle für die Replikation verfügbar ist.</param>
        <param name="fromMinute">Einer der <see cref="T:System.DirectoryServices.ActiveDirectory.MinuteOfHour" />-Member, der das erste 15-Minuten-Intervall angibt, in dem die Quelle für die Replikation verfügbar ist.</param>
        <param name="toHour">Einer der <see cref="T:System.DirectoryServices.ActiveDirectory.HourOfDay" />-Member, der die letzte Stunde angibt, in der die Quelle für die Replikation verfügbar ist.</param>
        <param name="toMinute">Einer der <see cref="T:System.DirectoryServices.ActiveDirectory.MinuteOfHour" />-Member, der das letzte 15-Minuten-Intervall angibt, in dem die Quelle für die Replikation verfügbar ist.</param>
        <summary>Fügt dem Zeitplan einen Zeitbereich für mehrere Tage hinzu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Alle Parameter in dieser Methode sind inklusiv.  
  
 Diese Methode ist ein kumulatives Update, und alle vorhandenen Zeitplaninformationen werden nicht entfernt. Wenn Sie einen vorhandenen Zeitplan und den neuen Zeitplan überschneiden, wird das Ergebnis immer noch kumulative sein. Um den Zeitplan zu löschen, verwenden die <xref:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.ResetSchedule%2A> Methode.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Die Startzeit liegt nach der Endzeit.</exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">Mindestens ein Parameter ist ungültig.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="days" /> ist <see langword="null" />.</exception>
        <altmember cref="T:System.DayOfWeek" />
        <altmember cref="T:System.DirectoryServices.ActiveDirectory.HourOfDay" />
        <altmember cref="T:System.DirectoryServices.ActiveDirectory.MinuteOfHour" />
        <altmember cref="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.ResetSchedule" />
      </Docs>
    </Member>
  </Members>
</Type>