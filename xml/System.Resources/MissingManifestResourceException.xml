<Type Name="MissingManifestResourceException" FullName="System.Resources.MissingManifestResourceException">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="b796ed09e842e1850c46fefd8ef74b4b0338a1c7" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30479394" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class MissingManifestResourceException : SystemException" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit MissingManifestResourceException extends System.SystemException" />
  <TypeSignature Language="DocId" Value="T:System.Resources.MissingManifestResourceException" />
  <TypeSignature Language="VB.NET" Value="Public Class MissingManifestResourceException&#xA;Inherits SystemException" />
  <TypeSignature Language="C++ CLI" Value="public ref class MissingManifestResourceException : SystemException" />
  <AssemblyInfo>
    <AssemblyName>System.Resources.ResourceManager</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Exception</BaseTypeName>
    <BaseTypeName FrameworkAlternate="netframework-4.5">System.SystemException</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Die Ausnahme, die ausgelöst wird, wenn die Hauptassembly keine Ressourcen für die neutrale Kultur enthält, und eine entsprechende Satellitenassembly fehlt.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="desktop-apps"></a>Desktop-Apps  
 Bei desktop-apps <xref:System.Resources.MissingManifestResourceException> wird ausgelöst, wenn der Versuch zum Abrufen einer Ressource fehlschlägt, weil es sich bei der Ressourcensatz für die neutrale Kultur nicht von einer bestimmten Assembly geladen werden konnte. Obwohl die Ausnahme ausgelöst wird, wenn Sie versuchen, eine bestimmte Ressource abgerufen werden soll, wird er durch den Fehler der Ressource gesucht, anstatt den Ressourcensatz nicht geladen verursacht.  
  
> [!NOTE]
>  Weitere Informationen finden Sie im Abschnitt "Behandlung von einer MissingManifestResourceException-Ausnahme" in der <xref:System.Resources.ResourceManager> klassenthema.  
  
 Die folgenden: Hauptursachen der Ausnahme  
  
-   Der Ressourcensatz wird nicht durch vollständig qualifizierten Namen identifiziert. Z. B. wenn die `baseName` Parameter im Aufruf der <xref:System.Resources.ResourceManager.%23ctor%28System.String%2CSystem.Reflection.Assembly%29?displayProperty=nameWithType> Methode gibt den Namen des Ressourcensatzes ohne einen Namespace, jedoch der Ressourcensatz ein Namespace zugewiesen wird, wenn sie in der Assembly, die den Aufruf von gespeichert ist die <xref:System.Resources.ResourceManager.GetString%2A?displayProperty=nameWithType> Methode löst diese Ausnahme aus.  
  
     Wenn Sie die RESOURCES-Datei, die die Standardkultur Ressourcen in der ausführbaren Datei enthält eingebettet und von Ihrer app auslösen ein <xref:System.Resources.MissingManifestResourceException>haben, können Sie ein Reflektionstool, z. B. den vollqualifizierten Namen der Ressource zu ermitteln. Klicken Sie im "Ildasm", doppelklicken auf der ausführbare **MANIFEST** Bezeichnung an, öffnen Sie die **MANIFEST** Fenster. Ressourcen werden als `.mresource` Elemente und sind nach der Verweise auf externe Assemblys und benutzerdefinierte auf Assemblyebene Attribute aufgeführt. Sie können auch das folgende einfache Dienstprogramm kompilieren, das den vollqualifizierten Namen von eingebetteten Ressourcen in der Assembly aufgelistet sind, deren Name als Befehlszeilenparameter an ihn übergeben wird.  
  
     [!code-csharp[System.Resources.ResourceManager.Class#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.resources.resourcemanager.class/cs/resourcenames.cs#4)]
     [!code-vb[System.Resources.ResourceManager.Class#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.resources.resourcemanager.class/vb/resourcenames.vb#4)]  
  
-   Bestimmen Sie die Ressource durch seine Ressourcendateinamen (zusammen mit den optionalen Namespace) und die Dateierweiterung und nicht anhand des Dateinamens und der Stammelementname allein festgelegt. Beispielsweise diese Ausnahme wird ausgelöst, wenn die neutrale Kultur Ressourcensatz heißt `GlobalResources` und geben Sie den Wert `GlobalResources.resources` (anstelle von `GlobalResources`), die `baseName` Parameter von der <xref:System.Resources.ResourceManager.%23ctor%28System.String%2CSystem.Reflection.Assembly%29?displayProperty=nameWithType> Konstruktor.  
  
-   Kulturspezifische Ressourcensatz, der in einem Methodenaufruf identifiziert wird, kann nicht gefunden werden, und der fallback Ressourcensatz kann nicht geladen werden. Beispielsweise wird, wenn Sie die Satellitenassemblys für die englischen (USA) und Russische Föderation (Russische Föderation) Kulturen erstellen aber Sie ein Failover auf eine Ressource für die neutrale Kultur festgelegt bereitstellen, diese Ausnahme ausgelöst, wenn Ihre app aktuelle Kultur Englisch (Großbritannien) ist.  
  
 <xref:System.Resources.MissingManifestResourceException> verwendet HRESULT COR_E_MISSINGMANIFESTRESOURCE mit den Wert 0 x 80131532.  
  
 <xref:System.Resources.MissingManifestResourceException> verwendet die standardmäßige <xref:System.Object.Equals%2A> -Implementierung, die Verweisgleichheit unterstützt.  
  
 Eine Liste der anfänglichen Eigenschaftenwerte für eine Instanz von <xref:System.Resources.MissingManifestResourceException>, finden Sie unter der <xref:System.Resources.MissingManifestResourceException.%23ctor%2A> Konstruktoren.  
  
> [!NOTE]
>  Es wird empfohlen, dass Sie einen neutralen Satz von Ressourcen in der Hauptassembly enthalten, so, dass Ihre app wird nicht durchgeführt, wenn eine Satellitenassembly nicht verfügbar ist.  
  
## <a name="includewin8appnamelongincludeswin8-appname-long-mdmd-apps"></a>[!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)]-Apps  
 Im Gegensatz zu desktop-apps, die lokalisierte Ressourcen in Satellitenassemblys bereitstellen, und speichern Sie die Ressourcen der neutralen Kultur in der Regel in die Hauptassembly, [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] Ressourcen für mehrere Kulturen, einschließlich der neutralen Kultur in einer einzelnen Bereitstellung von apps Index (.pri) Ressourcendatei Paket. Daher in einer [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] app, wenn Ressourcen für die bevorzugten Kultur nicht gefunden werden können, die <xref:System.Resources.MissingManifestResourceException> wird unter eine der folgenden Bedingungen ausgelöst:  
  
-   Die app keine PRI-Datei, oder die PRI-Datei konnte nicht geöffnet werden.  
  
-   Die app PRI-Datei enthält keine Ressource für den angegebenen Namen festgelegt.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Exception" />
    <altmember cref="T:System.Resources.ResourceManager" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Resources.MissingManifestResourceException" />-Klasse.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MissingManifestResourceException ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.MissingManifestResourceException.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MissingManifestResourceException();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Resources.MissingManifestResourceException" />-Klasse mit Standardeigenschaften.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 In der folgenden Tabelle werden die anfänglichen Eigenschaftenwerte für eine <xref:System.Resources.MissingManifestResourceException>-Instanz aufgeführt.  
  
|Eigenschaft|Wert|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|`null`|  
|<xref:System.Exception.Message%2A>|Die lokalisierte Fehlermeldung für <xref:System.Resources.MissingManifestResourceException>.|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MissingManifestResourceException (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.MissingManifestResourceException.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MissingManifestResourceException(System::String ^ message);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">Die Fehlermeldung, in der die Ursache der Ausnahme erklärt wird.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Resources.MissingManifestResourceException" />-Klasse mit der angegebenen Fehlermeldung.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 In der folgenden Tabelle werden die anfänglichen Eigenschaftenwerte für eine <xref:System.Resources.MissingManifestResourceException>-Instanz aufgeführt.  
  
|Eigenschaft|Wert|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|`null`|  
|<xref:System.Exception.Message%2A>|Die `message` Zeichenfolge.|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MissingManifestResourceException (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.MissingManifestResourceException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; MissingManifestResourceException(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">Das Objekt, das die Daten des serialisierten Objekts enthält.</param>
        <param name="context">Die Kontextinformationen über die Quelle oder das Ziel der Ausnahme.</param>
        <summary>Initialisiert anhand von serialisierten Daten eine neue Instanz der <see cref="T:System.Resources.MissingManifestResourceException" />-Klasse.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieser Konstruktor wird während der Deserialisierung aufgerufen, um das über einen Stream übertragene Ausnahmeobjekt wiederherzustellen.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MissingManifestResourceException (string message, Exception inner);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message, class System.Exception inner) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.MissingManifestResourceException.#ctor(System.String,System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String, inner As Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MissingManifestResourceException(System::String ^ message, Exception ^ inner);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="inner" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="message">Die Fehlermeldung, in der die Ursache der Ausnahme erklärt wird.</param>
        <param name="inner">Die Ausnahme, die die Ursache der aktuellen Ausnahme ist. Wenn der <c>inner</c>-Parameter nicht <see langword="null" /> ist, wird die aktuelle Ausnahme in einem <see langword="catch" />-Block ausgelöst, der die innere Ausnahme behandelt.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Resources.MissingManifestResourceException" />-Klasse mit einer angegebenen Fehlermeldung und einem Verweis auf die innere Ausnahme, die diese Ausnahme ausgelöst hat.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Eine Ausnahme, die als direktes Ergebnis einer vorhergehenden Ausnahme ausgelöst wird, muss in der <xref:System.Exception.InnerException%2A>-Eigenschaft über einen Verweis auf die vorhergehende Ausnahme verfügen. Die <xref:System.Exception.InnerException%2A>-Eigenschaft gibt den gleichen Wert zurück, der an den Konstruktor übergeben wird, oder `null`, wenn die <xref:System.Exception.InnerException%2A>-Eigenschaft den Wert der inneren Ausnahme nicht an den Konstruktor übergibt.  
  
 In der folgenden Tabelle werden die anfänglichen Eigenschaftenwerte für eine <xref:System.Resources.MissingManifestResourceException>-Instanz aufgeführt.  
  
|Eigenschaft|Wert|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|Der Verweis auf die interne Ausnahme.|  
|<xref:System.Exception.Message%2A>|Die Zeichenfolge der Fehlermeldung.|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Exception" />
      </Docs>
    </Member>
  </Members>
</Type>