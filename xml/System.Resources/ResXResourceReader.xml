<Type Name="ResXResourceReader" FullName="System.Resources.ResXResourceReader">
  <Metadata><Meta Name="ms.openlocfilehash" Value="fcf075fc75134403fb2f15c00255503625d807cf" /><Meta Name="ms.sourcegitcommit" Value="1b924db57b3a1cf768d98c21f9b988d6966a0f2b" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="03/06/2020" /><Meta Name="ms.locfileid" Value="78817423" /></Metadata><TypeSignature Language="C#" Value="public class ResXResourceReader : IDisposable, System.Collections.IEnumerable, System.Resources.IResourceReader" FrameworkAlternate="netcore-3.0;netcore-3.1" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ResXResourceReader extends System.Object implements class System.Collections.IEnumerable, class System.IDisposable, class System.Resources.IResourceReader" />
  <TypeSignature Language="DocId" Value="T:System.Resources.ResXResourceReader" />
  <TypeSignature Language="VB.NET" Value="Public Class ResXResourceReader&#xA;Implements IDisposable, IEnumerable, IResourceReader" FrameworkAlternate="netcore-3.0;netcore-3.1" />
  <TypeSignature Language="C++ CLI" Value="public ref class ResXResourceReader : IDisposable, System::Collections::IEnumerable, System::Resources::IResourceReader" FrameworkAlternate="netcore-3.0;netcore-3.1" />
  <TypeSignature Language="F#" Value="type ResXResourceReader = class&#xA;    interface IResourceReader&#xA;    interface IEnumerable&#xA;    interface IDisposable" />
  <TypeSignature Language="C#" Value="public class ResXResourceReader : System.Resources.IResourceReader" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <TypeSignature Language="VB.NET" Value="Public Class ResXResourceReader&#xA;Implements IResourceReader" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <TypeSignature Language="C++ CLI" Value="public ref class ResXResourceReader : System::Resources::IResourceReader" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Resources.IResourceReader</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Listet XML-Ressourcendateien (.resx) und -streams auf und liest die sequenziellen Paare von Ressourcennamen und -werten.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Resources.ResXResourceReader>-Klasse stellt eine Standard Implementierung der <xref:System.Resources.IResourceReader>-Schnittstelle bereit, die Ressourcen Informationen in einem XML-Format liest. Verwenden Sie zum Lesen von Ressourcen Informationen aus einem binären Ressourcen Format die <xref:System.Resources.ResourceReader>-Klasse.  
  
 Verwenden Sie die <xref:System.Resources.ResXResourceReader>-Klasse, um Ressourcen in RESX-Dateien aufzuzählen, indem Sie den Wörterbuch Enumerator (<xref:System.Collections.IDictionaryEnumerator>) durchlaufen, der von der <xref:System.Resources.ResXResourceReader.GetEnumerator%2A>-Methode zurückgegeben wird. Die von <xref:System.Collections.IDictionaryEnumerator> bereitgestellten Methoden werden aufgerufen, um mit der nächsten Ressource fortzufahren und den Namen und den Wert der einzelnen Ressourcen in der RESX-Datei zu lesen.  
  
> [!NOTE]
>  Die <xref:System.Resources.ResXResourceReader>-Klasse stellt zwei Enumeratoren bereit. Die <xref:System.Resources.ResXResourceReader.GetEnumerator%2A?displayProperty=nameWithType>-Methode gibt ein <xref:System.Collections.IDictionaryEnumerator>-Objekt zurück. Es wird empfohlen, diese Methode zum Aufzählen von Ressourcen zu verwenden. Die <xref:System.Resources.ResXResourceReader.System%23Collections%23IEnumerable%23GetEnumerator%2A?displayProperty=nameWithType>-Methode ist eine explizite Schnittstellen Implementierung, die ein <xref:System.Collections.IEnumerator> Objekt zurückgibt. die Verwendung ist nicht empfehlenswert.  
  
 Im folgenden Beispiel wird die <xref:System.Resources.ResXResourceReader.GetEnumerator%2A>-Methode verwendet, um ein <xref:System.Collections.IDictionaryEnumerator> Objekt abzurufen, das zum Auflisten der Ressourcen in einer RESX-Datei verwendet wird. Das Beispiel enthält eine `CreateResourceFile` Routine, mit der die erforderliche Ressourcen Datei erstellt wird.  
  
 [!code-csharp[System.Resources.ResXResourceReader.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.resources.resxresourcereader.class/cs/resxresourcereader1.cs#1)]
 [!code-vb[System.Resources.ResXResourceReader.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.resources.resxresourcereader.class/vb/resxresourcereader1.vb#1)]  
  
 Wenn die <xref:System.Resources.ResXResourceReader.UseResXDataNodes%2A>-Eigenschaft `true`ist, ist der Wert der <xref:System.Collections.IDictionaryEnumerator.Value%2A?displayProperty=nameWithType>-Eigenschaft ein <xref:System.Resources.ResXDataNode> Objekt und nicht der Ressourcen Wert. Dadurch ist der Kommentar eines Ressourcen Elements aus der <xref:System.Resources.ResXDataNode.Comment%2A?displayProperty=nameWithType>-Eigenschaft verfügbar. Im folgenden Beispiel wird die <xref:System.Resources.ResXResourceReader.UseResXDataNodes%2A>-Eigenschaft auf `true` festgelegt und die Ressourcen in einer RESX-Datei aufgelistet.  
  
 [!code-csharp[System.Resources.ResXResourceReader.Class#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.resources.resxresourcereader.class/cs/resxresourcereader2.cs#2)]
 [!code-vb[System.Resources.ResXResourceReader.Class#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.resources.resxresourcereader.class/vb/resxresourcereader2.vb#2)]  
  
 Wenn <xref:System.Resources.ResXResourceReader.UseResXDataNodes%2A> `true`ist, können die <xref:System.Resources.ResXDataNode> Elemente in der-Enumeration folgende Werte aufweisen:  
  
-   Benannte Ressourcen zusammen mit Ihren Daten. In diesem Fall wird die <xref:System.Resources.ResXDataNode.FileRef%2A?displayProperty=nameWithType>-Eigenschaft `null`.  
  
-   Benannte Ressourcen zusammen mit dem Namen der Datei, die die Ressourcen Daten enthält. In diesem Fall gibt die <xref:System.Resources.ResXDataNode.FileRef%2A?displayProperty=nameWithType>-Eigenschaft ein <xref:System.Resources.ResXFileRef> Objekt zurück, das Informationen über die Ressource, einschließlich des Datei namens, bereitstellt. Wenn relative Dateinamen verwendet werden, sollten Sie die <xref:System.Resources.ResXResourceReader.BasePath%2A>-Eigenschaft immer so festlegen, dass Sie einen Referenzpunkt für den relativen Dateipfad bereitstellt.  
  
 Wenn Sie benannte Ressourcen aus einer RESX-Datei abrufen möchten, anstatt deren Ressourcen aufzuzählen, können Sie ein <xref:System.Resources.ResXResourceSet> Objekt instanziieren und dessen `GetString`-und `GetObject` Methoden aufrufen.  
  
> [!NOTE]
>  Die <xref:System.Resources.ResXResourceReader>-Klasse enthält einen Link Aufruf und einen Vererbungs Bedarf auf Klassenebene, die für alle Member gilt. Eine <xref:System.Security.SecurityException> Ausnahme wird ausgelöst, wenn der unmittelbare Aufrufer oder die abgeleitete Klasse nicht über die Berechtigung für volle Vertrauenswürdigkeit verfügt.  
  
   
  
## Examples  
 Im folgenden Beispiel wird veranschaulicht, wie ein <xref:System.Resources.ResXResourceReader> zum Durchlaufen der Ressourcen in einer RESX-Datei verwendet wird. Zuerst wird der <xref:System.Resources.ResXResourceReader>`rsxr` für die Datei `items.resx`erstellt. Im nächsten Schritt wird die <xref:System.Resources.ResXResourceReader.GetEnumerator%2A>-Methode verwendet, um eine <xref:System.Collections.IDictionaryEnumerator> zu erstellen, um die Ressourcen zu durchlaufen und die Inhalte in der Konsole anzuzeigen.  
  
 [!code-cpp[System.Resources.ResxresourceReader Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Resources.ResXResourceReader Example/CPP/resxresourcereader.cpp#1)]
 [!code-csharp[System.Resources.ResxresourceReader Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Resources.ResXResourceReader Example/CS/resxresourcereader.cs#1)]
 [!code-vb[System.Resources.ResxresourceReader Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Resources.ResXResourceReader Example/VB/resxresourcereader.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Resources.ResXResourceWriter" />
    <related type="Article" href="~/docs/framework/resources/creating-resource-files-for-desktop-apps.md">Erstellen von Ressourcendateien für Desktop-Apps</related>
    <related type="Article" href="~/docs/framework/resources/working-with-resx-files-programmatically.md">Programmgesteuertes Arbeiten mit RESX-Dateien</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Resources.ResXResourceReader" />-Klasse.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ResXResourceReader (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResXResourceReader.#ctor(System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (stream As Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ResXResourceReader(System::IO::Stream ^ stream);" />
      <MemberSignature Language="F#" Value="new System.Resources.ResXResourceReader : System.IO.Stream -&gt; System.Resources.ResXResourceReader" Usage="new System.Resources.ResXResourceReader stream" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="stream">Ein Eingabestream mit Ressourcen.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Resources.ResXResourceReader" />-Klasse für den angegebenen Stream.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Die Methoden <xref:System.Resources.ResXResourceReader.Dispose%2A> und <xref:System.Resources.ResXResourceReader.Close%2A> schließen den Stream nicht, den Sie in diesem Konstruktor angeben.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ResXResourceReader (System.IO.TextReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.TextReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResXResourceReader.#ctor(System.IO.TextReader)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (reader As TextReader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ResXResourceReader(System::IO::TextReader ^ reader);" />
      <MemberSignature Language="F#" Value="new System.Resources.ResXResourceReader : System.IO.TextReader -&gt; System.Resources.ResXResourceReader" Usage="new System.Resources.ResXResourceReader reader" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="reader" Type="System.IO.TextReader" />
      </Parameters>
      <Docs>
        <param name="reader">Ein Texteingabestream mit Ressourcen.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Resources.ResXResourceReader" />-Klasse für den angegebenen <see cref="T:System.IO.TextReader" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ResXResourceReader (string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResXResourceReader.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (fileName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ResXResourceReader(System::String ^ fileName);" />
      <MemberSignature Language="F#" Value="new System.Resources.ResXResourceReader : string -&gt; System.Resources.ResXResourceReader" Usage="new System.Resources.ResXResourceReader fileName" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fileName">Der Pfad der zu lesenden Ressourcendatei.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Resources.ResXResourceReader" />-Klasse für die angegebene Ressourcendatei.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Im folgenden Beispiel wird eine neue Instanz der <xref:System.Resources.ResXResourceReader>-Klasse für die angegebene Datei erstellt, die Ressourcen der Datei durchlaufen und der Inhalt der Konsole angezeigt.  
  
 [!code-cpp[System.Resources.ResxresourceReader Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Resources.ResXResourceReader Example/CPP/resxresourcereader.cpp#1)]
 [!code-csharp[System.Resources.ResxresourceReader Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Resources.ResXResourceReader Example/CS/resxresourcereader.cs#1)]
 [!code-vb[System.Resources.ResxresourceReader Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Resources.ResXResourceReader Example/VB/resxresourcereader.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ResXResourceReader (System.IO.Stream stream, System.ComponentModel.Design.ITypeResolutionService typeResolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream stream, class System.ComponentModel.Design.ITypeResolutionService typeResolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResXResourceReader.#ctor(System.IO.Stream,System.ComponentModel.Design.ITypeResolutionService)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (stream As Stream, typeResolver As ITypeResolutionService)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ResXResourceReader(System::IO::Stream ^ stream, System::ComponentModel::Design::ITypeResolutionService ^ typeResolver);" />
      <MemberSignature Language="F#" Value="new System.Resources.ResXResourceReader : System.IO.Stream * System.ComponentModel.Design.ITypeResolutionService -&gt; System.Resources.ResXResourceReader" Usage="new System.Resources.ResXResourceReader (stream, typeResolver)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="typeResolver" Type="System.ComponentModel.Design.ITypeResolutionService" />
      </Parameters>
      <Docs>
        <param name="stream">Ein Eingabestream mit Ressourcen.</param>
        <param name="typeResolver">Ein Objekt, das die in einer Ressource angegebenen Typnamen auflöst.</param>
        <summary>Initialisiert mit einem Eingabestream und einem Typauflösungsdienst eine neue Instanz der <see cref="T:System.Resources.ResXResourceReader" />-Klasse.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ResXResourceReader (System.IO.Stream stream, System.Reflection.AssemblyName[] assemblyNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream stream, class System.Reflection.AssemblyName[] assemblyNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResXResourceReader.#ctor(System.IO.Stream,System.Reflection.AssemblyName[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (stream As Stream, assemblyNames As AssemblyName())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ResXResourceReader(System::IO::Stream ^ stream, cli::array &lt;System::Reflection::AssemblyName ^&gt; ^ assemblyNames);" />
      <MemberSignature Language="F#" Value="new System.Resources.ResXResourceReader : System.IO.Stream * System.Reflection.AssemblyName[] -&gt; System.Resources.ResXResourceReader" Usage="new System.Resources.ResXResourceReader (stream, assemblyNames)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" Index="0" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="assemblyNames" Type="System.Reflection.AssemblyName[]" Index="1" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="stream">Ein Eingabestream mit Ressourcen.</param>
        <param name="assemblyNames">Ein Array von <see cref="T:System.Reflection.AssemblyName" />-Objekten, das eine oder mehrere Assemblys angibt. Die Assemblys werden zum Auflösen der in der Ressource enthaltenen Typnamen zu einem tatsächlichen Typ verwendet.</param>
        <summary>Initialisiert mit einem Stream und einem Array von Assemblynamen eine neue Instanz der <see cref="T:System.Resources.ResXResourceReader" />-Klasse.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ResXResourceReader (System.IO.TextReader reader, System.ComponentModel.Design.ITypeResolutionService typeResolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.TextReader reader, class System.ComponentModel.Design.ITypeResolutionService typeResolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResXResourceReader.#ctor(System.IO.TextReader,System.ComponentModel.Design.ITypeResolutionService)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (reader As TextReader, typeResolver As ITypeResolutionService)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ResXResourceReader(System::IO::TextReader ^ reader, System::ComponentModel::Design::ITypeResolutionService ^ typeResolver);" />
      <MemberSignature Language="F#" Value="new System.Resources.ResXResourceReader : System.IO.TextReader * System.ComponentModel.Design.ITypeResolutionService -&gt; System.Resources.ResXResourceReader" Usage="new System.Resources.ResXResourceReader (reader, typeResolver)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="reader" Type="System.IO.TextReader" />
        <Parameter Name="typeResolver" Type="System.ComponentModel.Design.ITypeResolutionService" />
      </Parameters>
      <Docs>
        <param name="reader">Ein Textstreamreader mit Ressourcen.</param>
        <param name="typeResolver">Ein Objekt, das die in einer Ressource angegebenen Typnamen auflöst.</param>
        <summary>Initialisiert mit einem Textstreamreader und einem Typauflösungsdienst eine neue Instanz der <see cref="T:System.Resources.ResXResourceReader" />-Klasse.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ResXResourceReader (System.IO.TextReader reader, System.Reflection.AssemblyName[] assemblyNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.TextReader reader, class System.Reflection.AssemblyName[] assemblyNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResXResourceReader.#ctor(System.IO.TextReader,System.Reflection.AssemblyName[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (reader As TextReader, assemblyNames As AssemblyName())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ResXResourceReader(System::IO::TextReader ^ reader, cli::array &lt;System::Reflection::AssemblyName ^&gt; ^ assemblyNames);" />
      <MemberSignature Language="F#" Value="new System.Resources.ResXResourceReader : System.IO.TextReader * System.Reflection.AssemblyName[] -&gt; System.Resources.ResXResourceReader" Usage="new System.Resources.ResXResourceReader (reader, assemblyNames)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="reader" Type="System.IO.TextReader" Index="0" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="assemblyNames" Type="System.Reflection.AssemblyName[]" Index="1" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="reader">Ein Objekt zum Lesen der Ressourcen aus einem Textstream.</param>
        <param name="assemblyNames">Ein Array von <see cref="T:System.Reflection.AssemblyName" />-Objekten, das eine oder mehrere Assemblys angibt. Die Assemblys werden zum Auflösen der in der Ressource enthaltenen Typnamen zu einem tatsächlichen Typ verwendet.</param>
        <summary>Initialisiert mit einem <see cref="T:System.Resources.ResXResourceReader" />-Objekt und einem Array von Assemblynamen eine neue Instanz der <see cref="T:System.IO.TextReader" />-Klasse.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ResXResourceReader (string fileName, System.ComponentModel.Design.ITypeResolutionService typeResolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string fileName, class System.ComponentModel.Design.ITypeResolutionService typeResolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResXResourceReader.#ctor(System.String,System.ComponentModel.Design.ITypeResolutionService)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (fileName As String, typeResolver As ITypeResolutionService)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ResXResourceReader(System::String ^ fileName, System::ComponentModel::Design::ITypeResolutionService ^ typeResolver);" />
      <MemberSignature Language="F#" Value="new System.Resources.ResXResourceReader : string * System.ComponentModel.Design.ITypeResolutionService -&gt; System.Resources.ResXResourceReader" Usage="new System.Resources.ResXResourceReader (fileName, typeResolver)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
        <Parameter Name="typeResolver" Type="System.ComponentModel.Design.ITypeResolutionService" />
      </Parameters>
      <Docs>
        <param name="fileName">Der Name einer XML-Ressourcendatei mit Ressourcen.</param>
        <param name="typeResolver">Ein Objekt, das die in einer Ressource angegebenen Typnamen auflöst.</param>
        <summary>Initialisiert mit einem Dateinamen und einem Typauflösungsdienst eine neue Instanz der <see cref="T:System.Resources.ResXResourceReader" />-Klasse.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ResXResourceReader (string fileName, System.Reflection.AssemblyName[] assemblyNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string fileName, class System.Reflection.AssemblyName[] assemblyNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResXResourceReader.#ctor(System.String,System.Reflection.AssemblyName[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (fileName As String, assemblyNames As AssemblyName())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ResXResourceReader(System::String ^ fileName, cli::array &lt;System::Reflection::AssemblyName ^&gt; ^ assemblyNames);" />
      <MemberSignature Language="F#" Value="new System.Resources.ResXResourceReader : string * System.Reflection.AssemblyName[] -&gt; System.Resources.ResXResourceReader" Usage="new System.Resources.ResXResourceReader (fileName, assemblyNames)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" Index="0" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="assemblyNames" Type="System.Reflection.AssemblyName[]" Index="1" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="fileName">Der Name einer XML-Ressourcendatei mit Ressourcen.</param>
        <param name="assemblyNames">Ein Array von <see cref="T:System.Reflection.AssemblyName" />-Objekten, das eine oder mehrere Assemblys angibt. Die Assemblys werden zum Auflösen der in der Ressource enthaltenen Typnamen zu einem tatsächlichen Typ verwendet.</param>
        <summary>Initialisiert mit einem XML-Ressourcendateinamen und einem Array von Assemblynamen eine neue Instanz der <see cref="T:System.Resources.ResXResourceReader" />-Klasse.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BasePath">
      <MemberSignature Language="C#" Value="public string BasePath { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string BasePath" />
      <MemberSignature Language="DocId" Value="P:System.Resources.ResXResourceReader.BasePath" />
      <MemberSignature Language="VB.NET" Value="Public Property BasePath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ BasePath { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.BasePath : string with get, set" Usage="System.Resources.ResXResourceReader.BasePath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Basispfad für den in einem <see cref="T:System.Resources.ResXFileRef" />-Objekt angegebenen relativen Pfad ab oder legt diesen fest.</summary>
        <value>Ein Pfad, mit dem der absolute Pfad zu einer Ressourcendatei erstellt werden kann, wenn er dem in einem <see cref="T:System.Resources.ResXFileRef" />-Objekt angegebenen relativen Dateipfad vorangestellt wird.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Resources.ResXResourceReader.BasePath%2A>-Eigenschaft wird verwendet, um relative Dateipfad Verweise aufzulösen, die der <xref:System.Resources.ResXFileRef.FileName%2A>-Eigenschaft von <xref:System.Resources.ResXFileRef>-Objekten zugewiesen werden.  Standardmäßig ist der Wert <xref:System.String.Empty?displayProperty=nameWithType>, und relative Dateipfad Verweise werden in Beziehung zum aktuellen Verzeichnis aufgelöst, das von der <xref:System.Environment.CurrentDirectory%2A?displayProperty=nameWithType>-Eigenschaft zurückgegeben wird. Sie sollten diese Eigenschaft festlegen, bevor Sie mit dem Auflisten von Ressourcen beginnen.  
  
   
  
## Examples  
 Im folgenden Beispiel wird eine XML-Ressourcen Datei erstellt, die Bilder von Hunderassen enthält. Außerdem wird eine Zeichen folgen Ressource erstellt, die die Anwendung angibt, die die Ressource erstellt hat. <xref:System.Resources.ResXFileRef> Objekte werden verwendet, um den Pfad zu den Bildern zu speichern, anstatt die Binär Bilder selbst in der Ressourcen Datei zu speichern. Im Beispiel wird die <xref:System.Resources.ResXResourceReader.BasePath%2A>-Eigenschaft so festgelegt, dass die relativen Dateipfade in den Dateinamen der Bilder als Unterverzeichnisse eines Verzeichnisses namens c:\data\\interpretiert werden.  
  
 [!code-csharp[System.Resources.ResXResourceReader.BasePath#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.resources.resxresourcereader.basepath/cs/basepathex1.cs#1)]
 [!code-vb[System.Resources.ResXResourceReader.BasePath#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.resources.resxresourcereader.basepath/vb/basepathex1.vb#1)]  
  
 Beachten Sie, dass Sie einen Verweis auf "System. Drawing. dll" hinzufügen müssen, um das Projekt erfolgreich zu kompilieren. Das Beispiel erfordert auch, dass die erforderlichen Images in einem Verzeichnis namens c:\data\images\\vorhanden sind.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Bei einem Set-Vorgang kann kein Wert angegeben werden, da bereits auf die XML-Ressourcendatei zugegriffen wurde und sie bereits verwendet wird.</exception>
        <altmember cref="M:System.Resources.ResXResourceReader.GetEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResXResourceReader.Close" />
      <MemberSignature Language="VB.NET" Value="Public Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Close();" />
      <MemberSignature Language="F#" Value="abstract member Close : unit -&gt; unit&#xA;override this.Close : unit -&gt; unit" Usage="resXResourceReader.Close " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Resources.IResourceReader.Close</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt alle vom <see cref="T:System.Resources.ResXResourceReader" /> verwendeten Ressourcen frei.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durch Aufrufen von <xref:System.Resources.ResXResourceReader.Close%2A> können die Ressourcen, die von der <xref:System.Resources.ResXResourceReader> verwendet werden, für andere Zwecke neu zugeordnet werden. Weitere Informationen zu <xref:System.Resources.ResXResourceReader.Close%2A>finden Sie unter [Bereinigen von nicht verwalteten Ressourcen](~/docs/standard/garbage-collection/unmanaged.md).  
  
   
  
## Examples  
 Im folgenden Beispiel werden die Ressourcen einer Datei in der-Konsole angezeigt, und anschließend wird die <xref:System.Resources.ResXResourceReader.Close%2A>-Methode verwendet, um den Reader herunterzufahren und seine Ressourcen für andere Prozesse verfügbar zu machen.  
  
 [!code-cpp[System.Resources.ResxresourceReader Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Resources.ResXResourceReader Example/CPP/resxresourcereader.cpp#1)]
 [!code-csharp[System.Resources.ResxresourceReader Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Resources.ResXResourceReader Example/CS/resxresourcereader.cs#1)]
 [!code-vb[System.Resources.ResxresourceReader Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Resources.ResXResourceReader Example/VB/resxresourcereader.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResXResourceReader.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="resXResourceReader.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing"><see langword="true" />, um sowohl verwaltete als auch nicht verwaltete Ressourcen freizugeben, <see langword="false" />, um ausschließlich nicht verwaltete Ressourcen freizugeben.</param>
        <summary>Gibt die von <see cref="T:System.Resources.ResXResourceReader" /> verwendeten nicht verwalteten Ressourcen und optional die verwalteten Ressourcen frei.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode kann entweder durch die <xref:System.Resources.ResXResourceReader.System%23IDisposable%23Dispose%2A>-Methode oder die <xref:System.Object.Finalize%2A?displayProperty=nameWithType>-Methode aufgerufen werden. <xref:System.Resources.ResXResourceReader.System%23IDisposable%23Dispose%2A> ruft diese Methode auf, wobei der `disposing`-Parameter auf `true`festgelegt ist. <xref:System.Object.Finalize%2A> ruft diese Methode auf, wenn `disposing` auf `false`festgelegt ist.  
  
 Wenn der `disposing`-Parameter `true` ist, gibt diese Methode sämtliche Ressourcen frei, die für verwaltete Objekte reserviert sind, auf die dieser <xref:System.Resources.ResXResourceReader> verweist. Diese Methode ruft die `Dispose`-Methode aller Objekte auf, auf die verwiesen wird.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>
            <see langword="Dispose" /> kann von anderen Objekten mehrmals aufgerufen werden. Beim Überschreiben von <see langword="Dispose(Boolean)" /> müssen Sie darauf achten, nicht auf Objekte zu verweisen, die durch einen früheren Aufruf von <see langword="Dispose" /> freigegeben wurden. Weitere Informationen zum Implementieren von <see langword="Dispose(Boolean)" /> und zum verwerfbaren Muster finden Sie unter [Implementieren einer](~/docs/standard/garbage-collection/implementing-dispose.md)verwerfen-Methode, <see cref="T:System.IDisposable" />und <see cref="M:System.Object.Finalize" />.</para></block>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~ResXResourceReader ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResXResourceReader.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!ResXResourceReader ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="resXResourceReader.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Dieser Member überschreibt die <see cref="M:System.Object.Finalize" />-Methode.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="FromFileContents">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Erstellt ein neues <see cref="T:System.Resources.ResXResourceReader" />-Objekt und initialisiert dieses, um eine Zeichenfolge zu lesen, deren Inhalt das Format einer XML-Ressourcendatei hat.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FromFileContents">
      <MemberSignature Language="C#" Value="public static System.Resources.ResXResourceReader FromFileContents (string fileContents);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Resources.ResXResourceReader FromFileContents(string fileContents) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResXResourceReader.FromFileContents(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromFileContents (fileContents As String) As ResXResourceReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Resources::ResXResourceReader ^ FromFileContents(System::String ^ fileContents);" />
      <MemberSignature Language="F#" Value="static member FromFileContents : string -&gt; System.Resources.ResXResourceReader" Usage="System.Resources.ResXResourceReader.FromFileContents fileContents" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Resources.ResXResourceReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileContents" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fileContents">Eine Zeichenfolge, die Informationen im Format von XML-Ressourcen enthält.</param>
        <summary>Erstellt ein neues <see cref="T:System.Resources.ResXResourceReader" />-Objekt und initialisiert dieses, um eine Zeichenfolge zu lesen, deren Inhalt das Format einer XML-Ressourcendatei hat.</summary>
        <returns>Ein Objekt, das Ressourcen aus der <paramref name="fileContents" />-Zeichenfolge liest.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FromFileContents">
      <MemberSignature Language="C#" Value="public static System.Resources.ResXResourceReader FromFileContents (string fileContents, System.ComponentModel.Design.ITypeResolutionService typeResolver);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Resources.ResXResourceReader FromFileContents(string fileContents, class System.ComponentModel.Design.ITypeResolutionService typeResolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResXResourceReader.FromFileContents(System.String,System.ComponentModel.Design.ITypeResolutionService)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromFileContents (fileContents As String, typeResolver As ITypeResolutionService) As ResXResourceReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Resources::ResXResourceReader ^ FromFileContents(System::String ^ fileContents, System::ComponentModel::Design::ITypeResolutionService ^ typeResolver);" />
      <MemberSignature Language="F#" Value="static member FromFileContents : string * System.ComponentModel.Design.ITypeResolutionService -&gt; System.Resources.ResXResourceReader" Usage="System.Resources.ResXResourceReader.FromFileContents (fileContents, typeResolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Resources.ResXResourceReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileContents" Type="System.String" />
        <Parameter Name="typeResolver" Type="System.ComponentModel.Design.ITypeResolutionService" />
      </Parameters>
      <Docs>
        <param name="fileContents">Eine Zeichenfolge, die Informationen im Format von XML-Ressourcen enthält.</param>
        <param name="typeResolver">Ein Objekt, das die in einer Ressource angegebenen Typnamen auflöst.</param>
        <summary>Erstellt ein neues <see cref="T:System.Resources.ResXResourceReader" />-Objekt und initialisiert dieses, um eine Zeichenfolge zu lesen, deren Inhalt das Format einer XML-Ressourcendatei hat, und um ein <see cref="T:System.ComponentModel.Design.ITypeResolutionService" />-Objekt für das Auflösen von in einer Ressource angegebenen Typnamen zu verwenden.</summary>
        <returns>Ein Objekt, das Ressourcen aus der <paramref name="fileContents" />-Zeichenfolge liest.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FromFileContents">
      <MemberSignature Language="C#" Value="public static System.Resources.ResXResourceReader FromFileContents (string fileContents, System.Reflection.AssemblyName[] assemblyNames);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Resources.ResXResourceReader FromFileContents(string fileContents, class System.Reflection.AssemblyName[] assemblyNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResXResourceReader.FromFileContents(System.String,System.Reflection.AssemblyName[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromFileContents (fileContents As String, assemblyNames As AssemblyName()) As ResXResourceReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Resources::ResXResourceReader ^ FromFileContents(System::String ^ fileContents, cli::array &lt;System::Reflection::AssemblyName ^&gt; ^ assemblyNames);" />
      <MemberSignature Language="F#" Value="static member FromFileContents : string * System.Reflection.AssemblyName[] -&gt; System.Resources.ResXResourceReader" Usage="System.Resources.ResXResourceReader.FromFileContents (fileContents, assemblyNames)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Resources.ResXResourceReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileContents" Type="System.String" Index="0" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="assemblyNames" Type="System.Reflection.AssemblyName[]" Index="1" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="fileContents">Eine Zeichenfolge, deren Inhalt das Format einer XML-Ressourcendatei hat.</param>
        <param name="assemblyNames">Ein Array von <see cref="T:System.Reflection.AssemblyName" />-Objekten, das eine oder mehrere Assemblys angibt. Die Assemblys werden zum Auflösen der in der Ressource enthaltenen Typnamen zu einem tatsächlichen Typ verwendet.</param>
        <summary>Erstellt ein neues <see cref="T:System.Resources.ResXResourceReader" />-Objekt und initialisiert dieses, um eine Zeichenfolge zu lesen, deren Inhalt das Format einer XML-Ressourcendatei hat, und um ein Array von <see cref="T:System.Reflection.AssemblyName" />-Objekten für das Auflösen von in einer Ressource angegebenen Typnamen zu verwenden.</summary>
        <returns>Ein Objekt, das Ressourcen aus der <paramref name="fileContents" />-Zeichenfolge liest.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IDictionaryEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IDictionaryEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResXResourceReader.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IDictionaryEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::IDictionaryEnumerator ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="abstract member GetEnumerator : unit -&gt; System.Collections.IDictionaryEnumerator&#xA;override this.GetEnumerator : unit -&gt; System.Collections.IDictionaryEnumerator" Usage="resXResourceReader.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Resources.IResourceReader.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IDictionaryEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt einen Enumerator für das aktuelle <see cref="T:System.Resources.ResXResourceReader" />-Objekt zurück.</summary>
        <returns>Ein Enumerator für das aktuelle <see cref="T:System.Resources.ResourceReader" />-Objekt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Resources.ResXResourceReader.GetEnumerator%2A>-Methode ruft die Name-Wert-Paare im XML-Ressourcenstream (. resx) oder der Zeichenfolge ab, die dem aktuellen <xref:System.Resources.ResXResourceReader>-Objekt zugeordnet sind. Wenn die <xref:System.Resources.ResXResourceReader.UseResXDataNodes%2A>-Eigenschaft jedoch auf `true` festgelegt ist, bevor Sie <xref:System.Resources.ResXResourceReader.GetEnumerator%2A>aufruft, werden die Ressourcen Elemente als <xref:System.Resources.ResXDataNode> Objekte abgerufen. In diesem Fall werden alle Ressourcenknoten unabhängig vom Typ zurückgegeben.  
  
   
  
## Examples  
 Im folgenden Beispiel wird die <xref:System.Resources.ResXResourceReader.GetEnumerator%2A>-Methode verwendet, um ein <xref:System.Collections.IDictionaryEnumerator> Objekt abzurufen, das zum Auflisten der Ressourcen in einer RESX-Datei verwendet wird. Das Beispiel enthält eine `CreateResourceFile` Routine, mit der die erforderliche Ressourcen Datei erstellt wird.  
  
 [!code-csharp[System.Resources.ResXResourceReader.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.resources.resxresourcereader.class/cs/resxresourcereader1.cs#1)]
 [!code-vb[System.Resources.ResXResourceReader.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.resources.resxresourcereader.class/vb/resxresourcereader1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMetadataEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IDictionaryEnumerator GetMetadataEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.IDictionaryEnumerator GetMetadataEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResXResourceReader.GetMetadataEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMetadataEnumerator () As IDictionaryEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::IDictionaryEnumerator ^ GetMetadataEnumerator();" />
      <MemberSignature Language="F#" Value="member this.GetMetadataEnumerator : unit -&gt; System.Collections.IDictionaryEnumerator" Usage="resXResourceReader.GetMetadataEnumerator " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IDictionaryEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Stellt einen Wörterbuchenumerator bereit, der die Entwurfszeiteigenschaften aus der aktuellen XML-Ressourcendatei oder dem Stream abrufen kann.</summary>
        <returns>Ein Enumerator für die Metadaten in einer Ressource.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ressourcen werden als Name-Wert-Paare in einer Ressourcen Datei oder einem Stream gespeichert. Entwurfszeit Eigenschaften, die als Metadaten bezeichnet werden, werden zusammen mit Laufzeitdaten Ressourcen in der Ressourcen Datei oder im Stream gespeichert. Die <xref:System.Resources.ResXResourceReader.GetMetadataEnumerator%2A>-Methode stellt ein <xref:System.Collections.IDictionaryEnumerator> Objekt bereit, das die Metadaten aus der Ressourcen Datei oder dem Stream abrufen kann, die dem aktuellen <xref:System.Resources.ResXResourceReader>-Objekt zugeordnet sind. Wenn die <xref:System.Resources.ResXResourceReader.UseResXDataNodes%2A>-Eigenschaft jedoch auf `true` festgelegt ist, bevor Sie <xref:System.Resources.ResXResourceReader.GetMetadataEnumerator%2A>aufgerufen werden, werden keine Ressourcenknoten abgerufen.  
  
   
  
## Examples  
 Im folgenden Beispiel wird die <xref:System.Resources.ResXResourceReader.GetMetadataEnumerator%2A>-Methode verwendet, um die Metadatenressourcen in einer XML-Ressourcen Datei zu durchlaufen. Dieses Codebeispiel ist Teil eines größeren Beispiels, das für die <xref:System.Resources.ResXResourceReader.UseResXDataNodes%2A>-Eigenschaft bereitgestellt wird.  
  
 [!code-cpp[System.Resources.ResxresourceReader Example#4](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Resources.ResXResourceReader Example/CPP/useresxdatanodes.cpp#4)]
 [!code-csharp[System.Resources.ResxresourceReader Example#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Resources.ResXResourceReader Example/CS/useresxdatanodes.cs#4)]
 [!code-vb[System.Resources.ResxresourceReader Example#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Resources.ResXResourceReader Example/VB/useresxdatanodes.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResXResourceReader.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberSignature Language="F#" Value="abstract member System.Collections.IEnumerable.GetEnumerator : unit -&gt; System.Collections.IEnumerator&#xA;override this.System.Collections.IEnumerable.GetEnumerator : unit -&gt; System.Collections.IEnumerator" Usage="resXResourceReader.System.Collections.IEnumerable.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt einen Enumerator für das aktuelle <see cref="T:System.Resources.ResXResourceReader" />-Objekt zurück. Eine Beschreibung dieses Members finden Sie unter der <see cref="M:System.Collections.IEnumerable.GetEnumerator" />-Methode.</summary>
        <returns>Ein Enumerator kann die Name-Wert-Paare im XML-Ressourcenstream (.resx) oder der Zeichenfolge durchlaufen, die dem aktuellen <see cref="T:System.Resources.ResXResourceReader" />-Objekt zugeordnet ist.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bei diesem Member handelt es sich um eine explizite Schnittstellenmemberimplementierung. Er kann nur verwendet werden, wenn die <xref:System.Resources.ResXResourceReader>-Instanz in eine <xref:System.Collections.IEnumerable>-Schnittstelle umgewandelt wird. Zum Auflisten der Ressourcen in einer RESX-Datei wird empfohlen, dass Sie die <xref:System.Resources.ResXResourceReader.GetEnumerator%2A?displayProperty=nameWithType>-Methode und dann die `MoveNext`-Methode für das zurückgegebene <xref:System.Collections.IDictionaryEnumerator>-Objekt aufzurufen.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IDisposable.Dispose">
      <MemberSignature Language="C#" Value="void IDisposable.Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.IDisposable.Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResXResourceReader.System#IDisposable#Dispose" />
      <MemberSignature Language="VB.NET" Value="Sub Dispose () Implements IDisposable.Dispose" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.IDisposable.Dispose() = IDisposable::Dispose;" />
      <MemberSignature Language="F#" Value="abstract member System.IDisposable.Dispose : unit -&gt; unit&#xA;override this.System.IDisposable.Dispose : unit -&gt; unit" Usage="resXResourceReader.System.IDisposable.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt die von <see cref="T:System.Resources.ResXResourceReader" /> verwendeten nicht verwalteten Ressourcen und optional die verwalteten Ressourcen frei. Eine Beschreibung dieses Members finden Sie unter der <see cref="M:System.IDisposable.Dispose" />-Methode.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bei diesem Member handelt es sich um eine explizite Schnittstellenmemberimplementierung. Er kann nur verwendet werden, wenn die <xref:System.Resources.ResXResourceReader>-Instanz in eine <xref:System.IDisposable>-Schnittstelle umgewandelt wird.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Resources.ResXResourceReader.GetEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="UseResXDataNodes">
      <MemberSignature Language="C#" Value="public bool UseResXDataNodes { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseResXDataNodes" />
      <MemberSignature Language="DocId" Value="P:System.Resources.ResXResourceReader.UseResXDataNodes" />
      <MemberSignature Language="VB.NET" Value="Public Property UseResXDataNodes As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseResXDataNodes { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.UseResXDataNodes : bool with get, set" Usage="System.Resources.ResXResourceReader.UseResXDataNodes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob beim Lesen der aktuellen XML-Ressourcendatei oder des Streams <see cref="T:System.Resources.ResXDataNode" />-Objekte zurückgegeben werden, oder legt diesen fest.</summary>
        <value><see langword="true" />, wenn Ressourcendatenknoten abgerufen werden, <see langword="false" />, wenn Ressourcendatenknoten ignoriert werden.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sie können die <xref:System.Resources.ResXResourceReader.UseResXDataNodes%2A>-Eigenschaft festlegen, bevor Sie mit dem Auflisten von Ressourcen beginnen. Standardmäßig ist der Wert `false`.  
  
   
  
## Examples  
 Im folgenden Beispiel werden Ressourcen Elemente in einer XML-Datei aufgelistet und angezeigt. Zunächst wird <xref:System.Resources.ResXResourceReader.UseResXDataNodes%2A> auf `false` festgelegt, um sowohl Daten als auch Metadatenelemente anzuzeigen, wie Sie in der Ressourcen Datei auftreten. In der zweiten Enumeration ist die <xref:System.Resources.ResXResourceReader.UseResXDataNodes%2A> auf `true` festgelegt, sodass Ressourcen Datenelemente als <xref:System.Resources.ResXDataNode> Objekte zurückgegeben werden.  
  
 [!code-cpp[System.Resources.ResXResourceReader Example#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Resources.ResXResourceReader Example/CPP/useresxdatanodes.cpp#2)]
 [!code-csharp[System.Resources.ResXResourceReader Example#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Resources.ResXResourceReader Example/CS/useresxdatanodes.cs#2)]
 [!code-vb[System.Resources.ResXResourceReader Example#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Resources.ResXResourceReader Example/VB/useresxdatanodes.vb#2)]  
  
 Die im Beispiel verwendete Ressourcen-XML-Datei enthält einen Datenknoten und einen Metadatenknoten. Wenn Sie die XML-Datei mit dem vorherigen Beispiel verwenden möchten, kopieren Sie den folgenden Text, und speichern Sie ihn in einer Datei mit dem Namen "Resource1. resx.  
  
```  
<?xml version="1.0" encoding="utf-8"?>  
<root>  
  <resheader name="resmimetype">  
    <value>text/microsoft-resx</value>  
  </resheader>  
  <resheader name="version">  
    <value>2.0</value>  
  </resheader>  
  <resheader name="reader">  
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0,  
           Culture=neutral, PublicKeyToken=b77a5c561934e089  
    </value>  
  </resheader>  
  <resheader name="writer">  
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0,  
           Culture=neutral, PublicKeyToken=b77a5c561934e089  
    </value>  
  </resheader>  
  <data name="DataSample" xml:space="preserve">  
    <value>Sample DATA value</value>  
  </data>  
  <metadata name="MetadataSample">  
    <value>Sample METADATA value</value>  
  </metadata>  
</root>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Bei einem Set-Vorgang ist der Enumerator für die Ressourcendatei oder den Stream bereits offen.</exception>
      </Docs>
    </Member>
  </Members>
</Type>
