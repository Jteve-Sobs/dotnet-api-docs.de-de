<Type Name="ResourceReader" FullName="System.Resources.ResourceReader">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="bd0cb8c8f9bab7b3d360dd2941d7f05aafb1edf5" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37472455" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class ResourceReader : System.Resources.IResourceReader" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ResourceReader extends System.Object implements class System.Collections.IEnumerable, class System.IDisposable, class System.Resources.IResourceReader" />
  <TypeSignature Language="DocId" Value="T:System.Resources.ResourceReader" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ResourceReader&#xA;Implements IResourceReader" />
  <TypeSignature Language="C++ CLI" Value="public ref class ResourceReader sealed : System::Resources::IResourceReader" />
  <TypeSignature Language="F#" Value="type ResourceReader = class&#xA;    interface IResourceReader&#xA;    interface IEnumerable&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Resources.Reader</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Resources.ResourceManager</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Resources.IResourceReader</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="be4ff-101">Enumerates the resources in a binary resources (.resources) file by reading sequential resource name/value pairs.</span>
      <span class="sxs-lookup">
        <span data-stu-id="be4ff-101">Enumerates the resources in a binary resources (.resources) file by reading sequential resource name/value pairs.</span>
      </span>
      <span data-ttu-id="be4ff-102">**Security Note**: Calling methods in this class with untrusted data is a security risk.</span>
      <span class="sxs-lookup">
        <span data-stu-id="be4ff-102">**Security Note**: Calling methods in this class with untrusted data is a security risk.</span>
      </span>
      <span data-ttu-id="be4ff-103">Call the methods in the class only with trusted data.</span>
      <span class="sxs-lookup">
        <span data-stu-id="be4ff-103">Call the methods in the class only with trusted data.</span>
      </span>
      <span data-ttu-id="be4ff-104">For more information, see [Untrusted Data Security Risks](https://docs.com/rick-anderson-1/8710/untrusted-data-security-risks).</span>
      <span class="sxs-lookup">
        <span data-stu-id="be4ff-104">For more information, see [Untrusted Data Security Risks](https://docs.com/rick-anderson-1/8710/untrusted-data-security-risks).</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="be4ff-105">Die <xref:System.Resources.ResourceReader> -Klasse stellt eine Standardimplementierung von der <xref:System.Resources.IResourceReader> Schnittstelle.</span><span class="sxs-lookup"><span data-stu-id="be4ff-105">The <xref:System.Resources.ResourceReader> class provides a standard implementation of the <xref:System.Resources.IResourceReader> interface.</span></span> <span data-ttu-id="be4ff-106">Ein <xref:System.Resources.ResourceReader> Instanz darstellt, entweder eine eigenständige RESOURCES-Datei oder eine RESOURCES-Datei, die in einer Assembly eingebettet ist.</span><span class="sxs-lookup"><span data-stu-id="be4ff-106">A <xref:System.Resources.ResourceReader> instance represents either a standalone .resources file or a .resources file that is embedded in an assembly.</span></span> <span data-ttu-id="be4ff-107">Es wird zum Auflisten von Ressourcen in eine RESOURCES-Datei und Abrufen von dessen Name/Wert-Paaren.</span><span class="sxs-lookup"><span data-stu-id="be4ff-107">It is used to enumerate the resources in a .resources file and retrieve its name/value pairs.</span></span> <span data-ttu-id="be4ff-108">Es unterscheidet sich von der <xref:System.Resources.ResourceManager> -Klasse, die mit dem angegebene benannten Ressourcen aus einer RESOURCES-Datei abgerufen, die in einer Assembly eingebettet ist.</span><span class="sxs-lookup"><span data-stu-id="be4ff-108">It differs from the <xref:System.Resources.ResourceManager> class, which is used to retrieve specified named resources from a .resources file that is embedded in an assembly.</span></span> <span data-ttu-id="be4ff-109">Die <xref:System.Resources.ResourceManager> Klasse dient zum Abrufen von Ressourcen, deren Namen im Voraus bekannt sind, während die <xref:System.Resources.ResourceReader> -Klasse ist hilfreich zum Abrufen von Ressourcen, deren Anzahl oder den genauen Namen sind zum Zeitpunkt der Kompilierung nicht bekannt.</span><span class="sxs-lookup"><span data-stu-id="be4ff-109">The <xref:System.Resources.ResourceManager> class is used to retrieve resources whose names are known in advance, whereas the <xref:System.Resources.ResourceReader> class is useful for retrieving resources whose number or precise names are not known at compile time.</span></span> <span data-ttu-id="be4ff-110">Beispielsweise kann eine Anwendung eine Ressourcendatei verwenden, um Konfigurationsinformationen zu speichern, die organisiert werden, in den Abschnitten und Elemente in einem Abschnitt, in dem die Anzahl von Abschnitten oder Elemente in einem Abschnitt im Voraus nicht bekannt ist.</span><span class="sxs-lookup"><span data-stu-id="be4ff-110">For example, an application may use a resources file to store configuration information that is organized into sections and items in a section, where the number of sections or items in a section is not known in advance.</span></span> <span data-ttu-id="be4ff-111">Ressourcen können dann generisch benannt werden (z. B. `Section1`, `Section1Item1`, `Section1Item2`usw.) und abgerufen, indem Sie mit einer <xref:System.Resources.ResourceReader> Objekt.</span><span class="sxs-lookup"><span data-stu-id="be4ff-111">Resources can then be named generically (such as `Section1`, `Section1Item1`, `Section1Item2`, and so on) and retrieved by using a <xref:System.Resources.ResourceReader> object.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="be4ff-112">Dieser Typ implementiert die <xref:System.IDisposable> Schnittstelle.</span><span class="sxs-lookup"><span data-stu-id="be4ff-112">This type implements the <xref:System.IDisposable> interface.</span></span> <span data-ttu-id="be4ff-113">Wenn Sie mit dem Typ haben, sollten Sie es entweder direkt oder indirekt freigeben.</span><span class="sxs-lookup"><span data-stu-id="be4ff-113">When you have finished using the type, you should dispose of it either directly or indirectly.</span></span> <span data-ttu-id="be4ff-114">Damit des Typs direkt freigegeben werden, rufen Sie die <xref:System.IDisposable.Dispose%2A> -Methode in einer `try` / `catch` Block.</span><span class="sxs-lookup"><span data-stu-id="be4ff-114">To dispose of the type directly, call its <xref:System.IDisposable.Dispose%2A> method in a `try`/`catch` block.</span></span> <span data-ttu-id="be4ff-115">Um sie indirekt löschen, verwenden Sie ein Sprachkonstrukt wie `using` (in c#) oder `Using` (in Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="be4ff-115">To dispose of it indirectly, use a language construct such as `using` (in C#) or `Using` (in Visual Basic).</span></span> <span data-ttu-id="be4ff-116">Weitere Informationen finden Sie im Abschnitt "mithilfe von ein-Objekt, das implementiert" IDisposable "" in der <xref:System.IDisposable> schnittstellenthema.</span><span class="sxs-lookup"><span data-stu-id="be4ff-116">For more information, see the "Using an Object that Implements IDisposable" section in the <xref:System.IDisposable> interface topic.</span></span>  
  
 <span data-ttu-id="be4ff-117">Weitere Informationen zur Verwendung der <xref:System.Resources.ResourceReader> Klasse, finden Sie unter den folgenden Abschnitten:</span><span class="sxs-lookup"><span data-stu-id="be4ff-117">For more information about using the <xref:System.Resources.ResourceReader> class, see the following sections:</span></span>  
  
-   [<span data-ttu-id="be4ff-118">Instanziieren eines Objekts ResourceReader</span><span class="sxs-lookup"><span data-stu-id="be4ff-118">Instantiating a ResourceReader object</span></span>](#instantiate)  
  
-   [<span data-ttu-id="be4ff-119">Auflisten von Ressourcen des Objekts ein ResourceReader</span><span class="sxs-lookup"><span data-stu-id="be4ff-119">Enumerating a ResourceReader object's resources</span></span>](#enumerate)  
  
    -   [<span data-ttu-id="be4ff-120">Abrufen von Ressourcen mithilfe von IDictionaryEnumerator-Eigenschaften</span><span class="sxs-lookup"><span data-stu-id="be4ff-120">Retrieving resources by using IDictionaryEnumerator properties</span></span>](#idictionaryenumerator)  
  
    -   [<span data-ttu-id="be4ff-121">Abrufen von Ressourcen anhand des Namens mit GetResourceData</span><span class="sxs-lookup"><span data-stu-id="be4ff-121">Retrieving resources by name with GetResourceData</span></span>](#getresourcedata)  
  
<a name="instantiate"></a>   
## <a name="instantiating-a-resourcereader-object"></a><span data-ttu-id="be4ff-122">Instanziieren eines Objekts ResourceReader</span><span class="sxs-lookup"><span data-stu-id="be4ff-122">Instantiating a ResourceReader Object</span></span>  
 <span data-ttu-id="be4ff-123">Eine RESOURCES-Datei ist eine binäre Datei, die entweder aus einer Textdatei oder durch eine XML-RESX-Datei kompiliert wurde [Resgen.exe (Resource File Generator)](~/docs/framework/tools/resgen-exe-resource-file-generator.md).</span><span class="sxs-lookup"><span data-stu-id="be4ff-123">A .resources file is a binary file that has been compiled from either a text file or an XML .resx file by [Resgen.exe (Resource File Generator)](~/docs/framework/tools/resgen-exe-resource-file-generator.md).</span></span> <span data-ttu-id="be4ff-124">Ein <xref:System.Resources.ResourceReader> Objekt kann entweder eine eigenständige RESOURCES-Datei oder eine RESOURCES-Datei, die in einer Assembly eingebettet wurde darstellen.</span><span class="sxs-lookup"><span data-stu-id="be4ff-124">A <xref:System.Resources.ResourceReader> object can represent either a standalone .resources file or a .resources file that has been embedded in an assembly.</span></span>  
  
 <span data-ttu-id="be4ff-125">Instanziiert eine <xref:System.Resources.ResourceReader> Objekt, mit dem Lesevorgänge von eigenständigen .resources-Datei, die <xref:System.Resources.ResourceReader> Konstruktor der Klasse mit einem Eingabestream oder eine Zeichenfolge, die Namen der RESOURCES-Datei enthält.</span><span class="sxs-lookup"><span data-stu-id="be4ff-125">To instantiate a <xref:System.Resources.ResourceReader> object that reads from a standalone .resources file, use the <xref:System.Resources.ResourceReader> class constructor with either an input stream or a string that contains the .resources file name.</span></span> <span data-ttu-id="be4ff-126">Das folgende Beispiel zeigt beide Ansätze.</span><span class="sxs-lookup"><span data-stu-id="be4ff-126">The following example illustrates both approaches.</span></span> <span data-ttu-id="be4ff-127">Die erste instanziiert ein <xref:System.Resources.ResourceReader> Objekt, das eine RESOURCES-Datei mit dem Namen darstellt `Resources1.resources` unter Verwendung des Dateinamens.</span><span class="sxs-lookup"><span data-stu-id="be4ff-127">The first instantiates a <xref:System.Resources.ResourceReader> object that represents a .resources file named `Resources1.resources` by using its file name.</span></span> <span data-ttu-id="be4ff-128">Die zweite instanziiert ein <xref:System.Resources.ResourceReader> Objekt, das eine RESOURCES-Datei mit dem Namen darstellt `Resources2.resources` mithilfe eines Datenstroms, der aus der Datei erstellt.</span><span class="sxs-lookup"><span data-stu-id="be4ff-128">The second instantiates a <xref:System.Resources.ResourceReader> object that represents a .resources file named `Resources2.resources` by using a stream created from the file.</span></span>  
  
 [!code-csharp[System.Resources.ResourceReader.Class#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.resources.resourcereader.class/cs/ctor1.cs#2)]
 [!code-vb[System.Resources.ResourceReader.Class#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.resources.resourcereader.class/vb/ctor1.vb#2)]  
  
 <span data-ttu-id="be4ff-129">Zum Erstellen einer <xref:System.Resources.ResourceReader> instanziieren-Objekt, das eine eingebettete RESOURCES-Datei, stellt eine <xref:System.Reflection.Assembly> Objekt aus der Assembly, in dem die RESOURCES-Datei eingebettet ist.</span><span class="sxs-lookup"><span data-stu-id="be4ff-129">To create a <xref:System.Resources.ResourceReader> object that represents an embedded .resources file, instantiate an <xref:System.Reflection.Assembly> object from the assembly in which the .resources file is embedded.</span></span> <span data-ttu-id="be4ff-130">Die <xref:System.Reflection.Assembly.GetManifestResourceStream%2A?displayProperty=nameWithType> Methode gibt eine <xref:System.IO.Stream> -Objekt, das übergeben werden kann die <xref:System.Resources.ResourceReader.%23ctor%28System.IO.Stream%29> Konstruktor.</span><span class="sxs-lookup"><span data-stu-id="be4ff-130">Its <xref:System.Reflection.Assembly.GetManifestResourceStream%2A?displayProperty=nameWithType> method returns a <xref:System.IO.Stream> object that can be passed to the <xref:System.Resources.ResourceReader.%23ctor%28System.IO.Stream%29> constructor.</span></span> <span data-ttu-id="be4ff-131">Das folgende Beispiel instanziiert ein <xref:System.Resources.ResourceReader> -Objekt, das eine eingebettete RESOURCES-Datei darstellt.</span><span class="sxs-lookup"><span data-stu-id="be4ff-131">The following example instantiates a <xref:System.Resources.ResourceReader> object that represents an embedded .resources file.</span></span>  
  
 [!code-csharp[System.Resources.ResourceReader.Class#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.resources.resourcereader.class/cs/ctor1.cs#3)]
 [!code-vb[System.Resources.ResourceReader.Class#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.resources.resourcereader.class/vb/ctor1.vb#3)]  
  
<a name="enumerate"></a>   
## <a name="enumerating-a-resourcereader-objects-resources"></a><span data-ttu-id="be4ff-132">Auflisten von Ressourcen des Objekts ein ResourceReader</span><span class="sxs-lookup"><span data-stu-id="be4ff-132">Enumerating a ResourceReader Object's Resources</span></span>  
 <span data-ttu-id="be4ff-133">Rufen Sie zum Auflisten von Ressourcen in eine RESOURCES-Datei der <xref:System.Resources.ResourceReader.GetEnumerator%2A> -Methode, die gibt ein <xref:System.Collections.IDictionaryEnumerator?displayProperty=nameWithType> Objekt.</span><span class="sxs-lookup"><span data-stu-id="be4ff-133">To enumerate the resources in a .resources file, you call the <xref:System.Resources.ResourceReader.GetEnumerator%2A> method, which returns an <xref:System.Collections.IDictionaryEnumerator?displayProperty=nameWithType> object.</span></span> <span data-ttu-id="be4ff-134">Rufen Sie die `IDictionaryEnumerator.MoveNext` Methode, um aus einer Ressource zum nächsten zu wechseln.</span><span class="sxs-lookup"><span data-stu-id="be4ff-134">You call the `IDictionaryEnumerator.MoveNext` method to move from one resource to the next.</span></span> <span data-ttu-id="be4ff-135">Gibt die Methode zurück `false` Wenn haben alle Ressourcen in die RESOURCES-Datei aufgelistet wurden.</span><span class="sxs-lookup"><span data-stu-id="be4ff-135">The method returns `false` when all the resources in the .resources file have been enumerated.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="be4ff-136">Obwohl die <xref:System.Resources.ResourceReader> -Klasse implementiert die <xref:System.Collections.IEnumerable> Schnittstelle und die <xref:System.Collections.IEnumerable.GetEnumerator%2A?displayProperty=nameWithType> -Methode, die <xref:System.Resources.ResourceReader.GetEnumerator%2A?displayProperty=nameWithType> Methode bietet keine die <xref:System.Collections.IEnumerable.GetEnumerator%2A?displayProperty=nameWithType> Implementierung.</span><span class="sxs-lookup"><span data-stu-id="be4ff-136">Although the <xref:System.Resources.ResourceReader> class implements the <xref:System.Collections.IEnumerable> interface and the <xref:System.Collections.IEnumerable.GetEnumerator%2A?displayProperty=nameWithType> method, the <xref:System.Resources.ResourceReader.GetEnumerator%2A?displayProperty=nameWithType> method does not provide the <xref:System.Collections.IEnumerable.GetEnumerator%2A?displayProperty=nameWithType> implementation.</span></span> <span data-ttu-id="be4ff-137">Stattdessen die <xref:System.Resources.ResourceReader.GetEnumerator%2A?displayProperty=nameWithType> Methode gibt ein <xref:System.Collections.IDictionaryEnumerator> Schnittstellenobjekts, das Zugriff auf jede Ressource Name-Wert-Paar bereitstellt.</span><span class="sxs-lookup"><span data-stu-id="be4ff-137">Instead, the <xref:System.Resources.ResourceReader.GetEnumerator%2A?displayProperty=nameWithType> method  returns an <xref:System.Collections.IDictionaryEnumerator> interface object that provides access to each resource's name/value pair.</span></span>  
  
 <span data-ttu-id="be4ff-138">Sie können die einzelnen Ressourcen in der Auflistung auf zwei Arten abrufen:</span><span class="sxs-lookup"><span data-stu-id="be4ff-138">You can retrieve the individual resources in the collection in two ways:</span></span>  
  
-   <span data-ttu-id="be4ff-139">Sie können jede Ressource im Durchlaufen der <xref:System.Collections.IDictionaryEnumerator?displayProperty=nameWithType> Erfassung und Verwendung <xref:System.Collections.IDictionaryEnumerator?displayProperty=nameWithType> Eigenschaften zum Abrufen der Resource-Name und Wert.</span><span class="sxs-lookup"><span data-stu-id="be4ff-139">You can iterate each resource in the <xref:System.Collections.IDictionaryEnumerator?displayProperty=nameWithType> collection and use <xref:System.Collections.IDictionaryEnumerator?displayProperty=nameWithType> properties to retrieve the resource name and value.</span></span> <span data-ttu-id="be4ff-140">Diese Methode wird empfohlen, wenn alle Ressourcen, die vom gleichen Typ sind, oder Sie wissen, dass den Datentyp der einzelnen Ressourcen.</span><span class="sxs-lookup"><span data-stu-id="be4ff-140">We recommend this technique when all the resources are of the same type, or you know the data type of each resource.</span></span>  
  
-   <span data-ttu-id="be4ff-141">Sie können den Namen der einzelnen Ressourcen abrufen, wenn Sie durchlaufen die <xref:System.Collections.IDictionaryEnumerator?displayProperty=nameWithType> Sammlung, und rufen die <xref:System.Resources.ResourceReader.GetResourceData%2A> Methode, um die Daten der Ressource abzurufen.</span><span class="sxs-lookup"><span data-stu-id="be4ff-141">You can retrieve the name of each resource when you iterate the <xref:System.Collections.IDictionaryEnumerator?displayProperty=nameWithType> collection and call the <xref:System.Resources.ResourceReader.GetResourceData%2A> method to retrieve the resource's data.</span></span> <span data-ttu-id="be4ff-142">Dieser Ansatz wird empfohlen, wenn Sie nicht, dass den Datentyp der einzelnen Ressourcen wissen oder der vorherige Ansatz, Ausnahmen auslöst.</span><span class="sxs-lookup"><span data-stu-id="be4ff-142">We recommend this approach when you do not know the data type of each resource or if the previous approach throws exceptions.</span></span>  
  
<a name="idictionaryenumerator"></a>   
### <a name="retrieving-resources-by-using-idictionaryenumerator-properties"></a><span data-ttu-id="be4ff-143">Abrufen von Ressourcen mithilfe von IDictionaryEnumerator-Eigenschaften</span><span class="sxs-lookup"><span data-stu-id="be4ff-143">Retrieving Resources by Using IDictionaryEnumerator Properties</span></span>  
 <span data-ttu-id="be4ff-144">Die erste Methode zum Auflisten von Ressourcen in eine RESOURCES-Datei wird direkt jeder Ressource Name/Wert-Paar.</span><span class="sxs-lookup"><span data-stu-id="be4ff-144">The first method of enumerating the resources in a .resources file involves directly retrieving each resource's name/value pair.</span></span> <span data-ttu-id="be4ff-145">Nach dem Aufrufen der `IDictionaryEnumerator.MoveNext` -Methode auf jede Ressource in der Auflistung zu verschieben, können Sie abrufen, die Ressource zu benennen, aus der <xref:System.Collections.IDictionaryEnumerator.Key%2A?displayProperty=nameWithType> -Eigenschaft und die Ressourcendaten aus der <xref:System.Collections.IDictionaryEnumerator.Value%2A?displayProperty=nameWithType> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="be4ff-145">After you call the `IDictionaryEnumerator.MoveNext` method to move to each resource in the collection, you can retrieve the resource name from the <xref:System.Collections.IDictionaryEnumerator.Key%2A?displayProperty=nameWithType> property and the resource data from the <xref:System.Collections.IDictionaryEnumerator.Value%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="be4ff-146">Das folgende Beispiel zeigt, wie zum Abrufen von Name und Wert der einzelnen Ressourcen in eine RESOURCES-Datei mithilfe der <xref:System.Collections.IDictionaryEnumerator.Key%2A?displayProperty=nameWithType> und <xref:System.Collections.IDictionaryEnumerator.Value%2A?displayProperty=nameWithType> Eigenschaften.</span><span class="sxs-lookup"><span data-stu-id="be4ff-146">The following example shows how to retrieve the name and value of each resource in a .resources file by using the <xref:System.Collections.IDictionaryEnumerator.Key%2A?displayProperty=nameWithType> and <xref:System.Collections.IDictionaryEnumerator.Value%2A?displayProperty=nameWithType> properties.</span></span> <span data-ttu-id="be4ff-147">Um das Beispiel auszuführen, erstellen Sie die folgende Textdatei, die mit dem Namen ApplicationResources.txt Zeichenfolgenressourcen definieren.</span><span class="sxs-lookup"><span data-stu-id="be4ff-147">To run the example, create the following text file named ApplicationResources.txt to define string resources.</span></span>  
  
```  
Title="Contact Information"  
Label1="First Name:"  
Label2="Middle Name:"  
Label3="Last Name:"  
Label4="SSN:"  
Label5="Street Address:"  
Label6="City:"  
Label7="State:"  
Label8="Zip Code:"  
Label9="Home Phone:"  
Label10="Business Phone:"  
Label11="Mobile Phone:"  
Label12="Other Phone:"  
Label13="Fax:"  
Label14="Email Address:"  
Label15="Alternate Email Address:"  
```  
  
 <span data-ttu-id="be4ff-148">Sie können dann die Text-Ressourcendatei in eine Binärdatei, die mit dem Namen ApplicationResources.resources mithilfe des folgenden Befehls konvertieren:</span><span class="sxs-lookup"><span data-stu-id="be4ff-148">You can then convert the text resource file to a binary file named ApplicationResources.resources by using the following command:</span></span>  
  
 <span data-ttu-id="be4ff-149">**Resgen ApplicationResources.txt**</span><span class="sxs-lookup"><span data-stu-id="be4ff-149">**resgen ApplicationResources.txt**</span></span>  
  
 <span data-ttu-id="be4ff-150">Im folgenden Beispiel wird, klicken Sie dann die <xref:System.Resources.ResourceReader> Klasse, um jede Ressource in der eigenständigen binäre RESOURCES-Datei aufgelistet werden und um die Schlüsselnamen und den entsprechenden Wert anzuzeigen.</span><span class="sxs-lookup"><span data-stu-id="be4ff-150">The following example then uses the <xref:System.Resources.ResourceReader> class to enumerate each resource in the standalone binary .resources file and to display its key name and corresponding value.</span></span>  
  
 [!code-csharp[System.Resources.ResourceReader.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.resources.resourcereader.class/cs/class1.cs#1)]
 [!code-vb[System.Resources.ResourceReader.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.resources.resourcereader.class/vb/class1.vb#1)]  
  
 <span data-ttu-id="be4ff-151">Der Versuch zum Abrufen von Ressourcendaten aus der <xref:System.Collections.IDictionaryEnumerator.Value%2A?displayProperty=nameWithType> Eigenschaft kann die folgenden Ausnahmen auslösen:</span><span class="sxs-lookup"><span data-stu-id="be4ff-151">The attempt to retrieve resource data from the <xref:System.Collections.IDictionaryEnumerator.Value%2A?displayProperty=nameWithType> property can throw the following exceptions:</span></span>  
  
-   <span data-ttu-id="be4ff-152">Ein <xref:System.FormatException> ist die Daten nicht im erwarteten Format.</span><span class="sxs-lookup"><span data-stu-id="be4ff-152">A <xref:System.FormatException> if the data is not in the expected format.</span></span>  
  
-   <span data-ttu-id="be4ff-153">Ein <xref:System.IO.FileNotFoundException> , wenn die Assembly, die den Typ enthält, die Daten gehören, nicht gefunden werden kann.</span><span class="sxs-lookup"><span data-stu-id="be4ff-153">A <xref:System.IO.FileNotFoundException> if the assembly that contains the type to which the data belongs cannot be found.</span></span>  
  
-   <span data-ttu-id="be4ff-154">Ein <xref:System.TypeLoadException> , wenn der Typ, der die Daten gehören, nicht werden wurde nicht gefunden.</span><span class="sxs-lookup"><span data-stu-id="be4ff-154">A <xref:System.TypeLoadException> if the type to which the data belongs cannot be cannot be found.</span></span>  
  
 <span data-ttu-id="be4ff-155">In der Regel sind diese Ausnahmen ausgelöst, wenn die RESOURCES-Datei manuell geändert wurde, wenn die Assembly, in der ein Typ definiert ist, entweder nicht in einer Anwendung enthalten wurde, oder versehentlich gelöscht wurde oder die Assembly mit einer älteren Version vorliegt, die ist ein Vorläufer des ein Typ.</span><span class="sxs-lookup"><span data-stu-id="be4ff-155">Typically, these exceptions are thrown if the .resources file has been modified manually, if the assembly in which a type is defined has either not been included with an application or has been inadvertently deleted, or if the assembly is an older version that predates a type.</span></span> <span data-ttu-id="be4ff-156">Wenn eine dieser Ausnahmen ausgelöst wird, können Sie Ressourcen abrufen, indem Auflisten von jeder Ressource und das Aufrufen der <xref:System.Resources.ResourceReader.GetResourceData%2A> Methode, wie im folgenden Abschnitt gezeigt.</span><span class="sxs-lookup"><span data-stu-id="be4ff-156">If one of these exceptions is thrown, you can retrieve resources by enumerating each resource and calling the <xref:System.Resources.ResourceReader.GetResourceData%2A> method, as the following section shows.</span></span> <span data-ttu-id="be4ff-157">Dieser Ansatz bietet Sie einige Informationen zu den Daten eingeben, die die <xref:System.Collections.IDictionaryEnumerator.Value%2A?displayProperty=nameWithType> versucht-Eigenschaft zurück.</span><span class="sxs-lookup"><span data-stu-id="be4ff-157">This approach provides you with some information about the data type that the <xref:System.Collections.IDictionaryEnumerator.Value%2A?displayProperty=nameWithType> property attempted to return.</span></span>  
  
<a name="getresourcedata"></a>   
### <a name="retrieving-resources-by-name-with-getresourcedata"></a><span data-ttu-id="be4ff-158">Abrufen von Ressourcen anhand des Namens mit GetResourceData</span><span class="sxs-lookup"><span data-stu-id="be4ff-158">Retrieving Resources by Name with GetResourceData</span></span>  
 <span data-ttu-id="be4ff-159">Der zweite Ansatz zum Auflisten von Ressourcen in eine RESOURCES-Datei auch umfasst das Navigieren durch die Ressourcen in der Datei durch Aufrufen der `IDictionaryEnumerator.MoveNext` Methode.</span><span class="sxs-lookup"><span data-stu-id="be4ff-159">The second approach to enumerating resources in a .resources file also involves navigating through the resources in the file by calling the `IDictionaryEnumerator.MoveNext` method.</span></span> <span data-ttu-id="be4ff-160">Für jede Ressource, rufen Sie den Namen der Ressource aus der <xref:System.Collections.IDictionaryEnumerator.Key%2A?displayProperty=nameWithType> -Eigenschaft, die dann an die <xref:System.Resources.ResourceReader.GetResourceData%28System.String%2CSystem.String%40%2CSystem.Byte%5B%5D%40%29> Methode, um die Daten der Ressource abzurufen.</span><span class="sxs-lookup"><span data-stu-id="be4ff-160">For each resource, you retrieve the resource's name from the <xref:System.Collections.IDictionaryEnumerator.Key%2A?displayProperty=nameWithType> property, which is then passed to the <xref:System.Resources.ResourceReader.GetResourceData%28System.String%2CSystem.String%40%2CSystem.Byte%5B%5D%40%29> method to retrieve the resource's data.</span></span> <span data-ttu-id="be4ff-161">Als Byte-Array im Rückgabewert die `resourceData` Argument.</span><span class="sxs-lookup"><span data-stu-id="be4ff-161">This is returned as a byte array in the `resourceData` argument.</span></span>  
  
 <span data-ttu-id="be4ff-162">Dieser Ansatz ist umständlicher als das Abrufen von den Ressourcennamen und der Wert aus der <xref:System.Collections.IDictionaryEnumerator.Key%2A?displayProperty=nameWithType> und <xref:System.Collections.IDictionaryEnumerator.Value%2A?displayProperty=nameWithType> Eigenschaften, da es sich um die tatsächlichen Bytes zurückgibt, die den Ressourcenwert bilden.</span><span class="sxs-lookup"><span data-stu-id="be4ff-162">This approach is more awkward than retrieving the resource name and value from the <xref:System.Collections.IDictionaryEnumerator.Key%2A?displayProperty=nameWithType> and <xref:System.Collections.IDictionaryEnumerator.Value%2A?displayProperty=nameWithType> properties, because it returns the actual bytes that form the resource value.</span></span> <span data-ttu-id="be4ff-163">Jedoch, wenn der Versuch zum Abrufen der Ressource eine Ausnahme auslöst, die <xref:System.Resources.ResourceReader.GetResourceData%2A> Methode können Sie identifizieren die Quelle der Ausnahme durch Angabe von Informationen zu Datentyp der Ressource.</span><span class="sxs-lookup"><span data-stu-id="be4ff-163">However, if the attempt to retrieve the resource throws an exception, the <xref:System.Resources.ResourceReader.GetResourceData%2A> method can help identify the source of the exception by supplying information about the resource's data type.</span></span> <span data-ttu-id="be4ff-164">Weitere Informationen zu die Zeichenfolge, die den Datentyp der Ressource angibt, finden Sie unter <xref:System.Resources.ResourceReader.GetResourceData%2A>.</span><span class="sxs-lookup"><span data-stu-id="be4ff-164">For more information about the string that indicates the resource's data type, see <xref:System.Resources.ResourceReader.GetResourceData%2A>.</span></span>  
  
 <span data-ttu-id="be4ff-165">Das folgende Beispiel veranschaulicht, wie Sie diesen Ansatz verwenden, um Ressourcen abzurufen und um alle Ausnahmen zu behandeln, die ausgelöst werden.</span><span class="sxs-lookup"><span data-stu-id="be4ff-165">The following example illustrates how to use this approach to retrieve resources and to handle any exceptions that are thrown.</span></span> <span data-ttu-id="be4ff-166">Es erstellt programmgesteuert eine binäre RESOURCES-Datei mit vier Zeichenfolgen, ein boolescher Wert, eine ganze Zahl, eine Bitmap und benutzerdefinierte `DateTimeTZI` Objekt.</span><span class="sxs-lookup"><span data-stu-id="be4ff-166">It programmatically creates a binary .resources file that contains four strings, one Boolean, one integer, one bitmap, and one custom `DateTimeTZI` object.</span></span> <span data-ttu-id="be4ff-167">Um das Beispiel auszuführen, führen Sie folgende Schritte aus:</span><span class="sxs-lookup"><span data-stu-id="be4ff-167">To run the example, do the following:</span></span>  
  
1.  <span data-ttu-id="be4ff-168">Erstellen Sie eine Assembly mit dem Namen Library.dll, die enthält die `DateTimeTZI` Struktur.</span><span class="sxs-lookup"><span data-stu-id="be4ff-168">Create an assembly named Library.dll that contains the `DateTimeTZI` structure.</span></span> <span data-ttu-id="be4ff-169">Folgendes ist der Quellcode für die Assembly.</span><span class="sxs-lookup"><span data-stu-id="be4ff-169">The following is the source code for the assembly.</span></span>  
  
     [!code-csharp[System.Resources.ResourceReader.Class#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.resources.resourcereader.class/cs/library.cs#4)]
     [!code-vb[System.Resources.ResourceReader.Class#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.resources.resourcereader.class/vb/library.vb#4)]  
  
     <span data-ttu-id="be4ff-170">Kompilieren Sie den Quellcode in c# mithilfe des folgenden Befehls:</span><span class="sxs-lookup"><span data-stu-id="be4ff-170">Compile the source code in C# by using the following command:</span></span>  
  
    ```  
    csc /t:library library.cs  
    ```  
  
     <span data-ttu-id="be4ff-171">Oder Sie können es in Visual Basic kompilieren, mithilfe des folgenden Befehls:</span><span class="sxs-lookup"><span data-stu-id="be4ff-171">Or, you can compile it in Visual Basic by using the following command:</span></span>  
  
    ```  
    vbc library.vb /t:library  
    ```  
  
2.  <span data-ttu-id="be4ff-172">Kompilieren Sie und führen Sie den folgenden Quellcode, der eine RESOURCES-Datei mit dem Namen ContactResources.resources erstellt.</span><span class="sxs-lookup"><span data-stu-id="be4ff-172">Compile and execute the following source code, which creates a .resources file named ContactResources.resources.</span></span>  
  
     [!code-csharp[System.Resources.ResourceReader.Class#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.resources.resourcereader.class/cs/createresourceex1.cs#5)]
     [!code-vb[System.Resources.ResourceReader.Class#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.resources.resourcereader.class/vb/createresourceex1.vb#5)]  
  
     <span data-ttu-id="be4ff-173">Die Quellcodedatei Namen CreateResources.cs.</span><span class="sxs-lookup"><span data-stu-id="be4ff-173">The source code file is named CreateResources.cs.</span></span> <span data-ttu-id="be4ff-174">Sie können es in C# -Code kompilieren, mithilfe des folgenden Befehls:</span><span class="sxs-lookup"><span data-stu-id="be4ff-174">You can compile it in C# by using the following command:</span></span>  
  
    ```  
    csc CreateResources.cs /r:library.dll  
    ```  
  
     <span data-ttu-id="be4ff-175">Oder Sie können es in Visual Basic kompilieren, mithilfe des folgenden Befehls:</span><span class="sxs-lookup"><span data-stu-id="be4ff-175">Or, you can compile it in Visual Basic by using the following command:</span></span>  
  
    ```  
    vbc CreateResources.vb /r:library.dll  
    ```  
  
3.  <span data-ttu-id="be4ff-176">Kompilieren Sie und führen Sie den folgenden Code zum Auflisten der Ressourcen in der Datei ContactResources.resources.</span><span class="sxs-lookup"><span data-stu-id="be4ff-176">Compile and run the following code to enumerate the resources in the ContactResources.resources file.</span></span>  
  
     [!code-csharp[System.Resources.ResourceReader.Class#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.resources.resourcereader.class/cs/readresourceex1.cs#6)]
     [!code-vb[System.Resources.ResourceReader.Class#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.resources.resourcereader.class/vb/readresourceex1.vb#6)]  
  
     <span data-ttu-id="be4ff-177">Nach der Änderung des Quellcodes (z. B. durch Auslösen von absichtlich eine <xref:System.FormatException> am Ende der `try` Block) oder Umbenennen von der Assembly Library.dll, damit es zur Laufzeit nicht verfügbar ist, können Sie das Beispiel finden Sie unter ausführen wie Aufrufe von <xref:System.Resources.ResourceReader.GetResourceData%2A> ermöglichen Sie abrufen oder erstellen Sie einige Informationen zur Ressource neu.</span><span class="sxs-lookup"><span data-stu-id="be4ff-177">After modifying the source code (for example, by deliberately throwing a <xref:System.FormatException> at the end of the `try` block) or renaming the Library.dll assembly so that it is unavailable at runtime, you can run the example to see how calls to <xref:System.Resources.ResourceReader.GetResourceData%2A> enable you to retrieve or recreate some resource information.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Resources.Reader</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="be4ff-178">Initializes a new instance of the <see cref="T:System.Resources.ResourceReader" /> class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be4ff-178">Initializes a new instance of the <see cref="T:System.Resources.ResourceReader" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="be4ff-179">Verwenden eine Instanz dieses Objekts mit nicht vertrauenswürdigen Daten stellt ein Sicherheitsrisiko dar.</span><span class="sxs-lookup"><span data-stu-id="be4ff-179">Using an instance of this object with untrusted data is a security risk.</span></span> <span data-ttu-id="be4ff-180">Verwenden Sie dieses Objekt nur mit vertrauenswürdigen Daten.</span><span class="sxs-lookup"><span data-stu-id="be4ff-180">Use this object only with trusted data.</span></span> <span data-ttu-id="be4ff-181">Weitere Informationen finden Sie unter [Datenüberprüfung](https://www.owasp.org/index.php/Data_Validation).</span><span class="sxs-lookup"><span data-stu-id="be4ff-181">For more information, see [Data Validation](https://www.owasp.org/index.php/Data_Validation).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ResourceReader (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResourceReader.#ctor(System.IO.Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ResourceReader(System::IO::Stream ^ stream);" />
      <MemberSignature Language="F#" Value="new System.Resources.ResourceReader : System.IO.Stream -&gt; System.Resources.ResourceReader" Usage="new System.Resources.ResourceReader stream" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Resources.Reader</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="stream">
          <span data-ttu-id="be4ff-182">The input stream for reading resources.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be4ff-182">The input stream for reading resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="be4ff-183">Initializes a new instance of the <see cref="T:System.Resources.ResourceReader" /> class for the specified stream.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be4ff-183">Initializes a new instance of the <see cref="T:System.Resources.ResourceReader" /> class for the specified stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="be4ff-184">Die <xref:System.Resources.ResourceReader.%23ctor%28System.IO.Stream%29> Konstruktor instanziiert ein <xref:System.Resources.ResourceReader> -Objekt, das Ressourcen abruft, eigenständige RESOURCES-Datei oder auf einem resources-Datei, die, in einer Assembly eingebettet.</span><span class="sxs-lookup"><span data-stu-id="be4ff-184">The <xref:System.Resources.ResourceReader.%23ctor%28System.IO.Stream%29> constructor instantiates a <xref:System.Resources.ResourceReader> object that retrieves resources either from a standalone .resources file or from a .resources file that is embedded in an assembly.</span></span> <span data-ttu-id="be4ff-185">Um eine eigenständige RESOURCES-Datei lesen zu können, instanziieren Sie ein <xref:System.IO.Stream> -Objekt und übergeben Sie sie an der <xref:System.Resources.ResourceReader.%23ctor%28System.IO.Stream%29> Konstruktor.</span><span class="sxs-lookup"><span data-stu-id="be4ff-185">To read from a standalone .resources file, instantiate a <xref:System.IO.Stream> object and pass it to the <xref:System.Resources.ResourceReader.%23ctor%28System.IO.Stream%29> constructor.</span></span> <span data-ttu-id="be4ff-186">Um eine eingebettete RESOURCES-Datei zu lesen, rufen Sie die <xref:System.Reflection.Assembly.GetManifestResourceStream%2A?displayProperty=nameWithType> Methode mit dem Namen Groß-/Kleinschreibung beachtet, der die RESOURCES-Datei, und übergeben Sie das zurückgegebene <xref:System.IO.Stream> -Objekt an die <xref:System.Resources.ResourceReader.%23ctor%28System.IO.Stream%29> Konstruktor.</span><span class="sxs-lookup"><span data-stu-id="be4ff-186">To read from an embedded .resources file, call the <xref:System.Reflection.Assembly.GetManifestResourceStream%2A?displayProperty=nameWithType> method with the case-sensitive name of the .resources file, and pass the returned <xref:System.IO.Stream> object to the <xref:System.Resources.ResourceReader.%23ctor%28System.IO.Stream%29> constructor.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="be4ff-187">Verwenden eine Instanz dieses Objekts mit nicht vertrauenswürdigen Daten stellt ein Sicherheitsrisiko dar.</span><span class="sxs-lookup"><span data-stu-id="be4ff-187">Using an instance of this object with untrusted data is a security risk.</span></span> <span data-ttu-id="be4ff-188">Verwenden Sie dieses Objekt nur mit vertrauenswürdigen Daten.</span><span class="sxs-lookup"><span data-stu-id="be4ff-188">Use this object only with trusted data.</span></span> <span data-ttu-id="be4ff-189">Weitere Informationen finden Sie unter [Datenüberprüfung](https://www.owasp.org/index.php/Data_Validation).</span><span class="sxs-lookup"><span data-stu-id="be4ff-189">For more information, see [Data Validation](https://www.owasp.org/index.php/Data_Validation).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="be4ff-190">Im Beispiel in diesem Abschnitt wird die folgenden txt-Datei mit dem Namen `PatientForm.txt` , die von einer Anwendung verwendeten Ressourcen zu definieren.</span><span class="sxs-lookup"><span data-stu-id="be4ff-190">The example in this section uses the following .txt file named `PatientForm.txt` to define the resources used by an application.</span></span>  
  
```  
  
Title="Top Pet Animal Clinic"  
Label1="Patient Number:"  
Label2="Pet Name:"  
Label3="Species:"  
Label4="Breed:"  
Label5="Date of Birth:"  
Label6="Age:"  
Label7="Owner:"  
Label8="Address:"  
Label9="Home Phone:"  
Label10="Work Phone:"  
Label11="Mobile Phone:"  
  
```  
  
 <span data-ttu-id="be4ff-191">Sie können die TXT-Datei in eine RESOURCES-Datei kompilieren, indem Sie den folgenden Befehl ausgeben:</span><span class="sxs-lookup"><span data-stu-id="be4ff-191">You can compile the .txt file into a .resources file by issuing the following command:</span></span>  
  
 <span data-ttu-id="be4ff-192">**Resgen PatientForm.txt**</span><span class="sxs-lookup"><span data-stu-id="be4ff-192">**resgen PatientForm.txt**</span></span>  
  
 <span data-ttu-id="be4ff-193">Im folgende Beispiel wird davon ausgegangen, dass die Ressourcendatei in der Assembly eingebettet ist, der ausführbare Code der Anwendung enthält.</span><span class="sxs-lookup"><span data-stu-id="be4ff-193">The following example assumes that the resource file is embedded in the assembly that contains the application's executable code.</span></span> <span data-ttu-id="be4ff-194">Ruft ab eine Ressourcendatei namens `PatientForm.resources` aus den aktuell ausgeführten Assemblys und zeigt den Namen und Wert der einzelnen darin enthaltenen Ressourcen.</span><span class="sxs-lookup"><span data-stu-id="be4ff-194">It retrieves a resource file named `PatientForm.resources` from the currently executing assemblies and displays the name and value of each of its resources.</span></span>  
  
 [!code-csharp[System.Resources.ResourceReader.Ctor#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.resources.resourcereader.ctor/cs/stream1.cs#1)]
 [!code-vb[System.Resources.ResourceReader.Ctor#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.resources.resourcereader.ctor/vb/stream1.vb#1)]  
  
 <span data-ttu-id="be4ff-195">Wenn das C#-Beispiel heißt `Example.cs`, Sie können es kompilieren, mithilfe des folgenden Befehls:</span><span class="sxs-lookup"><span data-stu-id="be4ff-195">If the C# example is named `Example.cs`, you can compile it by using the following command:</span></span>  
  
 <span data-ttu-id="be4ff-196">**CSC "example.cs" /res:PatientForm.resources**</span><span class="sxs-lookup"><span data-stu-id="be4ff-196">**csc Example.cs /res:PatientForm.resources**</span></span>  
  
 <span data-ttu-id="be4ff-197">Wenn die Visual Basic-Beispiel heißt `Example.vb`, Sie können es kompilieren, mithilfe des folgenden Befehls:</span><span class="sxs-lookup"><span data-stu-id="be4ff-197">If the Visual Basic example is named `Example.vb`, you can compile it by using the following command:</span></span>  
  
 <span data-ttu-id="be4ff-198">**Vbc Example.vb /res:PatientForm.resources**</span><span class="sxs-lookup"><span data-stu-id="be4ff-198">**vbc Example.vb /res:PatientForm.resources**</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="be4ff-199">The <paramref name="stream" /> parameter is not readable.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be4ff-199">The <paramref name="stream" /> parameter is not readable.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="be4ff-200">The <paramref name="stream" /> parameter is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be4ff-200">The <paramref name="stream" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="be4ff-201">An I/O error has occurred while accessing <paramref name="stream" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be4ff-201">An I/O error has occurred while accessing <paramref name="stream" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="be4ff-202">zum Bereitstellen von Serialisierungsdiensten.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be4ff-202">for providing serialization services.</span>
          </span>
          <span data-ttu-id="be4ff-203">Sicherheitsaktion: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be4ff-203">Security action: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</span>
          </span>
          <span data-ttu-id="be4ff-204">Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.SerializationFormatter" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="be4ff-204">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.SerializationFormatter" /></span>
          </span>
        </permission>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="be4ff-205">erfordert volle Vertrauenswürdigkeit für den unmittelbaren Aufrufer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be4ff-205">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="be4ff-206">Dieser Member kann nicht von teilweise vertrauenswürdigem oder transparentem Code verwendet werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be4ff-206">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Reflection.Assembly.GetManifestResourceStream(System.String)" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ResourceReader (string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResourceReader.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (fileName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ResourceReader(System::String ^ fileName);" />
      <MemberSignature Language="F#" Value="new System.Resources.ResourceReader : string -&gt; System.Resources.ResourceReader" Usage="new System.Resources.ResourceReader fileName" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fileName">
          <span data-ttu-id="be4ff-207">The path and name of the resource file to read.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be4ff-207">The path and name of the resource file to read.</span>
          </span>
          <span data-ttu-id="be4ff-208">
            <c>filename</c> is not case-sensitive.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be4ff-208">
              <c>filename</c> is not case-sensitive.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="be4ff-209">Initializes a new instance of the <see cref="T:System.Resources.ResourceReader" /> class for the specified named resource file.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be4ff-209">Initializes a new instance of the <see cref="T:System.Resources.ResourceReader" /> class for the specified named resource file.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="be4ff-210">Die <xref:System.Resources.ResourceReader.%23ctor%28System.String%29> Konstruktor instanziiert ein <xref:System.Resources.ResourceReader> -Objekt, das Ressourcen aus einer eigenständigen RESOURCES-Datei abruft.</span><span class="sxs-lookup"><span data-stu-id="be4ff-210">The <xref:System.Resources.ResourceReader.%23ctor%28System.String%29> constructor instantiates a <xref:System.Resources.ResourceReader> object that retrieves resources from a standalone .resources file.</span></span> <span data-ttu-id="be4ff-211">Verwenden Sie zum Abrufen von Ressourcen aus einer eingebetteten .resources-Datei der <xref:System.Resources.ResourceReader.%23ctor%28System.IO.Stream%29> Konstruktor.</span><span class="sxs-lookup"><span data-stu-id="be4ff-211">To retrieve resources from an embedded .resources file, use the <xref:System.Resources.ResourceReader.%23ctor%28System.IO.Stream%29> constructor.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="be4ff-212">Verwenden eine Instanz dieses Objekts mit nicht vertrauenswürdigen Daten stellt ein Sicherheitsrisiko dar.</span><span class="sxs-lookup"><span data-stu-id="be4ff-212">Using an instance of this object with untrusted data is a security risk.</span></span> <span data-ttu-id="be4ff-213">Verwenden Sie dieses Objekt nur mit vertrauenswürdigen Daten.</span><span class="sxs-lookup"><span data-stu-id="be4ff-213">Use this object only with trusted data.</span></span> <span data-ttu-id="be4ff-214">Weitere Informationen finden Sie unter [Datenüberprüfung](https://www.owasp.org/index.php/Data_Validation).</span><span class="sxs-lookup"><span data-stu-id="be4ff-214">For more information, see [Data Validation](https://www.owasp.org/index.php/Data_Validation).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="be4ff-215">Im Beispiel in diesem Abschnitt wird die folgenden txt-Datei mit dem Namen `PatientForm.txt` , die von einer Anwendung verwendeten Ressourcen zu definieren.</span><span class="sxs-lookup"><span data-stu-id="be4ff-215">The example in this section uses the following .txt file named `PatientForm.txt` to define the resources used by an application.</span></span>  
  
```  
  
Title="Top Pet Animal Clinic"  
Label1="Patient Number:"  
Label2="Pet Name:"  
Label3="Species:"  
Label4="Breed:"  
Label5="Date of Birth:"  
Label6="Age:"  
Label7="Owner:"  
Label8="Address:"  
Label9="Home Phone:"  
Label10="Work Phone:"  
Label11="Mobile Phone:"  
  
```  
  
 <span data-ttu-id="be4ff-216">Sie können dieses txt-Datei in eine RESOURCES-Datei kompilieren, durch den folgenden Befehl ausgeben:</span><span class="sxs-lookup"><span data-stu-id="be4ff-216">You can compile this .txt file into a .resources file by issuing the following command:</span></span>  
  
 <span data-ttu-id="be4ff-217">**Resgen PatientForm.txt**</span><span class="sxs-lookup"><span data-stu-id="be4ff-217">**resgen PatientForm.txt**</span></span>  
  
 <span data-ttu-id="be4ff-218">Das folgende Beispiel listet die Ressourcen in `PatientForm.resources` und zeigt den Namen und Wert jedes.</span><span class="sxs-lookup"><span data-stu-id="be4ff-218">The following example enumerates the resources in `PatientForm.resources` and displays the name and value of each.</span></span>  
  
 [!code-csharp[System.Resources.ResourceReader.Ctor#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.resources.resourcereader.ctor/cs/stream2.cs#2)]
 [!code-vb[System.Resources.ResourceReader.Ctor#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.resources.resourcereader.ctor/vb/stream2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="be4ff-219">The <paramref name="fileName" /> parameter is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be4ff-219">The <paramref name="fileName" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="be4ff-220">The file cannot be found.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be4ff-220">The file cannot be found.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="be4ff-221">An I/O error has occurred.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be4ff-221">An I/O error has occurred.</span>
          </span>
        </exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="be4ff-222">The resource file has an invalid format.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be4ff-222">The resource file has an invalid format.</span>
          </span>
          <span data-ttu-id="be4ff-223">For example, the length of the file may be zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be4ff-223">For example, the length of the file may be zero.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResourceReader.Close" />
      <MemberSignature Language="VB.NET" Value="Public Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Close();" />
      <MemberSignature Language="F#" Value="abstract member Close : unit -&gt; unit&#xA;override this.Close : unit -&gt; unit" Usage="resourceReader.Close " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Resources.IResourceReader.Close</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="be4ff-224">Releases all operating system resources associated with this <see cref="T:System.Resources.ResourceReader" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be4ff-224">Releases all operating system resources associated with this <see cref="T:System.Resources.ResourceReader" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="be4ff-225"><xref:System.Resources.ResourceReader.Close%2A> kann problemlos mehrmals aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="be4ff-225"><xref:System.Resources.ResourceReader.Close%2A> can be safely called multiple times.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="be4ff-226">Das folgende Beispiel durchläuft die Ressourcen einer Datei und zeigt alle Schlüssel/Wert-Paare, die sie findet.</span><span class="sxs-lookup"><span data-stu-id="be4ff-226">The following example moves through a file's resources and displays all the key/value pairs it finds.</span></span> <span data-ttu-id="be4ff-227">Dann verwendet der Code die <xref:System.Resources.ResourceReader.Close%2A> Methode zum Herunterfahren der <xref:System.Resources.ResourceReader> und alle von diesem verwendeten Ressourcen freizugeben.</span><span class="sxs-lookup"><span data-stu-id="be4ff-227">The code then uses the <xref:System.Resources.ResourceReader.Close%2A> method to shut down the <xref:System.Resources.ResourceReader> and to release all resources used by it.</span></span>  
  
 [!code-cpp[System.Resources.ResourceReader.GetEnumerator Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Resources.ResourceReader.GetEnumerator Example/CPP/getenumerator.cpp#1)]
 [!code-csharp[System.Resources.ResourceReader.GetEnumerator Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Resources.ResourceReader.GetEnumerator Example/CS/getenumerator.cs#1)]
 [!code-vb[System.Resources.ResourceReader.GetEnumerator Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Resources.ResourceReader.GetEnumerator Example/VB/getenumerator.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResourceReader.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="resourceReader.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Resources.Reader</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="be4ff-228">Releases all resources used by the current instance of the <see cref="T:System.Resources.ResourceReader" /> class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be4ff-228">Releases all resources used by the current instance of the <see cref="T:System.Resources.ResourceReader" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="be4ff-229">Wenn Sie mithilfe dieser Instanz von haben <xref:System.Resources.ResourceReader>, rufen Sie <xref:System.Resources.ResourceReader.Dispose%2A> alle von dieser Instanz verwendeten Ressourcen freizugeben.</span><span class="sxs-lookup"><span data-stu-id="be4ff-229">When you are finished using this instance of <xref:System.Resources.ResourceReader>, call <xref:System.Resources.ResourceReader.Dispose%2A> to release all resources used by this instance.</span></span> <span data-ttu-id="be4ff-230">Sollten Sie weitere Verweise auf eliminieren <xref:System.Resources.ResourceReader> -Instanz, damit der Garbage Collector den Arbeitsspeicher der Instanz statt jedoch ständig die aktiv auf einen Abschluss warten freigeben kann.</span><span class="sxs-lookup"><span data-stu-id="be4ff-230">You should eliminate further references to this <xref:System.Resources.ResourceReader> instance so that the garbage collector can reclaim the memory of the instance instead of keeping it alive for finalization.</span></span>  
  
 <span data-ttu-id="be4ff-231"><xref:System.Resources.ResourceReader.Dispose%2A> Ruft die private Dispose(Boolean)-Methode, die enthält den Code, um verwaltete und nicht verwaltete Ressourcen freizugeben.</span><span class="sxs-lookup"><span data-stu-id="be4ff-231"><xref:System.Resources.ResourceReader.Dispose%2A> calls the private Dispose(Boolean) method, which contains the code to release managed and unmanaged resources.</span></span> <span data-ttu-id="be4ff-232">Weitere Informationen finden Sie unter [Implementieren einer Dispose-Methode](~/docs/standard/garbage-collection/implementing-dispose.md).</span><span class="sxs-lookup"><span data-stu-id="be4ff-232">For more information, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IDictionaryEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IDictionaryEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResourceReader.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IDictionaryEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::IDictionaryEnumerator ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="abstract member GetEnumerator : unit -&gt; System.Collections.IDictionaryEnumerator&#xA;override this.GetEnumerator : unit -&gt; System.Collections.IDictionaryEnumerator" Usage="resourceReader.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Resources.IResourceReader.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Resources.Reader</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IDictionaryEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="be4ff-233">Returns an enumerator for this <see cref="T:System.Resources.ResourceReader" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be4ff-233">Returns an enumerator for this <see cref="T:System.Resources.ResourceReader" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="be4ff-234">An enumerator for this <see cref="T:System.Resources.ResourceReader" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be4ff-234">An enumerator for this <see cref="T:System.Resources.ResourceReader" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="be4ff-235">In der Regel zählen Sie Ressourcen durch Aufrufen der <xref:System.Resources.ResourceReader.GetEnumerator%2A> -Methode, und klicken Sie dann durch wiederholtes Aufrufen der <xref:System.Collections.IEnumerator.MoveNext%2A> Methode für das zurückgegebene <xref:System.Collections.IDictionaryEnumerator> Objekt, bis der Methodenrückgabe `false`.</span><span class="sxs-lookup"><span data-stu-id="be4ff-235">Typically, you enumerate resources by calling the <xref:System.Resources.ResourceReader.GetEnumerator%2A> method and then repeatedly calling the <xref:System.Collections.IEnumerator.MoveNext%2A> method on the returned <xref:System.Collections.IDictionaryEnumerator> object until the method returns `false`.</span></span> <span data-ttu-id="be4ff-236">Der Ressourcenname ist verfügbar, aus der <xref:System.Collections.IDictionaryEnumerator.Key%2A?displayProperty=nameWithType> -Eigenschaft, deren Werte von der <xref:System.Collections.IDictionaryEnumerator.Value%2A?displayProperty=nameWithType> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="be4ff-236">The resource name is available from the <xref:System.Collections.IDictionaryEnumerator.Key%2A?displayProperty=nameWithType> property; its value from the <xref:System.Collections.IDictionaryEnumerator.Value%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="be4ff-237">Das Beispiel veranschaulicht die Vorgehensweise beim Auflisten der Ressourcen auf diese Weise.</span><span class="sxs-lookup"><span data-stu-id="be4ff-237">The example illustrates how to enumerate resources in this way.</span></span>  
  
 <span data-ttu-id="be4ff-238">Die Implementierung der <xref:System.Collections.IDictionaryEnumerator.Value%2A?displayProperty=nameWithType> Eigenschaft, indem die <xref:System.Resources.ResourceReader> -Klasse kann die folgenden Ausnahmen auslösen:</span><span class="sxs-lookup"><span data-stu-id="be4ff-238">The implementation of the <xref:System.Collections.IDictionaryEnumerator.Value%2A?displayProperty=nameWithType> property by the <xref:System.Resources.ResourceReader> class can throw the following exceptions:</span></span>  
  
-   <xref:System.IO.FileNotFoundException>  
  
     <span data-ttu-id="be4ff-239">Die Assembly, die den Typ enthält, die Daten gehören, wurde nicht gefunden.</span><span class="sxs-lookup"><span data-stu-id="be4ff-239">The assembly that contains the type to which the data belongs cannot be found.</span></span>  
  
-   <xref:System.FormatException>  
  
     <span data-ttu-id="be4ff-240">Die Daten sind nicht das erwartete Format auf.</span><span class="sxs-lookup"><span data-stu-id="be4ff-240">The data is not in the expected format.</span></span>  
  
-   <xref:System.TypeLoadException>  
  
     <span data-ttu-id="be4ff-241">Der Typ, den die Daten gehören, wurde nicht gefunden.</span><span class="sxs-lookup"><span data-stu-id="be4ff-241">The type to which the data belongs cannot be found.</span></span>  
  
 <span data-ttu-id="be4ff-242">Sie können die Ausnahme behandeln, durch den Aufruf der <xref:System.Resources.ResourceReader.GetResourceData%2A> Methode zum Abrufen von Informationen über den Datentyp und das Array von Bytes, die die benannte Ressource zugewiesen.</span><span class="sxs-lookup"><span data-stu-id="be4ff-242">You can handle the exception by calling the <xref:System.Resources.ResourceReader.GetResourceData%2A> method to retrieve information about the data type and the byte array assigned to the named resource.</span></span> <span data-ttu-id="be4ff-243">Weitere Informationen finden Sie im Abschnitt "Abrufen von Ressourcen von Namen mit GetResourceData" in der <xref:System.Resources.ResourceReader> Thema-Klasse.</span><span class="sxs-lookup"><span data-stu-id="be4ff-243">For more information, see the "Retrieving Resources by Name with GetResourceData" section in the <xref:System.Resources.ResourceReader> class topic.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="be4ff-244">Die <xref:System.Resources.ResourceReader> Klasse enthält zwei Methoden, die Enumeratoren zurückgeben.</span><span class="sxs-lookup"><span data-stu-id="be4ff-244">The <xref:System.Resources.ResourceReader> class includes two methods that return enumerators.</span></span> <span data-ttu-id="be4ff-245">Die <xref:System.Resources.ResourceReader.GetEnumerator%2A> Methode gibt ein <xref:System.Collections.IDictionaryEnumerator> oberflächenobjekts und ist die empfohlene Methode zum Aufrufen beim Auflisten der Ressourcen.</span><span class="sxs-lookup"><span data-stu-id="be4ff-245">The <xref:System.Resources.ResourceReader.GetEnumerator%2A> method returns an <xref:System.Collections.IDictionaryEnumerator> interface object and is the recommended method to call when enumerating resources.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="be4ff-246">Im Beispiel in diesem Abschnitt wird die folgenden txt-Datei mit dem Namen `PatientForm.txt` , die von einer Anwendung verwendeten Ressourcen zu definieren.</span><span class="sxs-lookup"><span data-stu-id="be4ff-246">The example in this section uses the following .txt file named `PatientForm.txt` to define the resources used by an application.</span></span>  
  
```  
  
Title="Top Pet Animal Clinic"  
Label1="Patient Number:"  
Label2="Pet Name:"  
Label3="Species:"  
Label4="Breed:"  
Label5="Date of Birth:"  
Label6="Age:"  
Label7="Owner:"  
Label8="Address:"  
Label9="Home Phone:"  
Label10="Work Phone:"  
Label11="Mobile Phone:"  
  
```  
  
 <span data-ttu-id="be4ff-247">Sie können die TXT-Datei in eine RESOURCES-Datei kompilieren, indem Sie den folgenden Befehl ausgeben:</span><span class="sxs-lookup"><span data-stu-id="be4ff-247">You can compile the .txt file into a .resources file by issuing the following command:</span></span>  
  
 <span data-ttu-id="be4ff-248">**Resgen PatientForm.txt**</span><span class="sxs-lookup"><span data-stu-id="be4ff-248">**resgen PatientForm.txt**</span></span>  
  
 <span data-ttu-id="be4ff-249">Das folgende Beispiel listet die Ressourcen in `PatientForm.resources` und zeigt den Namen und Wert jedes.</span><span class="sxs-lookup"><span data-stu-id="be4ff-249">The following example enumerates the resources in `PatientForm.resources` and displays the name and value of each.</span></span>  
  
 [!code-csharp[System.Resources.ResourceReader.Ctor#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.resources.resourcereader.ctor/cs/stream2.cs#2)]
 [!code-vb[System.Resources.ResourceReader.Ctor#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.resources.resourcereader.ctor/vb/stream2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="be4ff-250">The reader has been closed or disposed, and cannot be accessed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be4ff-250">The reader has been closed or disposed, and cannot be accessed.</span>
          </span>
        </exception>
        <altmember cref="T:System.Collections.IDictionary" />
        <altmember cref="T:System.Collections.IDictionaryEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="GetResourceData">
      <MemberSignature Language="C#" Value="public void GetResourceData (string resourceName, out string resourceType, out byte[] resourceData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void GetResourceData(string resourceName, [out] string&amp; resourceType, [out] unsigned int8[]&amp; resourceData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResourceReader.GetResourceData(System.String,System.String@,System.Byte[]@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetResourceData (resourceName As String, ByRef resourceType As String, ByRef resourceData As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GetResourceData(System::String ^ resourceName, [Runtime::InteropServices::Out] System::String ^ % resourceType, [Runtime::InteropServices::Out] cli::array &lt;System::Byte&gt; ^ % resourceData);" />
      <MemberSignature Language="F#" Value="member this.GetResourceData : string *  *  -&gt; unit" Usage="resourceReader.GetResourceData (resourceName, resourceType, resourceData)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceName" Type="System.String" />
        <Parameter Name="resourceType" Type="System.String&amp;" RefType="out" />
        <Parameter Name="resourceData" Type="System.Byte[]&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="resourceName">
          <span data-ttu-id="be4ff-251">The name of a resource.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be4ff-251">The name of a resource.</span>
          </span>
        </param>
        <param name="resourceType">
          <span data-ttu-id="be4ff-252">When this method returns, contains a string that represents the type name of the retrieved resource.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be4ff-252">When this method returns, contains a string that represents the type name of the retrieved resource.</span>
          </span>
          <span data-ttu-id="be4ff-253">This parameter is passed uninitialized.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be4ff-253">This parameter is passed uninitialized.</span>
          </span>
        </param>
        <param name="resourceData">
          <span data-ttu-id="be4ff-254">When this method returns, contains a byte array that is the binary representation of the retrieved type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be4ff-254">When this method returns, contains a byte array that is the binary representation of the retrieved type.</span>
          </span>
          <span data-ttu-id="be4ff-255">This parameter is passed uninitialized.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be4ff-255">This parameter is passed uninitialized.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="be4ff-256">Retrieves the type name and data of a named resource from an open resource file or stream.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be4ff-256">Retrieves the type name and data of a named resource from an open resource file or stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="be4ff-257">Die <xref:System.Resources.ResourceReader.GetResourceData%2A> Methode ruft den Wert einer benannten Ressource als Bytearray ab.</span><span class="sxs-lookup"><span data-stu-id="be4ff-257">The <xref:System.Resources.ResourceReader.GetResourceData%2A> method retrieves the value of a named resource as a byte array.</span></span> <span data-ttu-id="be4ff-258">In der Regel verwendet, wenn die <xref:System.Collections.IDictionaryEnumerator.Value%2A> Eigenschaft löst eine Ausnahme aus, wenn er versucht, den Wert einer Ressource abzurufen.</span><span class="sxs-lookup"><span data-stu-id="be4ff-258">It is typically used when the <xref:System.Collections.IDictionaryEnumerator.Value%2A> property throws an exception when it tries to retrieve the value of a resource.</span></span>  
  
 <span data-ttu-id="be4ff-259">`resourceType` ist eine Zeichenfolge, die den Datentyp der Ressource darstellt.</span><span class="sxs-lookup"><span data-stu-id="be4ff-259">`resourceType` is a string that represents the data type of the resource.</span></span> <span data-ttu-id="be4ff-260">Eines der folgenden Werte sind möglich:</span><span class="sxs-lookup"><span data-stu-id="be4ff-260">It can be any of the following values:</span></span>  
  
-   <span data-ttu-id="be4ff-261">Die angegebene Zeichenfolgendarstellung einer `ResourceTypeCode` -Enumerationsmember, der den Datentyp der Ressource angibt.</span><span class="sxs-lookup"><span data-stu-id="be4ff-261">The string representation of a `ResourceTypeCode` enumeration member that indicates the data type of the resource.</span></span> <span data-ttu-id="be4ff-262">`ResourceTypeCode` ist eine private Enumeration, mit dem Textzeigers anzugeben, dass ein spezielles binäres Format zum Speichern von einer der 19 allgemeine Datentypen verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="be4ff-262">`ResourceTypeCode` is a private enumeration that is used by .to indicate that a special binary format is used to store one of 19 common data types.</span></span> <span data-ttu-id="be4ff-263">Dazu zählen die .NET Framework-primitiven Datentypen (<xref:System.Boolean>, <xref:System.Byte>, <xref:System.Char>, <xref:System.Decimal>, <xref:System.Double>, <xref:System.Int16>, <xref:System.Int32>, <xref:System.Int64>, <xref:System.Single>, <xref:System.SByte>, <xref:System.UInt16>, <xref:System.UInt32>, <xref:System.UInt64>), als auch <xref:System.String>, <xref:System.DateTime>, und <xref:System.TimeSpan>, darüber hinaus die `ResourceTypeCode` Enumeration enthält die Werte, die in der folgenden Tabelle gezeigt.</span><span class="sxs-lookup"><span data-stu-id="be4ff-263">These include the .NET Framework primitive data types (<xref:System.Boolean>, <xref:System.Byte>, <xref:System.Char>, <xref:System.Decimal>, <xref:System.Double>, <xref:System.Int16>, <xref:System.Int32>, <xref:System.Int64>, <xref:System.Single>, <xref:System.SByte>, <xref:System.UInt16>, <xref:System.UInt32>, <xref:System.UInt64>), as well as <xref:System.String>, <xref:System.DateTime>, and <xref:System.TimeSpan>, In addition, the `ResourceTypeCode` enumeration includes the values shown in the following table.</span></span>  
  
    |<span data-ttu-id="be4ff-264">ResourceTypeCode Wert</span><span class="sxs-lookup"><span data-stu-id="be4ff-264">ResourceTypeCode value</span></span>|<span data-ttu-id="be4ff-265">Beschreibung</span><span class="sxs-lookup"><span data-stu-id="be4ff-265">Description</span></span>|  
    |----------------------------|-----------------|  
    |`ResourceTypeCode.ByteArray`|<span data-ttu-id="be4ff-266">Die Daten sind ein Byte-Array.</span><span class="sxs-lookup"><span data-stu-id="be4ff-266">The data is a byte array.</span></span> <span data-ttu-id="be4ff-267">Geben Sie diese Daten häufig Ergebnisse aus dem Aufruf der <xref:System.Resources.ResourceWriter.AddResource%28System.String%2CSystem.Byte%5B%5D%29?displayProperty=nameWithType> Methode.</span><span class="sxs-lookup"><span data-stu-id="be4ff-267">This data type commonly results from the call to the <xref:System.Resources.ResourceWriter.AddResource%28System.String%2CSystem.Byte%5B%5D%29?displayProperty=nameWithType> method.</span></span>|  
    |`ResourceTypeCode.Null`|<span data-ttu-id="be4ff-268">Die Daten sind ein null-Verweis.</span><span class="sxs-lookup"><span data-stu-id="be4ff-268">The data is a null reference.</span></span> <span data-ttu-id="be4ff-269">Geben Sie diese Daten häufig Ergebnisse aus dem Aufruf der <xref:System.Resources.ResourceWriter.AddResource%28System.String%2CSystem.Object%29?displayProperty=nameWithType> Methode mit einem Objekt, dessen Wert `null`.</span><span class="sxs-lookup"><span data-stu-id="be4ff-269">This data type commonly results from the call to the <xref:System.Resources.ResourceWriter.AddResource%28System.String%2CSystem.Object%29?displayProperty=nameWithType> method with an object whose value is `null`.</span></span>|  
    |`ResourceTypeCode.Stream`|<span data-ttu-id="be4ff-270">Die Daten werden in einem Stream gespeichert.</span><span class="sxs-lookup"><span data-stu-id="be4ff-270">The data is stored in a stream.</span></span> <span data-ttu-id="be4ff-271">Geben Sie diese Daten häufig Ergebnisse aus dem Aufruf der <xref:System.Resources.ResourceWriter.AddResource%28System.String%2CSystem.IO.Stream%29?displayProperty=nameWithType> oder <xref:System.Resources.ResourceWriter.AddResource%28System.String%2CSystem.IO.Stream%2CSystem.Boolean%29?displayProperty=nameWithType> Methode.</span><span class="sxs-lookup"><span data-stu-id="be4ff-271">This data type commonly results from the call to the <xref:System.Resources.ResourceWriter.AddResource%28System.String%2CSystem.IO.Stream%29?displayProperty=nameWithType> or <xref:System.Resources.ResourceWriter.AddResource%28System.String%2CSystem.IO.Stream%2CSystem.Boolean%29?displayProperty=nameWithType> method.</span></span>|  
  
     <span data-ttu-id="be4ff-272">Vorausgesetzt, dass `resourceData` wurde nicht beschädigt, er kann in der Regel konvertiert werden aus einem Bytearray zurück auf den ursprünglichen Wert durch den Aufruf einer <xref:System.BitConverter> oder <xref:System.IO.BinaryReader> Methode.</span><span class="sxs-lookup"><span data-stu-id="be4ff-272">Assuming that `resourceData` has not been corrupted, it can usually be converted from a byte array back to its original value by calling a <xref:System.BitConverter> or <xref:System.IO.BinaryReader> method.</span></span>  
  
-   <span data-ttu-id="be4ff-273">Eine Zeichenfolge, die den vollqualifizierten Namen des Typs enthält, deren serialisierten Daten zugewiesen werden, die `resourceData` Argument (z. B. `System.String`).</span><span class="sxs-lookup"><span data-stu-id="be4ff-273">A string that contains the fully qualified name of the type whose serialized data is assigned to the `resourceData` argument (for example, `System.String`).</span></span> <span data-ttu-id="be4ff-274">Darüber hinaus enthält die Zeichenfolge für Typen, die nicht Teil der .NET Framework-Klassenbibliothek sind, der Name, Version, Kultur und öffentlichen Schlüssel der Assembly, die den Typ enthält.</span><span class="sxs-lookup"><span data-stu-id="be4ff-274">In addition, for types that are not part of the .NET Framework class library, the string includes the name, version, culture, and public key of the assembly that contains the type.</span></span> <span data-ttu-id="be4ff-275">Die folgende Zeichenfolge gibt beispielsweise an, dass die serialisierten Daten mit eine Instanz von darstellt der `Person` Geben Sie in der `Extensions` gefunden wird, in einer Assembly mit dem Namen Hilfsprogramm, das kein öffentlicher Schlüssel und keine anderen festgelegten Kultur verfügt, Version 1.0-Namespace.</span><span class="sxs-lookup"><span data-stu-id="be4ff-275">For example, the following string indicates that the serialized data represents an instance of the `Person` type in the `Extensions` namespace, which is found in version 1.0 of an assembly named Utility that has no public key and no designated culture.</span></span>  
  
     `Extensions.Person, Utility, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null`  
  
     <span data-ttu-id="be4ff-276">Vorausgesetzt, dass `resourceData` ist nicht beschädigt und der Quelltyp verfügbar ist, ist `resourceData` konvertiert werden kann aus einem Bytearray zurück auf den ursprünglichen Wert durch die Konvertierung von Byte-Array für eine <xref:System.IO.Stream> -Objekt, und übergeben den Datenstrom an die <xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter.Deserialize%2A?displayProperty=nameWithType>Methode.</span><span class="sxs-lookup"><span data-stu-id="be4ff-276">Assuming that `resourceData` has not been corrupted and that the source type is available, `resourceData` can be converted from a byte array back to its original value by converting the byte array to a <xref:System.IO.Stream> object and passing the stream to the <xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter.Deserialize%2A?displayProperty=nameWithType> method.</span></span>  
  
-   <span data-ttu-id="be4ff-277">Die Zeichenfolge verwendet, um den Datentyp in beschreiben die <xref:System.Resources.ResourceWriter.AddResourceData%2A?displayProperty=nameWithType> Methodenaufruf.</span><span class="sxs-lookup"><span data-stu-id="be4ff-277">The string used to describe the data type in the <xref:System.Resources.ResourceWriter.AddResourceData%2A?displayProperty=nameWithType> method call.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="be4ff-278">
            <paramref name="resourceName" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be4ff-278">
              <paramref name="resourceName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="be4ff-279">
            <paramref name="resourceName" /> does not exist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be4ff-279">
              <paramref name="resourceName" /> does not exist.</span>
          </span>
        </exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="be4ff-280">
            <paramref name="resourceName" /> has an invalid type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be4ff-280">
              <paramref name="resourceName" /> has an invalid type.</span>
          </span>
        </exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="be4ff-281">The retrieved resource data is corrupt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be4ff-281">The retrieved resource data is corrupt.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="be4ff-282">The current <see cref="T:System.Resources.ResourceReader" /> object is not initialized, probably because it is closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be4ff-282">The current <see cref="T:System.Resources.ResourceReader" /> object is not initialized, probably because it is closed.</span>
          </span>
        </exception>
        <altmember cref="M:System.Resources.ResourceWriter.AddResourceData(System.String,System.String,System.Byte[])" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResourceReader.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="be4ff-283">Returns an enumerator for this <see cref="T:System.Resources.ResourceReader" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be4ff-283">Returns an enumerator for this <see cref="T:System.Resources.ResourceReader" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="be4ff-284">An enumerator for this <see cref="T:System.Resources.ResourceReader" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be4ff-284">An enumerator for this <see cref="T:System.Resources.ResourceReader" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="be4ff-285"><xref:System.Resources.ResourceReader.System%23Collections%23IEnumerable%23GetEnumerator%2A?displayProperty=nameWithType> ist eine explizite schnittstellenimplementierung.</span><span class="sxs-lookup"><span data-stu-id="be4ff-285"><xref:System.Resources.ResourceReader.System%23Collections%23IEnumerable%23GetEnumerator%2A?displayProperty=nameWithType> is an explicit interface implementation.</span></span> <span data-ttu-id="be4ff-286">Er kann nur verwendet werden, wenn die <xref:System.Resources.ResourceReader>-Instanz in eine <xref:System.Collections.IEnumerable>-Schnittstelle umgewandelt wird.</span><span class="sxs-lookup"><span data-stu-id="be4ff-286">It can be used only when the <xref:System.Resources.ResourceReader> instance is cast to an <xref:System.Collections.IEnumerable> interface.</span></span> <span data-ttu-id="be4ff-287">Die empfohlene Vorgehensweise zum Auflisten von Ressourcen in eine RESOURCES-Datei wird zum Aufrufen der <xref:System.Collections.IEnumerator.MoveNext%2A> Methode der <xref:System.Collections.IDictionaryEnumerator> zurückgegebenes Objekt der <xref:System.Resources.ResourceReader.GetEnumerator%2A?displayProperty=nameWithType> Methode.</span><span class="sxs-lookup"><span data-stu-id="be4ff-287">The recommended approach to enumerating the resources in a .resources file is to call the <xref:System.Collections.IEnumerator.MoveNext%2A> method of the <xref:System.Collections.IDictionaryEnumerator> object returned by the <xref:System.Resources.ResourceReader.GetEnumerator%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="be4ff-288">The reader has already been closed and cannot be accessed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be4ff-288">The reader has already been closed and cannot be accessed.</span>
          </span>
        </exception>
        <altmember cref="T:System.Collections.IDictionary" />
        <altmember cref="T:System.Collections.IDictionaryEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="System.IDisposable.Dispose">
      <MemberSignature Language="C#" Value="void IDisposable.Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.IDisposable.Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResourceReader.System#IDisposable#Dispose" />
      <MemberSignature Language="VB.NET" Value="Sub Dispose () Implements IDisposable.Dispose" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.IDisposable.Dispose() = IDisposable::Dispose;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>