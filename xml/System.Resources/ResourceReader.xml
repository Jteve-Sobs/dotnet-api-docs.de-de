<Type Name="ResourceReader" FullName="System.Resources.ResourceReader">
  <Metadata><Meta Name="ms.openlocfilehash" Value="b611e5a2de83b79b2826d5737ba08942dd18d25e" /><Meta Name="ms.sourcegitcommit" Value="8ae9a18b248625c8e1851e607c00346a64849587" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="12/17/2019" /><Meta Name="ms.locfileid" Value="75094387" /></Metadata><TypeSignature Language="C#" Value="public sealed class ResourceReader : System.Resources.IResourceReader" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ResourceReader extends System.Object implements class System.Collections.IEnumerable, class System.IDisposable, class System.Resources.IResourceReader" />
  <TypeSignature Language="DocId" Value="T:System.Resources.ResourceReader" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ResourceReader&#xA;Implements IResourceReader" />
  <TypeSignature Language="C++ CLI" Value="public ref class ResourceReader sealed : System::Resources::IResourceReader" />
  <TypeSignature Language="F#" Value="type ResourceReader = class&#xA;    interface IResourceReader&#xA;    interface IEnumerable&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Resources.Reader</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Resources.ResourceManager</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.2.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Resources.IResourceReader</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="94b5e-101">Listet die Ressourcen in einer binären Ressourcendatei (.resources) durch Lesen von sequenziellen Ressourcenname-/Wert-Paaren auf.</span><span class="sxs-lookup"><span data-stu-id="94b5e-101">Enumerates the resources in a binary resources (.resources) file by reading sequential resource name/value pairs.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  

[!INCLUDE [untrusted-data-class-note](~/includes/untrusted-data-class-note.md)]

 <span data-ttu-id="94b5e-102">Die <xref:System.Resources.ResourceReader>-Klasse stellt eine Standard Implementierung der <xref:System.Resources.IResourceReader>-Schnittstelle bereit.</span><span class="sxs-lookup"><span data-stu-id="94b5e-102">The <xref:System.Resources.ResourceReader> class provides a standard implementation of the <xref:System.Resources.IResourceReader> interface.</span></span> <span data-ttu-id="94b5e-103">Eine <xref:System.Resources.ResourceReader>-Instanz stellt entweder eine eigenständige resources-Datei oder eine resources-Datei dar, die in eine Assembly eingebettet ist.</span><span class="sxs-lookup"><span data-stu-id="94b5e-103">A <xref:System.Resources.ResourceReader> instance represents either a standalone .resources file or a .resources file that is embedded in an assembly.</span></span> <span data-ttu-id="94b5e-104">Sie wird verwendet, um die Ressourcen in einer resources-Datei aufzulisten und die Name-Wert-Paare abzurufen.</span><span class="sxs-lookup"><span data-stu-id="94b5e-104">It is used to enumerate the resources in a .resources file and retrieve its name/value pairs.</span></span> <span data-ttu-id="94b5e-105">Sie unterscheidet sich von der <xref:System.Resources.ResourceManager>-Klasse, die zum Abrufen der angegebenen benannten Ressourcen aus einer resources-Datei verwendet wird, die in eine Assembly eingebettet ist.</span><span class="sxs-lookup"><span data-stu-id="94b5e-105">It differs from the <xref:System.Resources.ResourceManager> class, which is used to retrieve specified named resources from a .resources file that is embedded in an assembly.</span></span> <span data-ttu-id="94b5e-106">Die <xref:System.Resources.ResourceManager>-Klasse wird verwendet, um Ressourcen abzurufen, deren Namen im Voraus bekannt sind, während die <xref:System.Resources.ResourceReader> Klasse zum Abrufen von Ressourcen nützlich ist, deren Anzahl oder genaue Namen zum Zeitpunkt der Kompilierung nicht bekannt sind.</span><span class="sxs-lookup"><span data-stu-id="94b5e-106">The <xref:System.Resources.ResourceManager> class is used to retrieve resources whose names are known in advance, whereas the <xref:System.Resources.ResourceReader> class is useful for retrieving resources whose number or precise names are not known at compile time.</span></span> <span data-ttu-id="94b5e-107">Beispielsweise kann eine Anwendung eine Ressourcen Datei verwenden, um Konfigurationsinformationen zu speichern, die in Abschnitten und Elementen in einem Abschnitt organisiert sind, wobei die Anzahl der Abschnitte oder Elemente in einem Abschnitt nicht im Voraus bekannt ist.</span><span class="sxs-lookup"><span data-stu-id="94b5e-107">For example, an application may use a resources file to store configuration information that is organized into sections and items in a section, where the number of sections or items in a section is not known in advance.</span></span> <span data-ttu-id="94b5e-108">Ressourcen können dann generisch benannt werden (z. b. `Section1`, `Section1Item1`, `Section1Item2`usw.) und mithilfe eines <xref:System.Resources.ResourceReader> Objekts abgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="94b5e-108">Resources can then be named generically (such as `Section1`, `Section1Item1`, `Section1Item2`, and so on) and retrieved by using a <xref:System.Resources.ResourceReader> object.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="94b5e-109">Dieser Typ implementiert die <xref:System.IDisposable>-Schnittstelle.</span><span class="sxs-lookup"><span data-stu-id="94b5e-109">This type implements the <xref:System.IDisposable> interface.</span></span> <span data-ttu-id="94b5e-110">Nach Abschluss der Verwendung sollten Sie den Typ entweder direkt oder indirekt löschen.</span><span class="sxs-lookup"><span data-stu-id="94b5e-110">When you have finished using the type, you should dispose of it either directly or indirectly.</span></span> <span data-ttu-id="94b5e-111">Zum direkten Löschen des Typs rufen Sie seine <xref:System.IDisposable.Dispose%2A>-Methode in einem `try`/`catch`-Block auf.</span><span class="sxs-lookup"><span data-stu-id="94b5e-111">To dispose of the type directly, call its <xref:System.IDisposable.Dispose%2A> method in a `try`/`catch` block.</span></span> <span data-ttu-id="94b5e-112">Zum indirekten Löschen verwenden Sie ein Sprachkonstrukt wie `using` (in C#) oder `Using` (in Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="94b5e-112">To dispose of it indirectly, use a language construct such as `using` (in C#) or `Using` (in Visual Basic).</span></span> <span data-ttu-id="94b5e-113">Weitere Informationen finden Sie im Abschnitt „Verwenden eines Objekts, das IDisposable implementiert“ des Themas „Die <xref:System.IDisposable>-Schnittstelle“.</span><span class="sxs-lookup"><span data-stu-id="94b5e-113">For more information, see the "Using an Object that Implements IDisposable" section in the <xref:System.IDisposable> interface topic.</span></span>  
  
 <span data-ttu-id="94b5e-114">Weitere Informationen zum Verwenden der <xref:System.Resources.ResourceReader>-Klasse finden Sie in den folgenden Abschnitten:</span><span class="sxs-lookup"><span data-stu-id="94b5e-114">For more information about using the <xref:System.Resources.ResourceReader> class, see the following sections:</span></span>  
  
-   [<span data-ttu-id="94b5e-115">Instanziieren eines ResourceReader-Objekts</span><span class="sxs-lookup"><span data-stu-id="94b5e-115">Instantiating a ResourceReader object</span></span>](#instantiate)  
  
-   [<span data-ttu-id="94b5e-116">Auflisten der Ressourcen eines ResourceReader-Objekts</span><span class="sxs-lookup"><span data-stu-id="94b5e-116">Enumerating a ResourceReader object's resources</span></span>](#enumerate)  
  
    -   [<span data-ttu-id="94b5e-117">Abrufen von Ressourcen mithilfe von iatortionaryenumerator-Eigenschaften</span><span class="sxs-lookup"><span data-stu-id="94b5e-117">Retrieving resources by using IDictionaryEnumerator properties</span></span>](#idictionaryenumerator)  
  
    -   [<span data-ttu-id="94b5e-118">Abrufen von Ressourcen nach Namen mit getresourcedata</span><span class="sxs-lookup"><span data-stu-id="94b5e-118">Retrieving resources by name with GetResourceData</span></span>](#getresourcedata)  
  
<a name="instantiate"></a>   
## <a name="instantiating-a-resourcereader-object"></a><span data-ttu-id="94b5e-119">Instanziieren eines ResourceReader-Objekts</span><span class="sxs-lookup"><span data-stu-id="94b5e-119">Instantiating a ResourceReader Object</span></span>  
 <span data-ttu-id="94b5e-120">Bei einer resources-Datei handelt es sich um eine Binärdatei, die von [Resgen. exe (Resource File Generator)](~/docs/framework/tools/resgen-exe-resource-file-generator.md)entweder aus einer Textdatei oder aus einer XML. resx-Datei kompiliert wurde.</span><span class="sxs-lookup"><span data-stu-id="94b5e-120">A .resources file is a binary file that has been compiled from either a text file or an XML .resx file by [Resgen.exe (Resource File Generator)](~/docs/framework/tools/resgen-exe-resource-file-generator.md).</span></span> <span data-ttu-id="94b5e-121">Ein <xref:System.Resources.ResourceReader>-Objekt kann entweder eine eigenständige resources-Datei oder eine resources-Datei darstellen, die in eine Assembly eingebettet wurde.</span><span class="sxs-lookup"><span data-stu-id="94b5e-121">A <xref:System.Resources.ResourceReader> object can represent either a standalone .resources file or a .resources file that has been embedded in an assembly.</span></span>  
  
 <span data-ttu-id="94b5e-122">Um ein <xref:System.Resources.ResourceReader> Objekt zu instanziieren, das aus einer eigenständigen resources-Datei liest, verwenden Sie den <xref:System.Resources.ResourceReader>-Klassenkonstruktor mit einem Eingabedaten Strom oder einer Zeichenfolge, die den Namen der resources-Datei enthält.</span><span class="sxs-lookup"><span data-stu-id="94b5e-122">To instantiate a <xref:System.Resources.ResourceReader> object that reads from a standalone .resources file, use the <xref:System.Resources.ResourceReader> class constructor with either an input stream or a string that contains the .resources file name.</span></span> <span data-ttu-id="94b5e-123">Im folgenden Beispiel werden beide Ansätze veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="94b5e-123">The following example illustrates both approaches.</span></span> <span data-ttu-id="94b5e-124">Der erste instanziiert ein <xref:System.Resources.ResourceReader> Objekt, das eine resources-Datei mit dem Namen `Resources1.resources` mit dem Dateinamen darstellt.</span><span class="sxs-lookup"><span data-stu-id="94b5e-124">The first instantiates a <xref:System.Resources.ResourceReader> object that represents a .resources file named `Resources1.resources` by using its file name.</span></span> <span data-ttu-id="94b5e-125">Die zweite instanziiert ein <xref:System.Resources.ResourceReader> Objekt, das eine resources-Datei mit dem Namen `Resources2.resources` mit einem Stream darstellt, der aus der Datei erstellt wurde.</span><span class="sxs-lookup"><span data-stu-id="94b5e-125">The second instantiates a <xref:System.Resources.ResourceReader> object that represents a .resources file named `Resources2.resources` by using a stream created from the file.</span></span>  
  
 [!code-csharp[System.Resources.ResourceReader.Class#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.resources.resourcereader.class/cs/ctor1.cs#2)]
 [!code-vb[System.Resources.ResourceReader.Class#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.resources.resourcereader.class/vb/ctor1.vb#2)]  
  
 <span data-ttu-id="94b5e-126">Zum Erstellen eines <xref:System.Resources.ResourceReader> Objekts, das eine eingebettete resources-Datei darstellt, instanziieren Sie ein <xref:System.Reflection.Assembly> Objekt aus der Assembly, in die die resources-Datei eingebettet ist.</span><span class="sxs-lookup"><span data-stu-id="94b5e-126">To create a <xref:System.Resources.ResourceReader> object that represents an embedded .resources file, instantiate an <xref:System.Reflection.Assembly> object from the assembly in which the .resources file is embedded.</span></span> <span data-ttu-id="94b5e-127">Die <xref:System.Reflection.Assembly.GetManifestResourceStream%2A?displayProperty=nameWithType>-Methode gibt ein <xref:System.IO.Stream> Objekt zurück, das an den <xref:System.Resources.ResourceReader.%23ctor%28System.IO.Stream%29>-Konstruktor übergeben werden kann.</span><span class="sxs-lookup"><span data-stu-id="94b5e-127">Its <xref:System.Reflection.Assembly.GetManifestResourceStream%2A?displayProperty=nameWithType> method returns a <xref:System.IO.Stream> object that can be passed to the <xref:System.Resources.ResourceReader.%23ctor%28System.IO.Stream%29> constructor.</span></span> <span data-ttu-id="94b5e-128">Im folgenden Beispiel wird ein <xref:System.Resources.ResourceReader>-Objekt instanziiert, das eine eingebettete resources-Datei darstellt.</span><span class="sxs-lookup"><span data-stu-id="94b5e-128">The following example instantiates a <xref:System.Resources.ResourceReader> object that represents an embedded .resources file.</span></span>  
  
 [!code-csharp[System.Resources.ResourceReader.Class#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.resources.resourcereader.class/cs/ctor1.cs#3)]
 [!code-vb[System.Resources.ResourceReader.Class#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.resources.resourcereader.class/vb/ctor1.vb#3)]  
  
<a name="enumerate"></a>   
## <a name="enumerating-a-resourcereader-objects-resources"></a><span data-ttu-id="94b5e-129">Auflisten der Ressourcen eines ResourceReader-Objekts</span><span class="sxs-lookup"><span data-stu-id="94b5e-129">Enumerating a ResourceReader Object's Resources</span></span>  
 <span data-ttu-id="94b5e-130">Um die Ressourcen in einer resources-Datei aufzulisten, nennen Sie die <xref:System.Resources.ResourceReader.GetEnumerator%2A>-Methode, die ein <xref:System.Collections.IDictionaryEnumerator?displayProperty=nameWithType>-Objekt zurückgibt.</span><span class="sxs-lookup"><span data-stu-id="94b5e-130">To enumerate the resources in a .resources file, you call the <xref:System.Resources.ResourceReader.GetEnumerator%2A> method, which returns an <xref:System.Collections.IDictionaryEnumerator?displayProperty=nameWithType> object.</span></span> <span data-ttu-id="94b5e-131">Sie können die `IDictionaryEnumerator.MoveNext`-Methode aufzurufen, um von einer Ressource zum nächsten zu wechseln.</span><span class="sxs-lookup"><span data-stu-id="94b5e-131">You call the `IDictionaryEnumerator.MoveNext` method to move from one resource to the next.</span></span> <span data-ttu-id="94b5e-132">Die Methode gibt `false` zurück, wenn alle Ressourcen in der resources-Datei aufgezählt wurden.</span><span class="sxs-lookup"><span data-stu-id="94b5e-132">The method returns `false` when all the resources in the .resources file have been enumerated.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="94b5e-133">Obwohl die <xref:System.Resources.ResourceReader>-Klasse die <xref:System.Collections.IEnumerable>-Schnittstelle und die <xref:System.Collections.IEnumerable.GetEnumerator%2A?displayProperty=nameWithType>-Methode implementiert, stellt die <xref:System.Resources.ResourceReader.GetEnumerator%2A?displayProperty=nameWithType>-Methode nicht die <xref:System.Collections.IEnumerable.GetEnumerator%2A?displayProperty=nameWithType>-Implementierung bereit.</span><span class="sxs-lookup"><span data-stu-id="94b5e-133">Although the <xref:System.Resources.ResourceReader> class implements the <xref:System.Collections.IEnumerable> interface and the <xref:System.Collections.IEnumerable.GetEnumerator%2A?displayProperty=nameWithType> method, the <xref:System.Resources.ResourceReader.GetEnumerator%2A?displayProperty=nameWithType> method does not provide the <xref:System.Collections.IEnumerable.GetEnumerator%2A?displayProperty=nameWithType> implementation.</span></span> <span data-ttu-id="94b5e-134">Stattdessen gibt die <xref:System.Resources.ResourceReader.GetEnumerator%2A?displayProperty=nameWithType>-Methode ein <xref:System.Collections.IDictionaryEnumerator> Interface-Objekt zurück, das Zugriff auf das Name-Wert-Paar der einzelnen Ressourcen bietet.</span><span class="sxs-lookup"><span data-stu-id="94b5e-134">Instead, the <xref:System.Resources.ResourceReader.GetEnumerator%2A?displayProperty=nameWithType> method  returns an <xref:System.Collections.IDictionaryEnumerator> interface object that provides access to each resource's name/value pair.</span></span>  
  
 <span data-ttu-id="94b5e-135">Die einzelnen Ressourcen in der Sammlung können auf zwei Arten abgerufen werden:</span><span class="sxs-lookup"><span data-stu-id="94b5e-135">You can retrieve the individual resources in the collection in two ways:</span></span>  
  
-   <span data-ttu-id="94b5e-136">Sie können jede Ressource in der <xref:System.Collections.IDictionaryEnumerator?displayProperty=nameWithType> Auflistung durchlaufen und <xref:System.Collections.IDictionaryEnumerator?displayProperty=nameWithType> Eigenschaften verwenden, um den Ressourcennamen und-Wert abzurufen.</span><span class="sxs-lookup"><span data-stu-id="94b5e-136">You can iterate each resource in the <xref:System.Collections.IDictionaryEnumerator?displayProperty=nameWithType> collection and use <xref:System.Collections.IDictionaryEnumerator?displayProperty=nameWithType> properties to retrieve the resource name and value.</span></span> <span data-ttu-id="94b5e-137">Diese Vorgehensweise wird empfohlen, wenn alle Ressourcen denselben Typ haben oder Sie den Datentyp der einzelnen Ressourcen kennen.</span><span class="sxs-lookup"><span data-stu-id="94b5e-137">We recommend this technique when all the resources are of the same type, or you know the data type of each resource.</span></span>  
  
-   <span data-ttu-id="94b5e-138">Sie können den Namen der einzelnen Ressourcen abrufen, wenn Sie die <xref:System.Collections.IDictionaryEnumerator?displayProperty=nameWithType> Auflistung durchlaufen, und die <xref:System.Resources.ResourceReader.GetResourceData%2A>-Methode aufrufen, um die Daten der Ressource abzurufen.</span><span class="sxs-lookup"><span data-stu-id="94b5e-138">You can retrieve the name of each resource when you iterate the <xref:System.Collections.IDictionaryEnumerator?displayProperty=nameWithType> collection and call the <xref:System.Resources.ResourceReader.GetResourceData%2A> method to retrieve the resource's data.</span></span> <span data-ttu-id="94b5e-139">Diese Vorgehensweise wird empfohlen, wenn Sie den Datentyp der einzelnen Ressourcen nicht kennen oder wenn der vorherige Ansatz Ausnahmen auslöst.</span><span class="sxs-lookup"><span data-stu-id="94b5e-139">We recommend this approach when you do not know the data type of each resource or if the previous approach throws exceptions.</span></span>  
  
<a name="idictionaryenumerator"></a>   
### <a name="retrieving-resources-by-using-idictionaryenumerator-properties"></a><span data-ttu-id="94b5e-140">Abrufen von Ressourcen mithilfe von iatortionaryenumerator-Eigenschaften</span><span class="sxs-lookup"><span data-stu-id="94b5e-140">Retrieving Resources by Using IDictionaryEnumerator Properties</span></span>  
 <span data-ttu-id="94b5e-141">Die erste Methode zum Auflisten der Ressourcen in einer resources-Datei umfasst das direkte Abrufen des Name-Wert-Paars der einzelnen Ressourcen.</span><span class="sxs-lookup"><span data-stu-id="94b5e-141">The first method of enumerating the resources in a .resources file involves directly retrieving each resource's name/value pair.</span></span> <span data-ttu-id="94b5e-142">Nachdem Sie die `IDictionaryEnumerator.MoveNext`-Methode aufgerufen haben, um zu jeder Ressource in der Auflistung zu wechseln, können Sie den Ressourcennamen aus der Eigenschaft <xref:System.Collections.IDictionaryEnumerator.Key%2A?displayProperty=nameWithType> und den Ressourcen Daten aus der Eigenschaft <xref:System.Collections.IDictionaryEnumerator.Value%2A?displayProperty=nameWithType> abrufen.</span><span class="sxs-lookup"><span data-stu-id="94b5e-142">After you call the `IDictionaryEnumerator.MoveNext` method to move to each resource in the collection, you can retrieve the resource name from the <xref:System.Collections.IDictionaryEnumerator.Key%2A?displayProperty=nameWithType> property and the resource data from the <xref:System.Collections.IDictionaryEnumerator.Value%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="94b5e-143">Im folgenden Beispiel wird gezeigt, wie der Name und der Wert der einzelnen Ressourcen in einer resources-Datei mithilfe der Eigenschaften <xref:System.Collections.IDictionaryEnumerator.Key%2A?displayProperty=nameWithType> und <xref:System.Collections.IDictionaryEnumerator.Value%2A?displayProperty=nameWithType> abgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="94b5e-143">The following example shows how to retrieve the name and value of each resource in a .resources file by using the <xref:System.Collections.IDictionaryEnumerator.Key%2A?displayProperty=nameWithType> and <xref:System.Collections.IDictionaryEnumerator.Value%2A?displayProperty=nameWithType> properties.</span></span> <span data-ttu-id="94b5e-144">Um das Beispiel auszuführen, erstellen Sie die folgende Textdatei mit dem Namen "applicationresources. txt", um Zeichen folgen Ressourcen zu definieren.</span><span class="sxs-lookup"><span data-stu-id="94b5e-144">To run the example, create the following text file named ApplicationResources.txt to define string resources.</span></span>  
  
```  
Title="Contact Information"  
Label1="First Name:"  
Label2="Middle Name:"  
Label3="Last Name:"  
Label4="SSN:"  
Label5="Street Address:"  
Label6="City:"  
Label7="State:"  
Label8="Zip Code:"  
Label9="Home Phone:"  
Label10="Business Phone:"  
Label11="Mobile Phone:"  
Label12="Other Phone:"  
Label13="Fax:"  
Label14="Email Address:"  
Label15="Alternate Email Address:"  
```  
  
 <span data-ttu-id="94b5e-145">Anschließend können Sie die Textressourcen Datei mithilfe des folgenden Befehls in eine Binärdatei mit dem Namen applicationresources. Resources konvertieren:</span><span class="sxs-lookup"><span data-stu-id="94b5e-145">You can then convert the text resource file to a binary file named ApplicationResources.resources by using the following command:</span></span>  
  
 <span data-ttu-id="94b5e-146">**Resgen applicationresources. txt**</span><span class="sxs-lookup"><span data-stu-id="94b5e-146">**resgen ApplicationResources.txt**</span></span>  
  
 <span data-ttu-id="94b5e-147">Im folgenden Beispiel wird dann die <xref:System.Resources.ResourceReader>-Klasse verwendet, um jede Ressource in der eigenständigen Binary. resources-Datei aufzulisten und den Schlüsselnamen und den entsprechenden Wert anzuzeigen.</span><span class="sxs-lookup"><span data-stu-id="94b5e-147">The following example then uses the <xref:System.Resources.ResourceReader> class to enumerate each resource in the standalone binary .resources file and to display its key name and corresponding value.</span></span>  
  
 [!code-csharp[System.Resources.ResourceReader.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.resources.resourcereader.class/cs/class1.cs#1)]
 [!code-vb[System.Resources.ResourceReader.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.resources.resourcereader.class/vb/class1.vb#1)]  
  
 <span data-ttu-id="94b5e-148">Der Versuch, Ressourcen Daten aus der <xref:System.Collections.IDictionaryEnumerator.Value%2A?displayProperty=nameWithType>-Eigenschaft abzurufen, kann die folgenden Ausnahmen auslösen:</span><span class="sxs-lookup"><span data-stu-id="94b5e-148">The attempt to retrieve resource data from the <xref:System.Collections.IDictionaryEnumerator.Value%2A?displayProperty=nameWithType> property can throw the following exceptions:</span></span>  
  
-   <span data-ttu-id="94b5e-149">Eine <xref:System.FormatException>, wenn die Daten nicht im erwarteten Format vorliegen.</span><span class="sxs-lookup"><span data-stu-id="94b5e-149">A <xref:System.FormatException> if the data is not in the expected format.</span></span>  
  
-   <span data-ttu-id="94b5e-150">Eine <xref:System.IO.FileNotFoundException>, wenn die Assembly, die den Typ enthält, zu dem die Daten gehören, nicht gefunden werden kann.</span><span class="sxs-lookup"><span data-stu-id="94b5e-150">A <xref:System.IO.FileNotFoundException> if the assembly that contains the type to which the data belongs cannot be found.</span></span>  
  
-   <span data-ttu-id="94b5e-151">Eine <xref:System.TypeLoadException>, wenn der Typ, zu dem die Daten gehören, nicht gefunden werden kann.</span><span class="sxs-lookup"><span data-stu-id="94b5e-151">A <xref:System.TypeLoadException> if the type to which the data belongs cannot be cannot be found.</span></span>  
  
 <span data-ttu-id="94b5e-152">Normalerweise werden diese Ausnahmen ausgelöst, wenn die resources-Datei manuell geändert wurde, wenn die Assembly, in der ein Typ definiert ist, entweder nicht in einer Anwendung enthalten ist oder versehentlich gelöscht wurde, oder wenn die Assembly eine ältere Version ist, die vor dem Datum liegt. ein-Typ.</span><span class="sxs-lookup"><span data-stu-id="94b5e-152">Typically, these exceptions are thrown if the .resources file has been modified manually, if the assembly in which a type is defined has either not been included with an application or has been inadvertently deleted, or if the assembly is an older version that predates a type.</span></span> <span data-ttu-id="94b5e-153">Wenn eine dieser Ausnahmen ausgelöst wird, können Sie Ressourcen abrufen, indem Sie die einzelnen Ressourcen aufzählen und die <xref:System.Resources.ResourceReader.GetResourceData%2A> Methode aufrufen, wie im folgenden Abschnitt gezeigt.</span><span class="sxs-lookup"><span data-stu-id="94b5e-153">If one of these exceptions is thrown, you can retrieve resources by enumerating each resource and calling the <xref:System.Resources.ResourceReader.GetResourceData%2A> method, as the following section shows.</span></span> <span data-ttu-id="94b5e-154">Diese Vorgehensweise bietet Ihnen einige Informationen über den Datentyp, der von der <xref:System.Collections.IDictionaryEnumerator.Value%2A?displayProperty=nameWithType> Eigenschaft zurückgegeben wurde.</span><span class="sxs-lookup"><span data-stu-id="94b5e-154">This approach provides you with some information about the data type that the <xref:System.Collections.IDictionaryEnumerator.Value%2A?displayProperty=nameWithType> property attempted to return.</span></span>  
  
<a name="getresourcedata"></a>   
### <a name="retrieving-resources-by-name-with-getresourcedata"></a><span data-ttu-id="94b5e-155">Abrufen von Ressourcen nach Namen mit getresourcedata</span><span class="sxs-lookup"><span data-stu-id="94b5e-155">Retrieving Resources by Name with GetResourceData</span></span>  
 <span data-ttu-id="94b5e-156">Der zweite Ansatz zum Auflisten von Ressourcen in einer resources-Datei umfasst auch das Navigieren durch die Ressourcen in der Datei durch Aufrufen der `IDictionaryEnumerator.MoveNext`-Methode.</span><span class="sxs-lookup"><span data-stu-id="94b5e-156">The second approach to enumerating resources in a .resources file also involves navigating through the resources in the file by calling the `IDictionaryEnumerator.MoveNext` method.</span></span> <span data-ttu-id="94b5e-157">Für jede Ressource rufen Sie den Namen der Ressource aus der <xref:System.Collections.IDictionaryEnumerator.Key%2A?displayProperty=nameWithType>-Eigenschaft ab, die dann an die <xref:System.Resources.ResourceReader.GetResourceData%28System.String%2CSystem.String%40%2CSystem.Byte%5B%5D%40%29>-Methode weitergegeben wird, um die Daten der Ressource abzurufen.</span><span class="sxs-lookup"><span data-stu-id="94b5e-157">For each resource, you retrieve the resource's name from the <xref:System.Collections.IDictionaryEnumerator.Key%2A?displayProperty=nameWithType> property, which is then passed to the <xref:System.Resources.ResourceReader.GetResourceData%28System.String%2CSystem.String%40%2CSystem.Byte%5B%5D%40%29> method to retrieve the resource's data.</span></span> <span data-ttu-id="94b5e-158">Dies wird als Bytearray im `resourceData` Argument zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="94b5e-158">This is returned as a byte array in the `resourceData` argument.</span></span>  
  
 <span data-ttu-id="94b5e-159">Diese Vorgehensweise ist schwieriger als das Abrufen des Ressourcen namens und-Werts aus den Eigenschaften <xref:System.Collections.IDictionaryEnumerator.Key%2A?displayProperty=nameWithType> und <xref:System.Collections.IDictionaryEnumerator.Value%2A?displayProperty=nameWithType>, da die eigentlichen Bytes zurückgegeben werden, die den Ressourcen Wert bilden.</span><span class="sxs-lookup"><span data-stu-id="94b5e-159">This approach is more awkward than retrieving the resource name and value from the <xref:System.Collections.IDictionaryEnumerator.Key%2A?displayProperty=nameWithType> and <xref:System.Collections.IDictionaryEnumerator.Value%2A?displayProperty=nameWithType> properties, because it returns the actual bytes that form the resource value.</span></span> <span data-ttu-id="94b5e-160">Wenn der Versuch zum Abrufen der Ressource jedoch eine Ausnahme auslöst, kann die <xref:System.Resources.ResourceReader.GetResourceData%2A> Methode helfen, die Quelle der Ausnahme zu identifizieren, indem Informationen zum Datentyp der Ressource bereitgestellt werden.</span><span class="sxs-lookup"><span data-stu-id="94b5e-160">However, if the attempt to retrieve the resource throws an exception, the <xref:System.Resources.ResourceReader.GetResourceData%2A> method can help identify the source of the exception by supplying information about the resource's data type.</span></span> <span data-ttu-id="94b5e-161">Weitere Informationen über die Zeichenfolge, die den Datentyp der Ressource angibt, finden Sie unter <xref:System.Resources.ResourceReader.GetResourceData%2A>.</span><span class="sxs-lookup"><span data-stu-id="94b5e-161">For more information about the string that indicates the resource's data type, see <xref:System.Resources.ResourceReader.GetResourceData%2A>.</span></span>  
  
 <span data-ttu-id="94b5e-162">Im folgenden Beispiel wird veranschaulicht, wie diese Methode zum Abrufen von Ressourcen und zum behandeln ausgelösten Ausnahmen verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="94b5e-162">The following example illustrates how to use this approach to retrieve resources and to handle any exceptions that are thrown.</span></span> <span data-ttu-id="94b5e-163">Er erstellt Programm gesteuert eine binäre RESOURCES-Datei, die vier Zeichen folgen, einen booleschen Wert, eine ganze Zahl, eine Bitmap und ein benutzerdefiniertes `DateTimeTZI` Objekt enthält.</span><span class="sxs-lookup"><span data-stu-id="94b5e-163">It programmatically creates a binary .resources file that contains four strings, one Boolean, one integer, one bitmap, and one custom `DateTimeTZI` object.</span></span> <span data-ttu-id="94b5e-164">Gehen Sie folgendermaßen vor, um das Beispiel auszuführen:</span><span class="sxs-lookup"><span data-stu-id="94b5e-164">To run the example, do the following:</span></span>  
  
1.  <span data-ttu-id="94b5e-165">Erstellen Sie eine Assembly mit dem Namen Library. dll, die die `DateTimeTZI` Struktur enthält.</span><span class="sxs-lookup"><span data-stu-id="94b5e-165">Create an assembly named Library.dll that contains the `DateTimeTZI` structure.</span></span> <span data-ttu-id="94b5e-166">Im folgenden finden Sie den Quellcode für die Assembly.</span><span class="sxs-lookup"><span data-stu-id="94b5e-166">The following is the source code for the assembly.</span></span>  
  
     [!code-csharp[System.Resources.ResourceReader.Class#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.resources.resourcereader.class/cs/library.cs#4)]
     [!code-vb[System.Resources.ResourceReader.Class#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.resources.resourcereader.class/vb/library.vb#4)]  
  
     <span data-ttu-id="94b5e-167">Kompilieren Sie den Quellcode in C# mit dem folgenden Befehl:</span><span class="sxs-lookup"><span data-stu-id="94b5e-167">Compile the source code in C# by using the following command:</span></span>  
  
    ```  
    csc /t:library library.cs  
    ```  
  
     <span data-ttu-id="94b5e-168">Oder Sie können Sie in Visual Basic kompilieren, indem Sie den folgenden Befehl verwenden:</span><span class="sxs-lookup"><span data-stu-id="94b5e-168">Or, you can compile it in Visual Basic by using the following command:</span></span>  
  
    ```  
    vbc library.vb /t:library  
    ```  
  
2.  <span data-ttu-id="94b5e-169">Kompilieren Sie den folgenden Quellcode, und führen Sie ihn aus, der eine resources-Datei mit dem Namen contactresources. resources erstellt.</span><span class="sxs-lookup"><span data-stu-id="94b5e-169">Compile and execute the following source code, which creates a .resources file named ContactResources.resources.</span></span>  
  
     [!code-csharp[System.Resources.ResourceReader.Class#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.resources.resourcereader.class/cs/createresourceex1.cs#5)]
     [!code-vb[System.Resources.ResourceReader.Class#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.resources.resourcereader.class/vb/createresourceex1.vb#5)]  
  
     <span data-ttu-id="94b5e-170">Der Name der Quell Code Datei lautet CreateResources.cs.</span><span class="sxs-lookup"><span data-stu-id="94b5e-170">The source code file is named CreateResources.cs.</span></span> <span data-ttu-id="94b5e-171">Sie können ihn mit dem C# folgenden Befehl in kompilieren:</span><span class="sxs-lookup"><span data-stu-id="94b5e-171">You can compile it in C# by using the following command:</span></span>  
  
    ```  
    csc CreateResources.cs /r:library.dll  
    ```  
  
     <span data-ttu-id="94b5e-172">Oder Sie können Sie in Visual Basic kompilieren, indem Sie den folgenden Befehl verwenden:</span><span class="sxs-lookup"><span data-stu-id="94b5e-172">Or, you can compile it in Visual Basic by using the following command:</span></span>  
  
    ```  
    vbc CreateResources.vb /r:library.dll  
    ```  
  
3.  <span data-ttu-id="94b5e-173">Kompilieren Sie den folgenden Code, und führen Sie ihn aus, um die Ressourcen in der Datei contactresources. Resources aufzuzählen.</span><span class="sxs-lookup"><span data-stu-id="94b5e-173">Compile and run the following code to enumerate the resources in the ContactResources.resources file.</span></span>  
  
     [!code-csharp[System.Resources.ResourceReader.Class#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.resources.resourcereader.class/cs/readresourceex1.cs#6)]
     [!code-vb[System.Resources.ResourceReader.Class#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.resources.resourcereader.class/vb/readresourceex1.vb#6)]  
  
     <span data-ttu-id="94b5e-174">Nachdem Sie den Quellcode geändert haben (z. b. durch das absichtliche Auslösen einer <xref:System.FormatException> am Ende des `try` Blocks) oder indem Sie die Assembly. dll-Assembly so umbenennen, dass Sie zur Laufzeit nicht verfügbar ist, können Sie das Beispiel ausführen, um zu erfahren, wie Sie mithilfe von Aufrufen von <xref:System.Resources.ResourceReader.GetResourceData%2A> Ressourcen Informationen abrufen oder wiederherstellen können.</span><span class="sxs-lookup"><span data-stu-id="94b5e-174">After modifying the source code (for example, by deliberately throwing a <xref:System.FormatException> at the end of the `try` block) or renaming the Library.dll assembly so that it is unavailable at runtime, you can run the example to see how calls to <xref:System.Resources.ResourceReader.GetResourceData%2A> enable you to retrieve or recreate some resource information.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Resources.Reader</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="94b5e-175">Initialisiert eine neue Instanz der <see cref="T:System.Resources.ResourceReader" />-Klasse.</span><span class="sxs-lookup"><span data-stu-id="94b5e-175">Initializes a new instance of the <see cref="T:System.Resources.ResourceReader" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

<span data-ttu-id="94b5e-176">[!INCLUDE [untrusted-data-instance-note](~/includes/untrusted-data-instance-note.md)].</span><span class="sxs-lookup"><span data-stu-id="94b5e-176">[!INCLUDE [untrusted-data-instance-note](~/includes/untrusted-data-instance-note.md)].</span></span>
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ResourceReader (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResourceReader.#ctor(System.IO.Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ResourceReader(System::IO::Stream ^ stream);" />
      <MemberSignature Language="F#" Value="new System.Resources.ResourceReader : System.IO.Stream -&gt; System.Resources.ResourceReader" Usage="new System.Resources.ResourceReader stream" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Resources.Reader</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="stream"><span data-ttu-id="94b5e-177">Der Eingabedatenstrom zum Lesen von Ressourcen.</span><span class="sxs-lookup"><span data-stu-id="94b5e-177">The input stream for reading resources.</span></span></param>
        <summary><span data-ttu-id="94b5e-178">Initialisiert eine neue Instanz der <see cref="T:System.Resources.ResourceReader" />-Klasse für den angegebenen Stream.</span><span class="sxs-lookup"><span data-stu-id="94b5e-178">Initializes a new instance of the <see cref="T:System.Resources.ResourceReader" /> class for the specified stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="94b5e-179">Der <xref:System.Resources.ResourceReader.%23ctor%28System.IO.Stream%29>-Konstruktor instanziiert ein <xref:System.Resources.ResourceReader> Objekt, das Ressourcen aus einer eigenständigen resources-Datei oder aus einer resources-Datei, die in eine Assembly eingebettet ist, abruft.</span><span class="sxs-lookup"><span data-stu-id="94b5e-179">The <xref:System.Resources.ResourceReader.%23ctor%28System.IO.Stream%29> constructor instantiates a <xref:System.Resources.ResourceReader> object that retrieves resources either from a standalone .resources file or from a .resources file that is embedded in an assembly.</span></span> <span data-ttu-id="94b5e-180">Zum Lesen aus einer eigenständigen resources-Datei instanziieren Sie ein <xref:System.IO.Stream>-Objekt und übergeben es an den <xref:System.Resources.ResourceReader.%23ctor%28System.IO.Stream%29>-Konstruktor.</span><span class="sxs-lookup"><span data-stu-id="94b5e-180">To read from a standalone .resources file, instantiate a <xref:System.IO.Stream> object and pass it to the <xref:System.Resources.ResourceReader.%23ctor%28System.IO.Stream%29> constructor.</span></span> <span data-ttu-id="94b5e-181">Um aus einer eingebetteten resources-Datei zu lesen, müssen Sie die <xref:System.Reflection.Assembly.GetManifestResourceStream%2A?displayProperty=nameWithType>-Methode mit dem Namen der resources-Datei unter Berücksichtigung von Groß-/Kleinschreibung aufzurufen und das zurückgegebene <xref:System.IO.Stream> Objekt an den <xref:System.Resources.ResourceReader.%23ctor%28System.IO.Stream%29>-Konstruktor übergeben.</span><span class="sxs-lookup"><span data-stu-id="94b5e-181">To read from an embedded .resources file, call the <xref:System.Reflection.Assembly.GetManifestResourceStream%2A?displayProperty=nameWithType> method with the case-sensitive name of the .resources file, and pass the returned <xref:System.IO.Stream> object to the <xref:System.Resources.ResourceReader.%23ctor%28System.IO.Stream%29> constructor.</span></span>  
  
[!INCLUDE [untrusted-data-instance-note](~/includes/untrusted-data-instance-note.md)]
  
## Examples  
 <span data-ttu-id="94b5e-182">Im Beispiel in diesem Abschnitt wird die folgende txt-Datei mit dem Namen `PatientForm.txt` verwendet, um die von einer Anwendung verwendeten Ressourcen zu definieren.</span><span class="sxs-lookup"><span data-stu-id="94b5e-182">The example in this section uses the following .txt file named `PatientForm.txt` to define the resources used by an application.</span></span>  
  
```  
  
Title="Top Pet Animal Clinic"  
Label1="Patient Number:"  
Label2="Pet Name:"  
Label3="Species:"  
Label4="Breed:"  
Label5="Date of Birth:"  
Label6="Age:"  
Label7="Owner:"  
Label8="Address:"  
Label9="Home Phone:"  
Label10="Work Phone:"  
Label11="Mobile Phone:"  
  
```  
  
 <span data-ttu-id="94b5e-183">Sie können die txt-Datei in eine resources-Datei kompilieren, indem Sie den folgenden Befehl ausgeben:</span><span class="sxs-lookup"><span data-stu-id="94b5e-183">You can compile the .txt file into a .resources file by issuing the following command:</span></span>  
  
 <span data-ttu-id="94b5e-184">**Resgen patientform. txt**</span><span class="sxs-lookup"><span data-stu-id="94b5e-184">**resgen PatientForm.txt**</span></span>  
  
 <span data-ttu-id="94b5e-185">Im folgenden Beispiel wird davon ausgegangen, dass die Ressourcen Datei in die Assembly eingebettet ist, die den ausführbaren Code der Anwendung enthält.</span><span class="sxs-lookup"><span data-stu-id="94b5e-185">The following example assumes that the resource file is embedded in the assembly that contains the application's executable code.</span></span> <span data-ttu-id="94b5e-186">Er ruft eine Ressourcen Datei mit dem Namen `PatientForm.resources` aus den aktuell ausgeführten Assemblys ab und zeigt den Namen und den Wert der einzelnen Ressourcen an.</span><span class="sxs-lookup"><span data-stu-id="94b5e-186">It retrieves a resource file named `PatientForm.resources` from the currently executing assemblies and displays the name and value of each of its resources.</span></span>  
  
 [!code-csharp[System.Resources.ResourceReader.Ctor#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.resources.resourcereader.ctor/cs/stream1.cs#1)]
 [!code-vb[System.Resources.ResourceReader.Ctor#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.resources.resourcereader.ctor/vb/stream1.vb#1)]  
  
 <span data-ttu-id="94b5e-187">Wenn das C# Beispiel mit dem Namen `Example.cs`benannt wird, können Sie es mit dem folgenden Befehl kompilieren:</span><span class="sxs-lookup"><span data-stu-id="94b5e-187">If the C# example is named `Example.cs`, you can compile it by using the following command:</span></span>  
  
 <span data-ttu-id="94b5e-188">**CSC example.cs/res: patientform. Resources**</span><span class="sxs-lookup"><span data-stu-id="94b5e-188">**csc Example.cs /res:PatientForm.resources**</span></span>  
  
 <span data-ttu-id="94b5e-189">Wenn das Visual Basic Beispiel `Example.vb`genannt wird, können Sie es mit dem folgenden Befehl kompilieren:</span><span class="sxs-lookup"><span data-stu-id="94b5e-189">If the Visual Basic example is named `Example.vb`, you can compile it by using the following command:</span></span>  
  
 <span data-ttu-id="94b5e-190">**Vbc-Beispiel. vb/res: patientform. Resources**</span><span class="sxs-lookup"><span data-stu-id="94b5e-190">**vbc Example.vb /res:PatientForm.resources**</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="94b5e-191">Der <paramref name="stream" />-Parameter ist nicht lesbar.</span><span class="sxs-lookup"><span data-stu-id="94b5e-191">The <paramref name="stream" /> parameter is not readable.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="94b5e-192">Der Parameter <paramref name="stream" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="94b5e-192">The <paramref name="stream" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="94b5e-193">Beim Zugriff auf <paramref name="stream" /> ist ein E/A-Fehler aufgetreten.</span><span class="sxs-lookup"><span data-stu-id="94b5e-193">An I/O error has occurred while accessing <paramref name="stream" />.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="94b5e-194">zum Bereitstellen von Serialisierungsdiensten.</span><span class="sxs-lookup"><span data-stu-id="94b5e-194">for providing serialization services.</span></span> <span data-ttu-id="94b5e-195">Sicherheitsmaßnahme: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</span><span class="sxs-lookup"><span data-stu-id="94b5e-195">Security action: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</span></span> <span data-ttu-id="94b5e-196">Zugehörige Enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.SerializationFormatter" /></span><span class="sxs-lookup"><span data-stu-id="94b5e-196">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.SerializationFormatter" /></span></span></permission>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="94b5e-197">Erfordert volle Vertrauenswürdigkeit für den unmittelbaren Aufrufer.</span><span class="sxs-lookup"><span data-stu-id="94b5e-197">requires full trust for the immediate caller.</span></span> <span data-ttu-id="94b5e-198">Dieser Member kann nicht von teilweise vertrauenswürdigem oder transparentem Code verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="94b5e-198">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="M:System.Reflection.Assembly.GetManifestResourceStream(System.String)" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ResourceReader (string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResourceReader.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (fileName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ResourceReader(System::String ^ fileName);" />
      <MemberSignature Language="F#" Value="new System.Resources.ResourceReader : string -&gt; System.Resources.ResourceReader" Usage="new System.Resources.ResourceReader fileName" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.Reader</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="fileName"><span data-ttu-id="94b5e-199">Der Pfad und der Name der zu lesenden Ressourcen-Datei.</span><span class="sxs-lookup"><span data-stu-id="94b5e-199">The path and name of the resource file to read.</span></span> <span data-ttu-id="94b5e-200">Bei <c>filename</c> wird nicht zwischen Groß- und Kleinschreibung unterschieden.</span><span class="sxs-lookup"><span data-stu-id="94b5e-200"><c>filename</c> is not case-sensitive.</span></span></param>
        <summary><span data-ttu-id="94b5e-201">Initialisiert eine neue Instanz der <see cref="T:System.Resources.ResourceReader" />-Klasse für die angegebene benannten Ressourcendatei.</span><span class="sxs-lookup"><span data-stu-id="94b5e-201">Initializes a new instance of the <see cref="T:System.Resources.ResourceReader" /> class for the specified named resource file.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="94b5e-202">Der <xref:System.Resources.ResourceReader.%23ctor%28System.String%29>-Konstruktor instanziiert ein <xref:System.Resources.ResourceReader> Objekt, das Ressourcen aus einer eigenständigen resources-Datei abruft.</span><span class="sxs-lookup"><span data-stu-id="94b5e-202">The <xref:System.Resources.ResourceReader.%23ctor%28System.String%29> constructor instantiates a <xref:System.Resources.ResourceReader> object that retrieves resources from a standalone .resources file.</span></span> <span data-ttu-id="94b5e-203">Um Ressourcen aus einer eingebetteten resources-Datei abzurufen, verwenden Sie den <xref:System.Resources.ResourceReader.%23ctor%28System.IO.Stream%29>-Konstruktor.</span><span class="sxs-lookup"><span data-stu-id="94b5e-203">To retrieve resources from an embedded .resources file, use the <xref:System.Resources.ResourceReader.%23ctor%28System.IO.Stream%29> constructor.</span></span>  

[!INCLUDE [untrusted-data-instance-note](~/includes/untrusted-data-instance-note.md)]

## Examples  
 <span data-ttu-id="94b5e-204">Im Beispiel in diesem Abschnitt wird die folgende txt-Datei mit dem Namen `PatientForm.txt` verwendet, um die von einer Anwendung verwendeten Ressourcen zu definieren.</span><span class="sxs-lookup"><span data-stu-id="94b5e-204">The example in this section uses the following .txt file named `PatientForm.txt` to define the resources used by an application.</span></span>  
  
```  
  
Title="Top Pet Animal Clinic"  
Label1="Patient Number:"  
Label2="Pet Name:"  
Label3="Species:"  
Label4="Breed:"  
Label5="Date of Birth:"  
Label6="Age:"  
Label7="Owner:"  
Label8="Address:"  
Label9="Home Phone:"  
Label10="Work Phone:"  
Label11="Mobile Phone:"  
  
```  
  
 <span data-ttu-id="94b5e-205">Sie können diese txt-Datei in eine resources-Datei kompilieren, indem Sie den folgenden Befehl ausgeben:</span><span class="sxs-lookup"><span data-stu-id="94b5e-205">You can compile this .txt file into a .resources file by issuing the following command:</span></span>  
  
 <span data-ttu-id="94b5e-206">**Resgen patientform. txt**</span><span class="sxs-lookup"><span data-stu-id="94b5e-206">**resgen PatientForm.txt**</span></span>  
  
 <span data-ttu-id="94b5e-207">Im folgenden Beispiel werden die Ressourcen in `PatientForm.resources` aufgelistet und der Name und der Wert der einzelnen Werte angezeigt.</span><span class="sxs-lookup"><span data-stu-id="94b5e-207">The following example enumerates the resources in `PatientForm.resources` and displays the name and value of each.</span></span>  
  
 [!code-csharp[System.Resources.ResourceReader.Ctor#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.resources.resourcereader.ctor/cs/stream2.cs#2)]
 [!code-vb[System.Resources.ResourceReader.Ctor#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.resources.resourcereader.ctor/vb/stream2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="94b5e-208">Der Parameter <paramref name="fileName" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="94b5e-208">The <paramref name="fileName" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="94b5e-209">Die Datei kann nicht gefunden werden.</span><span class="sxs-lookup"><span data-stu-id="94b5e-209">The file cannot be found.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="94b5e-210">Ein E/A-Fehler ist aufgetreten.</span><span class="sxs-lookup"><span data-stu-id="94b5e-210">An I/O error has occurred.</span></span></exception>
        <exception cref="T:System.BadImageFormatException"><span data-ttu-id="94b5e-211">Die Ressourcendatei weist ein ungültiges Format auf.</span><span class="sxs-lookup"><span data-stu-id="94b5e-211">The resource file has an invalid format.</span></span> <span data-ttu-id="94b5e-212">Zum Beispiel kann die Länge der Datei 0 (null) sein.</span><span class="sxs-lookup"><span data-stu-id="94b5e-212">For example, the length of the file may be zero.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResourceReader.Close" />
      <MemberSignature Language="VB.NET" Value="Public Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Close();" />
      <MemberSignature Language="F#" Value="abstract member Close : unit -&gt; unit&#xA;override this.Close : unit -&gt; unit" Usage="resourceReader.Close " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Resources.IResourceReader.Close</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.Reader</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="94b5e-213">Gibt alle diesem <see cref="T:System.Resources.ResourceReader" />-Objekt zugeordneten Ressourcen des Betriebssystems frei.</span><span class="sxs-lookup"><span data-stu-id="94b5e-213">Releases all operating system resources associated with this <see cref="T:System.Resources.ResourceReader" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="94b5e-214"><xref:System.Resources.ResourceReader.Close%2A> können sicher mehrmals aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="94b5e-214"><xref:System.Resources.ResourceReader.Close%2A> can be safely called multiple times.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="94b5e-215">Im folgenden Beispiel werden die Ressourcen einer Datei durchlaufen, und alle gefundenen Schlüssel-Wert-Paare werden angezeigt.</span><span class="sxs-lookup"><span data-stu-id="94b5e-215">The following example moves through a file's resources and displays all the key/value pairs it finds.</span></span> <span data-ttu-id="94b5e-216">Der Code verwendet dann die <xref:System.Resources.ResourceReader.Close%2A>-Methode, um den <xref:System.Resources.ResourceReader> zu beenden und alle von ihm verwendeten Ressourcen freizugeben.</span><span class="sxs-lookup"><span data-stu-id="94b5e-216">The code then uses the <xref:System.Resources.ResourceReader.Close%2A> method to shut down the <xref:System.Resources.ResourceReader> and to release all resources used by it.</span></span>  
  
 [!code-cpp[System.Resources.ResourceReader.GetEnumerator Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Resources.ResourceReader.GetEnumerator Example/CPP/getenumerator.cpp#1)]
 [!code-csharp[System.Resources.ResourceReader.GetEnumerator Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Resources.ResourceReader.GetEnumerator Example/CS/getenumerator.cs#1)]
 [!code-vb[System.Resources.ResourceReader.GetEnumerator Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Resources.ResourceReader.GetEnumerator Example/VB/getenumerator.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResourceReader.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="resourceReader.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Resources.Reader</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="94b5e-217">Gibt alle von der aktuellen Instanz der <see cref="T:System.Resources.ResourceReader" />-Klasse verwendeten Ressourcen frei.</span><span class="sxs-lookup"><span data-stu-id="94b5e-217">Releases all resources used by the current instance of the <see cref="T:System.Resources.ResourceReader" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="94b5e-218">Wenn Sie diese Instanz von <xref:System.Resources.ResourceReader>nicht mehr benötigen, können Sie <xref:System.Resources.ResourceReader.Dispose%2A> abrufen, um alle von dieser Instanz verwendeten Ressourcen freizugeben.</span><span class="sxs-lookup"><span data-stu-id="94b5e-218">When you are finished using this instance of <xref:System.Resources.ResourceReader>, call <xref:System.Resources.ResourceReader.Dispose%2A> to release all resources used by this instance.</span></span> <span data-ttu-id="94b5e-219">Sie sollten weitere Verweise auf diese <xref:System.Resources.ResourceReader> Instanz entfernen, damit die Garbage Collector den Speicher der Instanz freigeben kann, anstatt Sie für die Beendigung aufrechtzuerhalten.</span><span class="sxs-lookup"><span data-stu-id="94b5e-219">You should eliminate further references to this <xref:System.Resources.ResourceReader> instance so that the garbage collector can reclaim the memory of the instance instead of keeping it alive for finalization.</span></span>  
  
 <span data-ttu-id="94b5e-220"><xref:System.Resources.ResourceReader.Dispose%2A> Ruft die private verwerfen (Boolean)-Methode auf, die den Code zum Freigeben von verwalteten und nicht verwalteten Ressourcen enthält.</span><span class="sxs-lookup"><span data-stu-id="94b5e-220"><xref:System.Resources.ResourceReader.Dispose%2A> calls the private Dispose(Boolean) method, which contains the code to release managed and unmanaged resources.</span></span> <span data-ttu-id="94b5e-221">Weitere Informationen finden Sie unter [Implementieren einer](~/docs/standard/garbage-collection/implementing-dispose.md)verwerfen-Methode.</span><span class="sxs-lookup"><span data-stu-id="94b5e-221">For more information, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IDictionaryEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.IDictionaryEnumerator GetEnumerator() cil managed" FrameworkAlternate="netcore-1.0;netcore-1.1" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResourceReader.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IDictionaryEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::IDictionaryEnumerator ^ GetEnumerator();" FrameworkAlternate="netcore-1.0;netcore-1.1" />
      <MemberSignature Language="F#" Value="member this.GetEnumerator : unit -&gt; System.Collections.IDictionaryEnumerator" Usage="resourceReader.GetEnumerator " FrameworkAlternate="netcore-1.0;netcore-1.1" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IDictionaryEnumerator GetEnumerator() cil managed" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::IDictionaryEnumerator ^ GetEnumerator();" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="abstract member GetEnumerator : unit -&gt; System.Collections.IDictionaryEnumerator&#xA;override this.GetEnumerator : unit -&gt; System.Collections.IDictionaryEnumerator" Usage="resourceReader.GetEnumerator " FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Resources.IResourceReader.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Resources.Reader</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IDictionaryEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="94b5e-222">Gibt einen Enumerator für dieses <see cref="T:System.Resources.ResourceReader" />-Objekt zurück.</span><span class="sxs-lookup"><span data-stu-id="94b5e-222">Returns an enumerator for this <see cref="T:System.Resources.ResourceReader" /> object.</span></span></summary>
        <returns><span data-ttu-id="94b5e-223">Ein Enumerator für dieses <see cref="T:System.Resources.ResourceReader" />-Objekt.</span><span class="sxs-lookup"><span data-stu-id="94b5e-223">An enumerator for this <see cref="T:System.Resources.ResourceReader" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="94b5e-224">In der Regel listet Sie Ressourcen auf, indem Sie die <xref:System.Resources.ResourceReader.GetEnumerator%2A>-Methode aufrufen und dann wiederholt die <xref:System.Collections.IEnumerator.MoveNext%2A>-Methode für das zurückgegebene <xref:System.Collections.IDictionaryEnumerator> Objekt aufrufen, bis die Methode `false`zurückgibt.</span><span class="sxs-lookup"><span data-stu-id="94b5e-224">Typically, you enumerate resources by calling the <xref:System.Resources.ResourceReader.GetEnumerator%2A> method and then repeatedly calling the <xref:System.Collections.IEnumerator.MoveNext%2A> method on the returned <xref:System.Collections.IDictionaryEnumerator> object until the method returns `false`.</span></span> <span data-ttu-id="94b5e-225">Der Ressourcen Name ist in der <xref:System.Collections.IDictionaryEnumerator.Key%2A?displayProperty=nameWithType>-Eigenschaft verfügbar. der Wert aus der <xref:System.Collections.IDictionaryEnumerator.Value%2A?displayProperty=nameWithType>-Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="94b5e-225">The resource name is available from the <xref:System.Collections.IDictionaryEnumerator.Key%2A?displayProperty=nameWithType> property; its value from the <xref:System.Collections.IDictionaryEnumerator.Value%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="94b5e-226">Das Beispiel veranschaulicht, wie Ressourcen auf diese Weise aufgelistet werden.</span><span class="sxs-lookup"><span data-stu-id="94b5e-226">The example illustrates how to enumerate resources in this way.</span></span>  
  
 <span data-ttu-id="94b5e-227">Die Implementierung der <xref:System.Collections.IDictionaryEnumerator.Value%2A?displayProperty=nameWithType>-Eigenschaft durch die <xref:System.Resources.ResourceReader>-Klasse kann die folgenden Ausnahmen auslösen:</span><span class="sxs-lookup"><span data-stu-id="94b5e-227">The implementation of the <xref:System.Collections.IDictionaryEnumerator.Value%2A?displayProperty=nameWithType> property by the <xref:System.Resources.ResourceReader> class can throw the following exceptions:</span></span>  
  
-   <xref:System.IO.FileNotFoundException>  
  
     <span data-ttu-id="94b5e-228">Die Assembly, die den Typ enthält, zu dem die Daten gehören, kann nicht gefunden werden.</span><span class="sxs-lookup"><span data-stu-id="94b5e-228">The assembly that contains the type to which the data belongs cannot be found.</span></span>  
  
-   <xref:System.FormatException>  
  
     <span data-ttu-id="94b5e-229">Die Daten haben nicht das erwartete Format.</span><span class="sxs-lookup"><span data-stu-id="94b5e-229">The data is not in the expected format.</span></span>  
  
-   <xref:System.TypeLoadException>  
  
     <span data-ttu-id="94b5e-230">Der Typ, zu dem die Daten gehören, kann nicht gefunden werden.</span><span class="sxs-lookup"><span data-stu-id="94b5e-230">The type to which the data belongs cannot be found.</span></span>  
  
 <span data-ttu-id="94b5e-231">Sie können die Ausnahme behandeln, indem Sie die <xref:System.Resources.ResourceReader.GetResourceData%2A>-Methode aufrufen, um Informationen über den Datentyp und das Bytearray abzurufen, das der benannten Ressource zugewiesen ist.</span><span class="sxs-lookup"><span data-stu-id="94b5e-231">You can handle the exception by calling the <xref:System.Resources.ResourceReader.GetResourceData%2A> method to retrieve information about the data type and the byte array assigned to the named resource.</span></span> <span data-ttu-id="94b5e-232">Weitere Informationen finden Sie im Abschnitt "Abrufen von Ressourcen nach Name mit getresourcedata" im Thema <xref:System.Resources.ResourceReader>-Klasse.</span><span class="sxs-lookup"><span data-stu-id="94b5e-232">For more information, see the "Retrieving Resources by Name with GetResourceData" section in the <xref:System.Resources.ResourceReader> class topic.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="94b5e-233">Die <xref:System.Resources.ResourceReader>-Klasse enthält zwei Methoden, die Enumeratoren zurückgeben.</span><span class="sxs-lookup"><span data-stu-id="94b5e-233">The <xref:System.Resources.ResourceReader> class includes two methods that return enumerators.</span></span> <span data-ttu-id="94b5e-234">Die <xref:System.Resources.ResourceReader.GetEnumerator%2A>-Methode gibt ein <xref:System.Collections.IDictionaryEnumerator> Interface-Objekt zurück und ist die empfohlene Methode, die beim Auflisten von Ressourcen aufgerufen werden soll.</span><span class="sxs-lookup"><span data-stu-id="94b5e-234">The <xref:System.Resources.ResourceReader.GetEnumerator%2A> method returns an <xref:System.Collections.IDictionaryEnumerator> interface object and is the recommended method to call when enumerating resources.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="94b5e-235">Im Beispiel in diesem Abschnitt wird die folgende txt-Datei mit dem Namen `PatientForm.txt` verwendet, um die von einer Anwendung verwendeten Ressourcen zu definieren.</span><span class="sxs-lookup"><span data-stu-id="94b5e-235">The example in this section uses the following .txt file named `PatientForm.txt` to define the resources used by an application.</span></span>  
  
```  
  
Title="Top Pet Animal Clinic"  
Label1="Patient Number:"  
Label2="Pet Name:"  
Label3="Species:"  
Label4="Breed:"  
Label5="Date of Birth:"  
Label6="Age:"  
Label7="Owner:"  
Label8="Address:"  
Label9="Home Phone:"  
Label10="Work Phone:"  
Label11="Mobile Phone:"  
  
```  
  
 <span data-ttu-id="94b5e-236">Sie können die txt-Datei in eine resources-Datei kompilieren, indem Sie den folgenden Befehl ausgeben:</span><span class="sxs-lookup"><span data-stu-id="94b5e-236">You can compile the .txt file into a .resources file by issuing the following command:</span></span>  
  
 <span data-ttu-id="94b5e-237">**Resgen patientform. txt**</span><span class="sxs-lookup"><span data-stu-id="94b5e-237">**resgen PatientForm.txt**</span></span>  
  
 <span data-ttu-id="94b5e-238">Im folgenden Beispiel werden die Ressourcen in `PatientForm.resources` aufgelistet und der Name und der Wert der einzelnen Werte angezeigt.</span><span class="sxs-lookup"><span data-stu-id="94b5e-238">The following example enumerates the resources in `PatientForm.resources` and displays the name and value of each.</span></span>  
  
 [!code-csharp[System.Resources.ResourceReader.Ctor#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.resources.resourcereader.ctor/cs/stream2.cs#2)]
 [!code-vb[System.Resources.ResourceReader.Ctor#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.resources.resourcereader.ctor/vb/stream2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="94b5e-239">Der Reader wurde geschlossen oder freigegeben, der Zugriff ist daher nicht möglich.</span><span class="sxs-lookup"><span data-stu-id="94b5e-239">The reader has been closed or disposed, and cannot be accessed.</span></span></exception>
        <altmember cref="T:System.Collections.IDictionary" />
        <altmember cref="T:System.Collections.IDictionaryEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="GetResourceData">
      <MemberSignature Language="C#" Value="public void GetResourceData (string resourceName, out string resourceType, out byte[] resourceData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void GetResourceData(string resourceName, [out] string&amp; resourceType, [out] unsigned int8[]&amp; resourceData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResourceReader.GetResourceData(System.String,System.String@,System.Byte[]@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetResourceData (resourceName As String, ByRef resourceType As String, ByRef resourceData As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GetResourceData(System::String ^ resourceName, [Runtime::InteropServices::Out] System::String ^ % resourceType, [Runtime::InteropServices::Out] cli::array &lt;System::Byte&gt; ^ % resourceData);" />
      <MemberSignature Language="F#" Value="member this.GetResourceData : string * string * Byte[] -&gt; unit" Usage="resourceReader.GetResourceData (resourceName, resourceType, resourceData)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.Reader</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceName" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
        <Parameter Name="resourceType" Type="System.String" RefType="out" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
        <Parameter Name="resourceData" Type="System.Byte[]" RefType="out" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="resourceName"><span data-ttu-id="94b5e-240">Der Name einer Ressource.</span><span class="sxs-lookup"><span data-stu-id="94b5e-240">The name of a resource.</span></span></param>
        <param name="resourceType"><span data-ttu-id="94b5e-241">Diese Methode gibt eine Zeichenfolge zurück, die den Typnamen der abgerufenen Ressource darstellt.</span><span class="sxs-lookup"><span data-stu-id="94b5e-241">When this method returns, contains a string that represents the type name of the retrieved resource.</span></span> <span data-ttu-id="94b5e-242">Dieser Parameter wird nicht initialisiert übergeben.</span><span class="sxs-lookup"><span data-stu-id="94b5e-242">This parameter is passed uninitialized.</span></span></param>
        <param name="resourceData"><span data-ttu-id="94b5e-243">Wenn diese Methode beendet wird, enthält sie ein Bytearray, das die Binärdarstellung des abgerufenen Typs ist.</span><span class="sxs-lookup"><span data-stu-id="94b5e-243">When this method returns, contains a byte array that is the binary representation of the retrieved type.</span></span> <span data-ttu-id="94b5e-244">Dieser Parameter wird nicht initialisiert übergeben.</span><span class="sxs-lookup"><span data-stu-id="94b5e-244">This parameter is passed uninitialized.</span></span></param>
        <summary><span data-ttu-id="94b5e-245">Ruft den Typnamen und die Daten einer benannten Ressource aus einer geöffneten Ressourcendatei oder einem geöffneten Datenstrom ab.</span><span class="sxs-lookup"><span data-stu-id="94b5e-245">Retrieves the type name and data of a named resource from an open resource file or stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="94b5e-246">Die <xref:System.Resources.ResourceReader.GetResourceData%2A>-Methode ruft den Wert einer benannten Ressource als Bytearray ab.</span><span class="sxs-lookup"><span data-stu-id="94b5e-246">The <xref:System.Resources.ResourceReader.GetResourceData%2A> method retrieves the value of a named resource as a byte array.</span></span> <span data-ttu-id="94b5e-247">Sie wird normalerweise verwendet, wenn die <xref:System.Collections.IDictionaryEnumerator.Value%2A>-Eigenschaft eine Ausnahme auslöst, wenn Sie versucht, den Wert einer Ressource abzurufen.</span><span class="sxs-lookup"><span data-stu-id="94b5e-247">It is typically used when the <xref:System.Collections.IDictionaryEnumerator.Value%2A> property throws an exception when it tries to retrieve the value of a resource.</span></span>  
  
 <span data-ttu-id="94b5e-248">`resourceType` ist eine Zeichenfolge, die den Datentyp der Ressource darstellt.</span><span class="sxs-lookup"><span data-stu-id="94b5e-248">`resourceType` is a string that represents the data type of the resource.</span></span> <span data-ttu-id="94b5e-249">Dabei kann es sich um einen der folgenden Werte handeln:</span><span class="sxs-lookup"><span data-stu-id="94b5e-249">It can be any of the following values:</span></span>  
  
-   <span data-ttu-id="94b5e-250">Die Zeichen folgen Darstellung eines `ResourceTypeCode` Enumerationsmembers, der den Datentyp der Ressource angibt.</span><span class="sxs-lookup"><span data-stu-id="94b5e-250">The string representation of a `ResourceTypeCode` enumeration member that indicates the data type of the resource.</span></span> <span data-ttu-id="94b5e-251">`ResourceTypeCode` ist eine private Enumeration, die von verwendet wird. damit wird angegeben, dass ein spezielles Binärformat verwendet wird, um einen von 19 allgemeinen Datentypen zu speichern.</span><span class="sxs-lookup"><span data-stu-id="94b5e-251">`ResourceTypeCode` is a private enumeration that is used by .to indicate that a special binary format is used to store one of 19 common data types.</span></span> <span data-ttu-id="94b5e-252">Hierzu gehören die .NET Framework Grund Datentypen (<xref:System.Boolean>, <xref:System.Byte>, <xref:System.Char>, <xref:System.Decimal>, <xref:System.Double>, <xref:System.Int16>, <xref:System.Int32>, <xref:System.Int64>, <xref:System.Single>, <xref:System.SByte>, <xref:System.UInt16>, <xref:System.UInt32>, <xref:System.UInt64>) sowie <xref:System.String>, <xref:System.DateTime>und <xref:System.TimeSpan>. Außerdem enthält die `ResourceTypeCode`-Enumeration die Werte, die in der folgenden Tabelle aufgeführt sind.</span><span class="sxs-lookup"><span data-stu-id="94b5e-252">These include the .NET Framework primitive data types (<xref:System.Boolean>, <xref:System.Byte>, <xref:System.Char>, <xref:System.Decimal>, <xref:System.Double>, <xref:System.Int16>, <xref:System.Int32>, <xref:System.Int64>, <xref:System.Single>, <xref:System.SByte>, <xref:System.UInt16>, <xref:System.UInt32>, <xref:System.UInt64>), as well as <xref:System.String>, <xref:System.DateTime>, and <xref:System.TimeSpan>, In addition, the `ResourceTypeCode` enumeration includes the values shown in the following table.</span></span>  
  
    |<span data-ttu-id="94b5e-253">Resourcetypeer Code-Wert</span><span class="sxs-lookup"><span data-stu-id="94b5e-253">ResourceTypeCode value</span></span>|<span data-ttu-id="94b5e-254">Beschreibung</span><span class="sxs-lookup"><span data-stu-id="94b5e-254">Description</span></span>|  
    |----------------------------|-----------------|  
    |`ResourceTypeCode.ByteArray`|<span data-ttu-id="94b5e-255">Bei den Daten handelt es sich um ein Bytearray.</span><span class="sxs-lookup"><span data-stu-id="94b5e-255">The data is a byte array.</span></span> <span data-ttu-id="94b5e-256">Dieser Datentyp ergibt sich normalerweise aus dem aufzurufenden <xref:System.Resources.ResourceWriter.AddResource%28System.String%2CSystem.Byte%5B%5D%29?displayProperty=nameWithType>-Methode.</span><span class="sxs-lookup"><span data-stu-id="94b5e-256">This data type commonly results from the call to the <xref:System.Resources.ResourceWriter.AddResource%28System.String%2CSystem.Byte%5B%5D%29?displayProperty=nameWithType> method.</span></span>|  
    |`ResourceTypeCode.Null`|<span data-ttu-id="94b5e-257">Bei den Daten handelt es sich um einen NULL-Verweis.</span><span class="sxs-lookup"><span data-stu-id="94b5e-257">The data is a null reference.</span></span> <span data-ttu-id="94b5e-258">Dieser Datentyp ergibt sich häufig aus dem aufzurufenden <xref:System.Resources.ResourceWriter.AddResource%28System.String%2CSystem.Object%29?displayProperty=nameWithType>-Methode mit einem Objekt, dessen Wert `null`ist.</span><span class="sxs-lookup"><span data-stu-id="94b5e-258">This data type commonly results from the call to the <xref:System.Resources.ResourceWriter.AddResource%28System.String%2CSystem.Object%29?displayProperty=nameWithType> method with an object whose value is `null`.</span></span>|  
    |`ResourceTypeCode.Stream`|<span data-ttu-id="94b5e-259">Die Daten werden in einem Stream gespeichert.</span><span class="sxs-lookup"><span data-stu-id="94b5e-259">The data is stored in a stream.</span></span> <span data-ttu-id="94b5e-260">Dieser Datentyp ergibt sich normalerweise aus dem aufzurufenden <xref:System.Resources.ResourceWriter.AddResource%28System.String%2CSystem.IO.Stream%29?displayProperty=nameWithType> oder <xref:System.Resources.ResourceWriter.AddResource%28System.String%2CSystem.IO.Stream%2CSystem.Boolean%29?displayProperty=nameWithType> Methode.</span><span class="sxs-lookup"><span data-stu-id="94b5e-260">This data type commonly results from the call to the <xref:System.Resources.ResourceWriter.AddResource%28System.String%2CSystem.IO.Stream%29?displayProperty=nameWithType> or <xref:System.Resources.ResourceWriter.AddResource%28System.String%2CSystem.IO.Stream%2CSystem.Boolean%29?displayProperty=nameWithType> method.</span></span>|  
  
     <span data-ttu-id="94b5e-261">Wenn `resourceData` nicht beschädigt wurde, kann er normalerweise durch Aufrufen einer <xref:System.BitConverter>-oder <xref:System.IO.BinaryReader>-Methode von einem Bytearray zurück in seinen ursprünglichen Wert konvertiert werden.</span><span class="sxs-lookup"><span data-stu-id="94b5e-261">Assuming that `resourceData` has not been corrupted, it can usually be converted from a byte array back to its original value by calling a <xref:System.BitConverter> or <xref:System.IO.BinaryReader> method.</span></span>  
  
-   <span data-ttu-id="94b5e-262">Eine Zeichenfolge, die den voll qualifizierten Namen des Typs enthält, dessen serialisierte Daten dem `resourceData`-Argument zugewiesen werden (z. b. `System.String`).</span><span class="sxs-lookup"><span data-stu-id="94b5e-262">A string that contains the fully qualified name of the type whose serialized data is assigned to the `resourceData` argument (for example, `System.String`).</span></span> <span data-ttu-id="94b5e-263">Außerdem enthält die Zeichenfolge für Typen, die nicht Teil der .NET Framework-Klassenbibliothek sind, den Namen, die Version, die Kultur und den öffentlichen Schlüssel der Assembly, die den Typ enthält.</span><span class="sxs-lookup"><span data-stu-id="94b5e-263">In addition, for types that are not part of the .NET Framework class library, the string includes the name, version, culture, and public key of the assembly that contains the type.</span></span> <span data-ttu-id="94b5e-264">Beispielsweise gibt die folgende Zeichenfolge an, dass die serialisierten Daten eine Instanz des `Person` Typs im `Extensions`-Namespace darstellen, der in Version 1,0 einer Assembly namens Utility gefunden wird, die über keinen öffentlichen Schlüssel und keine festgelegte Kultur verfügt.</span><span class="sxs-lookup"><span data-stu-id="94b5e-264">For example, the following string indicates that the serialized data represents an instance of the `Person` type in the `Extensions` namespace, which is found in version 1.0 of an assembly named Utility that has no public key and no designated culture.</span></span>  
  
     `Extensions.Person, Utility, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null`  
  
     <span data-ttu-id="94b5e-265">Wenn `resourceData` nicht beschädigt wurde und der Quelltyp verfügbar ist, können `resourceData` von einem Bytearray zurück in seinen ursprünglichen Wert konvertiert werden, indem das Bytearray in ein <xref:System.IO.Stream> Objekt konvertiert und der Datenstrom an die <xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter.Deserialize%2A?displayProperty=nameWithType>-Methode übergeben wird.</span><span class="sxs-lookup"><span data-stu-id="94b5e-265">Assuming that `resourceData` has not been corrupted and that the source type is available, `resourceData` can be converted from a byte array back to its original value by converting the byte array to a <xref:System.IO.Stream> object and passing the stream to the <xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter.Deserialize%2A?displayProperty=nameWithType> method.</span></span>  
  
-   <span data-ttu-id="94b5e-266">Die Zeichenfolge, die verwendet wird, um den Datentyp im <xref:System.Resources.ResourceWriter.AddResourceData%2A?displayProperty=nameWithType> Methoden aufzurufen.</span><span class="sxs-lookup"><span data-stu-id="94b5e-266">The string used to describe the data type in the <xref:System.Resources.ResourceWriter.AddResourceData%2A?displayProperty=nameWithType> method call.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="94b5e-267"><paramref name="resourceName" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="94b5e-267"><paramref name="resourceName" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="94b5e-268"><paramref name="resourceName" /> existiert nicht.</span><span class="sxs-lookup"><span data-stu-id="94b5e-268"><paramref name="resourceName" /> does not exist.</span></span></exception>
        <exception cref="T:System.BadImageFormatException"><span data-ttu-id="94b5e-269"><paramref name="resourceName" /> besitzt einen ungültigen Typ.</span><span class="sxs-lookup"><span data-stu-id="94b5e-269"><paramref name="resourceName" /> has an invalid type.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="94b5e-270">Die abgerufenen Ressourcendaten sind beschädigt.</span><span class="sxs-lookup"><span data-stu-id="94b5e-270">The retrieved resource data is corrupt.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="94b5e-271">Das aktuelle <see cref="T:System.Resources.ResourceReader" />-Objekt wurde nicht initialisiert, weil es wahrscheinlich geschlossen ist.</span><span class="sxs-lookup"><span data-stu-id="94b5e-271">The current <see cref="T:System.Resources.ResourceReader" /> object is not initialized, probably because it is closed.</span></span></exception>
        <altmember cref="M:System.Resources.ResourceWriter.AddResourceData(System.String,System.String,System.Byte[])" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResourceReader.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.Reader</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="94b5e-272">Gibt einen Enumerator für dieses <see cref="T:System.Resources.ResourceReader" />-Objekt zurück.</span><span class="sxs-lookup"><span data-stu-id="94b5e-272">Returns an enumerator for this <see cref="T:System.Resources.ResourceReader" /> object.</span></span></summary>
        <returns><span data-ttu-id="94b5e-273">Ein Enumerator für dieses <see cref="T:System.Resources.ResourceReader" />-Objekt.</span><span class="sxs-lookup"><span data-stu-id="94b5e-273">An enumerator for this <see cref="T:System.Resources.ResourceReader" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="94b5e-274"><xref:System.Resources.ResourceReader.System%23Collections%23IEnumerable%23GetEnumerator%2A?displayProperty=nameWithType> ist eine explizite Schnittstellen Implementierung.</span><span class="sxs-lookup"><span data-stu-id="94b5e-274"><xref:System.Resources.ResourceReader.System%23Collections%23IEnumerable%23GetEnumerator%2A?displayProperty=nameWithType> is an explicit interface implementation.</span></span> <span data-ttu-id="94b5e-275">Er kann nur verwendet werden, wenn die <xref:System.Resources.ResourceReader>-Instanz in eine <xref:System.Collections.IEnumerable>-Schnittstelle umgewandelt wird.</span><span class="sxs-lookup"><span data-stu-id="94b5e-275">It can be used only when the <xref:System.Resources.ResourceReader> instance is cast to an <xref:System.Collections.IEnumerable> interface.</span></span> <span data-ttu-id="94b5e-276">Die empfohlene Vorgehensweise zum Auflisten der Ressourcen in einer resources-Datei besteht darin, die <xref:System.Collections.IEnumerator.MoveNext%2A>-Methode des <xref:System.Collections.IDictionaryEnumerator> Objekts aufzurufen, das von der <xref:System.Resources.ResourceReader.GetEnumerator%2A?displayProperty=nameWithType>-Methode zurückgegeben wird.</span><span class="sxs-lookup"><span data-stu-id="94b5e-276">The recommended approach to enumerating the resources in a .resources file is to call the <xref:System.Collections.IEnumerator.MoveNext%2A> method of the <xref:System.Collections.IDictionaryEnumerator> object returned by the <xref:System.Resources.ResourceReader.GetEnumerator%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="94b5e-277">Der Reader wurde bereits geschlossen, der Zugriff ist nicht möglich.</span><span class="sxs-lookup"><span data-stu-id="94b5e-277">The reader has already been closed and cannot be accessed.</span></span></exception>
        <altmember cref="T:System.Collections.IDictionary" />
        <altmember cref="T:System.Collections.IDictionaryEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="System.IDisposable.Dispose">
      <MemberSignature Language="C#" Value="void IDisposable.Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.IDisposable.Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResourceReader.System#IDisposable#Dispose" />
      <MemberSignature Language="VB.NET" Value="Sub Dispose () Implements IDisposable.Dispose" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.IDisposable.Dispose() = IDisposable::Dispose;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.Reader</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="94b5e-278">Gibt die von der <see cref="T:System.Resources.ResourceReader" /> verwendeten Ressourcen frei.</span><span class="sxs-lookup"><span data-stu-id="94b5e-278">Releases the resources used by the <see cref="T:System.Resources.ResourceReader" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
<span data-ttu-id="94b5e-279">Durch den Aufruf von "verwerfen" können die Ressourcen, die von der <xref:System.Resources.ResourceReader> verwendet werden, für andere Zwecke neu zugewiesen werden</span><span class="sxs-lookup"><span data-stu-id="94b5e-279">Calling Dispose allows the resources used by the <xref:System.Resources.ResourceReader> to be reallocated for other purposes.</span></span> <span data-ttu-id="94b5e-280">Weitere Informationen zu verwerfen finden Sie unter [Bereinigen von nicht verwalteten Ressourcen](~/docs/standard/garbage-collection/unmanaged.md).</span><span class="sxs-lookup"><span data-stu-id="94b5e-280">For more information about Dispose, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md).</span></span>

## Examples  
<span data-ttu-id="94b5e-281">Im folgenden Codebeispiel werden die Ressourcen einer Datei durchlaufen, und alle gefundenen Schlüssel-Wert-Paare werden gedruckt.</span><span class="sxs-lookup"><span data-stu-id="94b5e-281">The following code example moves through a file's resources and prints out all the key/value pairs it finds.</span></span> <span data-ttu-id="94b5e-282">Der Code verwendet dann die theiverwerf. verwerfen-Methode, um die <xref:System.Resources.ResourceReader> herunterzufahren und alle von ihr verwendeten Ressourcen freizugeben.</span><span class="sxs-lookup"><span data-stu-id="94b5e-282">The code then uses theIDisposable.Dispose method to shut down the <xref:System.Resources.ResourceReader> and to release all resources used by it.</span></span>

```vb
Imports System
Imports System.Resources
Imports System.Collections

Public Class ReadResources

    Public Shared Sub Main(args() As String)
        ' Create a resource reader for items.resources 
        ' and get an enumerator to iterate through the file. 
        Dim reader As IResourceReader = New ResourceReader("items.resources")
        Dim en As IDictionaryEnumerator = reader.GetEnumerator()

        ' Iterate through the file, printing the key and value pairs. 
        While en.MoveNext()
            Console.WriteLine()
            Console.WriteLine("Name: {0}", en.Key)
            Console.WriteLine("Value: {0}", en.Value)
        End While 

        ' Clean up all resources associated with the reader. 
        ' Calling Dispose is equivalent to calling Close.
        reader.Dispose()
    End Sub 

End Class
```

```csharp
using System;
using System.Resources;
using System.Collections;

public class ReadResources 
{
    public static void Main(string[] args) 
    {
        // Create a resource reader for items.resources 
        // and get an enumerator to iterate through the file.
        IResourceReader reader = new ResourceReader("items.resources");
        IDictionaryEnumerator en = reader.GetEnumerator();

        // Iterate through the file, printing the key/value pairs. 
        while (en.MoveNext()) 
        {
            Console.WriteLine();
            Console.WriteLine("Name: {0}", en.Key);
            Console.WriteLine("Value: {0}", en.Value);
        }

        // Clean up all resources associated with the reader. 
        // Calling Dispose is equivalent to calling Close.
        reader.Dispose();
    }
}
```

```cpp
using namespace System;
using namespace System::Resources;
using namespace System::Collections;
int main()
{
   array<String^>^args = Environment::GetCommandLineArgs();

   // Create a resource reader for items.resources 
   // and get an enumerator to iterate through the file.
   IResourceReader^ reader = gcnew ResourceReader( "items.resources" );
   IDictionaryEnumerator^ en = reader->GetEnumerator();

   // Iterate through the file, printing the key/value pairs. 
   while ( en->MoveNext() )
   {
      Console::WriteLine();
      Console::WriteLine( "Name: {0}", en->Key );
      Console::WriteLine( "Value: {0}", en->Value );
   }

   // Clean up all resources associated with the reader. 
   // Calling the destructor is equivalent to calling Close.
   reader->~IResourceReader();
}
```

]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
