<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ResXResourceWriter.xml" source-language="en-US" target-language="de-DE">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5a84107e4c6430c9ab492ef5abd191f9b1a9719aa.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a84107e4c6430c9ab492ef5abd191f9b1a9719aa</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Resources.ResXResourceWriter">
          <source>Writes resources in an XML resource (.resx) file or an output stream.</source>
          
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Resources.ResXResourceWriter">
          <source>The <ph id="ph1">&lt;xref:System.Resources.ResXResourceWriter&gt;</ph> writes resources in XML format.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Resources.ResXResourceWriter&gt;</ph> Ressourcen im XML-Format schreibt.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Resources.ResXResourceWriter">
          <source>To write a binary resource file, use <ph id="ph1">&lt;xref:System.Resources.ResourceWriter&gt;</ph>.</source>
          <target state="translated">Verwenden Sie zum Schreiben einer binären Ressourcendatei <ph id="ph1">&lt;xref:System.Resources.ResourceWriter&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Resources.ResXResourceWriter">
          <source>Resources are specified as name/value pairs using the <ph id="ph1">&lt;xref:System.Resources.ResXResourceWriter.AddResource%2A&gt;</ph> method.</source>
          <target state="translated">Ressourcen werden angegeben, als Name/Wert-Paare, die mithilfe der <ph id="ph1">&lt;xref:System.Resources.ResXResourceWriter.AddResource%2A&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Resources.ResXResourceWriter">
          <source>Resource names are case-sensitive when used for lookups; but to more easily support authoring tools and help eliminate bugs, <ph id="ph1">&lt;xref:System.Resources.ResXResourceWriter&gt;</ph> does not allow a.resx file to have names that vary only by case.</source>
          <target state="translated">Ressourcennamen sind Groß-/Kleinschreibung beachtet, wenn für die Suche verwendet. aber das leichter Erstellungstools unterstützen und zum Beheben von Problemen <ph id="ph1">&lt;xref:System.Resources.ResXResourceWriter&gt;</ph> lässt sich nicht auf die RESX-Dateien zu Namen haben, die nur Großschreibung voneinander abweichen.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Resources.ResXResourceWriter">
          <source>To create a.resx file, create a <ph id="ph1">&lt;xref:System.Resources.ResXResourceWriter&gt;</ph> with a unique file name, call <ph id="ph2">&lt;xref:System.Resources.ResXResourceWriter.AddResource%2A&gt;</ph> at least once, call <ph id="ph3">&lt;xref:System.Resources.ResXResourceWriter.Generate%2A&gt;</ph> to write the resources file to disk, and then call <ph id="ph4">&lt;xref:System.Resources.ResXResourceWriter.Close%2A&gt;</ph> to close the file.</source>
          <target state="translated">RESX-Datei erstellen, erstellen Sie eine <ph id="ph1">&lt;xref:System.Resources.ResXResourceWriter&gt;</ph> rufen Sie mit einem eindeutigen Dateinamen <ph id="ph2">&lt;xref:System.Resources.ResXResourceWriter.AddResource%2A&gt;</ph> mindestens einmal aufrufen <ph id="ph3">&lt;xref:System.Resources.ResXResourceWriter.Generate%2A&gt;</ph> die Resources-Datei auf dem Datenträger festgeschrieben, und rufen Sie anschließend <ph id="ph4">&lt;xref:System.Resources.ResXResourceWriter.Close%2A&gt;</ph> , die Datei zu schließen.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Resources.ResXResourceWriter">
          <source>Calling <ph id="ph1">&lt;xref:System.Resources.ResXResourceWriter.Close%2A&gt;</ph> will implicitly <ph id="ph2">&lt;xref:System.Resources.ResXResourceWriter.Generate%2A&gt;</ph> the file if required.</source>
          <target state="translated">Aufrufen von <ph id="ph1">&lt;xref:System.Resources.ResXResourceWriter.Close%2A&gt;</ph> wird implizit <ph id="ph2">&lt;xref:System.Resources.ResXResourceWriter.Generate%2A&gt;</ph> der Datei, falls erforderlich.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Resources.ResXResourceWriter">
          <source>The resources are not necessarily written in the same order they were added.</source>
          <target state="translated">Die Ressourcen werden nicht unbedingt in der gleichen Reihenfolge geschrieben, die sie hinzugefügt wurden.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Resources.ResXResourceWriter">
          <source>For more information on the format of a.resx file, see <bpt id="p1">[</bpt>Working with .resx Files Programmatically<ept id="p1">](~/docs/framework/resources/working-with-resx-files-programmatically.md)</ept>.</source>
          <target state="translated">Weitere Informationen zum Format von RESX-Dateien finden Sie unter <bpt id="p1">[</bpt>arbeiten mit RESX-Dateien programmgesteuert<ept id="p1">](~/docs/framework/resources/working-with-resx-files-programmatically.md)</ept>.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Resources.ResXResourceWriter">
          <source>This class contains a link demand and an inheritance demand at the class level that applies to all members.</source>
          <target state="translated">Diese Klasse enthält einen Linkaufruf und einer vererbungsanforderung auf Klassenebene, die für alle Member gilt.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Resources.ResXResourceWriter">
          <source>A <ph id="ph1">&lt;xref:System.Security.SecurityException&gt;</ph> is thrown when either the immediate caller or the derived class does not have full-trust permission.</source>
          <target state="translated">Ein <ph id="ph1">&lt;xref:System.Security.SecurityException&gt;</ph> wird ausgelöst, wenn nicht für den unmittelbaren Aufrufer oder die abgeleitete Klasse volle Vertrauenswürdigkeit verfügt.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Resources.ResXResourceWriter">
          <source>The following example creates a .resx file named <ph id="ph1">`CarResources.resx`</ph> that stores six strings, an icon, and two application-defined objects (two <ph id="ph2">`Automobile`</ph> objects).</source>
          <target state="translated">Das folgende Beispiel erstellt eine RESX-Datei mit dem Namen <ph id="ph1">`CarResources.resx`</ph> zur Speicherung der sechs Zeichenfolgen, ein Symbol und zwei anwendungsdefinierte Objekte (zwei <ph id="ph2">`Automobile`</ph> Objekte).</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Resources.ResXResourceWriter">
          <source>Note that the <ph id="ph1">`Automobile`</ph> class, which is defined and instantiated in the example, is tagged with the <ph id="ph2">&lt;xref:System.SerializableAttribute&gt;</ph> attribute.</source>
          <target state="translated">Beachten Sie, dass die Klasse <ph id="ph1">`Automobile`</ph>, die im Beispiel definiert und instanziiert wird, mit dem <ph id="ph2">&lt;xref:System.SerializableAttribute&gt;</ph>-Attribut gekennzeichnet ist.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Resources.ResXResourceWriter">
          <source>for full trust for the immediate caller.</source>
          <target state="translated">für volle Vertrauenswürdigkeit für den unmittelbaren Aufrufer.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Resources.ResXResourceWriter">
          <source>This member cannot be used by partially trusted code.</source>
          <target state="translated">Dieser Member kann von nur teilweise vertrauenswürdigem Code nicht verwendet werden.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Resources.ResXResourceWriter">
          <source>for full trust for inheritors.</source>
          <target state="translated">für volle Vertrauenswürdigkeit für erben.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Resources.ResXResourceWriter">
          <source>This member cannot be inherited by partially trusted code.</source>
          <target state="translated">Dieser Member kann nicht von teilweise vertrauenswürdigem Code nicht vererbt werden.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="T:System.Resources.ResXResourceWriter">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Resources.ResXResourceWriter" /&gt;</ph> class.</source>
          
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Resources.ResXResourceWriter.#ctor(System.IO.Stream)">
          <source>The output stream.</source>
          
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Resources.ResXResourceWriter.#ctor(System.IO.Stream)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Resources.ResXResourceWriter" /&gt;</ph> class that writes the resources to the specified stream object.</source>
          
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResXResourceWriter.#ctor(System.IO.Stream)">
          <source>The <ph id="ph1">&lt;xref:System.Resources.ResXResourceWriter.Close%2A&gt;</ph> method closes the stream you specify as a parameter.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Resources.ResXResourceWriter.Close%2A&gt;</ph> Methode schließt den Stream, die Sie als Parameter angeben.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResXResourceWriter.#ctor(System.IO.Stream)">
          <source>To write the resource to the stream without closing the stream, you must use the <ph id="ph1">&lt;xref:System.Resources.ResXResourceWriter.Generate%2A&gt;</ph> method.</source>
          <target state="translated">Um die Ressource ohne Schließen des Streams in den Stream zu schreiben, verwenden Sie die <ph id="ph1">&lt;xref:System.Resources.ResXResourceWriter.Generate%2A&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResXResourceWriter.#ctor(System.IO.Stream)">
          <source>for full trust for the immediate caller.</source>
          <target state="translated">für volle Vertrauenswürdigkeit für den unmittelbaren Aufrufer.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResXResourceWriter.#ctor(System.IO.Stream)">
          <source>This member cannot be used by partially trusted code.</source>
          <target state="translated">Dieser Member kann von nur teilweise vertrauenswürdigem Code nicht verwendet werden.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResXResourceWriter.#ctor(System.IO.Stream)">
          <source>for full trust for inheritors.</source>
          <target state="translated">für volle Vertrauenswürdigkeit für erben.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResXResourceWriter.#ctor(System.IO.Stream)">
          <source>This member cannot be inherited by partially trusted code.</source>
          <target state="translated">Dieser Member kann nicht von teilweise vertrauenswürdigem Code nicht vererbt werden.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Resources.ResXResourceWriter.#ctor(System.IO.TextWriter)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> object to send the output to.</source>
          
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Resources.ResXResourceWriter.#ctor(System.IO.TextWriter)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Resources.ResXResourceWriter" /&gt;</ph> class that writes to the specified <ph id="ph2">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> object.</source>
          
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResXResourceWriter.#ctor(System.IO.TextWriter)">
          <source>for full trust for the immediate caller.</source>
          <target state="translated">für volle Vertrauenswürdigkeit für den unmittelbaren Aufrufer.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResXResourceWriter.#ctor(System.IO.TextWriter)">
          <source>This member cannot be used by partially trusted code.</source>
          <target state="translated">Dieser Member kann von nur teilweise vertrauenswürdigem Code nicht verwendet werden.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResXResourceWriter.#ctor(System.IO.TextWriter)">
          <source>for full trust for inheritors.</source>
          <target state="translated">für volle Vertrauenswürdigkeit für erben.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResXResourceWriter.#ctor(System.IO.TextWriter)">
          <source>This member cannot be inherited by partially trusted code.</source>
          <target state="translated">Dieser Member kann nicht von teilweise vertrauenswürdigem Code nicht vererbt werden.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Resources.ResXResourceWriter.#ctor(System.String)">
          <source>The output file name.</source>
          
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Resources.ResXResourceWriter.#ctor(System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Resources.ResXResourceWriter" /&gt;</ph> class that writes the resources to the specified file.</source>
          
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResXResourceWriter.#ctor(System.String)">
          <source>This constructor creates <ph id="ph1">`filename`</ph> if it does not exist and overwrites it if it does.</source>
          <target state="translated">Dieser Konstruktor erstellt <ph id="ph1">`filename`</ph> , wenn er nicht vorhanden ist und überschrieben, wenn dies der Fall ist.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResXResourceWriter.#ctor(System.String)">
          <source>If <ph id="ph1">`filename`</ph> includes a directory path, the full path must exist or the constructor throws a <ph id="ph2">&lt;xref:System.IO.DirectoryNotFoundException&gt;</ph> exception.</source>
          <target state="translated">Wenn <ph id="ph1">`filename`</ph> einen Verzeichnispfad aufweist, der vollständige Pfad muss vorhanden sein oder des Konstruktors löst eine <ph id="ph2">&lt;xref:System.IO.DirectoryNotFoundException&gt;</ph> Ausnahme.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Resources.ResXResourceWriter.#ctor(System.String)">
          <source>The directory specified in <ph id="ph1">&lt;paramref name="filename" /&gt;</ph> does not exist.</source>
          
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResXResourceWriter.#ctor(System.String)">
          <source>for full trust for the immediate caller.</source>
          <target state="translated">für volle Vertrauenswürdigkeit für den unmittelbaren Aufrufer.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResXResourceWriter.#ctor(System.String)">
          <source>This member cannot be used by partially trusted code.</source>
          <target state="translated">Dieser Member kann von nur teilweise vertrauenswürdigem Code nicht verwendet werden.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResXResourceWriter.#ctor(System.String)">
          <source>for full trust for inheritors.</source>
          <target state="translated">für volle Vertrauenswürdigkeit für erben.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResXResourceWriter.#ctor(System.String)">
          <source>This member cannot be inherited by partially trusted code.</source>
          <target state="translated">Dieser Member kann nicht von teilweise vertrauenswürdigem Code nicht vererbt werden.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Resources.ResXResourceWriter.#ctor(System.IO.Stream,System.Func{System.Type,System.String})">
          <source>The stream to send the output to.</source>
          
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Resources.ResXResourceWriter.#ctor(System.IO.Stream,System.Func{System.Type,System.String})">
          <source>The delegate that is used to target earlier versions of the .NET Framework.</source>
          
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Resources.ResXResourceWriter.#ctor(System.IO.Stream,System.Func{System.Type,System.String})">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Resources.ResXResourceWriter" /&gt;</ph> class that writes the resources to a specified stream object and sets a converter delegate.</source>
          
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Resources.ResXResourceWriter.#ctor(System.IO.Stream,System.Func{System.Type,System.String})">
          <source>This delegate enables resource assemblies to be written that target versions of the .NET Framework before the <ph id="ph1">[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]</ph> by using qualified assembly names.</source>
          
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResXResourceWriter.#ctor(System.IO.Stream,System.Func{System.Type,System.String})">
          <source>Visual Studio and MSBuild use this constructor when you create resources for an application that target versions of the .NET Framework before the <ph id="ph1">[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]</ph>.</source>
          <target state="translated">Visual Studio und MSBuild verwenden Sie diesen Konstruktor, wenn Sie Ressourcen für eine Anwendung, die gezielt Versionen von .NET Framework vor dem Erstellen der <ph id="ph1">[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]</ph>.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Resources.ResXResourceWriter.#ctor(System.IO.TextWriter,System.Func{System.Type,System.String})">
          <source>The object to send output to.</source>
          
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Resources.ResXResourceWriter.#ctor(System.IO.TextWriter,System.Func{System.Type,System.String})">
          <source>The delegate that is used to target earlier versions of the .NET Framework.</source>
          
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Resources.ResXResourceWriter.#ctor(System.IO.TextWriter,System.Func{System.Type,System.String})">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Resources.ResXResourceWriter" /&gt;</ph> class that writes the resources to a specified <ph id="ph2">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> object and sets a delegate that enables resource assemblies to be written that target versions of the .NET Framework before the <ph id="ph3">[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]</ph> by using qualified assembly names.</source>
          
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResXResourceWriter.#ctor(System.IO.TextWriter,System.Func{System.Type,System.String})">
          <source>Visual Studio and MSBuild use this constructor when you create resources for an application that target versions of the .NET Framework before the <ph id="ph1">[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]</ph>.</source>
          <target state="translated">Visual Studio und MSBuild verwenden Sie diesen Konstruktor, wenn Sie Ressourcen für eine Anwendung, die gezielt Versionen von .NET Framework vor dem Erstellen der <ph id="ph1">[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]</ph>.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Resources.ResXResourceWriter.#ctor(System.String,System.Func{System.Type,System.String})">
          <source>The file to send output to.</source>
          
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Resources.ResXResourceWriter.#ctor(System.String,System.Func{System.Type,System.String})">
          <source>The delegate that is used to target earlier versions of the .NET Framework.</source>
          
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Resources.ResXResourceWriter.#ctor(System.String,System.Func{System.Type,System.String})">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Resources.ResXResourceWriter" /&gt;</ph> class that writes the resources to a specified file and sets a delegate that enables resource assemblies to be written that target versions of the .NET Framework before the <ph id="ph2">[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]</ph> by using qualified assembly names.</source>
          
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResXResourceWriter.#ctor(System.String,System.Func{System.Type,System.String})">
          <source>Visual Studio and MSBuild use this constructor when you create resources for an application that target versions of the .NET Framework before the <ph id="ph1">[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]</ph>.</source>
          <target state="translated">Visual Studio und MSBuild verwenden Sie diesen Konstruktor, wenn Sie Ressourcen für eine Anwendung, die gezielt Versionen von .NET Framework vor dem Erstellen der <ph id="ph1">[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]</ph>.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Resources.ResXResourceWriter.#ctor(System.String,System.Func{System.Type,System.String})">
          <source>The directory specified in <ph id="ph1">&lt;paramref name="filename" /&gt;</ph> does not exist.</source>
          
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Resources.ResXResourceWriter.AddAlias(System.String,System.Reflection.AssemblyName)">
          <source>The name of the alias.</source>
          
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Resources.ResXResourceWriter.AddAlias(System.String,System.Reflection.AssemblyName)">
          <source>The name of the assembly represented by <bpt id="p1">&lt;c&gt;</bpt>aliasName<ept id="p1">&lt;/c&gt;</ept>.</source>
          
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Resources.ResXResourceWriter.AddAlias(System.String,System.Reflection.AssemblyName)">
          <source>Adds the specified alias to a list of aliases.</source>
          
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResXResourceWriter.AddAlias(System.String,System.Reflection.AssemblyName)">
          <source>Resources whose values are from an aliased assembly are automatically added to the list of aliases.</source>
          <target state="translated">Ressourcen, deren Werte aus einer Assembly mit einem Alias versehen sind, werden automatisch zur Liste der Aliase hinzugefügt.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResXResourceWriter.AddAlias(System.String,System.Reflection.AssemblyName)">
          <source>The resource is not written until <ph id="ph1">&lt;xref:System.Resources.ResXResourceWriter.Generate%2A&gt;</ph> is called.</source>
          <target state="translated">Die Ressource ist erst dann geschrieben <ph id="ph1">&lt;xref:System.Resources.ResXResourceWriter.Generate%2A&gt;</ph> aufgerufen wird.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.Resources.ResXResourceWriter.AddAlias(System.String,System.Reflection.AssemblyName)">
          <source><ph id="ph1">&lt;paramref name="assemblyName" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="T:System.Resources.ResXResourceWriter">
          <source>Adds design-time properties to the list of resources to write.</source>
          
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Resources.ResXResourceWriter.AddMetadata(System.String,System.Byte[])">
          <source>The name of a property.</source>
          
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Resources.ResXResourceWriter.AddMetadata(System.String,System.Byte[])">
          <source>A byte array containing the value of the property to add.</source>
          
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Resources.ResXResourceWriter.AddMetadata(System.String,System.Byte[])">
          <source>Adds a design-time property whose value is specifed as a byte array to the list of resources to write.</source>
          
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.Resources.ResXResourceWriter.AddMetadata(System.String,System.Byte[])">
          <source>The resource specified by the <ph id="ph1">&lt;paramref name="name" /&gt;</ph> parameter has already been added.</source>
          
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.Resources.ResXResourceWriter.AddMetadata(System.String,System.Object)">
          <source>The name of a property.</source>
          
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.Resources.ResXResourceWriter.AddMetadata(System.String,System.Object)">
          <source>An object that is the value of the property to add.</source>
          
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.Resources.ResXResourceWriter.AddMetadata(System.String,System.Object)">
          <source>Adds a design-time property whose value is specified as an object to the list of resources to write.</source>
          
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.Resources.ResXResourceWriter.AddMetadata(System.String,System.Object)">
          <source>The resource specified by the <ph id="ph1">&lt;paramref name="name" /&gt;</ph> parameter has already been added.</source>
          
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.Resources.ResXResourceWriter.AddMetadata(System.String,System.String)">
          <source>The name of a property.</source>
          
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.Resources.ResXResourceWriter.AddMetadata(System.String,System.String)">
          <source>A string that is the value of the property to add.</source>
          
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.Resources.ResXResourceWriter.AddMetadata(System.String,System.String)">
          <source>Adds a design-time property whose value is specified as a string to the list of resources to write.</source>
          
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.Resources.ResXResourceWriter.AddMetadata(System.String,System.String)">
          <source>The resource specified by the <ph id="ph1">&lt;paramref name="name" /&gt;</ph> property has already been added.</source>
          
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="T:System.Resources.ResXResourceWriter">
          <source>Adds a resource to the list of resources to write.</source>
          
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.Resources.ResXResourceWriter.AddResource(System.Resources.ResXDataNode)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Resources.ResXDataNode" /&gt;</ph> object that contains a resource name/value pair.</source>
          
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.Resources.ResXResourceWriter.AddResource(System.Resources.ResXDataNode)">
          <source>Adds a named resource specified in a <ph id="ph1">&lt;see cref="T:System.Resources.ResXDataNode" /&gt;</ph> object to the list of resources to write.</source>
          
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.Resources.ResXResourceWriter.AddResource(System.String,System.Byte[])">
          <source>The name of the resource.</source>
          
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.Resources.ResXResourceWriter.AddResource(System.String,System.Byte[])">
          <source>The value of the resource to add as an 8-bit unsigned integer array.</source>
          
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.Resources.ResXResourceWriter.AddResource(System.String,System.Byte[])">
          <source>Adds a named resource specified as a byte array to the list of resources to write.</source>
          
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResXResourceWriter.AddResource(System.String,System.Byte[])">
          <source>The resource is not written until <ph id="ph1">&lt;xref:System.Resources.ResXResourceWriter.Generate%2A&gt;</ph> is called.</source>
          <target state="translated">Die Ressource ist erst dann geschrieben <ph id="ph1">&lt;xref:System.Resources.ResXResourceWriter.Generate%2A&gt;</ph> aufgerufen wird.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResXResourceWriter.AddResource(System.String,System.Byte[])">
          <source>The resource is serialized and stored in a binary format.</source>
          <target state="translated">Die Ressource wird serialisiert und in einem binären Format gespeichert.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:System.Resources.ResXResourceWriter.AddResource(System.String,System.Object)">
          <source>The name of the resource.</source>
          
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:System.Resources.ResXResourceWriter.AddResource(System.String,System.Object)">
          <source>The value of the resource.</source>
          
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.Resources.ResXResourceWriter.AddResource(System.String,System.Object)">
          <source>Adds a named resource specified as an object to the list of resources to write.</source>
          
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResXResourceWriter.AddResource(System.String,System.Object)">
          <source>The resource is not written until <ph id="ph1">&lt;xref:System.Resources.ResXResourceWriter.Generate%2A&gt;</ph> is called.</source>
          <target state="translated">Die Ressource ist erst dann geschrieben <ph id="ph1">&lt;xref:System.Resources.ResXResourceWriter.Generate%2A&gt;</ph> aufgerufen wird.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResXResourceWriter.AddResource(System.String,System.Object)">
          <source>The resource that was added must be serializable.</source>
          <target state="translated">Das hinzugefügte Ressource muss serialisierbar sein.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResXResourceWriter.AddResource(System.String,System.Object)">
          <source>If the resource being added is a string, it is written as a string; otherwise, the resource is serialized and stored in a binary format.</source>
          <target state="translated">Wenn die hinzugefügte Ressource eine Zeichenfolge ist, wird er als Zeichenfolge geschrieben; Andernfalls wird die Ressource serialisiert und in einem binären Format gespeichert.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResXResourceWriter.AddResource(System.String,System.Object)">
          <source>The following example creates a .resx file named <ph id="ph1">`CarResources.resx`</ph> that stores six strings, an icon, and two application-defined objects (two <ph id="ph2">`Automobile`</ph> objects).</source>
          <target state="translated">Das folgende Beispiel erstellt eine RESX-Datei mit dem Namen <ph id="ph1">`CarResources.resx`</ph> zur Speicherung der sechs Zeichenfolgen, ein Symbol und zwei anwendungsdefinierte Objekte (zwei <ph id="ph2">`Automobile`</ph> Objekte).</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResXResourceWriter.AddResource(System.String,System.Object)">
          <source>To store the icon and the <ph id="ph1">`Automobile`</ph> objects, it calls the <ph id="ph2">&lt;xref:System.Resources.ResXResourceWriter.AddResource%28System.String%2CSystem.Object%29&gt;</ph> method.</source>
          <target state="translated">Speichern Sie das Symbol und die <ph id="ph1">`Automobile`</ph> Objekte aufweist, ruft er die <ph id="ph2">&lt;xref:System.Resources.ResXResourceWriter.AddResource%28System.String%2CSystem.Object%29&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResXResourceWriter.AddResource(System.String,System.Object)">
          <source>Note that the <ph id="ph1">`Automobile`</ph> class, which is defined and instantiated in the example, is tagged with the <ph id="ph2">&lt;xref:System.SerializableAttribute&gt;</ph> attribute.</source>
          <target state="translated">Beachten Sie, dass die Klasse <ph id="ph1">`Automobile`</ph>, die im Beispiel definiert und instanziiert wird, mit dem <ph id="ph2">&lt;xref:System.SerializableAttribute&gt;</ph>-Attribut gekennzeichnet ist.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.Resources.ResXResourceWriter.AddResource(System.String,System.String)">
          <source>The name of the resource.</source>
          
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.Resources.ResXResourceWriter.AddResource(System.String,System.String)">
          <source>The value of the resource.</source>
          
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.Resources.ResXResourceWriter.AddResource(System.String,System.String)">
          <source>Adds a string resource to the resources.</source>
          
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResXResourceWriter.AddResource(System.String,System.String)">
          <source>The resource is not written until <ph id="ph1">&lt;xref:System.Resources.ResXResourceWriter.Generate%2A&gt;</ph> is called.</source>
          <target state="translated">Die Ressource ist erst dann geschrieben <ph id="ph1">&lt;xref:System.Resources.ResXResourceWriter.Generate%2A&gt;</ph> aufgerufen wird.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResXResourceWriter.AddResource(System.String,System.String)">
          <source>The following example creates a .resx file named <ph id="ph1">`CarResources.resx`</ph> that stores six strings, an icon, and two application-defined objects (two <ph id="ph2">`Automobile`</ph> objects).</source>
          <target state="translated">Das folgende Beispiel erstellt eine RESX-Datei mit dem Namen <ph id="ph1">`CarResources.resx`</ph> zur Speicherung der sechs Zeichenfolgen, ein Symbol und zwei anwendungsdefinierte Objekte (zwei <ph id="ph2">`Automobile`</ph> Objekte).</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResXResourceWriter.AddResource(System.String,System.String)">
          <source>To store the strings, it calls the <ph id="ph1">&lt;xref:System.Resources.ResXResourceWriter.AddResource%28System.String%2CSystem.String%29&gt;</ph> method.</source>
          <target state="translated">Zum Speichern von Zeichenfolgen, ruft er die <ph id="ph1">&lt;xref:System.Resources.ResXResourceWriter.AddResource%28System.String%2CSystem.String%29&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResXResourceWriter.AddResource(System.String,System.String)">
          <source>Note that the <ph id="ph1">`Automobile`</ph> class, which is defined and instantiated in the example, is tagged with the <ph id="ph2">&lt;xref:System.SerializableAttribute&gt;</ph> attribute.</source>
          <target state="translated">Beachten Sie, dass die Klasse <ph id="ph1">`Automobile`</ph>, die im Beispiel definiert und instanziiert wird, mit dem <ph id="ph2">&lt;xref:System.SerializableAttribute&gt;</ph>-Attribut gekennzeichnet ist.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="P:System.Resources.ResXResourceWriter.BasePath">
          <source>Gets or sets the base path for the relative file path specified in a <ph id="ph1">&lt;see cref="T:System.Resources.ResXFileRef" /&gt;</ph> object.</source>
          
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Resources.ResXResourceWriter.BasePath">
          <source>A path that, if prepended to the relative file path specified in a <ph id="ph1">&lt;see cref="T:System.Resources.ResXFileRef" /&gt;</ph> object, yields an absolute path to an XML resource file.</source>
          <target state="translated">Ein Pfad, mit dem der absolute Pfad zu einer XML-Ressourcendatei gebildet werden kann, wenn er dem in einem <ph id="ph1">&lt;see cref="T:System.Resources.ResXFileRef" /&gt;</ph>-Objekt angegebenen relativen Dateipfad vorangestellt wird.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="F:System.Resources.ResXResourceWriter.BinSerializedObjectMimeType">
          <source>Specifies the default content type for a binary object.</source>
          
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="F:System.Resources.ResXResourceWriter.BinSerializedObjectMimeType">
          <source>This field is read-only.</source>
          
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="F:System.Resources.ResXResourceWriter.ByteArraySerializedObjectMimeType">
          <source>Specifies the default content type for a byte array object.</source>
          
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="F:System.Resources.ResXResourceWriter.ByteArraySerializedObjectMimeType">
          <source>This field is read-only.</source>
          
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:System.Resources.ResXResourceWriter.Close">
          <source>Releases all resources used by the <ph id="ph1">&lt;see cref="T:System.Resources.ResXResourceWriter" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResXResourceWriter.Close">
          <source>Calling this method is the equivalent of calling <ph id="ph1">&lt;xref:System.Resources.ResXResourceWriter.Dispose%2A&gt;</ph>.</source>
          <target state="translated">Beim Aufrufen dieser Methode ist das Äquivalent eines Aufrufs <ph id="ph1">&lt;xref:System.Resources.ResXResourceWriter.Dispose%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="F:System.Resources.ResXResourceWriter.DefaultSerializedObjectMimeType">
          <source>Specifies the default content type for an object.</source>
          
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="F:System.Resources.ResXResourceWriter.DefaultSerializedObjectMimeType">
          <source>This field is read-only.</source>
          
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="T:System.Resources.ResXResourceWriter">
          <source>Releases the resources used by the <ph id="ph1">&lt;see cref="T:System.Resources.ResXResourceWriter" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:System.Resources.ResXResourceWriter.Dispose">
          <source>Releases all resources used by the <ph id="ph1">&lt;see cref="T:System.Resources.ResXResourceWriter" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResXResourceWriter.Dispose">
          <source>The <ph id="ph1">&lt;xref:System.Resources.ResXResourceWriter.Dispose%2A&gt;</ph> method calls the <ph id="ph2">&lt;xref:System.Resources.ResXResourceWriter.Generate%2A&gt;</ph> method, if necessary, before releasing managed and unmanaged system resources.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Resources.ResXResourceWriter.Dispose%2A&gt;</ph> Methodenaufrufe der <ph id="ph2">&lt;xref:System.Resources.ResXResourceWriter.Generate%2A&gt;</ph> -Methode, falls erforderlich, bevor die verwaltete und nicht verwaltete Ressourcen freigegeben.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResXResourceWriter.Dispose">
          <source>Calling <ph id="ph1">&lt;xref:System.Resources.ResXResourceWriter.Dispose%2A&gt;</ph> allows the system resources used by the <ph id="ph2">&lt;xref:System.Resources.ResXResourceWriter&gt;</ph> to be reallocated for other purposes.</source>
          <target state="translated">Aufrufen von <ph id="ph1">&lt;xref:System.Resources.ResXResourceWriter.Dispose%2A&gt;</ph> können die Systemressourcen verwendet, durch die <ph id="ph2">&lt;xref:System.Resources.ResXResourceWriter&gt;</ph> neu für andere Zwecke reserviert werden.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResXResourceWriter.Dispose">
          <source>For more information about <ph id="ph1">&lt;xref:System.Resources.ResXResourceWriter.Dispose%2A&gt;</ph>, see <bpt id="p1">[</bpt>Cleaning Up Unmanaged Resources<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept>.</source>
          <target state="translated">Weitere Informationen zu <ph id="ph1">&lt;xref:System.Resources.ResXResourceWriter.Dispose%2A&gt;</ph>, finden Sie unter <bpt id="p1">[</bpt>Bereinigen von nicht verwalteten Ressourcen<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept>.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="M:System.Resources.ResXResourceWriter.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to release both managed and unmanaged resources; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to release only unmanaged resources.</source>
          
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="M:System.Resources.ResXResourceWriter.Dispose(System.Boolean)">
          <source>Releases the unmanaged resources used by the <ph id="ph1">&lt;see cref="T:System.Resources.ResXResourceWriter" /&gt;</ph> and optionally releases the managed resources.</source>
          
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResXResourceWriter.Dispose(System.Boolean)">
          <source>The <ph id="ph1">&lt;xref:System.Resources.ResXResourceWriter.Dispose%2A&gt;</ph> method calls the <ph id="ph2">&lt;xref:System.Resources.ResXResourceWriter.Generate%2A&gt;</ph> method, if necessary, before releasing managed and unmanaged system resources.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Resources.ResXResourceWriter.Dispose%2A&gt;</ph> Methodenaufrufe der <ph id="ph2">&lt;xref:System.Resources.ResXResourceWriter.Generate%2A&gt;</ph> -Methode, falls erforderlich, bevor die verwaltete und nicht verwaltete Ressourcen freigegeben.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResXResourceWriter.Dispose(System.Boolean)">
          <source>This method is called by the public <ph id="ph1">&lt;xref:System.Resources.ResXResourceWriter.Dispose%2A&gt;</ph> method and the <ph id="ph2">&lt;xref:System.Object.Finalize%2A&gt;</ph> method.</source>
          <target state="translated">Diese Methode wird aufgerufen, der öffentlich <ph id="ph1">&lt;xref:System.Resources.ResXResourceWriter.Dispose%2A&gt;</ph> Methode und die <ph id="ph2">&lt;xref:System.Object.Finalize%2A&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResXResourceWriter.Dispose(System.Boolean)">
          <source><ph id="ph1">`Dispose()`</ph> invokes the protected <ph id="ph2">`Dispose(Boolean)`</ph> method with the <ph id="ph3">`disposing`</ph> parameter set to <ph id="ph4">`true`</ph>.</source>
          <target state="translated"><ph id="ph1">`Dispose()`</ph> Ruft die geschützte <ph id="ph2">`Dispose(Boolean)`</ph> Methode mit dem <ph id="ph3">`disposing`</ph> Parametersatz auf <ph id="ph4">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResXResourceWriter.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;xref:System.Object.Finalize%2A&gt;</ph> invokes <ph id="ph2">`Dispose`</ph> with <ph id="ph3">`disposing`</ph> set to <ph id="ph4">`false`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Object.Finalize%2A&gt;</ph> Ruft <ph id="ph2">`Dispose`</ph> mit <ph id="ph3">`disposing`</ph> festgelegt <ph id="ph4">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResXResourceWriter.Dispose(System.Boolean)">
          <source>When the <ph id="ph1">`disposing`</ph> parameter is <ph id="ph2">`true`</ph>, this method releases all resources held by any managed objects that this <ph id="ph3">&lt;xref:System.Resources.ResXResourceWriter&gt;</ph> references.</source>
          <target state="translated">Wenn der <ph id="ph1">`disposing`</ph>-Parameter <ph id="ph2">`true`</ph> ist, gibt diese Methode sämtliche Ressourcen frei, die für verwaltete Objekte reserviert sind, auf die dieser <ph id="ph3">&lt;xref:System.Resources.ResXResourceWriter&gt;</ph> verweist.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResXResourceWriter.Dispose(System.Boolean)">
          <source>This method invokes the <ph id="ph1">`Dispose()`</ph> method of each referenced object.</source>
          <target state="translated">Diese Methode ruft die <ph id="ph1">`Dispose()`</ph>-Methode aller Objekte auf, auf die verwiesen wird.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResXResourceWriter.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> can be called multiple times by other objects.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> kann von anderen Objekten mehrmals aufgerufen werden.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResXResourceWriter.Dispose(System.Boolean)">
          <source>When overriding <ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph>, be careful not to reference objects that have been previously disposed of in an earlier call to <ph id="ph2">&lt;see langword="Dispose" /&gt;</ph>.</source>
          <target state="translated">Beim Überschreiben von <ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph> müssen Sie darauf achten, nicht auf Objekte zu verweisen, die durch einen früheren Aufruf von <ph id="ph2">&lt;see langword="Dispose" /&gt;</ph> freigegeben wurden.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResXResourceWriter.Dispose(System.Boolean)">
          <source>For more information about how to implement <ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph>, see <bpt id="p1">[</bpt>Implementing a Dispose Method<ept id="p1">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</source>
          <target state="translated">Weitere Informationen zum Implementieren <ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph>, finden Sie unter <bpt id="p1">[</bpt>Implementieren einer Dispose-Methode<ept id="p1">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResXResourceWriter.Dispose(System.Boolean)">
          <source>For more information about <ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> and <ph id="ph2">&lt;see cref="M:System.Object.Finalize" /&gt;</ph>, see  and .</source>
          <target state="translated">Weitere Informationen zu <ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> und <ph id="ph2">&lt;see cref="M:System.Object.Finalize" /&gt;</ph>, finden Sie unter und.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" uid="M:System.Resources.ResXResourceWriter.Finalize">
          <source>This member overrides the <ph id="ph1">&lt;see cref="M:System.Object.Finalize" /&gt;</ph> method.</source>
          
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" uid="M:System.Resources.ResXResourceWriter.Generate">
          <source>Writes all resources added by the <ph id="ph1">&lt;see cref="M:System.Resources.ResXResourceWriter.AddResource(System.String,System.Byte[])" /&gt;</ph> method to the output file or stream.</source>
          
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResXResourceWriter.Generate">
          <source>The <ph id="ph1">&lt;xref:System.Resources.ResXResourceWriter.Generate%2A&gt;</ph> method writes the resources to the output file or stream.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Resources.ResXResourceWriter.Generate%2A&gt;</ph> Methode, um die Ressourcen in die Ausgabedatei oder den Stream schreibt.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResXResourceWriter.Generate">
          <source>If you want to write the resources as well as close the output file or stream, call the <ph id="ph1">&lt;xref:System.Resources.ResXResourceWriter.Close%2A&gt;</ph> method.</source>
          <target state="translated">Wenn Sie die Ressourcen nicht so gut wie nah die Ausgabedatei oder den Stream schreiben möchten, rufen Sie die <ph id="ph1">&lt;xref:System.Resources.ResXResourceWriter.Close%2A&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResXResourceWriter.Generate">
          <source>The <ph id="ph1">&lt;xref:System.Resources.ResXResourceWriter.Generate%2A&gt;</ph> method can be called only once.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Resources.ResXResourceWriter.Generate%2A&gt;</ph> Methode kann nur einmal aufgerufen werden.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResXResourceWriter.Generate">
          <source>After calling the <ph id="ph1">&lt;xref:System.Resources.ResXResourceWriter.Generate%2A&gt;</ph> method, all <ph id="ph2">&lt;xref:System.Resources.IResourceWriter&gt;</ph> methods other than <ph id="ph3">&lt;xref:System.Resources.ResXResourceWriter.Close%2A&gt;</ph> will throw an exception.</source>
          <target state="translated">Nach dem Aufruf der <ph id="ph1">&lt;xref:System.Resources.ResXResourceWriter.Generate%2A&gt;</ph> -Methode, alle <ph id="ph2">&lt;xref:System.Resources.IResourceWriter&gt;</ph> Methoden außer <ph id="ph3">&lt;xref:System.Resources.ResXResourceWriter.Close%2A&gt;</ph> wird eine Ausnahme ausgelöst.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" uid="M:System.Resources.ResXResourceWriter.Generate">
          <source>The resource has already been saved.</source>
          
        </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" uid="F:System.Resources.ResXResourceWriter.ResMimeType">
          <source>Specifies the content type of an XML resource.</source>
          
        </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" uid="F:System.Resources.ResXResourceWriter.ResMimeType">
          <source>This field is read-only.</source>
          
        </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" uid="F:System.Resources.ResXResourceWriter.ResourceSchema">
          <source>Specifies the schema to use in writing the XML file.</source>
          
        </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" uid="F:System.Resources.ResXResourceWriter.ResourceSchema">
          <source>This field is read-only.</source>
          
        </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Resources.ResXResourceWriter.ResourceSchema">
          <source>The schema provides details on how to encode the resources based on the type of resource being written.</source>
          <target state="translated">Das Schema enthält Details zum Codieren der Ressourcen basierend auf den Typ der Ressource, die geschrieben wird.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" uid="F:System.Resources.ResXResourceWriter.SoapSerializedObjectMimeType">
          <source>Specifies the content type for a SOAP object.</source>
          
        </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" uid="F:System.Resources.ResXResourceWriter.SoapSerializedObjectMimeType">
          <source>This field is read-only.</source>
          
        </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" uid="F:System.Resources.ResXResourceWriter.Version">
          <source>Specifies the version of the schema that the XML output conforms to.</source>
          
        </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" uid="F:System.Resources.ResXResourceWriter.Version">
          <source>This field is read-only.</source>
          
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>