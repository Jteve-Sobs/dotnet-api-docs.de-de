<Type Name="Automation" FullName="System.Windows.Automation.Automation">
  <Metadata><Meta Name="ms.openlocfilehash" Value="9cb454e62340e573ce66827ab1bb12a3a7827609" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86703497" /></Metadata><TypeSignature Language="C#" Value="public static class Automation" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit Automation extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Automation.Automation" />
  <TypeSignature Language="VB.NET" Value="Public Class Automation" />
  <TypeSignature Language="C++ CLI" Value="public ref class Automation abstract sealed" />
  <TypeSignature Language="F#" Value="type Automation = class" />
  <AssemblyInfo>
    <AssemblyName>UIAutomationClient</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Enthält Methoden und Felder für Benutzeroberflächenautomatisierungs-Clientanwendungen.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="AddAutomationEventHandler">
      <MemberSignature Language="C#" Value="public static void AddAutomationEventHandler (System.Windows.Automation.AutomationEvent eventId, System.Windows.Automation.AutomationElement element, System.Windows.Automation.TreeScope scope, System.Windows.Automation.AutomationEventHandler eventHandler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddAutomationEventHandler(class System.Windows.Automation.AutomationEvent eventId, class System.Windows.Automation.AutomationElement element, valuetype System.Windows.Automation.TreeScope scope, class System.Windows.Automation.AutomationEventHandler eventHandler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Automation.AddAutomationEventHandler(System.Windows.Automation.AutomationEvent,System.Windows.Automation.AutomationElement,System.Windows.Automation.TreeScope,System.Windows.Automation.AutomationEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddAutomationEventHandler (eventId As AutomationEvent, element As AutomationElement, scope As TreeScope, eventHandler As AutomationEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddAutomationEventHandler(System::Windows::Automation::AutomationEvent ^ eventId, System::Windows::Automation::AutomationElement ^ element, System::Windows::Automation::TreeScope scope, System::Windows::Automation::AutomationEventHandler ^ eventHandler);" />
      <MemberSignature Language="F#" Value="static member AddAutomationEventHandler : System.Windows.Automation.AutomationEvent * System.Windows.Automation.AutomationElement * System.Windows.Automation.TreeScope * System.Windows.Automation.AutomationEventHandler -&gt; unit" Usage="System.Windows.Automation.Automation.AddAutomationEventHandler (eventId, element, scope, eventHandler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventId" Type="System.Windows.Automation.AutomationEvent" />
        <Parameter Name="element" Type="System.Windows.Automation.AutomationElement" />
        <Parameter Name="scope" Type="System.Windows.Automation.TreeScope" />
        <Parameter Name="eventHandler" Type="System.Windows.Automation.AutomationEventHandler" />
      </Parameters>
      <Docs>
        <param name="eventId">Der Bezeichner für das Ereignis, das von der Methode behandelt wird.</param>
        <param name="element">Das [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]-Element, das dem Ereignishandler zugeordnet werden soll.</param>
        <param name="scope">Der Umfang der zu behandelnden Elemente, d. h. ob die Ereignisse bei dem Element selbst oder bei Vorgänger- oder Nachfolgerelementen eintreten.</param>
        <param name="eventHandler">Die Methode, die beim Eintreten des angegebenen Ereignisses aufgerufen werden soll.</param>
        <summary>Registriert eine Methode, die [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]-Ereignisse behandelt.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Einige Klassen, z. b., machen Felder verfügbar, die <xref:System.Windows.Automation.GridPattern> Ereignisse identifizieren, die für die Klasse spezifisch sind. Die- <xref:System.Windows.Automation.Automation.AddAutomationEventHandler%2A> Methode stellt einen Mechanismus bereit, der es Ihnen ermöglicht, Handler für diese Ereignisse zu registrieren.  
  
 `eventHandler` kann eine Instanz der-Methode oder ein Verweis auf die-Methode ( `AddressOf` in Visual Basic) sein.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Automation.Automation.RemoveAutomationEventHandler(System.Windows.Automation.AutomationEvent,System.Windows.Automation.AutomationElement,System.Windows.Automation.AutomationEventHandler)" />
        <altmember cref="M:System.Windows.Automation.Automation.AddAutomationFocusChangedEventHandler(System.Windows.Automation.AutomationFocusChangedEventHandler)" />
        <altmember cref="M:System.Windows.Automation.Automation.AddAutomationPropertyChangedEventHandler(System.Windows.Automation.AutomationElement,System.Windows.Automation.TreeScope,System.Windows.Automation.AutomationPropertyChangedEventHandler,System.Windows.Automation.AutomationProperty[])" />
        <altmember cref="M:System.Windows.Automation.Automation.AddStructureChangedEventHandler(System.Windows.Automation.AutomationElement,System.Windows.Automation.TreeScope,System.Windows.Automation.StructureChangedEventHandler)" />
        <related type="Article" href="https://msdn.microsoft.com/library/b688effa-b3e8-4b05-944d-05ed89a245aa">Abonnieren von Benutzeroberflächenautomatisierungs-Ereignissen</related>
        <related type="Article" href="https://msdn.microsoft.com/library/b909e388-3f24-4997-b6d4-bd9c35c2dc27">Übersicht über Benutzeroberflächenautomatisierungs-Ereignisse</related>
      </Docs>
    </Member>
    <Member MemberName="AddAutomationFocusChangedEventHandler">
      <MemberSignature Language="C#" Value="public static void AddAutomationFocusChangedEventHandler (System.Windows.Automation.AutomationFocusChangedEventHandler eventHandler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddAutomationFocusChangedEventHandler(class System.Windows.Automation.AutomationFocusChangedEventHandler eventHandler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Automation.AddAutomationFocusChangedEventHandler(System.Windows.Automation.AutomationFocusChangedEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddAutomationFocusChangedEventHandler (eventHandler As AutomationFocusChangedEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddAutomationFocusChangedEventHandler(System::Windows::Automation::AutomationFocusChangedEventHandler ^ eventHandler);" />
      <MemberSignature Language="F#" Value="static member AddAutomationFocusChangedEventHandler : System.Windows.Automation.AutomationFocusChangedEventHandler -&gt; unit" Usage="System.Windows.Automation.Automation.AddAutomationFocusChangedEventHandler eventHandler" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventHandler" Type="System.Windows.Automation.AutomationFocusChangedEventHandler" />
      </Parameters>
      <Docs>
        <param name="eventHandler">Die Methode, die beim Eintreten des Ereignisses aufgerufen werden soll.</param>
        <summary>Registriert eine Methode, die Fokusänderungsereignisse behandelt.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Fokus geänderte Ereignisse sind systemweit; Es ist nicht möglich, einen engeren Bereich festzulegen.  
  
 `eventHandler` kann eine Instanz der-Methode oder ein Verweis auf die-Methode ( `AddressOf` in Visual Basic) sein.  
  
   
  
## Examples  
 Das folgende Beispiel zeigt, wie diese Methode verwendet wird, um einen Ereignishandler für Fokus Änderungen hinzuzufügen.  
  
 [!code-csharp[UIAClient_snip#102](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#102)]
 [!code-vb[UIAClient_snip#102](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#102)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Automation.Automation.RemoveAutomationFocusChangedEventHandler(System.Windows.Automation.AutomationFocusChangedEventHandler)" />
        <altmember cref="M:System.Windows.Automation.Automation.AddAutomationEventHandler(System.Windows.Automation.AutomationEvent,System.Windows.Automation.AutomationElement,System.Windows.Automation.TreeScope,System.Windows.Automation.AutomationEventHandler)" />
        <altmember cref="M:System.Windows.Automation.Automation.AddAutomationPropertyChangedEventHandler(System.Windows.Automation.AutomationElement,System.Windows.Automation.TreeScope,System.Windows.Automation.AutomationPropertyChangedEventHandler,System.Windows.Automation.AutomationProperty[])" />
        <altmember cref="M:System.Windows.Automation.Automation.AddStructureChangedEventHandler(System.Windows.Automation.AutomationElement,System.Windows.Automation.TreeScope,System.Windows.Automation.StructureChangedEventHandler)" />
        <related type="Article" href="https://msdn.microsoft.com/library/b688effa-b3e8-4b05-944d-05ed89a245aa">Abonnieren von Benutzeroberflächenautomatisierungs-Ereignissen</related>
        <related type="Article" href="https://msdn.microsoft.com/library/b909e388-3f24-4997-b6d4-bd9c35c2dc27">Übersicht über Benutzeroberflächenautomatisierungs-Ereignisse</related>
      </Docs>
    </Member>
    <Member MemberName="AddAutomationPropertyChangedEventHandler">
      <MemberSignature Language="C#" Value="public static void AddAutomationPropertyChangedEventHandler (System.Windows.Automation.AutomationElement element, System.Windows.Automation.TreeScope scope, System.Windows.Automation.AutomationPropertyChangedEventHandler eventHandler, params System.Windows.Automation.AutomationProperty[] properties);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddAutomationPropertyChangedEventHandler(class System.Windows.Automation.AutomationElement element, valuetype System.Windows.Automation.TreeScope scope, class System.Windows.Automation.AutomationPropertyChangedEventHandler eventHandler, class System.Windows.Automation.AutomationProperty[] properties) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Automation.AddAutomationPropertyChangedEventHandler(System.Windows.Automation.AutomationElement,System.Windows.Automation.TreeScope,System.Windows.Automation.AutomationPropertyChangedEventHandler,System.Windows.Automation.AutomationProperty[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddAutomationPropertyChangedEventHandler (element As AutomationElement, scope As TreeScope, eventHandler As AutomationPropertyChangedEventHandler, ParamArray properties As AutomationProperty())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddAutomationPropertyChangedEventHandler(System::Windows::Automation::AutomationElement ^ element, System::Windows::Automation::TreeScope scope, System::Windows::Automation::AutomationPropertyChangedEventHandler ^ eventHandler, ... cli::array &lt;System::Windows::Automation::AutomationProperty ^&gt; ^ properties);" />
      <MemberSignature Language="F#" Value="static member AddAutomationPropertyChangedEventHandler : System.Windows.Automation.AutomationElement * System.Windows.Automation.TreeScope * System.Windows.Automation.AutomationPropertyChangedEventHandler * System.Windows.Automation.AutomationProperty[] -&gt; unit" Usage="System.Windows.Automation.Automation.AddAutomationPropertyChangedEventHandler (element, scope, eventHandler, properties)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.Automation.AutomationElement" />
        <Parameter Name="scope" Type="System.Windows.Automation.TreeScope" />
        <Parameter Name="eventHandler" Type="System.Windows.Automation.AutomationPropertyChangedEventHandler" />
        <Parameter Name="properties" Type="System.Windows.Automation.AutomationProperty[]">
          <Attributes>
            <Attribute FrameworkAlternate="net-5.0">
              <AttributeName Language="C#">[System.ParamArray]</AttributeName>
              <AttributeName Language="F#">[&lt;System.ParamArray&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="element">Das [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]-Element, dem der Ereignishandler zugeordnet werden soll.</param>
        <param name="scope">Der Umfang der zu behandelnden Elemente, d. h. ob die Ereignisse bei dem Element selbst oder bei über- oder untergeordneten Elementen eintreten.</param>
        <param name="eventHandler">Die Methode, die beim Eintreten des Ereignisses aufgerufen werden soll.</param>
        <param name="properties">Die relevanten [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]-Eigenschaften.</param>
        <summary>Registriert eine Methode, die Eigenschaftenänderungsereignisse behandelt.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Das [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] vom angegebenen [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] Element angegebene Element unterstützt möglicherweise nicht die Eigenschaften, die vom-Parameter angegeben werden `properties` .  
  
 `eventHandler` kann eine Instanz der-Methode oder ein Verweis auf die-Methode ( `AddressOf` in Visual Basic) sein.  
  
   
  
## Examples  
 Der folgende Beispielcode fügt einen Ereignishandler hinzu, der auf eine Änderung im aktivierten Zustand eines angegebenen Elements lauscht.  
  
 [!code-csharp[UIAClient_snip#172](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#172)]
 [!code-vb[UIAClient_snip#172](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#172)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Automation.Automation.RemoveAutomationPropertyChangedEventHandler(System.Windows.Automation.AutomationElement,System.Windows.Automation.AutomationPropertyChangedEventHandler)" />
        <altmember cref="M:System.Windows.Automation.Automation.AddAutomationEventHandler(System.Windows.Automation.AutomationEvent,System.Windows.Automation.AutomationElement,System.Windows.Automation.TreeScope,System.Windows.Automation.AutomationEventHandler)" />
        <altmember cref="M:System.Windows.Automation.Automation.AddAutomationFocusChangedEventHandler(System.Windows.Automation.AutomationFocusChangedEventHandler)" />
        <altmember cref="M:System.Windows.Automation.Automation.AddStructureChangedEventHandler(System.Windows.Automation.AutomationElement,System.Windows.Automation.TreeScope,System.Windows.Automation.StructureChangedEventHandler)" />
        <related type="Article" href="https://msdn.microsoft.com/library/b688effa-b3e8-4b05-944d-05ed89a245aa">Abonnieren von Benutzeroberflächenautomatisierungs-Ereignissen</related>
        <related type="Article" href="https://msdn.microsoft.com/library/b909e388-3f24-4997-b6d4-bd9c35c2dc27">Übersicht über Benutzeroberflächenautomatisierungs-Ereignisse</related>
      </Docs>
    </Member>
    <Member MemberName="AddStructureChangedEventHandler">
      <MemberSignature Language="C#" Value="public static void AddStructureChangedEventHandler (System.Windows.Automation.AutomationElement element, System.Windows.Automation.TreeScope scope, System.Windows.Automation.StructureChangedEventHandler eventHandler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddStructureChangedEventHandler(class System.Windows.Automation.AutomationElement element, valuetype System.Windows.Automation.TreeScope scope, class System.Windows.Automation.StructureChangedEventHandler eventHandler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Automation.AddStructureChangedEventHandler(System.Windows.Automation.AutomationElement,System.Windows.Automation.TreeScope,System.Windows.Automation.StructureChangedEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddStructureChangedEventHandler (element As AutomationElement, scope As TreeScope, eventHandler As StructureChangedEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddStructureChangedEventHandler(System::Windows::Automation::AutomationElement ^ element, System::Windows::Automation::TreeScope scope, System::Windows::Automation::StructureChangedEventHandler ^ eventHandler);" />
      <MemberSignature Language="F#" Value="static member AddStructureChangedEventHandler : System.Windows.Automation.AutomationElement * System.Windows.Automation.TreeScope * System.Windows.Automation.StructureChangedEventHandler -&gt; unit" Usage="System.Windows.Automation.Automation.AddStructureChangedEventHandler (element, scope, eventHandler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.Automation.AutomationElement" />
        <Parameter Name="scope" Type="System.Windows.Automation.TreeScope" />
        <Parameter Name="eventHandler" Type="System.Windows.Automation.StructureChangedEventHandler" />
      </Parameters>
      <Docs>
        <param name="element">Das [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]-Element, dem der Ereignishandler zugeordnet werden soll.</param>
        <param name="scope">Der Umfang der zu behandelnden Elemente, d. h. ob die Ereignisse bei dem Element selbst oder bei Vorgänger- oder Nachfolgerelementen eintreten.</param>
        <param name="eventHandler">Die Methode, die beim Eintreten des Strukturänderungsereignisses aufgerufen werden soll.</param>
        <summary>Registriert die Methode, die Strukturänderungsereignisse behandelt.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `eventHandler` kann eine Instanz der-Methode oder ein Verweis auf die-Methode ( `AddressOf` in Visual Basic) sein.  
  
   
  
## Examples  
 Im folgenden Beispiel wird ein Ereignishandler-Delegat mit Strukturänderung veranschaulicht, der immer dann aufgerufen wird, wenn die Teilstruktur des angegebenen <xref:System.Windows.Automation.AutomationElement> geändert wird.  
  
 [!code-csharp[UIAFocusTracker_snip#105](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAFocusTracker_snip/CSharp/FocusTracker.cs#105)]
 [!code-vb[UIAFocusTracker_snip#105](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAFocusTracker_snip/VisualBasic/FocusTracker.vb#105)]  
  
 Im folgenden Beispielcode wird eine Instanz des-Delegaten hinzugefügt.  
  
 [!code-csharp[UIAFocusTracker_snip#104](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAFocusTracker_snip/CSharp/FocusTracker.cs#104)]
 [!code-vb[UIAFocusTracker_snip#104](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAFocusTracker_snip/VisualBasic/FocusTracker.vb#104)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Automation.Automation.RemoveStructureChangedEventHandler(System.Windows.Automation.AutomationElement,System.Windows.Automation.StructureChangedEventHandler)" />
        <altmember cref="M:System.Windows.Automation.Automation.AddAutomationEventHandler(System.Windows.Automation.AutomationEvent,System.Windows.Automation.AutomationElement,System.Windows.Automation.TreeScope,System.Windows.Automation.AutomationEventHandler)" />
        <altmember cref="M:System.Windows.Automation.Automation.AddAutomationFocusChangedEventHandler(System.Windows.Automation.AutomationFocusChangedEventHandler)" />
        <related type="Article" href="https://msdn.microsoft.com/library/b688effa-b3e8-4b05-944d-05ed89a245aa">Abonnieren von Benutzeroberflächenautomatisierungs-Ereignissen</related>
        <related type="Article" href="https://msdn.microsoft.com/library/b909e388-3f24-4997-b6d4-bd9c35c2dc27">Übersicht über Benutzeroberflächenautomatisierungs-Ereignisse</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Compare">
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Vergleicht die angegebenen Parameter, um zu bestimmen, ob sie auf das gleiche „UI Automation“-Element verweisen.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Compare">
      <MemberSignature Language="C#" Value="public static bool Compare (int[] runtimeId1, int[] runtimeId2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Compare(int32[] runtimeId1, int32[] runtimeId2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Automation.Compare(System.Int32[],System.Int32[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Compare (runtimeId1 As Integer(), runtimeId2 As Integer()) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool Compare(cli::array &lt;int&gt; ^ runtimeId1, cli::array &lt;int&gt; ^ runtimeId2);" />
      <MemberSignature Language="F#" Value="static member Compare : int[] * int[] -&gt; bool" Usage="System.Windows.Automation.Automation.Compare (runtimeId1, runtimeId2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="runtimeId1" Type="System.Int32[]" />
        <Parameter Name="runtimeId2" Type="System.Int32[]" />
      </Parameters>
      <Docs>
        <param name="runtimeId1">Die erste zu vergleichende Laufzeit-ID.</param>
        <param name="runtimeId2">Die zweite zu vergleichende Laufzeit-ID.</param>
        <summary>Vergleicht zwei ganzzahlige Arrays mit Laufzeit-[!INCLUDE[TLA#tla_id#plural](~/includes/tlasharptla-idsharpplural-md.md)], um zu bestimmen, ob sie den gleichen Inhalt aufweisen.</summary>
        <returns><see langword="true" /> wenn die verglichenen Laufzeit- [!INCLUDE[TLA2#tla_id#plural](~/includes/tla2sharptla-idsharpplural-md.md)] auf das gleiche [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)]-Element verweisen, andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn eines der Argumente ein NULL-Verweis ( `Nothing` in Visual Basic) ist, wird <xref:System.Windows.Automation.Automation.Compare%2A> eine <xref:System.ArgumentNullException> Ausnahme ausgelöst.  
  
   
  
## Examples  
 Die folgende Beispiel Funktion bestimmt, ob eine Lauf Zeit-ID in einer Liste der Laufzeit enthalten ist [!INCLUDE[TLA2#tla_id#plural](~/includes/tla2sharptla-idsharpplural-md.md)] .  
  
 [!code-csharp[UIAFocusTracker_snip#103](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAFocusTracker_snip/CSharp/FocusTracker.cs#103)]
 [!code-vb[UIAFocusTracker_snip#103](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAFocusTracker_snip/VisualBasic/FocusTracker.vb#103)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Automation.AutomationElement.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Compare">
      <MemberSignature Language="C#" Value="public static bool Compare (System.Windows.Automation.AutomationElement el1, System.Windows.Automation.AutomationElement el2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Compare(class System.Windows.Automation.AutomationElement el1, class System.Windows.Automation.AutomationElement el2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Automation.Compare(System.Windows.Automation.AutomationElement,System.Windows.Automation.AutomationElement)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Compare (el1 As AutomationElement, el2 As AutomationElement) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool Compare(System::Windows::Automation::AutomationElement ^ el1, System::Windows::Automation::AutomationElement ^ el2);" />
      <MemberSignature Language="F#" Value="static member Compare : System.Windows.Automation.AutomationElement * System.Windows.Automation.AutomationElement -&gt; bool" Usage="System.Windows.Automation.Automation.Compare (el1, el2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="el1" Type="System.Windows.Automation.AutomationElement" />
        <Parameter Name="el2" Type="System.Windows.Automation.AutomationElement" />
      </Parameters>
      <Docs>
        <param name="el1">Das erste zu vergleichende [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]-Element.</param>
        <param name="el2">Das zweite zu vergleichende [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]-Element.</param>
        <summary>Vergleicht zwei [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]-Elemente und gibt <see langword="true" /> zurück, wenn beide auf das gleiche [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)]-Element verweisen.</summary>
        <returns><see langword="true" />, wenn die Laufzeitbezeichner der [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)]-Elemente gleich sind, andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn eines der Argumente ein NULL-Verweis ( `Nothing` in Visual Basic) ist, wird <xref:System.Windows.Automation.Automation.Compare%2A> eine <xref:System.ArgumentNullException> Ausnahme ausgelöst.  
  
 Diese Methode entspricht dem Gleichheits Operator für- <xref:System.Windows.Automation.AutomationElement> Objekte.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Automation.AutomationElement.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="ContentViewCondition">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.Condition ContentViewCondition;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.Condition ContentViewCondition" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.Automation.ContentViewCondition" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ContentViewCondition As Condition " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::Condition ^ ContentViewCondition;" />
      <MemberSignature Language="F#" Value=" staticval mutable ContentViewCondition : System.Windows.Automation.Condition" Usage="System.Windows.Automation.Automation.ContentViewCondition" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.Condition</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Stellt eine vordefinierte Ansicht der [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]-Struktur dar, die nur [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]-Elemente mit Inhalt enthält.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Im folgenden Beispiel werden verschiedene statische Bedingungen, einschließlich, <xref:System.Windows.Automation.Automation.ContentViewCondition> zum Abrufen von-Elementen verwendet.  
  
 [!code-csharp[UIAClient_snip#178](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ConditionSnips.cs#178)]
 [!code-vb[UIAClient_snip#178](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ConditionSnips.vb#178)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Windows.Automation.Automation.ControlViewCondition" />
        <altmember cref="F:System.Windows.Automation.Automation.RawViewCondition" />
        <related type="Article" href="/dotnet/framework/ui-automation/obtaining-ui-automation-elements">Abrufen von Benutzeroberflächenautomatisierungs-Elementen</related>
      </Docs>
    </Member>
    <Member MemberName="ControlViewCondition">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.Condition ControlViewCondition;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.Condition ControlViewCondition" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.Automation.ControlViewCondition" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ControlViewCondition As Condition " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::Condition ^ ControlViewCondition;" />
      <MemberSignature Language="F#" Value=" staticval mutable ControlViewCondition : System.Windows.Automation.Condition" Usage="System.Windows.Automation.Automation.ControlViewCondition" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.Condition</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Stellt eine vordefinierte Ansicht der [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]-Struktur dar, die nur [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]-Elemente enthält, bei denen es sich um Steuerelemente handelt.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Im folgenden Beispiel werden verschiedene statische Bedingungen, einschließlich, <xref:System.Windows.Automation.Automation.ControlViewCondition> zum Abrufen von-Elementen verwendet.  
  
 [!code-csharp[UIAClient_snip#178](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ConditionSnips.cs#178)]
 [!code-vb[UIAClient_snip#178](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ConditionSnips.vb#178)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Windows.Automation.Automation.ContentViewCondition" />
        <altmember cref="F:System.Windows.Automation.Automation.RawViewCondition" />
        <related type="Article" href="/dotnet/framework/ui-automation/obtaining-ui-automation-elements">Abrufen von Benutzeroberflächenautomatisierungs-Elementen</related>
      </Docs>
    </Member>
    <Member MemberName="PatternName">
      <MemberSignature Language="C#" Value="public static string PatternName (System.Windows.Automation.AutomationPattern pattern);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string PatternName(class System.Windows.Automation.AutomationPattern pattern) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Automation.PatternName(System.Windows.Automation.AutomationPattern)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function PatternName (pattern As AutomationPattern) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ PatternName(System::Windows::Automation::AutomationPattern ^ pattern);" />
      <MemberSignature Language="F#" Value="static member PatternName : System.Windows.Automation.AutomationPattern -&gt; string" Usage="System.Windows.Automation.Automation.PatternName pattern" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pattern" Type="System.Windows.Automation.AutomationPattern" />
      </Parameters>
      <Docs>
        <param name="pattern">Der Bezeichner des Steuerelementmusters.</param>
        <summary>Ruft den Namen des angegebenen Steuerelementmusters ab.</summary>
        <returns>Der Anzeigename des Steuerelementmusters oder ein NULL-Verweis (<see langword="Nothing" /> in Visual Basic), wenn das angegebene Muster nicht gefunden wird.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Im folgenden Beispiel wird der Name jedes Steuerelement Musters angezeigt, das von einem unterstützt wird <xref:System.Windows.Automation.AutomationElement> .  
  
> [!NOTE]
>  <xref:System.Windows.Automation.AutomationElement.GetSupportedPatterns%2A>Der Aufruf von erfordert sehr viel Verarbeitung, da er die <xref:System.Windows.Automation.AutomationElement> für jedes mögliche Muster abfragt.  
  
 [!code-csharp[UIAClient_snip#114](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#114)]
 [!code-vb[UIAClient_snip#114](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#114)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PropertyName">
      <MemberSignature Language="C#" Value="public static string PropertyName (System.Windows.Automation.AutomationProperty property);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string PropertyName(class System.Windows.Automation.AutomationProperty property) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Automation.PropertyName(System.Windows.Automation.AutomationProperty)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function PropertyName (property As AutomationProperty) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ PropertyName(System::Windows::Automation::AutomationProperty ^ property);" />
      <MemberSignature Language="F#" Value="static member PropertyName : System.Windows.Automation.AutomationProperty -&gt; string" Usage="System.Windows.Automation.Automation.PropertyName property" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="System.Windows.Automation.AutomationProperty" />
      </Parameters>
      <Docs>
        <param name="property">Der [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]-Eigenschaftenbezeichner der benannten Eigenschaft.</param>
        <summary>Ruft den Namen der angegebenen [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]-Eigenschaft ab.</summary>
        <returns>Der Anzeigename der [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]-Eigenschaft oder ein NULL-Verweis (<see langword="Nothing" /> in Visual Basic), wenn die angegebene [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]-Eigenschaft nicht gefunden wird.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Im folgenden Beispiel wird der Name der einzelnen Eigenschaften angezeigt, die von einem unterstützt werden <xref:System.Windows.Automation.AutomationElement> .  
  
 [!code-csharp[UIAClient_snip#115](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#115)]
 [!code-vb[UIAClient_snip#115](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#115)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RawViewCondition">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.Condition RawViewCondition;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.Condition RawViewCondition" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.Automation.RawViewCondition" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly RawViewCondition As Condition " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::Condition ^ RawViewCondition;" />
      <MemberSignature Language="F#" Value=" staticval mutable RawViewCondition : System.Windows.Automation.Condition" Usage="System.Windows.Automation.Automation.RawViewCondition" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.Condition</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Stellt eine vordefinierte Ansicht der [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]-Struktur dar, die alle [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]-Elemente enthält.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Bedingung wird von sich selbst verwendet und ist funktional identisch mit <xref:System.Windows.Automation.Condition.TrueCondition> .  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Windows.Automation.Automation.ContentViewCondition" />
        <altmember cref="F:System.Windows.Automation.Automation.ControlViewCondition" />
        <related type="Article" href="/dotnet/framework/ui-automation/obtaining-ui-automation-elements">Abrufen von Benutzeroberflächenautomatisierungs-Elementen</related>
      </Docs>
    </Member>
    <Member MemberName="RemoveAllEventHandlers">
      <MemberSignature Language="C#" Value="public static void RemoveAllEventHandlers ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveAllEventHandlers() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Automation.RemoveAllEventHandlers" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveAllEventHandlers ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveAllEventHandlers();" />
      <MemberSignature Language="F#" Value="static member RemoveAllEventHandlers : unit -&gt; unit" Usage="System.Windows.Automation.Automation.RemoveAllEventHandlers " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Entfernt alle registrierten [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]-Ereignishandler.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Automation.Automation.RemoveAutomationEventHandler(System.Windows.Automation.AutomationEvent,System.Windows.Automation.AutomationElement,System.Windows.Automation.AutomationEventHandler)" />
        <altmember cref="M:System.Windows.Automation.Automation.RemoveAutomationFocusChangedEventHandler(System.Windows.Automation.AutomationFocusChangedEventHandler)" />
        <altmember cref="M:System.Windows.Automation.Automation.RemoveAutomationPropertyChangedEventHandler(System.Windows.Automation.AutomationElement,System.Windows.Automation.AutomationPropertyChangedEventHandler)" />
        <altmember cref="M:System.Windows.Automation.Automation.RemoveStructureChangedEventHandler(System.Windows.Automation.AutomationElement,System.Windows.Automation.StructureChangedEventHandler)" />
        <related type="Article" href="https://msdn.microsoft.com/library/b688effa-b3e8-4b05-944d-05ed89a245aa">Abonnieren von Benutzeroberflächenautomatisierungs-Ereignissen</related>
        <related type="Article" href="https://msdn.microsoft.com/library/b909e388-3f24-4997-b6d4-bd9c35c2dc27">Übersicht über Benutzeroberflächenautomatisierungs-Ereignisse</related>
      </Docs>
    </Member>
    <Member MemberName="RemoveAutomationEventHandler">
      <MemberSignature Language="C#" Value="public static void RemoveAutomationEventHandler (System.Windows.Automation.AutomationEvent eventId, System.Windows.Automation.AutomationElement element, System.Windows.Automation.AutomationEventHandler eventHandler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveAutomationEventHandler(class System.Windows.Automation.AutomationEvent eventId, class System.Windows.Automation.AutomationElement element, class System.Windows.Automation.AutomationEventHandler eventHandler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Automation.RemoveAutomationEventHandler(System.Windows.Automation.AutomationEvent,System.Windows.Automation.AutomationElement,System.Windows.Automation.AutomationEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveAutomationEventHandler (eventId As AutomationEvent, element As AutomationElement, eventHandler As AutomationEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveAutomationEventHandler(System::Windows::Automation::AutomationEvent ^ eventId, System::Windows::Automation::AutomationElement ^ element, System::Windows::Automation::AutomationEventHandler ^ eventHandler);" />
      <MemberSignature Language="F#" Value="static member RemoveAutomationEventHandler : System.Windows.Automation.AutomationEvent * System.Windows.Automation.AutomationElement * System.Windows.Automation.AutomationEventHandler -&gt; unit" Usage="System.Windows.Automation.Automation.RemoveAutomationEventHandler (eventId, element, eventHandler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventId" Type="System.Windows.Automation.AutomationEvent" />
        <Parameter Name="element" Type="System.Windows.Automation.AutomationElement" />
        <Parameter Name="eventHandler" Type="System.Windows.Automation.AutomationEventHandler" />
      </Parameters>
      <Docs>
        <param name="eventId">Ein Ereignisbezeichner.</param>
        <param name="element">Das [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]-Element, bei dem der Ereignishandler entfernt werden soll.</param>
        <param name="eventHandler">Die Handlermethode, die für den angegebenen Ereignisbezeichner und das angegebene [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]-Element an <see cref="M:System.Windows.Automation.Automation.AddAutomationEventHandler(System.Windows.Automation.AutomationEvent,System.Windows.Automation.AutomationElement,System.Windows.Automation.TreeScope,System.Windows.Automation.AutomationEventHandler)" /> übergeben wurde.</param>
        <summary>Entfernt den angegebenen [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]-Ereignishandler.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Der folgende Beispielcode zeigt, wie ein Ereignishandler hinzugefügt und entfernt wird.  
  
 [!code-csharp[UIAClient_snip#101](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#101)]
 [!code-vb[UIAClient_snip#101](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#101)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Automation.Automation.RemoveAllEventHandlers" />
        <related type="Article" href="https://msdn.microsoft.com/library/b688effa-b3e8-4b05-944d-05ed89a245aa">Abonnieren von Benutzeroberflächenautomatisierungs-Ereignissen</related>
        <related type="Article" href="https://msdn.microsoft.com/library/b909e388-3f24-4997-b6d4-bd9c35c2dc27">Übersicht über Benutzeroberflächenautomatisierungs-Ereignisse</related>
      </Docs>
    </Member>
    <Member MemberName="RemoveAutomationFocusChangedEventHandler">
      <MemberSignature Language="C#" Value="public static void RemoveAutomationFocusChangedEventHandler (System.Windows.Automation.AutomationFocusChangedEventHandler eventHandler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveAutomationFocusChangedEventHandler(class System.Windows.Automation.AutomationFocusChangedEventHandler eventHandler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Automation.RemoveAutomationFocusChangedEventHandler(System.Windows.Automation.AutomationFocusChangedEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveAutomationFocusChangedEventHandler (eventHandler As AutomationFocusChangedEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveAutomationFocusChangedEventHandler(System::Windows::Automation::AutomationFocusChangedEventHandler ^ eventHandler);" />
      <MemberSignature Language="F#" Value="static member RemoveAutomationFocusChangedEventHandler : System.Windows.Automation.AutomationFocusChangedEventHandler -&gt; unit" Usage="System.Windows.Automation.Automation.RemoveAutomationFocusChangedEventHandler eventHandler" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventHandler" Type="System.Windows.Automation.AutomationFocusChangedEventHandler" />
      </Parameters>
      <Docs>
        <param name="eventHandler">Eine Handlermethode, die an <see cref="M:System.Windows.Automation.Automation.AddAutomationFocusChangedEventHandler(System.Windows.Automation.AutomationFocusChangedEventHandler)" /> übergeben wurde</param>
        <summary>Entfernt den angegebenen Ereignishandler für Fokusänderungen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der folgende Beispielcode zeigt, wie ein Ereignishandler mit Fokus Änderung hinzugefügt und entfernt wird.  
  
 [!code-csharp[UIAClient_snip#102](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#102)]
 [!code-vb[UIAClient_snip#102](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#102)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Automation.Automation.RemoveAllEventHandlers" />
        <related type="Article" href="https://msdn.microsoft.com/library/b688effa-b3e8-4b05-944d-05ed89a245aa">Abonnieren von Benutzeroberflächenautomatisierungs-Ereignissen</related>
        <related type="Article" href="https://msdn.microsoft.com/library/b909e388-3f24-4997-b6d4-bd9c35c2dc27">Übersicht über Benutzeroberflächenautomatisierungs-Ereignisse</related>
      </Docs>
    </Member>
    <Member MemberName="RemoveAutomationPropertyChangedEventHandler">
      <MemberSignature Language="C#" Value="public static void RemoveAutomationPropertyChangedEventHandler (System.Windows.Automation.AutomationElement element, System.Windows.Automation.AutomationPropertyChangedEventHandler eventHandler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveAutomationPropertyChangedEventHandler(class System.Windows.Automation.AutomationElement element, class System.Windows.Automation.AutomationPropertyChangedEventHandler eventHandler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Automation.RemoveAutomationPropertyChangedEventHandler(System.Windows.Automation.AutomationElement,System.Windows.Automation.AutomationPropertyChangedEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveAutomationPropertyChangedEventHandler (element As AutomationElement, eventHandler As AutomationPropertyChangedEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveAutomationPropertyChangedEventHandler(System::Windows::Automation::AutomationElement ^ element, System::Windows::Automation::AutomationPropertyChangedEventHandler ^ eventHandler);" />
      <MemberSignature Language="F#" Value="static member RemoveAutomationPropertyChangedEventHandler : System.Windows.Automation.AutomationElement * System.Windows.Automation.AutomationPropertyChangedEventHandler -&gt; unit" Usage="System.Windows.Automation.Automation.RemoveAutomationPropertyChangedEventHandler (element, eventHandler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.Automation.AutomationElement" />
        <Parameter Name="eventHandler" Type="System.Windows.Automation.AutomationPropertyChangedEventHandler" />
      </Parameters>
      <Docs>
        <param name="element">Das [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]-Element, aus dem der Ereignishandler entfernt werden soll.</param>
        <param name="eventHandler">Eine Handlermethode, die für das angegebene [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]-Element an <see cref="M:System.Windows.Automation.Automation.AddAutomationPropertyChangedEventHandler(System.Windows.Automation.AutomationElement,System.Windows.Automation.TreeScope,System.Windows.Automation.AutomationPropertyChangedEventHandler,System.Windows.Automation.AutomationProperty[])" /> übergeben wurde.</param>
        <summary>Entfernt den angegebenen Ereignishandler für Eigenschaftenänderungen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der folgende Beispielcode zeigt, wie ein Ereignishandler mit Eigenschaften Änderung hinzugefügt und entfernt wird.  
  
 [!code-csharp[UIAClient_snip#172](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#172)]
 [!code-vb[UIAClient_snip#172](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#172)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Automation.Automation.RemoveAllEventHandlers" />
        <related type="Article" href="https://msdn.microsoft.com/library/b688effa-b3e8-4b05-944d-05ed89a245aa">Abonnieren von Benutzeroberflächenautomatisierungs-Ereignissen</related>
        <related type="Article" href="https://msdn.microsoft.com/library/b909e388-3f24-4997-b6d4-bd9c35c2dc27">Übersicht über Benutzeroberflächenautomatisierungs-Ereignisse</related>
      </Docs>
    </Member>
    <Member MemberName="RemoveStructureChangedEventHandler">
      <MemberSignature Language="C#" Value="public static void RemoveStructureChangedEventHandler (System.Windows.Automation.AutomationElement element, System.Windows.Automation.StructureChangedEventHandler eventHandler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveStructureChangedEventHandler(class System.Windows.Automation.AutomationElement element, class System.Windows.Automation.StructureChangedEventHandler eventHandler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Automation.RemoveStructureChangedEventHandler(System.Windows.Automation.AutomationElement,System.Windows.Automation.StructureChangedEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveStructureChangedEventHandler (element As AutomationElement, eventHandler As StructureChangedEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveStructureChangedEventHandler(System::Windows::Automation::AutomationElement ^ element, System::Windows::Automation::StructureChangedEventHandler ^ eventHandler);" />
      <MemberSignature Language="F#" Value="static member RemoveStructureChangedEventHandler : System.Windows.Automation.AutomationElement * System.Windows.Automation.StructureChangedEventHandler -&gt; unit" Usage="System.Windows.Automation.Automation.RemoveStructureChangedEventHandler (element, eventHandler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.Automation.AutomationElement" />
        <Parameter Name="eventHandler" Type="System.Windows.Automation.StructureChangedEventHandler" />
      </Parameters>
      <Docs>
        <param name="element">Das [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]-Element, aus dem der Ereignishandler entfernt werden soll.</param>
        <param name="eventHandler">Eine Handlermethode, die für das angegebene [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]-Element an <see cref="M:System.Windows.Automation.Automation.AddStructureChangedEventHandler(System.Windows.Automation.AutomationElement,System.Windows.Automation.TreeScope,System.Windows.Automation.StructureChangedEventHandler)" /> übergeben wurde.</param>
        <summary>Entfernt den angegebenen Ereignishandler für Strukturänderungen.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Automation.Automation.RemoveAllEventHandlers" />
        <related type="Article" href="https://msdn.microsoft.com/library/b688effa-b3e8-4b05-944d-05ed89a245aa">Abonnieren von Benutzeroberflächenautomatisierungs-Ereignissen</related>
        <related type="Article" href="https://msdn.microsoft.com/library/b909e388-3f24-4997-b6d4-bd9c35c2dc27">Übersicht über Benutzeroberflächenautomatisierungs-Ereignisse</related>
      </Docs>
    </Member>
  </Members>
</Type>
