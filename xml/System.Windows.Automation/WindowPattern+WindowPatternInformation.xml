<Type Name="WindowPattern+WindowPatternInformation" FullName="System.Windows.Automation.WindowPattern+WindowPatternInformation">
  <Metadata><Meta Name="ms.openlocfilehash" Value="e3605ece5cd08621f22ef37c2ae6d3e6778685be" /><Meta Name="ms.sourcegitcommit" Value="b0947fed0227b6b2e292d7efb43705b488b130aa" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="04/29/2020" /><Meta Name="ms.locfileid" Value="82357842" /></Metadata><TypeSignature Language="C#" Value="public struct WindowPattern.WindowPatternInformation" />
  <TypeSignature Language="ILAsm" Value=".class nested public sequential ansi sealed beforefieldinit WindowPattern/WindowPatternInformation extends System.ValueType" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Automation.WindowPattern.WindowPatternInformation" />
  <TypeSignature Language="VB.NET" Value="Public Structure WindowPattern.WindowPatternInformation" />
  <TypeSignature Language="C++ CLI" Value="public: value class WindowPattern::WindowPatternInformation" />
  <TypeSignature Language="F#" Value="type WindowPattern.WindowPatternInformation = struct" />
  <AssemblyInfo>
    <AssemblyName>UIAutomationClient</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Gewährt mithilfe des zugehörigen <see cref="T:System.Windows.Automation.WindowPattern" />-Accessors oder <see cref="P:System.Windows.Automation.WindowPattern.Current" />-Accessors Zugriff auf die Eigenschaftswerte eines <see cref="P:System.Windows.Automation.WindowPattern.Cached" />-Objekts.</summary>
    <remarks>To be added.</remarks>
    <altmember cref="T:System.Windows.Automation.Provider.IWindowProvider" />
    <related type="Article" href="~/docs/framework/ui-automation/ui-automation-control-patterns-overview.md">Übersicht über Steuerelementmuster für Benutzeroberflächenautomatisierung</related>
    <related type="Article" href="~/docs/framework/ui-automation/ui-automation-control-patterns-for-clients.md">Steuerelementmuster für Benutzeroberflächenautomatisierung für Clients</related>
    <related type="Article" href="https://msdn.microsoft.com/library/ec722dff-6009-4279-b86a-e18d3fa94ebf">Verwenden der Zwischenspeicherung in der Benutzeroberflächenautomatisierung</related>
  </Docs>
  <Members>
    <Member MemberName="CanMaximize">
      <MemberSignature Language="C#" Value="public bool CanMaximize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanMaximize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.WindowPattern.WindowPatternInformation.CanMaximize" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanMaximize As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanMaximize { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanMaximize : bool" Usage="System.Windows.Automation.WindowPattern.WindowPatternInformation.CanMaximize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob das <see cref="T:System.Windows.Automation.AutomationElement" /> maximiert werden kann.</summary>
        <value><see langword="true" />, wenn das <see cref="T:System.Windows.Automation.AutomationElement" /> maximiert werden kann, andernfalls <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Im folgenden Beispiel wird ein <xref:System.Windows.Automation.WindowPattern>-Steuerelement Muster aus einer <xref:System.Windows.Automation.AutomationElement> abgerufen und anschließend verwendet, um den visuellen Zustand der <xref:System.Windows.Automation.AutomationElement>anzugeben.  
  
 [!code-csharp[UIAWindowPattern_snip#101](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAWindowPattern_snip/CSharp/UIAWindowPattern_snippets.cs#101)]
 [!code-vb[UIAWindowPattern_snip#101](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAWindowPattern_snip/VisualBasic/UIAWindowPattern_snippets.vb#101)]  
[!code-csharp[UIAWindowPattern_snip#103](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAWindowPattern_snip/CSharp/UIAWindowPattern_snippets.cs#103)]
[!code-vb[UIAWindowPattern_snip#103](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAWindowPattern_snip/VisualBasic/UIAWindowPattern_snippets.vb#103)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanMinimize">
      <MemberSignature Language="C#" Value="public bool CanMinimize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanMinimize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.WindowPattern.WindowPatternInformation.CanMinimize" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanMinimize As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanMinimize { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanMinimize : bool" Usage="System.Windows.Automation.WindowPattern.WindowPatternInformation.CanMinimize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob das aktuelle <see cref="T:System.Windows.Automation.AutomationElement" />-Element minimiert werden kann.</summary>
        <value><see langword="true" />, wenn das <see cref="T:System.Windows.Automation.AutomationElement" /> minimiert werden kann, andernfalls <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Im folgenden Beispiel wird ein <xref:System.Windows.Automation.WindowPattern>-Steuerelement Muster aus einer <xref:System.Windows.Automation.AutomationElement> abgerufen und anschließend verwendet, um den visuellen Zustand der <xref:System.Windows.Automation.AutomationElement>anzugeben.  
  
 [!code-csharp[UIAWindowPattern_snip#101](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAWindowPattern_snip/CSharp/UIAWindowPattern_snippets.cs#101)]
 [!code-vb[UIAWindowPattern_snip#101](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAWindowPattern_snip/VisualBasic/UIAWindowPattern_snippets.vb#101)]  
[!code-csharp[UIAWindowPattern_snip#103](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAWindowPattern_snip/CSharp/UIAWindowPattern_snippets.cs#103)]
[!code-vb[UIAWindowPattern_snip#103](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAWindowPattern_snip/VisualBasic/UIAWindowPattern_snippets.vb#103)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsModal">
      <MemberSignature Language="C#" Value="public bool IsModal { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsModal" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.WindowPattern.WindowPatternInformation.IsModal" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsModal As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsModal { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsModal : bool" Usage="System.Windows.Automation.WindowPattern.WindowPatternInformation.IsModal" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob das <see cref="T:System.Windows.Automation.AutomationElement" /> modal ist.</summary>
        <value><see langword="true" />, wenn das <see cref="T:System.Windows.Automation.AutomationElement" /> modal ist, andernfalls <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Im folgenden Beispiel wird ein <xref:System.Windows.Automation.WindowPattern>-Steuerelement Muster aus einer <xref:System.Windows.Automation.AutomationElement> abgerufen und anschließend verwendet, um den visuellen Zustand der <xref:System.Windows.Automation.AutomationElement>anzugeben.  
  
 [!code-csharp[UIAWindowPattern_snip#101](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAWindowPattern_snip/CSharp/UIAWindowPattern_snippets.cs#101)]
 [!code-vb[UIAWindowPattern_snip#101](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAWindowPattern_snip/VisualBasic/UIAWindowPattern_snippets.vb#101)]  
[!code-csharp[UIAWindowPattern_snip#103](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAWindowPattern_snip/CSharp/UIAWindowPattern_snippets.cs#103)]
[!code-vb[UIAWindowPattern_snip#103](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAWindowPattern_snip/VisualBasic/UIAWindowPattern_snippets.vb#103)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsTopmost">
      <MemberSignature Language="C#" Value="public bool IsTopmost { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsTopmost" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.WindowPattern.WindowPatternInformation.IsTopmost" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsTopmost As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsTopmost { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsTopmost : bool" Usage="System.Windows.Automation.WindowPattern.WindowPatternInformation.IsTopmost" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob das <see cref="T:System.Windows.Automation.AutomationElement" /> das oberste Element in der Z-Reihenfolge ist.</summary>
        <value><see langword="true" />, wenn das <see cref="T:System.Windows.Automation.AutomationElement" /> das oberste ist, andernfalls <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Im folgenden Beispiel wird ein-<xref:System.Windows.Automation.AutomationPropertyChangedEventHandler> definiert, um Änderungen am <xref:System.Windows.Automation.WindowPattern.IsTopmostProperty> eines <xref:System.Windows.Automation.AutomationElement>zu überwachen.  
  
 [!code-csharp[UIAWindowPattern_snip#105](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAWindowPattern_snip/CSharp/UIAWindowPattern_snippets.cs#105)]
 [!code-vb[UIAWindowPattern_snip#105](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAWindowPattern_snip/VisualBasic/UIAWindowPattern_snippets.vb#105)]  
[!code-csharp[UIAWindowPattern_snip#106](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAWindowPattern_snip/CSharp/UIAWindowPattern_snippets.cs#106)]
[!code-vb[UIAWindowPattern_snip#106](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAWindowPattern_snip/VisualBasic/UIAWindowPattern_snippets.vb#106)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WindowInteractionState">
      <MemberSignature Language="C#" Value="public System.Windows.Automation.WindowInteractionState WindowInteractionState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Automation.WindowInteractionState WindowInteractionState" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.WindowPattern.WindowPatternInformation.WindowInteractionState" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property WindowInteractionState As WindowInteractionState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Automation::WindowInteractionState WindowInteractionState { System::Windows::Automation::WindowInteractionState get(); };" />
      <MemberSignature Language="F#" Value="member this.WindowInteractionState : System.Windows.Automation.WindowInteractionState" Usage="System.Windows.Automation.WindowPattern.WindowPatternInformation.WindowInteractionState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.WindowInteractionState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft das <see cref="T:System.Windows.Automation.WindowInteractionState" /> von <see cref="T:System.Windows.Automation.AutomationElement" /> ab.</summary>
        <value>Das <see cref="T:System.Windows.Automation.WindowInteractionState" /> von <see cref="T:System.Windows.Automation.AutomationElement" />. Standardwert: <see cref="F:System.Windows.Automation.WindowInteractionState.Running" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Im folgenden Beispiel wird ein <xref:System.Windows.Automation.WindowPattern>-Steuerelement Muster aus einer <xref:System.Windows.Automation.AutomationElement> abgerufen und anschließend verwendet, um den visuellen Zustand der <xref:System.Windows.Automation.AutomationElement>anzugeben.  
  
 [!code-csharp[UIAWindowPattern_snip#101](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAWindowPattern_snip/CSharp/UIAWindowPattern_snippets.cs#101)]
 [!code-vb[UIAWindowPattern_snip#101](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAWindowPattern_snip/VisualBasic/UIAWindowPattern_snippets.vb#101)]  
[!code-csharp[UIAWindowPattern_snip#103](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAWindowPattern_snip/CSharp/UIAWindowPattern_snippets.cs#103)]
[!code-vb[UIAWindowPattern_snip#103](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAWindowPattern_snip/VisualBasic/UIAWindowPattern_snippets.vb#103)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WindowVisualState">
      <MemberSignature Language="C#" Value="public System.Windows.Automation.WindowVisualState WindowVisualState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Automation.WindowVisualState WindowVisualState" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.WindowPattern.WindowPatternInformation.WindowVisualState" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property WindowVisualState As WindowVisualState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Automation::WindowVisualState WindowVisualState { System::Windows::Automation::WindowVisualState get(); };" />
      <MemberSignature Language="F#" Value="member this.WindowVisualState : System.Windows.Automation.WindowVisualState" Usage="System.Windows.Automation.WindowPattern.WindowPatternInformation.WindowVisualState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.WindowVisualState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft das <see cref="T:System.Windows.Automation.WindowVisualState" /> von <see cref="T:System.Windows.Automation.AutomationElement" /> ab.</summary>
        <value>Das <see cref="T:System.Windows.Automation.WindowVisualState" /> von <see cref="T:System.Windows.Automation.AutomationElement" />. Standardwert: <see cref="F:System.Windows.Automation.WindowVisualState.Normal" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Im folgenden Beispiel wird ein <xref:System.Windows.Automation.WindowPattern>-Steuerelement Muster aus einer <xref:System.Windows.Automation.AutomationElement> abgerufen und anschließend verwendet, um den visuellen Zustand der <xref:System.Windows.Automation.AutomationElement>anzugeben.  
  
 [!code-csharp[UIAWindowPattern_snip#101](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAWindowPattern_snip/CSharp/UIAWindowPattern_snippets.cs#101)]
 [!code-vb[UIAWindowPattern_snip#101](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAWindowPattern_snip/VisualBasic/UIAWindowPattern_snippets.vb#101)]  
[!code-csharp[UIAWindowPattern_snip#103](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAWindowPattern_snip/CSharp/UIAWindowPattern_snippets.cs#103)]
[!code-vb[UIAWindowPattern_snip#103](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAWindowPattern_snip/VisualBasic/UIAWindowPattern_snippets.vb#103)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
