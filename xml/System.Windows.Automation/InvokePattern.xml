<Type Name="InvokePattern" FullName="System.Windows.Automation.InvokePattern">
  <Metadata><Meta Name="ms.openlocfilehash" Value="8c5e0cf3a0f268f88ccdf71cd1b01ca3b3e02060" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70714225" /></Metadata><TypeSignature Language="C#" Value="public class InvokePattern : System.Windows.Automation.BasePattern" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit InvokePattern extends System.Windows.Automation.BasePattern" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Automation.InvokePattern" />
  <TypeSignature Language="VB.NET" Value="Public Class InvokePattern&#xA;Inherits BasePattern" />
  <TypeSignature Language="C++ CLI" Value="public ref class InvokePattern : System::Windows::Automation::BasePattern" />
  <TypeSignature Language="F#" Value="type InvokePattern = class&#xA;    inherit BasePattern" />
  <AssemblyInfo>
    <AssemblyName>UIAutomationClient</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Automation.BasePattern</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Stellt Steuerelemente dar, die eine einzelne eindeutige Aktion initiieren oder ausführen und den Zustand nach der Aktivierung nicht beibehalten.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Steuert die <xref:System.Windows.Automation.InvokePattern> Unterstützung, wenn das gleiche Verhalten nicht durch ein anderes Steuerelement Muster verfügbar gemacht wird. Wenn die <xref:System.Windows.Automation.InvokePattern.Invoke%2A> -Methode in einem-Steuerelement beispielsweise dieselbe Aktion wie die- <xref:System.Windows.Automation.ExpandCollapsePattern.Collapse%2A> oder die <xref:System.Windows.Automation.ExpandCollapsePattern.Expand%2A> -Methode ausführt, wird <xref:System.Windows.Automation.InvokePattern>vom-Steuerelement nicht unterstützt.  
  
 [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]Elemente, die Steuerelemente darstellen, wie z. b. Kontrollkästchen und Options Felder, die <xref:System.Windows.Automation.TogglePattern> einen <xref:System.Windows.Automation.SelectionItemPattern>Zustand beibehalten, unterstützen stattdessen oder.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Automation.Provider.IInvokeProvider" />
    <related type="Article" href="~/docs/framework/ui-automation/ui-automation-control-patterns-overview.md">Übersicht über Steuerelementmuster für Benutzeroberflächenautomatisierung</related>
    <related type="Article" href="~/docs/framework/ui-automation/ui-automation-control-patterns-for-clients.md">Steuerelementmuster für Benutzeroberflächenautomatisierung für Clients</related>
    <related type="Article" href="https://msdn.microsoft.com/library/5ee2de3f-256c-43ec-b64c-62ace91f9983">Aufrufen eines Steuerelements mithilfe von Benutzeroberflächenautomatisierung</related>
    <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms771636(v=vs.90)">Beispiel für das Menü Element "InvokePattern" und "expandredusepattern"</related>
  </Docs>
  <Members>
    <Member MemberName="Invoke">
      <MemberSignature Language="C#" Value="public void Invoke ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Invoke() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.InvokePattern.Invoke" />
      <MemberSignature Language="VB.NET" Value="Public Sub Invoke ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Invoke();" />
      <MemberSignature Language="F#" Value="member this.Invoke : unit -&gt; unit" Usage="invokePattern.Invoke " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Sendet eine Anforderung zum Aktivieren eines Steuerelements und Initiieren seiner einzelnen eindeutigen Aktion.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aufrufe von <xref:System.Windows.Automation.InvokePattern.Invoke%2A> sollten sofort ohne Blockierung zurückgegeben werden. Dieses Verhalten ist jedoch vollständig von der Implementierung [!INCLUDE[TLA#tla_uiautomation](~/includes/tlasharptla-uiautomation-md.md)] des Anbieters abhängig. In Szenarios, <xref:System.Windows.Automation.InvokePattern.Invoke%2A> in denen das Aufrufen eines Blockierungs Problems (z. b. eines modalen Dialog Felds) ein Problem verursacht, ist möglicherweise ein separater Hilfsthread erforderlich,  
  
   
  
## Examples  
 Im folgenden Beispiel wird ein <xref:System.Windows.Automation.InvokePattern> -Steuerelement Muster von einem-Steuerelement <xref:System.Windows.Automation.InvokePattern.Invoke%2A> abgerufen, und die-Methode wird aufgerufen.  
  
 [!code-csharp[UIAInvokePattern_snip#101](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAInvokePattern_snip/CSharp/UIAInvokePattern_snippets.cs#101)]
 [!code-vb[UIAInvokePattern_snip#101](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAInvokePattern_snip/VisualBasic/UIAInvokePattern_snippets.vb#101)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Das Element unterstützt das <see cref="T:System.Windows.Automation.InvokePattern" />-Steuerelementmuster nicht oder es ist ausgeblendet bzw. blockiert.</exception>
        <exception cref="T:System.Windows.Automation.ElementNotEnabledException">Das Element ist nicht aktiviert. Dies kann ausgelöst werden, wenn der Benutzeroberflächenautomatisierungs-Anbieter seine eigene Behandlung der <see cref="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.IsEnabled" />-Eigenschaft implementiert hat.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/5ee2de3f-256c-43ec-b64c-62ace91f9983">Aufrufen eines Steuerelements mithilfe von Benutzeroberflächenautomatisierung</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms771636(v=vs.90)">Beispiel für das Menü Element "InvokePattern" und "expandredusepattern"</related>
      </Docs>
    </Member>
    <Member MemberName="InvokedEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationEvent InvokedEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationEvent InvokedEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.InvokePattern.InvokedEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly InvokedEvent As AutomationEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationEvent ^ InvokedEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable InvokedEvent : System.Windows.Automation.AutomationEvent" Usage="System.Windows.Automation.InvokePattern.InvokedEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Bezeichnet das Ereignis, das beim Aufrufen oder Aktivieren eines Steuerelements ausgelöst wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieser Bezeichner wird von Benutzeroberflächenautomatisierungs-Client Anwendungen verwendet. Benutzeroberflächenautomatisierungs-Anbieter sollten das entsprechende <xref:System.Windows.Automation.InvokePatternIdentifiers>Feld in verwenden.  
  
 Der <xref:System.Windows.Automation.InvokePattern.InvokedEvent> Bezeichner wird als Parameter an <xref:System.Windows.Automation.Automation.AddAutomationEventHandler%2A>übergeben.  
  
   
  
## Examples  
 Im folgenden Beispiel identifiziert der Ereignishandler das Ereignis als aufgerufenes Ereignis, indem das <xref:System.Windows.Automation.AutomationEventArgs.EventId%2A> in den Ereignis Argumenten mit dem <xref:System.Windows.Automation.InvokePattern.InvokedEvent> Bezeichnerfeld verglichen wird.  
  
 [!code-csharp[UIAClient_snip#101](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#101)]
 [!code-vb[UIAClient_snip#101](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#101)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/5ee2de3f-256c-43ec-b64c-62ace91f9983">Aufrufen eines Steuerelements mithilfe von Benutzeroberflächenautomatisierung</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms771636(v=vs.90)">Beispiel für das Menü Element "InvokePattern" und "expandredusepattern"</related>
      </Docs>
    </Member>
    <Member MemberName="Pattern">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationPattern Pattern;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationPattern Pattern" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.InvokePattern.Pattern" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Pattern As AutomationPattern " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationPattern ^ Pattern;" />
      <MemberSignature Language="F#" Value=" staticval mutable Pattern : System.Windows.Automation.AutomationPattern" Usage="System.Windows.Automation.InvokePattern.Pattern" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationPattern</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Bezeichnet das <see cref="T:System.Windows.Automation.InvokePattern" />-Steuerelementmuster.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieser Bezeichner wird von Benutzeroberflächenautomatisierungs-Client Anwendungen verwendet. Benutzeroberflächenautomatisierungs-Anbieter sollten das entsprechende <xref:System.Windows.Automation.InvokePatternIdentifiers>Feld in verwenden.  
  
 Der Muster Bezeichner wird an Methoden wie z <xref:System.Windows.Automation.AutomationElement.GetCurrentPattern%2A> . b. zurückgegeben, um das gewünschte Steuer <xref:System.Windows.Automation.AutomationElement>Element Muster aus dem angegebenen abzurufen.  
  
   
  
## Examples  
 Im folgenden Beispiel wird ein <xref:System.Windows.Automation.InvokePattern> -Steuerelement Muster von einem-Steuerelement <xref:System.Windows.Automation.InvokePattern.Invoke%2A> abgerufen, und die-Methode wird aufgerufen.  
  
 [!code-csharp[UIAInvokePattern_snip#101](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAInvokePattern_snip/CSharp/UIAInvokePattern_snippets.cs#101)]
 [!code-vb[UIAInvokePattern_snip#101](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAInvokePattern_snip/VisualBasic/UIAInvokePattern_snippets.vb#101)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/5ee2de3f-256c-43ec-b64c-62ace91f9983">Aufrufen eines Steuerelements mithilfe von Benutzeroberflächenautomatisierung</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms771636(v=vs.90)">Beispiel für das Menü Element "InvokePattern" und "expandredusepattern"</related>
      </Docs>
    </Member>
  </Members>
</Type>
