<Type Name="StructureChangedEventArgs" FullName="System.Windows.Automation.StructureChangedEventArgs">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="3534d8ec28680c3794b4c755eb666493b2e9c5fc" />
    <Meta Name="ms.sourcegitcommit" Value="9dda17222b9f7d3edf130133bfb1370d5b410a4b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="09/22/2018" />
    <Meta Name="ms.locfileid" Value="46593907" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class StructureChangedEventArgs : System.Windows.Automation.AutomationEventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit StructureChangedEventArgs extends System.Windows.Automation.AutomationEventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Automation.StructureChangedEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class StructureChangedEventArgs&#xA;Inherits AutomationEventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class StructureChangedEventArgs sealed : System::Windows::Automation::AutomationEventArgs" />
  <TypeSignature Language="F#" Value="type StructureChangedEventArgs = class&#xA;    inherit AutomationEventArgs" />
  <AssemblyInfo>
    <AssemblyName>UIAutomationTypes</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Automation.AutomationEventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Enthält Informationen zu dem Ereignis, das bei einer Änderung der „UI Automation“-Struktur ausgelöst wird.</summary>
    <remarks>To be added.</remarks>
    <altmember cref="T:System.Windows.Automation.StructureChangedEventArgs" />
    <altmember cref="M:System.Windows.Automation.Automation.AddStructureChangedEventHandler(System.Windows.Automation.AutomationElement,System.Windows.Automation.TreeScope,System.Windows.Automation.StructureChangedEventHandler)" />
    <altmember cref="M:System.Windows.Automation.Automation.RemoveStructureChangedEventHandler(System.Windows.Automation.AutomationElement,System.Windows.Automation.StructureChangedEventHandler)" />
    <related type="Article" href="http://msdn.microsoft.com/library/b909e388-3f24-4997-b6d4-bd9c35c2dc27">Übersicht über Benutzeroberflächenautomatisierungs-Ereignisse</related>
    <related type="Article" href="http://msdn.microsoft.com/library/b688effa-b3e8-4b05-944d-05ed89a245aa">Abonnieren von Benutzeroberflächenautomatisierungs-Ereignissen</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StructureChangedEventArgs (System.Windows.Automation.StructureChangeType structureChangeType, int[] runtimeId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Windows.Automation.StructureChangeType structureChangeType, int32[] runtimeId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.StructureChangedEventArgs.#ctor(System.Windows.Automation.StructureChangeType,System.Int32[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StructureChangedEventArgs(System::Windows::Automation::StructureChangeType structureChangeType, cli::array &lt;int&gt; ^ runtimeId);" />
      <MemberSignature Language="F#" Value="new System.Windows.Automation.StructureChangedEventArgs : System.Windows.Automation.StructureChangeType * int[] -&gt; System.Windows.Automation.StructureChangedEventArgs" Usage="new System.Windows.Automation.StructureChangedEventArgs (structureChangeType, runtimeId)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationTypes</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="structureChangeType" Type="System.Windows.Automation.StructureChangeType" />
        <Parameter Name="runtimeId" Type="System.Int32[]" />
      </Parameters>
      <Docs>
        <param name="structureChangeType">Ein einzelner Wert, der den Typ der Änderung angibt.</param>
        <param name="runtimeId">Die Laufzeit-[!INCLUDE[TLA#tla_id](~/includes/tlasharptla-id-md.md)] des [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]-Elements, dessen Struktur geändert wurde.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="P:System.Windows.Automation.StructureChangedEventArgs.StructureChangeType" />-Klasse und gibt den Typ der Änderung sowie die [!INCLUDE[TLA#tla_id](~/includes/tlasharptla-id-md.md)] des Elements an, dessen Struktur geändert wurde.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die Werte, die in zurückgegeben werden können `structureChangeType` richten sich nach der Implementierung von Benutzeroberflächenautomatisierungs-Anbieter. Wenn z. Elemente werden hinzugefügt oder entfernt Sie aus einer [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)] Listenfeld, wenn der Anbieter nicht bestimmen die Anzahl der Elemente hinzugefügt oder entfernt ist, können sie angeben <xref:System.Windows.Automation.StructureChangeType.ChildrenInvalidated> und nicht <xref:System.Windows.Automation.StructureChangeType.ChildAdded> oder <xref:System.Windows.Automation.StructureChangeType.ChildRemoved>.  
  
 Die folgende Tabelle beschreibt die Informationen im Ereignisprotokoll durch Empfangen der <xref:System.Windows.Automation.StructureChangedEventHandler> für andere Struktur geändert wird.  
  
|`structureChangeType`|Ereignisquelle|`runtimeId`|  
|---------------------------|------------------|-----------------|  
|<xref:System.Windows.Automation.StructureChangeType.ChildAdded>|Das untergeordnete Element, das hinzugefügt wurde.|Das untergeordnete Element, das hinzugefügt wurde.|  
|<xref:System.Windows.Automation.StructureChangeType.ChildRemoved>|Das übergeordnete Element des untergeordneten Elements, das entfernt wurde.|Das untergeordnete Element, das entfernt wurde.|  
|<xref:System.Windows.Automation.StructureChangeType.ChildrenBulkAdded>|Das übergeordnete Element der untergeordneten Elemente, die hinzugefügt wurden.|Das übergeordnete Element der untergeordneten Elemente, die hinzugefügt wurden.|  
|<xref:System.Windows.Automation.StructureChangeType.ChildrenBulkRemoved>|Das übergeordnete Element der untergeordneten Elemente, die entfernt wurden.|Das übergeordnete Element der untergeordneten Elemente, die entfernt wurden.|  
|<xref:System.Windows.Automation.StructureChangeType.ChildrenInvalidated>|Das übergeordnete Element der untergeordneten Elemente, die ungültig gemacht wurden.|Das übergeordnete Element der untergeordneten Elemente, die ungültig gemacht wurden|  
  
 Benutzerdefinierte Steuerelemente möglicherweise nicht in der Lage, geben Sie keinen sinnvollen Wert in `runtimeId`. Weitere Informationen finden Sie unter <xref:System.Windows.Automation.Provider.AutomationInteropProvider.RaiseStructureChangedEvent%2A>.  
  
   
  
## Examples  
 Im folgende Beispiel wird gezeigt, wie zum Erstellen und Auslösen eines Ereignisses, wenn untergeordnete Elemente hinzugefügt werden, oder aus, ein benutzerdefiniertes Listenfeld entfernt.  
  
 [!code-csharp[FragmentProvider#101](~/samples/snippets/csharp/VS_Snippets_Wpf/FragmentProvider/CSharp/ListFragment.cs#101)]
 [!code-vb[FragmentProvider#101](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FragmentProvider/VisualBasic/ListFragment.vb#101)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Windows.Automation.AutomationElementIdentifiers.RuntimeIdProperty" />
      </Docs>
    </Member>
    <Member MemberName="GetRuntimeId">
      <MemberSignature Language="C#" Value="public int[] GetRuntimeId ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32[] GetRuntimeId() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.StructureChangedEventArgs.GetRuntimeId" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRuntimeId () As Integer()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;int&gt; ^ GetRuntimeId();" />
      <MemberSignature Language="F#" Value="member this.GetRuntimeId : unit -&gt; int[]" Usage="structureChangedEventArgs.GetRuntimeId " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationTypes</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ruft die Laufzeit-[!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] für [!INCLUDE[TLA#tla_id](~/includes/tlasharptla-id-md.md)] des [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]-Elements ab, dessen Struktur geändert wurde.</summary>
        <returns>Der Laufzeit-ID des [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]-Elements, dessen Struktur geändert wurde.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der zurückgegebene Wert möglicherweise der Bezeichner des untergeordneten Elements, das hinzugefügt oder entfernt wurde oder, im Fall von viele untergeordnete Elemente werden hinzugefügt, entfernt oder ungültig, die ID des übergeordneten Elements. Weitere Informationen finden Sie unter <xref:System.Windows.Automation.StructureChangedEventArgs.%23ctor%2A>.  
  
 Benutzerdefinierte Steuerelemente können keine gültigen Laufzeitbezeichner bereit.  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Windows.Automation.AutomationElementIdentifiers.RuntimeIdProperty" />
      </Docs>
    </Member>
    <Member MemberName="StructureChangeType">
      <MemberSignature Language="C#" Value="public System.Windows.Automation.StructureChangeType StructureChangeType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Automation.StructureChangeType StructureChangeType" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.StructureChangedEventArgs.StructureChangeType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property StructureChangeType As StructureChangeType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Automation::StructureChangeType StructureChangeType { System::Windows::Automation::StructureChangeType get(); };" />
      <MemberSignature Language="F#" Value="member this.StructureChangeType : System.Windows.Automation.StructureChangeType" Usage="System.Windows.Automation.StructureChangedEventArgs.StructureChangeType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationTypes</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.StructureChangeType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der den Typ der Änderung in der [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]-Struktur angibt.</summary>
        <value>Der Typ der erfolgten Änderung.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>