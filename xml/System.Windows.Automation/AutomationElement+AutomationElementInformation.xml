<Type Name="AutomationElement+AutomationElementInformation" FullName="System.Windows.Automation.AutomationElement+AutomationElementInformation">
  <Metadata><Meta Name="ms.openlocfilehash" Value="f1f8b6cb32c4a8a7d1504fedb63fc50a6c650e6c" /><Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="11/17/2018" /><Meta Name="ms.locfileid" Value="51872392" /></Metadata><TypeSignature Language="C#" Value="public struct AutomationElement.AutomationElementInformation" />
  <TypeSignature Language="ILAsm" Value=".class nested public sequential ansi sealed beforefieldinit AutomationElement/AutomationElementInformation extends System.ValueType" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Automation.AutomationElement.AutomationElementInformation" />
  <TypeSignature Language="VB.NET" Value="Public Structure AutomationElement.AutomationElementInformation" />
  <TypeSignature Language="C++ CLI" Value="public: value class AutomationElement::AutomationElementInformation" />
  <TypeSignature Language="F#" Value="type AutomationElement.AutomationElementInformation = struct" />
  <AssemblyInfo>
    <AssemblyName>UIAutomationClient</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Enthält die von der <see cref="P:System.Windows.Automation.AutomationElement.Cached" />-Eigenschaft oder der <see cref="P:System.Windows.Automation.AutomationElement.Current" />-Eigenschaft verwendeten Eigenschaftenaccessoren.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die Eigenschaften zugegriffen werden können, direkt aus <xref:System.Windows.Automation.AutomationElement.Cached%2A> und <xref:System.Windows.Automation.AutomationElement.Current%2A>; Sie müssen nicht zum Abrufen der <xref:System.Windows.Automation.AutomationElement.AutomationElementInformation> Struktur selbst.  
  
 Die Eigenschaften in dieser Struktur können auch mithilfe von abgerufen werden <xref:System.Windows.Automation.AutomationElement.GetCurrentPropertyValue%2A> und <xref:System.Windows.Automation.AutomationElement.GetCachedPropertyValue%2A>, mit der entsprechenden Bezeichner aus <xref:System.Windows.Automation.AutomationElement>. Z. B. die <xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.AcceleratorKey%2A?displayProperty=nameWithType> Eigenschaft wird durch identifiziert die <xref:System.Windows.Automation.AutomationElement.AcceleratorKeyProperty?displayProperty=nameWithType> Feld. Weitere Informationen zu den einzelnen Eigenschaften finden Sie auf den Referenzseiten für Bezeichner; der Link im Abschnitt "Hinweise" des jeweiligen Referenzthema angezeigt.  
  
   
  
## Examples  
 Das folgende Beispiel zeigt die <xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.Name%2A> Eigenschaft wird von dieser Struktur abgerufen.  
  
 [!code-csharp[UIAClient_snip#106](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#106)]
 [!code-vb[UIAClient_snip#106](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#106)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://msdn.microsoft.com/library/a6c31d7b-b33e-49b3-b5c1-31a345f9b7c8">Übersicht über die Benutzeroberflächenautomatisierungs-Eigenschaften</related>
    <related type="Article" href="https://msdn.microsoft.com/library/255905af-0b17-485c-93d4-8a2db2a6524b">Benutzeroberflächenautomatisierungs-Eigenschaften für Clients</related>
    <related type="Article" href="https://msdn.microsoft.com/library/09576b1a-291f-435c-980e-dee32d899ae1">Abrufen von Elementeigenschaften der Benutzeroberflächenautomatisierung</related>
  </Docs>
  <Members>
    <Member MemberName="AcceleratorKey">
      <MemberSignature Language="C#" Value="public string AcceleratorKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AcceleratorKey" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.AcceleratorKey" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AcceleratorKey As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ AcceleratorKey { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AcceleratorKey : string" Usage="System.Windows.Automation.AutomationElement.AutomationElementInformation.AcceleratorKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft eine Zeichenfolge ab, die die Tastenkombinationen für das Element enthält.</summary>
        <value>Die Abfolge von Tastenkombinationen, die eine dem Element zugeordnete Aktion aufrufen.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Tastenkombinationen aufrufen eine Aktion. Z. B. STRG + O wird häufig zum Aufrufen der **Datei öffnen** Dialogfeld. [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] Elemente, die Eigenschaftensatz immer implementiert die <xref:System.Windows.Automation.InvokePattern> Klasse.  
  
 Weitere Informationen finden Sie unter <xref:System.Windows.Automation.AutomationElement.AcceleratorKeyProperty>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AccessKey">
      <MemberSignature Language="C#" Value="public string AccessKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AccessKey" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.AccessKey" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AccessKey As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ AccessKey { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AccessKey : string" Usage="System.Windows.Automation.AutomationElement.AutomationElementInformation.AccessKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft eine Zeichenfolge ab, die das Tastenkombinationszeichen für das Element enthält.</summary>
        <value>Das Zeichen, das einem Element zum Aktivieren des Elements zugeordnet ist.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Eine Zugriffstaste ist ein Zeichen im Text der ein Menü, Menüelement oder Bezeichnung eines Steuerelements, z. B. eine Schaltfläche, die die angefügte Menüfunktion aktiviert wird. Z. B. der Buchstaben "O" wird häufig zum Aufrufen der **öffnen** Datei Standarddialogfeld aus einem **Datei** Menü.  [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] Elemente, die wichtige Access-Eigenschaft, legen Sie immer implementiert die <xref:System.Windows.Automation.InvokePattern> Klasse.  
  
 Weitere Informationen finden Sie unter <xref:System.Windows.Automation.AutomationElement.AccessKeyProperty>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AutomationId">
      <MemberSignature Language="C#" Value="public string AutomationId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AutomationId" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.AutomationId" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AutomationId As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ AutomationId { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AutomationId : string" Usage="System.Windows.Automation.AutomationElement.AutomationElementInformation.AutomationId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft eine Zeichenfolge ab, die die [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] [!INCLUDE[TLA#tla_id](~/includes/tlasharptla-id-md.md)] für das Element enthält.</summary>
        <value>Eine ID für ein Element, das unter nebengeordneten Elementen im Container eindeutig ist.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn sie verfügbar ist die <xref:System.Windows.Automation.AutomationElement.AutomationIdProperty> eines Elements muss immer in jeder Instanz der Anwendung unabhängig von der lokalen Sprache identisch sein. Der Wert sollte unter nebengeordneten Elementen eindeutig, jedoch nicht notwendigerweise eindeutig auf dem ganzen Desktop. Beispielsweise mehrere Instanzen einer Anwendung oder mehrere Ordneransichten im Microsoft Windows-Explorer enthält möglicherweise Elemente mit dem gleichen <xref:System.Windows.Automation.AutomationElement.AutomationIdProperty>, z. B. "SystemMenuBar".  
  
 Unterstützung der während einer <xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.AutomationId%2A> wird immer empfohlen für besseren testverhaltens, diese Eigenschaft ist nicht zwingend erforderlich. Wenn dies unterstützt wird, eine <xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.AutomationId%2A> eignet sich für die testautomatisierung erstellen Skripts, die unabhängig von der Sprache der Benutzeroberfläche ausgeführt werden. Clients sollten keine Annahmen bezüglich der <xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.AutomationId%2A>s, die von anderen Anwendungen verfügbar gemacht werden. Ein <xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.AutomationId%2A> ist nicht garantiert über verschiedene Versionen hinweg stabil, oder einer Anwendung erstellt.  
  
 Weitere Informationen finden Sie unter <xref:System.Windows.Automation.AutomationElement.AutomationIdProperty>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BoundingRectangle">
      <MemberSignature Language="C#" Value="public System.Windows.Rect BoundingRectangle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Rect BoundingRectangle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.BoundingRectangle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BoundingRectangle As Rect" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Rect BoundingRectangle { System::Windows::Rect get(); };" />
      <MemberSignature Language="F#" Value="member this.BoundingRectangle : System.Windows.Rect" Usage="System.Windows.Automation.AutomationElement.AutomationElementInformation.BoundingRectangle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Rect</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Koordinaten des Rechtecks ab, das das Element völlig einschließt.</summary>
        <value>Die Punktkoordinaten des einschließenden Rechteckes.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Das zurückgegebene Rechteck kann Punkte enthalten, die nicht durch Klicken aktivierbaren sind. Sind Instanzen, in denen dies kann passieren, wenn die [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] eine unregelmäßige Form oder durch Klicken aktivierbaren oder das Element verdeckt wird von anderen [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] Elemente.  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Windows.Automation.AutomationElement.BoundingRectangleProperty" />
      </Docs>
    </Member>
    <Member MemberName="ClassName">
      <MemberSignature Language="C#" Value="public string ClassName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ClassName" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.ClassName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ClassName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ClassName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ClassName : string" Usage="System.Windows.Automation.AutomationElement.AutomationElementInformation.ClassName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft eine Zeichenfolge ab, die den Klassennamen des Elements enthält, wie vom Steuerelemententwickler zugewiesen.</summary>
        <value>Der vom Steuerelemententwickler zugewiesene Klassenname.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der Wert dieser Eigenschaft ist implementierungsabhängig. Die Eigenschaft ist nützlich in testumgebungen.  
  
 Weitere Informationen finden Sie unter <xref:System.Windows.Automation.AutomationElement.ClassNameProperty>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ControlType">
      <MemberSignature Language="C#" Value="public System.Windows.Automation.ControlType ControlType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Automation.ControlType ControlType" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.ControlType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ControlType As ControlType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Automation::ControlType ^ ControlType { System::Windows::Automation::ControlType ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ControlType : System.Windows.Automation.ControlType" Usage="System.Windows.Automation.AutomationElement.AutomationElementInformation.ControlType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.ControlType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den <see cref="T:System.Windows.Automation.ControlType" /> des Elements ab.</summary>
        <value>Das Interaktionsmodell für dieses Element. Der Standardwert ist <see cref="F:System.Windows.Automation.ControlType.Custom" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Steuerelementtyp beschreibt ein bekanntes Interaktionsmodell für beliebige [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] Elemente ohne Rückgriff auf eine lokalisierte Steuerelementtyp oder eine Kombination der Regeln für komplexe Logik.  
  
 Der einzige Fall, in dem diese Eigenschaft zur Laufzeit ändern kann, für ein Steuerelement, das unterstützt wird <xref:System.Windows.Automation.MultipleViewPattern>. Ein Beispiel ist die [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)] ListView-Steuerelement, das aus ändern kann <xref:System.Windows.Automation.ControlType.DataGrid> zu <xref:System.Windows.Automation.ControlType.List>, abhängig von der aktuellen Ansicht.  
  
 Weitere Informationen finden Sie unter <xref:System.Windows.Automation.AutomationElement.ControlTypeProperty>.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/261dcc59-3a62-4e40-91dd-63ff9d2241c0">Steuerelementtypen der Benutzeroberflächenautomatisierung</related>
        <related type="Article" href="https://msdn.microsoft.com/library/75159ef8-bd43-4d13-acb7-1f1fe9253160">Übersicht über Steuerelementtypen für Benutzeroberflächenautomatisierung</related>
      </Docs>
    </Member>
    <Member MemberName="FrameworkId">
      <MemberSignature Language="C#" Value="public string FrameworkId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FrameworkId" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.FrameworkId" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FrameworkId As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ FrameworkId { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FrameworkId : string" Usage="System.Windows.Automation.AutomationElement.AutomationElementInformation.FrameworkId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Namen des zugrunde liegenden Benutzeroberflächen-Frameworks ab.</summary>
        <value>Der Name des Benutzeroberflächen-Frameworks, z. B. "Win32", "Winform" oder "DirectUI". Der Standardwert ist eine leere Zeichenfolge.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zurückgeben der Werte der Eigenschaft sind vom Typ <xref:System.String>. Der Standardwert ist eine leere Zeichenfolge.  
  
 Diese Eigenschaft ermöglicht es Anwendungen, die gesamte UI-Frameworks Sonderfälle gelten.  
  
 Weitere Informationen finden Sie unter <xref:System.Windows.Automation.AutomationElement.FrameworkIdProperty>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasKeyboardFocus">
      <MemberSignature Language="C#" Value="public bool HasKeyboardFocus { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasKeyboardFocus" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.HasKeyboardFocus" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasKeyboardFocus As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasKeyboardFocus { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasKeyboardFocus : bool" Usage="System.Windows.Automation.AutomationElement.AutomationElementInformation.HasKeyboardFocus" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob das Element über den Tastaturfokus verfügt.</summary>
        <value><see langword="true" />, wenn das Element über den Tastaturfokus verfügt, andernfalls <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn ein Element in einem Container, den Fokus besitzt, <xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.HasKeyboardFocus%2A> gilt auch für das das Containerelement darstellt.  
  
 Weitere Informationen finden Sie unter <xref:System.Windows.Automation.AutomationElement.HasKeyboardFocusProperty>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HelpText">
      <MemberSignature Language="C#" Value="public string HelpText { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string HelpText" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.HelpText" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HelpText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ HelpText { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.HelpText : string" Usage="System.Windows.Automation.AutomationElement.AutomationElementInformation.HelpText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den dem Element zugeordneten Hilfetext ab.</summary>
        <value>Der QuickInfo-Hilfetext für das Element.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Weitere Informationen finden Sie unter <xref:System.Windows.Automation.AutomationElement.HelpTextProperty>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsContentElement">
      <MemberSignature Language="C#" Value="public bool IsContentElement { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsContentElement" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.IsContentElement" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsContentElement As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsContentElement { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsContentElement : bool" Usage="System.Windows.Automation.AutomationElement.AutomationElementInformation.IsContentElement" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob es sich bei dem Element um ein Inhaltselement handelt.</summary>
        <value><see langword="true" />, wenn das Element ein Inhaltselement ist, andernfalls <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ein Inhaltselement enthält Daten, die dem Benutzer angezeigt werden. Beispiele für Inhaltselemente sind die Elemente in einem Listenfeld oder eine Schaltfläche in einem Dialogfeld. Nicht-Content-Elemente, die so genannte peripheren Elemente werden üblicherweise verwendet, um den Inhalt in einem zusammengesetzten Steuerelement zu bearbeiten. Beispielsweise ist die Schaltfläche in einem Dropdown-Steuerelement.  
  
 Weitere Informationen finden Sie unter <xref:System.Windows.Automation.AutomationElement.IsContentElementProperty>.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/03b98058-bdb3-47a0-8ff7-45e6cdf67166">Übersicht über die Benutzeroberflächenautomatisierungs-Struktur</related>
      </Docs>
    </Member>
    <Member MemberName="IsControlElement">
      <MemberSignature Language="C#" Value="public bool IsControlElement { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsControlElement" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.IsControlElement" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsControlElement As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsControlElement { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsControlElement : bool" Usage="System.Windows.Automation.AutomationElement.AutomationElementInformation.IsControlElement" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob das Element als Steuerelement angezeigt wird.</summary>
        <value><see langword="true" />, wenn das Element als Steuerelement angezeigt wird, andernfalls <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Weitere Informationen finden Sie unter <xref:System.Windows.Automation.AutomationElement.IsControlElementProperty>.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/03b98058-bdb3-47a0-8ff7-45e6cdf67166">Übersicht über die Benutzeroberflächenautomatisierungs-Struktur</related>
      </Docs>
    </Member>
    <Member MemberName="IsEnabled">
      <MemberSignature Language="C#" Value="public bool IsEnabled { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.IsEnabled" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsEnabled { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsEnabled : bool" Usage="System.Windows.Automation.AutomationElement.AutomationElementInformation.IsEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob das vom [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)]-Element referenzierte [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]-Element aktiviert ist.</summary>
        <value><see langword="true" />, wenn das Steuerelement aktiviert ist, andernfalls <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der Wert des der <xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.IsEnabled%2A> Eigenschaftenänderung kann aufgrund des [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] Interaktionen. Erhalten Sie einen aktualisierten Cache durch Aufrufen von <xref:System.Windows.Automation.AutomationElement.GetUpdatedCache%2A> Wenn der Wert des der <xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.IsEnabled%2A> Eigenschaft möglicherweise geändert haben, da Sie die cacheanforderung ausgegeben.  
  
 Weitere Informationen finden Sie unter <xref:System.Windows.Automation.AutomationElement.IsEnabledProperty>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsKeyboardFocusable">
      <MemberSignature Language="C#" Value="public bool IsKeyboardFocusable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsKeyboardFocusable" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.IsKeyboardFocusable" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsKeyboardFocusable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsKeyboardFocusable { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsKeyboardFocusable : bool" Usage="System.Windows.Automation.AutomationElement.AutomationElementInformation.IsKeyboardFocusable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob das [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]-Element den Tastaturfokus erhalten kann.</summary>
        <value><see langword="true" />, wenn das Steuerelement den Tastaturfokus erhalten kann, andernfalls <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Weitere Informationen finden Sie unter <xref:System.Windows.Automation.AutomationElement.IsKeyboardFocusableProperty>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsOffscreen">
      <MemberSignature Language="C#" Value="public bool IsOffscreen { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsOffscreen" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.IsOffscreen" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsOffscreen As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsOffscreen { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsOffscreen : bool" Usage="System.Windows.Automation.AutomationElement.AutomationElementInformation.IsOffscreen" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob das [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]-Element auf dem Bildschirm sichtbar ist.</summary>
        <value><see langword="true" />, wenn das Steuerelement nicht sichtbar ist, andernfalls <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ein boolescher Wert, der angibt, ob ein Element vollständig ein Bildlauf durchgeführt wird (z. B. ein Element in einem Listenfeld ist außerhalb des Viewports des Containerobjekts) oder (z. B. ein Element in einer Strukturansicht, Menü oder ein minimiertes Fenster) reduziert wird, nicht aus der Sicht.  
  
 Wenn das Element einen klickbaren Punkt, der es verfügt den Fokus erhält, werden verursachen können, gilt es auf dem Bildschirm auch sein, wenn ein Teil des Elements außerhalb des Bildschirms ist.  
  
 Der Wert der Eigenschaft ist nicht betroffen, durch Okklusion anderer Fenster oder gibt an, ob das Element auf einen bestimmten Monitor angezeigt wird.  
  
 Wenn IsOffscreen ist `true,` ein Element, das ein Bildlauf durchgeführt wird oder nicht aus der Sicht, reduziert aber ist immer noch Teil der Endbenutzer-Sicht der Benutzeroberfläche können wiederhergestellt werden in der Ansicht durch einfache Bearbeitung, wie z. B. Durchführen eines Bildlaufs oder durch Klicken auf eine Dropdown-Steuerelement.  
  
 Wenn das Element, die der Endbenutzer wird nicht auf allen oder verwiesen ist als "programmgesteuert ausgeblendet" (z. B. ein Dialogfeld, das verworfen wurde, aber, in denen die Unterstreichung-Objekt zwischengespeichert wird, von der Anwendung) sollte es von entfernt werden Festlegen des Werts der IsOffscreen auf, anstatt die Elementstruktur `true`.  
  
 Wenn der Wert ist `true` für einen Container, es ist auch `true` für die Website des Containerelements.  
  
 Weitere Informationen finden Sie unter <xref:System.Windows.Automation.AutomationElement.IsOffscreenProperty>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsPassword">
      <MemberSignature Language="C#" Value="public bool IsPassword { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsPassword" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.IsPassword" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsPassword As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsPassword { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsPassword : bool" Usage="System.Windows.Automation.AutomationElement.AutomationElementInformation.IsPassword" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob das [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]-Element geschützte Inhalte enthält.</summary>
        <value><see langword="true" />, wenn das Element geschützte Inhalte enthält, andernfalls <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Eigenschaft ermöglicht Anwendungen wie Sprachausgaben, um festzustellen, ob das Textinhalt eines Steuerelements laut vorgelesen werden soll.  
  
 Weitere Informationen finden Sie unter <xref:System.Windows.Automation.AutomationElement.IsPasswordProperty>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsRequiredForForm">
      <MemberSignature Language="C#" Value="public bool IsRequiredForForm { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsRequiredForForm" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.IsRequiredForForm" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsRequiredForForm As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsRequiredForForm { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsRequiredForForm : bool" Usage="System.Windows.Automation.AutomationElement.AutomationElementInformation.IsRequiredForForm" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob das [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]-Element in einem Formular ausgefüllt werden muss.</summary>
        <value><see langword="true" />, wenn das Element ausgefüllt werden muss, andernfalls <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Weitere Informationen finden Sie unter <xref:System.Windows.Automation.AutomationElement.IsRequiredForFormProperty>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemStatus">
      <MemberSignature Language="C#" Value="public string ItemStatus { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ItemStatus" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.ItemStatus" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ItemStatus As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ItemStatus { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ItemStatus : string" Usage="System.Windows.Automation.AutomationElement.AutomationElementInformation.ItemStatus" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft eine Beschreibung des Status eines Elements in einem Element ab.</summary>
        <value>Die Beschreibung des Status.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Eigenschaft ermöglicht einen Client, um festzustellen, ob ein Element den Status eines Elements vermittelt. Ein Element eines Kontakts in einer Messaginganwendung zugeordneten möglicherweise z. B. "Busy" oder "Verbunden".  
  
 Weitere Informationen finden Sie unter <xref:System.Windows.Automation.AutomationElement.ItemStatusProperty>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemType">
      <MemberSignature Language="C#" Value="public string ItemType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ItemType" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.ItemType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ItemType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ItemType { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ItemType : string" Usage="System.Windows.Automation.AutomationElement.AutomationElementInformation.ItemType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft eine Beschreibung des Typs eines Elements ab.</summary>
        <value>Eine lokalisierte Zeichenfolge, die das Element beschreibt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Eigenschaft wird verwendet, um Informationen zu den Elementen in einer Liste, eine Strukturansicht oder ein Datenraster zu erhalten. Ein Element in einer Datei Verzeichnisansicht möglicherweise z. B. eine Datei"Dokument" oder ein "Ordner".  
  
 Weitere Informationen finden Sie unter <xref:System.Windows.Automation.AutomationElement.ItemTypeProperty>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LabeledBy">
      <MemberSignature Language="C#" Value="public System.Windows.Automation.AutomationElement LabeledBy { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Automation.AutomationElement LabeledBy" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.LabeledBy" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LabeledBy As AutomationElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Automation::AutomationElement ^ LabeledBy { System::Windows::Automation::AutomationElement ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.LabeledBy : System.Windows.Automation.AutomationElement" Usage="System.Windows.Automation.AutomationElement.AutomationElementInformation.LabeledBy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft das Element ab, das die Textbezeichnung für dieses Element enthält.</summary>
        <value>Das Element, das die Bezeichnung für dieses Element ist.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Eigenschaft kann verwendet werden, z. B. das Abrufen der statische textbezeichnung für ein Kombinationsfeld.  
  
 Weitere Informationen finden Sie unter <xref:System.Windows.Automation.AutomationElement.LabeledByProperty>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LocalizedControlType">
      <MemberSignature Language="C#" Value="public string LocalizedControlType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string LocalizedControlType" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.LocalizedControlType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LocalizedControlType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ LocalizedControlType { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.LocalizedControlType : string" Usage="System.Windows.Automation.AutomationElement.AutomationElementInformation.LocalizedControlType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft eine Beschreibung des Steuerelements ab.</summary>
        <value>Eine lokalisierte Beschreibung des Steuerelementtyps, z. B. „button“.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Weitere Informationen finden Sie unter <xref:System.Windows.Automation.AutomationElement.LocalizedControlTypeProperty>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="System.Windows.Automation.AutomationElement.AutomationElementInformation.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Namen des Elements ab.</summary>
        <value>Der Name des [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)]-Elements.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der Name eines Elements verwendet werden kann, finden Sie das Element in der [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] Elementstruktur, wenn die <xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.AutomationId%2A> Eigenschaft wird für das Element nicht unterstützt.  
  
 Weitere Informationen finden Sie unter <xref:System.Windows.Automation.AutomationElement.NameProperty>.  
  
   
  
## Examples  
 Das folgende Beispiel zeigt die <xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.Name%2A> Eigenschaft wird abgerufen.  
  
 [!code-csharp[UIAClient_snip#106](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#106)]
 [!code-vb[UIAClient_snip#106](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#106)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NativeWindowHandle">
      <MemberSignature Language="C#" Value="public int NativeWindowHandle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 NativeWindowHandle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.NativeWindowHandle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NativeWindowHandle As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int NativeWindowHandle { int get(); };" />
      <MemberSignature Language="F#" Value="member this.NativeWindowHandle : int" Usage="System.Windows.Automation.AutomationElement.AutomationElementInformation.NativeWindowHandle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft das Handle des Fensters des Elements ab.</summary>
        <value>Das Handle des Fensters, falls vorhanden, andernfalls 0.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Weitere Informationen finden Sie unter <xref:System.Windows.Automation.AutomationElement.NativeWindowHandleProperty>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Orientation">
      <MemberSignature Language="C#" Value="public System.Windows.Automation.OrientationType Orientation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Automation.OrientationType Orientation" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.Orientation" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Orientation As OrientationType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Automation::OrientationType Orientation { System::Windows::Automation::OrientationType get(); };" />
      <MemberSignature Language="F#" Value="member this.Orientation : System.Windows.Automation.OrientationType" Usage="System.Windows.Automation.AutomationElement.AutomationElementInformation.Orientation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.OrientationType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Ausrichtung des Steuerelements ab.</summary>
        <value>Die Ausrichtung.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Eigenschaft wird unterstützt, von Steuerelementen wie Bildlaufleisten und Schieberegler an, die entweder eine vertikale oder horizontale Ausrichtung aufweisen können.  
  
 Weitere Informationen finden Sie unter <xref:System.Windows.Automation.AutomationElement.OrientationProperty>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProcessId">
      <MemberSignature Language="C#" Value="public int ProcessId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ProcessId" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.ProcessId" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ProcessId As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ProcessId { int get(); };" />
      <MemberSignature Language="F#" Value="member this.ProcessId : int" Usage="System.Windows.Automation.AutomationElement.AutomationElementInformation.ProcessId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Prozess-[!INCLUDE[TLA#tla_id](~/includes/tlasharptla-id-md.md)] dieses Elements ab.</summary>
        <value>Die ID des Prozesses, der das Element hostet. Der Standardwert für die Eigenschaft ist 0.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der Prozess [!INCLUDE[TLA#tla_id](~/includes/tlasharptla-id-md.md)] vom Betriebssystem zugewiesen wird. Sie finden Sie in der **PID** Spalte die **Prozesse** Registerkarte im Task-Manager.  
  
 Weitere Informationen finden Sie unter <xref:System.Windows.Automation.AutomationElement.ProcessIdProperty>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>