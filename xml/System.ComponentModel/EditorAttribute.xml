<Type Name="EditorAttribute" FullName="System.ComponentModel.EditorAttribute">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="495aede3622b9f43cf3fd2d0c3ad3202723ac3b8" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30378184" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class EditorAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit EditorAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.EditorAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class EditorAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class EditorAttribute sealed : Attribute" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.All, AllowMultiple=true, Inherited=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Gibt den Editor an, der zum Ändern einer Eigenschaft verwendet wird. Diese Klasse kann nicht vererbt werden.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn Sie die Eigenschaft zu bearbeiten, sollten in ein visuellen Designer eine neue Instanz des angegebenen Editors über ein Dialogfeld oder im Dropdownfenster erstellen.  
  
 Verwenden der <xref:System.ComponentModel.EditorAttribute.EditorBaseTypeName%2A> Eigenschaft, um diesen Editor-Basistyp zu suchen. Der einzige verfügbare Basistyp ist <xref:System.Drawing.Design.UITypeEditor>.  
  
 Verwenden der <xref:System.ComponentModel.EditorAttribute.EditorTypeName%2A> Eigenschaft, um den Namen des Typs des Editors für dieses Attribut zugeordnet ist.  
  
 Allgemeine Informationen zur Verwendung von Attributen. finden Sie unter [Attribute](~/docs/standard/attributes/index.md). Weitere Informationen zur Entwurfszeit Attribute, finden Sie unter [Attribute und Entwurfszeitunterstützung](http://msdn.microsoft.com/library/7aed9eb4-124b-4a15-a0a3-458f37ac9ef7).  
  
   
  
## Examples  
 Das folgende Codebeispiel erstellt die `MyImage` Klasse. Die Klasse wird mit markiert ein <xref:System.ComponentModel.EditorAttribute> , die angibt, die <xref:System.Drawing.Design.ImageEditor> als Editor.  
  
 [!code-cpp[Classic EditorAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic EditorAttribute Example/CPP/source.cpp#1)]
 [!code-csharp[Classic EditorAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic EditorAttribute Example/CS/source.cs#1)]
 [!code-vb[Classic EditorAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic EditorAttribute Example/VB/source.vb#1)]  
  
 Das folgende Codebeispiel erstellt eine Instanz von der `MyImage` -Klasse, ruft die Attribute für die Klasse ab und gibt dann den Namen des Editors verwendeten `myNewImage`.  
  
 [!code-cpp[Classic EditorAttribute Example#2](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic EditorAttribute Example/CPP/source.cpp#2)]
 [!code-csharp[Classic EditorAttribute Example#2](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic EditorAttribute Example/CS/source.cs#2)]
 [!code-vb[Classic EditorAttribute Example#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic EditorAttribute Example/VB/source.vb#2)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.EditorAttribute" />-Klasse.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EditorAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.EditorAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EditorAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.EditorAttribute" />-Klasse mit dem Standard-Editor, d. h. ohne Editor.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EditorAttribute (string typeName, string baseTypeName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string typeName, string baseTypeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.EditorAttribute.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (typeName As String, baseTypeName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EditorAttribute(System::String ^ typeName, System::String ^ baseTypeName);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="typeName" Type="System.String" />
        <Parameter Name="baseTypeName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="typeName">Der voll gekennzeichnete Typname des Editors.</param>
        <param name="baseTypeName">Der voll gekennzeichnete Typname der Basisklasse oder Schnittstelle, die als Suchschlüssel für den Editor verwendet werden soll. Diese Klasse muss <see cref="T:System.Drawing.Design.UITypeEditor" /> sein oder davon abgeleitet sein.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.EditorAttribute" />-Klasse mit dem Typnamen und dem Basistypnamen des Editors.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die `typeName` Parameter muss der <xref:System.Type.AssemblyQualifiedName%2A?displayProperty=nameWithType> Format.  
  
 Die <xref:System.Type> dargestellt durch die `typeName` Parameter muss entweder abgeleitet werden oder die Basisklasse zu implementieren.  
  
 Die <xref:System.Type> dargestellt durch die `baseTypeName` Parameter wird als Schlüssel zum Suchen eines bestimmten Editors verwendet, da für ein Datentyp mehr als einer der Redakteure zugeordnet werden kann. Dies kann jede Klasse sein, jedoch ist in der Regel <xref:System.Drawing.Design.UITypeEditor> oder <xref:System.ComponentModel.ComponentEditor>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EditorAttribute (string typeName, Type baseType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string typeName, class System.Type baseType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.EditorAttribute.#ctor(System.String,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (typeName As String, baseType As Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EditorAttribute(System::String ^ typeName, Type ^ baseType);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="typeName" Type="System.String" />
        <Parameter Name="baseType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="typeName">Der voll gekennzeichnete Typname des Editors.</param>
        <param name="baseType">Der <see cref="T:System.Type" /> der Basisklasse oder Schnittstelle, die als Suchschlüssel für den Editor verwendet werden soll. Diese Klasse muss <see cref="T:System.Drawing.Design.UITypeEditor" /> sein oder davon abgeleitet sein.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.EditorAttribute" />-Klasse mit dem Typnamen und dem Basistyp.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die `typeName` Parameter muss der <xref:System.Type.AssemblyQualifiedName%2A?displayProperty=nameWithType> Format.  
  
 Die <xref:System.Type> dargestellt durch die `typeName` muss entweder abgeleitet werden oder die Basisklasse zu implementieren.  
  
 Die `baseType` Parameter wird als Schlüssel zum Suchen eines bestimmten Editors verwendet, da für ein Datentyp mehr als einer der Redakteure zugeordnet werden kann.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EditorAttribute (Type type, Type baseType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type type, class System.Type baseType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.EditorAttribute.#ctor(System.Type,System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EditorAttribute(Type ^ type, Type ^ baseType);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="baseType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">Ein <see cref="T:System.Type" />, der den Typ des Editors darstellt.</param>
        <param name="baseType">Der <see cref="T:System.Type" /> der Basisklasse oder Schnittstelle, die als Suchschlüssel für den Editor verwendet werden soll. Diese Klasse muss <see cref="T:System.Drawing.Design.UITypeEditor" /> sein oder davon abgeleitet sein.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.EditorAttribute" />-Klasse mit dem Typ und dem Basistyp.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Type> dargestellt durch die `type` Parameter muss entweder abgeleitet werden oder die Basisklasse zu implementieren.  
  
 Die `baseType` Parameter wird als Schlüssel zum Suchen eines bestimmten Editors verwendet, da für ein Datentyp mehr als einer der Redakteure zugeordnet werden kann.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EditorBaseTypeName">
      <MemberSignature Language="C#" Value="public string EditorBaseTypeName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string EditorBaseTypeName" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.EditorAttribute.EditorBaseTypeName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EditorBaseTypeName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ EditorBaseTypeName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Namen der Basisklasse oder Schnittstelle ab, die als Suchschlüssel für diesen Editor verwendet wird.</summary>
        <value>Der Name der Basisklasse oder Schnittstelle, die als Suchschlüssel für diesen Editor verwendet wird.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.ComponentModel.EditorAttribute.EditorBaseTypeName%2A> Eigenschaft ist für eine Assembly qualifizierten Typnamen. Die [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] bietet sowohl <xref:System.Drawing.Design.UITypeEditor> und <xref:System.ComponentModel.ComponentEditor> als gültige Basisklassen, aber einen beliebigen Wert sind hier gültig.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EditorTypeName">
      <MemberSignature Language="C#" Value="public string EditorTypeName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string EditorTypeName" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.EditorAttribute.EditorTypeName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EditorTypeName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ EditorTypeName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Namen der Editor-Klasse im <see cref="P:System.Type.AssemblyQualifiedName" />-Format ab.</summary>
        <value>Der Name der Editor-Klasse im <see cref="P:System.Type.AssemblyQualifiedName" />-Format.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.EditorAttribute.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">Das Objekt, dessen Wert auf Gleichheit geprüft werden soll.</param>
        <summary>Gibt zurück, ob der Wert des angegebenen Objekts gleich dem aktuellen <see cref="T:System.ComponentModel.EditorAttribute" /> ist.</summary>
        <returns>
          <see langword="true" />, wenn der Wert des angegebenen Objekts dem des aktuellen Objekts entspricht, andernfalls <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.EditorAttribute.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt den Hashcode für diese Instanz zurück.</summary>
        <returns>Ein 32-Bit-Hashcode als ganze Zahl mit Vorzeichen.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Attribute.GetHashCode" />
      </Docs>
    </Member>
    <Member MemberName="TypeId">
      <MemberSignature Language="C#" Value="public override object TypeId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object TypeId" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.EditorAttribute.TypeId" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property TypeId As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ TypeId { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft eine eindeutige ID für diesen Attributtyp ab.</summary>
        <value>Eine eindeutige ID für diesen Attributtyp.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.ComponentModel.EditorAttribute.TypeId%2A> Eigenschaft wird durch das Filtern von Algorithmen verwendet, um zwei Attribute zu identifizieren, die den gleichen Typ sind. Für die meisten Attribute gibt dies nur die <xref:System.Type> Instanz für das Attribut. <xref:System.ComponentModel.EditorAttribute> überschreibt diese Option, um den Typ des Editorbasistyps enthalten.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>