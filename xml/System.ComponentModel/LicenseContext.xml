<Type Name="LicenseContext" FullName="System.ComponentModel.LicenseContext">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="36358bae547ee049c63bead31ed1399ed286caf5" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37692084" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class LicenseContext : IServiceProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit LicenseContext extends System.Object implements class System.IServiceProvider" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.LicenseContext" />
  <TypeSignature Language="VB.NET" Value="Public Class LicenseContext&#xA;Implements IServiceProvider" />
  <TypeSignature Language="C++ CLI" Value="public ref class LicenseContext : IServiceProvider" />
  <TypeSignature Language="F#" Value="type LicenseContext = class&#xA;    interface IServiceProvider" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IServiceProvider</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="bf17d-101">Gibt an, wann ein lizenziertes Objekt verwendet werden kann, und bietet eine Möglichkeit, zusätzliche Dienste für die Unterstützung der Lizenzen zu erhalten, die in der entsprechenden Domäne ausgeführt werden.</span>
      <span class="sxs-lookup">
        <span data-stu-id="bf17d-101">Specifies when you can use a licensed object and provides a way of obtaining additional services needed to support licenses running within its domain.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bf17d-102">Diese Klasse stellt den Standardwert <xref:System.ComponentModel.LicenseContext>.</span><span class="sxs-lookup"><span data-stu-id="bf17d-102">This class provides the default <xref:System.ComponentModel.LicenseContext>.</span></span> <span data-ttu-id="bf17d-103">Es implementiert die Unterstützung für nur zur Laufzeit und Lizenzschlüssel nicht unterstützt, die gespeichert werden.</span><span class="sxs-lookup"><span data-stu-id="bf17d-103">It implements only run-time support and does not support saved license keys.</span></span>  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <span data-ttu-id="bf17d-104">
        <para>Wenn Sie Unterstützung für Entwurfslizenz implementieren möchten, müssen Sie von dieser Klasse erben und die folgenden Member überschreiben: <see cref="P:System.ComponentModel.LicenseContext.UsageMode" />, <see cref="M:System.ComponentModel.LicenseContext.GetSavedLicenseKey(System.Type,System.Reflection.Assembly)" />, <see cref="M:System.ComponentModel.LicenseContext.GetService(System.Type)" />, und <see cref="M:System.ComponentModel.LicenseContext.SetSavedLicenseKey(System.Type,System.String)" />. Wenn Sie gespeicherte Lizenzschlüssel implementieren möchten, überschreiben die <see cref="M:System.ComponentModel.LicenseContext.GetSavedLicenseKey(System.Type,System.Reflection.Assembly)" /> und <see cref="M:System.ComponentModel.LicenseContext.SetSavedLicenseKey(System.Type,System.String)" /> Methoden.  Weitere Informationen zur Lizenzierung finden Sie unter [Gewusst: Lizenz-Komponenten und Steuerelementen] (http://msdn.microsoft.com/library/8e66c1ed-a445-4b26-8185-990b6e2bbd57).</para>
      </span>
      <span class="sxs-lookup">
        <span data-stu-id="bf17d-104">
          <para>If you want to implement design-time license support, you must inherit from this class, and override the following members: <see cref="P:System.ComponentModel.LicenseContext.UsageMode" />, <see cref="M:System.ComponentModel.LicenseContext.GetSavedLicenseKey(System.Type,System.Reflection.Assembly)" />, <see cref="M:System.ComponentModel.LicenseContext.GetService(System.Type)" />, and <see cref="M:System.ComponentModel.LicenseContext.SetSavedLicenseKey(System.Type,System.String)" />. If you want to implement saved license keys, override the <see cref="M:System.ComponentModel.LicenseContext.GetSavedLicenseKey(System.Type,System.Reflection.Assembly)" /> and <see cref="M:System.ComponentModel.LicenseContext.SetSavedLicenseKey(System.Type,System.String)" /> methods.  For more information about licensing, see [How to: License Components and Controls](http://msdn.microsoft.com/library/8e66c1ed-a445-4b26-8185-990b6e2bbd57).</para>
        </span>
      </span>
    </block>
    <altmember cref="T:System.ComponentModel.License" />
    <altmember cref="T:System.ComponentModel.LicenseException" />
    <altmember cref="T:System.ComponentModel.LicenseManager" />
    <altmember cref="T:System.ComponentModel.LicenseProvider" />
    <altmember cref="T:System.ComponentModel.LicenseProviderAttribute" />
    <altmember cref="T:System.ComponentModel.LicFileLicenseProvider" />
    <altmember cref="T:System.ComponentModel.LicenseUsageMode" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LicenseContext ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.LicenseContext.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LicenseContext();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="bf17d-105">Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.LicenseContext" />-Klasse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf17d-105">Initializes a new instance of the <see cref="T:System.ComponentModel.LicenseContext" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSavedLicenseKey">
      <MemberSignature Language="C#" Value="public virtual string GetSavedLicenseKey (Type type, System.Reflection.Assembly resourceAssembly);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetSavedLicenseKey(class System.Type type, class System.Reflection.Assembly resourceAssembly) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.LicenseContext.GetSavedLicenseKey(System.Type,System.Reflection.Assembly)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetSavedLicenseKey(Type ^ type, System::Reflection::Assembly ^ resourceAssembly);" />
      <MemberSignature Language="F#" Value="abstract member GetSavedLicenseKey : Type * System.Reflection.Assembly -&gt; string&#xA;override this.GetSavedLicenseKey : Type * System.Reflection.Assembly -&gt; string" Usage="licenseContext.GetSavedLicenseKey (type, resourceAssembly)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="resourceAssembly" Type="System.Reflection.Assembly" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="bf17d-106">Ein <see cref="T:System.Type" />, der den Typ der Komponente darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf17d-106">A <see cref="T:System.Type" /> that represents the type of component.</span>
          </span>
        </param>
        <param name="resourceAssembly">
          <span data-ttu-id="bf17d-107">Eine <see cref="T:System.Reflection.Assembly" /> mit dem Lizenzschlüssel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf17d-107">An <see cref="T:System.Reflection.Assembly" /> with the license key.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bf17d-108">Gibt beim Überschreiben in einer abgeleiteten Klasse einen gespeicherten Lizenzschlüssel für den angegebenen Typ aus der angegebenen Ressourcenassembly zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf17d-108">When overridden in a derived class, returns a saved license key for the specified type, from the specified resource assembly.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bf17d-109">Der <see cref="P:System.ComponentModel.License.LicenseKey" /> für den angegebenen Typ.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf17d-109">The <see cref="P:System.ComponentModel.License.LicenseKey" /> for the specified type.</span>
          </span>
          <span data-ttu-id="bf17d-110">Diese Methode gibt <see langword="null" /> zurück, sofern sie nicht überschrieben wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf17d-110">This method returns <see langword="null" /> unless you override it.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="bf17d-111">
            <para>Diese Methode überschreiben und die <see cref="M:System.ComponentModel.LicenseContext.SetSavedLicenseKey(System.Type,System.String)" /> Methode, um einen gespeicherten Lizenzschlüssel zu implementieren. Wenn die <paramref name="resourceAssembly" /> Parameter <see langword="null" />, und klicken Sie dann Sie die Ressourcen der primären ausgeführten abrufen können <see cref="T:System.Reflection.Assembly" />.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="bf17d-111">
              <para>Override this method and the <see cref="M:System.ComponentModel.LicenseContext.SetSavedLicenseKey(System.Type,System.String)" /> method to implement a saved license key. If the <paramref name="resourceAssembly" /> parameter is <see langword="null" />, then you can retrieve the resource from the primary executing <see cref="T:System.Reflection.Assembly" />.</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.ComponentModel.License" />
        <altmember cref="T:System.ComponentModel.LicenseContext" />
        <altmember cref="T:System.ComponentModel.LicenseException" />
        <altmember cref="T:System.ComponentModel.LicenseManager" />
        <altmember cref="T:System.ComponentModel.LicenseProvider" />
        <altmember cref="T:System.ComponentModel.LicenseProviderAttribute" />
        <altmember cref="T:System.ComponentModel.LicFileLicenseProvider" />
        <altmember cref="T:System.ComponentModel.LicenseUsageMode" />
      </Docs>
    </Member>
    <Member MemberName="GetService">
      <MemberSignature Language="C#" Value="public virtual object GetService (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetService(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.LicenseContext.GetService(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ GetService(Type ^ type);" />
      <MemberSignature Language="F#" Value="abstract member GetService : Type -&gt; obj&#xA;override this.GetService : Type -&gt; obj" Usage="licenseContext.GetService type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="bf17d-112">Der Typ des abzurufenden Diensts.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf17d-112">The type of service to retrieve.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bf17d-113">Ruft den angeforderten Dienst ab, wenn dieser verfügbar ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf17d-113">Gets the requested service, if it is available.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bf17d-114">Eine Instanz des Dienstes oder <see langword="null" />, wenn der Dienst nicht gefunden werden kann.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf17d-114">An instance of the service, or <see langword="null" /> if the service cannot be found.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetSavedLicenseKey">
      <MemberSignature Language="C#" Value="public virtual void SetSavedLicenseKey (Type type, string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetSavedLicenseKey(class System.Type type, string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.LicenseContext.SetSavedLicenseKey(System.Type,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetSavedLicenseKey(Type ^ type, System::String ^ key);" />
      <MemberSignature Language="F#" Value="abstract member SetSavedLicenseKey : Type * string -&gt; unit&#xA;override this.SetSavedLicenseKey : Type * string -&gt; unit" Usage="licenseContext.SetSavedLicenseKey (type, key)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="bf17d-115">Ein <see cref="T:System.Type" />, der die Komponente darstellt, die dem Lizenzschlüssel zugeordnet ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf17d-115">A <see cref="T:System.Type" /> that represents the component associated with the license key.</span>
          </span>
        </param>
        <param name="key">
          <span data-ttu-id="bf17d-116">Der <see cref="P:System.ComponentModel.License.LicenseKey" />, der für den Komponententyp gespeichert werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf17d-116">The <see cref="P:System.ComponentModel.License.LicenseKey" /> to save for the type of component.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bf17d-117">Legt beim Überschreiben in einer abgeleiteten Klasse einen Lizenzschlüssel für den angegebenen Typ fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf17d-117">When overridden in a derived class, sets a license key for the specified type.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bf17d-118">Rufen Sie diese Methode in der Regel, wenn Sie festlegen, <xref:System.ComponentModel.LicenseUsageMode> zur Entwurfszeit.</span><span class="sxs-lookup"><span data-stu-id="bf17d-118">Typically, call this method when you set <xref:System.ComponentModel.LicenseUsageMode> at design time.</span></span> <span data-ttu-id="bf17d-119">Müssen Sie überschreiben die <xref:System.ComponentModel.LicenseContext.UsageMode%2A> Eigenschaft, um die Unterstützung von Entwurfszeit-Lizenz zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="bf17d-119">You must override the <xref:System.ComponentModel.LicenseContext.UsageMode%2A> property to implement design-time license support.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="bf17d-120">
            <para>Diese Methode bietet keine Unterstützung für einen gespeicherten Lizenzschlüssel. Diese Methode überschreiben und die <see cref="M:System.ComponentModel.LicenseContext.GetSavedLicenseKey(System.Type,System.Reflection.Assembly)" /> Methode zum Implementieren eines Schlüssels.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="bf17d-120">
              <para>This method does not provide support for a saved license key. Override this method and the <see cref="M:System.ComponentModel.LicenseContext.GetSavedLicenseKey(System.Type,System.Reflection.Assembly)" /> method to implement a key.</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.ComponentModel.License" />
        <altmember cref="T:System.ComponentModel.LicenseContext" />
        <altmember cref="T:System.ComponentModel.LicenseException" />
        <altmember cref="T:System.ComponentModel.LicenseManager" />
        <altmember cref="T:System.ComponentModel.LicenseProvider" />
        <altmember cref="T:System.ComponentModel.LicenseProviderAttribute" />
        <altmember cref="T:System.ComponentModel.LicFileLicenseProvider" />
        <altmember cref="T:System.ComponentModel.LicenseUsageMode" />
      </Docs>
    </Member>
    <Member MemberName="UsageMode">
      <MemberSignature Language="C#" Value="public virtual System.ComponentModel.LicenseUsageMode UsageMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ComponentModel.LicenseUsageMode UsageMode" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.LicenseContext.UsageMode" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property UsageMode As LicenseUsageMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::ComponentModel::LicenseUsageMode UsageMode { System::ComponentModel::LicenseUsageMode get(); };" />
      <MemberSignature Language="F#" Value="member this.UsageMode : System.ComponentModel.LicenseUsageMode" Usage="System.ComponentModel.LicenseContext.UsageMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.LicenseUsageMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bf17d-121">Ruft beim Überschreiben in einer abgeleiteten Klasse einen Wert ab, der angibt, wann eine Lizenz verwendet werden kann.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf17d-121">When overridden in a derived class, gets a value that specifies when you can use a license.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="bf17d-122">Einer der <see cref="T:System.ComponentModel.LicenseUsageMode" />-Werte, der angibt, wann eine Lizenz verwendet werden kann.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf17d-122">One of the <see cref="T:System.ComponentModel.LicenseUsageMode" /> values that specifies when you can use a license.</span>
          </span>
          <span data-ttu-id="bf17d-123">Der Standardwert ist <see cref="F:System.ComponentModel.LicenseUsageMode.Runtime" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf17d-123">The default is <see cref="F:System.ComponentModel.LicenseUsageMode.Runtime" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="bf17d-124">
            <para>Um Unterstützung während der Entwurfszeit zu implementieren, überschreiben Sie diese Eigenschaft in einer Klasse, die erbt.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="bf17d-124">
              <para>To implement design-time support, override this property in a class that inherits.</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.ComponentModel.License" />
        <altmember cref="T:System.ComponentModel.LicenseContext" />
        <altmember cref="T:System.ComponentModel.LicenseException" />
        <altmember cref="T:System.ComponentModel.LicenseManager" />
        <altmember cref="T:System.ComponentModel.LicenseProvider" />
        <altmember cref="T:System.ComponentModel.LicenseProviderAttribute" />
        <altmember cref="T:System.ComponentModel.LicFileLicenseProvider" />
        <altmember cref="T:System.ComponentModel.LicenseUsageMode" />
      </Docs>
    </Member>
  </Members>
</Type>