<Type Name="ICancelAddNew" FullName="System.ComponentModel.ICancelAddNew">
  <Metadata><Meta Name="ms.openlocfilehash" Value="a5f1e588ff5d31f6e6ab7b3ff061a08b2212ab2c" /><Meta Name="ms.sourcegitcommit" Value="a3e01ec36374fac54a55add0dcc1e754e394abeb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="03/30/2019" /><Meta Name="ms.locfileid" Value="58724783" /></Metadata><TypeSignature Language="C#" Value="public interface ICancelAddNew" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ICancelAddNew" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.ICancelAddNew" />
  <TypeSignature Language="VB.NET" Value="Public Interface ICancelAddNew" />
  <TypeSignature Language="C++ CLI" Value="public interface class ICancelAddNew" />
  <TypeSignature Language="F#" Value="type ICancelAddNew = interface" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="a593a-101">Fügt beim Erweitern einer Auflistung um ein neues Element Transaktionsfähigkeit hinzu.</span><span class="sxs-lookup"><span data-stu-id="a593a-101">Adds transactional capability when adding a new item to a collection.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a593a-102">Die <xref:System.ComponentModel.ICancelAddNew> Schnittstelle ermöglicht, eine Sammlung in eine erweiterbare Möglichkeit ein neues Element hinzufügen.</span><span class="sxs-lookup"><span data-stu-id="a593a-102">The <xref:System.ComponentModel.ICancelAddNew> interface enables a collection to add a new item in an extensible way.</span></span> <span data-ttu-id="a593a-103">Das neue Element anschließend kann ein Commit oder Rollback.</span><span class="sxs-lookup"><span data-stu-id="a593a-103">The new item subsequently can be committed or rolled back.</span></span> <span data-ttu-id="a593a-104">Die <xref:System.ComponentModel.IBindingList.AddNew%2A> -Methode der Auflistung wird verwendet, um das Element mit Vorbehalt hinzuzufügen, was anschließend über die folgenden Vorgänge realisiert wird:</span><span class="sxs-lookup"><span data-stu-id="a593a-104">The <xref:System.ComponentModel.IBindingList.AddNew%2A> method of the collection is used to tentatively add the item, which is subsequently transacted through the following operations:</span></span>  
  
-   <span data-ttu-id="a593a-105">Die <xref:System.ComponentModel.ICancelAddNew.EndNew%2A> -Methode wird explizit einen commit für die ausstehende Hinzufügung.</span><span class="sxs-lookup"><span data-stu-id="a593a-105">The <xref:System.ComponentModel.ICancelAddNew.EndNew%2A> method will explicitly commit the pending addition.</span></span>  
  
-   <span data-ttu-id="a593a-106">Einen anderen Vorgang Auflistung, z. B. eine Einfügung, Entfernung oder verschieben wird implizit die ausstehende Hinzufügung commit.</span><span class="sxs-lookup"><span data-stu-id="a593a-106">Performing another collection operation, such as an insertion, removal, or move will implicitly commit the pending addition.</span></span>  
  
-   <span data-ttu-id="a593a-107">Die <xref:System.ComponentModel.ICancelAddNew.CancelNew%2A> Methode Rollback ausstehende hinzufügen, wenn sie noch kein Commit ausgeführt wurde.</span><span class="sxs-lookup"><span data-stu-id="a593a-107">The <xref:System.ComponentModel.ICancelAddNew.CancelNew%2A> method will roll back the pending addition if it has not already been committed.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a593a-108">In einigen Szenarien, z. B. Windows Forms komplexe Datenbindung, wird die Auflistung möglicherweise <xref:System.ComponentModel.ICancelAddNew.CancelNew%2A> oder <xref:System.ComponentModel.ICancelAddNew.EndNew%2A> Aufrufe für Elemente außer das neu hinzugefügte Element.</span><span class="sxs-lookup"><span data-stu-id="a593a-108">In some scenarios, such as Windows Forms complex data binding, the collection may receive <xref:System.ComponentModel.ICancelAddNew.CancelNew%2A> or <xref:System.ComponentModel.ICancelAddNew.EndNew%2A> calls for items other than the newly added item.</span></span> <span data-ttu-id="a593a-109">(Jedes Element ist in der Regel eine Zeile in einer Datenansicht.) Ignorieren Sie diese Aufrufe. Brechen Sie ein, oder übernehmen Sie das neue Element nur dann, wenn der Index des Elements angegeben ist.</span><span class="sxs-lookup"><span data-stu-id="a593a-109">(Each item is typically a row in a data view.) Ignore these calls; cancel or commit the new item only when that item's index is specified.</span></span>  
  
 <span data-ttu-id="a593a-110">Es gibt zwei Modelle, die transaktionale Hinzufügung eines Elements auf eine datengebundene Auflistung zu ermöglichen:</span><span class="sxs-lookup"><span data-stu-id="a593a-110">There are two models that allow transactional addition of an item to a data-bound collection:</span></span>  
  
-   <span data-ttu-id="a593a-111">Das ältere Modell basiert, direkt auf einer Auflistung mit Implementierung der <xref:System.ComponentModel.IBindingList> -Schnittstelle und einer Datenbindung direkt über die <xref:System.Windows.Forms.CurrencyManager?displayProperty=nameWithType> Klasse.</span><span class="sxs-lookup"><span data-stu-id="a593a-111">The older model relies directly on a collection that implements the <xref:System.ComponentModel.IBindingList> interface and is data-bound directly using the <xref:System.Windows.Forms.CurrencyManager?displayProperty=nameWithType> class.</span></span> <span data-ttu-id="a593a-112">Die <xref:System.Windows.Forms.CurrencyManager.AddNew%2A>, <xref:System.Windows.Forms.CurrencyManager.EndCurrentEdit%2A>, und <xref:System.Windows.Forms.CurrencyManager.CancelCurrentEdit%2A> Methoden der <xref:System.Windows.Forms.CurrencyManager?displayProperty=nameWithType> Klasse sind verantwortlich für die transaktionale Unterstützung für das Hinzufügen neuer Elemente.</span><span class="sxs-lookup"><span data-stu-id="a593a-112">The <xref:System.Windows.Forms.CurrencyManager.AddNew%2A>, <xref:System.Windows.Forms.CurrencyManager.EndCurrentEdit%2A>, and <xref:System.Windows.Forms.CurrencyManager.CancelCurrentEdit%2A> methods of the <xref:System.Windows.Forms.CurrencyManager?displayProperty=nameWithType> class are responsible for transactional support for adding new items.</span></span> <span data-ttu-id="a593a-113">Diese Funktionalität jedoch hängt die Elemente, die Unterstützung von Transaktionsverhalten über die <xref:System.ComponentModel.IEditableObject> Schnittstelle.</span><span class="sxs-lookup"><span data-stu-id="a593a-113">However, this functionality depends upon the items supporting transactional behavior through the <xref:System.ComponentModel.IEditableObject> interface.</span></span> <span data-ttu-id="a593a-114">Wenn die Elemente nicht über diese Schnittstelle unterstützen, das Element wird immer hinzugefügt werden der Liste aus, unabhängig davon, nachfolgende Aufrufe von <xref:System.Windows.Forms.CurrencyManager.CancelCurrentEdit%2A>.</span><span class="sxs-lookup"><span data-stu-id="a593a-114">If the items do not support this interface, the item will always be added to the list, regardless of subsequent calls to <xref:System.Windows.Forms.CurrencyManager.CancelCurrentEdit%2A>.</span></span>  
  
-   <span data-ttu-id="a593a-115">Das neuere Modell unterstützt eine robustere Datenbindungsszenario über die generische <xref:System.ComponentModel.BindingList%601> Klasse implementiert die <xref:System.ComponentModel.IBindingList> und <xref:System.ComponentModel.ICancelAddNew> Schnittstellen.</span><span class="sxs-lookup"><span data-stu-id="a593a-115">The newer model supports a more robust data-binding scenario through the generic <xref:System.ComponentModel.BindingList%601> class, which implements the <xref:System.ComponentModel.IBindingList> and <xref:System.ComponentModel.ICancelAddNew> interfaces.</span></span> <span data-ttu-id="a593a-116">In diesem Fall wird die transaktionale Unterstützung von verwaltet die <xref:System.ComponentModel.BindingList%601> Auflistung direkt.</span><span class="sxs-lookup"><span data-stu-id="a593a-116">In this case, the transactional support is managed by the <xref:System.ComponentModel.BindingList%601> collection directly.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.IBindingList" />
    <altmember cref="T:System.Windows.Forms.CurrencyManager" />
    <altmember cref="T:System.ComponentModel.IEditableObject" />
    <altmember cref="T:System.ComponentModel.BindingList`1" />
  </Docs>
  <Members>
    <Member MemberName="CancelNew">
      <MemberSignature Language="C#" Value="public void CancelNew (int itemIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CancelNew(int32 itemIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.ICancelAddNew.CancelNew(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CancelNew (itemIndex As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CancelNew(int itemIndex);" />
      <MemberSignature Language="F#" Value="abstract member CancelNew : int -&gt; unit" Usage="iCancelAddNew.CancelNew itemIndex" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="itemIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="itemIndex"><span data-ttu-id="a593a-117">Der Index des Elements, das der Auflistung hinzugefügt wurde.</span><span class="sxs-lookup"><span data-stu-id="a593a-117">The index of the item that was previously added to the collection.</span></span></param>
        <summary><span data-ttu-id="a593a-118">Entfernt ein anstehendes neues Element aus der Auflistung.</span><span class="sxs-lookup"><span data-stu-id="a593a-118">Discards a pending new item from the collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a593a-119">Die <xref:System.ComponentModel.ICancelAddNew.CancelNew%2A> Methode Rollback für ein ausstehendes hinzufügen (<xref:System.ComponentModel.IBindingList.AddNew%2A>) eines Elements, das zuvor hinzugefügt haben, auf die Auflistung an der Position `itemIndex`.</span><span class="sxs-lookup"><span data-stu-id="a593a-119">The <xref:System.ComponentModel.ICancelAddNew.CancelNew%2A> method rolls back a pending addition (<xref:System.ComponentModel.IBindingList.AddNew%2A>) of an item previously added to the collection at position `itemIndex`.</span></span> <span data-ttu-id="a593a-120">Der Indexparameter ist erforderlich, da mehrere neue Elemente gleichzeitig ausstehend sein können.</span><span class="sxs-lookup"><span data-stu-id="a593a-120">The index parameter is necessary because several new items can be simultaneously pending.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.ICancelAddNew.EndNew(System.Int32)" />
        <altmember cref="M:System.Windows.Forms.CurrencyManager.CancelCurrentEdit" />
        <altmember cref="T:System.ComponentModel.IEditableObject" />
      </Docs>
    </Member>
    <Member MemberName="EndNew">
      <MemberSignature Language="C#" Value="public void EndNew (int itemIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndNew(int32 itemIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.ICancelAddNew.EndNew(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndNew (itemIndex As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndNew(int itemIndex);" />
      <MemberSignature Language="F#" Value="abstract member EndNew : int -&gt; unit" Usage="iCancelAddNew.EndNew itemIndex" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="itemIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="itemIndex"><span data-ttu-id="a593a-121">Der Index des Elements, das der Auflistung hinzugefügt wurde.</span><span class="sxs-lookup"><span data-stu-id="a593a-121">The index of the item that was previously added to the collection.</span></span></param>
        <summary><span data-ttu-id="a593a-122">Übergibt ein anstehendes neues Element an die Auflistung.</span><span class="sxs-lookup"><span data-stu-id="a593a-122">Commits a pending new item to the collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a593a-123">Die <xref:System.ComponentModel.ICancelAddNew.EndNew%2A> führt einen Commit für ein ausstehendes hinzufügen (<xref:System.ComponentModel.IBindingList.AddNew%2A>) eines Elements, das zuvor hinzugefügt haben, auf die Auflistung an der Position `itemIndex`.</span><span class="sxs-lookup"><span data-stu-id="a593a-123">The <xref:System.ComponentModel.ICancelAddNew.EndNew%2A> commits a pending addition (<xref:System.ComponentModel.IBindingList.AddNew%2A>) of an item previously added to the collection at position `itemIndex`.</span></span> <span data-ttu-id="a593a-124">Der Indexparameter ist erforderlich, da mehrere neue Elemente gleichzeitig ausstehend sein können.</span><span class="sxs-lookup"><span data-stu-id="a593a-124">The index parameter is necessary because several new items can be simultaneously pending.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.ICancelAddNew.CancelNew(System.Int32)" />
        <altmember cref="M:System.Windows.Forms.CurrencyManager.EndCurrentEdit" />
      </Docs>
    </Member>
  </Members>
</Type>