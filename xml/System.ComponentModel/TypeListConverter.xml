<Type Name="TypeListConverter" FullName="System.ComponentModel.TypeListConverter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="34832e87ea8d32315b0417ce2b8b321b9c2b205d" /><Meta Name="ms.sourcegitcommit" Value="a3e01ec36374fac54a55add0dcc1e754e394abeb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="03/30/2019" /><Meta Name="ms.locfileid" Value="58714369" /></Metadata><TypeSignature Language="C#" Value="public abstract class TypeListConverter : System.ComponentModel.TypeConverter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit TypeListConverter extends System.ComponentModel.TypeConverter" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.TypeListConverter" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class TypeListConverter&#xA;Inherits TypeConverter" />
  <TypeSignature Language="C++ CLI" Value="public ref class TypeListConverter abstract : System::ComponentModel::TypeConverter" />
  <TypeSignature Language="F#" Value="type TypeListConverter = class&#xA;    inherit TypeConverter" />
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.TypeConverter</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="81dc6-101">Stellt einen Typkonverter bereit, der zum Auffüllen eines Listenfelds mit verfügbaren Typen verwendet werden kann.</span><span class="sxs-lookup"><span data-stu-id="81dc6-101">Provides a type converter that can be used to populate a list box with available types.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="81dc6-102">Sie müssen angeben, die Liste der Typen an den Konstruktor dieses `abstract` Klasse.</span><span class="sxs-lookup"><span data-stu-id="81dc6-102">You must provide the list of types to the constructor of this `abstract` class.</span></span>  
  
 <span data-ttu-id="81dc6-103">Weitere Informationen zu Typkonvertern, finden Sie unter den <xref:System.ComponentModel.TypeConverter> Basisklasse und [Vorgehensweise: Implementieren eines Typkonverters](https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2013/ayybcxe5(v=vs.120)).</span><span class="sxs-lookup"><span data-stu-id="81dc6-103">For more information about type converters, see the <xref:System.ComponentModel.TypeConverter> base class and [How to: Implement a Type Converter](https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2013/ayybcxe5(v=vs.120)).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="81dc6-104">Erstellen Sie nie eine Instanz von einem <xref:System.ComponentModel.TypeListConverter>.</span><span class="sxs-lookup"><span data-stu-id="81dc6-104">You should never create an instance of a <xref:System.ComponentModel.TypeListConverter>.</span></span> <span data-ttu-id="81dc6-105">Rufen Sie stattdessen die <xref:System.ComponentModel.TypeDescriptor.GetConverter%2A> -Methode der <xref:System.ComponentModel.TypeDescriptor>.</span><span class="sxs-lookup"><span data-stu-id="81dc6-105">Instead, call the <xref:System.ComponentModel.TypeDescriptor.GetConverter%2A> method of <xref:System.ComponentModel.TypeDescriptor>.</span></span> <span data-ttu-id="81dc6-106">Weitere Informationen finden Sie in die Beispielen in den <xref:System.ComponentModel.TypeConverter> Basisklasse.</span><span class="sxs-lookup"><span data-stu-id="81dc6-106">For more information, see the examples in the <xref:System.ComponentModel.TypeConverter> base class.</span></span>  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para><span data-ttu-id="81dc6-107">Beim Erben von <see cref="T:System.ComponentModel.TypeListConverter" />, Sie können die folgenden Methoden überschreiben.</span><span class="sxs-lookup"><span data-stu-id="81dc6-107">When you inherit from <see cref="T:System.ComponentModel.TypeListConverter" />, you can override the following methods.</span></span>  
  
<span data-ttu-id="81dc6-108">– Um die benutzerdefinierte typkonvertierung unterstützen möchten, überschreiben die <see cref="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)" />, <see cref="M:System.ComponentModel.TypeConverter.CanConvertTo(System.Type)" />, <see cref="M:System.ComponentModel.TypeConverter.ConvertFrom(System.Object)" />, und <see cref="M:System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)" /> Methoden.</span><span class="sxs-lookup"><span data-stu-id="81dc6-108">-   To support custom type conversion, override the <see cref="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)" />, <see cref="M:System.ComponentModel.TypeConverter.CanConvertTo(System.Type)" />, <see cref="M:System.ComponentModel.TypeConverter.ConvertFrom(System.Object)" />, and <see cref="M:System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)" /> methods.</span></span>  
  
<span data-ttu-id="81dc6-109">– Zum Konvertieren von Typen, die das Objekt, dessen Wert zu ändern, neu erstellen müssen, überschreiben die <see cref="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" /> und <see cref="M:System.ComponentModel.TypeConverter.GetCreateInstanceSupported" /> Methoden.</span><span class="sxs-lookup"><span data-stu-id="81dc6-109">-   To convert types that must re-create the object to change its value, override the <see cref="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" /> and <see cref="M:System.ComponentModel.TypeConverter.GetCreateInstanceSupported" /> methods.</span></span>  
  
<span data-ttu-id="81dc6-110">– Zum Konvertieren von Typen, die die Eigenschaften zu unterstützen, überschreiben die <see cref="M:System.ComponentModel.TypeConverter.GetProperties(System.Object)" /> und <see cref="M:System.ComponentModel.TypeConverter.GetPropertiesSupported" /> Methoden.</span><span class="sxs-lookup"><span data-stu-id="81dc6-110">-   To convert types that support properties, override the <see cref="M:System.ComponentModel.TypeConverter.GetProperties(System.Object)" /> and <see cref="M:System.ComponentModel.TypeConverter.GetPropertiesSupported" /> methods.</span></span> <span data-ttu-id="81dc6-111">Wenn die Klasse, die Sie konvertieren keine Eigenschaften, und Eigenschaften implementiert werden müssen, können Sie die <see cref="T:System.ComponentModel.TypeConverter.SimplePropertyDescriptor" /> Klasse als Basis für das Implementieren der Eigenschaftenbezeichner.</span><span class="sxs-lookup"><span data-stu-id="81dc6-111">If the class you are converting does not have properties, and you need to implement properties, you can use the <see cref="T:System.ComponentModel.TypeConverter.SimplePropertyDescriptor" /> class as a base for implementing the property descriptors.</span></span> <span data-ttu-id="81dc6-112">Beim Erben von <see cref="T:System.ComponentModel.TypeConverter.SimplePropertyDescriptor" />, müssen Sie überschreiben die <see cref="M:System.ComponentModel.PropertyDescriptor.GetValue(System.Object)" /> und <see cref="M:System.ComponentModel.PropertyDescriptor.SetValue(System.Object,System.Object)" /> Methoden.</span><span class="sxs-lookup"><span data-stu-id="81dc6-112">When you inherit from <see cref="T:System.ComponentModel.TypeConverter.SimplePropertyDescriptor" />, you must override the <see cref="M:System.ComponentModel.PropertyDescriptor.GetValue(System.Object)" /> and <see cref="M:System.ComponentModel.PropertyDescriptor.SetValue(System.Object,System.Object)" /> methods.</span></span>  
  
<span data-ttu-id="81dc6-113">– Zum Konvertieren von Typen, die Standardwerte zu unterstützen, überschreiben die <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" />, <see cref="M:System.ComponentModel.TypeConverter.GetStandardValuesExclusive" />, <see cref="M:System.ComponentModel.TypeConverter.GetStandardValuesSupported" /> und <see cref="M:System.ComponentModel.TypeConverter.IsValid(System.Object)" /> Methoden.</span><span class="sxs-lookup"><span data-stu-id="81dc6-113">-   To convert types that support standard values, override the <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" />, <see cref="M:System.ComponentModel.TypeConverter.GetStandardValuesExclusive" />, <see cref="M:System.ComponentModel.TypeConverter.GetStandardValuesSupported" /> and <see cref="M:System.ComponentModel.TypeConverter.IsValid(System.Object)" /> methods.</span></span></para></block>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected TypeListConverter (Type[] types);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Type[] types) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeListConverter.#ctor(System.Type[])" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (types As Type())" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; TypeListConverter(cli::array &lt;Type ^&gt; ^ types);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.TypeListConverter : Type[] -&gt; System.ComponentModel.TypeListConverter" Usage="new System.ComponentModel.TypeListConverter types" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="types" Type="System.Type[]" />
      </Parameters>
      <Docs>
        <param name="types"><span data-ttu-id="81dc6-114">Das Array vom Typ <see cref="T:System.Type" />, das als verfügbare Typen verwendet werden soll.</span><span class="sxs-lookup"><span data-stu-id="81dc6-114">The array of type <see cref="T:System.Type" /> to use as the available types.</span></span></param>
        <summary><span data-ttu-id="81dc6-115">Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.TypeListConverter" />-Klasse, unter Verwendung des Typarrays als verfügbare Typen.</span><span class="sxs-lookup"><span data-stu-id="81dc6-115">Initializes a new instance of the <see cref="T:System.ComponentModel.TypeListConverter" /> class using the type array as the available types.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="81dc6-116">Die Typen in der `types` Parameter kann verwendet werden, um ein Listenfeld, das mit den verfügbaren Typen zu füllen.</span><span class="sxs-lookup"><span data-stu-id="81dc6-116">The types provided in the `types` parameter can be used to populate a list box with the available types.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanConvertFrom">
      <MemberSignature Language="C#" Value="public override bool CanConvertFrom (System.ComponentModel.ITypeDescriptorContext context, Type sourceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class System.Type sourceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeListConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CanConvertFrom (context As ITypeDescriptorContext, sourceType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool CanConvertFrom(System::ComponentModel::ITypeDescriptorContext ^ context, Type ^ sourceType);" />
      <MemberSignature Language="F#" Value="override this.CanConvertFrom : System.ComponentModel.ITypeDescriptorContext * Type -&gt; bool" Usage="typeListConverter.CanConvertFrom (context, sourceType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="sourceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="81dc6-117">Ein <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, der einen Formatierungskontext bereitstellt.</span><span class="sxs-lookup"><span data-stu-id="81dc6-117">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span></span></param>
        <param name="sourceType"><span data-ttu-id="81dc6-118">Die <see cref="T:System.Type" />-Klasse des Quellobjekts.</span><span class="sxs-lookup"><span data-stu-id="81dc6-118">The <see cref="T:System.Type" /> of the source object.</span></span></param>
        <summary><span data-ttu-id="81dc6-119">Ruft einen Wert ab, der angibt, ob der Konverter die angegebene <see cref="T:System.Type" />-Klasse des Quellobjekts mithilfe des angegebenen Kontexts konvertieren kann.</span><span class="sxs-lookup"><span data-stu-id="81dc6-119">Gets a value indicating whether this converter can convert the specified <see cref="T:System.Type" /> of the source object using the given context.</span></span></summary>
        <returns><span data-ttu-id="81dc6-120"><see langword="true" />, wenn dieser Konverter die Konvertierung durchführen kann, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="81dc6-120"><see langword="true" /> if this converter can perform the conversion; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanConvertTo">
      <MemberSignature Language="C#" Value="public override bool CanConvertTo (System.ComponentModel.ITypeDescriptorContext context, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanConvertTo(class System.ComponentModel.ITypeDescriptorContext context, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeListConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CanConvertTo (context As ITypeDescriptorContext, destinationType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool CanConvertTo(System::ComponentModel::ITypeDescriptorContext ^ context, Type ^ destinationType);" />
      <MemberSignature Language="F#" Value="override this.CanConvertTo : System.ComponentModel.ITypeDescriptorContext * Type -&gt; bool" Usage="typeListConverter.CanConvertTo (context, destinationType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="81dc6-121">Ein <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, der einen Formatierungskontext bereitstellt.</span><span class="sxs-lookup"><span data-stu-id="81dc6-121">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span></span></param>
        <param name="destinationType"><span data-ttu-id="81dc6-122">Eine <see cref="T:System.Type" />-Klasse, die den Zieltyp der Konvertierung darstellt.</span><span class="sxs-lookup"><span data-stu-id="81dc6-122">A <see cref="T:System.Type" /> that represents the type you wish to convert to.</span></span></param>
        <summary><span data-ttu-id="81dc6-123">Ruft einen Wert ab, der angibt, ob dieser Konverter ein Objekt unter Verwendung des Kontexts in den angegebenen Zieltyp konvertieren kann.</span><span class="sxs-lookup"><span data-stu-id="81dc6-123">Gets a value indicating whether this converter can convert an object to the given destination type using the context.</span></span></summary>
        <returns><span data-ttu-id="81dc6-124"><see langword="true" />, wenn dieser Konverter die Konvertierung durchführen kann, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="81dc6-124"><see langword="true" /> if this converter can perform the conversion; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="81dc6-125">Mithilfe des `context`-Parameters können zusätzliche Informationen über die Umgebung extrahiert werden, aus der dieser Konverter aufgerufen wurde.</span><span class="sxs-lookup"><span data-stu-id="81dc6-125">The `context` parameter can be used to extract additional information about the environment this converter is being invoked from.</span></span> <span data-ttu-id="81dc6-126">Dieser Parameter kann `null` sein und muss daher immer überprüft werden.</span><span class="sxs-lookup"><span data-stu-id="81dc6-126">This can be `null`, so always check.</span></span> <span data-ttu-id="81dc6-127">Außerdem können die Eigenschaften des Kontextobjekts `null` zurückgeben.</span><span class="sxs-lookup"><span data-stu-id="81dc6-127">Also, properties on the context object can return `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="81dc6-128">Überschreiben Sie diese Methode, um eigene Konvertierungsanforderungen anzugeben.</span><span class="sxs-lookup"><span data-stu-id="81dc6-128">Override this method to provide your own conversion requirements.</span></span></para></block>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <Member MemberName="ConvertFrom">
      <MemberSignature Language="C#" Value="public override object ConvertFrom (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeListConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ConvertFrom (context As ITypeDescriptorContext, culture As CultureInfo, value As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ConvertFrom(System::ComponentModel::ITypeDescriptorContext ^ context, System::Globalization::CultureInfo ^ culture, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="override this.ConvertFrom : System.ComponentModel.ITypeDescriptorContext * System.Globalization.CultureInfo * obj -&gt; obj" Usage="typeListConverter.ConvertFrom (context, culture, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="81dc6-129">Ein <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, der einen Formatierungskontext bereitstellt.</span><span class="sxs-lookup"><span data-stu-id="81dc6-129">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span></span></param>
        <param name="culture"><span data-ttu-id="81dc6-130">Eine <see cref="T:System.Globalization.CultureInfo" />-Klasse, die die Kultur angibt, mit der die Schriftart dargestellt wird.</span><span class="sxs-lookup"><span data-stu-id="81dc6-130">A <see cref="T:System.Globalization.CultureInfo" /> that specifies the culture used to represent the font.</span></span></param>
        <param name="value"><span data-ttu-id="81dc6-131">Die zu konvertierende <see cref="T:System.Object" />.</span><span class="sxs-lookup"><span data-stu-id="81dc6-131">The <see cref="T:System.Object" /> to convert.</span></span></param>
        <summary><span data-ttu-id="81dc6-132">Konvertiert das angegebene Objekt in den systemeigenen Typ des Konverters.</span><span class="sxs-lookup"><span data-stu-id="81dc6-132">Converts the specified object to the native type of the converter.</span></span></summary>
        <returns><span data-ttu-id="81dc6-133">Ein <see cref="T:System.Object" />, das den konvertierten Wert darstellt.</span><span class="sxs-lookup"><span data-stu-id="81dc6-133">An <see cref="T:System.Object" /> that represents the converted value.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertTo">
      <MemberSignature Language="C#" Value="public override object ConvertTo (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ConvertTo(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object value, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeListConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ConvertTo (context As ITypeDescriptorContext, culture As CultureInfo, value As Object, destinationType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ConvertTo(System::ComponentModel::ITypeDescriptorContext ^ context, System::Globalization::CultureInfo ^ culture, System::Object ^ value, Type ^ destinationType);" />
      <MemberSignature Language="F#" Value="override this.ConvertTo : System.ComponentModel.ITypeDescriptorContext * System.Globalization.CultureInfo * obj * Type -&gt; obj" Usage="typeListConverter.ConvertTo (context, culture, value, destinationType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="81dc6-134">Ein <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, der einen Formatierungskontext bereitstellt.</span><span class="sxs-lookup"><span data-stu-id="81dc6-134">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span></span></param>
        <param name="culture"><span data-ttu-id="81dc6-135">Eine optionale <see cref="T:System.Globalization.CultureInfo" />-Klasse.</span><span class="sxs-lookup"><span data-stu-id="81dc6-135">An optional <see cref="T:System.Globalization.CultureInfo" />.</span></span> <span data-ttu-id="81dc6-136">Erfolgt hier keine Angabe, wird die aktuelle Kultur angenommen.</span><span class="sxs-lookup"><span data-stu-id="81dc6-136">If not supplied, the current culture is assumed.</span></span></param>
        <param name="value"><span data-ttu-id="81dc6-137">Die zu konvertierende <see cref="T:System.Object" />.</span><span class="sxs-lookup"><span data-stu-id="81dc6-137">The <see cref="T:System.Object" /> to convert.</span></span></param>
        <param name="destinationType"><span data-ttu-id="81dc6-138">Die <see cref="T:System.Type" />-Klasse, in die der Wert konvertiert werden soll.</span><span class="sxs-lookup"><span data-stu-id="81dc6-138">The <see cref="T:System.Type" /> to convert the value to.</span></span></param>
        <summary><span data-ttu-id="81dc6-139">Konvertiert das angegebene Wertobjekt in den angegebenen Zieltyp.</span><span class="sxs-lookup"><span data-stu-id="81dc6-139">Converts the given value object to the specified destination type.</span></span></summary>
        <returns><span data-ttu-id="81dc6-140">Eine <see cref="T:System.Object" />-Klasse, die den konvertierten <paramref name="value" />-Parameter darstellt.</span><span class="sxs-lookup"><span data-stu-id="81dc6-140">An <see cref="T:System.Object" /> that represents the converted <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="81dc6-141">Diese Methode konvertiert am häufigsten Typen in und aus dem String-Objekten.</span><span class="sxs-lookup"><span data-stu-id="81dc6-141">This method most commonly converts types to and from string objects.</span></span>  
  
 <span data-ttu-id="81dc6-142">Mithilfe des `context`-Parameters können zusätzliche Informationen über die Umgebung extrahiert werden, aus der dieser Konverter aufgerufen wurde.</span><span class="sxs-lookup"><span data-stu-id="81dc6-142">The `context` parameter can be used to extract additional information about the environment this converter is being invoked from.</span></span> <span data-ttu-id="81dc6-143">Dieser Parameter kann `null` sein und muss daher immer überprüft werden.</span><span class="sxs-lookup"><span data-stu-id="81dc6-143">This can be `null`, so always check.</span></span> <span data-ttu-id="81dc6-144">Außerdem können die Eigenschaften des Kontextobjekts `null` zurückgeben.</span><span class="sxs-lookup"><span data-stu-id="81dc6-144">Also, properties on the context object can return `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="81dc6-145"><paramref name="destinationType" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="81dc6-145"><paramref name="destinationType" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="81dc6-146">Die Konvertierung kann nicht durchgeführt werden.</span><span class="sxs-lookup"><span data-stu-id="81dc6-146">The conversion cannot be performed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetStandardValues">
      <MemberSignature Language="C#" Value="public override System.ComponentModel.TypeConverter.StandardValuesCollection GetStandardValues (System.ComponentModel.ITypeDescriptorContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.ComponentModel.TypeConverter/StandardValuesCollection GetStandardValues(class System.ComponentModel.ITypeDescriptorContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeListConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetStandardValues (context As ITypeDescriptorContext) As TypeConverter.StandardValuesCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::ComponentModel::TypeConverter::StandardValuesCollection ^ GetStandardValues(System::ComponentModel::ITypeDescriptorContext ^ context);" />
      <MemberSignature Language="F#" Value="override this.GetStandardValues : System.ComponentModel.ITypeDescriptorContext -&gt; System.ComponentModel.TypeConverter.StandardValuesCollection" Usage="typeListConverter.GetStandardValues context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.TypeConverter+StandardValuesCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="81dc6-147">Ein <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, der einen Formatierungskontext bereitstellt.</span><span class="sxs-lookup"><span data-stu-id="81dc6-147">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span></span></param>
        <summary><span data-ttu-id="81dc6-148">Ruft eine Auflistung von Standardwerten für den Datentyp ab, für den diese Bestätigung vorgesehen ist.</span><span class="sxs-lookup"><span data-stu-id="81dc6-148">Gets a collection of standard values for the data type this validator is designed for.</span></span></summary>
        <returns><span data-ttu-id="81dc6-149">Eine <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" />, die einen Standardsatz gültiger Werte enthält, oder <see langword="null" />, wenn der Datentyp keinen Standardsatz von Werten unterstützt.</span><span class="sxs-lookup"><span data-stu-id="81dc6-149">A <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /> that holds a standard set of valid values, or <see langword="null" /> if the data type does not support a standard set of values.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="81dc6-150">Mithilfe des `context`-Parameters können zusätzliche Informationen über die Umgebung extrahiert werden, aus der dieser Konverter aufgerufen wurde.</span><span class="sxs-lookup"><span data-stu-id="81dc6-150">The `context` parameter can be used to extract additional information about the environment this converter is being invoked from.</span></span> <span data-ttu-id="81dc6-151">Dieser Parameter kann `null` sein und muss daher immer überprüft werden.</span><span class="sxs-lookup"><span data-stu-id="81dc6-151">This can be `null`, so always check.</span></span> <span data-ttu-id="81dc6-152">Außerdem können die Eigenschaften des Kontextobjekts `null` zurückgeben.</span><span class="sxs-lookup"><span data-stu-id="81dc6-152">Also, properties on the context object can return `null`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetStandardValuesExclusive">
      <MemberSignature Language="C#" Value="public override bool GetStandardValuesExclusive (System.ComponentModel.ITypeDescriptorContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool GetStandardValuesExclusive(class System.ComponentModel.ITypeDescriptorContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeListConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetStandardValuesExclusive (context As ITypeDescriptorContext) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool GetStandardValuesExclusive(System::ComponentModel::ITypeDescriptorContext ^ context);" />
      <MemberSignature Language="F#" Value="override this.GetStandardValuesExclusive : System.ComponentModel.ITypeDescriptorContext -&gt; bool" Usage="typeListConverter.GetStandardValuesExclusive context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="81dc6-153">Ein <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, der einen Formatierungskontext bereitstellt.</span><span class="sxs-lookup"><span data-stu-id="81dc6-153">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span></span></param>
        <summary><span data-ttu-id="81dc6-154">Ruft einen Wert ab, der angibt, ob die von der <see cref="M:System.ComponentModel.TypeListConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)" />-Methode zurückgegebene Auflistung von Standardwerten eine exklusive Liste darstellt.</span><span class="sxs-lookup"><span data-stu-id="81dc6-154">Gets a value indicating whether the list of standard values returned from the <see cref="M:System.ComponentModel.TypeListConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)" /> method is an exclusive list.</span></span></summary>
        <returns><span data-ttu-id="81dc6-155"><see langword="true" />, da die von der <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" />-Methode zurückgegebene <see cref="M:System.ComponentModel.TypeListConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)" />-Klasse eine vollständige Liste der möglichen Werte darstellt.</span><span class="sxs-lookup"><span data-stu-id="81dc6-155"><see langword="true" /> because the <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /> returned from <see cref="M:System.ComponentModel.TypeListConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)" /> is an exhaustive list of possible values.</span></span> <span data-ttu-id="81dc6-156">Diese Methode gibt nie <see langword="false" /> zurück.</span><span class="sxs-lookup"><span data-stu-id="81dc6-156">This method never returns <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="81dc6-157">Mithilfe des `context`-Parameters können zusätzliche Informationen über die Umgebung extrahiert werden, aus der dieser Konverter aufgerufen wurde.</span><span class="sxs-lookup"><span data-stu-id="81dc6-157">The `context` parameter can be used to extract additional information about the environment this converter is being invoked from.</span></span> <span data-ttu-id="81dc6-158">Dieser Parameter kann `null` sein und muss daher immer überprüft werden.</span><span class="sxs-lookup"><span data-stu-id="81dc6-158">This can be `null`, so always check.</span></span> <span data-ttu-id="81dc6-159">Außerdem können die Eigenschaften des Kontextobjekts `null` zurückgeben.</span><span class="sxs-lookup"><span data-stu-id="81dc6-159">Also, properties on the context object can return `null`.</span></span>  
  
 <span data-ttu-id="81dc6-160">Keine anderen Werte sind neben der Liste von Standardwerten gültig, wenn die Liste exklusiv ist, die <xref:System.ComponentModel.TypeListConverter.GetStandardValues%2A> Methode bereitstellt.</span><span class="sxs-lookup"><span data-stu-id="81dc6-160">When the list is exclusive, no other values are valid besides the list of standard values the <xref:System.ComponentModel.TypeListConverter.GetStandardValues%2A> method provides.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetStandardValuesSupported">
      <MemberSignature Language="C#" Value="public override bool GetStandardValuesSupported (System.ComponentModel.ITypeDescriptorContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool GetStandardValuesSupported(class System.ComponentModel.ITypeDescriptorContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeListConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetStandardValuesSupported (context As ITypeDescriptorContext) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool GetStandardValuesSupported(System::ComponentModel::ITypeDescriptorContext ^ context);" />
      <MemberSignature Language="F#" Value="override this.GetStandardValuesSupported : System.ComponentModel.ITypeDescriptorContext -&gt; bool" Usage="typeListConverter.GetStandardValuesSupported context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="81dc6-161">Ein <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, der einen Formatierungskontext bereitstellt.</span><span class="sxs-lookup"><span data-stu-id="81dc6-161">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span></span></param>
        <summary><span data-ttu-id="81dc6-162">Ruft einen Wert ab, der angibt, ob dieses Objekt eine Standardmenge von Werten unterstützt, die unter Verwendung des angegebenen Kontexts aus einer Liste ausgewählt werden können.</span><span class="sxs-lookup"><span data-stu-id="81dc6-162">Gets a value indicating whether this object supports a standard set of values that can be picked from a list using the specified context.</span></span></summary>
        <returns><span data-ttu-id="81dc6-163"><see langword="true" />, weil die <see cref="M:System.ComponentModel.TypeListConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)" />-Schnittstelle aufgerufen werden muss, um eine vom Objekt unterstützte Standardmenge von Werten zu ermitteln.</span><span class="sxs-lookup"><span data-stu-id="81dc6-163"><see langword="true" /> because <see cref="M:System.ComponentModel.TypeListConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)" /> should be called to find a common set of values the object supports.</span></span> <span data-ttu-id="81dc6-164">Diese Methode gibt nie <see langword="false" /> zurück.</span><span class="sxs-lookup"><span data-stu-id="81dc6-164">This method never returns <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="81dc6-165">Mithilfe des `context`-Parameters können zusätzliche Informationen über die Umgebung extrahiert werden, aus der dieser Konverter aufgerufen wurde.</span><span class="sxs-lookup"><span data-stu-id="81dc6-165">The `context` parameter can be used to extract additional information about the environment this converter is being invoked from.</span></span> <span data-ttu-id="81dc6-166">Dieser Parameter kann `null` sein und muss daher immer überprüft werden.</span><span class="sxs-lookup"><span data-stu-id="81dc6-166">This can be `null`, so always check.</span></span> <span data-ttu-id="81dc6-167">Außerdem können die Eigenschaften des Kontextobjekts `null` zurückgeben.</span><span class="sxs-lookup"><span data-stu-id="81dc6-167">Also, properties on the context object can return `null`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>