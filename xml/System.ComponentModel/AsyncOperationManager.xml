<Type Name="AsyncOperationManager" FullName="System.ComponentModel.AsyncOperationManager">
  <TypeSignature Language="C#" Value="public static class AsyncOperationManager" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit AsyncOperationManager extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.AsyncOperationManager" />
  <TypeSignature Language="VB.NET" Value="Public Class AsyncOperationManager" />
  <TypeSignature Language="C++ CLI" Value="public ref class AsyncOperationManager abstract sealed" />
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.EventBasedAsync</AssemblyName>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="8033f-101">Stellt Nebenläufigkeitsverwaltung für Klassen bereit, die asynchrone Methodenaufrufe unterstützen.</span><span class="sxs-lookup"><span data-stu-id="8033f-101">Provides concurrency management for classes that support asynchronous method calls.</span></span> <span data-ttu-id="8033f-102">Diese Klasse kann nicht vererbt werden.</span><span class="sxs-lookup"><span data-stu-id="8033f-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8033f-103">Wenn Ihre Klasse, um asynchrones Verhalten gemäß bereitzustellen muss der [Übersicht über ereignisbasierte asynchrone Muster](~/docs/standard/asynchronous-programming-patterns/event-based-asynchronous-pattern-overview.md), tritt eine Anzahl von Problemen mit der Parallelität.</span><span class="sxs-lookup"><span data-stu-id="8033f-103">If your class needs to provide asynchronous behavior according to the [Event-based Asynchronous Pattern Overview](~/docs/standard/asynchronous-programming-patterns/event-based-asynchronous-pattern-overview.md), you will encounter a number of concurrency management issues.</span></span> <span data-ttu-id="8033f-104">Dazu gehört die Anforderung, stellen Sie sicher, dass der Ereignishandler aufgerufen werden, auf einen Thread oder Kontext, der für das Anwendungsmodell geeignet ist (z. B. Windows Forms-Anwendungen [!INCLUDE[vstecasp](~/includes/vstecasp-md.md)] Anwendungen, konsolenanwendungen und So weiter).</span><span class="sxs-lookup"><span data-stu-id="8033f-104">Among these is the requirement to ensure that event handlers are called on a thread or context that is appropriate for the application model (for example, Windows Forms applications, [!INCLUDE[vstecasp](~/includes/vstecasp-md.md)] applications, console applications, and so on).</span></span> <span data-ttu-id="8033f-105">Die <xref:System.ComponentModel.AsyncOperationManager> bietet eine einfache Möglichkeit, eine Klasse erstellen, die ordnungsgemäß unter allen unterstützten von Anwendungsmodellen führt die [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span><span class="sxs-lookup"><span data-stu-id="8033f-105">The <xref:System.ComponentModel.AsyncOperationManager> provides a convenient way to create a class that runs properly under all application models supported by the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span>  
  
 <span data-ttu-id="8033f-106">Die <xref:System.ComponentModel.AsyncOperationManager> -Klasse verfügt über eine Methode, <xref:System.ComponentModel.AsyncOperationManager.CreateOperation%2A>, welche gibt eine <xref:System.ComponentModel.AsyncOperation?displayProperty=nameWithType> , die verwendet werden kann, um die Dauer einer bestimmten asynchronen Aufgabe nachzuverfolgen.</span><span class="sxs-lookup"><span data-stu-id="8033f-106">The <xref:System.ComponentModel.AsyncOperationManager> class has one method, <xref:System.ComponentModel.AsyncOperationManager.CreateOperation%2A>, which returns an <xref:System.ComponentModel.AsyncOperation?displayProperty=nameWithType> that can be used to track the duration of a particular asynchronous task.</span></span> <span data-ttu-id="8033f-107">Die <xref:System.ComponentModel.AsyncOperation?displayProperty=nameWithType> für eine Aufgabe an alert Clients verwendet werden kann, wenn eine Aufgabe abgeschlossen ist.</span><span class="sxs-lookup"><span data-stu-id="8033f-107">The <xref:System.ComponentModel.AsyncOperation?displayProperty=nameWithType> for a task can be used to alert clients when a task completes.</span></span> <span data-ttu-id="8033f-108">Sie können auch verwendet werden, um statusaktualisierungen und inkrementelle Ergebnisse bereitstellen, ohne dass den Vorgang beendet.</span><span class="sxs-lookup"><span data-stu-id="8033f-108">It can also be used to post progress updates and incremental results without terminating the operation.</span></span>  
  
 <span data-ttu-id="8033f-109">Weitere Informationen zu asynchrone Klassen implementieren, finden Sie unter [das ereignisbasierte asynchrone Muster implementieren](~/docs/standard/asynchronous-programming-patterns/implementing-the-event-based-asynchronous-pattern.md).</span><span class="sxs-lookup"><span data-stu-id="8033f-109">For more information about implementing asynchronous classes, see [Implementing the Event-based Asynchronous Pattern](~/docs/standard/asynchronous-programming-patterns/implementing-the-event-based-asynchronous-pattern.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8033f-110">Das folgende Codebeispiel veranschaulicht die Verwendung der <xref:System.ComponentModel.AsyncOperationManager> Klasse, um eine Klasse erstellen, die asynchrone Vorgänge für jedes beliebige Anwendungsmodell unterstützt.</span><span class="sxs-lookup"><span data-stu-id="8033f-110">The following code example demonstrates using the <xref:System.ComponentModel.AsyncOperationManager> class to create a class that supports asynchronous operations for any application model.</span></span> <span data-ttu-id="8033f-111">Es wird gezeigt, wie eine Klasse implementieren, die eine Zahl ein, um zu bestimmen, ob Primzahl testet.</span><span class="sxs-lookup"><span data-stu-id="8033f-111">It shows how to implement a class that tests a number to determine whether it is prime.</span></span> <span data-ttu-id="8033f-112">In dieser Berechnung kann zeitaufwändig sein, sodass es in einem separaten Thread ausgeführt wird.</span><span class="sxs-lookup"><span data-stu-id="8033f-112">This calculation can be time consuming, so it is done on a separate thread.</span></span> <span data-ttu-id="8033f-113">Statusberichte, inkrementelle Ergebnisse und Abschluss Benachrichtigungen behandelt, durch die <xref:System.ComponentModel.AsyncOperation> -Klasse, die sicherstellt, dass die Ereignishandler des Clients auf den richtigen Thread oder Kontext aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="8033f-113">Progress reports, incremental results, and completion notifications are handled by the <xref:System.ComponentModel.AsyncOperation> class, which ensures that the client's event handlers are called on the proper thread or context.</span></span>  
  
 <span data-ttu-id="8033f-114">Eine vollständige Codebeispiel finden Sie unter [wie: implementieren eine Komponente, die das ereignisbasierte asynchrone Muster unterstützt](http://msdn.microsoft.com/library/3c1aa4d4-da87-4a03-b812-3d167b8c57cf).</span><span class="sxs-lookup"><span data-stu-id="8033f-114">For a full code listing, see [How to: Implement a Component That Supports the Event-based Asynchronous Pattern](http://msdn.microsoft.com/library/3c1aa4d4-da87-4a03-b812-3d167b8c57cf).</span></span> <span data-ttu-id="8033f-115">Eine vollständige Codeliste eines Formulars Client finden Sie unter [Vorgehensweise: Implementieren eines Clients des ereignisbasierten asynchronen Musters](~/docs/standard/asynchronous-programming-patterns/how-to-implement-a-client-of-the-event-based-asynchronous-pattern.md).</span><span class="sxs-lookup"><span data-stu-id="8033f-115">For a full code listing of a client form, see [How to: Implement a Client of the Event-based Asynchronous Pattern](~/docs/standard/asynchronous-programming-patterns/how-to-implement-a-client-of-the-event-based-asynchronous-pattern.md).</span></span>  
  
 [!code-csharp[System.ComponentModel.AsyncOperationManager#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.AsyncOperationManager/CS/primenumbercalculatormain.cs#3)]
 [!code-vb[System.ComponentModel.AsyncOperationManager#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.AsyncOperationManager/VB/primenumbercalculatormain.vb#3)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.AsyncOperation" />
  </Docs>
  <Members>
    <Member MemberName="CreateOperation">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.AsyncOperation CreateOperation (object userSuppliedState);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.AsyncOperation CreateOperation(object userSuppliedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.AsyncOperationManager.CreateOperation(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateOperation (userSuppliedState As Object) As AsyncOperation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::AsyncOperation ^ CreateOperation(System::Object ^ userSuppliedState);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.EventBasedAsync</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.AsyncOperation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userSuppliedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="userSuppliedState"><span data-ttu-id="8033f-116">Ein Objekt, das dazu verwendet wird, einem bestimmten asynchronen Vorgang einen Bestandteil des Clientzustands, z. B. eine Aufgaben-ID, zuzuordnen.</span><span class="sxs-lookup"><span data-stu-id="8033f-116">An object used to associate a piece of client state, such as a task ID, with a particular asynchronous operation.</span></span></param>
        <summary><span data-ttu-id="8033f-117">Gibt für die Überwachung der Dauer eines bestimmten asynchronen Vorgangs eine <see cref="T:System.ComponentModel.AsyncOperation" /> zurück.</span><span class="sxs-lookup"><span data-stu-id="8033f-117">Returns an <see cref="T:System.ComponentModel.AsyncOperation" /> for tracking the duration of a particular asynchronous operation.</span></span></summary>
        <returns><span data-ttu-id="8033f-118">Eine <see cref="T:System.ComponentModel.AsyncOperation" />, die Sie verwenden können, um die Dauer eines asynchronen Methodenaufrufs zu verfolgen.</span><span class="sxs-lookup"><span data-stu-id="8033f-118">An <see cref="T:System.ComponentModel.AsyncOperation" /> that you can use to track the duration of an asynchronous method invocation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8033f-119">Die <xref:System.ComponentModel.AsyncOperationManager.CreateOperation%2A> Methode gibt ein <xref:System.ComponentModel.AsyncOperation?displayProperty=nameWithType> , die Sie verwenden können, um die Dauer eines bestimmten asynchronen Vorgangs nachzuverfolgen und um das Anwendungsmodell zu warnen, wenn der Vorgang abgeschlossen ist.</span><span class="sxs-lookup"><span data-stu-id="8033f-119">The <xref:System.ComponentModel.AsyncOperationManager.CreateOperation%2A> method returns an <xref:System.ComponentModel.AsyncOperation?displayProperty=nameWithType> that you can use to track the duration of a particular asynchronous operation and to alert the application model when the operation completes.</span></span> <span data-ttu-id="8033f-120">Sie können es auch verwenden, um statusaktualisierungen und inkrementelle Ergebnisse bereitstellen, ohne dass den Vorgang beendet.</span><span class="sxs-lookup"><span data-stu-id="8033f-120">You can also use it to post progress updates and incremental results without terminating the operation.</span></span> <span data-ttu-id="8033f-121">Die <xref:System.ComponentModel.AsyncOperation?displayProperty=nameWithType> marshallt diese Aufrufe an den entsprechenden Thread oder Kontext für das Anwendungsmodell ordnungsgemäß.</span><span class="sxs-lookup"><span data-stu-id="8033f-121">The <xref:System.ComponentModel.AsyncOperation?displayProperty=nameWithType> will correctly marshal these calls to the appropriate thread or context for the application model.</span></span>  
  
 <span data-ttu-id="8033f-122">Wenn Sie eine Klasse, die das ereignisbasierte asynchrone Muster unterstützt implementieren, sollte Ihre Klasse nicht aufrufen <xref:System.ComponentModel.AsyncOperationManager.CreateOperation%2A> jedes Mal Ihre *MethodName* `Async` -Methode aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="8033f-122">If you implement a class that supports the Event-based Asynchronous Pattern, your class should call <xref:System.ComponentModel.AsyncOperationManager.CreateOperation%2A> each time your *MethodName*`Async` method is called.</span></span> <span data-ttu-id="8033f-123">Können Sie die Clientanwendung, die Aufrufe der Methode stellt der `userSuppliedState` Parameter zur eindeutigen Identifizierung jeder Aufruf, um Ereignisse, die ausgelöst wird, während der Ausführung des asynchronen Vorgangs zu unterscheiden.</span><span class="sxs-lookup"><span data-stu-id="8033f-123">The client application that makes calls to the method can use the `userSuppliedState` parameter to uniquely identify each invocation, so as to distinguish events raised during the execution of the asynchronous operation.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="8033f-124">Clientcode bereitstellen, muss einen eindeutigen Wert für die `userSuppliedState` Parameter.</span><span class="sxs-lookup"><span data-stu-id="8033f-124">Client code must provide a unique value for the `userSuppliedState` parameter.</span></span> <span data-ttu-id="8033f-125">Nicht eindeutige Aufgaben-IDs kann dazu führen, dass Ihre Implementierung fälschlicherweise Berichte zu Fortschritt und andere Ereignisse erstellt.</span><span class="sxs-lookup"><span data-stu-id="8033f-125">Non-unique task IDs may cause your implementation to report progress and other events incorrectly.</span></span> <span data-ttu-id="8033f-126">Der Code sollte für eine nicht eindeutige Aufgaben-ID überprüfen und lösen eine <xref:System.ArgumentException?displayProperty=nameWithType> eine erkannt wird.</span><span class="sxs-lookup"><span data-stu-id="8033f-126">Your code should check for a non-unique task ID and throw an <xref:System.ArgumentException?displayProperty=nameWithType> if one is detected.</span></span>  
  
 <span data-ttu-id="8033f-127">Code nachverfolgen muss jede <xref:System.ComponentModel.AsyncOperation?displayProperty=nameWithType> zurückgegebenes <xref:System.ComponentModel.AsyncOperationManager.CreateOperation%2A> und verwenden Sie das Objekt in den entsprechenden zugrunde liegenden asynchronen Vorgang, um Updates nach dem und beenden den Vorgang.</span><span class="sxs-lookup"><span data-stu-id="8033f-127">Your code should track every <xref:System.ComponentModel.AsyncOperation?displayProperty=nameWithType> returned by <xref:System.ComponentModel.AsyncOperationManager.CreateOperation%2A> and use the object in the corresponding underlying asynchronous operation to post updates and terminate the operation.</span></span> <span data-ttu-id="8033f-128">Dieses Nachverfolgen kann so einfach wie das Übergeben der <xref:System.ComponentModel.AsyncOperation?displayProperty=nameWithType> als Parameter für den Delegaten.</span><span class="sxs-lookup"><span data-stu-id="8033f-128">This tracking can be as simple as passing the <xref:System.ComponentModel.AsyncOperation?displayProperty=nameWithType> as a parameter among delegates.</span></span> <span data-ttu-id="8033f-129">In anspruchsvolleren Entwürfe kann die Klasse eine Auflistung von verwalten <xref:System.ComponentModel.AsyncOperation?displayProperty=nameWithType> Objekten, Hinzufügen von Objekten aus, wenn Tasks gestartet werden, und Sie sie entfernen, wenn Aufgaben abgeschlossen oder abgebrochen werden.</span><span class="sxs-lookup"><span data-stu-id="8033f-129">In more sophisticated designs, your class can maintain a collection of <xref:System.ComponentModel.AsyncOperation?displayProperty=nameWithType> objects, adding objects when tasks are started and removing them when tasks are completed or canceled.</span></span> <span data-ttu-id="8033f-130">Diese Vorgehensweise ermöglicht es Ihnen zu suchende eindeutige `userSuppliedState` Parameter Werte, und stellt die Methode, die Sie beim Arbeiten mit Klassen, die mehrere gleichzeitige Aufrufe unterstützt verwenden sollten.</span><span class="sxs-lookup"><span data-stu-id="8033f-130">This approach allows you to check for unique `userSuppliedState` parameter values, and is the method you should use when working with classes that support multiple concurrent invocations.</span></span>  
  
 <span data-ttu-id="8033f-131">Weitere Informationen zu asynchrone Klassen implementieren, finden Sie unter [das ereignisbasierte asynchrone Muster implementieren](~/docs/standard/asynchronous-programming-patterns/implementing-the-event-based-asynchronous-pattern.md).</span><span class="sxs-lookup"><span data-stu-id="8033f-131">For more information about implementing asynchronous classes, see [Implementing the Event-based Asynchronous Pattern](~/docs/standard/asynchronous-programming-patterns/implementing-the-event-based-asynchronous-pattern.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8033f-132">Das folgende Codebeispiel veranschaulicht die Verwendung der <xref:System.ComponentModel.AsyncOperationManager.CreateOperation%2A> Methode zum Erstellen einer <xref:System.ComponentModel.AsyncOperation?displayProperty=nameWithType> für die Überwachung der Dauer von asynchronen Vorgängen.</span><span class="sxs-lookup"><span data-stu-id="8033f-132">The following code example demonstrates using the <xref:System.ComponentModel.AsyncOperationManager.CreateOperation%2A> method to create an <xref:System.ComponentModel.AsyncOperation?displayProperty=nameWithType> for tracking the duration of asynchronous operations.</span></span> <span data-ttu-id="8033f-133">Dieses Codebeispiel ist Teil eines umfangreicheren Beispiels für die <xref:System.ComponentModel.AsyncOperationManager> Klasse.</span><span class="sxs-lookup"><span data-stu-id="8033f-133">This code example is part of a larger example provided for the <xref:System.ComponentModel.AsyncOperationManager> class.</span></span>  
  
 [!code-csharp[System.ComponentModel.AsyncOperationManager#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.AsyncOperationManager/CS/primenumbercalculatormain.cs#3)]
 [!code-vb[System.ComponentModel.AsyncOperationManager#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.AsyncOperationManager/VB/primenumbercalculatormain.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.AsyncOperation" />
      </Docs>
    </Member>
    <Member MemberName="SynchronizationContext">
      <MemberSignature Language="C#" Value="public static System.Threading.SynchronizationContext SynchronizationContext { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Threading.SynchronizationContext SynchronizationContext" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.AsyncOperationManager.SynchronizationContext" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property SynchronizationContext As SynchronizationContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Threading::SynchronizationContext ^ SynchronizationContext { System::Threading::SynchronizationContext ^ get(); void set(System::Threading::SynchronizationContext ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.EventBasedAsync</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.SynchronizationContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8033f-134">Ruft den Synchronisierungskontext für den asynchronen Vorgang ab oder legt diesen fest.</span><span class="sxs-lookup"><span data-stu-id="8033f-134">Gets or sets the synchronization context for the asynchronous operation.</span></span></summary>
        <value><span data-ttu-id="8033f-135">Der Synchronisierungskontext für den asynchronen Vorgang.</span><span class="sxs-lookup"><span data-stu-id="8033f-135">The synchronization context for the asynchronous operation.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8033f-136">Die standardmäßige Implementierung ist die Freethread-Implementierung.</span><span class="sxs-lookup"><span data-stu-id="8033f-136">The default implementation is the free-threaded implementation.</span></span>  
  
 <span data-ttu-id="8033f-137">Ein Thread festlegen, sollten die <xref:System.ComponentModel.AsyncOperationManager.SynchronizationContext%2A> Eigenschaft, um `null` freizugeben Freethread-Factory erfolgt, da andernfalls die Factory wird nie freigegeben werden.</span><span class="sxs-lookup"><span data-stu-id="8033f-137">A thread should set the <xref:System.ComponentModel.AsyncOperationManager.SynchronizationContext%2A> property to `null` to release the free-threaded factory when it is done, or else its factory will never be disposed.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.NamedPermissionSet"><span data-ttu-id="8033f-138">zum Festlegen des Synchronisierungskontexts.</span><span class="sxs-lookup"><span data-stu-id="8033f-138">for setting the synchronization context.</span></span> <span data-ttu-id="8033f-139">"Demand"-Wert: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</span><span class="sxs-lookup"><span data-stu-id="8033f-139">Demand value: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</span></span> <span data-ttu-id="8033f-140">Zugeordneten Zustand:</span><span class="sxs-lookup"><span data-stu-id="8033f-140">Associated state:</span></span></permission>
      </Docs>
    </Member>
  </Members>
</Type>