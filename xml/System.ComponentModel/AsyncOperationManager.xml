<Type Name="AsyncOperationManager" FullName="System.ComponentModel.AsyncOperationManager">
  <Metadata><Meta Name="ms.openlocfilehash" Value="27aeec9aa84f0d03a7e7d03db698353358c5efd4" /><Meta Name="ms.sourcegitcommit" Value="a8ff98b48bda124cfcb2605f5da9b21bc6dcd791" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="02/14/2020" /><Meta Name="ms.locfileid" Value="77231004" /></Metadata><TypeSignature Language="C#" Value="public static class AsyncOperationManager" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit AsyncOperationManager extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.AsyncOperationManager" />
  <TypeSignature Language="VB.NET" Value="Public Class AsyncOperationManager" />
  <TypeSignature Language="C++ CLI" Value="public ref class AsyncOperationManager abstract sealed" />
  <TypeSignature Language="F#" Value="type AsyncOperationManager = class" />
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.EventBasedAsync</AssemblyName>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.2.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="d79a3-101">Stellt Nebenläufigkeitsverwaltung für Klassen bereit, die asynchrone Methodenaufrufe unterstützen.</span><span class="sxs-lookup"><span data-stu-id="d79a3-101">Provides concurrency management for classes that support asynchronous method calls.</span></span> <span data-ttu-id="d79a3-102">Diese Klasse kann nicht vererbt werden.</span><span class="sxs-lookup"><span data-stu-id="d79a3-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d79a3-103">Wenn Ihre Klasse ein asynchrones Verhalten gemäß der [Übersicht über das ereignisbasierte asynchrone Muster](~/docs/standard/asynchronous-programming-patterns/event-based-asynchronous-pattern-overview.md)bereitstellen muss, treten einige Probleme bei der Parallelitäts Verwaltung auf.</span><span class="sxs-lookup"><span data-stu-id="d79a3-103">If your class needs to provide asynchronous behavior according to the [Event-based Asynchronous Pattern Overview](~/docs/standard/asynchronous-programming-patterns/event-based-asynchronous-pattern-overview.md), you will encounter a number of concurrency management issues.</span></span> <span data-ttu-id="d79a3-104">Unter diesen Voraussetzungen muss sichergestellt werden, dass Ereignishandler in einem Thread oder Kontext aufgerufen werden, der für das Anwendungsmodell geeignet ist (z. b. Windows Forms Anwendungen, [!INCLUDE[vstecasp](~/includes/vstecasp-md.md)] Anwendungen, Konsolen Anwendungen usw.).</span><span class="sxs-lookup"><span data-stu-id="d79a3-104">Among these is the requirement to ensure that event handlers are called on a thread or context that is appropriate for the application model (for example, Windows Forms applications, [!INCLUDE[vstecasp](~/includes/vstecasp-md.md)] applications, console applications, and so on).</span></span> <span data-ttu-id="d79a3-105">Der <xref:System.ComponentModel.AsyncOperationManager> stellt eine bequeme Möglichkeit zum Erstellen einer Klasse bereit, die unter allen Anwendungs Modellen, die vom [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]unterstützt werden, ordnungsgemäß ausgeführt wird.</span><span class="sxs-lookup"><span data-stu-id="d79a3-105">The <xref:System.ComponentModel.AsyncOperationManager> provides a convenient way to create a class that runs properly under all application models supported by the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span>  
  
 <span data-ttu-id="d79a3-106">Die <xref:System.ComponentModel.AsyncOperationManager>-Klasse verfügt über eine Methode, <xref:System.ComponentModel.AsyncOperationManager.CreateOperation%2A>, die eine <xref:System.ComponentModel.AsyncOperation?displayProperty=nameWithType> zurückgibt, die zum Nachverfolgen der Dauer einer bestimmten asynchronen Aufgabe verwendet werden kann.</span><span class="sxs-lookup"><span data-stu-id="d79a3-106">The <xref:System.ComponentModel.AsyncOperationManager> class has one method, <xref:System.ComponentModel.AsyncOperationManager.CreateOperation%2A>, which returns an <xref:System.ComponentModel.AsyncOperation?displayProperty=nameWithType> that can be used to track the duration of a particular asynchronous task.</span></span> <span data-ttu-id="d79a3-107">Die <xref:System.ComponentModel.AsyncOperation?displayProperty=nameWithType> für eine Aufgabe kann verwendet werden, um Clients zu warnen, wenn eine Aufgabe abgeschlossen ist.</span><span class="sxs-lookup"><span data-stu-id="d79a3-107">The <xref:System.ComponentModel.AsyncOperation?displayProperty=nameWithType> for a task can be used to alert clients when a task completes.</span></span> <span data-ttu-id="d79a3-108">Sie kann auch verwendet werden, um Statusaktualisierungen und inkrementelle Ergebnisse zu veröffentlichen, ohne den Vorgang zu beenden.</span><span class="sxs-lookup"><span data-stu-id="d79a3-108">It can also be used to post progress updates and incremental results without terminating the operation.</span></span>  
  
 <span data-ttu-id="d79a3-109">Weitere Informationen zum Implementieren von asynchronen Klassen finden Sie unter [Implementieren des ereignisbasierten asynchronen Musters](~/docs/standard/asynchronous-programming-patterns/implementing-the-event-based-asynchronous-pattern.md).</span><span class="sxs-lookup"><span data-stu-id="d79a3-109">For more information about implementing asynchronous classes, see [Implementing the Event-based Asynchronous Pattern](~/docs/standard/asynchronous-programming-patterns/implementing-the-event-based-asynchronous-pattern.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d79a3-110">Im folgenden Codebeispiel wird die Verwendung der <xref:System.ComponentModel.AsyncOperationManager>-Klasse zum Erstellen einer Klasse veranschaulicht, die asynchrone Vorgänge für ein beliebiges Anwendungsmodell unterstützt.</span><span class="sxs-lookup"><span data-stu-id="d79a3-110">The following code example demonstrates using the <xref:System.ComponentModel.AsyncOperationManager> class to create a class that supports asynchronous operations for any application model.</span></span> <span data-ttu-id="d79a3-111">Es zeigt, wie eine Klasse implementiert wird, die eine Zahl testet, um zu bestimmen, ob Sie eine Primzahl ist.</span><span class="sxs-lookup"><span data-stu-id="d79a3-111">It shows how to implement a class that tests a number to determine whether it is prime.</span></span> <span data-ttu-id="d79a3-112">Diese Berechnung kann zeitaufwändig sein, sodass Sie in einem separaten Thread erfolgt.</span><span class="sxs-lookup"><span data-stu-id="d79a3-112">This calculation can be time consuming, so it is done on a separate thread.</span></span> <span data-ttu-id="d79a3-113">Statusberichte, inkrementelle Ergebnisse und Abschluss Benachrichtigungen werden von der <xref:System.ComponentModel.AsyncOperation>-Klasse behandelt, wodurch sichergestellt wird, dass die Ereignishandler des Clients im richtigen Thread oder Kontext aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="d79a3-113">Progress reports, incremental results, and completion notifications are handled by the <xref:System.ComponentModel.AsyncOperation> class, which ensures that the client's event handlers are called on the proper thread or context.</span></span>  
  
 <span data-ttu-id="d79a3-114">Eine vollständige Code Auflistung finden Sie unter Gewusst [wie: Implementieren einer Komponente, die das ereignisbasierte asynchrone Muster unterstützt](https://msdn.microsoft.com/library/3c1aa4d4-da87-4a03-b812-3d167b8c57cf).</span><span class="sxs-lookup"><span data-stu-id="d79a3-114">For a full code listing, see [How to: Implement a Component That Supports the Event-based Asynchronous Pattern](https://msdn.microsoft.com/library/3c1aa4d4-da87-4a03-b812-3d167b8c57cf).</span></span> <span data-ttu-id="d79a3-115">Eine vollständige Code Auflistung eines Client Formulars finden Sie unter Gewusst [wie: Implementieren eines Clients des ereignisbasierten asynchronen Musters](~/docs/standard/asynchronous-programming-patterns/how-to-implement-a-client-of-the-event-based-asynchronous-pattern.md).</span><span class="sxs-lookup"><span data-stu-id="d79a3-115">For a full code listing of a client form, see [How to: Implement a Client of the Event-based Asynchronous Pattern](~/docs/standard/asynchronous-programming-patterns/how-to-implement-a-client-of-the-event-based-asynchronous-pattern.md).</span></span>  
  
 [!code-csharp[System.ComponentModel.AsyncOperationManager#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.AsyncOperationManager/CS/primenumbercalculatormain.cs#3)]
 [!code-vb[System.ComponentModel.AsyncOperationManager#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.AsyncOperationManager/VB/primenumbercalculatormain.vb#3)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.AsyncOperation" />
    <related type="Article" href="https://msdn.microsoft.com/library/43402d19-8d30-426d-8785-1a4478233bfa"><span data-ttu-id="d79a3-116">Implementieren des ereignisbasierten asynchronen Entwurfsmusters</span><span class="sxs-lookup"><span data-stu-id="d79a3-116">Implementing the Event-based Asynchronous Pattern</span></span></related>
    <related type="Article" href="https://msdn.microsoft.com/library/e51988e7-7f4b-4646-a06d-1416cee8d557"><span data-ttu-id="d79a3-117">Empfohlene Vorgehensweise für das verwaltete Threading</span><span class="sxs-lookup"><span data-stu-id="d79a3-117">Managed Threading Best Practices</span></span></related>
  </Docs>
  <Members>
    <Member MemberName="CreateOperation">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.AsyncOperation CreateOperation (object userSuppliedState);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.AsyncOperation CreateOperation(object userSuppliedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.AsyncOperationManager.CreateOperation(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateOperation (userSuppliedState As Object) As AsyncOperation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::AsyncOperation ^ CreateOperation(System::Object ^ userSuppliedState);" />
      <MemberSignature Language="F#" Value="static member CreateOperation : obj -&gt; System.ComponentModel.AsyncOperation" Usage="System.ComponentModel.AsyncOperationManager.CreateOperation userSuppliedState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.EventBasedAsync</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.AsyncOperation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userSuppliedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="userSuppliedState"><span data-ttu-id="d79a3-118">Ein Objekt, das dazu verwendet wird, einem bestimmten asynchronen Vorgang einen Bestandteil des Clientzustands, z. B. eine Aufgaben-ID, zuzuordnen.</span><span class="sxs-lookup"><span data-stu-id="d79a3-118">An object used to associate a piece of client state, such as a task ID, with a particular asynchronous operation.</span></span></param>
        <summary><span data-ttu-id="d79a3-119">Gibt für die Überwachung der Dauer eines bestimmten asynchronen Vorgangs eine <see cref="T:System.ComponentModel.AsyncOperation" /> zurück.</span><span class="sxs-lookup"><span data-stu-id="d79a3-119">Returns an <see cref="T:System.ComponentModel.AsyncOperation" /> for tracking the duration of a particular asynchronous operation.</span></span></summary>
        <returns><span data-ttu-id="d79a3-120">Eine <see cref="T:System.ComponentModel.AsyncOperation" />, die Sie verwenden können, um die Dauer eines asynchronen Methodenaufrufs zu verfolgen.</span><span class="sxs-lookup"><span data-stu-id="d79a3-120">An <see cref="T:System.ComponentModel.AsyncOperation" /> that you can use to track the duration of an asynchronous method invocation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d79a3-121">Die <xref:System.ComponentModel.AsyncOperationManager.CreateOperation%2A>-Methode gibt eine <xref:System.ComponentModel.AsyncOperation?displayProperty=nameWithType> zurück, mit der Sie die Dauer eines bestimmten asynchronen Vorgangs verfolgen und das Anwendungsmodell Benachrichtigen können, wenn der Vorgang abgeschlossen ist.</span><span class="sxs-lookup"><span data-stu-id="d79a3-121">The <xref:System.ComponentModel.AsyncOperationManager.CreateOperation%2A> method returns an <xref:System.ComponentModel.AsyncOperation?displayProperty=nameWithType> that you can use to track the duration of a particular asynchronous operation and to alert the application model when the operation completes.</span></span> <span data-ttu-id="d79a3-122">Sie können Sie auch verwenden, um Statusaktualisierungen und inkrementelle Ergebnisse zu veröffentlichen, ohne den Vorgang zu beenden.</span><span class="sxs-lookup"><span data-stu-id="d79a3-122">You can also use it to post progress updates and incremental results without terminating the operation.</span></span> <span data-ttu-id="d79a3-123">Die <xref:System.ComponentModel.AsyncOperation?displayProperty=nameWithType> werden diese Aufrufe ordnungsgemäß in den entsprechenden Thread oder Kontext für das Anwendungsmodell Mars Hallen.</span><span class="sxs-lookup"><span data-stu-id="d79a3-123">The <xref:System.ComponentModel.AsyncOperation?displayProperty=nameWithType> will correctly marshal these calls to the appropriate thread or context for the application model.</span></span>  
  
 <span data-ttu-id="d79a3-124">Wenn Sie eine Klasse implementieren, die das ereignisbasierte asynchrone Muster unterstützt, sollte die Klasse <xref:System.ComponentModel.AsyncOperationManager.CreateOperation%2A> jedes Mal aufrufen, wenn die *MethodName*`Async`-Methode aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="d79a3-124">If you implement a class that supports the Event-based Asynchronous Pattern, your class should call <xref:System.ComponentModel.AsyncOperationManager.CreateOperation%2A> each time your *MethodName*`Async` method is called.</span></span> <span data-ttu-id="d79a3-125">Die Client Anwendung, die Aufrufe an die-Methode ausführt, kann den `userSuppliedState`-Parameter verwenden, um jeden Aufruf eindeutig zu identifizieren, um Ereignisse zu unterscheiden, die während der Ausführung des asynchronen Vorgangs ausgelöst werden.</span><span class="sxs-lookup"><span data-stu-id="d79a3-125">The client application that makes calls to the method can use the `userSuppliedState` parameter to uniquely identify each invocation, so as to distinguish events raised during the execution of the asynchronous operation.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="d79a3-126">Client Code muss einen eindeutigen Wert für den `userSuppliedState`-Parameter angeben.</span><span class="sxs-lookup"><span data-stu-id="d79a3-126">Client code must provide a unique value for the `userSuppliedState` parameter.</span></span> <span data-ttu-id="d79a3-127">Nicht eindeutige Aufgaben-IDs können dazu führen, dass Ihre Implementierung den Fortschritt und andere Ereignisse falsch meldet.</span><span class="sxs-lookup"><span data-stu-id="d79a3-127">Non-unique task IDs may cause your implementation to report progress and other events incorrectly.</span></span> <span data-ttu-id="d79a3-128">Der Code sollte eine nicht eindeutige Aufgaben-ID überprüfen und eine <xref:System.ArgumentException?displayProperty=nameWithType> auslösen, wenn eine solche ID erkannt wird.</span><span class="sxs-lookup"><span data-stu-id="d79a3-128">Your code should check for a non-unique task ID and throw an <xref:System.ArgumentException?displayProperty=nameWithType> if one is detected.</span></span>  
  
 <span data-ttu-id="d79a3-129">Der Code sollte alle <xref:System.ComponentModel.AsyncOperation?displayProperty=nameWithType> nachverfolgen, die von <xref:System.ComponentModel.AsyncOperationManager.CreateOperation%2A> zurückgegeben werden, und das-Objekt im entsprechenden zugrunde liegenden asynchronen Vorgang verwenden, um Updates zu veröffentlichen und den Vorgang zu beenden.</span><span class="sxs-lookup"><span data-stu-id="d79a3-129">Your code should track every <xref:System.ComponentModel.AsyncOperation?displayProperty=nameWithType> returned by <xref:System.ComponentModel.AsyncOperationManager.CreateOperation%2A> and use the object in the corresponding underlying asynchronous operation to post updates and terminate the operation.</span></span> <span data-ttu-id="d79a3-130">Diese Nachverfolgung kann so einfach sein wie das Übergeben des <xref:System.ComponentModel.AsyncOperation?displayProperty=nameWithType> als Parameter zwischen Delegaten.</span><span class="sxs-lookup"><span data-stu-id="d79a3-130">This tracking can be as simple as passing the <xref:System.ComponentModel.AsyncOperation?displayProperty=nameWithType> as a parameter among delegates.</span></span> <span data-ttu-id="d79a3-131">In anspruchsvolleren Entwürfen kann Ihre Klasse eine Auflistung von <xref:System.ComponentModel.AsyncOperation?displayProperty=nameWithType> Objekten verwalten und Objekte hinzufügen, wenn Tasks gestartet werden, und Sie entfernen, wenn Aufgaben abgeschlossen oder abgebrochen werden.</span><span class="sxs-lookup"><span data-stu-id="d79a3-131">In more sophisticated designs, your class can maintain a collection of <xref:System.ComponentModel.AsyncOperation?displayProperty=nameWithType> objects, adding objects when tasks are started and removing them when tasks are completed or canceled.</span></span> <span data-ttu-id="d79a3-132">Diese Vorgehensweise ermöglicht es Ihnen, auf eindeutige `userSuppliedState` Parameterwerte zu überprüfen, und ist die Methode, die Sie verwenden sollten, wenn Sie mit Klassenarbeiten, die mehrere gleichzeitige Aufrufe unterstützen.</span><span class="sxs-lookup"><span data-stu-id="d79a3-132">This approach allows you to check for unique `userSuppliedState` parameter values, and is the method you should use when working with classes that support multiple concurrent invocations.</span></span>  
  
 <span data-ttu-id="d79a3-133">Weitere Informationen zum Implementieren von asynchronen Klassen finden Sie unter [Implementieren des ereignisbasierten asynchronen Musters](~/docs/standard/asynchronous-programming-patterns/implementing-the-event-based-asynchronous-pattern.md).</span><span class="sxs-lookup"><span data-stu-id="d79a3-133">For more information about implementing asynchronous classes, see [Implementing the Event-based Asynchronous Pattern](~/docs/standard/asynchronous-programming-patterns/implementing-the-event-based-asynchronous-pattern.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d79a3-134">Im folgenden Codebeispiel wird die Verwendung der <xref:System.ComponentModel.AsyncOperationManager.CreateOperation%2A>-Methode zum Erstellen eines <xref:System.ComponentModel.AsyncOperation?displayProperty=nameWithType> zum Nachverfolgen der Dauer von asynchronen Vorgängen veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="d79a3-134">The following code example demonstrates using the <xref:System.ComponentModel.AsyncOperationManager.CreateOperation%2A> method to create an <xref:System.ComponentModel.AsyncOperation?displayProperty=nameWithType> for tracking the duration of asynchronous operations.</span></span> <span data-ttu-id="d79a3-135">Dieses Codebeispiel ist Teil eines größeren Beispiels, das für die <xref:System.ComponentModel.AsyncOperationManager>-Klasse bereitgestellt wird.</span><span class="sxs-lookup"><span data-stu-id="d79a3-135">This code example is part of a larger example provided for the <xref:System.ComponentModel.AsyncOperationManager> class.</span></span>  
  
 [!code-csharp[System.ComponentModel.AsyncOperationManager#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.AsyncOperationManager/CS/primenumbercalculatormain.cs#3)]
 [!code-vb[System.ComponentModel.AsyncOperationManager#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.AsyncOperationManager/VB/primenumbercalculatormain.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.AsyncOperation" />
        <related type="Article" href="https://msdn.microsoft.com/library/43402d19-8d30-426d-8785-1a4478233bfa"><span data-ttu-id="d79a3-136">Implementieren des ereignisbasierten asynchronen Entwurfsmusters</span><span class="sxs-lookup"><span data-stu-id="d79a3-136">Implementing the Event-based Asynchronous Pattern</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/e51988e7-7f4b-4646-a06d-1416cee8d557"><span data-ttu-id="d79a3-137">Empfohlene Vorgehensweise für das verwaltete Threading</span><span class="sxs-lookup"><span data-stu-id="d79a3-137">Managed Threading Best Practices</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="SynchronizationContext">
      <MemberSignature Language="C#" Value="public static System.Threading.SynchronizationContext SynchronizationContext { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Threading.SynchronizationContext SynchronizationContext" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.AsyncOperationManager.SynchronizationContext" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property SynchronizationContext As SynchronizationContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Threading::SynchronizationContext ^ SynchronizationContext { System::Threading::SynchronizationContext ^ get(); void set(System::Threading::SynchronizationContext ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SynchronizationContext : System.Threading.SynchronizationContext with get, set" Usage="System.ComponentModel.AsyncOperationManager.SynchronizationContext" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.EventBasedAsync</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1;netcore-3.1;netcore-1.0;netcore-1.1">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.SynchronizationContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d79a3-138">Ruft den Synchronisierungskontext für den asynchronen Vorgang ab oder legt diesen fest.</span><span class="sxs-lookup"><span data-stu-id="d79a3-138">Gets or sets the synchronization context for the asynchronous operation.</span></span></summary>
        <value><span data-ttu-id="d79a3-139">Der Synchronisierungskontext für den asynchronen Vorgang.</span><span class="sxs-lookup"><span data-stu-id="d79a3-139">The synchronization context for the asynchronous operation.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d79a3-140">Die Standard Implementierung ist die frei Thread Implementierung.</span><span class="sxs-lookup"><span data-stu-id="d79a3-140">The default implementation is the free-threaded implementation.</span></span>  
  
 <span data-ttu-id="d79a3-141">Ein Thread sollte die <xref:System.ComponentModel.AsyncOperationManager.SynchronizationContext%2A>-Eigenschaft auf `null` festlegen, um die frei Hand threadfactory freizugeben, wenn Sie abgeschlossen ist. andernfalls wird die Factory nie verworfen.</span><span class="sxs-lookup"><span data-stu-id="d79a3-141">A thread should set the <xref:System.ComponentModel.AsyncOperationManager.SynchronizationContext%2A> property to `null` to release the free-threaded factory when it is done, or else its factory will never be disposed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
