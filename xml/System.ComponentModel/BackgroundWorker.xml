<Type Name="BackgroundWorker" FullName="System.ComponentModel.BackgroundWorker">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="a56a6bc1571e81933cd81f1b0b7fe82fd02a4057" />
    <Meta Name="ms.sourcegitcommit" Value="9e06b87bcfa4347dbbaaa4b3cc36b43b93b5badb" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="11/20/2018" />
    <Meta Name="ms.locfileid" Value="52242966" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class BackgroundWorker : System.ComponentModel.Component" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit BackgroundWorker extends System.ComponentModel.Component" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.BackgroundWorker" />
  <TypeSignature Language="VB.NET" Value="Public Class BackgroundWorker&#xA;Inherits Component" />
  <TypeSignature Language="C++ CLI" Value="public ref class BackgroundWorker : System::ComponentModel::Component" />
  <TypeSignature Language="F#" Value="type BackgroundWorker = class&#xA;    inherit Component" />
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.EventBasedAsync</AssemblyName>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
    <BaseTypeName FrameworkAlternate="netframework-4.5">System.ComponentModel.Component</BaseTypeName>
  </Base>
  <Interfaces></Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.ComponentModel.DefaultEvent("DoWork")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="d147f-101">Führt einen Vorgang im separaten Thread aus.</span>
      <span class="sxs-lookup">
        <span data-stu-id="d147f-101">Executes an operation on a separate thread.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d147f-102">Die <xref:System.ComponentModel.BackgroundWorker> Klasse können Sie einen Vorgang in einem separaten, dedizierten Thread auszuführen.</span><span class="sxs-lookup"><span data-stu-id="d147f-102">The <xref:System.ComponentModel.BackgroundWorker> class allows you to run an operation on a separate, dedicated thread.</span></span> <span data-ttu-id="d147f-103">Zeitaufwändige Operationen wie Downloads und Datenbanktransaktionen können dazu führen, dass Ihre Benutzeroberfläche (UI) scheint, als ob er beendet wurde, reagieren, während sie ausgeführt werden.</span><span class="sxs-lookup"><span data-stu-id="d147f-103">Time-consuming operations like downloads and database transactions can cause your user interface (UI) to seem as though it has stopped responding while they are running.</span></span> <span data-ttu-id="d147f-104">Wenn Sie eine reaktionsfähige Benutzeroberfläche und lange Verzögerungen bei solchen Vorgängen vermeiden die <xref:System.ComponentModel.BackgroundWorker> Klasse bietet eine praktische Lösung.</span><span class="sxs-lookup"><span data-stu-id="d147f-104">When you want a responsive UI and you are faced with long delays associated with such operations, the <xref:System.ComponentModel.BackgroundWorker> class provides a convenient solution.</span></span>  
  
 <span data-ttu-id="d147f-105">Um einen zeitaufwändigen Vorgang im Hintergrund auszuführen, erstellen eine <xref:System.ComponentModel.BackgroundWorker> und zum Lauschen auf Ereignisse, die den Status der Operation und Signal zu melden, wenn der Vorgang abgeschlossen ist.</span><span class="sxs-lookup"><span data-stu-id="d147f-105">To execute a time-consuming operation in the background, create a <xref:System.ComponentModel.BackgroundWorker> and listen for events that report the progress of your operation and signal when your operation is finished.</span></span> <span data-ttu-id="d147f-106">Sie erstellen die <xref:System.ComponentModel.BackgroundWorker> programmgesteuert oder ziehen sie auf das Formular aus der **Komponenten** auf der Registerkarte die **Toolbox**.</span><span class="sxs-lookup"><span data-stu-id="d147f-106">You can create the <xref:System.ComponentModel.BackgroundWorker> programmatically or you can drag it onto your form from the **Components** tab of the **Toolbox**.</span></span> <span data-ttu-id="d147f-107">Bei der Erstellung der <xref:System.ComponentModel.BackgroundWorker> im Windows Forms-Designer, in der Komponentenleiste angezeigt, und seine Eigenschaften im Eigenschaftenfenster angezeigt werden.</span><span class="sxs-lookup"><span data-stu-id="d147f-107">If you create the <xref:System.ComponentModel.BackgroundWorker> in the Windows Forms Designer, it will appear in the Component Tray, and its properties will be displayed in the Properties window.</span></span>  
  
 <span data-ttu-id="d147f-108">Um eine Hintergrundoperation einzurichten, fügen Sie einen Ereignishandler für die <xref:System.ComponentModel.BackgroundWorker.DoWork> Ereignis.</span><span class="sxs-lookup"><span data-stu-id="d147f-108">To set up for a background operation, add an event handler for the <xref:System.ComponentModel.BackgroundWorker.DoWork> event.</span></span> <span data-ttu-id="d147f-109">Rufen Sie den zeitaufwändigen Vorgang in diesem Ereignishandler ein.</span><span class="sxs-lookup"><span data-stu-id="d147f-109">Call your time-consuming operation in this event handler.</span></span> <span data-ttu-id="d147f-110">Um den Vorgang zu starten, rufen <xref:System.ComponentModel.BackgroundWorker.RunWorkerAsync%2A>.</span><span class="sxs-lookup"><span data-stu-id="d147f-110">To start the operation, call <xref:System.ComponentModel.BackgroundWorker.RunWorkerAsync%2A>.</span></span> <span data-ttu-id="d147f-111">Um Benachrichtigungen von statusaktualisierungen zu empfangen, verarbeiten die <xref:System.ComponentModel.BackgroundWorker.ProgressChanged> Ereignis.</span><span class="sxs-lookup"><span data-stu-id="d147f-111">To receive notifications of progress updates, handle the <xref:System.ComponentModel.BackgroundWorker.ProgressChanged> event.</span></span> <span data-ttu-id="d147f-112">Um eine Benachrichtigung zu erhalten, wenn der Vorgang abgeschlossen ist, behandelt der <xref:System.ComponentModel.BackgroundWorker.RunWorkerCompleted> Ereignis.</span><span class="sxs-lookup"><span data-stu-id="d147f-112">To receive a notification when the operation is completed, handle the <xref:System.ComponentModel.BackgroundWorker.RunWorkerCompleted> event.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d147f-113">Achten Sie nicht zum Bearbeiten von UI-Objekte in Ihrem <xref:System.ComponentModel.BackgroundWorker.DoWork> -Ereignishandler.</span><span class="sxs-lookup"><span data-stu-id="d147f-113">You must be careful not to manipulate any user-interface objects in your <xref:System.ComponentModel.BackgroundWorker.DoWork> event handler.</span></span> <span data-ttu-id="d147f-114">Kommunizieren Sie stattdessen mit der Benutzeroberfläche, über die <xref:System.ComponentModel.BackgroundWorker.ProgressChanged> und <xref:System.ComponentModel.BackgroundWorker.RunWorkerCompleted> Ereignisse.</span><span class="sxs-lookup"><span data-stu-id="d147f-114">Instead, communicate to the user interface through the <xref:System.ComponentModel.BackgroundWorker.ProgressChanged> and <xref:System.ComponentModel.BackgroundWorker.RunWorkerCompleted> events.</span></span>  
>   
>  <span data-ttu-id="d147f-115"><xref:System.ComponentModel.BackgroundWorker> Ereignisse werden nicht über gemarshallt <xref:System.AppDomain> Grenzen.</span><span class="sxs-lookup"><span data-stu-id="d147f-115"><xref:System.ComponentModel.BackgroundWorker> events are not marshaled across <xref:System.AppDomain> boundaries.</span></span> <span data-ttu-id="d147f-116">Verwenden Sie keine <xref:System.ComponentModel.BackgroundWorker> Komponente auszuführenden Vorgänge mit mehreren Threads in mehr als einer <xref:System.AppDomain>.</span><span class="sxs-lookup"><span data-stu-id="d147f-116">Do not use a <xref:System.ComponentModel.BackgroundWorker> component to perform multithreaded operations in more than one <xref:System.AppDomain>.</span></span>  
  
 <span data-ttu-id="d147f-117">Wenn der Hintergrundvorgang Parameter erfordert, rufen Sie <xref:System.ComponentModel.BackgroundWorker.RunWorkerAsync%2A> mit dem-Parameter.</span><span class="sxs-lookup"><span data-stu-id="d147f-117">If your background operation requires a parameter, call <xref:System.ComponentModel.BackgroundWorker.RunWorkerAsync%2A> with your parameter.</span></span> <span data-ttu-id="d147f-118">In der <xref:System.ComponentModel.BackgroundWorker.DoWork> -Ereignishandler können Sie den Parameter aus Extrahieren der <xref:System.ComponentModel.DoWorkEventArgs.Argument%2A?displayProperty=nameWithType> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="d147f-118">Inside the <xref:System.ComponentModel.BackgroundWorker.DoWork> event handler, you can extract the parameter from the <xref:System.ComponentModel.DoWorkEventArgs.Argument%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="d147f-119">Weitere Informationen zu <xref:System.ComponentModel.BackgroundWorker> finden Sie unter [Gewusst wie: Ausführen eines Vorgangs im Hintergrund](~/docs/framework/winforms/controls/how-to-run-an-operation-in-the-background.md).</span><span class="sxs-lookup"><span data-stu-id="d147f-119">For more information about <xref:System.ComponentModel.BackgroundWorker>, see [How to: Run an Operation in the Background](~/docs/framework/winforms/controls/how-to-run-an-operation-in-the-background.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d147f-120">Im folgenden Codebeispiel wird veranschaulicht, die Grundlagen der <xref:System.ComponentModel.BackgroundWorker> -Klasse für einen zeitaufwändigen Vorgang, der asynchron ausgeführt.</span><span class="sxs-lookup"><span data-stu-id="d147f-120">The following code example demonstrates the basics of the <xref:System.ComponentModel.BackgroundWorker> class for executing a time-consuming operation asynchronously.</span></span> <span data-ttu-id="d147f-121">Die folgende Abbildung zeigt ein Beispiel der Ausgabe.</span><span class="sxs-lookup"><span data-stu-id="d147f-121">The following illustration shows an example of the output.</span></span>  
  
 <span data-ttu-id="d147f-122">![Einfaches Beispiel für BackgroundWorker](~/add/media/backgroundworker-simple.png "einfaches Beispiel für BackgroundWorker")</span><span class="sxs-lookup"><span data-stu-id="d147f-122">![BackgroundWorker simple example](~/add/media/backgroundworker-simple.png "BackgroundWorker simple example")</span></span>  
  
 <span data-ttu-id="d147f-123">Um diesen Code zu testen, erstellen Sie eine Windows Forms-Anwendung.</span><span class="sxs-lookup"><span data-stu-id="d147f-123">To try this code, create a Windows Forms application.</span></span> <span data-ttu-id="d147f-124">Hinzufügen einer <xref:System.Windows.Forms.Label> Steuerelement mit dem Namen `resultLabel` und Hinzufügen von zwei <xref:System.Windows.Forms.Button> -Steuerelemente namens `startAsyncButton` und `cancelAsyncButton`.</span><span class="sxs-lookup"><span data-stu-id="d147f-124">Add a <xref:System.Windows.Forms.Label> control named `resultLabel` and add two <xref:System.Windows.Forms.Button> controls named `startAsyncButton` and `cancelAsyncButton`.</span></span> <span data-ttu-id="d147f-125">Erstellen Sie <xref:System.Windows.Forms.Control.Click> -Ereignishandlern für beide Schaltflächen.</span><span class="sxs-lookup"><span data-stu-id="d147f-125">Create <xref:System.Windows.Forms.Control.Click> event handlers for both buttons.</span></span> <span data-ttu-id="d147f-126">Von der **Komponenten** Registerkarte der Toolbox hinzufügen einer <xref:System.ComponentModel.BackgroundWorker> Komponente, die mit dem Namen `backgroundWorker1`.</span><span class="sxs-lookup"><span data-stu-id="d147f-126">From the **Components** tab of the Toolbox, add a <xref:System.ComponentModel.BackgroundWorker> component named `backgroundWorker1`.</span></span> <span data-ttu-id="d147f-127">Erstellen Sie <xref:System.ComponentModel.BackgroundWorker.DoWork>, <xref:System.ComponentModel.BackgroundWorker.ProgressChanged>, und <xref:System.ComponentModel.BackgroundWorker.RunWorkerCompleted> -Ereignishandlern für die <xref:System.ComponentModel.BackgroundWorker>.</span><span class="sxs-lookup"><span data-stu-id="d147f-127">Create <xref:System.ComponentModel.BackgroundWorker.DoWork>, <xref:System.ComponentModel.BackgroundWorker.ProgressChanged>, and <xref:System.ComponentModel.BackgroundWorker.RunWorkerCompleted> event handlers for the <xref:System.ComponentModel.BackgroundWorker>.</span></span> <span data-ttu-id="d147f-128">Ersetzen Sie in den Code für das Formular den vorhandenen Code durch den folgenden Code ein.</span><span class="sxs-lookup"><span data-stu-id="d147f-128">In the code for the form, replace the existing code with the following code.</span></span>  
  
 [!code-csharp[System.ComponentModel.BackgroundWorkerSimple#1](~/samples/snippets/csharp/VS_Snippets_Winforms/system.componentmodel.backgroundworkersimple/cs/form1.cs#1)]
 [!code-vb[System.ComponentModel.BackgroundWorkerSimple#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/system.componentmodel.backgroundworkersimple/vb/form1.vb#1)]  
  
 <span data-ttu-id="d147f-129">Das folgende Codebeispiel veranschaulicht die Verwendung von der <xref:System.ComponentModel.BackgroundWorker> -Klasse für einen zeitaufwändigen Vorgang, der asynchron ausgeführt.</span><span class="sxs-lookup"><span data-stu-id="d147f-129">The following code example demonstrates the use of the <xref:System.ComponentModel.BackgroundWorker> class for executing a time-consuming operation asynchronously.</span></span> <span data-ttu-id="d147f-130">Die folgende Abbildung zeigt ein Beispiel der Ausgabe.</span><span class="sxs-lookup"><span data-stu-id="d147f-130">The following illustration shows an example of the output.</span></span>  
  
 <span data-ttu-id="d147f-131">![BackgroundWorker Fibonacci-Beispiel](~/add/media/backgroundworker-fibonacci.png "BackgroundWorker Fibonacci-Beispiel")</span><span class="sxs-lookup"><span data-stu-id="d147f-131">![BackgroundWorker Fibonacci example](~/add/media/backgroundworker-fibonacci.png "BackgroundWorker Fibonacci example")</span></span>  
  
 <span data-ttu-id="d147f-132">Der Vorgang die ausgewählten Fibonacci-Zahl berechnet, meldet statusaktualisierungen, die während der Berechnung durchgeführt wird und ermöglicht eine ausstehende Berechnung abgebrochen werden soll.</span><span class="sxs-lookup"><span data-stu-id="d147f-132">The operation computes the selected Fibonacci number, reports progress updates as the calculation proceeds, and permits a pending calculation to be canceled.</span></span>  
  
 [!code-cpp[System.ComponentModel.BackgroundWorker#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.ComponentModel.BackgroundWorker/CPP/fibonacciform.cpp#1)]
 [!code-csharp[System.ComponentModel.BackgroundWorker#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.BackgroundWorker/CS/fibonacciform.cs#1)]
 [!code-vb[System.ComponentModel.BackgroundWorker#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.BackgroundWorker/VB/fibonacciform.vb#1)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://msdn.microsoft.com/library/5b56e2aa-dc05-444f-930c-2d7b23f9ad5b">
      <span data-ttu-id="d147f-133">Gewusst wie: Ausführen eines Vorgangs im Hintergrund</span>
      <span class="sxs-lookup">
        <span data-stu-id="d147f-133">How to: Run an Operation in the Background</span>
      </span>
    </related>
    <related type="Article" href="https://msdn.microsoft.com/library/e51988e7-7f4b-4646-a06d-1416cee8d557">
      <span data-ttu-id="d147f-134">Empfohlene Vorgehensweise für das verwaltete Threading</span>
      <span class="sxs-lookup">
        <span data-stu-id="d147f-134">Managed Threading Best Practices</span>
      </span>
    </related>
    <related type="Article" href="https://msdn.microsoft.com/library/9b7bc5ae-051c-4904-9720-18f6667388bd">
      <span data-ttu-id="d147f-135">Gewusst wie: Downloaden einer Datei im Hintergrund</span>
      <span class="sxs-lookup">
        <span data-stu-id="d147f-135">How to: Download a File in the Background</span>
      </span>
    </related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BackgroundWorker ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.BackgroundWorker.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BackgroundWorker();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.EventBasedAsync</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="d147f-136">Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.BackgroundWorker" />-Klasse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d147f-136">Initializes a new instance of the <see cref="T:System.ComponentModel.BackgroundWorker" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d147f-137">Dieser Konstruktor initialisiert ein <xref:System.ComponentModel.BackgroundWorker>.</span><span class="sxs-lookup"><span data-stu-id="d147f-137">This constructor initializes a <xref:System.ComponentModel.BackgroundWorker>.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/5b56e2aa-dc05-444f-930c-2d7b23f9ad5b">
          <span data-ttu-id="d147f-138">Gewusst wie: Ausführen eines Vorgangs im Hintergrund</span>
          <span class="sxs-lookup">
            <span data-stu-id="d147f-138">How to: Run an Operation in the Background</span>
          </span>
        </related>
        <related type="Article" href="https://msdn.microsoft.com/library/9b7bc5ae-051c-4904-9720-18f6667388bd">
          <span data-ttu-id="d147f-139">Gewusst wie: Downloaden einer Datei im Hintergrund</span>
          <span class="sxs-lookup">
            <span data-stu-id="d147f-139">How to: Download a File in the Background</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="CancelAsync">
      <MemberSignature Language="C#" Value="public void CancelAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CancelAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.BackgroundWorker.CancelAsync" />
      <MemberSignature Language="VB.NET" Value="Public Sub CancelAsync ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CancelAsync();" />
      <MemberSignature Language="F#" Value="member this.CancelAsync : unit -&gt; unit" Usage="backgroundWorker.CancelAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.EventBasedAsync</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="d147f-140">Fordert das Abbrechen eines anstehenden Hintergrundvorgangs an.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d147f-140">Requests cancellation of a pending background operation.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d147f-141"><xref:System.ComponentModel.BackgroundWorker.CancelAsync%2A> sendet eine Anforderung an den anstehenden Hintergrundvorgangs und legt die <xref:System.ComponentModel.BackgroundWorker.CancellationPending%2A> Eigenschaft `true`.</span><span class="sxs-lookup"><span data-stu-id="d147f-141"><xref:System.ComponentModel.BackgroundWorker.CancelAsync%2A> submits a request to terminate the pending background operation and sets the <xref:System.ComponentModel.BackgroundWorker.CancellationPending%2A> property to `true`.</span></span>  
  
 <span data-ttu-id="d147f-142">Beim Aufruf <xref:System.ComponentModel.BackgroundWorker.CancelAsync%2A>, die Worker-Methode die Möglichkeit hat, beendet die Ausführung und beenden.</span><span class="sxs-lookup"><span data-stu-id="d147f-142">When you call <xref:System.ComponentModel.BackgroundWorker.CancelAsync%2A>, your worker method has an opportunity to stop its execution and exit.</span></span> <span data-ttu-id="d147f-143">Der Workercode sollte in regelmäßigen Abständen Prüfen der <xref:System.ComponentModel.BackgroundWorker.CancellationPending%2A> Eigenschaft, um festzustellen, ob es festgelegt wurde `true`.</span><span class="sxs-lookup"><span data-stu-id="d147f-143">The worker code should periodically check the <xref:System.ComponentModel.BackgroundWorker.CancellationPending%2A> property to see if it has been set to `true`.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="d147f-144">Beachten Sie, Ihren Code in die <xref:System.ComponentModel.BackgroundWorker.DoWork> -Ereignishandler kann seine Arbeit abgeschlossen, wie eine abbruchanforderung erfolgt, und Ihre Abrufschleife kann übersehen <xref:System.ComponentModel.BackgroundWorker.CancellationPending%2A> festgelegt `true`.</span><span class="sxs-lookup"><span data-stu-id="d147f-144">Be aware that your code in the <xref:System.ComponentModel.BackgroundWorker.DoWork> event handler may finish its work as a cancellation request is being made, and your polling loop may miss <xref:System.ComponentModel.BackgroundWorker.CancellationPending%2A> being set to `true`.</span></span> <span data-ttu-id="d147f-145">In diesem Fall die <xref:System.ComponentModel.AsyncCompletedEventArgs.Cancelled%2A> flag von <xref:System.ComponentModel.RunWorkerCompletedEventArgs?displayProperty=nameWithType> in Ihre <xref:System.ComponentModel.BackgroundWorker.RunWorkerCompleted> -Ereignishandler kann nicht festgelegt werden, um `true`, auch wenn ein Abbruch angefordert wurde.</span><span class="sxs-lookup"><span data-stu-id="d147f-145">In this case, the <xref:System.ComponentModel.AsyncCompletedEventArgs.Cancelled%2A> flag of <xref:System.ComponentModel.RunWorkerCompletedEventArgs?displayProperty=nameWithType> in your <xref:System.ComponentModel.BackgroundWorker.RunWorkerCompleted> event handler will not be set to `true`, even though a cancellation request was made.</span></span> <span data-ttu-id="d147f-146">Diese Situation wird aufgerufen, eine *Racebedingung* und ist ein häufiges Problem bei der Multithreadprogrammierung.</span><span class="sxs-lookup"><span data-stu-id="d147f-146">This situation is called a *race condition* and is a common concern in multithreaded programming.</span></span> <span data-ttu-id="d147f-147">Weitere Informationen zu multithreading entwerfen Probleme finden Sie unter [Managed Threading Best Practices](~/docs/standard/threading/managed-threading-best-practices.md).</span><span class="sxs-lookup"><span data-stu-id="d147f-147">For more information about multithreading design issues, see [Managed Threading Best Practices](~/docs/standard/threading/managed-threading-best-practices.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d147f-148">Das folgende Codebeispiel veranschaulicht die Verwendung von der <xref:System.ComponentModel.BackgroundWorker.CancelAsync%2A> Methode, um einen asynchronen ("Hintergrund")-Vorgang abzubrechen.</span><span class="sxs-lookup"><span data-stu-id="d147f-148">The following code example demonstrates the use of the <xref:System.ComponentModel.BackgroundWorker.CancelAsync%2A> method to cancel an asynchronous ("background") operation.</span></span> <span data-ttu-id="d147f-149">Dieses Codebeispiel ist Teil eines umfangreicheren Beispiels für die <xref:System.ComponentModel.BackgroundWorker> Klasse.</span><span class="sxs-lookup"><span data-stu-id="d147f-149">This code example is part of a larger example provided for the <xref:System.ComponentModel.BackgroundWorker> class.</span></span>  
  
 [!code-cpp[System.ComponentModel.BackgroundWorker#4](~/samples/snippets/cpp/VS_Snippets_Winforms/System.ComponentModel.BackgroundWorker/CPP/fibonacciform.cpp#4)]
 [!code-csharp[System.ComponentModel.BackgroundWorker#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.BackgroundWorker/CS/fibonacciform.cs#4)]
 [!code-vb[System.ComponentModel.BackgroundWorker#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.BackgroundWorker/VB/fibonacciform.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="d147f-150">
            <see cref="P:System.ComponentModel.BackgroundWorker.WorkerSupportsCancellation" /> ist <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d147f-150">
              <see cref="P:System.ComponentModel.BackgroundWorker.WorkerSupportsCancellation" /> is <see langword="false" />.</span>
          </span>
        </exception>
        <related type="Article" href="https://msdn.microsoft.com/library/5b56e2aa-dc05-444f-930c-2d7b23f9ad5b">
          <span data-ttu-id="d147f-151">Gewusst wie: Ausführen eines Vorgangs im Hintergrund</span>
          <span class="sxs-lookup">
            <span data-stu-id="d147f-151">How to: Run an Operation in the Background</span>
          </span>
        </related>
        <related type="Article" href="https://msdn.microsoft.com/library/9b7bc5ae-051c-4904-9720-18f6667388bd">
          <span data-ttu-id="d147f-152">Gewusst wie: Downloaden einer Datei im Hintergrund</span>
          <span class="sxs-lookup">
            <span data-stu-id="d147f-152">How to: Download a File in the Background</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="CancellationPending">
      <MemberSignature Language="C#" Value="public bool CancellationPending { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CancellationPending" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.BackgroundWorker.CancellationPending" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CancellationPending As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CancellationPending { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CancellationPending : bool" Usage="System.ComponentModel.BackgroundWorker.CancellationPending" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.EventBasedAsync</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d147f-153">Ruft einen Wert ab, der angibt, ob die Anwendung den Abbruch eines Hintergrundvorgangs angefordert hat.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d147f-153">Gets a value indicating whether the application has requested cancellation of a background operation.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d147f-154">
            <see langword="true" />, wenn die Anwendung den Abbruch eines Hintergrundvorgangs angefordert hat, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d147f-154">
              <see langword="true" /> if the application has requested cancellation of a background operation; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="d147f-155">Der Standardwert ist <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d147f-155">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d147f-156">Wenn <xref:System.ComponentModel.BackgroundWorker.CancellationPending%2A> ist `true`, und klicken Sie dann die <xref:System.ComponentModel.BackgroundWorker.CancelAsync%2A> Methode aufgerufen wurde, auf die <xref:System.ComponentModel.BackgroundWorker>.</span><span class="sxs-lookup"><span data-stu-id="d147f-156">If <xref:System.ComponentModel.BackgroundWorker.CancellationPending%2A> is `true`, then the <xref:System.ComponentModel.BackgroundWorker.CancelAsync%2A> method has been called on the <xref:System.ComponentModel.BackgroundWorker>.</span></span>  
  
 <span data-ttu-id="d147f-157">Diese Eigenschaft ist für die Verwendung vorgesehen, durch den Arbeitsthread, der regelmäßig prüfen sollte, <xref:System.ComponentModel.BackgroundWorker.CancellationPending%2A> und der Hintergrundvorgang abgebrochen, wenn er, um festgelegt ist `true`.</span><span class="sxs-lookup"><span data-stu-id="d147f-157">This property is meant for use by the worker thread, which should periodically check <xref:System.ComponentModel.BackgroundWorker.CancellationPending%2A> and abort the background operation when it is set to `true`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d147f-158">Das folgende Codebeispiel veranschaulicht die Verwendung von der <xref:System.ComponentModel.BackgroundWorker.CancellationPending%2A> Eigenschaft zur Abfrage einer <xref:System.ComponentModel.BackgroundWorker> Abbruchzustand.</span><span class="sxs-lookup"><span data-stu-id="d147f-158">The following code example demonstrates the use of the <xref:System.ComponentModel.BackgroundWorker.CancellationPending%2A> property to query a <xref:System.ComponentModel.BackgroundWorker> about its cancellation state.</span></span> <span data-ttu-id="d147f-159">Dieses Codebeispiel ist Teil eines umfangreicheren Beispiels für die <xref:System.ComponentModel.BackgroundWorker> Klasse.</span><span class="sxs-lookup"><span data-stu-id="d147f-159">This code example is part of a larger example provided for the <xref:System.ComponentModel.BackgroundWorker> class.</span></span>  
  
 [!code-cpp[System.ComponentModel.BackgroundWorker#8](~/samples/snippets/cpp/VS_Snippets_Winforms/System.ComponentModel.BackgroundWorker/CPP/fibonacciform.cpp#8)]
 [!code-csharp[System.ComponentModel.BackgroundWorker#8](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.BackgroundWorker/CS/fibonacciform.cs#8)]
 [!code-vb[System.ComponentModel.BackgroundWorker#8](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.BackgroundWorker/VB/fibonacciform.vb#8)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/5b56e2aa-dc05-444f-930c-2d7b23f9ad5b">
          <span data-ttu-id="d147f-160">Gewusst wie: Ausführen eines Vorgangs im Hintergrund</span>
          <span class="sxs-lookup">
            <span data-stu-id="d147f-160">How to: Run an Operation in the Background</span>
          </span>
        </related>
        <related type="Article" href="https://msdn.microsoft.com/library/9b7bc5ae-051c-4904-9720-18f6667388bd">
          <span data-ttu-id="d147f-161">Gewusst wie: Downloaden einer Datei im Hintergrund</span>
          <span class="sxs-lookup">
            <span data-stu-id="d147f-161">How to: Download a File in the Background</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.BackgroundWorker.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="backgroundWorker.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.EventBasedAsync</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.BackgroundWorker.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="backgroundWorker.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.EventBasedAsync</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DoWork">
      <MemberSignature Language="C#" Value="public event System.ComponentModel.DoWorkEventHandler DoWork;" />
      <MemberSignature Language="ILAsm" Value=".event class System.ComponentModel.DoWorkEventHandler DoWork" />
      <MemberSignature Language="DocId" Value="E:System.ComponentModel.BackgroundWorker.DoWork" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DoWork As DoWorkEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::ComponentModel::DoWorkEventHandler ^ DoWork;" />
      <MemberSignature Language="F#" Value="member this.DoWork : System.ComponentModel.DoWorkEventHandler " Usage="member this.DoWork : System.ComponentModel.DoWorkEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.EventBasedAsync</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.DoWorkEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d147f-162">Tritt ein, wenn <see cref="M:System.ComponentModel.BackgroundWorker.RunWorkerAsync" /> aufgerufen wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d147f-162">Occurs when <see cref="M:System.ComponentModel.BackgroundWorker.RunWorkerAsync" /> is called.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d147f-163">Dieses Ereignis wird ausgelöst, wenn Sie beim Aufrufen der <xref:System.ComponentModel.BackgroundWorker.RunWorkerAsync%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="d147f-163">This event is raised when you call the <xref:System.ComponentModel.BackgroundWorker.RunWorkerAsync%2A> method.</span></span> <span data-ttu-id="d147f-164">Dies ist, in dem Sie den Vorgang zu starten, der der potenziell zeitaufwendigen Vorgang ausgeführt.</span><span class="sxs-lookup"><span data-stu-id="d147f-164">This is where you start the operation that performs the potentially time-consuming work.</span></span>  
  
 <span data-ttu-id="d147f-165">Den Code in die <xref:System.ComponentModel.BackgroundWorker.DoWork> -Ereignishandler sollte in regelmäßigen Abständen überprüfen. die <xref:System.ComponentModel.BackgroundWorker.CancellationPending%2A> Eigenschaftswert "und" Abort "der Vorgang ist dies `true`.</span><span class="sxs-lookup"><span data-stu-id="d147f-165">Your code in the <xref:System.ComponentModel.BackgroundWorker.DoWork> event handler should periodically check the <xref:System.ComponentModel.BackgroundWorker.CancellationPending%2A> property value and abort the operation if it is `true`.</span></span> <span data-ttu-id="d147f-166">In diesem Fall können Sie festlegen der <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> flag von <xref:System.ComponentModel.DoWorkEventArgs?displayProperty=nameWithType> zu `true`, und die <xref:System.ComponentModel.AsyncCompletedEventArgs.Cancelled%2A> flag von <xref:System.ComponentModel.RunWorkerCompletedEventArgs?displayProperty=nameWithType> in Ihre <xref:System.ComponentModel.BackgroundWorker.RunWorkerCompleted> -Ereignishandler festgelegt `true`.</span><span class="sxs-lookup"><span data-stu-id="d147f-166">When this occurs, you can set the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> flag of <xref:System.ComponentModel.DoWorkEventArgs?displayProperty=nameWithType> to `true`, and the <xref:System.ComponentModel.AsyncCompletedEventArgs.Cancelled%2A> flag of <xref:System.ComponentModel.RunWorkerCompletedEventArgs?displayProperty=nameWithType> in your <xref:System.ComponentModel.BackgroundWorker.RunWorkerCompleted> event handler will be set to `true`.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="d147f-167">Beachten Sie, Ihren Code in die <xref:System.ComponentModel.BackgroundWorker.DoWork> -Ereignishandler kann seine Arbeit abgeschlossen, wie eine abbruchanforderung erfolgt, und Ihre Abrufschleife kann übersehen <xref:System.ComponentModel.BackgroundWorker.CancellationPending%2A> festgelegt `true`.</span><span class="sxs-lookup"><span data-stu-id="d147f-167">Be aware that your code in the <xref:System.ComponentModel.BackgroundWorker.DoWork> event handler may finish its work as a cancellation request is being made, and your polling loop may miss <xref:System.ComponentModel.BackgroundWorker.CancellationPending%2A> being set to `true`.</span></span> <span data-ttu-id="d147f-168">In diesem Fall die <xref:System.ComponentModel.AsyncCompletedEventArgs.Cancelled%2A> flag von <xref:System.ComponentModel.RunWorkerCompletedEventArgs?displayProperty=nameWithType> in Ihre <xref:System.ComponentModel.BackgroundWorker.RunWorkerCompleted> -Ereignishandler kann nicht festgelegt werden, um `true`, auch wenn ein Abbruch angefordert wurde.</span><span class="sxs-lookup"><span data-stu-id="d147f-168">In this case, the <xref:System.ComponentModel.AsyncCompletedEventArgs.Cancelled%2A> flag of <xref:System.ComponentModel.RunWorkerCompletedEventArgs?displayProperty=nameWithType> in your <xref:System.ComponentModel.BackgroundWorker.RunWorkerCompleted> event handler will not be set to `true`, even though a cancellation request was made.</span></span> <span data-ttu-id="d147f-169">Diese Situation wird aufgerufen, eine *Racebedingung* und ist ein häufiges Problem bei der Multithreadprogrammierung.</span><span class="sxs-lookup"><span data-stu-id="d147f-169">This situation is called a *race condition* and is a common concern in multithreaded programming.</span></span> <span data-ttu-id="d147f-170">Weitere Informationen zu multithreading entwerfen Probleme finden Sie unter [Managed Threading Best Practices](~/docs/standard/threading/managed-threading-best-practices.md).</span><span class="sxs-lookup"><span data-stu-id="d147f-170">For more information about multithreading design issues, see [Managed Threading Best Practices](~/docs/standard/threading/managed-threading-best-practices.md).</span></span>  
  
 <span data-ttu-id="d147f-171">Wenn der Vorgang ein Ergebnis erzeugt, können Sie das Ergebnis, das Zuweisen der <xref:System.ComponentModel.DoWorkEventArgs.Result%2A?displayProperty=nameWithType> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="d147f-171">If your operation produces a result, you can assign the result to the <xref:System.ComponentModel.DoWorkEventArgs.Result%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="d147f-172">Dadurch stehen die <xref:System.ComponentModel.BackgroundWorker.RunWorkerCompleted> -Ereignishandler in der <xref:System.ComponentModel.RunWorkerCompletedEventArgs.Result%2A?displayProperty=nameWithType> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="d147f-172">This will be available to the <xref:System.ComponentModel.BackgroundWorker.RunWorkerCompleted> event handler in the <xref:System.ComponentModel.RunWorkerCompletedEventArgs.Result%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="d147f-173">Wenn der Vorgang eine Ausnahme, die Ihren Code nicht behandelt auslöst, die <xref:System.ComponentModel.BackgroundWorker> fängt die Ausnahme ab und übergibt Sie ihn in die <xref:System.ComponentModel.BackgroundWorker.RunWorkerCompleted> -Ereignishandler als verfügbar die <xref:System.ComponentModel.AsyncCompletedEventArgs.Error%2A> Eigenschaft <xref:System.ComponentModel.RunWorkerCompletedEventArgs?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="d147f-173">If the operation raises an exception that your code does not handle, the <xref:System.ComponentModel.BackgroundWorker> catches the exception and passes it into the <xref:System.ComponentModel.BackgroundWorker.RunWorkerCompleted> event handler, where it is exposed as the <xref:System.ComponentModel.AsyncCompletedEventArgs.Error%2A> property of <xref:System.ComponentModel.RunWorkerCompletedEventArgs?displayProperty=nameWithType>.</span></span> <span data-ttu-id="d147f-174">Wenn Sie unter Visual Studio-Debugger ausgeführt werden, wird der Debugger am Punkt in der <xref:System.ComponentModel.BackgroundWorker.DoWork> -Ereignishandler, die nicht behandelte Ausnahme ausgelöst wurde.</span><span class="sxs-lookup"><span data-stu-id="d147f-174">If you are running under the Visual Studio debugger, the debugger will break at the point in the <xref:System.ComponentModel.BackgroundWorker.DoWork> event handler where the unhandled exception was raised.</span></span> <span data-ttu-id="d147f-175">Wenn Sie über mehrere verfügen <xref:System.ComponentModel.BackgroundWorker>, Sie sollten nicht direkt auf verweisen einer von ihnen, wie dies koppeln würde Ihre <xref:System.ComponentModel.BackgroundWorker.DoWork> -Ereignishandler mit einer bestimmten Instanz des <xref:System.ComponentModel.BackgroundWorker>.</span><span class="sxs-lookup"><span data-stu-id="d147f-175">If you have more than one <xref:System.ComponentModel.BackgroundWorker>, you should not reference any of them directly, as this would couple your <xref:System.ComponentModel.BackgroundWorker.DoWork> event handler to a specific instance of <xref:System.ComponentModel.BackgroundWorker>.</span></span> <span data-ttu-id="d147f-176">Stattdessen greifen Sie auf Ihre <xref:System.ComponentModel.BackgroundWorker> durch Umwandeln der `sender` Parameter in Ihre <xref:System.ComponentModel.BackgroundWorker.DoWork> -Ereignishandler.</span><span class="sxs-lookup"><span data-stu-id="d147f-176">Instead, you should access your <xref:System.ComponentModel.BackgroundWorker> by casting the `sender` parameter in your <xref:System.ComponentModel.BackgroundWorker.DoWork> event handler.</span></span>  
  
 <span data-ttu-id="d147f-177">Achten Sie nicht zum Bearbeiten von UI-Objekte in Ihrem <xref:System.ComponentModel.BackgroundWorker.DoWork> -Ereignishandler.</span><span class="sxs-lookup"><span data-stu-id="d147f-177">You must be careful not to manipulate any user-interface objects in your <xref:System.ComponentModel.BackgroundWorker.DoWork> event handler.</span></span> <span data-ttu-id="d147f-178">Kommunizieren Sie stattdessen mit der Benutzeroberfläche, über die <xref:System.ComponentModel.BackgroundWorker> Ereignisse.</span><span class="sxs-lookup"><span data-stu-id="d147f-178">Instead, communicate to the user interface through the <xref:System.ComponentModel.BackgroundWorker> events.</span></span>  
  
 <span data-ttu-id="d147f-179">Weitere Informationen zum Behandeln von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="d147f-179">For more information about how to handle events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d147f-180">Das folgende Codebeispiel veranschaulicht die Verwendung von der <xref:System.ComponentModel.BackgroundWorker.DoWork> Ereignis, um einen asynchronen Vorgang zu starten.</span><span class="sxs-lookup"><span data-stu-id="d147f-180">The following code example demonstrates the use of the <xref:System.ComponentModel.BackgroundWorker.DoWork> event to start an asynchronous operation.</span></span> <span data-ttu-id="d147f-181">Dieses Codebeispiel ist Teil eines umfangreicheren Beispiels für die <xref:System.ComponentModel.BackgroundWorker> Klasse.</span><span class="sxs-lookup"><span data-stu-id="d147f-181">This code example is part of a larger example provided for the <xref:System.ComponentModel.BackgroundWorker> class.</span></span>  
  
 [!code-cpp[System.ComponentModel.BackgroundWorker#5](~/samples/snippets/cpp/VS_Snippets_Winforms/System.ComponentModel.BackgroundWorker/CPP/fibonacciform.cpp#5)]
 [!code-csharp[System.ComponentModel.BackgroundWorker#5](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.BackgroundWorker/CS/fibonacciform.cs#5)]
 [!code-vb[System.ComponentModel.BackgroundWorker#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.BackgroundWorker/VB/fibonacciform.vb#5)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/5b56e2aa-dc05-444f-930c-2d7b23f9ad5b">
          <span data-ttu-id="d147f-182">Gewusst wie: Ausführen eines Vorgangs im Hintergrund</span>
          <span class="sxs-lookup">
            <span data-stu-id="d147f-182">How to: Run an Operation in the Background</span>
          </span>
        </related>
        <related type="Article" href="https://msdn.microsoft.com/library/e51988e7-7f4b-4646-a06d-1416cee8d557">
          <span data-ttu-id="d147f-183">Empfohlene Vorgehensweise für das verwaltete Threading</span>
          <span class="sxs-lookup">
            <span data-stu-id="d147f-183">Managed Threading Best Practices</span>
          </span>
        </related>
        <related type="Article" href="https://msdn.microsoft.com/library/9b7bc5ae-051c-4904-9720-18f6667388bd">
          <span data-ttu-id="d147f-184">Gewusst wie: Downloaden einer Datei im Hintergrund</span>
          <span class="sxs-lookup">
            <span data-stu-id="d147f-184">How to: Download a File in the Background</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="IsBusy">
      <MemberSignature Language="C#" Value="public bool IsBusy { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsBusy" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.BackgroundWorker.IsBusy" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsBusy As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsBusy { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsBusy : bool" Usage="System.ComponentModel.BackgroundWorker.IsBusy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.EventBasedAsync</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d147f-185">Ruft einen Wert ab, der angibt, ob <see cref="T:System.ComponentModel.BackgroundWorker" /> einen asynchronen Vorgang ausführt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d147f-185">Gets a value indicating whether the <see cref="T:System.ComponentModel.BackgroundWorker" /> is running an asynchronous operation.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d147f-186">
            <see langword="true" />, wenn der <see cref="T:System.ComponentModel.BackgroundWorker" /> einen asynchronen Vorgang ausführt, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d147f-186">
              <see langword="true" />, if the <see cref="T:System.ComponentModel.BackgroundWorker" /> is running an asynchronous operation; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d147f-187">Die <xref:System.ComponentModel.BackgroundWorker> beim Aufruf startet einen asynchronen Vorgang <xref:System.ComponentModel.BackgroundWorker.RunWorkerAsync%2A>.</span><span class="sxs-lookup"><span data-stu-id="d147f-187">The <xref:System.ComponentModel.BackgroundWorker> starts an asynchronous operation when you call <xref:System.ComponentModel.BackgroundWorker.RunWorkerAsync%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d147f-188">Im folgenden Codebeispiel wird veranschaulicht, wie Sie mit der <xref:System.ComponentModel.BackgroundWorker.IsBusy%2A> Eigenschaft, um auf den Abschluss warten einer <xref:System.ComponentModel.BackgroundWorker> Vorgang.</span><span class="sxs-lookup"><span data-stu-id="d147f-188">The following code example demonstrates how to use the <xref:System.ComponentModel.BackgroundWorker.IsBusy%2A> property to wait for completion of a <xref:System.ComponentModel.BackgroundWorker> operation.</span></span> <span data-ttu-id="d147f-189">Dieses Codebeispiel ist Teil eines größeren Beispiels, die in beschriebenen [wie: Downloaden einer Datei im Hintergrund](~/docs/framework/winforms/controls/how-to-download-a-file-in-the-background.md).</span><span class="sxs-lookup"><span data-stu-id="d147f-189">This code example is part of a larger example described in [How to: Download a File in the Background](~/docs/framework/winforms/controls/how-to-download-a-file-in-the-background.md).</span></span>  
  
 [!code-csharp[System.ComponentModel.BackgroundWorker.IsBusy#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.BackgroundWorker.IsBusy/CS/Form1.cs#2)]
 [!code-vb[System.ComponentModel.BackgroundWorker.IsBusy#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.BackgroundWorker.IsBusy/VB/Form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.ComponentModel.BackgroundWorker.RunWorkerCompleted" />
        <altmember cref="T:System.EventArgs" />
        <altmember cref="Overload:System.ComponentModel.BackgroundWorker.RunWorkerAsync" />
        <related type="Article" href="https://msdn.microsoft.com/library/5b56e2aa-dc05-444f-930c-2d7b23f9ad5b">
          <span data-ttu-id="d147f-190">Gewusst wie: Ausführen eines Vorgangs im Hintergrund</span>
          <span class="sxs-lookup">
            <span data-stu-id="d147f-190">How to: Run an Operation in the Background</span>
          </span>
        </related>
        <related type="Article" href="https://msdn.microsoft.com/library/9b7bc5ae-051c-4904-9720-18f6667388bd">
          <span data-ttu-id="d147f-191">Gewusst wie: Downloaden einer Datei im Hintergrund</span>
          <span class="sxs-lookup">
            <span data-stu-id="d147f-191">How to: Download a File in the Background</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="OnDoWork">
      <MemberSignature Language="C#" Value="protected virtual void OnDoWork (System.ComponentModel.DoWorkEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDoWork(class System.ComponentModel.DoWorkEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.BackgroundWorker.OnDoWork(System.ComponentModel.DoWorkEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDoWork (e As DoWorkEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDoWork(System::ComponentModel::DoWorkEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDoWork : System.ComponentModel.DoWorkEventArgs -&gt; unit&#xA;override this.OnDoWork : System.ComponentModel.DoWorkEventArgs -&gt; unit" Usage="backgroundWorker.OnDoWork e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.EventBasedAsync</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.ComponentModel.DoWorkEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="d147f-192">Ein <see cref="T:System.EventArgs" />, das die Ereignisdaten enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d147f-192">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d147f-193">Löst das <see cref="E:System.ComponentModel.BackgroundWorker.DoWork" />-Ereignis aus.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d147f-193">Raises the <see cref="E:System.ComponentModel.BackgroundWorker.DoWork" /> event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnProgressChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnProgressChanged (System.ComponentModel.ProgressChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnProgressChanged(class System.ComponentModel.ProgressChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.BackgroundWorker.OnProgressChanged(System.ComponentModel.ProgressChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnProgressChanged (e As ProgressChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnProgressChanged(System::ComponentModel::ProgressChangedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnProgressChanged : System.ComponentModel.ProgressChangedEventArgs -&gt; unit&#xA;override this.OnProgressChanged : System.ComponentModel.ProgressChangedEventArgs -&gt; unit" Usage="backgroundWorker.OnProgressChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.EventBasedAsync</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.ComponentModel.ProgressChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="d147f-194">Ein <see cref="T:System.EventArgs" />, das die Ereignisdaten enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d147f-194">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d147f-195">Löst das <see cref="E:System.ComponentModel.BackgroundWorker.ProgressChanged" />-Ereignis aus.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d147f-195">Raises the <see cref="E:System.ComponentModel.BackgroundWorker.ProgressChanged" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d147f-196">Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="d147f-196">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="d147f-197">Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="d147f-197">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="d147f-198">Mit der <xref:System.ComponentModel.BackgroundWorker.OnProgressChanged%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln.</span><span class="sxs-lookup"><span data-stu-id="d147f-198">The <xref:System.ComponentModel.BackgroundWorker.OnProgressChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="d147f-199">Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.</span><span class="sxs-lookup"><span data-stu-id="d147f-199">This is the preferred technique for handling the event in a derived class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d147f-200">Das folgende Codebeispiel veranschaulicht die Verwendung von der <xref:System.ComponentModel.BackgroundWorker.OnProgressChanged%2A> Methode, um den Fortschritt eines asynchronen Vorgangs anzugeben.</span><span class="sxs-lookup"><span data-stu-id="d147f-200">The following code example demonstrates the use of the <xref:System.ComponentModel.BackgroundWorker.OnProgressChanged%2A> method to report the progress of an asynchronous operation.</span></span> <span data-ttu-id="d147f-201">Dieses Codebeispiel ist Teil eines umfangreicheren Beispiels für die <xref:System.ComponentModel.AsyncOperationManager> Klasse.</span><span class="sxs-lookup"><span data-stu-id="d147f-201">This code example is part of a larger example provided for the <xref:System.ComponentModel.AsyncOperationManager> class.</span></span>  
  
 [!code-csharp[System.ComponentModel.AsyncOperationManager#24](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.AsyncOperationManager/CS/primenumbercalculatormain.cs#24)]
 [!code-vb[System.ComponentModel.AsyncOperationManager#24](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.AsyncOperationManager/VB/primenumbercalculatormain.vb#24)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="d147f-202">Wenn Sie <see cref="M:System.ComponentModel.BackgroundWorker.OnProgressChanged(System.ComponentModel.ProgressChangedEventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.ComponentModel.BackgroundWorker.OnProgressChanged(System.ComponentModel.ProgressChangedEventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</span>
            <span class="sxs-lookup">
              <span data-stu-id="d147f-202">When overriding <see cref="M:System.ComponentModel.BackgroundWorker.OnProgressChanged(System.ComponentModel.ProgressChangedEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.ComponentModel.BackgroundWorker.OnProgressChanged(System.ComponentModel.ProgressChangedEventArgs)" /> method so that registered delegates receive the event.</span>
            </span>
          </para>
        </block>
        <altmember cref="E:System.ComponentModel.BackgroundWorker.ProgressChanged" />
        <related type="Article" href="https://msdn.microsoft.com/library/5b56e2aa-dc05-444f-930c-2d7b23f9ad5b">
          <span data-ttu-id="d147f-203">Gewusst wie: Ausführen eines Vorgangs im Hintergrund</span>
          <span class="sxs-lookup">
            <span data-stu-id="d147f-203">How to: Run an Operation in the Background</span>
          </span>
        </related>
        <related type="Article" href="https://msdn.microsoft.com/library/9b7bc5ae-051c-4904-9720-18f6667388bd">
          <span data-ttu-id="d147f-204">Gewusst wie: Downloaden einer Datei im Hintergrund</span>
          <span class="sxs-lookup">
            <span data-stu-id="d147f-204">How to: Download a File in the Background</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="OnRunWorkerCompleted">
      <MemberSignature Language="C#" Value="protected virtual void OnRunWorkerCompleted (System.ComponentModel.RunWorkerCompletedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRunWorkerCompleted(class System.ComponentModel.RunWorkerCompletedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.BackgroundWorker.OnRunWorkerCompleted(System.ComponentModel.RunWorkerCompletedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnRunWorkerCompleted (e As RunWorkerCompletedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnRunWorkerCompleted(System::ComponentModel::RunWorkerCompletedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnRunWorkerCompleted : System.ComponentModel.RunWorkerCompletedEventArgs -&gt; unit&#xA;override this.OnRunWorkerCompleted : System.ComponentModel.RunWorkerCompletedEventArgs -&gt; unit" Usage="backgroundWorker.OnRunWorkerCompleted e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.EventBasedAsync</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.ComponentModel.RunWorkerCompletedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="d147f-205">Ein <see cref="T:System.EventArgs" />, das die Ereignisdaten enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d147f-205">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d147f-206">Löst das <see cref="E:System.ComponentModel.BackgroundWorker.RunWorkerCompleted" />-Ereignis aus.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d147f-206">Raises the <see cref="E:System.ComponentModel.BackgroundWorker.RunWorkerCompleted" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d147f-207">Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="d147f-207">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="d147f-208">Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="d147f-208">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="d147f-209">Mit der <xref:System.ComponentModel.BackgroundWorker.OnRunWorkerCompleted%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln.</span><span class="sxs-lookup"><span data-stu-id="d147f-209">The <xref:System.ComponentModel.BackgroundWorker.OnRunWorkerCompleted%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="d147f-210">Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.</span><span class="sxs-lookup"><span data-stu-id="d147f-210">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="d147f-211">Wenn Sie <see cref="M:System.ComponentModel.BackgroundWorker.OnRunWorkerCompleted(System.ComponentModel.RunWorkerCompletedEventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.ComponentModel.BackgroundWorker.OnRunWorkerCompleted(System.ComponentModel.RunWorkerCompletedEventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</span>
            <span class="sxs-lookup">
              <span data-stu-id="d147f-211">When overriding <see cref="M:System.ComponentModel.BackgroundWorker.OnRunWorkerCompleted(System.ComponentModel.RunWorkerCompletedEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.ComponentModel.BackgroundWorker.OnRunWorkerCompleted(System.ComponentModel.RunWorkerCompletedEventArgs)" /> method so that registered delegates receive the event.</span>
            </span>
          </para>
        </block>
        <altmember cref="E:System.ComponentModel.BackgroundWorker.RunWorkerCompleted" />
        <related type="Article" href="https://msdn.microsoft.com/library/5b56e2aa-dc05-444f-930c-2d7b23f9ad5b">
          <span data-ttu-id="d147f-212">Gewusst wie: Ausführen eines Vorgangs im Hintergrund</span>
          <span class="sxs-lookup">
            <span data-stu-id="d147f-212">How to: Run an Operation in the Background</span>
          </span>
        </related>
        <related type="Article" href="https://msdn.microsoft.com/library/9b7bc5ae-051c-4904-9720-18f6667388bd">
          <span data-ttu-id="d147f-213">Gewusst wie: Downloaden einer Datei im Hintergrund</span>
          <span class="sxs-lookup">
            <span data-stu-id="d147f-213">How to: Download a File in the Background</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="ProgressChanged">
      <MemberSignature Language="C#" Value="public event System.ComponentModel.ProgressChangedEventHandler ProgressChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.ComponentModel.ProgressChangedEventHandler ProgressChanged" />
      <MemberSignature Language="DocId" Value="E:System.ComponentModel.BackgroundWorker.ProgressChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ProgressChanged As ProgressChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::ComponentModel::ProgressChangedEventHandler ^ ProgressChanged;" />
      <MemberSignature Language="F#" Value="member this.ProgressChanged : System.ComponentModel.ProgressChangedEventHandler " Usage="member this.ProgressChanged : System.ComponentModel.ProgressChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.EventBasedAsync</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.ProgressChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d147f-214">Tritt ein, wenn <see cref="M:System.ComponentModel.BackgroundWorker.ReportProgress(System.Int32)" /> aufgerufen wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d147f-214">Occurs when <see cref="M:System.ComponentModel.BackgroundWorker.ReportProgress(System.Int32)" /> is called.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d147f-215">Dieses Ereignis wird ausgelöst, wenn Sie beim Aufrufen der <xref:System.ComponentModel.BackgroundWorker.ReportProgress%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="d147f-215">This event is raised when you call the <xref:System.ComponentModel.BackgroundWorker.ReportProgress%2A> method.</span></span>  
  
 <span data-ttu-id="d147f-216">Weitere Informationen zum Behandeln von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="d147f-216">For more information about how to handle events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d147f-217">Das folgende Codebeispiel veranschaulicht die Verwendung von der <xref:System.ComponentModel.BackgroundWorker.ProgressChanged> Ereignis, um den Status eines asynchronen Vorgangs für den Benutzer zu melden.</span><span class="sxs-lookup"><span data-stu-id="d147f-217">The following code example demonstrates the use of the <xref:System.ComponentModel.BackgroundWorker.ProgressChanged> event to report the progress of an asynchronous operation to the user.</span></span> <span data-ttu-id="d147f-218">Dieses Codebeispiel ist Teil eines umfangreicheren Beispiels für die <xref:System.ComponentModel.BackgroundWorker> Klasse.</span><span class="sxs-lookup"><span data-stu-id="d147f-218">This code example is part of a larger example provided for the <xref:System.ComponentModel.BackgroundWorker> class.</span></span>  
  
 [!code-cpp[System.ComponentModel.BackgroundWorker#7](~/samples/snippets/cpp/VS_Snippets_Winforms/System.ComponentModel.BackgroundWorker/CPP/fibonacciform.cpp#7)]
 [!code-csharp[System.ComponentModel.BackgroundWorker#7](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.BackgroundWorker/CS/fibonacciform.cs#7)]
 [!code-vb[System.ComponentModel.BackgroundWorker#7](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.BackgroundWorker/VB/fibonacciform.vb#7)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/5b56e2aa-dc05-444f-930c-2d7b23f9ad5b">
          <span data-ttu-id="d147f-219">Gewusst wie: Ausführen eines Vorgangs im Hintergrund</span>
          <span class="sxs-lookup">
            <span data-stu-id="d147f-219">How to: Run an Operation in the Background</span>
          </span>
        </related>
        <related type="Article" href="https://msdn.microsoft.com/library/9b7bc5ae-051c-4904-9720-18f6667388bd">
          <span data-ttu-id="d147f-220">Gewusst wie: Downloaden einer Datei im Hintergrund</span>
          <span class="sxs-lookup">
            <span data-stu-id="d147f-220">How to: Download a File in the Background</span>
          </span>
        </related>
      </Docs>
    </Member>
    <MemberGroup MemberName="ReportProgress">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.EventBasedAsync</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="d147f-221">Löst das <see cref="E:System.ComponentModel.BackgroundWorker.ProgressChanged" />-Ereignis aus.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d147f-221">Raises the <see cref="E:System.ComponentModel.BackgroundWorker.ProgressChanged" /> event.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ReportProgress">
      <MemberSignature Language="C#" Value="public void ReportProgress (int percentProgress);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ReportProgress(int32 percentProgress) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.BackgroundWorker.ReportProgress(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ReportProgress (percentProgress As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ReportProgress(int percentProgress);" />
      <MemberSignature Language="F#" Value="member this.ReportProgress : int -&gt; unit" Usage="backgroundWorker.ReportProgress percentProgress" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.EventBasedAsync</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="percentProgress" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="percentProgress">
          <span data-ttu-id="d147f-222">Bereits abgeschlossener Teil des Hintergrundvorgangs in Prozent (1-100).</span>
          <span class="sxs-lookup">
            <span data-stu-id="d147f-222">The percentage, from 0 to 100, of the background operation that is complete.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d147f-223">Löst das <see cref="E:System.ComponentModel.BackgroundWorker.ProgressChanged" />-Ereignis aus.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d147f-223">Raises the <see cref="E:System.ComponentModel.BackgroundWorker.ProgressChanged" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d147f-224">Wenn Sie den Vorgang im Hintergrund auf seinen Fortschritt melden benötigen, können Sie Aufrufen der <xref:System.ComponentModel.BackgroundWorker.ReportProgress%2A> Methode zum Auslösen der <xref:System.ComponentModel.BackgroundWorker.ProgressChanged> Ereignis.</span><span class="sxs-lookup"><span data-stu-id="d147f-224">If you need the background operation to report on its progress, you can call the <xref:System.ComponentModel.BackgroundWorker.ReportProgress%2A> method to raise the <xref:System.ComponentModel.BackgroundWorker.ProgressChanged> event.</span></span> <span data-ttu-id="d147f-225">Die <xref:System.ComponentModel.BackgroundWorker.WorkerReportsProgress%2A> Eigenschaftswert muss `true`, oder <xref:System.ComponentModel.BackgroundWorker.ReportProgress%2A> löst eine <xref:System.InvalidOperationException>.</span><span class="sxs-lookup"><span data-stu-id="d147f-225">The <xref:System.ComponentModel.BackgroundWorker.WorkerReportsProgress%2A> property value must be `true`, or <xref:System.ComponentModel.BackgroundWorker.ReportProgress%2A> will throw an <xref:System.InvalidOperationException>.</span></span>  
  
 <span data-ttu-id="d147f-226">Es liegt an Ihnen sinnvollen Weise Messen des Fortschritts der als Prozentsatz der gesamten Aufgabe abgeschlossen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="d147f-226">It is up to you to implement a meaningful way of measuring your background operation's progress as a percentage of the total task completed.</span></span>  
  
 <span data-ttu-id="d147f-227">Der Aufruf der <xref:System.ComponentModel.BackgroundWorker.ReportProgress%2A> Methode ist asynchron und gibt sofort zurück.</span><span class="sxs-lookup"><span data-stu-id="d147f-227">The call to the <xref:System.ComponentModel.BackgroundWorker.ReportProgress%2A> method is asynchronous and returns immediately.</span></span> <span data-ttu-id="d147f-228">Die <xref:System.ComponentModel.BackgroundWorker.ProgressChanged> -Ereignishandler ausgeführt wird, auf dem Thread aus, erstellt die <xref:System.ComponentModel.BackgroundWorker>.</span><span class="sxs-lookup"><span data-stu-id="d147f-228">The <xref:System.ComponentModel.BackgroundWorker.ProgressChanged> event handler executes on the thread that created the <xref:System.ComponentModel.BackgroundWorker>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d147f-229">Das folgende Codebeispiel veranschaulicht die Verwendung von der <xref:System.ComponentModel.BackgroundWorker.ReportProgress%2A> Methode, um den Fortschritt eines asynchronen Vorgangs für den Benutzer anzugeben.</span><span class="sxs-lookup"><span data-stu-id="d147f-229">The following code example demonstrates the use of the <xref:System.ComponentModel.BackgroundWorker.ReportProgress%2A> method to report the progress of an asynchronous operation to the user.</span></span> <span data-ttu-id="d147f-230">Dieses Codebeispiel ist Teil eines umfangreicheren Beispiels für die <xref:System.ComponentModel.BackgroundWorker> Klasse.</span><span class="sxs-lookup"><span data-stu-id="d147f-230">This code example is part of a larger example provided for the <xref:System.ComponentModel.BackgroundWorker> class.</span></span>  
  
 [!code-cpp[System.ComponentModel.BackgroundWorker#8](~/samples/snippets/cpp/VS_Snippets_Winforms/System.ComponentModel.BackgroundWorker/CPP/fibonacciform.cpp#8)]
 [!code-csharp[System.ComponentModel.BackgroundWorker#8](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.BackgroundWorker/CS/fibonacciform.cs#8)]
 [!code-vb[System.ComponentModel.BackgroundWorker#8](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.BackgroundWorker/VB/fibonacciform.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="d147f-231">Die <see cref="P:System.ComponentModel.BackgroundWorker.WorkerReportsProgress" />-Eigenschaft ist auf <see langword="false" /> festgelegt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d147f-231">The <see cref="P:System.ComponentModel.BackgroundWorker.WorkerReportsProgress" /> property is set to <see langword="false" />.</span>
          </span>
        </exception>
        <related type="Article" href="https://msdn.microsoft.com/library/5b56e2aa-dc05-444f-930c-2d7b23f9ad5b">
          <span data-ttu-id="d147f-232">Gewusst wie: Ausführen eines Vorgangs im Hintergrund</span>
          <span class="sxs-lookup">
            <span data-stu-id="d147f-232">How to: Run an Operation in the Background</span>
          </span>
        </related>
        <related type="Article" href="https://msdn.microsoft.com/library/9b7bc5ae-051c-4904-9720-18f6667388bd">
          <span data-ttu-id="d147f-233">Gewusst wie: Downloaden einer Datei im Hintergrund</span>
          <span class="sxs-lookup">
            <span data-stu-id="d147f-233">How to: Download a File in the Background</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="ReportProgress">
      <MemberSignature Language="C#" Value="public void ReportProgress (int percentProgress, object userState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ReportProgress(int32 percentProgress, object userState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.BackgroundWorker.ReportProgress(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ReportProgress (percentProgress As Integer, userState As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ReportProgress(int percentProgress, System::Object ^ userState);" />
      <MemberSignature Language="F#" Value="member this.ReportProgress : int * obj -&gt; unit" Usage="backgroundWorker.ReportProgress (percentProgress, userState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.EventBasedAsync</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="percentProgress" Type="System.Int32" />
        <Parameter Name="userState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="percentProgress">
          <span data-ttu-id="d147f-234">Bereits abgeschlossener Teil des Hintergrundvorgangs in Prozent (1-100).</span>
          <span class="sxs-lookup">
            <span data-stu-id="d147f-234">The percentage, from 0 to 100, of the background operation that is complete.</span>
          </span>
        </param>
        <param name="userState">
          <span data-ttu-id="d147f-235">Das an <see cref="M:System.ComponentModel.BackgroundWorker.RunWorkerAsync(System.Object)" /> übergebene Zustandsobjekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d147f-235">The state object passed to <see cref="M:System.ComponentModel.BackgroundWorker.RunWorkerAsync(System.Object)" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d147f-236">Löst das <see cref="E:System.ComponentModel.BackgroundWorker.ProgressChanged" />-Ereignis aus.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d147f-236">Raises the <see cref="E:System.ComponentModel.BackgroundWorker.ProgressChanged" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d147f-237">Wenn Sie den Vorgang im Hintergrund auf seinen Fortschritt melden benötigen, können Sie Aufrufen der <xref:System.ComponentModel.BackgroundWorker.ReportProgress%2A> Methode zum Auslösen der <xref:System.ComponentModel.BackgroundWorker.ProgressChanged> Ereignis.</span><span class="sxs-lookup"><span data-stu-id="d147f-237">If you need the background operation to report on its progress, you can call the <xref:System.ComponentModel.BackgroundWorker.ReportProgress%2A> method to raise the <xref:System.ComponentModel.BackgroundWorker.ProgressChanged> event.</span></span> <span data-ttu-id="d147f-238">Die <xref:System.ComponentModel.BackgroundWorker.WorkerReportsProgress%2A> Eigenschaftswert muss `true`, oder <xref:System.ComponentModel.BackgroundWorker.ReportProgress%2A> löst eine <xref:System.InvalidOperationException>.</span><span class="sxs-lookup"><span data-stu-id="d147f-238">The <xref:System.ComponentModel.BackgroundWorker.WorkerReportsProgress%2A> property value must `true`, or <xref:System.ComponentModel.BackgroundWorker.ReportProgress%2A> will throw an <xref:System.InvalidOperationException>.</span></span>  
  
 <span data-ttu-id="d147f-239">Es liegt an Ihnen sinnvollen Weise Messen des Fortschritts der als Prozentsatz der gesamten Aufgabe abgeschlossen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="d147f-239">It is up to you to implement a meaningful way of measuring your background operation's progress as a percentage of the total task completed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d147f-240">Das folgende Codebeispiel veranschaulicht die Verwendung von der <xref:System.ComponentModel.BackgroundWorker.ReportProgress%2A> Methode, um den Fortschritt eines asynchronen Vorgangs für den Benutzer anzugeben.</span><span class="sxs-lookup"><span data-stu-id="d147f-240">The following code example demonstrates the use of the <xref:System.ComponentModel.BackgroundWorker.ReportProgress%2A> method to report the progress of an asynchronous operation to the user.</span></span> <span data-ttu-id="d147f-241">Dieses Codebeispiel ist Teil eines umfangreicheren Beispiels für die <xref:System.Windows.Forms.ToolStripProgressBar> Klasse.</span><span class="sxs-lookup"><span data-stu-id="d147f-241">This code example is part of a larger example provided for the <xref:System.Windows.Forms.ToolStripProgressBar> class.</span></span>  
  
 [!code-csharp[System.Windows.Forms.ToolStripProgressBar#10](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ToolStripProgressBar/CS/form1.cs#10)]
 [!code-vb[System.Windows.Forms.ToolStripProgressBar#10](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ToolStripProgressBar/VB/form1.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="d147f-242">Die <see cref="P:System.ComponentModel.BackgroundWorker.WorkerReportsProgress" />-Eigenschaft ist auf <see langword="false" /> festgelegt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d147f-242">The <see cref="P:System.ComponentModel.BackgroundWorker.WorkerReportsProgress" /> property is set to <see langword="false" />.</span>
          </span>
        </exception>
        <related type="Article" href="https://msdn.microsoft.com/library/5b56e2aa-dc05-444f-930c-2d7b23f9ad5b">
          <span data-ttu-id="d147f-243">Gewusst wie: Ausführen eines Vorgangs im Hintergrund</span>
          <span class="sxs-lookup">
            <span data-stu-id="d147f-243">How to: Run an Operation in the Background</span>
          </span>
        </related>
        <related type="Article" href="https://msdn.microsoft.com/library/9b7bc5ae-051c-4904-9720-18f6667388bd">
          <span data-ttu-id="d147f-244">Gewusst wie: Downloaden einer Datei im Hintergrund</span>
          <span class="sxs-lookup">
            <span data-stu-id="d147f-244">How to: Download a File in the Background</span>
          </span>
        </related>
      </Docs>
    </Member>
    <MemberGroup MemberName="RunWorkerAsync">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.EventBasedAsync</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="d147f-245">Startet die Ausführung eines Hintergrundvorgangs.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d147f-245">Starts execution of a background operation.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RunWorkerAsync">
      <MemberSignature Language="C#" Value="public void RunWorkerAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RunWorkerAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.BackgroundWorker.RunWorkerAsync" />
      <MemberSignature Language="VB.NET" Value="Public Sub RunWorkerAsync ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RunWorkerAsync();" />
      <MemberSignature Language="F#" Value="member this.RunWorkerAsync : unit -&gt; unit" Usage="backgroundWorker.RunWorkerAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.EventBasedAsync</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="d147f-246">Startet die Ausführung eines Hintergrundvorgangs.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d147f-246">Starts execution of a background operation.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d147f-247">Die <xref:System.ComponentModel.BackgroundWorker.RunWorkerAsync%2A> Methode sendet eine Anforderung an die asynchrone Ausführung des Vorgangs zu starten.</span><span class="sxs-lookup"><span data-stu-id="d147f-247">The <xref:System.ComponentModel.BackgroundWorker.RunWorkerAsync%2A> method submits a request to start the operation running asynchronously.</span></span> <span data-ttu-id="d147f-248">Wenn die Anforderung verarbeitet wurde, die <xref:System.ComponentModel.BackgroundWorker.DoWork> -Ereignis ausgelöst wird, die wiederum startet die Ausführung der Hintergrundvorgang.</span><span class="sxs-lookup"><span data-stu-id="d147f-248">When the request is serviced, the <xref:System.ComponentModel.BackgroundWorker.DoWork> event is raised, which in turn starts execution of your background operation.</span></span>  
  
 <span data-ttu-id="d147f-249">Wenn der Vorgang im Hintergrund bereits ausgeführt wird, wird beim Aufrufen <xref:System.ComponentModel.BackgroundWorker.RunWorkerAsync%2A> erneut löst eine <xref:System.InvalidOperationException>.</span><span class="sxs-lookup"><span data-stu-id="d147f-249">If the background operation is already running, calling <xref:System.ComponentModel.BackgroundWorker.RunWorkerAsync%2A> again will raise an <xref:System.InvalidOperationException>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d147f-250">Das folgende Codebeispiel veranschaulicht die Verwendung von der <xref:System.ComponentModel.BackgroundWorker.RunWorkerAsync%2A> Methode, um einen asynchronen Vorgang zu starten.</span><span class="sxs-lookup"><span data-stu-id="d147f-250">The following code example demonstrates the use of the <xref:System.ComponentModel.BackgroundWorker.RunWorkerAsync%2A> method to start an asynchronous operation.</span></span> <span data-ttu-id="d147f-251">Es ist Teil eines größeren Beispiels, die in beschriebenen [wie: Downloaden einer Datei im Hintergrund](~/docs/framework/winforms/controls/how-to-download-a-file-in-the-background.md).</span><span class="sxs-lookup"><span data-stu-id="d147f-251">It is part of a larger example described in [How to: Download a File in the Background](~/docs/framework/winforms/controls/how-to-download-a-file-in-the-background.md).</span></span>  
  
 [!code-csharp[System.ComponentModel.BackgroundWorker.IsBusy#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.BackgroundWorker.IsBusy/CS/Form1.cs#2)]
 [!code-vb[System.ComponentModel.BackgroundWorker.IsBusy#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.BackgroundWorker.IsBusy/VB/Form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="d147f-252">
            <see cref="P:System.ComponentModel.BackgroundWorker.IsBusy" /> ist <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d147f-252">
              <see cref="P:System.ComponentModel.BackgroundWorker.IsBusy" /> is <see langword="true" />.</span>
          </span>
        </exception>
        <altmember cref="E:System.ComponentModel.BackgroundWorker.DoWork" />
        <related type="Article" href="https://msdn.microsoft.com/library/5b56e2aa-dc05-444f-930c-2d7b23f9ad5b">
          <span data-ttu-id="d147f-253">Gewusst wie: Ausführen eines Vorgangs im Hintergrund</span>
          <span class="sxs-lookup">
            <span data-stu-id="d147f-253">How to: Run an Operation in the Background</span>
          </span>
        </related>
        <related type="Article" href="https://msdn.microsoft.com/library/e51988e7-7f4b-4646-a06d-1416cee8d557">
          <span data-ttu-id="d147f-254">Empfohlene Vorgehensweise für das verwaltete Threading</span>
          <span class="sxs-lookup">
            <span data-stu-id="d147f-254">Managed Threading Best Practices</span>
          </span>
        </related>
        <related type="Article" href="https://msdn.microsoft.com/library/9b7bc5ae-051c-4904-9720-18f6667388bd">
          <span data-ttu-id="d147f-255">Gewusst wie: Downloaden einer Datei im Hintergrund</span>
          <span class="sxs-lookup">
            <span data-stu-id="d147f-255">How to: Download a File in the Background</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="RunWorkerAsync">
      <MemberSignature Language="C#" Value="public void RunWorkerAsync (object argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RunWorkerAsync(object argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.BackgroundWorker.RunWorkerAsync(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RunWorkerAsync (argument As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RunWorkerAsync(System::Object ^ argument);" />
      <MemberSignature Language="F#" Value="member this.RunWorkerAsync : obj -&gt; unit" Usage="backgroundWorker.RunWorkerAsync argument" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.EventBasedAsync</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="argument" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="argument">
          <span data-ttu-id="d147f-256">Ein Parameter, der von dem Hintergrundvorgang verwendet wird, der im <see cref="E:System.ComponentModel.BackgroundWorker.DoWork" />-Ereignishandler ausgeführt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d147f-256">A parameter for use by the background operation to be executed in the <see cref="E:System.ComponentModel.BackgroundWorker.DoWork" /> event handler.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d147f-257">Startet die Ausführung eines Hintergrundvorgangs.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d147f-257">Starts execution of a background operation.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d147f-258">Die <xref:System.ComponentModel.BackgroundWorker.RunWorkerAsync%2A> Methode sendet eine Anforderung an die asynchrone Ausführung des Vorgangs zu starten.</span><span class="sxs-lookup"><span data-stu-id="d147f-258">The <xref:System.ComponentModel.BackgroundWorker.RunWorkerAsync%2A> method submits a request to start the operation running asynchronously.</span></span> <span data-ttu-id="d147f-259">Wenn die Anforderung verarbeitet wurde, die <xref:System.ComponentModel.BackgroundWorker.DoWork> -Ereignis ausgelöst wird, die wiederum startet die Ausführung der Hintergrundvorgang.</span><span class="sxs-lookup"><span data-stu-id="d147f-259">When the request is serviced, the <xref:System.ComponentModel.BackgroundWorker.DoWork> event is raised, which in turn starts execution of your background operation.</span></span>  
  
 <span data-ttu-id="d147f-260">Wenn der Vorgang einen Parameter benötigt, können Sie angeben, als die `argument` Parameter <xref:System.ComponentModel.BackgroundWorker.RunWorkerAsync%2A>.</span><span class="sxs-lookup"><span data-stu-id="d147f-260">If your operation requires a parameter, you can provide it as the `argument` parameter to <xref:System.ComponentModel.BackgroundWorker.RunWorkerAsync%2A>.</span></span>  
  
 <span data-ttu-id="d147f-261">Wenn der Vorgang im Hintergrund bereits ausgeführt wird, wird beim Aufrufen <xref:System.ComponentModel.BackgroundWorker.RunWorkerAsync%2A> erneut löst eine <xref:System.InvalidOperationException>.</span><span class="sxs-lookup"><span data-stu-id="d147f-261">If the background operation is already running, calling <xref:System.ComponentModel.BackgroundWorker.RunWorkerAsync%2A> again will raise an <xref:System.InvalidOperationException>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d147f-262">Das folgende Codebeispiel veranschaulicht die Verwendung von der <xref:System.ComponentModel.BackgroundWorker.RunWorkerAsync%2A> Methode, um einen asynchronen Vorgang zu starten.</span><span class="sxs-lookup"><span data-stu-id="d147f-262">The following code example demonstrates the use of the <xref:System.ComponentModel.BackgroundWorker.RunWorkerAsync%2A> method to start an asynchronous operation.</span></span> <span data-ttu-id="d147f-263">Dieses Codebeispiel ist Teil eines umfangreicheren Beispiels für die <xref:System.ComponentModel.BackgroundWorker> Klasse.</span><span class="sxs-lookup"><span data-stu-id="d147f-263">This code example is part of a larger example provided for the <xref:System.ComponentModel.BackgroundWorker> class.</span></span>  
  
 [!code-cpp[System.ComponentModel.BackgroundWorker#3](~/samples/snippets/cpp/VS_Snippets_Winforms/System.ComponentModel.BackgroundWorker/CPP/fibonacciform.cpp#3)]
 [!code-csharp[System.ComponentModel.BackgroundWorker#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.BackgroundWorker/CS/fibonacciform.cs#3)]
 [!code-vb[System.ComponentModel.BackgroundWorker#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.BackgroundWorker/VB/fibonacciform.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="d147f-264">
            <see cref="P:System.ComponentModel.BackgroundWorker.IsBusy" /> ist <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d147f-264">
              <see cref="P:System.ComponentModel.BackgroundWorker.IsBusy" /> is <see langword="true" />.</span>
          </span>
        </exception>
        <altmember cref="E:System.ComponentModel.BackgroundWorker.DoWork" />
        <related type="Article" href="https://msdn.microsoft.com/library/5b56e2aa-dc05-444f-930c-2d7b23f9ad5b">
          <span data-ttu-id="d147f-265">Gewusst wie: Ausführen eines Vorgangs im Hintergrund</span>
          <span class="sxs-lookup">
            <span data-stu-id="d147f-265">How to: Run an Operation in the Background</span>
          </span>
        </related>
        <related type="Article" href="https://msdn.microsoft.com/library/9b7bc5ae-051c-4904-9720-18f6667388bd">
          <span data-ttu-id="d147f-266">Gewusst wie: Downloaden einer Datei im Hintergrund</span>
          <span class="sxs-lookup">
            <span data-stu-id="d147f-266">How to: Download a File in the Background</span>
          </span>
        </related>
        <related type="Article" href="https://msdn.microsoft.com/library/e51988e7-7f4b-4646-a06d-1416cee8d557">
          <span data-ttu-id="d147f-267">Empfohlene Vorgehensweise für das verwaltete Threading</span>
          <span class="sxs-lookup">
            <span data-stu-id="d147f-267">Managed Threading Best Practices</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="RunWorkerCompleted">
      <MemberSignature Language="C#" Value="public event System.ComponentModel.RunWorkerCompletedEventHandler RunWorkerCompleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.ComponentModel.RunWorkerCompletedEventHandler RunWorkerCompleted" />
      <MemberSignature Language="DocId" Value="E:System.ComponentModel.BackgroundWorker.RunWorkerCompleted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event RunWorkerCompleted As RunWorkerCompletedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::ComponentModel::RunWorkerCompletedEventHandler ^ RunWorkerCompleted;" />
      <MemberSignature Language="F#" Value="member this.RunWorkerCompleted : System.ComponentModel.RunWorkerCompletedEventHandler " Usage="member this.RunWorkerCompleted : System.ComponentModel.RunWorkerCompletedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.EventBasedAsync</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.RunWorkerCompletedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d147f-268">Tritt ein, wenn der Hintergrundvorgang entweder abgeschlossen ist, abgebrochen wurde oder eine Ausnahme ausgelöst hat.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d147f-268">Occurs when the background operation has completed, has been canceled, or has raised an exception.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d147f-269">Dieses Ereignis wird ausgelöst, wenn die <xref:System.ComponentModel.BackgroundWorker.DoWork> Ereignishandler zurückkehrt.</span><span class="sxs-lookup"><span data-stu-id="d147f-269">This event is raised when the <xref:System.ComponentModel.BackgroundWorker.DoWork> event handler returns.</span></span>  
  
 <span data-ttu-id="d147f-270">Wenn der Vorgang erfolgreich abgeschlossen und das Ergebnis, in zugewiesen ist der <xref:System.ComponentModel.BackgroundWorker.DoWork> Ereignishandler, Sie können Zugriff auf das Ergebnis mithilfe von der <xref:System.ComponentModel.RunWorkerCompletedEventArgs.Result%2A?displayProperty=nameWithType> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="d147f-270">If the operation completes successfully and its result is assigned in the <xref:System.ComponentModel.BackgroundWorker.DoWork> event handler, you can access the result through the <xref:System.ComponentModel.RunWorkerCompletedEventArgs.Result%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="d147f-271">Die <xref:System.ComponentModel.AsyncCompletedEventArgs.Error%2A> Eigenschaft <xref:System.ComponentModel.RunWorkerCompletedEventArgs?displayProperty=nameWithType> gibt an, dass der Vorgang eine Ausnahme ausgelöst wurde.</span><span class="sxs-lookup"><span data-stu-id="d147f-271">The <xref:System.ComponentModel.AsyncCompletedEventArgs.Error%2A> property of <xref:System.ComponentModel.RunWorkerCompletedEventArgs?displayProperty=nameWithType> indicates that an exception was thrown by the operation.</span></span>  
  
 <span data-ttu-id="d147f-272">Die <xref:System.ComponentModel.AsyncCompletedEventArgs.Cancelled%2A> Eigenschaft <xref:System.ComponentModel.RunWorkerCompletedEventArgs?displayProperty=nameWithType> gibt an, ob eine abbruchanforderung vom der Vorgang im Hintergrund verarbeitet wurde.</span><span class="sxs-lookup"><span data-stu-id="d147f-272">The <xref:System.ComponentModel.AsyncCompletedEventArgs.Cancelled%2A> property of <xref:System.ComponentModel.RunWorkerCompletedEventArgs?displayProperty=nameWithType> indicates whether a cancellation request was processed by the background operation.</span></span> <span data-ttu-id="d147f-273">Wenn Ihren Code in der <xref:System.ComponentModel.BackgroundWorker.DoWork> Ereignishandler erkennt eine abbruchanforderung durch Überprüfen der <xref:System.ComponentModel.BackgroundWorker.CancellationPending%2A> Flag und der Einstellung der <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> flag von <xref:System.ComponentModel.DoWorkEventArgs?displayProperty=nameWithType> zu `true`, <xref:System.ComponentModel.AsyncCompletedEventArgs.Cancelled%2A> flag von <xref:System.ComponentModel.RunWorkerCompletedEventArgs?displayProperty=nameWithType> wird auch festgelegt werden, um `true`.</span><span class="sxs-lookup"><span data-stu-id="d147f-273">If your code in the <xref:System.ComponentModel.BackgroundWorker.DoWork> event handler detects a cancellation request by checking the <xref:System.ComponentModel.BackgroundWorker.CancellationPending%2A> flag and setting the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> flag of <xref:System.ComponentModel.DoWorkEventArgs?displayProperty=nameWithType> to `true`, the <xref:System.ComponentModel.AsyncCompletedEventArgs.Cancelled%2A> flag of <xref:System.ComponentModel.RunWorkerCompletedEventArgs?displayProperty=nameWithType> also will be set to `true`.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="d147f-274">Beachten Sie, Ihren Code in die <xref:System.ComponentModel.BackgroundWorker.DoWork> -Ereignishandler kann seine Arbeit abgeschlossen, wie eine abbruchanforderung erfolgt, und Ihre Abrufschleife kann übersehen <xref:System.ComponentModel.BackgroundWorker.CancellationPending%2A> festgelegt `true`.</span><span class="sxs-lookup"><span data-stu-id="d147f-274">Be aware that your code in the <xref:System.ComponentModel.BackgroundWorker.DoWork> event handler may finish its work as a cancellation request is being made, and your polling loop may miss <xref:System.ComponentModel.BackgroundWorker.CancellationPending%2A> being set to `true`.</span></span> <span data-ttu-id="d147f-275">In diesem Fall die <xref:System.ComponentModel.AsyncCompletedEventArgs.Cancelled%2A> flag von <xref:System.ComponentModel.RunWorkerCompletedEventArgs?displayProperty=nameWithType> in Ihre <xref:System.ComponentModel.BackgroundWorker.RunWorkerCompleted> -Ereignishandler kann nicht festgelegt werden, um `true`, auch wenn ein Abbruch angefordert wurde.</span><span class="sxs-lookup"><span data-stu-id="d147f-275">In this case, the <xref:System.ComponentModel.AsyncCompletedEventArgs.Cancelled%2A> flag of <xref:System.ComponentModel.RunWorkerCompletedEventArgs?displayProperty=nameWithType> in your <xref:System.ComponentModel.BackgroundWorker.RunWorkerCompleted> event handler will not be set to `true`, even though a cancellation request was made.</span></span> <span data-ttu-id="d147f-276">Diese Situation wird aufgerufen, eine *Racebedingung* und ist ein häufiges Problem bei der Multithreadprogrammierung.</span><span class="sxs-lookup"><span data-stu-id="d147f-276">This situation is called a *race condition* and is a common concern in multithreaded programming.</span></span> <span data-ttu-id="d147f-277">Weitere Informationen zu multithreading entwerfen Probleme finden Sie unter [Managed Threading Best Practices](~/docs/standard/threading/managed-threading-best-practices.md).</span><span class="sxs-lookup"><span data-stu-id="d147f-277">For more information about multithreading design issues, see [Managed Threading Best Practices](~/docs/standard/threading/managed-threading-best-practices.md).</span></span>  
  
 <span data-ttu-id="d147f-278">Ihre <xref:System.ComponentModel.BackgroundWorker.RunWorkerCompleted> Ereignishandler sollten immer überprüfen, die <xref:System.ComponentModel.AsyncCompletedEventArgs.Error%2A?displayProperty=nameWithType> und <xref:System.ComponentModel.AsyncCompletedEventArgs.Cancelled%2A?displayProperty=nameWithType> Eigenschaften vor dem Zugriff auf die <xref:System.ComponentModel.RunWorkerCompletedEventArgs.Result%2A?displayProperty=nameWithType> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="d147f-278">Your <xref:System.ComponentModel.BackgroundWorker.RunWorkerCompleted> event handler should always check the <xref:System.ComponentModel.AsyncCompletedEventArgs.Error%2A?displayProperty=nameWithType> and <xref:System.ComponentModel.AsyncCompletedEventArgs.Cancelled%2A?displayProperty=nameWithType> properties before accessing the <xref:System.ComponentModel.RunWorkerCompletedEventArgs.Result%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="d147f-279">Wenn eine Ausnahme ausgelöst wurde, oder wenn der Vorgang abgebrochen wurde, den Zugriff auf die <xref:System.ComponentModel.RunWorkerCompletedEventArgs.Result%2A?displayProperty=nameWithType> Eigenschaft löst eine Ausnahme aus.</span><span class="sxs-lookup"><span data-stu-id="d147f-279">If an exception was raised or if the operation was canceled, accessing the <xref:System.ComponentModel.RunWorkerCompletedEventArgs.Result%2A?displayProperty=nameWithType> property raises an exception.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d147f-280">Das folgende Codebeispiel veranschaulicht die Verwendung von der <xref:System.ComponentModel.BackgroundWorker.RunWorkerCompleted> Ereignis, um das Ergebnis eines asynchronen Vorgangs behandelt.</span><span class="sxs-lookup"><span data-stu-id="d147f-280">The following code example demonstrates the use of the <xref:System.ComponentModel.BackgroundWorker.RunWorkerCompleted> event to handle the result of an asynchronous operation.</span></span> <span data-ttu-id="d147f-281">Dieses Codebeispiel ist Teil eines umfangreicheren Beispiels für die <xref:System.ComponentModel.BackgroundWorker> Klasse.</span><span class="sxs-lookup"><span data-stu-id="d147f-281">This code example is part of a larger example provided for the <xref:System.ComponentModel.BackgroundWorker> class.</span></span>  
  
 [!code-cpp[System.ComponentModel.BackgroundWorker#6](~/samples/snippets/cpp/VS_Snippets_Winforms/System.ComponentModel.BackgroundWorker/CPP/fibonacciform.cpp#6)]
 [!code-csharp[System.ComponentModel.BackgroundWorker#6](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.BackgroundWorker/CS/fibonacciform.cs#6)]
 [!code-vb[System.ComponentModel.BackgroundWorker#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.BackgroundWorker/VB/fibonacciform.vb#6)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/5b56e2aa-dc05-444f-930c-2d7b23f9ad5b">
          <span data-ttu-id="d147f-282">Gewusst wie: Ausführen eines Vorgangs im Hintergrund</span>
          <span class="sxs-lookup">
            <span data-stu-id="d147f-282">How to: Run an Operation in the Background</span>
          </span>
        </related>
        <related type="Article" href="https://msdn.microsoft.com/library/9b7bc5ae-051c-4904-9720-18f6667388bd">
          <span data-ttu-id="d147f-283">Gewusst wie: Downloaden einer Datei im Hintergrund</span>
          <span class="sxs-lookup">
            <span data-stu-id="d147f-283">How to: Download a File in the Background</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="WorkerReportsProgress">
      <MemberSignature Language="C#" Value="public bool WorkerReportsProgress { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool WorkerReportsProgress" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.BackgroundWorker.WorkerReportsProgress" />
      <MemberSignature Language="VB.NET" Value="Public Property WorkerReportsProgress As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool WorkerReportsProgress { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.WorkerReportsProgress : bool with get, set" Usage="System.ComponentModel.BackgroundWorker.WorkerReportsProgress" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.EventBasedAsync</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d147f-284">Ruft einen Wert ab, der angibt, ob der <see cref="T:System.ComponentModel.BackgroundWorker" /> Fortschrittsaktualisierungen melden kann, oder legt diesen Wert fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d147f-284">Gets or sets a value indicating whether the <see cref="T:System.ComponentModel.BackgroundWorker" /> can report progress updates.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d147f-285">
            <see langword="true" />, wenn der <see cref="T:System.ComponentModel.BackgroundWorker" /> Fortschrittsaktualisierungen unterstützt, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d147f-285">
              <see langword="true" /> if the <see cref="T:System.ComponentModel.BackgroundWorker" /> supports progress updates; otherwise <see langword="false" />.</span>
          </span>
          <span data-ttu-id="d147f-286">Der Standardwert ist <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d147f-286">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d147f-287">Festlegen der <xref:System.ComponentModel.BackgroundWorker.WorkerReportsProgress%2A> Eigenschaft `true` Wunsch der <xref:System.ComponentModel.BackgroundWorker> um statusaktualisierungen zu unterstützen.</span><span class="sxs-lookup"><span data-stu-id="d147f-287">Set the <xref:System.ComponentModel.BackgroundWorker.WorkerReportsProgress%2A> property to `true` if you want the <xref:System.ComponentModel.BackgroundWorker> to support progress updates.</span></span> <span data-ttu-id="d147f-288">Wenn diese Eigenschaft ist `true`, Benutzercode aufrufen kann die <xref:System.ComponentModel.BackgroundWorker.ReportProgress%2A> Methode zum Auslösen der <xref:System.ComponentModel.BackgroundWorker.ProgressChanged> Ereignis.</span><span class="sxs-lookup"><span data-stu-id="d147f-288">When this property is `true`, user code can call the <xref:System.ComponentModel.BackgroundWorker.ReportProgress%2A> method to raise the <xref:System.ComponentModel.BackgroundWorker.ProgressChanged> event.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.BackgroundWorker.ReportProgress(System.Int32)" />
        <related type="Article" href="https://msdn.microsoft.com/library/5b56e2aa-dc05-444f-930c-2d7b23f9ad5b">
          <span data-ttu-id="d147f-289">Gewusst wie: Ausführen eines Vorgangs im Hintergrund</span>
          <span class="sxs-lookup">
            <span data-stu-id="d147f-289">How to: Run an Operation in the Background</span>
          </span>
        </related>
        <related type="Article" href="https://msdn.microsoft.com/library/9b7bc5ae-051c-4904-9720-18f6667388bd">
          <span data-ttu-id="d147f-290">Gewusst wie: Downloaden einer Datei im Hintergrund</span>
          <span class="sxs-lookup">
            <span data-stu-id="d147f-290">How to: Download a File in the Background</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="WorkerSupportsCancellation">
      <MemberSignature Language="C#" Value="public bool WorkerSupportsCancellation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool WorkerSupportsCancellation" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.BackgroundWorker.WorkerSupportsCancellation" />
      <MemberSignature Language="VB.NET" Value="Public Property WorkerSupportsCancellation As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool WorkerSupportsCancellation { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.WorkerSupportsCancellation : bool with get, set" Usage="System.ComponentModel.BackgroundWorker.WorkerSupportsCancellation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.EventBasedAsync</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d147f-291">Ruft einen Wert ab, der angibt, ob der <see cref="T:System.ComponentModel.BackgroundWorker" /> asynchrone Abbrüche unterstützt, oder legt diesen Wert fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d147f-291">Gets or sets a value indicating whether the <see cref="T:System.ComponentModel.BackgroundWorker" /> supports asynchronous cancellation.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d147f-292">
            <see langword="true" />, wenn <see cref="T:System.ComponentModel.BackgroundWorker" /> Abbrüche unterstützt, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d147f-292">
              <see langword="true" /> if the <see cref="T:System.ComponentModel.BackgroundWorker" /> supports cancellation; otherwise <see langword="false" />.</span>
          </span>
          <span data-ttu-id="d147f-293">Der Standardwert ist <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d147f-293">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d147f-294">Legen Sie die <xref:System.ComponentModel.BackgroundWorker.WorkerSupportsCancellation%2A> Eigenschaft `true` Wunsch der <xref:System.ComponentModel.BackgroundWorker> zur Unterstützung des Abbruchs.</span><span class="sxs-lookup"><span data-stu-id="d147f-294">Set the <xref:System.ComponentModel.BackgroundWorker.WorkerSupportsCancellation%2A> property to `true` if you want the <xref:System.ComponentModel.BackgroundWorker> to support cancellation.</span></span> <span data-ttu-id="d147f-295">Wenn diese Eigenschaft ist `true`, rufen Sie die <xref:System.ComponentModel.BackgroundWorker.CancelAsync%2A> Methode zum Unterbrechen eines Hintergrundvorgangs.</span><span class="sxs-lookup"><span data-stu-id="d147f-295">When this property is `true`, you can call the <xref:System.ComponentModel.BackgroundWorker.CancelAsync%2A> method to interrupt a background operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.BackgroundWorker.CancelAsync" />
        <related type="Article" href="https://msdn.microsoft.com/library/5b56e2aa-dc05-444f-930c-2d7b23f9ad5b">
          <span data-ttu-id="d147f-296">Gewusst wie: Ausführen eines Vorgangs im Hintergrund</span>
          <span class="sxs-lookup">
            <span data-stu-id="d147f-296">How to: Run an Operation in the Background</span>
          </span>
        </related>
        <related type="Article" href="https://msdn.microsoft.com/library/9b7bc5ae-051c-4904-9720-18f6667388bd">
          <span data-ttu-id="d147f-297">Gewusst wie: Downloaden einer Datei im Hintergrund</span>
          <span class="sxs-lookup">
            <span data-stu-id="d147f-297">How to: Download a File in the Background</span>
          </span>
        </related>
      </Docs>
    </Member>
  </Members>
</Type>