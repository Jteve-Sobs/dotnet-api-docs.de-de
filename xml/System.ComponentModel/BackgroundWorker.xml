<Type Name="BackgroundWorker" FullName="System.ComponentModel.BackgroundWorker">
  <Metadata><Meta Name="ms.openlocfilehash" Value="af8f931e2cd629d625775f90cf31e902f5a822b0" /><Meta Name="ms.sourcegitcommit" Value="33529b5cc32683b91d3422992fb4dc422f85782b" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="08/17/2020" /><Meta Name="ms.locfileid" Value="88267215" /></Metadata><TypeSignature Language="C#" Value="public class BackgroundWorker : IDisposable" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit BackgroundWorker extends System.Object implements class System.IDisposable" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.BackgroundWorker" />
  <TypeSignature Language="VB.NET" Value="Public Class BackgroundWorker&#xA;Implements IDisposable" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1" />
  <TypeSignature Language="C++ CLI" Value="public ref class BackgroundWorker : IDisposable" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1" />
  <TypeSignature Language="F#" Value="type BackgroundWorker = class&#xA;    interface IDisposable" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1" />
  <TypeSignature Language="C#" Value="public class BackgroundWorker : System.ComponentModel.Component" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit BackgroundWorker extends System.ComponentModel.Component" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="VB.NET" Value="Public Class BackgroundWorker&#xA;Inherits Component" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="C++ CLI" Value="public ref class BackgroundWorker : System::ComponentModel::Component" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="F#" Value="type BackgroundWorker = class&#xA;    inherit Component" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.EventBasedAsync</AssemblyName>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="netstandard" FromVersion="2.1.0.0" To="System.ComponentModel.EventBasedAsync" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
    <BaseTypeName FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">System.ComponentModel.Component</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1">
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName Language="C#">[System.ComponentModel.DefaultEvent("DoWork")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultEvent("DoWork")&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="bb169-101">Führt einen Vorgang im separaten Thread aus.</span><span class="sxs-lookup"><span data-stu-id="bb169-101">Executes an operation on a separate thread.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb169-102">Mit der- <xref:System.ComponentModel.BackgroundWorker> Klasse können Sie einen Vorgang in einem separaten, dedizierten Thread ausführen.</span><span class="sxs-lookup"><span data-stu-id="bb169-102">The <xref:System.ComponentModel.BackgroundWorker> class allows you to run an operation on a separate, dedicated thread.</span></span> <span data-ttu-id="bb169-103">Zeitaufwändige Vorgänge wie Downloads und Datenbanktransaktionen können dazu führen, dass die Benutzeroberfläche nicht mehr reagiert, während Sie ausgeführt wird.</span><span class="sxs-lookup"><span data-stu-id="bb169-103">Time-consuming operations like downloads and database transactions can cause your user interface (UI) to seem as though it has stopped responding while they are running.</span></span> <span data-ttu-id="bb169-104">Wenn Sie eine reaktionsfähige Benutzeroberfläche benötigen und lange Verzögerungen im Zusammenhang mit solchen Vorgängen auftreten, stellt die- <xref:System.ComponentModel.BackgroundWorker> Klasse eine bequeme Lösung bereit.</span><span class="sxs-lookup"><span data-stu-id="bb169-104">When you want a responsive UI and you are faced with long delays associated with such operations, the <xref:System.ComponentModel.BackgroundWorker> class provides a convenient solution.</span></span>  
  
 <span data-ttu-id="bb169-105">Wenn Sie einen zeitaufwändigen Vorgang im Hintergrund ausführen möchten, erstellen Sie einen, <xref:System.ComponentModel.BackgroundWorker> und lauschen Sie auf Ereignisse, die den Fortschritt des Vorgangs melden und signalisieren, wann der Vorgang abgeschlossen ist.</span><span class="sxs-lookup"><span data-stu-id="bb169-105">To execute a time-consuming operation in the background, create a <xref:System.ComponentModel.BackgroundWorker> and listen for events that report the progress of your operation and signal when your operation is finished.</span></span> <span data-ttu-id="bb169-106">Sie können das Programm gesteuert erstellen, <xref:System.ComponentModel.BackgroundWorker> oder Sie können es von der Registerkarte **Komponenten** der **Toolbox**auf das Formular ziehen.</span><span class="sxs-lookup"><span data-stu-id="bb169-106">You can create the <xref:System.ComponentModel.BackgroundWorker> programmatically or you can drag it onto your form from the **Components** tab of the **Toolbox**.</span></span> <span data-ttu-id="bb169-107">Wenn Sie die <xref:System.ComponentModel.BackgroundWorker> im Windows Forms-Designer erstellen, wird Sie in der Komponenten Leiste angezeigt, und ihre Eigenschaften werden in der Eigenschaftenfenster angezeigt.</span><span class="sxs-lookup"><span data-stu-id="bb169-107">If you create the <xref:System.ComponentModel.BackgroundWorker> in the Windows Forms Designer, it will appear in the Component Tray, and its properties will be displayed in the Properties window.</span></span>  
  
 <span data-ttu-id="bb169-108">Um für einen Hintergrund Vorgang einzurichten, fügen Sie einen Ereignishandler für das- <xref:System.ComponentModel.BackgroundWorker.DoWork> Ereignis hinzu.</span><span class="sxs-lookup"><span data-stu-id="bb169-108">To set up for a background operation, add an event handler for the <xref:System.ComponentModel.BackgroundWorker.DoWork> event.</span></span> <span data-ttu-id="bb169-109">Aufrufen Sie den zeitaufwändigen Vorgang in diesem Ereignishandler.</span><span class="sxs-lookup"><span data-stu-id="bb169-109">Call your time-consuming operation in this event handler.</span></span> <span data-ttu-id="bb169-110">Um den Vorgang zu starten, wird aufgerufen <xref:System.ComponentModel.BackgroundWorker.RunWorkerAsync%2A> .</span><span class="sxs-lookup"><span data-stu-id="bb169-110">To start the operation, call <xref:System.ComponentModel.BackgroundWorker.RunWorkerAsync%2A>.</span></span> <span data-ttu-id="bb169-111">Um Benachrichtigungen über Statusaktualisierungen zu erhalten, behandeln Sie das- <xref:System.ComponentModel.BackgroundWorker.ProgressChanged> Ereignis.</span><span class="sxs-lookup"><span data-stu-id="bb169-111">To receive notifications of progress updates, handle the <xref:System.ComponentModel.BackgroundWorker.ProgressChanged> event.</span></span> <span data-ttu-id="bb169-112">Um eine Benachrichtigung zu erhalten, wenn der Vorgang abgeschlossen ist, behandeln Sie das- <xref:System.ComponentModel.BackgroundWorker.RunWorkerCompleted> Ereignis.</span><span class="sxs-lookup"><span data-stu-id="bb169-112">To receive a notification when the operation is completed, handle the <xref:System.ComponentModel.BackgroundWorker.RunWorkerCompleted> event.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="bb169-113">Sie müssen darauf achten, dass Sie keine Benutzeroberflächen Objekte in Ihrem <xref:System.ComponentModel.BackgroundWorker.DoWork> Ereignishandler bearbeiten.</span><span class="sxs-lookup"><span data-stu-id="bb169-113">You must be careful not to manipulate any user-interface objects in your <xref:System.ComponentModel.BackgroundWorker.DoWork> event handler.</span></span> <span data-ttu-id="bb169-114">Kommunizieren Sie stattdessen über das <xref:System.ComponentModel.BackgroundWorker.ProgressChanged> -Ereignis und das-Ereignis mit der Benutzeroberfläche <xref:System.ComponentModel.BackgroundWorker.RunWorkerCompleted> .</span><span class="sxs-lookup"><span data-stu-id="bb169-114">Instead, communicate to the user interface through the <xref:System.ComponentModel.BackgroundWorker.ProgressChanged> and <xref:System.ComponentModel.BackgroundWorker.RunWorkerCompleted> events.</span></span>  
>   
>  <span data-ttu-id="bb169-115"><xref:System.ComponentModel.BackgroundWorker> Ereignisse werden nicht über Grenzen hinweg gemarshallt <xref:System.AppDomain> .</span><span class="sxs-lookup"><span data-stu-id="bb169-115"><xref:System.ComponentModel.BackgroundWorker> events are not marshaled across <xref:System.AppDomain> boundaries.</span></span> <span data-ttu-id="bb169-116">Verwenden Sie keine- <xref:System.ComponentModel.BackgroundWorker> Komponente, um Multithread-Vorgänge in mehr als einem auszuführen <xref:System.AppDomain> .</span><span class="sxs-lookup"><span data-stu-id="bb169-116">Do not use a <xref:System.ComponentModel.BackgroundWorker> component to perform multithreaded operations in more than one <xref:System.AppDomain>.</span></span>  
  
 <span data-ttu-id="bb169-117">Wenn für den Hintergrund Vorgang ein-Parameter erforderlich ist, müssen <xref:System.ComponentModel.BackgroundWorker.RunWorkerAsync%2A> Sie mit dem-Parameter aufrufen.</span><span class="sxs-lookup"><span data-stu-id="bb169-117">If your background operation requires a parameter, call <xref:System.ComponentModel.BackgroundWorker.RunWorkerAsync%2A> with your parameter.</span></span> <span data-ttu-id="bb169-118">Innerhalb des- <xref:System.ComponentModel.BackgroundWorker.DoWork> Ereignis Handlers können Sie den-Parameter aus der- <xref:System.ComponentModel.DoWorkEventArgs.Argument%2A?displayProperty=nameWithType> Eigenschaft extrahieren.</span><span class="sxs-lookup"><span data-stu-id="bb169-118">Inside the <xref:System.ComponentModel.BackgroundWorker.DoWork> event handler, you can extract the parameter from the <xref:System.ComponentModel.DoWorkEventArgs.Argument%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="bb169-119">Weitere Informationen zum Verwenden von <xref:System.ComponentModel.BackgroundWorker> finden Sie unter [Vorgehensweise: Ausführen eines Vorgangs im Hintergrund](/dotnet/framework/winforms/controls/how-to-run-an-operation-in-the-background).</span><span class="sxs-lookup"><span data-stu-id="bb169-119">For more information about <xref:System.ComponentModel.BackgroundWorker>, see [How to: Run an Operation in the Background](/dotnet/framework/winforms/controls/how-to-run-an-operation-in-the-background).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bb169-120">Im folgenden Codebeispiel werden die Grundlagen der- <xref:System.ComponentModel.BackgroundWorker> Klasse zum asynchronen Ausführen eines zeitaufwändigen Vorgangs veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="bb169-120">The following code example demonstrates the basics of the <xref:System.ComponentModel.BackgroundWorker> class for executing a time-consuming operation asynchronously.</span></span> <span data-ttu-id="bb169-121">Die folgende Abbildung zeigt ein Beispiel für die Ausgabe.</span><span class="sxs-lookup"><span data-stu-id="bb169-121">The following illustration shows an example of the output.</span></span>  
  
 <span data-ttu-id="bb169-122">![Einfaches Beispiel für BackgroundWorker](~/add/media/backgroundworker-simple.png "Einfaches Beispiel für BackgroundWorker")</span><span class="sxs-lookup"><span data-stu-id="bb169-122">![BackgroundWorker simple example](~/add/media/backgroundworker-simple.png "BackgroundWorker simple example")</span></span>  
  
 <span data-ttu-id="bb169-123">Um diesen Code zu testen, erstellen Sie eine Windows Forms-Anwendung.</span><span class="sxs-lookup"><span data-stu-id="bb169-123">To try this code, create a Windows Forms application.</span></span> <span data-ttu-id="bb169-124">Fügen Sie ein Steuerelement mit dem Namen hinzu, <xref:System.Windows.Forms.Label> `resultLabel` und fügen Sie zwei Steuer <xref:System.Windows.Forms.Button> Elemente `startAsyncButton` `cancelAsyncButton`</span><span class="sxs-lookup"><span data-stu-id="bb169-124">Add a <xref:System.Windows.Forms.Label> control named `resultLabel` and add two <xref:System.Windows.Forms.Button> controls named `startAsyncButton` and `cancelAsyncButton`.</span></span> <span data-ttu-id="bb169-125">Erstellen Sie <xref:System.Windows.Forms.Control.Click> Ereignishandler für beide Schaltflächen.</span><span class="sxs-lookup"><span data-stu-id="bb169-125">Create <xref:System.Windows.Forms.Control.Click> event handlers for both buttons.</span></span> <span data-ttu-id="bb169-126">Fügen Sie auf der Registerkarte **Komponenten** der Toolbox eine <xref:System.ComponentModel.BackgroundWorker> Komponente mit dem Namen hinzu `backgroundWorker1` .</span><span class="sxs-lookup"><span data-stu-id="bb169-126">From the **Components** tab of the Toolbox, add a <xref:System.ComponentModel.BackgroundWorker> component named `backgroundWorker1`.</span></span> <span data-ttu-id="bb169-127">Erstellen <xref:System.ComponentModel.BackgroundWorker.DoWork> Sie <xref:System.ComponentModel.BackgroundWorker.ProgressChanged> <xref:System.ComponentModel.BackgroundWorker.RunWorkerCompleted> die Ereignishandler, und für den <xref:System.ComponentModel.BackgroundWorker> .</span><span class="sxs-lookup"><span data-stu-id="bb169-127">Create <xref:System.ComponentModel.BackgroundWorker.DoWork>, <xref:System.ComponentModel.BackgroundWorker.ProgressChanged>, and <xref:System.ComponentModel.BackgroundWorker.RunWorkerCompleted> event handlers for the <xref:System.ComponentModel.BackgroundWorker>.</span></span> <span data-ttu-id="bb169-128">Ersetzen Sie im Code für das Formular den vorhandenen Code durch den folgenden Code.</span><span class="sxs-lookup"><span data-stu-id="bb169-128">In the code for the form, replace the existing code with the following code.</span></span>  
  
 [!code-csharp[System.ComponentModel.BackgroundWorkerSimple#1](~/samples/snippets/csharp/VS_Snippets_Winforms/system.componentmodel.backgroundworkersimple/cs/form1.cs#1)]
 [!code-vb[System.ComponentModel.BackgroundWorkerSimple#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/system.componentmodel.backgroundworkersimple/vb/form1.vb#1)]  
  
 <span data-ttu-id="bb169-129">Im folgenden Codebeispiel wird die Verwendung der- <xref:System.ComponentModel.BackgroundWorker> Klasse zum asynchronen Ausführen eines zeitaufwändigen Vorgangs veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="bb169-129">The following code example demonstrates the use of the <xref:System.ComponentModel.BackgroundWorker> class for executing a time-consuming operation asynchronously.</span></span> <span data-ttu-id="bb169-130">Die folgende Abbildung zeigt ein Beispiel für die Ausgabe.</span><span class="sxs-lookup"><span data-stu-id="bb169-130">The following illustration shows an example of the output.</span></span>  
  
 <span data-ttu-id="bb169-131">![Fibonacci-Beispiel für BackgroundWorker](~/add/media/backgroundworker-fibonacci.png "Fibonacci-Beispiel für BackgroundWorker")</span><span class="sxs-lookup"><span data-stu-id="bb169-131">![BackgroundWorker Fibonacci example](~/add/media/backgroundworker-fibonacci.png "BackgroundWorker Fibonacci example")</span></span>  
  
 <span data-ttu-id="bb169-132">Durch den-Vorgang wird die ausgewählte "fbonacci"-Nummer berechnet, während der Berechnung Statusaktualisierungen gemeldet und eine ausstehende Berechnung abgebrochen werden.</span><span class="sxs-lookup"><span data-stu-id="bb169-132">The operation computes the selected Fibonacci number, reports progress updates as the calculation proceeds, and permits a pending calculation to be canceled.</span></span>  
  
 [!code-cpp[System.ComponentModel.BackgroundWorker#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.ComponentModel.BackgroundWorker/CPP/fibonacciform.cpp#1)]
 [!code-csharp[System.ComponentModel.BackgroundWorker#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.BackgroundWorker/CS/fibonacciform.cs#1)]
 [!code-vb[System.ComponentModel.BackgroundWorker#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.BackgroundWorker/VB/fibonacciform.vb#1)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="/dotnet/framework/winforms/controls/how-to-run-an-operation-in-the-background"><span data-ttu-id="bb169-133">Vorgehensweise: Ausführen eines Vorgangs im Hintergrund</span><span class="sxs-lookup"><span data-stu-id="bb169-133">How to: Run an Operation in the Background</span></span></related>
    <related type="Article" href="/dotnet/standard/threading/managed-threading-best-practices"><span data-ttu-id="bb169-134">Empfohlene Vorgehensweise für das verwaltete Threading</span><span class="sxs-lookup"><span data-stu-id="bb169-134">Managed Threading Best Practices</span></span></related>
    <related type="Article" href="/dotnet/framework/winforms/controls/how-to-download-a-file-in-the-background"><span data-ttu-id="bb169-135">Vorgehensweise: Downloaden einer Datei im Hintergrund</span><span class="sxs-lookup"><span data-stu-id="bb169-135">How to: Download a File in the Background</span></span></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BackgroundWorker ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.BackgroundWorker.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BackgroundWorker();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.EventBasedAsync</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="bb169-136">Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.BackgroundWorker" />-Klasse.</span><span class="sxs-lookup"><span data-stu-id="bb169-136">Initializes a new instance of the <see cref="T:System.ComponentModel.BackgroundWorker" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb169-137">Dieser Konstruktor initialisiert eine <xref:System.ComponentModel.BackgroundWorker> .</span><span class="sxs-lookup"><span data-stu-id="bb169-137">This constructor initializes a <xref:System.ComponentModel.BackgroundWorker>.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/winforms/controls/how-to-run-an-operation-in-the-background"><span data-ttu-id="bb169-138">Vorgehensweise: Ausführen eines Vorgangs im Hintergrund</span><span class="sxs-lookup"><span data-stu-id="bb169-138">How to: Run an Operation in the Background</span></span></related>
        <related type="Article" href="/dotnet/framework/winforms/controls/how-to-download-a-file-in-the-background"><span data-ttu-id="bb169-139">Vorgehensweise: Downloaden einer Datei im Hintergrund</span><span class="sxs-lookup"><span data-stu-id="bb169-139">How to: Download a File in the Background</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CancelAsync">
      <MemberSignature Language="C#" Value="public void CancelAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CancelAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.BackgroundWorker.CancelAsync" />
      <MemberSignature Language="VB.NET" Value="Public Sub CancelAsync ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CancelAsync();" />
      <MemberSignature Language="F#" Value="member this.CancelAsync : unit -&gt; unit" Usage="backgroundWorker.CancelAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.EventBasedAsync</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="bb169-140">Fordert das Abbrechen eines anstehenden Hintergrundvorgangs an.</span><span class="sxs-lookup"><span data-stu-id="bb169-140">Requests cancellation of a pending background operation.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb169-141"><xref:System.ComponentModel.BackgroundWorker.CancelAsync%2A> sendet eine Anforderung, um den ausstehenden Hintergrund Vorgang zu beenden und die- <xref:System.ComponentModel.BackgroundWorker.CancellationPending%2A> Eigenschaft auf festgelegt `true` .</span><span class="sxs-lookup"><span data-stu-id="bb169-141"><xref:System.ComponentModel.BackgroundWorker.CancelAsync%2A> submits a request to terminate the pending background operation and sets the <xref:System.ComponentModel.BackgroundWorker.CancellationPending%2A> property to `true`.</span></span>  
  
 <span data-ttu-id="bb169-142">Wenn Sie den Befehl <xref:System.ComponentModel.BackgroundWorker.CancelAsync%2A> ausführen, hat die Worker-Methode die Möglichkeit, die Ausführung zu beenden und den Vorgang zu beenden.</span><span class="sxs-lookup"><span data-stu-id="bb169-142">When you call <xref:System.ComponentModel.BackgroundWorker.CancelAsync%2A>, your worker method has an opportunity to stop its execution and exit.</span></span> <span data-ttu-id="bb169-143">Der Workercode sollte die-Eigenschaft regelmäßig überprüfen, um festzustellen, <xref:System.ComponentModel.BackgroundWorker.CancellationPending%2A> ob Sie auf festgelegt wurde `true` .</span><span class="sxs-lookup"><span data-stu-id="bb169-143">The worker code should periodically check the <xref:System.ComponentModel.BackgroundWorker.CancellationPending%2A> property to see if it has been set to `true`.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="bb169-144">Beachten Sie, dass der Code im- <xref:System.ComponentModel.BackgroundWorker.DoWork> Ereignishandler seine Arbeit beenden kann, wenn eine Abbruch Anforderung ausgeführt wird, und ihre Abruf Schleife kann <xref:System.ComponentModel.BackgroundWorker.CancellationPending%2A> nicht auf festgelegt werden `true` .</span><span class="sxs-lookup"><span data-stu-id="bb169-144">Be aware that your code in the <xref:System.ComponentModel.BackgroundWorker.DoWork> event handler may finish its work as a cancellation request is being made, and your polling loop may miss <xref:System.ComponentModel.BackgroundWorker.CancellationPending%2A> being set to `true`.</span></span> <span data-ttu-id="bb169-145">In diesem Fall wird das- <xref:System.ComponentModel.AsyncCompletedEventArgs.Cancelled%2A> Flag von <xref:System.ComponentModel.RunWorkerCompletedEventArgs?displayProperty=nameWithType> im- <xref:System.ComponentModel.BackgroundWorker.RunWorkerCompleted> Ereignishandler nicht auf festgelegt `true` , obwohl eine Abbruch Anforderung erfolgt ist.</span><span class="sxs-lookup"><span data-stu-id="bb169-145">In this case, the <xref:System.ComponentModel.AsyncCompletedEventArgs.Cancelled%2A> flag of <xref:System.ComponentModel.RunWorkerCompletedEventArgs?displayProperty=nameWithType> in your <xref:System.ComponentModel.BackgroundWorker.RunWorkerCompleted> event handler will not be set to `true`, even though a cancellation request was made.</span></span> <span data-ttu-id="bb169-146">Diese Situation wird als *Racebedingung* bezeichnet und ist ein häufiges Problem bei der Multithreadprogrammierung.</span><span class="sxs-lookup"><span data-stu-id="bb169-146">This situation is called a *race condition* and is a common concern in multithreaded programming.</span></span> <span data-ttu-id="bb169-147">Weitere Informationen zu Problemen beim Entwerfen von Multithreading finden Sie unter [bewährte Methoden für das verwaltete Threading](/dotnet/standard/threading/managed-threading-best-practices).</span><span class="sxs-lookup"><span data-stu-id="bb169-147">For more information about multithreading design issues, see [Managed Threading Best Practices](/dotnet/standard/threading/managed-threading-best-practices).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bb169-148">Im folgenden Codebeispiel wird veranschaulicht, wie die-Methode verwendet wird <xref:System.ComponentModel.BackgroundWorker.CancelAsync%2A> , um einen asynchronen Vorgang ("Background") abzubrechen.</span><span class="sxs-lookup"><span data-stu-id="bb169-148">The following code example demonstrates the use of the <xref:System.ComponentModel.BackgroundWorker.CancelAsync%2A> method to cancel an asynchronous ("background") operation.</span></span> <span data-ttu-id="bb169-149">Dieses Codebeispiel ist Teil eines größeren Beispiels, das für die-Klasse bereitgestellt wird <xref:System.ComponentModel.BackgroundWorker> .</span><span class="sxs-lookup"><span data-stu-id="bb169-149">This code example is part of a larger example provided for the <xref:System.ComponentModel.BackgroundWorker> class.</span></span>  
  
 [!code-cpp[System.ComponentModel.BackgroundWorker#4](~/samples/snippets/cpp/VS_Snippets_Winforms/System.ComponentModel.BackgroundWorker/CPP/fibonacciform.cpp#4)]
 [!code-csharp[System.ComponentModel.BackgroundWorker#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.BackgroundWorker/CS/fibonacciform.cs#4)]
 [!code-vb[System.ComponentModel.BackgroundWorker#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.BackgroundWorker/VB/fibonacciform.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="bb169-150"><see cref="P:System.ComponentModel.BackgroundWorker.WorkerSupportsCancellation" /> ist <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="bb169-150"><see cref="P:System.ComponentModel.BackgroundWorker.WorkerSupportsCancellation" /> is <see langword="false" />.</span></span></exception>
        <related type="Article" href="/dotnet/framework/winforms/controls/how-to-run-an-operation-in-the-background"><span data-ttu-id="bb169-151">Vorgehensweise: Ausführen eines Vorgangs im Hintergrund</span><span class="sxs-lookup"><span data-stu-id="bb169-151">How to: Run an Operation in the Background</span></span></related>
        <related type="Article" href="/dotnet/framework/winforms/controls/how-to-download-a-file-in-the-background"><span data-ttu-id="bb169-152">Vorgehensweise: Downloaden einer Datei im Hintergrund</span><span class="sxs-lookup"><span data-stu-id="bb169-152">How to: Download a File in the Background</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CancellationPending">
      <MemberSignature Language="C#" Value="public bool CancellationPending { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CancellationPending" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.BackgroundWorker.CancellationPending" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CancellationPending As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CancellationPending { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CancellationPending : bool" Usage="System.ComponentModel.BackgroundWorker.CancellationPending" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.EventBasedAsync</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.ComponentModel.Browsable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bb169-153">Ruft einen Wert ab, der angibt, ob die Anwendung den Abbruch eines Hintergrundvorgangs angefordert hat.</span><span class="sxs-lookup"><span data-stu-id="bb169-153">Gets a value indicating whether the application has requested cancellation of a background operation.</span></span></summary>
        <value><span data-ttu-id="bb169-154"><see langword="true" />, wenn die Anwendung den Abbruch eines Hintergrundvorgangs angefordert hat, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="bb169-154"><see langword="true" /> if the application has requested cancellation of a background operation; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="bb169-155">Der Standardwert ist <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="bb169-155">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb169-156">Wenn <xref:System.ComponentModel.BackgroundWorker.CancellationPending%2A> ist `true` , wird die- <xref:System.ComponentModel.BackgroundWorker.CancelAsync%2A> Methode für aufgerufen <xref:System.ComponentModel.BackgroundWorker> .</span><span class="sxs-lookup"><span data-stu-id="bb169-156">If <xref:System.ComponentModel.BackgroundWorker.CancellationPending%2A> is `true`, then the <xref:System.ComponentModel.BackgroundWorker.CancelAsync%2A> method has been called on the <xref:System.ComponentModel.BackgroundWorker>.</span></span>  
  
 <span data-ttu-id="bb169-157">Diese Eigenschaft ist für die Verwendung durch den Arbeits Thread gedacht, der den Hintergrund Vorgang in regelmäßigen Abständen überprüfen <xref:System.ComponentModel.BackgroundWorker.CancellationPending%2A> und abbrechen soll, wenn er auf festgelegt ist `true` .</span><span class="sxs-lookup"><span data-stu-id="bb169-157">This property is meant for use by the worker thread, which should periodically check <xref:System.ComponentModel.BackgroundWorker.CancellationPending%2A> and abort the background operation when it is set to `true`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bb169-158">Im folgenden Codebeispiel wird veranschaulicht, wie die-Eigenschaft verwendet wird <xref:System.ComponentModel.BackgroundWorker.CancellationPending%2A> , um eine <xref:System.ComponentModel.BackgroundWorker> über Ihren Abbruch Zustand abzufragen.</span><span class="sxs-lookup"><span data-stu-id="bb169-158">The following code example demonstrates the use of the <xref:System.ComponentModel.BackgroundWorker.CancellationPending%2A> property to query a <xref:System.ComponentModel.BackgroundWorker> about its cancellation state.</span></span> <span data-ttu-id="bb169-159">Dieses Codebeispiel ist Teil eines größeren Beispiels, das für die-Klasse bereitgestellt wird <xref:System.ComponentModel.BackgroundWorker> .</span><span class="sxs-lookup"><span data-stu-id="bb169-159">This code example is part of a larger example provided for the <xref:System.ComponentModel.BackgroundWorker> class.</span></span>  
  
 [!code-cpp[System.ComponentModel.BackgroundWorker#8](~/samples/snippets/cpp/VS_Snippets_Winforms/System.ComponentModel.BackgroundWorker/CPP/fibonacciform.cpp#8)]
 [!code-csharp[System.ComponentModel.BackgroundWorker#8](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.BackgroundWorker/CS/fibonacciform.cs#8)]
 [!code-vb[System.ComponentModel.BackgroundWorker#8](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.BackgroundWorker/VB/fibonacciform.vb#8)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/winforms/controls/how-to-run-an-operation-in-the-background"><span data-ttu-id="bb169-160">Vorgehensweise: Ausführen eines Vorgangs im Hintergrund</span><span class="sxs-lookup"><span data-stu-id="bb169-160">How to: Run an Operation in the Background</span></span></related>
        <related type="Article" href="/dotnet/framework/winforms/controls/how-to-download-a-file-in-the-background"><span data-ttu-id="bb169-161">Vorgehensweise: Downloaden einer Datei im Hintergrund</span><span class="sxs-lookup"><span data-stu-id="bb169-161">How to: Download a File in the Background</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.BackgroundWorker.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="backgroundWorker.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.EventBasedAsync</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="bb169-162">Führt anwendungsspezifische Aufgaben durch, die mit der Freigabe, der Zurückgabe oder dem Zurücksetzen von nicht verwalteten Ressourcen zusammenhängen.</span><span class="sxs-lookup"><span data-stu-id="bb169-162">Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.BackgroundWorker.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="backgroundWorker.Dispose disposing" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1" />
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netstandard-2.1" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netstandard-2.1" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netstandard-2.1" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netstandard-2.1" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="backgroundWorker.Dispose disposing" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netstandard-2.1" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.EventBasedAsync</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-3.0;netcore-3.1;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="disposing">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DoWork">
      <MemberSignature Language="C#" Value="public event System.ComponentModel.DoWorkEventHandler DoWork;" />
      <MemberSignature Language="ILAsm" Value=".event class System.ComponentModel.DoWorkEventHandler DoWork" />
      <MemberSignature Language="DocId" Value="E:System.ComponentModel.BackgroundWorker.DoWork" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DoWork As DoWorkEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::ComponentModel::DoWorkEventHandler ^ DoWork;" />
      <MemberSignature Language="F#" Value="member this.DoWork : System.ComponentModel.DoWorkEventHandler " Usage="member this.DoWork : System.ComponentModel.DoWorkEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.EventBasedAsync</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.DoWorkEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bb169-163">Tritt ein, wenn <see cref="M:System.ComponentModel.BackgroundWorker.RunWorkerAsync" /> aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="bb169-163">Occurs when <see cref="M:System.ComponentModel.BackgroundWorker.RunWorkerAsync" /> is called.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb169-164">Dieses Ereignis wird ausgelöst, wenn Sie die-Methode aufzurufen <xref:System.ComponentModel.BackgroundWorker.RunWorkerAsync%2A> .</span><span class="sxs-lookup"><span data-stu-id="bb169-164">This event is raised when you call the <xref:System.ComponentModel.BackgroundWorker.RunWorkerAsync%2A> method.</span></span> <span data-ttu-id="bb169-165">An dieser Stelle starten Sie den Vorgang, der die potenziell zeitaufwändige Arbeit ausführt.</span><span class="sxs-lookup"><span data-stu-id="bb169-165">This is where you start the operation that performs the potentially time-consuming work.</span></span>  
  
 <span data-ttu-id="bb169-166">Der Code im- <xref:System.ComponentModel.BackgroundWorker.DoWork> Ereignishandler sollte den-Eigenschafts Wert in regelmäßigen Abständen überprüfen <xref:System.ComponentModel.BackgroundWorker.CancellationPending%2A> und den Vorgang abbrechen, wenn dies der Fall ist `true` .</span><span class="sxs-lookup"><span data-stu-id="bb169-166">Your code in the <xref:System.ComponentModel.BackgroundWorker.DoWork> event handler should periodically check the <xref:System.ComponentModel.BackgroundWorker.CancellationPending%2A> property value and abort the operation if it is `true`.</span></span> <span data-ttu-id="bb169-167">Wenn dies auftritt, können Sie das <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> -Flag von <xref:System.ComponentModel.DoWorkEventArgs?displayProperty=nameWithType> auf festlegen `true` , und das- <xref:System.ComponentModel.AsyncCompletedEventArgs.Cancelled%2A> Flag von <xref:System.ComponentModel.RunWorkerCompletedEventArgs?displayProperty=nameWithType> im- <xref:System.ComponentModel.BackgroundWorker.RunWorkerCompleted> Ereignishandler wird auf festgelegt `true` .</span><span class="sxs-lookup"><span data-stu-id="bb169-167">When this occurs, you can set the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> flag of <xref:System.ComponentModel.DoWorkEventArgs?displayProperty=nameWithType> to `true`, and the <xref:System.ComponentModel.AsyncCompletedEventArgs.Cancelled%2A> flag of <xref:System.ComponentModel.RunWorkerCompletedEventArgs?displayProperty=nameWithType> in your <xref:System.ComponentModel.BackgroundWorker.RunWorkerCompleted> event handler will be set to `true`.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="bb169-168">Beachten Sie, dass der Code im- <xref:System.ComponentModel.BackgroundWorker.DoWork> Ereignishandler seine Arbeit beenden kann, wenn eine Abbruch Anforderung ausgeführt wird, und ihre Abruf Schleife kann <xref:System.ComponentModel.BackgroundWorker.CancellationPending%2A> nicht auf festgelegt werden `true` .</span><span class="sxs-lookup"><span data-stu-id="bb169-168">Be aware that your code in the <xref:System.ComponentModel.BackgroundWorker.DoWork> event handler may finish its work as a cancellation request is being made, and your polling loop may miss <xref:System.ComponentModel.BackgroundWorker.CancellationPending%2A> being set to `true`.</span></span> <span data-ttu-id="bb169-169">In diesem Fall wird das- <xref:System.ComponentModel.AsyncCompletedEventArgs.Cancelled%2A> Flag von <xref:System.ComponentModel.RunWorkerCompletedEventArgs?displayProperty=nameWithType> im- <xref:System.ComponentModel.BackgroundWorker.RunWorkerCompleted> Ereignishandler nicht auf festgelegt `true` , obwohl eine Abbruch Anforderung erfolgt ist.</span><span class="sxs-lookup"><span data-stu-id="bb169-169">In this case, the <xref:System.ComponentModel.AsyncCompletedEventArgs.Cancelled%2A> flag of <xref:System.ComponentModel.RunWorkerCompletedEventArgs?displayProperty=nameWithType> in your <xref:System.ComponentModel.BackgroundWorker.RunWorkerCompleted> event handler will not be set to `true`, even though a cancellation request was made.</span></span> <span data-ttu-id="bb169-170">Diese Situation wird als *Racebedingung* bezeichnet und ist ein häufiges Problem bei der Multithreadprogrammierung.</span><span class="sxs-lookup"><span data-stu-id="bb169-170">This situation is called a *race condition* and is a common concern in multithreaded programming.</span></span> <span data-ttu-id="bb169-171">Weitere Informationen zu Problemen beim Entwerfen von Multithreading finden Sie unter [bewährte Methoden für das verwaltete Threading](/dotnet/standard/threading/managed-threading-best-practices).</span><span class="sxs-lookup"><span data-stu-id="bb169-171">For more information about multithreading design issues, see [Managed Threading Best Practices](/dotnet/standard/threading/managed-threading-best-practices).</span></span>  
  
 <span data-ttu-id="bb169-172">Wenn der Vorgang ein Ergebnis erzeugt, können Sie das Ergebnis der Eigenschaft zuweisen <xref:System.ComponentModel.DoWorkEventArgs.Result%2A?displayProperty=nameWithType> .</span><span class="sxs-lookup"><span data-stu-id="bb169-172">If your operation produces a result, you can assign the result to the <xref:System.ComponentModel.DoWorkEventArgs.Result%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="bb169-173">Diese wird dem- <xref:System.ComponentModel.BackgroundWorker.RunWorkerCompleted> Ereignishandler in der-Eigenschaft zur Verfügung gestellt <xref:System.ComponentModel.RunWorkerCompletedEventArgs.Result%2A?displayProperty=nameWithType> .</span><span class="sxs-lookup"><span data-stu-id="bb169-173">This will be available to the <xref:System.ComponentModel.BackgroundWorker.RunWorkerCompleted> event handler in the <xref:System.ComponentModel.RunWorkerCompletedEventArgs.Result%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="bb169-174">Wenn der Vorgang eine Ausnahme auslöst, die der Code nicht behandelt, <xref:System.ComponentModel.BackgroundWorker> fängt die Ausnahme ab und übergibt sie an den- <xref:System.ComponentModel.BackgroundWorker.RunWorkerCompleted> Ereignishandler, wo Sie als-Eigenschaft von verfügbar gemacht wird <xref:System.ComponentModel.AsyncCompletedEventArgs.Error%2A> <xref:System.ComponentModel.RunWorkerCompletedEventArgs?displayProperty=nameWithType> .</span><span class="sxs-lookup"><span data-stu-id="bb169-174">If the operation raises an exception that your code does not handle, the <xref:System.ComponentModel.BackgroundWorker> catches the exception and passes it into the <xref:System.ComponentModel.BackgroundWorker.RunWorkerCompleted> event handler, where it is exposed as the <xref:System.ComponentModel.AsyncCompletedEventArgs.Error%2A> property of <xref:System.ComponentModel.RunWorkerCompletedEventArgs?displayProperty=nameWithType>.</span></span> <span data-ttu-id="bb169-175">Wenn Sie unter dem Visual Studio-Debugger ausgeführt werden, unterbricht der Debugger an dem Punkt im <xref:System.ComponentModel.BackgroundWorker.DoWork> Ereignishandler, an dem die nicht behandelte Ausnahme ausgelöst wurde.</span><span class="sxs-lookup"><span data-stu-id="bb169-175">If you are running under the Visual Studio debugger, the debugger will break at the point in the <xref:System.ComponentModel.BackgroundWorker.DoWork> event handler where the unhandled exception was raised.</span></span> <span data-ttu-id="bb169-176">Wenn Sie über mehrere verfügen <xref:System.ComponentModel.BackgroundWorker> , sollten Sie nicht direkt darauf verweisen, da dies den <xref:System.ComponentModel.BackgroundWorker.DoWork> Ereignishandler mit einer bestimmten Instanz von verknüpfen würde <xref:System.ComponentModel.BackgroundWorker> .</span><span class="sxs-lookup"><span data-stu-id="bb169-176">If you have more than one <xref:System.ComponentModel.BackgroundWorker>, you should not reference any of them directly, as this would couple your <xref:System.ComponentModel.BackgroundWorker.DoWork> event handler to a specific instance of <xref:System.ComponentModel.BackgroundWorker>.</span></span> <span data-ttu-id="bb169-177">Stattdessen sollten Sie auf den zugreifen, <xref:System.ComponentModel.BackgroundWorker> indem Sie den-Parameter in den- `sender` <xref:System.ComponentModel.BackgroundWorker.DoWork> Ereignishandler umwandeln.</span><span class="sxs-lookup"><span data-stu-id="bb169-177">Instead, you should access your <xref:System.ComponentModel.BackgroundWorker> by casting the `sender` parameter in your <xref:System.ComponentModel.BackgroundWorker.DoWork> event handler.</span></span>  
  
 <span data-ttu-id="bb169-178">Sie müssen darauf achten, dass Sie keine Benutzeroberflächen Objekte in Ihrem <xref:System.ComponentModel.BackgroundWorker.DoWork> Ereignishandler bearbeiten.</span><span class="sxs-lookup"><span data-stu-id="bb169-178">You must be careful not to manipulate any user-interface objects in your <xref:System.ComponentModel.BackgroundWorker.DoWork> event handler.</span></span> <span data-ttu-id="bb169-179">Kommunizieren Sie stattdessen über die-Ereignisse mit der Benutzeroberfläche <xref:System.ComponentModel.BackgroundWorker> .</span><span class="sxs-lookup"><span data-stu-id="bb169-179">Instead, communicate to the user interface through the <xref:System.ComponentModel.BackgroundWorker> events.</span></span>  
  
 <span data-ttu-id="bb169-180">Weitere Informationen zum Behandeln von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](/dotnet/standard/events/).</span><span class="sxs-lookup"><span data-stu-id="bb169-180">For more information about how to handle events, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bb169-181">Im folgenden Codebeispiel wird die Verwendung des- <xref:System.ComponentModel.BackgroundWorker.DoWork> Ereignisses zum Starten eines asynchronen Vorgangs veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="bb169-181">The following code example demonstrates the use of the <xref:System.ComponentModel.BackgroundWorker.DoWork> event to start an asynchronous operation.</span></span> <span data-ttu-id="bb169-182">Dieses Codebeispiel ist Teil eines größeren Beispiels, das für die-Klasse bereitgestellt wird <xref:System.ComponentModel.BackgroundWorker> .</span><span class="sxs-lookup"><span data-stu-id="bb169-182">This code example is part of a larger example provided for the <xref:System.ComponentModel.BackgroundWorker> class.</span></span>  
  
 [!code-cpp[System.ComponentModel.BackgroundWorker#5](~/samples/snippets/cpp/VS_Snippets_Winforms/System.ComponentModel.BackgroundWorker/CPP/fibonacciform.cpp#5)]
 [!code-csharp[System.ComponentModel.BackgroundWorker#5](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.BackgroundWorker/CS/fibonacciform.cs#5)]
 [!code-vb[System.ComponentModel.BackgroundWorker#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.BackgroundWorker/VB/fibonacciform.vb#5)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/winforms/controls/how-to-run-an-operation-in-the-background"><span data-ttu-id="bb169-183">Vorgehensweise: Ausführen eines Vorgangs im Hintergrund</span><span class="sxs-lookup"><span data-stu-id="bb169-183">How to: Run an Operation in the Background</span></span></related>
        <related type="Article" href="/dotnet/standard/threading/managed-threading-best-practices"><span data-ttu-id="bb169-184">Empfohlene Vorgehensweise für das verwaltete Threading</span><span class="sxs-lookup"><span data-stu-id="bb169-184">Managed Threading Best Practices</span></span></related>
        <related type="Article" href="/dotnet/framework/winforms/controls/how-to-download-a-file-in-the-background"><span data-ttu-id="bb169-185">Vorgehensweise: Downloaden einer Datei im Hintergrund</span><span class="sxs-lookup"><span data-stu-id="bb169-185">How to: Download a File in the Background</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="IsBusy">
      <MemberSignature Language="C#" Value="public bool IsBusy { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsBusy" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.BackgroundWorker.IsBusy" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsBusy As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsBusy { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsBusy : bool" Usage="System.ComponentModel.BackgroundWorker.IsBusy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.EventBasedAsync</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.ComponentModel.Browsable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bb169-186">Ruft einen Wert ab, der angibt, ob <see cref="T:System.ComponentModel.BackgroundWorker" /> einen asynchronen Vorgang ausführt.</span><span class="sxs-lookup"><span data-stu-id="bb169-186">Gets a value indicating whether the <see cref="T:System.ComponentModel.BackgroundWorker" /> is running an asynchronous operation.</span></span></summary>
        <value><span data-ttu-id="bb169-187"><see langword="true" />, wenn der <see cref="T:System.ComponentModel.BackgroundWorker" /> einen asynchronen Vorgang ausführt, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="bb169-187"><see langword="true" />, if the <see cref="T:System.ComponentModel.BackgroundWorker" /> is running an asynchronous operation; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb169-188"><xref:System.ComponentModel.BackgroundWorker>Startet einen asynchronen Vorgang, wenn aufgerufen wird <xref:System.ComponentModel.BackgroundWorker.RunWorkerAsync%2A> .</span><span class="sxs-lookup"><span data-stu-id="bb169-188">The <xref:System.ComponentModel.BackgroundWorker> starts an asynchronous operation when you call <xref:System.ComponentModel.BackgroundWorker.RunWorkerAsync%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bb169-189">Im folgenden Codebeispiel wird veranschaulicht, wie die-Eigenschaft verwendet wird <xref:System.ComponentModel.BackgroundWorker.IsBusy%2A> , um auf den Abschluss eines-Vorgangs zu warten <xref:System.ComponentModel.BackgroundWorker> .</span><span class="sxs-lookup"><span data-stu-id="bb169-189">The following code example demonstrates how to use the <xref:System.ComponentModel.BackgroundWorker.IsBusy%2A> property to wait for completion of a <xref:System.ComponentModel.BackgroundWorker> operation.</span></span> <span data-ttu-id="bb169-190">Dieses Codebeispiel ist Teil eines größeren Beispiels, das unter Vorgehens [Weise: Herunterladen einer Datei im Hintergrund](/dotnet/framework/winforms/controls/how-to-download-a-file-in-the-background)beschrieben wird.</span><span class="sxs-lookup"><span data-stu-id="bb169-190">This code example is part of a larger example described in [How to: Download a File in the Background](/dotnet/framework/winforms/controls/how-to-download-a-file-in-the-background).</span></span>  
  
 [!code-csharp[System.ComponentModel.BackgroundWorker.IsBusy#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.BackgroundWorker.IsBusy/CS/Form1.cs#2)]
 [!code-vb[System.ComponentModel.BackgroundWorker.IsBusy#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.BackgroundWorker.IsBusy/VB/Form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.ComponentModel.BackgroundWorker.RunWorkerCompleted" />
        <altmember cref="T:System.EventArgs" />
        <altmember cref="Overload:System.ComponentModel.BackgroundWorker.RunWorkerAsync" />
        <related type="Article" href="/dotnet/framework/winforms/controls/how-to-run-an-operation-in-the-background"><span data-ttu-id="bb169-191">Vorgehensweise: Ausführen eines Vorgangs im Hintergrund</span><span class="sxs-lookup"><span data-stu-id="bb169-191">How to: Run an Operation in the Background</span></span></related>
        <related type="Article" href="/dotnet/framework/winforms/controls/how-to-download-a-file-in-the-background"><span data-ttu-id="bb169-192">Vorgehensweise: Downloaden einer Datei im Hintergrund</span><span class="sxs-lookup"><span data-stu-id="bb169-192">How to: Download a File in the Background</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="OnDoWork">
      <MemberSignature Language="C#" Value="protected virtual void OnDoWork (System.ComponentModel.DoWorkEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDoWork(class System.ComponentModel.DoWorkEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.BackgroundWorker.OnDoWork(System.ComponentModel.DoWorkEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDoWork (e As DoWorkEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDoWork(System::ComponentModel::DoWorkEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDoWork : System.ComponentModel.DoWorkEventArgs -&gt; unit&#xA;override this.OnDoWork : System.ComponentModel.DoWorkEventArgs -&gt; unit" Usage="backgroundWorker.OnDoWork e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.EventBasedAsync</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.ComponentModel.DoWorkEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="bb169-193">Ein <see cref="T:System.EventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="bb169-193">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="bb169-194">Löst das <see cref="E:System.ComponentModel.BackgroundWorker.DoWork" />-Ereignis aus.</span><span class="sxs-lookup"><span data-stu-id="bb169-194">Raises the <see cref="E:System.ComponentModel.BackgroundWorker.DoWork" /> event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnProgressChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnProgressChanged (System.ComponentModel.ProgressChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnProgressChanged(class System.ComponentModel.ProgressChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.BackgroundWorker.OnProgressChanged(System.ComponentModel.ProgressChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnProgressChanged (e As ProgressChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnProgressChanged(System::ComponentModel::ProgressChangedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnProgressChanged : System.ComponentModel.ProgressChangedEventArgs -&gt; unit&#xA;override this.OnProgressChanged : System.ComponentModel.ProgressChangedEventArgs -&gt; unit" Usage="backgroundWorker.OnProgressChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.EventBasedAsync</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.ComponentModel.ProgressChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="bb169-195">Ein <see cref="T:System.EventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="bb169-195">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="bb169-196">Löst das <see cref="E:System.ComponentModel.BackgroundWorker.ProgressChanged" />-Ereignis aus.</span><span class="sxs-lookup"><span data-stu-id="bb169-196">Raises the <see cref="E:System.ComponentModel.BackgroundWorker.ProgressChanged" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb169-197">Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="bb169-197">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="bb169-198">Weitere Informationen finden Sie unter [behandeln und Auswerfen von Ereignissen](/dotnet/standard/events/).</span><span class="sxs-lookup"><span data-stu-id="bb169-198">For more information, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
 <span data-ttu-id="bb169-199">Mit der <xref:System.ComponentModel.BackgroundWorker.OnProgressChanged%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln.</span><span class="sxs-lookup"><span data-stu-id="bb169-199">The <xref:System.ComponentModel.BackgroundWorker.OnProgressChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="bb169-200">Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.</span><span class="sxs-lookup"><span data-stu-id="bb169-200">This is the preferred technique for handling the event in a derived class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bb169-201">Im folgenden Codebeispiel wird die Verwendung der- <xref:System.ComponentModel.BackgroundWorker.OnProgressChanged%2A> Methode veranschaulicht, um den Fortschritt eines asynchronen Vorgangs zu melden.</span><span class="sxs-lookup"><span data-stu-id="bb169-201">The following code example demonstrates the use of the <xref:System.ComponentModel.BackgroundWorker.OnProgressChanged%2A> method to report the progress of an asynchronous operation.</span></span> <span data-ttu-id="bb169-202">Dieses Codebeispiel ist Teil eines größeren Beispiels, das für die-Klasse bereitgestellt wird <xref:System.ComponentModel.AsyncOperationManager> .</span><span class="sxs-lookup"><span data-stu-id="bb169-202">This code example is part of a larger example provided for the <xref:System.ComponentModel.AsyncOperationManager> class.</span></span>  
  
 [!code-csharp[System.ComponentModel.AsyncOperationManager#24](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.AsyncOperationManager/CS/primenumbercalculatormain.cs#24)]
 [!code-vb[System.ComponentModel.AsyncOperationManager#24](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.AsyncOperationManager/VB/primenumbercalculatormain.vb#24)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="bb169-203">Wenn Sie <see cref="M:System.ComponentModel.BackgroundWorker.OnProgressChanged(System.ComponentModel.ProgressChangedEventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.ComponentModel.BackgroundWorker.OnProgressChanged(System.ComponentModel.ProgressChangedEventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</span><span class="sxs-lookup"><span data-stu-id="bb169-203">When overriding <see cref="M:System.ComponentModel.BackgroundWorker.OnProgressChanged(System.ComponentModel.ProgressChangedEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.ComponentModel.BackgroundWorker.OnProgressChanged(System.ComponentModel.ProgressChangedEventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
        <altmember cref="E:System.ComponentModel.BackgroundWorker.ProgressChanged" />
        <related type="Article" href="/dotnet/framework/winforms/controls/how-to-run-an-operation-in-the-background"><span data-ttu-id="bb169-204">Vorgehensweise: Ausführen eines Vorgangs im Hintergrund</span><span class="sxs-lookup"><span data-stu-id="bb169-204">How to: Run an Operation in the Background</span></span></related>
        <related type="Article" href="/dotnet/framework/winforms/controls/how-to-download-a-file-in-the-background"><span data-ttu-id="bb169-205">Vorgehensweise: Downloaden einer Datei im Hintergrund</span><span class="sxs-lookup"><span data-stu-id="bb169-205">How to: Download a File in the Background</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="OnRunWorkerCompleted">
      <MemberSignature Language="C#" Value="protected virtual void OnRunWorkerCompleted (System.ComponentModel.RunWorkerCompletedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRunWorkerCompleted(class System.ComponentModel.RunWorkerCompletedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.BackgroundWorker.OnRunWorkerCompleted(System.ComponentModel.RunWorkerCompletedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnRunWorkerCompleted (e As RunWorkerCompletedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnRunWorkerCompleted(System::ComponentModel::RunWorkerCompletedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnRunWorkerCompleted : System.ComponentModel.RunWorkerCompletedEventArgs -&gt; unit&#xA;override this.OnRunWorkerCompleted : System.ComponentModel.RunWorkerCompletedEventArgs -&gt; unit" Usage="backgroundWorker.OnRunWorkerCompleted e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.EventBasedAsync</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.ComponentModel.RunWorkerCompletedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="bb169-206">Ein <see cref="T:System.EventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="bb169-206">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="bb169-207">Löst das <see cref="E:System.ComponentModel.BackgroundWorker.RunWorkerCompleted" />-Ereignis aus.</span><span class="sxs-lookup"><span data-stu-id="bb169-207">Raises the <see cref="E:System.ComponentModel.BackgroundWorker.RunWorkerCompleted" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb169-208">Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="bb169-208">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="bb169-209">Weitere Informationen finden Sie unter [behandeln und Auswerfen von Ereignissen](/dotnet/standard/events/).</span><span class="sxs-lookup"><span data-stu-id="bb169-209">For more information, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
 <span data-ttu-id="bb169-210">Mit der <xref:System.ComponentModel.BackgroundWorker.OnRunWorkerCompleted%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln.</span><span class="sxs-lookup"><span data-stu-id="bb169-210">The <xref:System.ComponentModel.BackgroundWorker.OnRunWorkerCompleted%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="bb169-211">Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.</span><span class="sxs-lookup"><span data-stu-id="bb169-211">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="bb169-212">Wenn Sie <see cref="M:System.ComponentModel.BackgroundWorker.OnRunWorkerCompleted(System.ComponentModel.RunWorkerCompletedEventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.ComponentModel.BackgroundWorker.OnRunWorkerCompleted(System.ComponentModel.RunWorkerCompletedEventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</span><span class="sxs-lookup"><span data-stu-id="bb169-212">When overriding <see cref="M:System.ComponentModel.BackgroundWorker.OnRunWorkerCompleted(System.ComponentModel.RunWorkerCompletedEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.ComponentModel.BackgroundWorker.OnRunWorkerCompleted(System.ComponentModel.RunWorkerCompletedEventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
        <altmember cref="E:System.ComponentModel.BackgroundWorker.RunWorkerCompleted" />
        <related type="Article" href="/dotnet/framework/winforms/controls/how-to-run-an-operation-in-the-background"><span data-ttu-id="bb169-213">Vorgehensweise: Ausführen eines Vorgangs im Hintergrund</span><span class="sxs-lookup"><span data-stu-id="bb169-213">How to: Run an Operation in the Background</span></span></related>
        <related type="Article" href="/dotnet/framework/winforms/controls/how-to-download-a-file-in-the-background"><span data-ttu-id="bb169-214">Vorgehensweise: Downloaden einer Datei im Hintergrund</span><span class="sxs-lookup"><span data-stu-id="bb169-214">How to: Download a File in the Background</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ProgressChanged">
      <MemberSignature Language="C#" Value="public event System.ComponentModel.ProgressChangedEventHandler ProgressChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.ComponentModel.ProgressChangedEventHandler ProgressChanged" />
      <MemberSignature Language="DocId" Value="E:System.ComponentModel.BackgroundWorker.ProgressChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ProgressChanged As ProgressChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::ComponentModel::ProgressChangedEventHandler ^ ProgressChanged;" />
      <MemberSignature Language="F#" Value="member this.ProgressChanged : System.ComponentModel.ProgressChangedEventHandler " Usage="member this.ProgressChanged : System.ComponentModel.ProgressChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.EventBasedAsync</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.ProgressChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bb169-215">Tritt ein, wenn <see cref="M:System.ComponentModel.BackgroundWorker.ReportProgress(System.Int32)" /> aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="bb169-215">Occurs when <see cref="M:System.ComponentModel.BackgroundWorker.ReportProgress(System.Int32)" /> is called.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb169-216">Dieses Ereignis wird ausgelöst, wenn Sie die-Methode aufzurufen <xref:System.ComponentModel.BackgroundWorker.ReportProgress%2A> .</span><span class="sxs-lookup"><span data-stu-id="bb169-216">This event is raised when you call the <xref:System.ComponentModel.BackgroundWorker.ReportProgress%2A> method.</span></span>  
  
 <span data-ttu-id="bb169-217">Weitere Informationen zum Behandeln von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](/dotnet/standard/events/).</span><span class="sxs-lookup"><span data-stu-id="bb169-217">For more information about how to handle events, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bb169-218">Im folgenden Codebeispiel wird die Verwendung des- <xref:System.ComponentModel.BackgroundWorker.ProgressChanged> Ereignisses veranschaulicht, um den Fortschritt eines asynchronen Vorgangs an den Benutzer zu melden.</span><span class="sxs-lookup"><span data-stu-id="bb169-218">The following code example demonstrates the use of the <xref:System.ComponentModel.BackgroundWorker.ProgressChanged> event to report the progress of an asynchronous operation to the user.</span></span> <span data-ttu-id="bb169-219">Dieses Codebeispiel ist Teil eines größeren Beispiels, das für die-Klasse bereitgestellt wird <xref:System.ComponentModel.BackgroundWorker> .</span><span class="sxs-lookup"><span data-stu-id="bb169-219">This code example is part of a larger example provided for the <xref:System.ComponentModel.BackgroundWorker> class.</span></span>  
  
 [!code-cpp[System.ComponentModel.BackgroundWorker#7](~/samples/snippets/cpp/VS_Snippets_Winforms/System.ComponentModel.BackgroundWorker/CPP/fibonacciform.cpp#7)]
 [!code-csharp[System.ComponentModel.BackgroundWorker#7](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.BackgroundWorker/CS/fibonacciform.cs#7)]
 [!code-vb[System.ComponentModel.BackgroundWorker#7](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.BackgroundWorker/VB/fibonacciform.vb#7)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/winforms/controls/how-to-run-an-operation-in-the-background"><span data-ttu-id="bb169-220">Vorgehensweise: Ausführen eines Vorgangs im Hintergrund</span><span class="sxs-lookup"><span data-stu-id="bb169-220">How to: Run an Operation in the Background</span></span></related>
        <related type="Article" href="/dotnet/framework/winforms/controls/how-to-download-a-file-in-the-background"><span data-ttu-id="bb169-221">Vorgehensweise: Downloaden einer Datei im Hintergrund</span><span class="sxs-lookup"><span data-stu-id="bb169-221">How to: Download a File in the Background</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="ReportProgress">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.EventBasedAsync</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="bb169-222">Löst das <see cref="E:System.ComponentModel.BackgroundWorker.ProgressChanged" />-Ereignis aus.</span><span class="sxs-lookup"><span data-stu-id="bb169-222">Raises the <see cref="E:System.ComponentModel.BackgroundWorker.ProgressChanged" /> event.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ReportProgress">
      <MemberSignature Language="C#" Value="public void ReportProgress (int percentProgress);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ReportProgress(int32 percentProgress) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.BackgroundWorker.ReportProgress(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ReportProgress (percentProgress As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ReportProgress(int percentProgress);" />
      <MemberSignature Language="F#" Value="member this.ReportProgress : int -&gt; unit" Usage="backgroundWorker.ReportProgress percentProgress" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.EventBasedAsync</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="percentProgress" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="percentProgress"><span data-ttu-id="bb169-223">Bereits abgeschlossener Teil des Hintergrundvorgangs in Prozent (1-100).</span><span class="sxs-lookup"><span data-stu-id="bb169-223">The percentage, from 0 to 100, of the background operation that is complete.</span></span></param>
        <summary><span data-ttu-id="bb169-224">Löst das <see cref="E:System.ComponentModel.BackgroundWorker.ProgressChanged" />-Ereignis aus.</span><span class="sxs-lookup"><span data-stu-id="bb169-224">Raises the <see cref="E:System.ComponentModel.BackgroundWorker.ProgressChanged" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb169-225">Wenn Sie den Hintergrund Vorgang zum Melden des Fortschritts benötigen, können Sie die- <xref:System.ComponentModel.BackgroundWorker.ReportProgress%2A> Methode zum Abrufen des- <xref:System.ComponentModel.BackgroundWorker.ProgressChanged> Ereignisses aufruft.</span><span class="sxs-lookup"><span data-stu-id="bb169-225">If you need the background operation to report on its progress, you can call the <xref:System.ComponentModel.BackgroundWorker.ReportProgress%2A> method to raise the <xref:System.ComponentModel.BackgroundWorker.ProgressChanged> event.</span></span> <span data-ttu-id="bb169-226">Der <xref:System.ComponentModel.BackgroundWorker.WorkerReportsProgress%2A> Eigenschafts Wert muss sein `true` , oder es <xref:System.ComponentModel.BackgroundWorker.ReportProgress%2A> wird eine ausgelöst <xref:System.InvalidOperationException> .</span><span class="sxs-lookup"><span data-stu-id="bb169-226">The <xref:System.ComponentModel.BackgroundWorker.WorkerReportsProgress%2A> property value must be `true`, or <xref:System.ComponentModel.BackgroundWorker.ReportProgress%2A> will throw an <xref:System.InvalidOperationException>.</span></span>  
  
 <span data-ttu-id="bb169-227">Es liegt an Ihnen, eine sinnvolle Methode zum Messen des Fortschritts des Hintergrund Vorgangs als Prozentsatz der abgeschlossenen Gesamtaufgabe zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="bb169-227">It is up to you to implement a meaningful way of measuring your background operation's progress as a percentage of the total task completed.</span></span>  
  
 <span data-ttu-id="bb169-228">Der <xref:System.ComponentModel.BackgroundWorker.ReportProgress%2A> -Methodenaufrufe erfolgt asynchron und wird sofort zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="bb169-228">The call to the <xref:System.ComponentModel.BackgroundWorker.ReportProgress%2A> method is asynchronous and returns immediately.</span></span> <span data-ttu-id="bb169-229">Der- <xref:System.ComponentModel.BackgroundWorker.ProgressChanged> Ereignishandler wird in dem Thread ausgeführt, der das erstellt hat <xref:System.ComponentModel.BackgroundWorker> .</span><span class="sxs-lookup"><span data-stu-id="bb169-229">The <xref:System.ComponentModel.BackgroundWorker.ProgressChanged> event handler executes on the thread that created the <xref:System.ComponentModel.BackgroundWorker>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bb169-230">Im folgenden Codebeispiel wird die Verwendung der- <xref:System.ComponentModel.BackgroundWorker.ReportProgress%2A> Methode veranschaulicht, um den Fortschritt eines asynchronen Vorgangs an den Benutzer zu melden.</span><span class="sxs-lookup"><span data-stu-id="bb169-230">The following code example demonstrates the use of the <xref:System.ComponentModel.BackgroundWorker.ReportProgress%2A> method to report the progress of an asynchronous operation to the user.</span></span> <span data-ttu-id="bb169-231">Dieses Codebeispiel ist Teil eines größeren Beispiels, das für die-Klasse bereitgestellt wird <xref:System.ComponentModel.BackgroundWorker> .</span><span class="sxs-lookup"><span data-stu-id="bb169-231">This code example is part of a larger example provided for the <xref:System.ComponentModel.BackgroundWorker> class.</span></span>  
  
 [!code-cpp[System.ComponentModel.BackgroundWorker#8](~/samples/snippets/cpp/VS_Snippets_Winforms/System.ComponentModel.BackgroundWorker/CPP/fibonacciform.cpp#8)]
 [!code-csharp[System.ComponentModel.BackgroundWorker#8](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.BackgroundWorker/CS/fibonacciform.cs#8)]
 [!code-vb[System.ComponentModel.BackgroundWorker#8](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.BackgroundWorker/VB/fibonacciform.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="bb169-232">Die <see cref="P:System.ComponentModel.BackgroundWorker.WorkerReportsProgress" />-Eigenschaft ist auf <see langword="false" /> festgelegt.</span><span class="sxs-lookup"><span data-stu-id="bb169-232">The <see cref="P:System.ComponentModel.BackgroundWorker.WorkerReportsProgress" /> property is set to <see langword="false" />.</span></span></exception>
        <related type="Article" href="/dotnet/framework/winforms/controls/how-to-run-an-operation-in-the-background"><span data-ttu-id="bb169-233">Vorgehensweise: Ausführen eines Vorgangs im Hintergrund</span><span class="sxs-lookup"><span data-stu-id="bb169-233">How to: Run an Operation in the Background</span></span></related>
        <related type="Article" href="/dotnet/framework/winforms/controls/how-to-download-a-file-in-the-background"><span data-ttu-id="bb169-234">Vorgehensweise: Downloaden einer Datei im Hintergrund</span><span class="sxs-lookup"><span data-stu-id="bb169-234">How to: Download a File in the Background</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ReportProgress">
      <MemberSignature Language="C#" Value="public void ReportProgress (int percentProgress, object userState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ReportProgress(int32 percentProgress, object userState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.BackgroundWorker.ReportProgress(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ReportProgress (percentProgress As Integer, userState As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ReportProgress(int percentProgress, System::Object ^ userState);" />
      <MemberSignature Language="F#" Value="member this.ReportProgress : int * obj -&gt; unit" Usage="backgroundWorker.ReportProgress (percentProgress, userState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.EventBasedAsync</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="percentProgress" Type="System.Int32" />
        <Parameter Name="userState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="percentProgress"><span data-ttu-id="bb169-235">Bereits abgeschlossener Teil des Hintergrundvorgangs in Prozent (1-100).</span><span class="sxs-lookup"><span data-stu-id="bb169-235">The percentage, from 0 to 100, of the background operation that is complete.</span></span></param>
        <param name="userState"><span data-ttu-id="bb169-236">Ein eindeutiges <see cref="T:System.Object" />, das den Benutzerzustand angibt.</span><span class="sxs-lookup"><span data-stu-id="bb169-236">A unique <see cref="T:System.Object" /> indicating the user state.</span></span> <span data-ttu-id="bb169-237">Wird als <see cref="P:System.ComponentModel.ProgressChangedEventArgs.UserState" />-Eigenschaft von <see cref="T:System.ComponentModel.ProgressChangedEventArgs" />zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="bb169-237">Returned as the <see cref="P:System.ComponentModel.ProgressChangedEventArgs.UserState" /> property of the <see cref="T:System.ComponentModel.ProgressChangedEventArgs" />.</span></span></param>
        <summary><span data-ttu-id="bb169-238">Löst das <see cref="E:System.ComponentModel.BackgroundWorker.ProgressChanged" />-Ereignis aus.</span><span class="sxs-lookup"><span data-stu-id="bb169-238">Raises the <see cref="E:System.ComponentModel.BackgroundWorker.ProgressChanged" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb169-239">Wenn Sie den Hintergrund Vorgang zum Melden des Fortschritts benötigen, können Sie die- <xref:System.ComponentModel.BackgroundWorker.ReportProgress%2A> Methode zum Abrufen des- <xref:System.ComponentModel.BackgroundWorker.ProgressChanged> Ereignisses aufruft.</span><span class="sxs-lookup"><span data-stu-id="bb169-239">If you need the background operation to report on its progress, you can call the <xref:System.ComponentModel.BackgroundWorker.ReportProgress%2A> method to raise the <xref:System.ComponentModel.BackgroundWorker.ProgressChanged> event.</span></span> <span data-ttu-id="bb169-240">Der <xref:System.ComponentModel.BackgroundWorker.WorkerReportsProgress%2A> Eigenschafts Wert muss sein `true` oder <xref:System.ComponentModel.BackgroundWorker.ReportProgress%2A> eine auslösen <xref:System.InvalidOperationException> .</span><span class="sxs-lookup"><span data-stu-id="bb169-240">The <xref:System.ComponentModel.BackgroundWorker.WorkerReportsProgress%2A> property value must `true`, or <xref:System.ComponentModel.BackgroundWorker.ReportProgress%2A> will throw an <xref:System.InvalidOperationException>.</span></span>  
  
 <span data-ttu-id="bb169-241">Es liegt an Ihnen, eine sinnvolle Methode zum Messen des Fortschritts des Hintergrund Vorgangs als Prozentsatz der abgeschlossenen Gesamtaufgabe zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="bb169-241">It is up to you to implement a meaningful way of measuring your background operation's progress as a percentage of the total task completed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bb169-242">Im folgenden Codebeispiel wird die Verwendung der- <xref:System.ComponentModel.BackgroundWorker.ReportProgress%2A> Methode veranschaulicht, um den Fortschritt eines asynchronen Vorgangs an den Benutzer zu melden.</span><span class="sxs-lookup"><span data-stu-id="bb169-242">The following code example demonstrates the use of the <xref:System.ComponentModel.BackgroundWorker.ReportProgress%2A> method to report the progress of an asynchronous operation to the user.</span></span> <span data-ttu-id="bb169-243">Dieses Codebeispiel ist Teil eines größeren Beispiels, das für die-Klasse bereitgestellt wird <xref:System.Windows.Forms.ToolStripProgressBar> .</span><span class="sxs-lookup"><span data-stu-id="bb169-243">This code example is part of a larger example provided for the <xref:System.Windows.Forms.ToolStripProgressBar> class.</span></span>  
  
 [!code-csharp[System.Windows.Forms.ToolStripProgressBar#10](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ToolStripProgressBar/CS/form1.cs#10)]
 [!code-vb[System.Windows.Forms.ToolStripProgressBar#10](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ToolStripProgressBar/VB/form1.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="bb169-244">Die <see cref="P:System.ComponentModel.BackgroundWorker.WorkerReportsProgress" />-Eigenschaft ist auf <see langword="false" /> festgelegt.</span><span class="sxs-lookup"><span data-stu-id="bb169-244">The <see cref="P:System.ComponentModel.BackgroundWorker.WorkerReportsProgress" /> property is set to <see langword="false" />.</span></span></exception>
        <related type="Article" href="/dotnet/framework/winforms/controls/how-to-run-an-operation-in-the-background"><span data-ttu-id="bb169-245">Vorgehensweise: Ausführen eines Vorgangs im Hintergrund</span><span class="sxs-lookup"><span data-stu-id="bb169-245">How to: Run an Operation in the Background</span></span></related>
        <related type="Article" href="/dotnet/framework/winforms/controls/how-to-download-a-file-in-the-background"><span data-ttu-id="bb169-246">Vorgehensweise: Downloaden einer Datei im Hintergrund</span><span class="sxs-lookup"><span data-stu-id="bb169-246">How to: Download a File in the Background</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="RunWorkerAsync">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.EventBasedAsync</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="bb169-247">Startet die Ausführung eines Hintergrundvorgangs.</span><span class="sxs-lookup"><span data-stu-id="bb169-247">Starts execution of a background operation.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RunWorkerAsync">
      <MemberSignature Language="C#" Value="public void RunWorkerAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RunWorkerAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.BackgroundWorker.RunWorkerAsync" />
      <MemberSignature Language="VB.NET" Value="Public Sub RunWorkerAsync ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RunWorkerAsync();" />
      <MemberSignature Language="F#" Value="member this.RunWorkerAsync : unit -&gt; unit" Usage="backgroundWorker.RunWorkerAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.EventBasedAsync</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="bb169-248">Startet die Ausführung eines Hintergrundvorgangs.</span><span class="sxs-lookup"><span data-stu-id="bb169-248">Starts execution of a background operation.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb169-249">Die- <xref:System.ComponentModel.BackgroundWorker.RunWorkerAsync%2A> Methode sendet eine Anforderung, um den asynchronen Vorgang zu starten.</span><span class="sxs-lookup"><span data-stu-id="bb169-249">The <xref:System.ComponentModel.BackgroundWorker.RunWorkerAsync%2A> method submits a request to start the operation running asynchronously.</span></span> <span data-ttu-id="bb169-250">Wenn die Anforderung gewartet wird, wird das- <xref:System.ComponentModel.BackgroundWorker.DoWork> Ereignis ausgelöst, das wiederum die Ausführung des Hintergrund Vorgangs startet.</span><span class="sxs-lookup"><span data-stu-id="bb169-250">When the request is serviced, the <xref:System.ComponentModel.BackgroundWorker.DoWork> event is raised, which in turn starts execution of your background operation.</span></span>  
  
 <span data-ttu-id="bb169-251">Wenn der Hintergrund Vorgang bereits ausgeführt wird, wird durch den erneuten Aufruf von ein-Wert aufgerufen <xref:System.ComponentModel.BackgroundWorker.RunWorkerAsync%2A> <xref:System.InvalidOperationException> .</span><span class="sxs-lookup"><span data-stu-id="bb169-251">If the background operation is already running, calling <xref:System.ComponentModel.BackgroundWorker.RunWorkerAsync%2A> again will raise an <xref:System.InvalidOperationException>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bb169-252">Im folgenden Codebeispiel wird die Verwendung der- <xref:System.ComponentModel.BackgroundWorker.RunWorkerAsync%2A> Methode zum Starten eines asynchronen Vorgangs veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="bb169-252">The following code example demonstrates the use of the <xref:System.ComponentModel.BackgroundWorker.RunWorkerAsync%2A> method to start an asynchronous operation.</span></span> <span data-ttu-id="bb169-253">Es ist Teil eines größeren Beispiels [, das unter Vorgehensweise: Herunterladen einer Datei im Hintergrund](/dotnet/framework/winforms/controls/how-to-download-a-file-in-the-background)beschrieben wird.</span><span class="sxs-lookup"><span data-stu-id="bb169-253">It is part of a larger example described in [How to: Download a File in the Background](/dotnet/framework/winforms/controls/how-to-download-a-file-in-the-background).</span></span>  
  
 [!code-csharp[System.ComponentModel.BackgroundWorker.IsBusy#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.BackgroundWorker.IsBusy/CS/Form1.cs#2)]
 [!code-vb[System.ComponentModel.BackgroundWorker.IsBusy#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.BackgroundWorker.IsBusy/VB/Form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="bb169-254"><see cref="P:System.ComponentModel.BackgroundWorker.IsBusy" /> ist <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="bb169-254"><see cref="P:System.ComponentModel.BackgroundWorker.IsBusy" /> is <see langword="true" />.</span></span></exception>
        <altmember cref="E:System.ComponentModel.BackgroundWorker.DoWork" />
        <related type="Article" href="/dotnet/framework/winforms/controls/how-to-run-an-operation-in-the-background"><span data-ttu-id="bb169-255">Vorgehensweise: Ausführen eines Vorgangs im Hintergrund</span><span class="sxs-lookup"><span data-stu-id="bb169-255">How to: Run an Operation in the Background</span></span></related>
        <related type="Article" href="/dotnet/standard/threading/managed-threading-best-practices"><span data-ttu-id="bb169-256">Empfohlene Vorgehensweise für das verwaltete Threading</span><span class="sxs-lookup"><span data-stu-id="bb169-256">Managed Threading Best Practices</span></span></related>
        <related type="Article" href="/dotnet/framework/winforms/controls/how-to-download-a-file-in-the-background"><span data-ttu-id="bb169-257">Vorgehensweise: Downloaden einer Datei im Hintergrund</span><span class="sxs-lookup"><span data-stu-id="bb169-257">How to: Download a File in the Background</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="RunWorkerAsync">
      <MemberSignature Language="C#" Value="public void RunWorkerAsync (object argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RunWorkerAsync(object argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.BackgroundWorker.RunWorkerAsync(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RunWorkerAsync (argument As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RunWorkerAsync(System::Object ^ argument);" />
      <MemberSignature Language="F#" Value="member this.RunWorkerAsync : obj -&gt; unit" Usage="backgroundWorker.RunWorkerAsync argument" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.EventBasedAsync</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="argument" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="argument"><span data-ttu-id="bb169-258">Ein Parameter, der von dem Hintergrundvorgang verwendet wird, der im <see cref="E:System.ComponentModel.BackgroundWorker.DoWork" />-Ereignishandler ausgeführt wird.</span><span class="sxs-lookup"><span data-stu-id="bb169-258">A parameter for use by the background operation to be executed in the <see cref="E:System.ComponentModel.BackgroundWorker.DoWork" /> event handler.</span></span></param>
        <summary><span data-ttu-id="bb169-259">Startet die Ausführung eines Hintergrundvorgangs.</span><span class="sxs-lookup"><span data-stu-id="bb169-259">Starts execution of a background operation.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb169-260">Die- <xref:System.ComponentModel.BackgroundWorker.RunWorkerAsync%2A> Methode sendet eine Anforderung, um den asynchronen Vorgang zu starten.</span><span class="sxs-lookup"><span data-stu-id="bb169-260">The <xref:System.ComponentModel.BackgroundWorker.RunWorkerAsync%2A> method submits a request to start the operation running asynchronously.</span></span> <span data-ttu-id="bb169-261">Wenn die Anforderung gewartet wird, wird das- <xref:System.ComponentModel.BackgroundWorker.DoWork> Ereignis ausgelöst, das wiederum die Ausführung des Hintergrund Vorgangs startet.</span><span class="sxs-lookup"><span data-stu-id="bb169-261">When the request is serviced, the <xref:System.ComponentModel.BackgroundWorker.DoWork> event is raised, which in turn starts execution of your background operation.</span></span>  
  
 <span data-ttu-id="bb169-262">Wenn für den Vorgang ein-Parameter erforderlich ist, können Sie ihn als `argument` Parameter für angeben <xref:System.ComponentModel.BackgroundWorker.RunWorkerAsync%2A> .</span><span class="sxs-lookup"><span data-stu-id="bb169-262">If your operation requires a parameter, you can provide it as the `argument` parameter to <xref:System.ComponentModel.BackgroundWorker.RunWorkerAsync%2A>.</span></span>  
  
 <span data-ttu-id="bb169-263">Wenn der Hintergrund Vorgang bereits ausgeführt wird, wird durch den erneuten Aufruf von ein-Wert aufgerufen <xref:System.ComponentModel.BackgroundWorker.RunWorkerAsync%2A> <xref:System.InvalidOperationException> .</span><span class="sxs-lookup"><span data-stu-id="bb169-263">If the background operation is already running, calling <xref:System.ComponentModel.BackgroundWorker.RunWorkerAsync%2A> again will raise an <xref:System.InvalidOperationException>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bb169-264">Im folgenden Codebeispiel wird die Verwendung der- <xref:System.ComponentModel.BackgroundWorker.RunWorkerAsync%2A> Methode zum Starten eines asynchronen Vorgangs veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="bb169-264">The following code example demonstrates the use of the <xref:System.ComponentModel.BackgroundWorker.RunWorkerAsync%2A> method to start an asynchronous operation.</span></span> <span data-ttu-id="bb169-265">Dieses Codebeispiel ist Teil eines größeren Beispiels, das für die-Klasse bereitgestellt wird <xref:System.ComponentModel.BackgroundWorker> .</span><span class="sxs-lookup"><span data-stu-id="bb169-265">This code example is part of a larger example provided for the <xref:System.ComponentModel.BackgroundWorker> class.</span></span>  
  
 [!code-cpp[System.ComponentModel.BackgroundWorker#3](~/samples/snippets/cpp/VS_Snippets_Winforms/System.ComponentModel.BackgroundWorker/CPP/fibonacciform.cpp#3)]
 [!code-csharp[System.ComponentModel.BackgroundWorker#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.BackgroundWorker/CS/fibonacciform.cs#3)]
 [!code-vb[System.ComponentModel.BackgroundWorker#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.BackgroundWorker/VB/fibonacciform.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="bb169-266"><see cref="P:System.ComponentModel.BackgroundWorker.IsBusy" /> ist <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="bb169-266"><see cref="P:System.ComponentModel.BackgroundWorker.IsBusy" /> is <see langword="true" />.</span></span></exception>
        <altmember cref="E:System.ComponentModel.BackgroundWorker.DoWork" />
        <related type="Article" href="/dotnet/framework/winforms/controls/how-to-run-an-operation-in-the-background"><span data-ttu-id="bb169-267">Vorgehensweise: Ausführen eines Vorgangs im Hintergrund</span><span class="sxs-lookup"><span data-stu-id="bb169-267">How to: Run an Operation in the Background</span></span></related>
        <related type="Article" href="/dotnet/framework/winforms/controls/how-to-download-a-file-in-the-background"><span data-ttu-id="bb169-268">Vorgehensweise: Downloaden einer Datei im Hintergrund</span><span class="sxs-lookup"><span data-stu-id="bb169-268">How to: Download a File in the Background</span></span></related>
        <related type="Article" href="/dotnet/standard/threading/managed-threading-best-practices"><span data-ttu-id="bb169-269">Empfohlene Vorgehensweise für das verwaltete Threading</span><span class="sxs-lookup"><span data-stu-id="bb169-269">Managed Threading Best Practices</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="RunWorkerCompleted">
      <MemberSignature Language="C#" Value="public event System.ComponentModel.RunWorkerCompletedEventHandler RunWorkerCompleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.ComponentModel.RunWorkerCompletedEventHandler RunWorkerCompleted" />
      <MemberSignature Language="DocId" Value="E:System.ComponentModel.BackgroundWorker.RunWorkerCompleted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event RunWorkerCompleted As RunWorkerCompletedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::ComponentModel::RunWorkerCompletedEventHandler ^ RunWorkerCompleted;" />
      <MemberSignature Language="F#" Value="member this.RunWorkerCompleted : System.ComponentModel.RunWorkerCompletedEventHandler " Usage="member this.RunWorkerCompleted : System.ComponentModel.RunWorkerCompletedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.EventBasedAsync</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.RunWorkerCompletedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bb169-270">Tritt ein, wenn der Hintergrundvorgang entweder abgeschlossen ist, abgebrochen wurde oder eine Ausnahme ausgelöst hat.</span><span class="sxs-lookup"><span data-stu-id="bb169-270">Occurs when the background operation has completed, has been canceled, or has raised an exception.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb169-271">Dieses Ereignis wird ausgelöst, wenn der <xref:System.ComponentModel.BackgroundWorker.DoWork> Ereignishandler zurückgibt.</span><span class="sxs-lookup"><span data-stu-id="bb169-271">This event is raised when the <xref:System.ComponentModel.BackgroundWorker.DoWork> event handler returns.</span></span>  
  
 <span data-ttu-id="bb169-272">Wenn der Vorgang erfolgreich abgeschlossen wurde und das Ergebnis im- <xref:System.ComponentModel.BackgroundWorker.DoWork> Ereignishandler zugewiesen ist, können Sie über die-Eigenschaft auf das Ergebnis zugreifen <xref:System.ComponentModel.RunWorkerCompletedEventArgs.Result%2A?displayProperty=nameWithType> .</span><span class="sxs-lookup"><span data-stu-id="bb169-272">If the operation completes successfully and its result is assigned in the <xref:System.ComponentModel.BackgroundWorker.DoWork> event handler, you can access the result through the <xref:System.ComponentModel.RunWorkerCompletedEventArgs.Result%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="bb169-273">Die- <xref:System.ComponentModel.AsyncCompletedEventArgs.Error%2A> Eigenschaft von <xref:System.ComponentModel.RunWorkerCompletedEventArgs?displayProperty=nameWithType> gibt an, dass vom Vorgang eine Ausnahme ausgelöst wurde.</span><span class="sxs-lookup"><span data-stu-id="bb169-273">The <xref:System.ComponentModel.AsyncCompletedEventArgs.Error%2A> property of <xref:System.ComponentModel.RunWorkerCompletedEventArgs?displayProperty=nameWithType> indicates that an exception was thrown by the operation.</span></span>  
  
 <span data-ttu-id="bb169-274">Die- <xref:System.ComponentModel.AsyncCompletedEventArgs.Cancelled%2A> Eigenschaft von gibt an, <xref:System.ComponentModel.RunWorkerCompletedEventArgs?displayProperty=nameWithType> ob eine Abbruch Anforderung vom Hintergrund Vorgang verarbeitet wurde.</span><span class="sxs-lookup"><span data-stu-id="bb169-274">The <xref:System.ComponentModel.AsyncCompletedEventArgs.Cancelled%2A> property of <xref:System.ComponentModel.RunWorkerCompletedEventArgs?displayProperty=nameWithType> indicates whether a cancellation request was processed by the background operation.</span></span> <span data-ttu-id="bb169-275">Wenn der Code im- <xref:System.ComponentModel.BackgroundWorker.DoWork> Ereignishandler eine Abbruch Anforderung erkennt, indem er das <xref:System.ComponentModel.BackgroundWorker.CancellationPending%2A> -Flag überprüft und das- <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> Flag von <xref:System.ComponentModel.DoWorkEventArgs?displayProperty=nameWithType> auf festlegt `true` , wird das- <xref:System.ComponentModel.AsyncCompletedEventArgs.Cancelled%2A> Flag von <xref:System.ComponentModel.RunWorkerCompletedEventArgs?displayProperty=nameWithType> ebenfalls auf festgelegt `true` .</span><span class="sxs-lookup"><span data-stu-id="bb169-275">If your code in the <xref:System.ComponentModel.BackgroundWorker.DoWork> event handler detects a cancellation request by checking the <xref:System.ComponentModel.BackgroundWorker.CancellationPending%2A> flag and setting the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> flag of <xref:System.ComponentModel.DoWorkEventArgs?displayProperty=nameWithType> to `true`, the <xref:System.ComponentModel.AsyncCompletedEventArgs.Cancelled%2A> flag of <xref:System.ComponentModel.RunWorkerCompletedEventArgs?displayProperty=nameWithType> also will be set to `true`.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="bb169-276">Beachten Sie, dass der Code im- <xref:System.ComponentModel.BackgroundWorker.DoWork> Ereignishandler seine Arbeit beenden kann, wenn eine Abbruch Anforderung ausgeführt wird, und ihre Abruf Schleife kann <xref:System.ComponentModel.BackgroundWorker.CancellationPending%2A> nicht auf festgelegt werden `true` .</span><span class="sxs-lookup"><span data-stu-id="bb169-276">Be aware that your code in the <xref:System.ComponentModel.BackgroundWorker.DoWork> event handler may finish its work as a cancellation request is being made, and your polling loop may miss <xref:System.ComponentModel.BackgroundWorker.CancellationPending%2A> being set to `true`.</span></span> <span data-ttu-id="bb169-277">In diesem Fall wird das- <xref:System.ComponentModel.AsyncCompletedEventArgs.Cancelled%2A> Flag von <xref:System.ComponentModel.RunWorkerCompletedEventArgs?displayProperty=nameWithType> im- <xref:System.ComponentModel.BackgroundWorker.RunWorkerCompleted> Ereignishandler nicht auf festgelegt `true` , obwohl eine Abbruch Anforderung erfolgt ist.</span><span class="sxs-lookup"><span data-stu-id="bb169-277">In this case, the <xref:System.ComponentModel.AsyncCompletedEventArgs.Cancelled%2A> flag of <xref:System.ComponentModel.RunWorkerCompletedEventArgs?displayProperty=nameWithType> in your <xref:System.ComponentModel.BackgroundWorker.RunWorkerCompleted> event handler will not be set to `true`, even though a cancellation request was made.</span></span> <span data-ttu-id="bb169-278">Diese Situation wird als *Racebedingung* bezeichnet und ist ein häufiges Problem bei der Multithreadprogrammierung.</span><span class="sxs-lookup"><span data-stu-id="bb169-278">This situation is called a *race condition* and is a common concern in multithreaded programming.</span></span> <span data-ttu-id="bb169-279">Weitere Informationen zu Problemen beim Entwerfen von Multithreading finden Sie unter [bewährte Methoden für das verwaltete Threading](/dotnet/standard/threading/managed-threading-best-practices).</span><span class="sxs-lookup"><span data-stu-id="bb169-279">For more information about multithreading design issues, see [Managed Threading Best Practices](/dotnet/standard/threading/managed-threading-best-practices).</span></span>  
  
 <span data-ttu-id="bb169-280"><xref:System.ComponentModel.BackgroundWorker.RunWorkerCompleted>Der Ereignishandler sollte <xref:System.ComponentModel.AsyncCompletedEventArgs.Error%2A?displayProperty=nameWithType> <xref:System.ComponentModel.AsyncCompletedEventArgs.Cancelled%2A?displayProperty=nameWithType> vor dem Zugriff auf die Eigenschaft immer die Eigenschaften und überprüfen <xref:System.ComponentModel.RunWorkerCompletedEventArgs.Result%2A?displayProperty=nameWithType> .</span><span class="sxs-lookup"><span data-stu-id="bb169-280">Your <xref:System.ComponentModel.BackgroundWorker.RunWorkerCompleted> event handler should always check the <xref:System.ComponentModel.AsyncCompletedEventArgs.Error%2A?displayProperty=nameWithType> and <xref:System.ComponentModel.AsyncCompletedEventArgs.Cancelled%2A?displayProperty=nameWithType> properties before accessing the <xref:System.ComponentModel.RunWorkerCompletedEventArgs.Result%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="bb169-281">Wenn eine Ausnahme ausgelöst wurde oder der Vorgang abgebrochen wurde, löst der Zugriff auf die- <xref:System.ComponentModel.RunWorkerCompletedEventArgs.Result%2A?displayProperty=nameWithType> Eigenschaft eine Ausnahme aus.</span><span class="sxs-lookup"><span data-stu-id="bb169-281">If an exception was raised or if the operation was canceled, accessing the <xref:System.ComponentModel.RunWorkerCompletedEventArgs.Result%2A?displayProperty=nameWithType> property raises an exception.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bb169-282">Im folgenden Codebeispiel wird veranschaulicht, wie das-Ereignis verwendet wird <xref:System.ComponentModel.BackgroundWorker.RunWorkerCompleted> , um das Ergebnis eines asynchronen Vorgangs zu behandeln.</span><span class="sxs-lookup"><span data-stu-id="bb169-282">The following code example demonstrates the use of the <xref:System.ComponentModel.BackgroundWorker.RunWorkerCompleted> event to handle the result of an asynchronous operation.</span></span> <span data-ttu-id="bb169-283">Dieses Codebeispiel ist Teil eines größeren Beispiels, das für die-Klasse bereitgestellt wird <xref:System.ComponentModel.BackgroundWorker> .</span><span class="sxs-lookup"><span data-stu-id="bb169-283">This code example is part of a larger example provided for the <xref:System.ComponentModel.BackgroundWorker> class.</span></span>  
  
 [!code-cpp[System.ComponentModel.BackgroundWorker#6](~/samples/snippets/cpp/VS_Snippets_Winforms/System.ComponentModel.BackgroundWorker/CPP/fibonacciform.cpp#6)]
 [!code-csharp[System.ComponentModel.BackgroundWorker#6](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.BackgroundWorker/CS/fibonacciform.cs#6)]
 [!code-vb[System.ComponentModel.BackgroundWorker#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.BackgroundWorker/VB/fibonacciform.vb#6)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/winforms/controls/how-to-run-an-operation-in-the-background"><span data-ttu-id="bb169-284">Vorgehensweise: Ausführen eines Vorgangs im Hintergrund</span><span class="sxs-lookup"><span data-stu-id="bb169-284">How to: Run an Operation in the Background</span></span></related>
        <related type="Article" href="/dotnet/framework/winforms/controls/how-to-download-a-file-in-the-background"><span data-ttu-id="bb169-285">Vorgehensweise: Downloaden einer Datei im Hintergrund</span><span class="sxs-lookup"><span data-stu-id="bb169-285">How to: Download a File in the Background</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="WorkerReportsProgress">
      <MemberSignature Language="C#" Value="public bool WorkerReportsProgress { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool WorkerReportsProgress" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.BackgroundWorker.WorkerReportsProgress" />
      <MemberSignature Language="VB.NET" Value="Public Property WorkerReportsProgress As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool WorkerReportsProgress { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.WorkerReportsProgress : bool with get, set" Usage="System.ComponentModel.BackgroundWorker.WorkerReportsProgress" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.EventBasedAsync</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bb169-286">Ruft einen Wert ab, der angibt, ob der <see cref="T:System.ComponentModel.BackgroundWorker" /> Fortschrittsaktualisierungen melden kann, oder legt diesen Wert fest.</span><span class="sxs-lookup"><span data-stu-id="bb169-286">Gets or sets a value indicating whether the <see cref="T:System.ComponentModel.BackgroundWorker" /> can report progress updates.</span></span></summary>
        <value><span data-ttu-id="bb169-287"><see langword="true" />, wenn der <see cref="T:System.ComponentModel.BackgroundWorker" /> Fortschrittsaktualisierungen unterstützt, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="bb169-287"><see langword="true" /> if the <see cref="T:System.ComponentModel.BackgroundWorker" /> supports progress updates; otherwise <see langword="false" />.</span></span> <span data-ttu-id="bb169-288">Der Standardwert ist <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="bb169-288">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb169-289">Legen Sie die- <xref:System.ComponentModel.BackgroundWorker.WorkerReportsProgress%2A> Eigenschaft auf fest, `true` Wenn Status <xref:System.ComponentModel.BackgroundWorker> Aktualisierungen von unterstützt werden sollen.</span><span class="sxs-lookup"><span data-stu-id="bb169-289">Set the <xref:System.ComponentModel.BackgroundWorker.WorkerReportsProgress%2A> property to `true` if you want the <xref:System.ComponentModel.BackgroundWorker> to support progress updates.</span></span> <span data-ttu-id="bb169-290">Wenn diese Eigenschaft ist `true` , kann der Benutzercode die-Methode aufzurufen, <xref:System.ComponentModel.BackgroundWorker.ReportProgress%2A> um das-Ereignis zu erhöhen <xref:System.ComponentModel.BackgroundWorker.ProgressChanged> .</span><span class="sxs-lookup"><span data-stu-id="bb169-290">When this property is `true`, user code can call the <xref:System.ComponentModel.BackgroundWorker.ReportProgress%2A> method to raise the <xref:System.ComponentModel.BackgroundWorker.ProgressChanged> event.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.BackgroundWorker.ReportProgress(System.Int32)" />
        <related type="Article" href="/dotnet/framework/winforms/controls/how-to-run-an-operation-in-the-background"><span data-ttu-id="bb169-291">Vorgehensweise: Ausführen eines Vorgangs im Hintergrund</span><span class="sxs-lookup"><span data-stu-id="bb169-291">How to: Run an Operation in the Background</span></span></related>
        <related type="Article" href="/dotnet/framework/winforms/controls/how-to-download-a-file-in-the-background"><span data-ttu-id="bb169-292">Vorgehensweise: Downloaden einer Datei im Hintergrund</span><span class="sxs-lookup"><span data-stu-id="bb169-292">How to: Download a File in the Background</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="WorkerSupportsCancellation">
      <MemberSignature Language="C#" Value="public bool WorkerSupportsCancellation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool WorkerSupportsCancellation" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.BackgroundWorker.WorkerSupportsCancellation" />
      <MemberSignature Language="VB.NET" Value="Public Property WorkerSupportsCancellation As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool WorkerSupportsCancellation { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.WorkerSupportsCancellation : bool with get, set" Usage="System.ComponentModel.BackgroundWorker.WorkerSupportsCancellation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.EventBasedAsync</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bb169-293">Ruft einen Wert ab, der angibt, ob der <see cref="T:System.ComponentModel.BackgroundWorker" /> asynchrone Abbrüche unterstützt, oder legt diesen Wert fest.</span><span class="sxs-lookup"><span data-stu-id="bb169-293">Gets or sets a value indicating whether the <see cref="T:System.ComponentModel.BackgroundWorker" /> supports asynchronous cancellation.</span></span></summary>
        <value><span data-ttu-id="bb169-294"><see langword="true" />, wenn <see cref="T:System.ComponentModel.BackgroundWorker" /> Abbrüche unterstützt, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="bb169-294"><see langword="true" /> if the <see cref="T:System.ComponentModel.BackgroundWorker" /> supports cancellation; otherwise <see langword="false" />.</span></span> <span data-ttu-id="bb169-295">Der Standardwert ist <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="bb169-295">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb169-296">Legen Sie die- <xref:System.ComponentModel.BackgroundWorker.WorkerSupportsCancellation%2A> Eigenschaft auf fest, `true` Wenn der abgebrochen werden <xref:System.ComponentModel.BackgroundWorker> soll.</span><span class="sxs-lookup"><span data-stu-id="bb169-296">Set the <xref:System.ComponentModel.BackgroundWorker.WorkerSupportsCancellation%2A> property to `true` if you want the <xref:System.ComponentModel.BackgroundWorker> to support cancellation.</span></span> <span data-ttu-id="bb169-297">Wenn diese Eigenschaft ist `true` , können Sie die- <xref:System.ComponentModel.BackgroundWorker.CancelAsync%2A> Methode zum Unterbrechen eines Hintergrund Vorgangs aufzurufen.</span><span class="sxs-lookup"><span data-stu-id="bb169-297">When this property is `true`, you can call the <xref:System.ComponentModel.BackgroundWorker.CancelAsync%2A> method to interrupt a background operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.BackgroundWorker.CancelAsync" />
        <related type="Article" href="/dotnet/framework/winforms/controls/how-to-run-an-operation-in-the-background"><span data-ttu-id="bb169-298">Vorgehensweise: Ausführen eines Vorgangs im Hintergrund</span><span class="sxs-lookup"><span data-stu-id="bb169-298">How to: Run an Operation in the Background</span></span></related>
        <related type="Article" href="/dotnet/framework/winforms/controls/how-to-download-a-file-in-the-background"><span data-ttu-id="bb169-299">Vorgehensweise: Downloaden einer Datei im Hintergrund</span><span class="sxs-lookup"><span data-stu-id="bb169-299">How to: Download a File in the Background</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>
