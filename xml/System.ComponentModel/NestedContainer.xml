<Type Name="NestedContainer" FullName="System.ComponentModel.NestedContainer">
  <Metadata><Meta Name="ms.openlocfilehash" Value="595b2b3e9ccf4a9e77c6110e4f88ae186a50cf0c" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86733527" /></Metadata><TypeSignature Language="C#" Value="public class NestedContainer : System.ComponentModel.Container, IDisposable, System.ComponentModel.IContainer, System.ComponentModel.INestedContainer" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit NestedContainer extends System.ComponentModel.Container implements class System.ComponentModel.IContainer, class System.ComponentModel.INestedContainer, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.NestedContainer" />
  <TypeSignature Language="VB.NET" Value="Public Class NestedContainer&#xA;Inherits Container&#xA;Implements IContainer, IDisposable, INestedContainer" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1" />
  <TypeSignature Language="C++ CLI" Value="public ref class NestedContainer : System::ComponentModel::Container, IDisposable, System::ComponentModel::IContainer, System::ComponentModel::INestedContainer" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1" />
  <TypeSignature Language="F#" Value="type NestedContainer = class&#xA;    inherit Container&#xA;    interface IContainer&#xA;    interface IDisposable&#xA;    interface INestedContainer" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netstandard-2.0;netstandard-2.1" />
  <TypeSignature Language="C#" Value="public class NestedContainer : System.ComponentModel.Container, IDisposable, System.ComponentModel.INestedContainer" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="VB.NET" Value="Public Class NestedContainer&#xA;Inherits Container&#xA;Implements IDisposable, INestedContainer" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="C++ CLI" Value="public ref class NestedContainer : System::ComponentModel::Container, IDisposable, System::ComponentModel::INestedContainer" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="F#" Value="type NestedContainer = class&#xA;    inherit Container&#xA;    interface INestedContainer&#xA;    interface IContainer&#xA;    interface IDisposable" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="C#" Value="public class NestedContainer : System.ComponentModel.Container, System.ComponentModel.INestedContainer" FrameworkAlternate="netstandard-2.0;netstandard-2.1" />
  <TypeSignature Language="VB.NET" Value="Public Class NestedContainer&#xA;Inherits Container&#xA;Implements INestedContainer" FrameworkAlternate="netstandard-2.0;netstandard-2.1" />
  <TypeSignature Language="C++ CLI" Value="public ref class NestedContainer : System::ComponentModel::Container, System::ComponentModel::INestedContainer" FrameworkAlternate="netstandard-2.0;netstandard-2.1" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="netstandard" FromVersion="2.1.0.0" To="System.ComponentModel.TypeConverter" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.ComponentModel.Container</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ComponentModel.IContainer</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ComponentModel.INestedContainer</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="ea0f2-101">Stellt die Basisimplementierung für die <see cref="T:System.ComponentModel.INestedContainer" />-Schnittstelle bereit, die es Containern ermöglicht, über eine besitzende Komponente zu verfügen.</span><span class="sxs-lookup"><span data-stu-id="ea0f2-101">Provides the base implementation for the <see cref="T:System.ComponentModel.INestedContainer" /> interface, which enables containers to have an owning component.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ea0f2-102">Bei der- <xref:System.ComponentModel.NestedContainer> Klasse handelt es sich um eine einfache Implementierung der- <xref:System.ComponentModel.INestedContainer> Schnittstelle, die eine Komponente definiert, die logisch NULL oder mehr andere Komponenten enthält und im Besitz einer übergeordneten Komponente ist.</span><span class="sxs-lookup"><span data-stu-id="ea0f2-102">The <xref:System.ComponentModel.NestedContainer> class is a simple implementation of the <xref:System.ComponentModel.INestedContainer> interface, which defines a component that logically contains zero or more other components and is owned by a parent component.</span></span> <span data-ttu-id="ea0f2-103">Das Verhalten von Unterschieden mit einem Standard unterscheidet <xref:System.ComponentModel.Container> sich in vielerlei Hinsicht von einem Standard, einschließlich der folgenden:</span><span class="sxs-lookup"><span data-stu-id="ea0f2-103">The behavior of nested containers differs from a standard <xref:System.ComponentModel.Container> in a number of ways, including the following:</span></span>  
  
-   <span data-ttu-id="ea0f2-104">Standorteigenschaften wie <xref:System.ComponentModel.Component.DesignMode%2A> und <xref:System.ComponentModel.Component.GetService%2A> werden durch die Site der besitzenden Komponente weitergeleitet.</span><span class="sxs-lookup"><span data-stu-id="ea0f2-104">Site characteristics such as <xref:System.ComponentModel.Component.DesignMode%2A> and <xref:System.ComponentModel.Component.GetService%2A> are routed through the owning component's site.</span></span>  
  
-   <span data-ttu-id="ea0f2-105">Die-Eigenschaft der Website <xref:System.ComponentModel.ISite.Name%2A> ist ein qualifizierter Name, der den Namen der besitzenden Komponente, gefolgt von einem Zeitraum (.) und dem Namen der untergeordneten Komponente enthält.</span><span class="sxs-lookup"><span data-stu-id="ea0f2-105">The site's <xref:System.ComponentModel.ISite.Name%2A> property is a qualified name that includes the owning component's name followed by a period (.) and the child component's name.</span></span>  
  
-   <span data-ttu-id="ea0f2-106"><xref:System.ComponentModel.NestedContainer.GetService%2A> bietet Unterstützung für den <xref:System.ComponentModel.INestedContainer> As-a-Service.</span><span class="sxs-lookup"><span data-stu-id="ea0f2-106"><xref:System.ComponentModel.NestedContainer.GetService%2A> provides support for the <xref:System.ComponentModel.INestedContainer> as a service.</span></span>  
  
-   <span data-ttu-id="ea0f2-107">Wenn die besitzende Komponente verworfen wird, wird der Container ebenfalls verworfen.</span><span class="sxs-lookup"><span data-stu-id="ea0f2-107">When the owning component is disposed, the container is disposed as well.</span></span>  
  
 <span data-ttu-id="ea0f2-108">Außerdem behandeln die Designer die unterschiedlichen unterschiedlichen Container.</span><span class="sxs-lookup"><span data-stu-id="ea0f2-108">In addition, designers treat nested containers differently.</span></span> <span data-ttu-id="ea0f2-109">Ein Designer Host ist nur an einem Container interessiert, der dem Host zugeordnet ist.</span><span class="sxs-lookup"><span data-stu-id="ea0f2-109">A designer host is only interested in one container - the one associated with the host.</span></span> <span data-ttu-id="ea0f2-110">Daher werden Komponenten hinzufügen und Entfernen-Ereignisse nicht ausgelöst, wenn eine Komponente einem geschiebenen Container hinzugefügt oder daraus entfernt wird.</span><span class="sxs-lookup"><span data-stu-id="ea0f2-110">Therefore, component add and remove events are not raised when a component is added to or removed from a nested container.</span></span> <span data-ttu-id="ea0f2-111">Da die Dienste jedoch an den geschalbten Container weitergeleitet werden, werden Komponenten Änderungs Ereignisse ausgelöst, wenn eine Komponente in einem geschalbten Container geändert wird.</span><span class="sxs-lookup"><span data-stu-id="ea0f2-111">However, because services flow through to the nested container, component change events are raised when a component in a nested container is changed.</span></span>  
  
 <span data-ttu-id="ea0f2-112">Dieser Unterschied bei der Ereignis Verfolgung wirkt sich auch auf die Rückgängig-Funktionalität aus, die eng an die Serialisierung gebunden</span><span class="sxs-lookup"><span data-stu-id="ea0f2-112">This disparity in event tracking also impacts undo functionality, which is closely tied to serialization.</span></span> <span data-ttu-id="ea0f2-113">Die standardmäßige rückgängig-Engine verwendet <xref:System.ComponentModel.Design.IReferenceService> , um an Komponenten vorgenommene Änderungen zu verfolgen.</span><span class="sxs-lookup"><span data-stu-id="ea0f2-113">The standard undo engine uses <xref:System.ComponentModel.Design.IReferenceService> to track changes made to components.</span></span> <span data-ttu-id="ea0f2-114">Wenn die rückgängig-Engine keinen Namen für eine Komponente über den Verweis Dienst identifizieren kann, ignoriert die Engine alle Änderungen für diese Komponente.</span><span class="sxs-lookup"><span data-stu-id="ea0f2-114">If the undo engine cannot identify a name for a component through the reference service, the engine will ignore any changes for that component.</span></span> <span data-ttu-id="ea0f2-115">Dieser Dienst erkennt Änderungen an enthaltenen Komponenten nur dann automatisch, wenn Sie in ihren Besitzern als öffentliche, schreibgeschützte Eigenschaften mit demselben Namen verfügbar gemacht werden.</span><span class="sxs-lookup"><span data-stu-id="ea0f2-115">This service automatically recognizes changes to contained components only if they are exposed as public read-only properties of the same name in their owners.</span></span> <span data-ttu-id="ea0f2-116">Andernfalls muss der Entwickler Komponenten Änderungs Ereignisse an den Besitzer übergeben.</span><span class="sxs-lookup"><span data-stu-id="ea0f2-116">Otherwise, the developer must pass component change events up to the owner.</span></span> <span data-ttu-id="ea0f2-117">Wenn z. b. die-Eigenschaft einer Komponente `Text` auf der besitzenden Komponente als-Eigenschaft wieder `Address` hergestellt wird, wenn die- `Text` Eigenschaft geändert wird, muss für die entsprechende Eigenschaft Programm gesteuert eine Eigenschafts Änderung durchgeführt werden `Address` . andernfalls wird diese Änderung nicht von rückgängig verfolgt.</span><span class="sxs-lookup"><span data-stu-id="ea0f2-117">For example, if a nested component's `Text` property is resurfaced on its owning component as an `Address` property, when the `Text` property is changed, a property change must be programmatically made for the corresponding `Address` property or else that change will not be tracked by undo.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.INestedContainer" />
    <altmember cref="T:System.ComponentModel.IContainer" />
    <altmember cref="T:System.ComponentModel.ISite" />
    <altmember cref="T:System.ComponentModel.Design.IReferenceService" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NestedContainer (System.ComponentModel.IComponent owner);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ComponentModel.IComponent owner) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.NestedContainer.#ctor(System.ComponentModel.IComponent)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (owner As IComponent)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; NestedContainer(System::ComponentModel::IComponent ^ owner);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.NestedContainer : System.ComponentModel.IComponent -&gt; System.ComponentModel.NestedContainer" Usage="new System.ComponentModel.NestedContainer owner" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="owner" Type="System.ComponentModel.IComponent" />
      </Parameters>
      <Docs>
        <param name="owner"><span data-ttu-id="ea0f2-118">Die <see cref="T:System.ComponentModel.IComponent" />, die den geschachtelten Container besitzt.</span><span class="sxs-lookup"><span data-stu-id="ea0f2-118">The <see cref="T:System.ComponentModel.IComponent" /> that owns this nested container.</span></span></param>
        <summary><span data-ttu-id="ea0f2-119">Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.NestedContainer" />-Klasse.</span><span class="sxs-lookup"><span data-stu-id="ea0f2-119">Initializes a new instance of the <see cref="T:System.ComponentModel.NestedContainer" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ea0f2-120">Dieser Konstruktor trägt das Ereignis des Besitzers ein <xref:System.ComponentModel.IComponent.Disposed> , sodass die-Methode des-Containers <xref:System.ComponentModel.NestedContainer.Dispose%2A> automatisch aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="ea0f2-120">This constructor enlists in its owner's <xref:System.ComponentModel.IComponent.Disposed> event so that the nested container's <xref:System.ComponentModel.NestedContainer.Dispose%2A> method will automatically be called.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ea0f2-121"><paramref name="owner" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="ea0f2-121"><paramref name="owner" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="Overload:System.ComponentModel.NestedContainer.Dispose" />
      </Docs>
    </Member>
    <Member MemberName="CreateSite">
      <MemberSignature Language="C#" Value="protected override System.ComponentModel.ISite CreateSite (System.ComponentModel.IComponent component, string name);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.ComponentModel.ISite CreateSite(class System.ComponentModel.IComponent component, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.NestedContainer.CreateSite(System.ComponentModel.IComponent,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateSite (component As IComponent, name As String) As ISite" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::ComponentModel::ISite ^ CreateSite(System::ComponentModel::IComponent ^ component, System::String ^ name);" />
      <MemberSignature Language="F#" Value="override this.CreateSite : System.ComponentModel.IComponent * string -&gt; System.ComponentModel.ISite" Usage="nestedContainer.CreateSite (component, name)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.ISite</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.ComponentModel.IComponent" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="component"><span data-ttu-id="ea0f2-122">Die <see cref="T:System.ComponentModel.IComponent" />, für die eine Site erstellt werden soll.</span><span class="sxs-lookup"><span data-stu-id="ea0f2-122">The <see cref="T:System.ComponentModel.IComponent" /> to create a site for.</span></span></param>
        <param name="name"><span data-ttu-id="ea0f2-123">Der Name, der der <paramref name="component" /> zugewiesen werden soll, oder <see langword="null" />, wenn die Namenszuweisung übersprungen werden soll.</span><span class="sxs-lookup"><span data-stu-id="ea0f2-123">The name to assign to <paramref name="component" />, or <see langword="null" /> to skip the name assignment.</span></span></param>
        <summary><span data-ttu-id="ea0f2-124">Erstellt eine Site für die Komponente im Container.</span><span class="sxs-lookup"><span data-stu-id="ea0f2-124">Creates a site for the component within the container.</span></span></summary>
        <returns><span data-ttu-id="ea0f2-125">Der neu erstellte <see cref="T:System.ComponentModel.ISite" />.</span><span class="sxs-lookup"><span data-stu-id="ea0f2-125">The newly created <see cref="T:System.ComponentModel.ISite" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ea0f2-126">Wenn der- `name` Parameter ist `null` , wird der dem- <xref:System.ComponentModel.IComponent> Container ohne identifizierenden Namen hinzugefügt.</span><span class="sxs-lookup"><span data-stu-id="ea0f2-126">If the `name` parameter is `null`, the <xref:System.ComponentModel.IComponent> is added to the nested container without an identifying name.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ea0f2-127"><paramref name="component" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="ea0f2-127"><paramref name="component" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.ComponentModel.Container.CreateSite(System.ComponentModel.IComponent,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.NestedContainer.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="nestedContainer.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing"><span data-ttu-id="ea0f2-128"><see langword="true" />, um sowohl verwaltete als auch nicht verwaltete Ressourcen freizugeben, <see langword="false" />, um ausschließlich nicht verwaltete Ressourcen freizugeben.</span><span class="sxs-lookup"><span data-stu-id="ea0f2-128"><see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="ea0f2-129">Gibt die vom geschachtelten Container verwendeten Ressourcen frei.</span><span class="sxs-lookup"><span data-stu-id="ea0f2-129">Releases the resources used by the nested container.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ea0f2-130">Diese Methode wird von der öffentlichen `Dispose()` -Methode und der- <xref:System.Object.Finalize%2A> Methode aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="ea0f2-130">This method is called by the public `Dispose()` method and the <xref:System.Object.Finalize%2A> method.</span></span> <span data-ttu-id="ea0f2-131">`Dispose()` Ruft die geschützte `Dispose(Boolean)` Methode auf, wobei der- `disposing` Parameter auf festgelegt ist `true` .</span><span class="sxs-lookup"><span data-stu-id="ea0f2-131">`Dispose()` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`.</span></span> <span data-ttu-id="ea0f2-132"><xref:System.Object.Finalize%2A> Ruft `Dispose` `disposing` auf, wobei auf gesetzt ist `false` .</span><span class="sxs-lookup"><span data-stu-id="ea0f2-132"><xref:System.Object.Finalize%2A> invokes `Dispose` with `disposing` set to `false`.</span></span>  
  
 <span data-ttu-id="ea0f2-133">Wenn der- `disposing` Parameter auf true festgelegt ist, gibt diese Methode alle Ressourcen frei, die von den verwalteten Objekten, auf die dieser <xref:System.ComponentModel.NestedContainer> verweist,</span><span class="sxs-lookup"><span data-stu-id="ea0f2-133">When the `disposing` parameter is true, this method releases all resources held by any managed objects that this <xref:System.ComponentModel.NestedContainer> references.</span></span> <span data-ttu-id="ea0f2-134">Diese Methode ruft die `Dispose()`-Methode jedes referenzierten Objekts auf.</span><span class="sxs-lookup"><span data-stu-id="ea0f2-134">This method invokes the `Dispose()` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="ea0f2-135">
            <see langword="Dispose" /> kann von anderen Objekten mehrmals aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="ea0f2-135">
            <see langword="Dispose" /> can be called multiple times by other objects.</span></span> <span data-ttu-id="ea0f2-136">Wenn Sie überschreiben, sollten <see langword="Dispose(Boolean)" /> Sie darauf achten, nicht auf Objekte zu verweisen, die zuvor in einem früheren-Aufrufpunkt verworfen wurden <see langword="Dispose" /> .</span><span class="sxs-lookup"><span data-stu-id="ea0f2-136">When overriding <see langword="Dispose(Boolean)" /> be careful not to reference objects that have been previously disposed of in an earlier call to <see langword="Dispose" />.</span></span> <span data-ttu-id="ea0f2-137">Weitere Informationen zum Implementieren von finden Sie <see langword="Dispose(Boolean)" /> unter [Implementieren einer](/dotnet/standard/garbage-collection/implementing-dispose)verwerfen-Methode.</span><span class="sxs-lookup"><span data-stu-id="ea0f2-137">For more information about how to implement <see langword="Dispose(Boolean)" />, see [Implementing a Dispose Method](/dotnet/standard/garbage-collection/implementing-dispose).</span></span>  
  
<span data-ttu-id="ea0f2-138">Weitere Informationen zu <see langword="Dispose" /> und <see cref="M:System.Object.Finalize" /> finden Sie unter [Bereinigen von nicht verwalteten Ressourcen](/dotnet/standard/garbage-collection/unmanaged) und überschreiben [der Finalize-Methode](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ddae83kx(v=vs.100)).</span><span class="sxs-lookup"><span data-stu-id="ea0f2-138">For more information about <see langword="Dispose" /> and <see cref="M:System.Object.Finalize" />, see [Cleaning Up Unmanaged Resources](/dotnet/standard/garbage-collection/unmanaged) and [Overriding the Finalize Method](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ddae83kx(v=vs.100)).</span></span></para></block>
        <altmember cref="M:System.ComponentModel.NestedContainer.#ctor(System.ComponentModel.IComponent)" />
      </Docs>
    </Member>
    <Member MemberName="GetService">
      <MemberSignature Language="C#" Value="protected override object GetService (Type service);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance object GetService(class System.Type service) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.NestedContainer.GetService(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetService (service As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Object ^ GetService(Type ^ service);" />
      <MemberSignature Language="F#" Value="override this.GetService : Type -&gt; obj" Usage="nestedContainer.GetService service" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="service" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="service"><span data-ttu-id="ea0f2-139">Der <see cref="T:System.Type" /> des abzurufenden Dienstes.</span><span class="sxs-lookup"><span data-stu-id="ea0f2-139">The <see cref="T:System.Type" /> of the service to retrieve.</span></span></param>
        <summary><span data-ttu-id="ea0f2-140">Ruft das Dienstobjekt des angegebenen Typs ab, sofern es verfügbar ist.</span><span class="sxs-lookup"><span data-stu-id="ea0f2-140">Gets the service object of the specified type, if it is available.</span></span></summary>
        <returns><span data-ttu-id="ea0f2-141">Ein <see cref="T:System.Object" />, das den angeforderten Dienst implementiert, oder <see langword="null" />, wenn der Dienst nicht ermittelt werden kann.</span><span class="sxs-lookup"><span data-stu-id="ea0f2-141">An <see cref="T:System.Object" /> that implements the requested service, or <see langword="null" /> if the service cannot be resolved.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ea0f2-142">Diese Methode überschreibt die- <xref:System.ComponentModel.Container.GetService%2A?displayProperty=nameWithType> Methode.</span><span class="sxs-lookup"><span data-stu-id="ea0f2-142">This method overrides the <xref:System.ComponentModel.Container.GetService%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="ea0f2-143">Diese Implementierung löst nur Anforderungen für den <xref:System.ComponentModel.INestedContainer> -Dienst und den- <xref:System.ComponentModel.IContainer> Dienst auf.</span><span class="sxs-lookup"><span data-stu-id="ea0f2-143">This implementation only resolves requests for the <xref:System.ComponentModel.INestedContainer> and <xref:System.ComponentModel.IContainer> services.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.Container.GetService(System.Type)" />
        <altmember cref="T:System.IServiceProvider" />
      </Docs>
    </Member>
    <Member MemberName="Owner">
      <MemberSignature Language="C#" Value="public System.ComponentModel.IComponent Owner { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.IComponent Owner" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.NestedContainer.Owner" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Owner As IComponent" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ComponentModel::IComponent ^ Owner { System::ComponentModel::IComponent ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Owner : System.ComponentModel.IComponent" Usage="System.ComponentModel.NestedContainer.Owner" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.ComponentModel.INestedContainer.Owner</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.IComponent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ea0f2-144">Ruft die besitzende Komponente für diesen geschachtelten Container ab.</span><span class="sxs-lookup"><span data-stu-id="ea0f2-144">Gets the owning component for this nested container.</span></span></summary>
        <value><span data-ttu-id="ea0f2-145">Die <see cref="T:System.ComponentModel.IComponent" />, die den geschachtelten Container besitzt.</span><span class="sxs-lookup"><span data-stu-id="ea0f2-145">The <see cref="T:System.ComponentModel.IComponent" /> that owns this nested container.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ea0f2-146">Bei der besitzenden Komponente handelt es sich um das Merkmal, das die Unterscheidung von nten Containern aus normalen Containern</span><span class="sxs-lookup"><span data-stu-id="ea0f2-146">The owning component is the characteristic that differentiates nested containers from ordinary containers.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.IComponent" />
        <altmember cref="T:System.ComponentModel.IContainer" />
        <altmember cref="P:System.ComponentModel.INestedContainer.Owner" />
      </Docs>
    </Member>
    <Member MemberName="OwnerName">
      <MemberSignature Language="C#" Value="protected virtual string OwnerName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OwnerName" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.NestedContainer.OwnerName" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property OwnerName As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::String ^ OwnerName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.OwnerName : string" Usage="System.ComponentModel.NestedContainer.OwnerName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ea0f2-147">Ruft den Namen der besitzenden Komponente ab.</span><span class="sxs-lookup"><span data-stu-id="ea0f2-147">Gets the name of the owning component.</span></span></summary>
        <value><span data-ttu-id="ea0f2-148">Der Name der besitzenden Komponente.</span><span class="sxs-lookup"><span data-stu-id="ea0f2-148">The name of the owning component.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ea0f2-149">Diese Eigenschaft kann überschrieben werden, um einen benutzerdefinierten Besitzer Namen bereitzustellen.</span><span class="sxs-lookup"><span data-stu-id="ea0f2-149">This property may be overridden to provide a custom owner name.</span></span> <span data-ttu-id="ea0f2-150">Die Standard Implementierung durchsucht die Website des Besitzers nach <xref:System.ComponentModel.INestedSite> und ruft auf <xref:System.ComponentModel.INestedSite.FullName%2A> , oder, <xref:System.ComponentModel.ISite.Name%2A> Wenn keine nicht-Website vorhanden ist.</span><span class="sxs-lookup"><span data-stu-id="ea0f2-150">The default implementation searches the owner's site for <xref:System.ComponentModel.INestedSite> and calls <xref:System.ComponentModel.INestedSite.FullName%2A>, or <xref:System.ComponentModel.ISite.Name%2A> if there is no nested site.</span></span> <span data-ttu-id="ea0f2-151">Wenn keines von beiden verfügbar ist, gibt diese Eigenschaft zurück `null` .</span><span class="sxs-lookup"><span data-stu-id="ea0f2-151">If neither is available, this property returns `null`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
