<Type Name="TypeConverterAttribute" FullName="System.ComponentModel.TypeConverterAttribute">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="6157e6139cf6aed94c79218f2eadb8ebfd553a68" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36700408" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class TypeConverterAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit TypeConverterAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.TypeConverterAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class TypeConverterAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class TypeConverterAttribute sealed : Attribute" />
  <TypeSignature Language="F#" Value="type TypeConverterAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.All)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="3a9d6-101">Gibt an, welcher Typ als Konverter für das Objekt verwendet werden sollte, an das dieses Attribut gebunden ist.</span>
      <span class="sxs-lookup">
        <span data-stu-id="3a9d6-101">Specifies what type to use as a converter for the object this attribute is bound to.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3a9d6-102">Die Klasse, die Sie, für die Konvertierung verwenden von erben muss <xref:System.ComponentModel.TypeConverter>.</span><span class="sxs-lookup"><span data-stu-id="3a9d6-102">The class you use for conversion must inherit from <xref:System.ComponentModel.TypeConverter>.</span></span> <span data-ttu-id="3a9d6-103">Verwenden der <xref:System.ComponentModel.TypeConverterAttribute.ConverterTypeName%2A> Eigenschaft, um den Namen der Klasse, die der Datenkonvertierung für das Objekt dieses Attribut enthält gebunden ist.</span><span class="sxs-lookup"><span data-stu-id="3a9d6-103">Use the <xref:System.ComponentModel.TypeConverterAttribute.ConverterTypeName%2A> property to get the name of the class that provides the data conversion for the object this attribute is bound to.</span></span>  
  
 <span data-ttu-id="3a9d6-104">Weitere Informationen zu Attributen finden Sie unter [Attribute](~/docs/standard/attributes/index.md).</span><span class="sxs-lookup"><span data-stu-id="3a9d6-104">For more information about attributes, see [Attributes](~/docs/standard/attributes/index.md).</span></span> <span data-ttu-id="3a9d6-105">Weitere Informationen zu den Einsatz von Typkonvertern, finden Sie unter der <xref:System.ComponentModel.TypeConverter> Basisklasse und [Vorgehensweise: Implementieren eines Typkonverters](http://msdn.microsoft.com/library/90373a3f-d8c8-492d-841c-945d62393c56).</span><span class="sxs-lookup"><span data-stu-id="3a9d6-105">For more information about type converters, see the <xref:System.ComponentModel.TypeConverter> base class and [How to: Implement a Type Converter](http://msdn.microsoft.com/library/90373a3f-d8c8-492d-841c-945d62393c56).</span></span>  
  
 <span data-ttu-id="3a9d6-106">Gewahrt einen Typkonverter für eine benutzerdefinierte Klasse, die für Markuperweiterungen für XAML Typkonvertierungsverhalten bereitstellt, wenden Sie die <xref:System.ComponentModel.TypeConverterAttribute> -Attribut auf den Typ.</span><span class="sxs-lookup"><span data-stu-id="3a9d6-106">In order to establish a type converter on a custom class that provides type conversion behavior for XAML, you apply the <xref:System.ComponentModel.TypeConverterAttribute> attribute to your type.</span></span> <span data-ttu-id="3a9d6-107">Das Argument für das Attribut verweist auf Ihre Typkonverter-Implementierung.</span><span class="sxs-lookup"><span data-stu-id="3a9d6-107">The argument of the attribute references your type converter implementation.</span></span> <span data-ttu-id="3a9d6-108">Der Typkonverter sollte Werte aus einer Zeichenfolge, die für die Attribute oder Initialisierungstext in XAML-Markup verwendet wird, akzeptiert und diese Zeichenfolge in den gewünschten Zieltyp konvertieren.</span><span class="sxs-lookup"><span data-stu-id="3a9d6-108">Your type converter should be able to accept values from a string that is used for attributes or initialization text in XAML markup, and convert that string into your intended destination type.</span></span> <span data-ttu-id="3a9d6-109">Weitere Informationen finden Sie unter [TypeConverters und Verwendung von XAML-](~/docs/framework/wpf/advanced/typeconverters-and-xaml.md).</span><span class="sxs-lookup"><span data-stu-id="3a9d6-109">For more information, see [TypeConverters and XAML](~/docs/framework/wpf/advanced/typeconverters-and-xaml.md).</span></span>  
  
 <span data-ttu-id="3a9d6-110">Anstatt auf alle Werte eines Typs anwenden, kann ein Verhalten für die Verwendung von XAML-Typkonverters auch auf eine bestimmte Eigenschaft eingerichtet werden.</span><span class="sxs-lookup"><span data-stu-id="3a9d6-110">Rather than applying to all values of a type, a type converter behavior for XAML can also be established on a specific property.</span></span> <span data-ttu-id="3a9d6-111">In diesem Fall wenden Sie <xref:System.ComponentModel.TypeConverterAttribute> auf die Eigenschaftsdefinition (die äußere Definition, nicht die spezifischen `get` und `set` Definitionen).</span><span class="sxs-lookup"><span data-stu-id="3a9d6-111">In this case, you apply <xref:System.ComponentModel.TypeConverterAttribute> to the property definition (the outer definition, not the specific `get` and `set` definitions).</span></span>  
  
 <span data-ttu-id="3a9d6-112">Ein Typ-Konverter-Verhalten für die Verwendung von XAML-Verwendung eines benutzerdefinierten anfügbaren Members kann zugewiesen werden, durch Anwenden von <xref:System.ComponentModel.TypeConverterAttribute> auf die `get` Accessor für die Methode, die die Verwendung von XAML-Verwendung unterstützt.</span><span class="sxs-lookup"><span data-stu-id="3a9d6-112">A type converter behavior for XAML usage of a custom attachable member can be assigned by applying <xref:System.ComponentModel.TypeConverterAttribute> to the `get` method accessor that supports the XAML usage.</span></span> <span data-ttu-id="3a9d6-113">Weitere Informationen finden Sie unter [Übersicht über angefügte Eigenschaften](~/docs/framework/wpf/advanced/attached-properties-overview.md).</span><span class="sxs-lookup"><span data-stu-id="3a9d6-113">For more information, see [Attached Properties Overview](~/docs/framework/wpf/advanced/attached-properties-overview.md).</span></span>  
  
 <span data-ttu-id="3a9d6-114">Für komplexe XAML-Serialisierungsfälle, die zusätzlichen Status aus der Objekt-Laufzeit erfordern, sollten Sie eventuell ein Wertserialisierungsprogramm zusätzlich zu einem Typkonverter und Attributwert definieren unterstützt Klassen auf Ihre benutzerdefinierten Typen oder Member.</span><span class="sxs-lookup"><span data-stu-id="3a9d6-114">For complex XAML serialization cases that require additional state from the object runtime, consider defining a value serializer in addition to a type converter, and attribute both support classes on your custom types or custom members.</span></span> <span data-ttu-id="3a9d6-115">Weitere Informationen finden Sie unter <xref:System.Windows.Markup.ValueSerializer>.</span><span class="sxs-lookup"><span data-stu-id="3a9d6-115">For more information, see <xref:System.Windows.Markup.ValueSerializer>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3a9d6-116">Das folgende Beispiel deklariert `MyClass` verwenden den Typkonverter `MyClassConverter`.</span><span class="sxs-lookup"><span data-stu-id="3a9d6-116">The following example declares `MyClass` to use the type converter called `MyClassConverter`.</span></span> <span data-ttu-id="3a9d6-117">In diesem Beispiel wird vorausgesetzt, dass `MyClassConverter` an anderer Stelle implementiert wurde.</span><span class="sxs-lookup"><span data-stu-id="3a9d6-117">This example assumes that `MyClassConverter` has been implemented elsewhere.</span></span> <span data-ttu-id="3a9d6-118">Die Klasse zur Implementierung des Konverters (`MyClassConverter`) erben müssen die <xref:System.ComponentModel.TypeConverter> Klasse.</span><span class="sxs-lookup"><span data-stu-id="3a9d6-118">The class implementing the converter (`MyClassConverter`) must inherit from the <xref:System.ComponentModel.TypeConverter> class.</span></span>  
  
 [!code-cpp[Classic TypeConverterAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TypeConverterAttribute Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TypeConverterAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TypeConverterAttribute Example/CS/source.cs#1)]
 [!code-vb[Classic TypeConverterAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TypeConverterAttribute Example/VB/source.vb#1)]  
  
 <span data-ttu-id="3a9d6-119">Im nächste Beispiel erstellt eine Instanz des `MyClass`.</span><span class="sxs-lookup"><span data-stu-id="3a9d6-119">The next example creates an instance of `MyClass`.</span></span> <span data-ttu-id="3a9d6-120">Es ruft die Attribute für die Klasse ab, und gibt den Namen der verwendeten Typkonverter `MyClass`.</span><span class="sxs-lookup"><span data-stu-id="3a9d6-120">Then it gets the attributes for the class, and prints the name of the type converter used by `MyClass`.</span></span>  
  
 [!code-cpp[Classic TypeConverterAttribute Example#2](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TypeConverterAttribute Example/CPP/source.cpp#2)]
 [!code-csharp[Classic TypeConverterAttribute Example#2](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TypeConverterAttribute Example/CS/source.cs#2)]
 [!code-vb[Classic TypeConverterAttribute Example#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TypeConverterAttribute Example/VB/source.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.TypeConverter" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="3a9d6-121">Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.TypeConverterAttribute" />-Klasse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a9d6-121">Initializes a new instance of the <see cref="T:System.ComponentModel.TypeConverterAttribute" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TypeConverterAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverterAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TypeConverterAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3a9d6-122">Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.TypeConverterAttribute" />-Klasse mit dem Standardtypkonverter. Dies ist eine leere Zeichenfolge ("").</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a9d6-122">Initializes a new instance of the <see cref="T:System.ComponentModel.TypeConverterAttribute" /> class with the default type converter, which is an empty string ("").</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3a9d6-123">Die Klasse, die die Datenkonvertierung muss von erben <xref:System.ComponentModel.TypeConverter>.</span><span class="sxs-lookup"><span data-stu-id="3a9d6-123">The class that provides the data conversion must inherit from <xref:System.ComponentModel.TypeConverter>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.TypeConverter" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TypeConverterAttribute (string typeName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string typeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverterAttribute.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (typeName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TypeConverterAttribute(System::String ^ typeName);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.TypeConverterAttribute : string -&gt; System.ComponentModel.TypeConverterAttribute" Usage="new System.ComponentModel.TypeConverterAttribute typeName" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="typeName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="typeName">
          <span data-ttu-id="3a9d6-124">Der voll gekennzeichnete Name der Klasse, mit der die Datenkonvertierung für das Objekt erfolgt, an die dieses Attribut gebunden ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a9d6-124">The fully qualified name of the class to use for data conversion for the object this attribute is bound to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3a9d6-125">Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.TypeConverterAttribute" />-Klasse. Dabei wird der angegebene Typname als Datenkonverter für das Objekt verwendet, an das dieses Attribut gebunden ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a9d6-125">Initializes a new instance of the <see cref="T:System.ComponentModel.TypeConverterAttribute" /> class, using the specified type name as the data converter for the object this attribute is bound to.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3a9d6-126">Die Klasse, die die Datenkonvertierung muss von erben <xref:System.ComponentModel.TypeConverter>.</span><span class="sxs-lookup"><span data-stu-id="3a9d6-126">The class that provides the data conversion must inherit from <xref:System.ComponentModel.TypeConverter>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.TypeConverter" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TypeConverterAttribute (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverterAttribute.#ctor(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TypeConverterAttribute(Type ^ type);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.TypeConverterAttribute : Type -&gt; System.ComponentModel.TypeConverterAttribute" Usage="new System.ComponentModel.TypeConverterAttribute type" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="3a9d6-127">Ein <see cref="T:System.Type" />, der den Typ der Konverterklasse darstellt, der zur Datenkonvertierung für das Objekt verwendet wird, an das dieses Attribut gebunden ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a9d6-127">A <see cref="T:System.Type" /> that represents the type of the converter class to use for data conversion for the object this attribute is bound to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3a9d6-128">Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.TypeConverterAttribute" />-Klasse. Dabei wird der angegebene Typ als Datenkonverter für das Objekt verwendet, an das dieses Attribut gebunden ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a9d6-128">Initializes a new instance of the <see cref="T:System.ComponentModel.TypeConverterAttribute" /> class, using the specified type as the data converter for the object this attribute is bound to.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3a9d6-129">Die Klasse, die die Datenkonvertierung muss von erben <xref:System.ComponentModel.TypeConverter>.</span><span class="sxs-lookup"><span data-stu-id="3a9d6-129">The class that provides the data conversion must inherit from <xref:System.ComponentModel.TypeConverter>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.TypeConverter" />
      </Docs>
    </Member>
    <Member MemberName="ConverterTypeName">
      <MemberSignature Language="C#" Value="public string ConverterTypeName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ConverterTypeName" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.TypeConverterAttribute.ConverterTypeName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ConverterTypeName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ConverterTypeName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ConverterTypeName : string" Usage="System.ComponentModel.TypeConverterAttribute.ConverterTypeName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3a9d6-130">Ruft den voll gekennzeichneten Typnamen von <see cref="T:System.Type" /> ab, der als Konverter für das Objekt verwendet wird, an das dieses Attribut gebunden ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a9d6-130">Gets the fully qualified type name of the <see cref="T:System.Type" /> to use as a converter for the object this attribute is bound to.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3a9d6-131">Der voll gekennzeichnete Typname von <see cref="T:System.Type" />, der als Konverter für das Objekt verwendet wird, an das dieses Attribut gebunden ist. Eine leere Zeichenfolge (""), wenn kein Konverter vorhanden ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a9d6-131">The fully qualified type name of the <see cref="T:System.Type" /> to use as a converter for the object this attribute is bound to, or an empty string ("") if none exists.</span>
          </span>
          <span data-ttu-id="3a9d6-132">Der Standardwert ist eine leere Zeichenfolge („“).</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a9d6-132">The default value is an empty string ("").</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.ComponentModel.TypeConverter" />
      </Docs>
    </Member>
    <Member MemberName="Default">
      <MemberSignature Language="C#" Value="public static readonly System.ComponentModel.TypeConverterAttribute Default;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.ComponentModel.TypeConverterAttribute Default" />
      <MemberSignature Language="DocId" Value="F:System.ComponentModel.TypeConverterAttribute.Default" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Default As TypeConverterAttribute " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::ComponentModel::TypeConverterAttribute ^ Default;" />
      <MemberSignature Language="F#" Value=" staticval mutable Default : System.ComponentModel.TypeConverterAttribute" Usage="System.ComponentModel.TypeConverterAttribute.Default" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.TypeConverterAttribute</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3a9d6-133">Gibt den Typ an, der als Konverter für das Objekt verwendet werden soll, an das dieses Attribut gebunden ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a9d6-133">Specifies the type to use as a converter for the object this attribute is bound to.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.ComponentModel.TypeConverter" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverterAttribute.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="typeConverterAttribute.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="3a9d6-134">Das Objekt, dessen Wert auf Gleichheit geprüft werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a9d6-134">The object to test the value equality of.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3a9d6-135">Gibt zurück, ob der Wert des angegebenen Objekts gleich dem aktuellen <see cref="T:System.ComponentModel.TypeConverterAttribute" /> ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a9d6-135">Returns whether the value of the given object is equal to the current <see cref="T:System.ComponentModel.TypeConverterAttribute" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3a9d6-136">
            <see langword="true" />, wenn der Wert des angegebenen Objekts dem aktuellen <see cref="T:System.ComponentModel.TypeConverterAttribute" /> entspricht, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a9d6-136">
              <see langword="true" /> if the value of the given object is equal to that of the current <see cref="T:System.ComponentModel.TypeConverterAttribute" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverterAttribute.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="typeConverterAttribute.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3a9d6-137">Gibt den Hashcode für diese Instanz zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a9d6-137">Returns the hash code for this instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3a9d6-138">Ein Hashcode für die aktuelle <see cref="T:System.ComponentModel.TypeConverterAttribute" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a9d6-138">A hash code for the current <see cref="T:System.ComponentModel.TypeConverterAttribute" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>