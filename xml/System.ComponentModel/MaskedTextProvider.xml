<Type Name="MaskedTextProvider" FullName="System.ComponentModel.MaskedTextProvider">
  <Metadata><Meta Name="ms.openlocfilehash" Value="bea2d2a2093d87b1bd883356e86cb6c2fb80f351" /><Meta Name="ms.sourcegitcommit" Value="b0947fed0227b6b2e292d7efb43705b488b130aa" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="04/29/2020" /><Meta Name="ms.locfileid" Value="82412169" /></Metadata><TypeSignature Language="C#" Value="public class MaskedTextProvider : ICloneable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MaskedTextProvider extends System.Object implements class System.ICloneable" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.MaskedTextProvider" />
  <TypeSignature Language="VB.NET" Value="Public Class MaskedTextProvider&#xA;Implements ICloneable" />
  <TypeSignature Language="C++ CLI" Value="public ref class MaskedTextProvider : ICloneable" />
  <TypeSignature Language="F#" Value="type MaskedTextProvider = class&#xA;    interface ICloneable" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="43acf-101">Stellt einen Maskenanalysedienst dar, der von einer beliebigen Anzahl von Steuerelementen, die Maskierung unterstützen, verwendet werden kann, z. B. dem <see cref="T:System.Windows.Forms.MaskedTextBox" />-Steuerelement.</span><span class="sxs-lookup"><span data-stu-id="43acf-101">Represents a mask-parsing service that can be used by any number of controls that support masking, such as the <see cref="T:System.Windows.Forms.MaskedTextBox" /> control.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43acf-102">Das <xref:System.Windows.Forms.MaskedTextBox> Steuerelement enthält eine Maske, die aus Literalzeichen und Formatierungs Elementen besteht, die alle Benutzereingaben mit testet.</span><span class="sxs-lookup"><span data-stu-id="43acf-102">The <xref:System.Windows.Forms.MaskedTextBox> control contains a mask, composed of literal characters and formatting elements, that it tests all user input against.</span></span> <span data-ttu-id="43acf-103">Anstatt eine bestimmte Maske-<xref:System.Windows.Forms.MaskedTextBox>-Engine dauerhaft mit zuzuordnen, stellt Windows Forms Sie als separaten Dienst bereit, der von der <xref:System.ComponentModel.MaskedTextProvider>-Klasse dargestellt wird, die die Syntax der Maskierungs Sprache definiert, die in der Dokumentation für die <xref:System.Windows.Forms.MaskedTextBox.Mask%2A>-Eigenschaft erläutert wird.</span><span class="sxs-lookup"><span data-stu-id="43acf-103">Instead of permanently associating a specific mask-parsing engine with <xref:System.Windows.Forms.MaskedTextBox>, Windows Forms provides it as a separate service, represented by the <xref:System.ComponentModel.MaskedTextProvider> class, which defines the syntax of the masking language discussed in the documentation for the <xref:System.Windows.Forms.MaskedTextBox.Mask%2A> property.</span></span>  
  
 <span data-ttu-id="43acf-104">Viele der Member der <xref:System.Windows.Forms.MaskedTextBox>-Klasse verweisen auf ähnliche Weise als Member des zugeordneten <xref:System.ComponentModel.MaskedTextProvider>.</span><span class="sxs-lookup"><span data-stu-id="43acf-104">Many of the members of the <xref:System.Windows.Forms.MaskedTextBox> class refer their implementation to similarly named members of the associated <xref:System.ComponentModel.MaskedTextProvider>.</span></span> <span data-ttu-id="43acf-105">Die <xref:System.Windows.Forms.MaskedTextBox.PromptChar%2A?displayProperty=nameWithType>-Eigenschaft der <xref:System.Windows.Forms.MaskedTextBox>-Klasse bezieht sich beispielsweise auf den gesamten Zugriff auf die <xref:System.ComponentModel.MaskedTextProvider.PromptChar%2A> der <xref:System.ComponentModel.MaskedTextProvider>-Klasse.</span><span class="sxs-lookup"><span data-stu-id="43acf-105">For example, the <xref:System.Windows.Forms.MaskedTextBox.PromptChar%2A?displayProperty=nameWithType> property of the <xref:System.Windows.Forms.MaskedTextBox> class refers all access to the <xref:System.ComponentModel.MaskedTextProvider.PromptChar%2A> of the <xref:System.ComponentModel.MaskedTextProvider> class.</span></span>  
  
 <span data-ttu-id="43acf-106">Die von <xref:System.ComponentModel.MaskedTextProvider> verwendete Masken Bearbeitungs-Engine wird nach dem maskierten Bearbeitungs Steuerelement modelliert, das in Microsoft Visual Basic Version 6 enthalten ist.</span><span class="sxs-lookup"><span data-stu-id="43acf-106">The mask-parsing engine used by <xref:System.ComponentModel.MaskedTextProvider> is modeled after the Masked Edit control included in Microsoft Visual Basic version 6.</span></span> <span data-ttu-id="43acf-107">Die Maskierungs Sprache wird in der Dokumentation für die <xref:System.ComponentModel.MaskedTextProvider.Mask%2A>-Eigenschaft beschrieben.</span><span class="sxs-lookup"><span data-stu-id="43acf-107">Its masking language is described in the documentation for the <xref:System.ComponentModel.MaskedTextProvider.Mask%2A> property.</span></span>  
  
 <span data-ttu-id="43acf-108">Die folgenden drei unterschiedlichen Zeichen folgen sind an der <xref:System.ComponentModel.MaskedTextProvider>-Klasse beteiligt.</span><span class="sxs-lookup"><span data-stu-id="43acf-108">The following three distinct strings are involved with the <xref:System.ComponentModel.MaskedTextProvider> class.</span></span>  
  
|<span data-ttu-id="43acf-109">Zeichen folgen Name</span><span class="sxs-lookup"><span data-stu-id="43acf-109">String name</span></span>|<span data-ttu-id="43acf-110">BESCHREIBUNG</span><span class="sxs-lookup"><span data-stu-id="43acf-110">Description</span></span>|  
|-----------------|-----------------|  
|<span data-ttu-id="43acf-111">Eingabezeichen oder Zeichenfolge</span><span class="sxs-lookup"><span data-stu-id="43acf-111">Input character or string</span></span>|<span data-ttu-id="43acf-112">Stellt die Zeichen dar, die als Eingabe verwendet werden, auf die die Maske angewendet wird.</span><span class="sxs-lookup"><span data-stu-id="43acf-112">Represents the characters used as input that the mask is applied against.</span></span> <span data-ttu-id="43acf-113">In Wirklichkeit kann die Eingabe Zeichenfolge aus mehreren Eingabe Vorgängen bestehen, einschließlich <xref:System.ComponentModel.MaskedTextProvider.Add%2A>, <xref:System.ComponentModel.MaskedTextProvider.Replace%2A>, <xref:System.ComponentModel.MaskedTextProvider.InsertAt%2A>und <xref:System.ComponentModel.MaskedTextProvider.Remove%2A>.</span><span class="sxs-lookup"><span data-stu-id="43acf-113">In actuality, the input string may be composed of multiple input operations, including <xref:System.ComponentModel.MaskedTextProvider.Add%2A>, <xref:System.ComponentModel.MaskedTextProvider.Replace%2A>, <xref:System.ComponentModel.MaskedTextProvider.InsertAt%2A>, and <xref:System.ComponentModel.MaskedTextProvider.Remove%2A>.</span></span> <span data-ttu-id="43acf-114">Daher kann nicht direkt auf die Eingabe Zeichenfolge zugegriffen werden.</span><span class="sxs-lookup"><span data-stu-id="43acf-114">Therefore, the input string cannot be accessed directly.</span></span> <span data-ttu-id="43acf-115">Aspekte der Behandlung von Eingabe Zeichenfolgen sind jedoch über die Eigenschaften "<xref:System.ComponentModel.MaskedTextProvider.AllowPromptAsInput%2A>" und "<xref:System.ComponentModel.MaskedTextProvider.AsciiOnly%2A>", "<xref:System.ComponentModel.MaskedTextProvider.ResetOnPrompt%2A>" und "<xref:System.ComponentModel.MaskedTextProvider.ResetOnSpace%2A>" verfügbar.</span><span class="sxs-lookup"><span data-stu-id="43acf-115">However, aspects of the input string handling are available though the <xref:System.ComponentModel.MaskedTextProvider.AllowPromptAsInput%2A> and <xref:System.ComponentModel.MaskedTextProvider.AsciiOnly%2A>, <xref:System.ComponentModel.MaskedTextProvider.ResetOnPrompt%2A>, and <xref:System.ComponentModel.MaskedTextProvider.ResetOnSpace%2A> properties.</span></span>|  
|<span data-ttu-id="43acf-116">Mask</span><span class="sxs-lookup"><span data-stu-id="43acf-116">Mask</span></span>|<span data-ttu-id="43acf-117">Stellt die Eingabe Formatierung dar, mit der die Eingabe Zeichenfolge in die formatierte Zeichenfolge transformiert wird.</span><span class="sxs-lookup"><span data-stu-id="43acf-117">Represents the input formatting mask used to transform the input string into the formatted string.</span></span> <span data-ttu-id="43acf-118">Diese Zeichenfolge wird in der <xref:System.ComponentModel.MaskedTextProvider.%23ctor%2A> festgelegt, und der Zugriff erfolgt primär über die <xref:System.ComponentModel.MaskedTextProvider.Mask%2A>-Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="43acf-118">This string is set in the <xref:System.ComponentModel.MaskedTextProvider.%23ctor%2A> and accessed primarily though the <xref:System.ComponentModel.MaskedTextProvider.Mask%2A> property.</span></span> <span data-ttu-id="43acf-119">Merkmale der Maske sind auch über andere Member verfügbar, wie z. b. die Eigenschaften <xref:System.ComponentModel.MaskedTextProvider.Length%2A>, <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A>und <xref:System.ComponentModel.MaskedTextProvider.PromptChar%2A>.</span><span class="sxs-lookup"><span data-stu-id="43acf-119">Characteristics of the mask are also available through other members, such as the <xref:System.ComponentModel.MaskedTextProvider.Length%2A>, <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A>, and <xref:System.ComponentModel.MaskedTextProvider.PromptChar%2A> properties.</span></span>|  
|<span data-ttu-id="43acf-120">Formatierte Zeichenfolge</span><span class="sxs-lookup"><span data-stu-id="43acf-120">Formatted string</span></span>|<span data-ttu-id="43acf-121">Stellt die Zeichenfolge dar, die ergibt, wenn die vollständige Maske auf die Eingabe Zeichenfolge angewendet wird.</span><span class="sxs-lookup"><span data-stu-id="43acf-121">Represents the string that results when the full mask is applied to the input string.</span></span> <span data-ttu-id="43acf-122">Die formatierte Zeichenfolge kann mit vielen Membern der Klasse abgefragt werden, einschließlich <xref:System.ComponentModel.MaskedTextProvider.Item%2A>, <xref:System.ComponentModel.MaskedTextProvider.Length%2A>, <xref:System.ComponentModel.MaskedTextProvider.LastAssignedPosition%2A>, <xref:System.ComponentModel.MaskedTextProvider.MaskFull%2A>, <xref:System.ComponentModel.MaskedTextProvider.MaskCompleted%2A>, <xref:System.ComponentModel.MaskedTextProvider.FindEditPositionFrom%2A>usw.</span><span class="sxs-lookup"><span data-stu-id="43acf-122">The formatted string can be queried with many members of the class, including <xref:System.ComponentModel.MaskedTextProvider.Item%2A>, <xref:System.ComponentModel.MaskedTextProvider.Length%2A>, <xref:System.ComponentModel.MaskedTextProvider.LastAssignedPosition%2A>, <xref:System.ComponentModel.MaskedTextProvider.MaskFull%2A>, <xref:System.ComponentModel.MaskedTextProvider.MaskCompleted%2A>, <xref:System.ComponentModel.MaskedTextProvider.FindEditPositionFrom%2A>, and so on.</span></span> <span data-ttu-id="43acf-123">Der vollständige Wert der formatierten Zeichenfolge ist in den Methoden <xref:System.ComponentModel.MaskedTextProvider.ToDisplayString%2A> und <xref:System.ComponentModel.MaskedTextProvider.ToString%2A> verfügbar.</span><span class="sxs-lookup"><span data-stu-id="43acf-123">The full value of the formatted string is available from the <xref:System.ComponentModel.MaskedTextProvider.ToDisplayString%2A> and <xref:System.ComponentModel.MaskedTextProvider.ToString%2A> methods.</span></span>|  
  
> [!NOTE]
>  <span data-ttu-id="43acf-124">Die Eingabe Zeichenfolge kann eine direkte Benutzereingabe darstellen, wie im Fall der <xref:System.Windows.Forms.MaskedTextBox>, oder Sie kann von anderen Prozessen generiert werden, die nicht direkt den Benutzereingabe-/Ausgabevorgängen zugeordnet sind.</span><span class="sxs-lookup"><span data-stu-id="43acf-124">The input string may represent direct user input, as in the case of the <xref:System.Windows.Forms.MaskedTextBox>, or may be generated by other processes not directly associated with user input/output operations.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.MaskedTextBox" />
    <altmember cref="P:System.Windows.Forms.MaskedTextBox.MaskedTextProvider" />
    <altmember cref="P:System.ComponentModel.MaskedTextProvider.Mask" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="43acf-125">Initialisiert eine neue Instanz der Klasse <see cref="T:System.ComponentModel.MaskedTextProvider" />.</span><span class="sxs-lookup"><span data-stu-id="43acf-125">Initializes a new instance of the <see cref="T:System.ComponentModel.MaskedTextProvider" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MaskedTextProvider (string mask);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string mask) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (mask As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MaskedTextProvider(System::String ^ mask);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.MaskedTextProvider : string -&gt; System.ComponentModel.MaskedTextProvider" Usage="new System.ComponentModel.MaskedTextProvider mask" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="mask" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="mask"><span data-ttu-id="43acf-126">Ein <see cref="T:System.String" />, der die Eingabemaske darstellt.</span><span class="sxs-lookup"><span data-stu-id="43acf-126">A <see cref="T:System.String" /> that represents the input mask.</span></span></param>
        <summary><span data-ttu-id="43acf-127">Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.MaskedTextProvider" />-Klasse unter Verwendung der angegebenen Maske.</span><span class="sxs-lookup"><span data-stu-id="43acf-127">Initializes a new instance of the <see cref="T:System.ComponentModel.MaskedTextProvider" /> class using the specified mask.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43acf-128">Die Verwendung dieses Konstruktors entspricht exakt dem folgenden auf<xref:System.ComponentModel.MaskedTextProvider.%23ctor%28System.String%2CSystem.Globalization.CultureInfo%2CSystem.Boolean%2CSystem.Char%2CSystem.Char%2CSystem.Boolean%29?displayProperty=nameWithType> rufskonstruktor:</span><span class="sxs-lookup"><span data-stu-id="43acf-128">Use of this constructor is exactly equivalent to the following call to the <xref:System.ComponentModel.MaskedTextProvider.%23ctor%28System.String%2CSystem.Globalization.CultureInfo%2CSystem.Boolean%2CSystem.Char%2CSystem.Char%2CSystem.Boolean%29?displayProperty=nameWithType> constructor:</span></span>  
  
 `MaskedTextProvider(mask , null, true, '_', '\0', false)`  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Mask" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MaskedTextProvider (string mask, bool restrictToAscii);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string mask, bool restrictToAscii) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.#ctor(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (mask As String, restrictToAscii As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MaskedTextProvider(System::String ^ mask, bool restrictToAscii);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.MaskedTextProvider : string * bool -&gt; System.ComponentModel.MaskedTextProvider" Usage="new System.ComponentModel.MaskedTextProvider (mask, restrictToAscii)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="mask" Type="System.String" />
        <Parameter Name="restrictToAscii" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="mask"><span data-ttu-id="43acf-129">Ein <see cref="T:System.String" />, der die Eingabemaske darstellt.</span><span class="sxs-lookup"><span data-stu-id="43acf-129">A <see cref="T:System.String" /> that represents the input mask.</span></span></param>
        <param name="restrictToAscii"><span data-ttu-id="43acf-130"><see langword="true" />, um die Eingabe auf ASCII-kompatible Zeichen zu beschränken, andernfalls <see langword="false" />, um den gesamten Unicode-Satz zuzulassen.</span><span class="sxs-lookup"><span data-stu-id="43acf-130"><see langword="true" /> to restrict input to ASCII-compatible characters; otherwise <see langword="false" /> to allow the entire Unicode set.</span></span></param>
        <summary><span data-ttu-id="43acf-131">Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.MaskedTextProvider" />-Klasse unter Verwendung der angegebenen Maske und des angegebenen ASCII-Einschränkungswerts.</span><span class="sxs-lookup"><span data-stu-id="43acf-131">Initializes a new instance of the <see cref="T:System.ComponentModel.MaskedTextProvider" /> class using the specified mask and ASCII restriction value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43acf-132">Die Verwendung dieses Konstruktors entspricht exakt dem folgenden auf<xref:System.ComponentModel.MaskedTextProvider.%23ctor%28System.String%2CSystem.Globalization.CultureInfo%2CSystem.Boolean%2CSystem.Char%2CSystem.Char%2CSystem.Boolean%29?displayProperty=nameWithType> rufskonstruktor:</span><span class="sxs-lookup"><span data-stu-id="43acf-132">Use of this constructor is exactly equivalent to the following call to the <xref:System.ComponentModel.MaskedTextProvider.%23ctor%28System.String%2CSystem.Globalization.CultureInfo%2CSystem.Boolean%2CSystem.Char%2CSystem.Char%2CSystem.Boolean%29?displayProperty=nameWithType> constructor:</span></span>  
  
 `MaskedTextProvider(mask , null, true, '_', '\0', restrictToASCII)`  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Mask" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.AsciiOnly" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MaskedTextProvider (string mask, System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string mask, class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.#ctor(System.String,System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (mask As String, culture As CultureInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MaskedTextProvider(System::String ^ mask, System::Globalization::CultureInfo ^ culture);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.MaskedTextProvider : string * System.Globalization.CultureInfo -&gt; System.ComponentModel.MaskedTextProvider" Usage="new System.ComponentModel.MaskedTextProvider (mask, culture)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="mask" Type="System.String" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="mask"><span data-ttu-id="43acf-133">Ein <see cref="T:System.String" />, der die Eingabemaske darstellt.</span><span class="sxs-lookup"><span data-stu-id="43acf-133">A <see cref="T:System.String" /> that represents the input mask.</span></span></param>
        <param name="culture"><span data-ttu-id="43acf-134">Eine <see cref="T:System.Globalization.CultureInfo" />, mit deren Hilfe regionsabhängige Trennzeichen festgelegt werden.</span><span class="sxs-lookup"><span data-stu-id="43acf-134">A <see cref="T:System.Globalization.CultureInfo" /> that is used to set region-sensitive separator characters.</span></span></param>
        <summary><span data-ttu-id="43acf-135">Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.MaskedTextProvider" />-Klasse unter Verwendung der angegebenen Maske und der angegebenen Kultur.</span><span class="sxs-lookup"><span data-stu-id="43acf-135">Initializes a new instance of the <see cref="T:System.ComponentModel.MaskedTextProvider" /> class using the specified mask and culture.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43acf-136">Die Verwendung dieses Konstruktors entspricht exakt dem folgenden auf<xref:System.ComponentModel.MaskedTextProvider.%23ctor%28System.String%2CSystem.Globalization.CultureInfo%2CSystem.Boolean%2CSystem.Char%2CSystem.Char%2CSystem.Boolean%29?displayProperty=nameWithType> rufskonstruktor:</span><span class="sxs-lookup"><span data-stu-id="43acf-136">Use of this constructor is exactly equivalent to the following call to the <xref:System.ComponentModel.MaskedTextProvider.%23ctor%28System.String%2CSystem.Globalization.CultureInfo%2CSystem.Boolean%2CSystem.Char%2CSystem.Char%2CSystem.Boolean%29?displayProperty=nameWithType> constructor:</span></span>  
  
 `MaskedTextProvider(mask , culture, true, '_', '\0', false)`  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Mask" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Culture" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MaskedTextProvider (string mask, char passwordChar, bool allowPromptAsInput);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string mask, char passwordChar, bool allowPromptAsInput) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.#ctor(System.String,System.Char,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (mask As String, passwordChar As Char, allowPromptAsInput As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MaskedTextProvider(System::String ^ mask, char passwordChar, bool allowPromptAsInput);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.MaskedTextProvider : string * char * bool -&gt; System.ComponentModel.MaskedTextProvider" Usage="new System.ComponentModel.MaskedTextProvider (mask, passwordChar, allowPromptAsInput)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="mask" Type="System.String" />
        <Parameter Name="passwordChar" Type="System.Char" />
        <Parameter Name="allowPromptAsInput" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="mask"><span data-ttu-id="43acf-137">Ein <see cref="T:System.String" />, der die Eingabemaske darstellt.</span><span class="sxs-lookup"><span data-stu-id="43acf-137">A <see cref="T:System.String" /> that represents the input mask.</span></span></param>
        <param name="passwordChar"><span data-ttu-id="43acf-138">Ein <see cref="T:System.Char" />, der für in eine Kennwortzeichenfolge eingegebene Zeichen angezeigt wird.</span><span class="sxs-lookup"><span data-stu-id="43acf-138">A <see cref="T:System.Char" /> that will be displayed for characters entered into a password string.</span></span></param>
        <param name="allowPromptAsInput"><span data-ttu-id="43acf-139"><see langword="true" />, um die Eingabe des Aufforderungszeichens zuzulassen, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="43acf-139"><see langword="true" /> to allow the prompt character as input; otherwise <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="43acf-140">Initialisiert unter Verwendung der angegebenen Maske, des angegebenen Kennwortzeichens und des Aufforderungsverwendungswerts eine neue Instanz der <see cref="T:System.ComponentModel.MaskedTextProvider" />-Klasse.</span><span class="sxs-lookup"><span data-stu-id="43acf-140">Initializes a new instance of the <see cref="T:System.ComponentModel.MaskedTextProvider" /> class using the specified mask, password character, and prompt usage value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43acf-141">Die Verwendung dieses Konstruktors entspricht exakt dem folgenden auf<xref:System.ComponentModel.MaskedTextProvider.%23ctor%28System.String%2CSystem.Globalization.CultureInfo%2CSystem.Boolean%2CSystem.Char%2CSystem.Char%2CSystem.Boolean%29?displayProperty=nameWithType> rufskonstruktor:</span><span class="sxs-lookup"><span data-stu-id="43acf-141">Use of this constructor is exactly equivalent to the following call to the <xref:System.ComponentModel.MaskedTextProvider.%23ctor%28System.String%2CSystem.Globalization.CultureInfo%2CSystem.Boolean%2CSystem.Char%2CSystem.Char%2CSystem.Boolean%29?displayProperty=nameWithType> constructor:</span></span>  
  
 `MaskedTextProvider(mask , null, allowPromptAsInput, '_', passwordChar, false)`  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Mask" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.PasswordChar" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.AllowPromptAsInput" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MaskedTextProvider (string mask, System.Globalization.CultureInfo culture, bool restrictToAscii);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string mask, class System.Globalization.CultureInfo culture, bool restrictToAscii) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.#ctor(System.String,System.Globalization.CultureInfo,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (mask As String, culture As CultureInfo, restrictToAscii As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MaskedTextProvider(System::String ^ mask, System::Globalization::CultureInfo ^ culture, bool restrictToAscii);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.MaskedTextProvider : string * System.Globalization.CultureInfo * bool -&gt; System.ComponentModel.MaskedTextProvider" Usage="new System.ComponentModel.MaskedTextProvider (mask, culture, restrictToAscii)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="mask" Type="System.String" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="restrictToAscii" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="mask"><span data-ttu-id="43acf-142">Ein <see cref="T:System.String" />, der die Eingabemaske darstellt.</span><span class="sxs-lookup"><span data-stu-id="43acf-142">A <see cref="T:System.String" /> that represents the input mask.</span></span></param>
        <param name="culture"><span data-ttu-id="43acf-143">Eine <see cref="T:System.Globalization.CultureInfo" />, mit deren Hilfe regionsabhängige Trennzeichen festgelegt werden.</span><span class="sxs-lookup"><span data-stu-id="43acf-143">A <see cref="T:System.Globalization.CultureInfo" /> that is used to set region-sensitive separator characters.</span></span></param>
        <param name="restrictToAscii"><span data-ttu-id="43acf-144"><see langword="true" />, um die Eingabe auf ASCII-kompatible Zeichen zu beschränken, andernfalls <see langword="false" />, um den gesamten Unicode-Satz zuzulassen.</span><span class="sxs-lookup"><span data-stu-id="43acf-144"><see langword="true" /> to restrict input to ASCII-compatible characters; otherwise <see langword="false" /> to allow the entire Unicode set.</span></span></param>
        <summary><span data-ttu-id="43acf-145">Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.MaskedTextProvider" />-Klasse unter Verwendung der angegebenen Maske und Kultur sowie des angegebenen ASCII-Einschränkungswerts.</span><span class="sxs-lookup"><span data-stu-id="43acf-145">Initializes a new instance of the <see cref="T:System.ComponentModel.MaskedTextProvider" /> class using the specified mask, culture, and ASCII restriction value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43acf-146">Die Verwendung dieses Konstruktors entspricht exakt dem folgenden auf<xref:System.ComponentModel.MaskedTextProvider.%23ctor%28System.String%2CSystem.Globalization.CultureInfo%2CSystem.Boolean%2CSystem.Char%2CSystem.Char%2CSystem.Boolean%29?displayProperty=nameWithType> rufskonstruktor:</span><span class="sxs-lookup"><span data-stu-id="43acf-146">Use of this constructor is exactly equivalent to the following call to the <xref:System.ComponentModel.MaskedTextProvider.%23ctor%28System.String%2CSystem.Globalization.CultureInfo%2CSystem.Boolean%2CSystem.Char%2CSystem.Char%2CSystem.Boolean%29?displayProperty=nameWithType> constructor:</span></span>  
  
 `MaskedTextProvider(mask , culture, true, '_', '\0', restrictToAscii)`  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Mask" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Culture" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.AsciiOnly" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MaskedTextProvider (string mask, System.Globalization.CultureInfo culture, char passwordChar, bool allowPromptAsInput);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string mask, class System.Globalization.CultureInfo culture, char passwordChar, bool allowPromptAsInput) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.#ctor(System.String,System.Globalization.CultureInfo,System.Char,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (mask As String, culture As CultureInfo, passwordChar As Char, allowPromptAsInput As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MaskedTextProvider(System::String ^ mask, System::Globalization::CultureInfo ^ culture, char passwordChar, bool allowPromptAsInput);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.MaskedTextProvider : string * System.Globalization.CultureInfo * char * bool -&gt; System.ComponentModel.MaskedTextProvider" Usage="new System.ComponentModel.MaskedTextProvider (mask, culture, passwordChar, allowPromptAsInput)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="mask" Type="System.String" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="passwordChar" Type="System.Char" />
        <Parameter Name="allowPromptAsInput" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="mask"><span data-ttu-id="43acf-147">Ein <see cref="T:System.String" />, der die Eingabemaske darstellt.</span><span class="sxs-lookup"><span data-stu-id="43acf-147">A <see cref="T:System.String" /> that represents the input mask.</span></span></param>
        <param name="culture"><span data-ttu-id="43acf-148">Eine <see cref="T:System.Globalization.CultureInfo" />, mit deren Hilfe regionsabhängige Trennzeichen festgelegt werden.</span><span class="sxs-lookup"><span data-stu-id="43acf-148">A <see cref="T:System.Globalization.CultureInfo" /> that is used to set region-sensitive separator characters.</span></span></param>
        <param name="passwordChar"><span data-ttu-id="43acf-149">Ein <see cref="T:System.Char" />, der für in eine Kennwortzeichenfolge eingegebene Zeichen angezeigt wird.</span><span class="sxs-lookup"><span data-stu-id="43acf-149">A <see cref="T:System.Char" /> that will be displayed for characters entered into a password string.</span></span></param>
        <param name="allowPromptAsInput"><span data-ttu-id="43acf-150"><see langword="true" />, um die Eingabe des Aufforderungszeichens zuzulassen, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="43acf-150"><see langword="true" /> to allow the prompt character as input; otherwise <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="43acf-151">Initialisiert unter Verwendung der angegebenen Maske und Kultur, des angegebenen Kennwortzeichens und des Aufforderungsverwendungswerts eine neue Instanz der <see cref="T:System.ComponentModel.MaskedTextProvider" />-Klasse.</span><span class="sxs-lookup"><span data-stu-id="43acf-151">Initializes a new instance of the <see cref="T:System.ComponentModel.MaskedTextProvider" /> class using the specified mask, culture, password character, and prompt usage value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43acf-152">Die Verwendung dieses Konstruktors entspricht exakt dem folgenden auf<xref:System.ComponentModel.MaskedTextProvider.%23ctor%28System.String%2CSystem.Globalization.CultureInfo%2CSystem.Boolean%2CSystem.Char%2CSystem.Char%2CSystem.Boolean%29?displayProperty=nameWithType> rufskonstruktor:</span><span class="sxs-lookup"><span data-stu-id="43acf-152">Use of this constructor is exactly equivalent to the following call to the <xref:System.ComponentModel.MaskedTextProvider.%23ctor%28System.String%2CSystem.Globalization.CultureInfo%2CSystem.Boolean%2CSystem.Char%2CSystem.Char%2CSystem.Boolean%29?displayProperty=nameWithType> constructor:</span></span>  
  
 `MaskedTextProvider(mask , culture, allowPromptAsInput, '_', passwordChar, false)`  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Mask" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Culture" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.PasswordChar" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.AllowPromptAsInput" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MaskedTextProvider (string mask, System.Globalization.CultureInfo culture, bool allowPromptAsInput, char promptChar, char passwordChar, bool restrictToAscii);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string mask, class System.Globalization.CultureInfo culture, bool allowPromptAsInput, char promptChar, char passwordChar, bool restrictToAscii) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.#ctor(System.String,System.Globalization.CultureInfo,System.Boolean,System.Char,System.Char,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (mask As String, culture As CultureInfo, allowPromptAsInput As Boolean, promptChar As Char, passwordChar As Char, restrictToAscii As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MaskedTextProvider(System::String ^ mask, System::Globalization::CultureInfo ^ culture, bool allowPromptAsInput, char promptChar, char passwordChar, bool restrictToAscii);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.MaskedTextProvider : string * System.Globalization.CultureInfo * bool * char * char * bool -&gt; System.ComponentModel.MaskedTextProvider" Usage="new System.ComponentModel.MaskedTextProvider (mask, culture, allowPromptAsInput, promptChar, passwordChar, restrictToAscii)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="mask" Type="System.String" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="allowPromptAsInput" Type="System.Boolean" />
        <Parameter Name="promptChar" Type="System.Char" />
        <Parameter Name="passwordChar" Type="System.Char" />
        <Parameter Name="restrictToAscii" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="mask"><span data-ttu-id="43acf-153">Ein <see cref="T:System.String" />, der die Eingabemaske darstellt.</span><span class="sxs-lookup"><span data-stu-id="43acf-153">A <see cref="T:System.String" /> that represents the input mask.</span></span></param>
        <param name="culture"><span data-ttu-id="43acf-154">Eine <see cref="T:System.Globalization.CultureInfo" />, mit deren Hilfe regionsabhängige Trennzeichen festgelegt werden.</span><span class="sxs-lookup"><span data-stu-id="43acf-154">A <see cref="T:System.Globalization.CultureInfo" /> that is used to set region-sensitive separator characters.</span></span></param>
        <param name="allowPromptAsInput"><span data-ttu-id="43acf-155">Ein <see cref="T:System.Boolean" />-Wert, der angibt, ob das Aufforderungszeichen als gültiges Eingabezeichen zugelassen werden soll.</span><span class="sxs-lookup"><span data-stu-id="43acf-155">A <see cref="T:System.Boolean" /> value that specifies whether the prompt character should be allowed as a valid input character.</span></span></param>
        <param name="promptChar"><span data-ttu-id="43acf-156">Ein <see cref="T:System.Char" />, der als Platzhalter für Benutzereingaben angezeigt wird.</span><span class="sxs-lookup"><span data-stu-id="43acf-156">A <see cref="T:System.Char" /> that will be displayed as a placeholder for user input.</span></span></param>
        <param name="passwordChar"><span data-ttu-id="43acf-157">Ein <see cref="T:System.Char" />, der für in eine Kennwortzeichenfolge eingegebene Zeichen angezeigt wird.</span><span class="sxs-lookup"><span data-stu-id="43acf-157">A <see cref="T:System.Char" /> that will be displayed for characters entered into a password string.</span></span></param>
        <param name="restrictToAscii"><span data-ttu-id="43acf-158"><see langword="true" />, um die Eingabe auf ASCII-kompatible Zeichen zu beschränken, andernfalls <see langword="false" />, um den gesamten Unicode-Satz zuzulassen.</span><span class="sxs-lookup"><span data-stu-id="43acf-158"><see langword="true" /> to restrict input to ASCII-compatible characters; otherwise <see langword="false" /> to allow the entire Unicode set.</span></span></param>
        <summary><span data-ttu-id="43acf-159">Initialisiert unter Verwendung der angegebenen Maske und Kultur, des angegebenen Aufforderungsverwendungswerts, des Kennwortzeichens und des ASCII-Einschränkungswerts eine neue Instanz der <see cref="T:System.ComponentModel.MaskedTextProvider" />-Klasse.</span><span class="sxs-lookup"><span data-stu-id="43acf-159">Initializes a new instance of the <see cref="T:System.ComponentModel.MaskedTextProvider" /> class using the specified mask, culture, prompt usage value, prompt character, password character, and ASCII restriction value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43acf-160">Dieser Konstruktor stellt das allgemeinste überladene Formular dar.</span><span class="sxs-lookup"><span data-stu-id="43acf-160">This constructor represents the most general overloaded form.</span></span> <span data-ttu-id="43acf-161">Der `mask`-Parameter muss der von der <xref:System.ComponentModel.MaskedTextProvider>-Klasse definierten Maskierungs Sprache entsprechen, die in der <xref:System.Windows.Forms.MaskedTextBox.Mask%2A?displayProperty=nameWithType>-Eigenschaft der <xref:System.Windows.Forms.MaskedTextBox>-Klasse ausführlich erläutert wird.</span><span class="sxs-lookup"><span data-stu-id="43acf-161">The `mask` parameter must conform to the masking language defined by the <xref:System.ComponentModel.MaskedTextProvider> class, which is detailed in the <xref:System.Windows.Forms.MaskedTextBox.Mask%2A?displayProperty=nameWithType> property of the <xref:System.Windows.Forms.MaskedTextBox> class.</span></span>  
  
 <span data-ttu-id="43acf-162">Da neutrale Kulturen nicht auf kulturspezifische Informationen abgefragt werden können, verwendet der <xref:System.ComponentModel.MaskedTextProvider.%23ctor%2A>-Konstruktor die <xref:System.Globalization.CultureInfo.GetCultures%2A>-Methode, um nach der ersten nicht neutralen Kultur zu suchen, die zum Bestimmen der richtigen Trennzeichen verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="43acf-162">Because neutral cultures cannot be queried for culture-specific information, the <xref:System.ComponentModel.MaskedTextProvider.%23ctor%2A> constructor will use the <xref:System.Globalization.CultureInfo.GetCultures%2A> method to search for the first non-neutral culture to use to determine the proper separator characters.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="43acf-163">Der Maskenparameter hat den Wert <see langword="null" /> oder <see cref="F:System.String.Empty" />.</span><span class="sxs-lookup"><span data-stu-id="43acf-163">The mask parameter is <see langword="null" /> or <see cref="F:System.String.Empty" />.</span></span>  
  
<span data-ttu-id="43acf-164">Oder</span><span class="sxs-lookup"><span data-stu-id="43acf-164">-or-</span></span> 
<span data-ttu-id="43acf-165">Die Maske enthält ein oder mehrere nicht druckbare Zeichen.</span><span class="sxs-lookup"><span data-stu-id="43acf-165">The mask contains one or more non-printable characters.</span></span></exception>
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Mask" />
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.Mask" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.Clone" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Culture" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.AllowPromptAsInput" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.PromptChar" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.PasswordChar" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.AsciiOnly" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Add">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="43acf-166">Fügt der formatierten Zeichenfolge ein Eingabezeichen oder eine Eingabezeichenfolge hinzu.</span><span class="sxs-lookup"><span data-stu-id="43acf-166">Adds an input character or input string to the formatted string.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public bool Add (char input);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Add(char input) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.Add(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (input As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Add(char input);" />
      <MemberSignature Language="F#" Value="member this.Add : char -&gt; bool" Usage="maskedTextProvider.Add input" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="43acf-167">Ein <see cref="T:System.Char" />-Wert, der an die formatierte Zeichenfolge angefügt werden soll.</span><span class="sxs-lookup"><span data-stu-id="43acf-167">A <see cref="T:System.Char" /> value to be appended to the formatted string.</span></span></param>
        <summary><span data-ttu-id="43acf-168">Fügt das angegebene Eingabezeichen am Ende der formatierten Zeichenfolge hinzu.</span><span class="sxs-lookup"><span data-stu-id="43acf-168">Adds the specified input character to the end of the formatted string.</span></span></summary>
        <returns><span data-ttu-id="43acf-169"><see langword="true" />, wenn das Eingabezeichen erfolgreich hinzugefügt wurde, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="43acf-169"><see langword="true" /> if the input character was added successfully; otherwise <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43acf-170">Die <xref:System.ComponentModel.MaskedTextProvider.Add%28System.Char%29>-Methode fügt den `input` Zeichen Wert der ersten verfügbaren Position in der formatierten Zeichenfolge nach der zuletzt zugewiesenen Position hinzu, die durch die <xref:System.ComponentModel.MaskedTextProvider.LastAssignedPosition%2A>-Eigenschaft dargestellt wird.</span><span class="sxs-lookup"><span data-stu-id="43acf-170">The <xref:System.ComponentModel.MaskedTextProvider.Add%28System.Char%29> method adds the `input` character value to the first available position in the formatted string after the position that was last assigned, which is represented by the <xref:System.ComponentModel.MaskedTextProvider.LastAssignedPosition%2A> property.</span></span> <span data-ttu-id="43acf-171">Diese Methode kann aus einem der folgenden Gründe nicht ausgeführt werden:</span><span class="sxs-lookup"><span data-stu-id="43acf-171">This method will fail for any of the following reasons:</span></span>  
  
-   <span data-ttu-id="43acf-172">Der Eingabe Wert, der `input`, ist nicht druckbar oder stimmt nicht mit dem entsprechenden Masken Element überein.</span><span class="sxs-lookup"><span data-stu-id="43acf-172">The input value, `input`, is not printable, or it does not match its corresponding mask element.</span></span>  
  
-   <span data-ttu-id="43acf-173">In der formatierten Zeichenfolge sind keine Bearbeitungs Positionen verfügbar, oder nach der letzten zugewiesenen Position sind keine Bearbeitungs Positionen verfügbar.</span><span class="sxs-lookup"><span data-stu-id="43acf-173">There are zero available edit positions in the formatted string, or there are no available edit positions after the last assigned position.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Replace" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Remove" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.InsertAt" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Clear" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Set" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.AvailableEditPositionCount" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.LastAssignedPosition" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsValidInputChar(System.Char)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.VerifyChar(System.Char,System.Int32,System.ComponentModel.MaskedTextResultHint@)" />
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public bool Add (string input);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Add(string input) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.Add(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (input As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Add(System::String ^ input);" />
      <MemberSignature Language="F#" Value="member this.Add : string -&gt; bool" Usage="maskedTextProvider.Add input" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="43acf-174">Ein <see cref="T:System.String" /> mit Zeichenwerten, die an die formatierte Zeichenfolge angefügt werden sollen.</span><span class="sxs-lookup"><span data-stu-id="43acf-174">A <see cref="T:System.String" /> containing character values to be appended to the formatted string.</span></span></param>
        <summary><span data-ttu-id="43acf-175">Fügt die Zeichen aus der angegebenen Eingabezeichenfolge am Ende der formatierten Zeichenfolge hinzu.</span><span class="sxs-lookup"><span data-stu-id="43acf-175">Adds the characters in the specified input string to the end of the formatted string.</span></span></summary>
        <returns><span data-ttu-id="43acf-176"><see langword="true" />, wenn alle Zeichen aus der Eingabezeichenfolge erfolgreich hinzugefügt wurden, andernfalls <see langword="false" />, um anzugeben, dass keine Zeichen hinzugefügt wurden.</span><span class="sxs-lookup"><span data-stu-id="43acf-176"><see langword="true" /> if all the characters from the input string were added successfully; otherwise <see langword="false" /> to indicate that no characters were added.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43acf-177">Die <xref:System.ComponentModel.MaskedTextProvider.Add%28System.String%29>-Methode fügt die Zeichen aus der `input` Zeichenfolge der formatierten Zeichenfolge hinzu, beginnend mit der ersten verfügbaren Position nach <xref:System.ComponentModel.MaskedTextProvider.LastAssignedPosition%2A>.</span><span class="sxs-lookup"><span data-stu-id="43acf-177">The <xref:System.ComponentModel.MaskedTextProvider.Add%28System.String%29> method adds the characters from the `input` string to the formatted string, starting with the first available position after <xref:System.ComponentModel.MaskedTextProvider.LastAssignedPosition%2A>.</span></span> <span data-ttu-id="43acf-178">Diese Methode kann aus einem der folgenden Gründe nicht ausgeführt werden:</span><span class="sxs-lookup"><span data-stu-id="43acf-178">This method will fail for any of the following reasons:</span></span>  
  
-   <span data-ttu-id="43acf-179">Alle Zeichen im Eingabe Wert, `input`, sind nicht druckbar, oder der Eingabe Wert stimmt nicht mit dem entsprechenden Masken Element überein.</span><span class="sxs-lookup"><span data-stu-id="43acf-179">Any of the characters in the input value, `input`, are not printable, or the input value does not match its corresponding mask element.</span></span>  
  
-   <span data-ttu-id="43acf-180">Nach der letzten zugewiesenen Position sind nicht genügend Bearbeitungs Positionen in der formatierten Zeichenfolge vorhanden.</span><span class="sxs-lookup"><span data-stu-id="43acf-180">There are not enough available edit positions in the formatted string after the last assigned position.</span></span>  
  
 <span data-ttu-id="43acf-181">Wenn diese Methode fehlschlägt, werden keine Ergänzungen vorgenommen, und die Methode gibt `false`zurück.</span><span class="sxs-lookup"><span data-stu-id="43acf-181">If this method fails, no additions are made and the method returns `false`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="43acf-182">Der Parameter <paramref name="input" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="43acf-182">The <paramref name="input" /> parameter is <see langword="null" />.</span></span></exception>
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Replace" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Remove" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.InsertAt" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Clear" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Set" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.AvailableEditPositionCount" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.LastAssignedPosition" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsValidInputChar(System.Char)" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.VerifyString" />
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public bool Add (char input, out int testPosition, out System.ComponentModel.MaskedTextResultHint resultHint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Add(char input, [out] int32&amp; testPosition, [out] valuetype System.ComponentModel.MaskedTextResultHint&amp; resultHint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.Add(System.Char,System.Int32@,System.ComponentModel.MaskedTextResultHint@)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (input As Char, ByRef testPosition As Integer, ByRef resultHint As MaskedTextResultHint) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Add(char input, [Runtime::InteropServices::Out] int % testPosition, [Runtime::InteropServices::Out] System::ComponentModel::MaskedTextResultHint % resultHint);" />
      <MemberSignature Language="F#" Value="member this.Add : char * int * MaskedTextResultHint -&gt; bool" Usage="maskedTextProvider.Add (input, testPosition, resultHint)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Char" />
        <Parameter Name="testPosition" Type="System.Int32" RefType="out" />
        <Parameter Name="resultHint" Type="System.ComponentModel.MaskedTextResultHint" RefType="out" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="43acf-183">Ein <see cref="T:System.Char" />-Wert, der an die formatierte Zeichenfolge angefügt werden soll.</span><span class="sxs-lookup"><span data-stu-id="43acf-183">A <see cref="T:System.Char" /> value to be appended to the formatted string.</span></span></param>
        <param name="testPosition"><span data-ttu-id="43acf-184">Die nullbasierte Position in der formatierten Zeichenfolge, an der versucht wurde, das Zeichen hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="43acf-184">The zero-based position in the formatted string where the attempt was made to add the character.</span></span> <span data-ttu-id="43acf-185">Ein Ausgabeparameter.</span><span class="sxs-lookup"><span data-stu-id="43acf-185">An output parameter.</span></span></param>
        <param name="resultHint"><span data-ttu-id="43acf-186">Ein <see cref="T:System.ComponentModel.MaskedTextResultHint" />, mit dem das Ergebnis des Vorgangs kurz beschrieben wird.</span><span class="sxs-lookup"><span data-stu-id="43acf-186">A <see cref="T:System.ComponentModel.MaskedTextResultHint" /> that succinctly describes the result of the operation.</span></span> <span data-ttu-id="43acf-187">Ein Ausgabeparameter.</span><span class="sxs-lookup"><span data-stu-id="43acf-187">An output parameter.</span></span></param>
        <summary><span data-ttu-id="43acf-188">Fügt das angegebene Eingabezeichen am Ende der formatierten Zeichenfolge hinzu und gibt dann Positions- und beschreibende Informationen aus.</span><span class="sxs-lookup"><span data-stu-id="43acf-188">Adds the specified input character to the end of the formatted string, and then outputs position and descriptive information.</span></span></summary>
        <returns><span data-ttu-id="43acf-189"><see langword="true" />, wenn das Eingabezeichen erfolgreich hinzugefügt wurde, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="43acf-189"><see langword="true" /> if the input character was added successfully; otherwise <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43acf-190">Die <xref:System.ComponentModel.MaskedTextProvider.Add%28System.Char%2CSystem.Int32%40%2CSystem.ComponentModel.MaskedTextResultHint%40%29>-Methode versucht, den `input` Zeichen Wert der ersten verfügbaren Position in der formatierten Zeichenfolge nach der zuletzt zugewiesenen Position hinzuzufügen, die durch die <xref:System.ComponentModel.MaskedTextProvider.LastAssignedPosition%2A>-Eigenschaft dargestellt wird.</span><span class="sxs-lookup"><span data-stu-id="43acf-190">The <xref:System.ComponentModel.MaskedTextProvider.Add%28System.Char%2CSystem.Int32%40%2CSystem.ComponentModel.MaskedTextResultHint%40%29> method attempts to add the `input` character value to the first available position in the formatted string after the position that was last assigned, which is represented by the <xref:System.ComponentModel.MaskedTextProvider.LastAssignedPosition%2A> property.</span></span> <span data-ttu-id="43acf-191">Bei dieser Methode tritt ein Fehler auf, wenn alle verfügbaren Positionen vor der letzten zugewiesenen Position liegen.</span><span class="sxs-lookup"><span data-stu-id="43acf-191">This method will fail if all available positions are before the last assigned position.</span></span> <span data-ttu-id="43acf-192">Diese Methode kann aus einem der folgenden Gründe nicht ausgeführt werden:</span><span class="sxs-lookup"><span data-stu-id="43acf-192">This method will fail for any of the following reasons:</span></span>  
  
-   <span data-ttu-id="43acf-193">Der Eingabe Wert, der `input`, ist nicht druckbar oder stimmt nicht mit dem entsprechenden Masken Element überein.</span><span class="sxs-lookup"><span data-stu-id="43acf-193">The input value, `input`, is not printable, or it does not match its corresponding mask element.</span></span>  
  
-   <span data-ttu-id="43acf-194">In der formatierten Zeichenfolge sind keine Bearbeitungs Positionen verfügbar, oder nach der letzten zugewiesenen Position sind keine Bearbeitungs Positionen verfügbar.</span><span class="sxs-lookup"><span data-stu-id="43acf-194">There are zero available edit positions in the formatted string, or there are no available edit positions after the last assigned position.</span></span>  
  
 <span data-ttu-id="43acf-195">Diese Methode funktioniert genauso wie die überschriebene Version, die einen einzelnen <xref:System.Char> Parameter <xref:System.ComponentModel.MaskedTextProvider.Add%28System.Char%29>, mit dem Unterschied, dass Sie zusätzliche Informationen ausgibt.</span><span class="sxs-lookup"><span data-stu-id="43acf-195">This method functions the same as the overridden version taking a single <xref:System.Char> parameter, <xref:System.ComponentModel.MaskedTextProvider.Add%28System.Char%29>, except that it outputs additional information.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Replace" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Remove" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.InsertAt" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Clear" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Set" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.AvailableEditPositionCount" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.LastAssignedPosition" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsValidInputChar(System.Char)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.VerifyChar(System.Char,System.Int32,System.ComponentModel.MaskedTextResultHint@)" />
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public bool Add (string input, out int testPosition, out System.ComponentModel.MaskedTextResultHint resultHint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Add(string input, [out] int32&amp; testPosition, [out] valuetype System.ComponentModel.MaskedTextResultHint&amp; resultHint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.Add(System.String,System.Int32@,System.ComponentModel.MaskedTextResultHint@)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (input As String, ByRef testPosition As Integer, ByRef resultHint As MaskedTextResultHint) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Add(System::String ^ input, [Runtime::InteropServices::Out] int % testPosition, [Runtime::InteropServices::Out] System::ComponentModel::MaskedTextResultHint % resultHint);" />
      <MemberSignature Language="F#" Value="member this.Add : string * int * MaskedTextResultHint -&gt; bool" Usage="maskedTextProvider.Add (input, testPosition, resultHint)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="testPosition" Type="System.Int32" RefType="out" />
        <Parameter Name="resultHint" Type="System.ComponentModel.MaskedTextResultHint" RefType="out" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="43acf-196">Ein <see cref="T:System.String" /> mit Zeichenwerten, die an die formatierte Zeichenfolge angefügt werden sollen.</span><span class="sxs-lookup"><span data-stu-id="43acf-196">A <see cref="T:System.String" /> containing character values to be appended to the formatted string.</span></span></param>
        <param name="testPosition"><span data-ttu-id="43acf-197">Die nullbasierte Position in der formatierten Zeichenfolge, an der versucht wurde, das Zeichen hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="43acf-197">The zero-based position in the formatted string where the attempt was made to add the character.</span></span> <span data-ttu-id="43acf-198">Ein Ausgabeparameter.</span><span class="sxs-lookup"><span data-stu-id="43acf-198">An output parameter.</span></span></param>
        <param name="resultHint"><span data-ttu-id="43acf-199">Ein <see cref="T:System.ComponentModel.MaskedTextResultHint" />, mit dem das Ergebnis des Vorgangs kurz beschrieben wird.</span><span class="sxs-lookup"><span data-stu-id="43acf-199">A <see cref="T:System.ComponentModel.MaskedTextResultHint" /> that succinctly describes the result of the operation.</span></span> <span data-ttu-id="43acf-200">Ein Ausgabeparameter.</span><span class="sxs-lookup"><span data-stu-id="43acf-200">An output parameter.</span></span></param>
        <summary><span data-ttu-id="43acf-201">Fügt die Zeichen aus der angegebenen Eingabezeichenfolge am Ende der formatierten Zeichenfolge hinzu und gibt dann Positions- und beschreibende Informationen aus.</span><span class="sxs-lookup"><span data-stu-id="43acf-201">Adds the characters in the specified input string to the end of the formatted string, and then outputs position and descriptive information.</span></span></summary>
        <returns><span data-ttu-id="43acf-202"><see langword="true" />, wenn alle Zeichen aus der Eingabezeichenfolge erfolgreich hinzugefügt wurden, andernfalls <see langword="false" />, um anzugeben, dass keine Zeichen hinzugefügt wurden.</span><span class="sxs-lookup"><span data-stu-id="43acf-202"><see langword="true" /> if all the characters from the input string were added successfully; otherwise <see langword="false" /> to indicate that no characters were added.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43acf-203">Die <xref:System.ComponentModel.MaskedTextProvider.Add%28System.String%2CSystem.Int32%40%2CSystem.ComponentModel.MaskedTextResultHint%40%29>-Methode fügt die Zeichen aus der `input` Zeichenfolge der formatierten Zeichenfolge hinzu, beginnend mit der ersten verfügbaren Position nach <xref:System.ComponentModel.MaskedTextProvider.LastAssignedPosition%2A>.</span><span class="sxs-lookup"><span data-stu-id="43acf-203">The <xref:System.ComponentModel.MaskedTextProvider.Add%28System.String%2CSystem.Int32%40%2CSystem.ComponentModel.MaskedTextResultHint%40%29> method adds the characters from the `input` string to the formatted string, starting with the first available position after <xref:System.ComponentModel.MaskedTextProvider.LastAssignedPosition%2A>.</span></span> <span data-ttu-id="43acf-204">Diese Methode kann aus einem der folgenden Gründe nicht ausgeführt werden:</span><span class="sxs-lookup"><span data-stu-id="43acf-204">This method will fail for any of the following reasons:</span></span>  
  
-   <span data-ttu-id="43acf-205">Alle Zeichen im Eingabe Wert, `input`, sind nicht druckbar, oder der Eingabe Wert stimmt nicht mit dem entsprechenden Masken Element überein.</span><span class="sxs-lookup"><span data-stu-id="43acf-205">Any of the characters in the input value, `input`, are not printable, or the input value does not match its corresponding mask element.</span></span>  
  
-   <span data-ttu-id="43acf-206">Nach der letzten zugewiesenen Position sind nicht genügend Bearbeitungs Positionen in der formatierten Zeichenfolge vorhanden.</span><span class="sxs-lookup"><span data-stu-id="43acf-206">There are not enough available edit positions in the formatted string after the last assigned position.</span></span>  
  
 <span data-ttu-id="43acf-207">Wenn diese Methode fehlschlägt, werden keine Ergänzungen vorgenommen, und die Methode gibt `false`zurück.</span><span class="sxs-lookup"><span data-stu-id="43acf-207">If this method fails, no additions are made and the method returns `false`.</span></span>  
  
 <span data-ttu-id="43acf-208">Diese Methode funktioniert genauso wie die überschriebene Version, die einen einzelnen <xref:System.String> Parameter <xref:System.ComponentModel.MaskedTextProvider.Add%28System.String%29>, mit dem Unterschied, dass Sie zusätzliche Informationen ausgibt.</span><span class="sxs-lookup"><span data-stu-id="43acf-208">This method functions the same as the overridden version taking a single <xref:System.String> parameter, <xref:System.ComponentModel.MaskedTextProvider.Add%28System.String%29>, except that it outputs additional information.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Replace" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Remove" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.InsertAt" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Clear" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Set" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.AvailableEditPositionCount" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.LastAssignedPosition" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsValidInputChar(System.Char)" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.VerifyString" />
      </Docs>
    </Member>
    <Member MemberName="AllowPromptAsInput">
      <MemberSignature Language="C#" Value="public bool AllowPromptAsInput { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowPromptAsInput" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.MaskedTextProvider.AllowPromptAsInput" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AllowPromptAsInput As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowPromptAsInput { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.AllowPromptAsInput : bool" Usage="System.ComponentModel.MaskedTextProvider.AllowPromptAsInput" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="43acf-209">Ruft einen Wert ab, der angibt, ob das Aufforderungszeichen als gültiges Eingabezeichen behandelt werden soll.</span><span class="sxs-lookup"><span data-stu-id="43acf-209">Gets a value indicating whether the prompt character should be treated as a valid input character or not.</span></span></summary>
        <value><span data-ttu-id="43acf-210"><see langword="true" />, wenn der Benutzer <see cref="P:System.ComponentModel.MaskedTextProvider.PromptChar" /> im Steuerelement eingeben darf, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="43acf-210"><see langword="true" /> if the user can enter <see cref="P:System.ComponentModel.MaskedTextProvider.PromptChar" /> into the control; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="43acf-211">Der Standardwert lautet <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="43acf-211">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43acf-212">Der Wert der <xref:System.ComponentModel.MaskedTextProvider.AllowPromptAsInput%2A>-Eigenschaft wird im <xref:System.ComponentModel.MaskedTextProvider.%23ctor%2A>-Konstruktor festgelegt.</span><span class="sxs-lookup"><span data-stu-id="43acf-212">The <xref:System.ComponentModel.MaskedTextProvider.AllowPromptAsInput%2A> property's value is set in the <xref:System.ComponentModel.MaskedTextProvider.%23ctor%2A> constructor.</span></span>  
  
 <span data-ttu-id="43acf-213">Auch wenn <xref:System.ComponentModel.MaskedTextProvider.AllowPromptAsInput%2A> `true`ist, muss das Eingabe Aufforderungs Zeichen für die aktuelle Position in der Maske gültig sein, damit Sie akzeptiert wird.</span><span class="sxs-lookup"><span data-stu-id="43acf-213">Even when <xref:System.ComponentModel.MaskedTextProvider.AllowPromptAsInput%2A> is `true`, the prompt character must be valid for the current location in the mask in order to be accepted.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.AllowPromptAsInput" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.PromptChar" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Mask" />
      </Docs>
    </Member>
    <Member MemberName="AsciiOnly">
      <MemberSignature Language="C#" Value="public bool AsciiOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AsciiOnly" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.MaskedTextProvider.AsciiOnly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AsciiOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AsciiOnly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.AsciiOnly : bool" Usage="System.ComponentModel.MaskedTextProvider.AsciiOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="43acf-214">Ruft einen Wert ab, der angibt, ob die Maske Zeichen akzeptiert, die nicht dem ASCII-Zeichensatz angehören.</span><span class="sxs-lookup"><span data-stu-id="43acf-214">Gets a value indicating whether the mask accepts characters outside of the ASCII character set.</span></span></summary>
        <value><span data-ttu-id="43acf-215"><see langword="true" />, wenn nur ASCII akzeptiert wird, und <see langword="false" />, wenn <see cref="T:System.ComponentModel.MaskedTextProvider" /> jedes beliebige Unicode-Zeichen akzeptieren darf.</span><span class="sxs-lookup"><span data-stu-id="43acf-215"><see langword="true" /> if only ASCII is accepted; <see langword="false" /> if <see cref="T:System.ComponentModel.MaskedTextProvider" /> can accept any arbitrary Unicode character.</span></span> <span data-ttu-id="43acf-216">Der Standardwert lautet <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="43acf-216">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43acf-217">Der Wert der <xref:System.ComponentModel.MaskedTextProvider.AsciiOnly%2A>-Eigenschaft wird im <xref:System.ComponentModel.MaskedTextProvider.%23ctor%2A>-Konstruktor festgelegt.</span><span class="sxs-lookup"><span data-stu-id="43acf-217">The <xref:System.ComponentModel.MaskedTextProvider.AsciiOnly%2A> property's value is set in the <xref:System.ComponentModel.MaskedTextProvider.%23ctor%2A> constructor.</span></span>  
  
 <span data-ttu-id="43acf-218">Wenn `true`, schränkt <xref:System.ComponentModel.MaskedTextProvider.AsciiOnly%2A> Benutzereingaben auf den ASCII-Zeichensatz ein.</span><span class="sxs-lookup"><span data-stu-id="43acf-218">If `true`, <xref:System.ComponentModel.MaskedTextProvider.AsciiOnly%2A> restricts user input to the ASCII character set.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.AsciiOnly" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Mask" />
      </Docs>
    </Member>
    <Member MemberName="AssignedEditPositionCount">
      <MemberSignature Language="C#" Value="public int AssignedEditPositionCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 AssignedEditPositionCount" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.MaskedTextProvider.AssignedEditPositionCount" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AssignedEditPositionCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int AssignedEditPositionCount { int get(); };" />
      <MemberSignature Language="F#" Value="member this.AssignedEditPositionCount : int" Usage="System.ComponentModel.MaskedTextProvider.AssignedEditPositionCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="43acf-219">Ruft die Anzahl von bearbeitbaren Zeichenpositionen ab, denen bereits erfolgreich ein Eingabewert zugewiesen wurde.</span><span class="sxs-lookup"><span data-stu-id="43acf-219">Gets the number of editable character positions that have already been successfully assigned an input value.</span></span></summary>
        <value><span data-ttu-id="43acf-220">Ein <see cref="T:System.Int32" /> mit der Anzahl der in der Eingabemaske enthaltenen bearbeitbaren Zeichenpositionen, denen bereits ein Zeichenwert in der formatierten Zeichenfolge zugewiesen wurde.</span><span class="sxs-lookup"><span data-stu-id="43acf-220">An <see cref="T:System.Int32" /> containing the number of editable character positions in the input mask that have already been assigned a character value in the formatted string.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43acf-221">Die Gesamtanzahl der bearbeitbaren Zeichen Positionen, die durch die <xref:System.ComponentModel.MaskedTextProvider.EditPositionCount%2A>-Eigenschaft dargestellt werden, sollte der Summe der <xref:System.ComponentModel.MaskedTextProvider.AssignedEditPositionCount%2A> und der <xref:System.ComponentModel.MaskedTextProvider.AvailableEditPositionCount%2A> Eigenschaften entsprechen.</span><span class="sxs-lookup"><span data-stu-id="43acf-221">The total number of editable character positions, represented by the <xref:System.ComponentModel.MaskedTextProvider.EditPositionCount%2A> property, should equal the sum of the <xref:System.ComponentModel.MaskedTextProvider.AssignedEditPositionCount%2A> and the <xref:System.ComponentModel.MaskedTextProvider.AvailableEditPositionCount%2A> properties.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.EditPositions" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.AvailableEditPositionCount" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.EditPositionCount" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsEditPosition(System.Int32)" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.LastAssignedPosition" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionFrom(System.Int32,System.Boolean)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionInRange(System.Int32,System.Int32,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="AvailableEditPositionCount">
      <MemberSignature Language="C#" Value="public int AvailableEditPositionCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 AvailableEditPositionCount" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.MaskedTextProvider.AvailableEditPositionCount" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AvailableEditPositionCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int AvailableEditPositionCount { int get(); };" />
      <MemberSignature Language="F#" Value="member this.AvailableEditPositionCount : int" Usage="System.ComponentModel.MaskedTextProvider.AvailableEditPositionCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="43acf-222">Ruft die Anzahl der bearbeitbaren Zeichenpositionen in der Eingabemaske ab, denen bisher noch kein Eingabewert zugewiesen wurde.</span><span class="sxs-lookup"><span data-stu-id="43acf-222">Gets the number of editable character positions in the input mask that have not yet been assigned an input value.</span></span></summary>
        <value><span data-ttu-id="43acf-223">Ein <see cref="T:System.Int32" /> mit der Anzahl der bearbeitbaren Zeichenpositionen, denen bisher noch kein Zeichenwert zugewiesen wurde.</span><span class="sxs-lookup"><span data-stu-id="43acf-223">An <see cref="T:System.Int32" /> containing the number of editable character positions that not yet been assigned a character value.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43acf-224">Die Gesamtanzahl der bearbeitbaren Zeichen Positionen, die durch die <xref:System.ComponentModel.MaskedTextProvider.EditPositionCount%2A>-Eigenschaft dargestellt werden, sollte der Summe der <xref:System.ComponentModel.MaskedTextProvider.AssignedEditPositionCount%2A> und der <xref:System.ComponentModel.MaskedTextProvider.AvailableEditPositionCount%2A> Eigenschaften entsprechen.</span><span class="sxs-lookup"><span data-stu-id="43acf-224">The total number of editable character positions, represented by the <xref:System.ComponentModel.MaskedTextProvider.EditPositionCount%2A> property, should equal the sum of the <xref:System.ComponentModel.MaskedTextProvider.AssignedEditPositionCount%2A> and the <xref:System.ComponentModel.MaskedTextProvider.AvailableEditPositionCount%2A> properties.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.EditPositions" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.AssignedEditPositionCount" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.EditPositionCount" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsAvailablePosition(System.Int32)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindEditPositionFrom(System.Int32,System.Boolean)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Clear">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="43acf-225">Löscht alle Eingabezeichen aus der formatierten Zeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="43acf-225">Clears all the input characters from the formatted string.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Clear();" />
      <MemberSignature Language="F#" Value="member this.Clear : unit -&gt; unit" Usage="maskedTextProvider.Clear " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="43acf-226">Löscht alle bearbeitbaren Eingabezeichen aus der formatierten Zeichenfolge und ersetzt sie durch Aufforderungszeichen.</span><span class="sxs-lookup"><span data-stu-id="43acf-226">Clears all the editable input characters from the formatted string, replacing them with prompt characters.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43acf-227">Die <xref:System.ComponentModel.MaskedTextProvider.Clear>-Methode initialisiert die formatierte Zeichenfolge erneut, wobei das Eingabe Aufforderungs Zeichen in alle bearbeitbaren Positionen eingefügt wird.</span><span class="sxs-lookup"><span data-stu-id="43acf-227">The <xref:System.ComponentModel.MaskedTextProvider.Clear> method reinitializes the formatted string, inserting the prompt character into all editable positions.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.PromptChar" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Add" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Set" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.InsertAt" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Remove" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.RemoveAt" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Replace" />
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear (out System.ComponentModel.MaskedTextResultHint resultHint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Clear([out] valuetype System.ComponentModel.MaskedTextResultHint&amp; resultHint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.Clear(System.ComponentModel.MaskedTextResultHint@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear (ByRef resultHint As MaskedTextResultHint)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Clear([Runtime::InteropServices::Out] System::ComponentModel::MaskedTextResultHint % resultHint);" />
      <MemberSignature Language="F#" Value="member this.Clear : MaskedTextResultHint -&gt; unit" Usage="maskedTextProvider.Clear resultHint" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resultHint" Type="System.ComponentModel.MaskedTextResultHint" RefType="out" />
      </Parameters>
      <Docs>
        <param name="resultHint"><span data-ttu-id="43acf-228">Ein <see cref="T:System.ComponentModel.MaskedTextResultHint" />, mit dem das Ergebnis des Vorgangs kurz beschrieben wird.</span><span class="sxs-lookup"><span data-stu-id="43acf-228">A <see cref="T:System.ComponentModel.MaskedTextResultHint" /> that succinctly describes the result of the operation.</span></span> <span data-ttu-id="43acf-229">Ein Ausgabeparameter.</span><span class="sxs-lookup"><span data-stu-id="43acf-229">An output parameter.</span></span></param>
        <summary><span data-ttu-id="43acf-230">Löscht alle bearbeitbaren Eingabezeichen aus der formatierten Zeichenfolge, ersetzt sie durch Aufforderungszeichen und gibt dann beschreibende Informationen aus.</span><span class="sxs-lookup"><span data-stu-id="43acf-230">Clears all the editable input characters from the formatted string, replacing them with prompt characters, and then outputs descriptive information.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43acf-231">Die <xref:System.ComponentModel.MaskedTextProvider.Clear%28System.ComponentModel.MaskedTextResultHint%40%29>-Methode initialisiert die formatierte Zeichenfolge erneut, wobei das Eingabe Aufforderungs Zeichen in alle bearbeitbaren Positionen eingefügt wird.</span><span class="sxs-lookup"><span data-stu-id="43acf-231">The <xref:System.ComponentModel.MaskedTextProvider.Clear%28System.ComponentModel.MaskedTextResultHint%40%29> method reinitializes the formatted string, inserting the prompt character into all editable positions.</span></span> <span data-ttu-id="43acf-232">Sie funktioniert gleichwertig mit der überschriebenen Version, die keine Parameter annimmt, <xref:System.ComponentModel.MaskedTextProvider.Clear>, außer dass Sie zusätzliche Informationen ausgibt.</span><span class="sxs-lookup"><span data-stu-id="43acf-232">It functions equivalently to the overridden version that takes no parameters, <xref:System.ComponentModel.MaskedTextProvider.Clear>, except it outputs additional information.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Add" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.InsertAt" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Set" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Remove" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.RemoveAt" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Replace" />
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public object Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ Clone();" />
      <MemberSignature Language="F#" Value="abstract member Clone : unit -&gt; obj&#xA;override this.Clone : unit -&gt; obj" Usage="maskedTextProvider.Clone " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="43acf-233">Erstellt eine Kopie der aktuellen <see cref="T:System.ComponentModel.MaskedTextProvider" />.</span><span class="sxs-lookup"><span data-stu-id="43acf-233">Creates a copy of the current <see cref="T:System.ComponentModel.MaskedTextProvider" />.</span></span></summary>
        <returns><span data-ttu-id="43acf-234">Das von dieser Methode erstellte <see cref="T:System.ComponentModel.MaskedTextProvider" />-Objekt, umgewandelt in ein Objekt.</span><span class="sxs-lookup"><span data-stu-id="43acf-234">The <see cref="T:System.ComponentModel.MaskedTextProvider" /> object this method creates, cast as an object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43acf-235">Die <xref:System.ComponentModel.MaskedTextProvider.Clone%2A>-Methode gibt eine neue Kopie der aktuellen <xref:System.ComponentModel.MaskedTextProvider>zurück.</span><span class="sxs-lookup"><span data-stu-id="43acf-235">The <xref:System.ComponentModel.MaskedTextProvider.Clone%2A> method returns a new copy of the current <xref:System.ComponentModel.MaskedTextProvider>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.#ctor" />
        <altmember cref="T:System.ICloneable" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Clear" />
      </Docs>
    </Member>
    <Member MemberName="Culture">
      <MemberSignature Language="C#" Value="public System.Globalization.CultureInfo Culture { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Globalization.CultureInfo Culture" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.MaskedTextProvider.Culture" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Culture As CultureInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Globalization::CultureInfo ^ Culture { System::Globalization::CultureInfo ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Culture : System.Globalization.CultureInfo" Usage="System.ComponentModel.MaskedTextProvider.Culture" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Globalization.CultureInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="43acf-236">Ruft die Kultur ab, die den Wert der lokalisierbaren Trennzeichen und Platzhalter in der Eingabemaske bestimmt.</span><span class="sxs-lookup"><span data-stu-id="43acf-236">Gets the culture that determines the value of the localizable separators and placeholders in the input mask.</span></span></summary>
        <value><span data-ttu-id="43acf-237">Ein <see cref="T:System.Globalization.CultureInfo" /> mit den der Eingabemaske zugeordneten Kulturinformationen.</span><span class="sxs-lookup"><span data-stu-id="43acf-237">A <see cref="T:System.Globalization.CultureInfo" /> containing the culture information associated with the input mask.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43acf-238">Die <xref:System.ComponentModel.MaskedTextProvider.Culture%2A>-Eigenschaft wird im <xref:System.ComponentModel.MaskedTextProvider.%23ctor%2A>-Konstruktor festgelegt.</span><span class="sxs-lookup"><span data-stu-id="43acf-238">The <xref:System.ComponentModel.MaskedTextProvider.Culture%2A> property is set in the <xref:System.ComponentModel.MaskedTextProvider.%23ctor%2A> constructor.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.Culture" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Mask" />
      </Docs>
    </Member>
    <Member MemberName="DefaultPasswordChar">
      <MemberSignature Language="C#" Value="public static char DefaultPasswordChar { get; }" />
      <MemberSignature Language="ILAsm" Value=".property char DefaultPasswordChar" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.MaskedTextProvider.DefaultPasswordChar" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property DefaultPasswordChar As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property char DefaultPasswordChar { char get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultPasswordChar : char" Usage="System.ComponentModel.MaskedTextProvider.DefaultPasswordChar" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="43acf-239">Ruft das zur Verdeckung von Benutzereingaben verwendete Standardkennwortzeichen ab.</span><span class="sxs-lookup"><span data-stu-id="43acf-239">Gets the default password character used obscure user input.</span></span></summary>
        <value><span data-ttu-id="43acf-240">Ein <see cref="T:System.Char" />, der das Standardkennwortzeichen darstellt.</span><span class="sxs-lookup"><span data-stu-id="43acf-240">A <see cref="T:System.Char" /> that represents the default password character.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43acf-241">Die <xref:System.ComponentModel.MaskedTextProvider.DefaultPasswordChar%2A>-Eigenschaft wird in der <xref:System.ComponentModel.MaskedTextProvider>-Klasse als Sternchen (\*) definiert.</span><span class="sxs-lookup"><span data-stu-id="43acf-241">The <xref:System.ComponentModel.MaskedTextProvider.DefaultPasswordChar%2A> property is defined in the <xref:System.ComponentModel.MaskedTextProvider> class to be the asterisk character (\*).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.PasswordChar" />
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.UseSystemPasswordChar" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.IsPassword" />
      </Docs>
    </Member>
    <Member MemberName="EditPositionCount">
      <MemberSignature Language="C#" Value="public int EditPositionCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 EditPositionCount" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.MaskedTextProvider.EditPositionCount" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EditPositionCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int EditPositionCount { int get(); };" />
      <MemberSignature Language="F#" Value="member this.EditPositionCount : int" Usage="System.ComponentModel.MaskedTextProvider.EditPositionCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="43acf-242">Ruft die Anzahl der bearbeitbaren Positionen in der formatierten Zeichenfolge ab.</span><span class="sxs-lookup"><span data-stu-id="43acf-242">Gets the number of editable positions in the formatted string.</span></span></summary>
        <value><span data-ttu-id="43acf-243">Ein <see cref="T:System.Int32" /> mit der Anzahl der bearbeitbaren Positionen in der formatierten Zeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="43acf-243">An <see cref="T:System.Int32" /> containing the number of editable positions in the formatted string.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43acf-244">Die Gesamtanzahl der bearbeitbaren Zeichen Positionen, die durch die <xref:System.ComponentModel.MaskedTextProvider.EditPositionCount%2A>-Eigenschaft dargestellt werden, muss der Summe der <xref:System.ComponentModel.MaskedTextProvider.AssignedEditPositionCount%2A> und der <xref:System.ComponentModel.MaskedTextProvider.AvailableEditPositionCount%2A> Eigenschaften entsprechen.</span><span class="sxs-lookup"><span data-stu-id="43acf-244">The total number of editable character positions, represented by the <xref:System.ComponentModel.MaskedTextProvider.EditPositionCount%2A> property, must equal the sum of the <xref:System.ComponentModel.MaskedTextProvider.AssignedEditPositionCount%2A> and the <xref:System.ComponentModel.MaskedTextProvider.AvailableEditPositionCount%2A> properties.</span></span> <span data-ttu-id="43acf-245">Dieser Wert enthält sowohl das erforderliche als auch das optionale bearbeitbare Zeichen.</span><span class="sxs-lookup"><span data-stu-id="43acf-245">This value includes both the required and the optional editable characters.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Mask" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Length" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Item(System.Int32)" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.EditPositions" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.AssignedEditPositionCount" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.AvailableEditPositionCount" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsEditPosition(System.Int32)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindEditPositionFrom(System.Int32,System.Boolean)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindEditPositionInRange(System.Int32,System.Int32,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="EditPositions">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator EditPositions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IEnumerator EditPositions" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.MaskedTextProvider.EditPositions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EditPositions As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::IEnumerator ^ EditPositions { System::Collections::IEnumerator ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.EditPositions : System.Collections.IEnumerator" Usage="System.ComponentModel.MaskedTextProvider.EditPositions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="43acf-246">Ruft einen neu erstellten Enumerator für die bearbeitbaren Positionen in der formatierten Zeichenfolge ab.</span><span class="sxs-lookup"><span data-stu-id="43acf-246">Gets a newly created enumerator for the editable positions in the formatted string.</span></span></summary>
        <value><span data-ttu-id="43acf-247">Ein <see cref="T:System.Collections.IEnumerator" />, der Enumeration über die bearbeitbaren Positionen in der formatierten Zeichenfolge unterstützt.</span><span class="sxs-lookup"><span data-stu-id="43acf-247">An <see cref="T:System.Collections.IEnumerator" /> that supports enumeration over the editable positions in the formatted string.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43acf-248">Bei jedem Zugriff auf die <xref:System.ComponentModel.MaskedTextProvider.EditPositions%2A>-Eigenschaft wird eine temporäre Auflistung von bearbeitbaren Positionen erstellt, auf der die abgerufene <xref:System.Collections.IEnumerator> funktioniert.</span><span class="sxs-lookup"><span data-stu-id="43acf-248">On every access of the <xref:System.ComponentModel.MaskedTextProvider.EditPositions%2A> property, a temporary collection of editable positions is created that the retrieved <xref:System.Collections.IEnumerator> operates on.</span></span>  
  
 <span data-ttu-id="43acf-249">Die Auflistung ist schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="43acf-249">This collection is read-only.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Mask" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Item(System.Int32)" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.EditPositionCount" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsEditPosition(System.Int32)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindEditPositionFrom(System.Int32,System.Boolean)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindEditPositionInRange(System.Int32,System.Int32,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="FindAssignedEditPositionFrom">
      <MemberSignature Language="C#" Value="public int FindAssignedEditPositionFrom (int position, bool direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 FindAssignedEditPositionFrom(int32 position, bool direction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionFrom(System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindAssignedEditPositionFrom (position As Integer, direction As Boolean) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int FindAssignedEditPositionFrom(int position, bool direction);" />
      <MemberSignature Language="F#" Value="member this.FindAssignedEditPositionFrom : int * bool -&gt; int" Usage="maskedTextProvider.FindAssignedEditPositionFrom (position, direction)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="position" Type="System.Int32" />
        <Parameter Name="direction" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="position"><span data-ttu-id="43acf-250">Die nullbasierte Position in der formatierten Zeichenfolge, an der die Suche gestartet werden soll.</span><span class="sxs-lookup"><span data-stu-id="43acf-250">The zero-based position in the formatted string to start the search.</span></span></param>
        <param name="direction"><span data-ttu-id="43acf-251">Ein <see cref="T:System.Boolean" />, der die Suchrichtung angibt: <see langword="true" />, um vorwärts zu suchen, oder <see langword="false" />, um rückwärts zu suchen.</span><span class="sxs-lookup"><span data-stu-id="43acf-251">A <see cref="T:System.Boolean" /> indicating the search direction; either <see langword="true" /> to search forward or <see langword="false" /> to search backward.</span></span></param>
        <summary><span data-ttu-id="43acf-252">Gibt die Position der ersten zugewiesenen bearbeitbaren Position nach der angegebenen Position in der angegebenen Suchrichtung zurück.</span><span class="sxs-lookup"><span data-stu-id="43acf-252">Returns the position of the first assigned editable position after the specified position using the specified search direction.</span></span></summary>
        <returns><span data-ttu-id="43acf-253">Bei erfolgreicher Suche ein <see cref="T:System.Int32" />, der die nullbasierte Position der ersten zugewiesenen bearbeitbaren Position darstellt, die gefunden wurde, andernfalls <see cref="P:System.ComponentModel.MaskedTextProvider.InvalidIndex" />.</span><span class="sxs-lookup"><span data-stu-id="43acf-253">If successful, an <see cref="T:System.Int32" /> representing the zero-based position of the first assigned editable position encountered; otherwise <see cref="P:System.ComponentModel.MaskedTextProvider.InvalidIndex" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43acf-254">Die formatierte Zeichenfolge besteht aus bearbeitbaren Zeichen und Literalen, die aus der Maske kopiert werden.</span><span class="sxs-lookup"><span data-stu-id="43acf-254">The formatted string is composed of editable characters and literals copied from the mask.</span></span> <span data-ttu-id="43acf-255">Die bearbeitbaren Zeichen Positionen werden entweder von dem Eingabe Aufforderungs Zeichen, das aus der Maske kopiert wird, wenn Sie nicht zugewiesen sind, oder mit einem gültigen Eingabezeichen belegt, wenn Ihnen eine Eingabe zugewiesen wurde.</span><span class="sxs-lookup"><span data-stu-id="43acf-255">The editable character positions will either be occupied by the prompt character copied from the mask if they are unassigned, or with a valid input character if they have been assigned an input.</span></span>  
  
 <span data-ttu-id="43acf-256">Die <xref:System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionFrom%2A>-Methode wird verwendet, um nach der angegebenen Position und Suchrichtung nach dem ersten zugewiesenen Zeichen zu suchen.</span><span class="sxs-lookup"><span data-stu-id="43acf-256">The <xref:System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionFrom%2A> method is used to search for the first assigned character after a specified position and search direction.</span></span> <span data-ttu-id="43acf-257">Das Ergebnis kann dann als Parameter an den <xref:System.ComponentModel.MaskedTextProvider.Item%2A> Indexer übergeben werden, um den zugewiesenen Wert an dieser Position abzurufen.</span><span class="sxs-lookup"><span data-stu-id="43acf-257">The result can subsequently be passed as a parameter to the <xref:System.ComponentModel.MaskedTextProvider.Item%2A> indexer to obtain the assigned value at this position.</span></span>  
  
 <span data-ttu-id="43acf-258">Die Methoden <xref:System.ComponentModel.MaskedTextProvider.FindNonEditPositionFrom%2A> und <xref:System.ComponentModel.MaskedTextProvider.FindUnassignedEditPositionFrom%2A> sind Ergänzungen dieser Methode.</span><span class="sxs-lookup"><span data-stu-id="43acf-258">The <xref:System.ComponentModel.MaskedTextProvider.FindNonEditPositionFrom%2A> and <xref:System.ComponentModel.MaskedTextProvider.FindUnassignedEditPositionFrom%2A> methods are complements of this method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.EditPositions" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.EditPositionCount" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsEditPosition(System.Int32)" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Item(System.Int32)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionInRange(System.Int32,System.Int32,System.Boolean)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindEditPositionFrom(System.Int32,System.Boolean)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindNonEditPositionFrom(System.Int32,System.Boolean)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindUnassignedEditPositionFrom(System.Int32,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="FindAssignedEditPositionInRange">
      <MemberSignature Language="C#" Value="public int FindAssignedEditPositionInRange (int startPosition, int endPosition, bool direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 FindAssignedEditPositionInRange(int32 startPosition, int32 endPosition, bool direction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionInRange(System.Int32,System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindAssignedEditPositionInRange (startPosition As Integer, endPosition As Integer, direction As Boolean) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int FindAssignedEditPositionInRange(int startPosition, int endPosition, bool direction);" />
      <MemberSignature Language="F#" Value="member this.FindAssignedEditPositionInRange : int * int * bool -&gt; int" Usage="maskedTextProvider.FindAssignedEditPositionInRange (startPosition, endPosition, direction)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startPosition" Type="System.Int32" />
        <Parameter Name="endPosition" Type="System.Int32" />
        <Parameter Name="direction" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="startPosition"><span data-ttu-id="43acf-259">Die nullbasierte Position in der formatierten Zeichenfolge, an der die Suche beginnt.</span><span class="sxs-lookup"><span data-stu-id="43acf-259">The zero-based position in the formatted string where the search starts.</span></span></param>
        <param name="endPosition"><span data-ttu-id="43acf-260">Die nullbasierte Position in der formatierten Zeichenfolge, an der die Suche endet.</span><span class="sxs-lookup"><span data-stu-id="43acf-260">The zero-based position in the formatted string where the search ends.</span></span></param>
        <param name="direction"><span data-ttu-id="43acf-261">Ein <see cref="T:System.Boolean" />, der die Suchrichtung angibt: <see langword="true" />, um vorwärts zu suchen, oder <see langword="false" />, um rückwärts zu suchen.</span><span class="sxs-lookup"><span data-stu-id="43acf-261">A <see cref="T:System.Boolean" /> indicating the search direction; either <see langword="true" /> to search forward or <see langword="false" /> to search backward.</span></span></param>
        <summary><span data-ttu-id="43acf-262">Gibt die Position der ersten zugewiesenen bearbeitbaren Position zwischen den angegebenen Positionen in der angegebenen Suchrichtung zurück.</span><span class="sxs-lookup"><span data-stu-id="43acf-262">Returns the position of the first assigned editable position between the specified positions using the specified search direction.</span></span></summary>
        <returns><span data-ttu-id="43acf-263">Bei erfolgreicher Suche ein <see cref="T:System.Int32" />, der die nullbasierte Position der ersten zugewiesenen bearbeitbaren Position darstellt, die gefunden wurde, andernfalls <see cref="P:System.ComponentModel.MaskedTextProvider.InvalidIndex" />.</span><span class="sxs-lookup"><span data-stu-id="43acf-263">If successful, an <see cref="T:System.Int32" /> representing the zero-based position of the first assigned editable position encountered; otherwise <see cref="P:System.ComponentModel.MaskedTextProvider.InvalidIndex" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43acf-264">Die formatierte Zeichenfolge besteht aus bearbeitbaren Zeichen und Literalen, die aus der Maske kopiert werden.</span><span class="sxs-lookup"><span data-stu-id="43acf-264">The formatted string is composed of editable characters and literals copied from the mask.</span></span> <span data-ttu-id="43acf-265">Die bearbeitbaren Zeichen Positionen werden entweder von dem Eingabe Aufforderungs Zeichen, das aus der Maske kopiert wird, wenn Sie nicht zugewiesen sind, oder mit einem gültigen Eingabezeichen belegt, wenn Ihnen eine Eingabe zugewiesen wurde.</span><span class="sxs-lookup"><span data-stu-id="43acf-265">The editable character positions will either be occupied by the prompt character copied from the mask if they are unassigned, or with a valid input character if they have been assigned an input.</span></span>  
  
 <span data-ttu-id="43acf-266">Die <xref:System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionInRange%2A>-Methode wird verwendet, um mithilfe der angegebenen Suchrichtung nach dem ersten zugewiesenen Zeichen zwischen zwei angegebenen Positionen (einschließlich) zu suchen.</span><span class="sxs-lookup"><span data-stu-id="43acf-266">The <xref:System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionInRange%2A> method is used to search for the first assigned character between two specified positions, inclusive, using the specified search direction.</span></span> <span data-ttu-id="43acf-267">Das Ergebnis kann dann als Parameter an den <xref:System.ComponentModel.MaskedTextProvider.Item%2A> Indexer übergeben werden, um den zugewiesenen Wert an dieser Position abzurufen.</span><span class="sxs-lookup"><span data-stu-id="43acf-267">The result can subsequently be passed as a parameter to the <xref:System.ComponentModel.MaskedTextProvider.Item%2A> indexer to obtain the assigned value at this position.</span></span>  
  
 <span data-ttu-id="43acf-268">Die Methoden <xref:System.ComponentModel.MaskedTextProvider.FindNonEditPositionInRange%2A> und <xref:System.ComponentModel.MaskedTextProvider.FindUnassignedEditPositionInRange%2A> sind Ergänzungen dieser Methode.</span><span class="sxs-lookup"><span data-stu-id="43acf-268">The <xref:System.ComponentModel.MaskedTextProvider.FindNonEditPositionInRange%2A> and <xref:System.ComponentModel.MaskedTextProvider.FindUnassignedEditPositionInRange%2A> methods are complements of this method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.EditPositions" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.EditPositionCount" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsEditPosition(System.Int32)" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Item(System.Int32)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionFrom(System.Int32,System.Boolean)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindEditPositionInRange(System.Int32,System.Int32,System.Boolean)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindUnassignedEditPositionInRange(System.Int32,System.Int32,System.Boolean)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindNonEditPositionInRange(System.Int32,System.Int32,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="FindEditPositionFrom">
      <MemberSignature Language="C#" Value="public int FindEditPositionFrom (int position, bool direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 FindEditPositionFrom(int32 position, bool direction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.FindEditPositionFrom(System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindEditPositionFrom (position As Integer, direction As Boolean) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int FindEditPositionFrom(int position, bool direction);" />
      <MemberSignature Language="F#" Value="member this.FindEditPositionFrom : int * bool -&gt; int" Usage="maskedTextProvider.FindEditPositionFrom (position, direction)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="position" Type="System.Int32" />
        <Parameter Name="direction" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="position"><span data-ttu-id="43acf-269">Die nullbasierte Position in der formatierten Zeichenfolge, an der die Suche gestartet werden soll.</span><span class="sxs-lookup"><span data-stu-id="43acf-269">The zero-based position in the formatted string to start the search.</span></span></param>
        <param name="direction"><span data-ttu-id="43acf-270">Ein <see cref="T:System.Boolean" />, der die Suchrichtung angibt: <see langword="true" />, um vorwärts zu suchen, oder <see langword="false" />, um rückwärts zu suchen.</span><span class="sxs-lookup"><span data-stu-id="43acf-270">A <see cref="T:System.Boolean" /> indicating the search direction; either <see langword="true" /> to search forward or <see langword="false" /> to search backward.</span></span></param>
        <summary><span data-ttu-id="43acf-271">Gibt die Position der ersten bearbeitbaren Position nach der angegebenen Position in der angegebenen Suchrichtung zurück.</span><span class="sxs-lookup"><span data-stu-id="43acf-271">Returns the position of the first editable position after the specified position using the specified search direction.</span></span></summary>
        <returns><span data-ttu-id="43acf-272">Bei erfolgreicher Suche ein <see cref="T:System.Int32" />, der die nullbasierte Position der ersten bearbeitbaren Position darstellt, die gefunden wurde, andernfalls <see cref="P:System.ComponentModel.MaskedTextProvider.InvalidIndex" />.</span><span class="sxs-lookup"><span data-stu-id="43acf-272">If successful, an <see cref="T:System.Int32" /> representing the zero-based position of the first editable position encountered; otherwise <see cref="P:System.ComponentModel.MaskedTextProvider.InvalidIndex" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43acf-273">Die <xref:System.ComponentModel.MaskedTextProvider.FindEditPositionFrom%2A>-Methode wird verwendet, um nach der angegebenen Position nach der nächsten zugewiesenen oder nicht zugewiesenen bearbeitbaren Position in der formatierten Zeichenfolge zu suchen.</span><span class="sxs-lookup"><span data-stu-id="43acf-273">The <xref:System.ComponentModel.MaskedTextProvider.FindEditPositionFrom%2A> method is used to search for the next assigned or unassigned editable position in the formatted string after the specified position.</span></span>  
  
 <span data-ttu-id="43acf-274">Die <xref:System.ComponentModel.MaskedTextProvider.FindNonEditPositionFrom%2A>-Methode ist das Komplement dieser Methode.</span><span class="sxs-lookup"><span data-stu-id="43acf-274">The <xref:System.ComponentModel.MaskedTextProvider.FindNonEditPositionFrom%2A> method is the complement of this method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.EditPositions" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.EditPositionCount" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsEditPosition(System.Int32)" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Item(System.Int32)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindEditPositionInRange(System.Int32,System.Int32,System.Boolean)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionFrom(System.Int32,System.Boolean)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindUnassignedEditPositionFrom(System.Int32,System.Boolean)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindNonEditPositionFrom(System.Int32,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="FindEditPositionInRange">
      <MemberSignature Language="C#" Value="public int FindEditPositionInRange (int startPosition, int endPosition, bool direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 FindEditPositionInRange(int32 startPosition, int32 endPosition, bool direction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.FindEditPositionInRange(System.Int32,System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindEditPositionInRange (startPosition As Integer, endPosition As Integer, direction As Boolean) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int FindEditPositionInRange(int startPosition, int endPosition, bool direction);" />
      <MemberSignature Language="F#" Value="member this.FindEditPositionInRange : int * int * bool -&gt; int" Usage="maskedTextProvider.FindEditPositionInRange (startPosition, endPosition, direction)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startPosition" Type="System.Int32" />
        <Parameter Name="endPosition" Type="System.Int32" />
        <Parameter Name="direction" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="startPosition"><span data-ttu-id="43acf-275">Die nullbasierte Position in der formatierten Zeichenfolge, an der die Suche beginnt.</span><span class="sxs-lookup"><span data-stu-id="43acf-275">The zero-based position in the formatted string where the search starts.</span></span></param>
        <param name="endPosition"><span data-ttu-id="43acf-276">Die nullbasierte Position in der formatierten Zeichenfolge, an der die Suche endet.</span><span class="sxs-lookup"><span data-stu-id="43acf-276">The zero-based position in the formatted string where the search ends.</span></span></param>
        <param name="direction"><span data-ttu-id="43acf-277">Ein <see cref="T:System.Boolean" />, der die Suchrichtung angibt: <see langword="true" />, um vorwärts zu suchen, oder <see langword="false" />, um rückwärts zu suchen.</span><span class="sxs-lookup"><span data-stu-id="43acf-277">A <see cref="T:System.Boolean" /> indicating the search direction; either <see langword="true" /> to search forward or <see langword="false" /> to search backward.</span></span></param>
        <summary><span data-ttu-id="43acf-278">Gibt die Position der ersten bearbeitbaren Position zwischen den angegebenen Positionen in der angegebenen Suchrichtung zurück.</span><span class="sxs-lookup"><span data-stu-id="43acf-278">Returns the position of the first editable position between the specified positions using the specified search direction.</span></span></summary>
        <returns><span data-ttu-id="43acf-279">Bei erfolgreicher Suche ein <see cref="T:System.Int32" />, der die nullbasierte Position der ersten bearbeitbaren Position darstellt, die gefunden wurde, andernfalls <see cref="P:System.ComponentModel.MaskedTextProvider.InvalidIndex" />.</span><span class="sxs-lookup"><span data-stu-id="43acf-279">If successful, an <see cref="T:System.Int32" /> representing the zero-based position of the first editable position encountered; otherwise <see cref="P:System.ComponentModel.MaskedTextProvider.InvalidIndex" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43acf-280">Die <xref:System.ComponentModel.MaskedTextProvider.FindEditPositionInRange%2A>-Methode wird verwendet, um mithilfe der angegebenen Suchrichtung nach dem ersten bearbeitbaren Zeichen zwischen zwei angegebenen Positionen (einschließlich) zu suchen.</span><span class="sxs-lookup"><span data-stu-id="43acf-280">The <xref:System.ComponentModel.MaskedTextProvider.FindEditPositionInRange%2A> method is used to search for the first editable character between two specified positions, inclusive, using the specified search direction.</span></span> <span data-ttu-id="43acf-281">Das Ergebnis kann dann als Parameter an den <xref:System.ComponentModel.MaskedTextProvider.Item%2A> Indexer übergeben werden, um den zugewiesenen Wert an dieser Position abzurufen.</span><span class="sxs-lookup"><span data-stu-id="43acf-281">The result can subsequently be passed as a parameter to the <xref:System.ComponentModel.MaskedTextProvider.Item%2A> indexer to obtain the assigned value at this position.</span></span>  
  
 <span data-ttu-id="43acf-282">Die <xref:System.ComponentModel.MaskedTextProvider.FindNonEditPositionInRange%2A>-Methode ist das Komplement dieser Methode.</span><span class="sxs-lookup"><span data-stu-id="43acf-282">The <xref:System.ComponentModel.MaskedTextProvider.FindNonEditPositionInRange%2A> method is the complement of this method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.EditPositions" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.EditPositionCount" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsEditPosition(System.Int32)" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Item(System.Int32)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindEditPositionFrom(System.Int32,System.Boolean)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionInRange(System.Int32,System.Int32,System.Boolean)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindUnassignedEditPositionInRange(System.Int32,System.Int32,System.Boolean)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindNonEditPositionInRange(System.Int32,System.Int32,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="FindNonEditPositionFrom">
      <MemberSignature Language="C#" Value="public int FindNonEditPositionFrom (int position, bool direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 FindNonEditPositionFrom(int32 position, bool direction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.FindNonEditPositionFrom(System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindNonEditPositionFrom (position As Integer, direction As Boolean) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int FindNonEditPositionFrom(int position, bool direction);" />
      <MemberSignature Language="F#" Value="member this.FindNonEditPositionFrom : int * bool -&gt; int" Usage="maskedTextProvider.FindNonEditPositionFrom (position, direction)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="position" Type="System.Int32" />
        <Parameter Name="direction" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="position"><span data-ttu-id="43acf-283">Die nullbasierte Position in der formatierten Zeichenfolge, an der die Suche gestartet werden soll.</span><span class="sxs-lookup"><span data-stu-id="43acf-283">The zero-based position in the formatted string to start the search.</span></span></param>
        <param name="direction"><span data-ttu-id="43acf-284">Ein <see cref="T:System.Boolean" />, der die Suchrichtung angibt: <see langword="true" />, um vorwärts zu suchen, oder <see langword="false" />, um rückwärts zu suchen.</span><span class="sxs-lookup"><span data-stu-id="43acf-284">A <see cref="T:System.Boolean" /> indicating the search direction; either <see langword="true" /> to search forward or <see langword="false" /> to search backward.</span></span></param>
        <summary><span data-ttu-id="43acf-285">Gibt die Position der ersten nicht-bearbeitbaren Position nach der angegebenen Position in der angegebenen Suchrichtung zurück.</span><span class="sxs-lookup"><span data-stu-id="43acf-285">Returns the position of the first non-editable position after the specified position using the specified search direction.</span></span></summary>
        <returns><span data-ttu-id="43acf-286">Bei erfolgreicher Suche ein <see cref="T:System.Int32" />, der die nullbasierte Position der ersten gefundenen Literalposition darstellt, andernfalls <see cref="P:System.ComponentModel.MaskedTextProvider.InvalidIndex" />.</span><span class="sxs-lookup"><span data-stu-id="43acf-286">If successful, an <see cref="T:System.Int32" /> representing the zero-based position of the first literal position encountered; otherwise <see cref="P:System.ComponentModel.MaskedTextProvider.InvalidIndex" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43acf-287">Die <xref:System.ComponentModel.MaskedTextProvider.FindNonEditPositionFrom%2A>-Methode wird verwendet, um nach der angegebenen Position nach dem nächsten Literalzeichen in der formatierten Zeichenfolge zu suchen.</span><span class="sxs-lookup"><span data-stu-id="43acf-287">The <xref:System.ComponentModel.MaskedTextProvider.FindNonEditPositionFrom%2A> method is used to search for the next literal character in the formatted string after the specified position.</span></span> <span data-ttu-id="43acf-288">Das Ergebnis kann dann als Parameter an den <xref:System.ComponentModel.MaskedTextProvider.Item%2A> Indexer übergeben werden, um den Literalwert an dieser Position zu erhalten.</span><span class="sxs-lookup"><span data-stu-id="43acf-288">The result can subsequently be passed as a parameter to the <xref:System.ComponentModel.MaskedTextProvider.Item%2A> indexer to obtain the literal value at this position.</span></span>  
  
 <span data-ttu-id="43acf-289">Die <xref:System.ComponentModel.MaskedTextProvider.FindEditPositionFrom%2A>-Methode ist das Komplement dieser Methode.</span><span class="sxs-lookup"><span data-stu-id="43acf-289">The <xref:System.ComponentModel.MaskedTextProvider.FindEditPositionFrom%2A> method is the complement of this method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.EditPositions" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.EditPositionCount" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsEditPosition(System.Int32)" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Item(System.Int32)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindNonEditPositionInRange(System.Int32,System.Int32,System.Boolean)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindEditPositionFrom(System.Int32,System.Boolean)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionFrom(System.Int32,System.Boolean)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindUnassignedEditPositionFrom(System.Int32,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="FindNonEditPositionInRange">
      <MemberSignature Language="C#" Value="public int FindNonEditPositionInRange (int startPosition, int endPosition, bool direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 FindNonEditPositionInRange(int32 startPosition, int32 endPosition, bool direction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.FindNonEditPositionInRange(System.Int32,System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindNonEditPositionInRange (startPosition As Integer, endPosition As Integer, direction As Boolean) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int FindNonEditPositionInRange(int startPosition, int endPosition, bool direction);" />
      <MemberSignature Language="F#" Value="member this.FindNonEditPositionInRange : int * int * bool -&gt; int" Usage="maskedTextProvider.FindNonEditPositionInRange (startPosition, endPosition, direction)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startPosition" Type="System.Int32" />
        <Parameter Name="endPosition" Type="System.Int32" />
        <Parameter Name="direction" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="startPosition"><span data-ttu-id="43acf-290">Die nullbasierte Position in der formatierten Zeichenfolge, an der die Suche beginnt.</span><span class="sxs-lookup"><span data-stu-id="43acf-290">The zero-based position in the formatted string where the search starts.</span></span></param>
        <param name="endPosition"><span data-ttu-id="43acf-291">Die nullbasierte Position in der formatierten Zeichenfolge, an der die Suche endet.</span><span class="sxs-lookup"><span data-stu-id="43acf-291">The zero-based position in the formatted string where the search ends.</span></span></param>
        <param name="direction"><span data-ttu-id="43acf-292">Ein <see cref="T:System.Boolean" />, der die Suchrichtung angibt: <see langword="true" />, um vorwärts zu suchen, oder <see langword="false" />, um rückwärts zu suchen.</span><span class="sxs-lookup"><span data-stu-id="43acf-292">A <see cref="T:System.Boolean" /> indicating the search direction; either <see langword="true" /> to search forward or <see langword="false" /> to search backward.</span></span></param>
        <summary><span data-ttu-id="43acf-293">Gibt die Position der ersten nicht-bearbeitbaren Position zwischen den angegebenen Positionen in der angegebenen Suchrichtung zurück.</span><span class="sxs-lookup"><span data-stu-id="43acf-293">Returns the position of the first non-editable position between the specified positions using the specified search direction.</span></span></summary>
        <returns><span data-ttu-id="43acf-294">Bei erfolgreicher Suche ein <see cref="T:System.Int32" />, der die nullbasierte Position der ersten gefundenen Literalposition darstellt, andernfalls <see cref="P:System.ComponentModel.MaskedTextProvider.InvalidIndex" />.</span><span class="sxs-lookup"><span data-stu-id="43acf-294">If successful, an <see cref="T:System.Int32" /> representing the zero-based position of the first literal position encountered; otherwise <see cref="P:System.ComponentModel.MaskedTextProvider.InvalidIndex" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43acf-295">Die <xref:System.ComponentModel.MaskedTextProvider.FindNonEditPositionInRange%2A>-Methode wird verwendet, um anhand der angegebenen Suchrichtung nach dem ersten Literalzeichen zwischen zwei angegebenen Positionen (einschließlich) zu suchen.</span><span class="sxs-lookup"><span data-stu-id="43acf-295">The <xref:System.ComponentModel.MaskedTextProvider.FindNonEditPositionInRange%2A> method is used to search for the first literal character between two specified positions, inclusive, using the specified search direction.</span></span> <span data-ttu-id="43acf-296">Das Ergebnis kann dann als Parameter an den <xref:System.ComponentModel.MaskedTextProvider.Item%2A> Indexer übergeben werden, um den Literalwert an dieser Position zu erhalten.</span><span class="sxs-lookup"><span data-stu-id="43acf-296">The result can subsequently be passed as a parameter to the <xref:System.ComponentModel.MaskedTextProvider.Item%2A> indexer to obtain the literal value at this position.</span></span>  
  
 <span data-ttu-id="43acf-297">Die <xref:System.ComponentModel.MaskedTextProvider.FindEditPositionInRange%2A>-Methode ist das Komplement dieser Methode.</span><span class="sxs-lookup"><span data-stu-id="43acf-297">The <xref:System.ComponentModel.MaskedTextProvider.FindEditPositionInRange%2A> method is the complement of this method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.EditPositions" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.EditPositionCount" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsEditPosition(System.Int32)" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Item(System.Int32)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindNonEditPositionFrom(System.Int32,System.Boolean)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionInRange(System.Int32,System.Int32,System.Boolean)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindUnassignedEditPositionInRange(System.Int32,System.Int32,System.Boolean)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindEditPositionInRange(System.Int32,System.Int32,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="FindUnassignedEditPositionFrom">
      <MemberSignature Language="C#" Value="public int FindUnassignedEditPositionFrom (int position, bool direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 FindUnassignedEditPositionFrom(int32 position, bool direction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.FindUnassignedEditPositionFrom(System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindUnassignedEditPositionFrom (position As Integer, direction As Boolean) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int FindUnassignedEditPositionFrom(int position, bool direction);" />
      <MemberSignature Language="F#" Value="member this.FindUnassignedEditPositionFrom : int * bool -&gt; int" Usage="maskedTextProvider.FindUnassignedEditPositionFrom (position, direction)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="position" Type="System.Int32" />
        <Parameter Name="direction" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="position"><span data-ttu-id="43acf-298">Die nullbasierte Position in der formatierten Zeichenfolge, an der die Suche gestartet werden soll.</span><span class="sxs-lookup"><span data-stu-id="43acf-298">The zero-based position in the formatted string to start the search.</span></span></param>
        <param name="direction"><span data-ttu-id="43acf-299">Ein <see cref="T:System.Boolean" />, der die Suchrichtung angibt: <see langword="true" />, um vorwärts zu suchen, oder <see langword="false" />, um rückwärts zu suchen.</span><span class="sxs-lookup"><span data-stu-id="43acf-299">A <see cref="T:System.Boolean" /> indicating the search direction; either <see langword="true" /> to search forward or <see langword="false" /> to search backward.</span></span></param>
        <summary><span data-ttu-id="43acf-300">Gibt die Position der ersten nicht zugewiesenen bearbeitbaren Position nach der angegebenen Position in der angegebenen Suchrichtung zurück.</span><span class="sxs-lookup"><span data-stu-id="43acf-300">Returns the position of the first unassigned editable position after the specified position using the specified search direction.</span></span></summary>
        <returns><span data-ttu-id="43acf-301">Bei erfolgreicher Suche ein <see cref="T:System.Int32" />, der die nullbasierte Position der ersten nicht zugewiesenen bearbeitbaren Position darstellt, die gefunden wurde, andernfalls <see cref="P:System.ComponentModel.MaskedTextProvider.InvalidIndex" />.</span><span class="sxs-lookup"><span data-stu-id="43acf-301">If successful, an <see cref="T:System.Int32" /> representing the zero-based position of the first unassigned editable position encountered; otherwise <see cref="P:System.ComponentModel.MaskedTextProvider.InvalidIndex" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43acf-302">Die formatierte Zeichenfolge besteht aus bearbeitbaren Zeichen und Literalen, die aus der Maske kopiert werden.</span><span class="sxs-lookup"><span data-stu-id="43acf-302">The formatted string is composed of editable characters and literals copied from the mask.</span></span> <span data-ttu-id="43acf-303">Die bearbeitbaren Zeichen Positionen werden entweder von dem Eingabe Aufforderungs Zeichen, das aus der Maske kopiert wird, wenn Sie nicht zugewiesen sind, oder mit einem gültigen Eingabezeichen belegt, wenn Ihnen eine Eingabe zugewiesen wurde.</span><span class="sxs-lookup"><span data-stu-id="43acf-303">The editable character positions will either be occupied by the prompt character copied from the mask if they are unassigned, or with a valid input character if they have been assigned an input.</span></span>  
  
 <span data-ttu-id="43acf-304">Die <xref:System.ComponentModel.MaskedTextProvider.FindUnassignedEditPositionFrom%2A>-Methode wird verwendet, um nach der angegebenen Position und Suchrichtung nach dem ersten nicht zugewiesenen Zeichen zu suchen.</span><span class="sxs-lookup"><span data-stu-id="43acf-304">The <xref:System.ComponentModel.MaskedTextProvider.FindUnassignedEditPositionFrom%2A> method is used to search for the first unassigned character after a specified position and search direction.</span></span> <span data-ttu-id="43acf-305">Das Eingabe Aufforderungs Zeichen sollte diese Position belegen.</span><span class="sxs-lookup"><span data-stu-id="43acf-305">The prompt character should occupy this position.</span></span>  
  
 <span data-ttu-id="43acf-306">Die Methoden <xref:System.ComponentModel.MaskedTextProvider.FindNonEditPositionFrom%2A> und <xref:System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionFrom%2A> sind Ergänzungen dieser Methode.</span><span class="sxs-lookup"><span data-stu-id="43acf-306">The <xref:System.ComponentModel.MaskedTextProvider.FindNonEditPositionFrom%2A> and <xref:System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionFrom%2A> methods are complements of this method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.EditPositions" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.EditPositionCount" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsEditPosition(System.Int32)" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Item(System.Int32)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindUnassignedEditPositionInRange(System.Int32,System.Int32,System.Boolean)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindEditPositionFrom(System.Int32,System.Boolean)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindNonEditPositionFrom(System.Int32,System.Boolean)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionFrom(System.Int32,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="FindUnassignedEditPositionInRange">
      <MemberSignature Language="C#" Value="public int FindUnassignedEditPositionInRange (int startPosition, int endPosition, bool direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 FindUnassignedEditPositionInRange(int32 startPosition, int32 endPosition, bool direction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.FindUnassignedEditPositionInRange(System.Int32,System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindUnassignedEditPositionInRange (startPosition As Integer, endPosition As Integer, direction As Boolean) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int FindUnassignedEditPositionInRange(int startPosition, int endPosition, bool direction);" />
      <MemberSignature Language="F#" Value="member this.FindUnassignedEditPositionInRange : int * int * bool -&gt; int" Usage="maskedTextProvider.FindUnassignedEditPositionInRange (startPosition, endPosition, direction)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startPosition" Type="System.Int32" />
        <Parameter Name="endPosition" Type="System.Int32" />
        <Parameter Name="direction" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="startPosition"><span data-ttu-id="43acf-307">Die nullbasierte Position in der formatierten Zeichenfolge, an der die Suche beginnt.</span><span class="sxs-lookup"><span data-stu-id="43acf-307">The zero-based position in the formatted string where the search starts.</span></span></param>
        <param name="endPosition"><span data-ttu-id="43acf-308">Die nullbasierte Position in der formatierten Zeichenfolge, an der die Suche endet.</span><span class="sxs-lookup"><span data-stu-id="43acf-308">The zero-based position in the formatted string where the search ends.</span></span></param>
        <param name="direction"><span data-ttu-id="43acf-309">Ein <see cref="T:System.Boolean" />, der die Suchrichtung angibt: <see langword="true" />, um vorwärts zu suchen, oder <see langword="false" />, um rückwärts zu suchen.</span><span class="sxs-lookup"><span data-stu-id="43acf-309">A <see cref="T:System.Boolean" /> indicating the search direction; either <see langword="true" /> to search forward or <see langword="false" /> to search backward.</span></span></param>
        <summary><span data-ttu-id="43acf-310">Gibt die Position der ersten nicht zugewiesenen bearbeitbaren Position zwischen den angegebenen Positionen in der angegebenen Suchrichtung zurück.</span><span class="sxs-lookup"><span data-stu-id="43acf-310">Returns the position of the first unassigned editable position between the specified positions using the specified search direction.</span></span></summary>
        <returns><span data-ttu-id="43acf-311">Bei erfolgreicher Suche ein <see cref="T:System.Int32" />, der die nullbasierte Position der ersten nicht zugewiesenen bearbeitbaren Position darstellt, die gefunden wurde, andernfalls <see cref="P:System.ComponentModel.MaskedTextProvider.InvalidIndex" />.</span><span class="sxs-lookup"><span data-stu-id="43acf-311">If successful, an <see cref="T:System.Int32" /> representing the zero-based position of the first unassigned editable position encountered; otherwise <see cref="P:System.ComponentModel.MaskedTextProvider.InvalidIndex" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43acf-312">Die formatierte Zeichenfolge besteht aus bearbeitbaren Zeichen und Literalen, die aus der Maske kopiert werden.</span><span class="sxs-lookup"><span data-stu-id="43acf-312">The formatted string is composed of editable characters and literals copied from the mask.</span></span> <span data-ttu-id="43acf-313">Die bearbeitbaren Zeichen Positionen werden entweder von dem Eingabe Aufforderungs Zeichen, das aus der Maske kopiert wird, wenn Sie nicht zugewiesen sind, oder mit einem gültigen Eingabezeichen belegt, wenn Ihnen eine Eingabe zugewiesen wurde.</span><span class="sxs-lookup"><span data-stu-id="43acf-313">The editable character positions will either be occupied by the prompt character copied from the mask if they are unassigned, or with a valid input character if they have been assigned an input.</span></span>  
  
 <span data-ttu-id="43acf-314">Die <xref:System.ComponentModel.MaskedTextProvider.FindUnassignedEditPositionInRange%2A>-Methode wird verwendet, um mithilfe der angegebenen Suchrichtung nach dem ersten nicht zugewiesenen Zeichen zwischen zwei angegebenen Positionen (einschließlich) zu suchen.</span><span class="sxs-lookup"><span data-stu-id="43acf-314">The <xref:System.ComponentModel.MaskedTextProvider.FindUnassignedEditPositionInRange%2A> method is used to search for the first unassigned character between two specified positions, inclusive, using the specified search direction.</span></span> <span data-ttu-id="43acf-315">Das Eingabe Aufforderungs Zeichen sollte diese Position belegen.</span><span class="sxs-lookup"><span data-stu-id="43acf-315">The prompt character should occupy this position.</span></span>  
  
 <span data-ttu-id="43acf-316">Die Methoden <xref:System.ComponentModel.MaskedTextProvider.FindNonEditPositionInRange%2A> und <xref:System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionInRange%2A> sind Ergänzungen dieser Methode.</span><span class="sxs-lookup"><span data-stu-id="43acf-316">The <xref:System.ComponentModel.MaskedTextProvider.FindNonEditPositionInRange%2A> and <xref:System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionInRange%2A> methods are complements of this method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.EditPositions" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.EditPositionCount" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsEditPosition(System.Int32)" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Item(System.Int32)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindUnassignedEditPositionFrom(System.Int32,System.Boolean)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindEditPositionInRange(System.Int32,System.Int32,System.Boolean)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionInRange(System.Int32,System.Int32,System.Boolean)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindNonEditPositionInRange(System.Int32,System.Int32,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="GetOperationResultFromHint">
      <MemberSignature Language="C#" Value="public static bool GetOperationResultFromHint (System.ComponentModel.MaskedTextResultHint hint);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool GetOperationResultFromHint(valuetype System.ComponentModel.MaskedTextResultHint hint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.GetOperationResultFromHint(System.ComponentModel.MaskedTextResultHint)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetOperationResultFromHint (hint As MaskedTextResultHint) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool GetOperationResultFromHint(System::ComponentModel::MaskedTextResultHint hint);" />
      <MemberSignature Language="F#" Value="static member GetOperationResultFromHint : System.ComponentModel.MaskedTextResultHint -&gt; bool" Usage="System.ComponentModel.MaskedTextProvider.GetOperationResultFromHint hint" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hint" Type="System.ComponentModel.MaskedTextResultHint" />
      </Parameters>
      <Docs>
        <param name="hint"><span data-ttu-id="43acf-317">Ein <see cref="T:System.ComponentModel.MaskedTextResultHint" />-Wert, der i. d. R. als Ausgabeparameter eines vorherigen Vorgangs abgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="43acf-317">A <see cref="T:System.ComponentModel.MaskedTextResultHint" /> value typically obtained as an output parameter from a previous operation.</span></span></param>
        <summary><span data-ttu-id="43acf-318">Bestimmt, ob der angegebene <see cref="T:System.ComponentModel.MaskedTextResultHint" /> einen Erfolg oder ein Fehlschlagen anzeigt.</span><span class="sxs-lookup"><span data-stu-id="43acf-318">Determines whether the specified <see cref="T:System.ComponentModel.MaskedTextResultHint" /> denotes success or failure.</span></span></summary>
        <returns><span data-ttu-id="43acf-319"><see langword="true" />, wenn der angegebene <see cref="T:System.ComponentModel.MaskedTextResultHint" />-Wert einen Erfolg darstellt, andernfalls <see langword="false" />, wenn er ein Fehlschlagen darstellt.</span><span class="sxs-lookup"><span data-stu-id="43acf-319"><see langword="true" /> if the specified <see cref="T:System.ComponentModel.MaskedTextResultHint" /> value represents a success; otherwise, <see langword="false" /> if it represents failure.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43acf-320">Die folgenden Methoden der <xref:System.ComponentModel.MaskedTextProvider>-Klasse enthalten einen Parameter vom Typ <xref:System.ComponentModel.MaskedTextResultHint>, der verwendet wird, um Informationen über den Vorgang der Methode auszugeben: <xref:System.ComponentModel.MaskedTextProvider.Add%2A>, <xref:System.ComponentModel.MaskedTextProvider.Clear%2A>, <xref:System.ComponentModel.MaskedTextProvider.InsertAt%2A>, <xref:System.ComponentModel.MaskedTextProvider.Remove%2A>, <xref:System.ComponentModel.MaskedTextProvider.RemoveAt%2A>, <xref:System.ComponentModel.MaskedTextProvider.Replace%2A>, <xref:System.ComponentModel.MaskedTextProvider.Set%2A>, <xref:System.ComponentModel.MaskedTextProvider.VerifyChar%2A>und <xref:System.ComponentModel.MaskedTextProvider.VerifyString%2A>.</span><span class="sxs-lookup"><span data-stu-id="43acf-320">The following methods of the <xref:System.ComponentModel.MaskedTextProvider> class contain a parameter of type <xref:System.ComponentModel.MaskedTextResultHint> that is used to output information about the operation of the method: <xref:System.ComponentModel.MaskedTextProvider.Add%2A>, <xref:System.ComponentModel.MaskedTextProvider.Clear%2A>, <xref:System.ComponentModel.MaskedTextProvider.InsertAt%2A>, <xref:System.ComponentModel.MaskedTextProvider.Remove%2A>, <xref:System.ComponentModel.MaskedTextProvider.RemoveAt%2A>, <xref:System.ComponentModel.MaskedTextProvider.Replace%2A>, <xref:System.ComponentModel.MaskedTextProvider.Set%2A>, <xref:System.ComponentModel.MaskedTextProvider.VerifyChar%2A>, and <xref:System.ComponentModel.MaskedTextProvider.VerifyString%2A>.</span></span> <span data-ttu-id="43acf-321">Die <xref:System.ComponentModel.MaskedTextProvider.GetOperationResultFromHint%2A>-Methode interpretiert diesen Wert und gibt einen booleschen Wert zurück, der angibt, ob die <xref:System.ComponentModel.MaskedTextResultHint> signalisiert hat, dass der Vorgang erfolgreich war oder fehlgeschlagen ist.</span><span class="sxs-lookup"><span data-stu-id="43acf-321">The <xref:System.ComponentModel.MaskedTextProvider.GetOperationResultFromHint%2A> method interprets this value and returns a Boolean value that indicates whether the <xref:System.ComponentModel.MaskedTextResultHint> has signaled that the operation was a success or failure.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.MaskedTextResultHint" />
      </Docs>
    </Member>
    <Member MemberName="IncludeLiterals">
      <MemberSignature Language="C#" Value="public bool IncludeLiterals { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IncludeLiterals" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.MaskedTextProvider.IncludeLiterals" />
      <MemberSignature Language="VB.NET" Value="Public Property IncludeLiterals As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IncludeLiterals { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IncludeLiterals : bool with get, set" Usage="System.ComponentModel.MaskedTextProvider.IncludeLiterals" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="43acf-322">Ruft einen Wert ab, der angibt, ob in der Eingabemaske vorhandene Literalzeichen in die formatierte Zeichenfolge aufgenommen werden, oder legt diesen Wert fest.</span><span class="sxs-lookup"><span data-stu-id="43acf-322">Gets or sets a value that indicates whether literal characters in the input mask should be included in the formatted string.</span></span></summary>
        <value><span data-ttu-id="43acf-323"><see langword="true" />, wenn Literalzeichen aufgenommen werden, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="43acf-323"><see langword="true" /> if literals are included; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="43acf-324">Der Standardwert lautet <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="43acf-324">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43acf-325">Die Eigenschaften <xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A> und <xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A> bestimmen, ob beim Aufrufen der <xref:System.ComponentModel.MaskedTextProvider.ToString%2A>-Methode Eingabe Aufforderungs-und Literalzeichen angezeigt werden.</span><span class="sxs-lookup"><span data-stu-id="43acf-325">The <xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A> and <xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A> properties will determine whether prompt and literal characters appear when calling the <xref:System.ComponentModel.MaskedTextProvider.ToString%2A> method.</span></span> <span data-ttu-id="43acf-326">Wenn Sie diese beiden Eigenschaften auf `false`festlegen, stellt die analysierte Zeichenfolge nur die Zeichen dar, die vom Benutzer eingegeben werden.</span><span class="sxs-lookup"><span data-stu-id="43acf-326">By setting both of these properties to `false`, the parsed string will represent only the characters entered by the user.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.IncludePrompt" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.ResetOnSpace" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.ResetOnPrompt" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.SkipLiterals" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.ToString" />
      </Docs>
    </Member>
    <Member MemberName="IncludePrompt">
      <MemberSignature Language="C#" Value="public bool IncludePrompt { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IncludePrompt" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.MaskedTextProvider.IncludePrompt" />
      <MemberSignature Language="VB.NET" Value="Public Property IncludePrompt As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IncludePrompt { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IncludePrompt : bool with get, set" Usage="System.ComponentModel.MaskedTextProvider.IncludePrompt" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="43acf-327">Ruft einen Wert ab, der angibt, ob mithilfe von <see cref="P:System.Windows.Forms.MaskedTextBox.PromptChar" /> bei der Anzeige der formatierten Zeichenfolge das Nichtvorhandensein von Benutzereingaben angegeben wird, oder legt diesen Wert fest.</span><span class="sxs-lookup"><span data-stu-id="43acf-327">Gets or sets a value indicating whether <see cref="P:System.Windows.Forms.MaskedTextBox.PromptChar" /> is used to represent the absence of user input when displaying the formatted string.</span></span></summary>
        <value><span data-ttu-id="43acf-328"><see langword="true" />, wenn das Aufforderungszeichen zur Darstellung der Positionen verwendet wird, an denen keine Benutzereingaben vorgenommen wurden, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="43acf-328"><see langword="true" /> if the prompt character is used to represent the positions where no user input was provided; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="43acf-329">Der Standardwert lautet <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="43acf-329">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43acf-330">Die Eigenschaften <xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A> und <xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A> bestimmen, ob beim Aufrufen der <xref:System.ComponentModel.MaskedTextProvider.ToString%2A>-Methode Eingabe Aufforderungs-und Literalzeichen angezeigt werden.</span><span class="sxs-lookup"><span data-stu-id="43acf-330">The <xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A> and <xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A> properties will determine whether prompt and literal characters appear when calling the <xref:System.ComponentModel.MaskedTextProvider.ToString%2A> method.</span></span> <span data-ttu-id="43acf-331">Wenn Sie diese beiden Eigenschaften auf `false`festlegen, stellt die analysierte Zeichenfolge nur die Zeichen dar, die vom Benutzer eingegeben werden.</span><span class="sxs-lookup"><span data-stu-id="43acf-331">By setting both of these properties to `false`, the parsed string will represent only the characters entered by the user.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.IncludeLiterals" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.ToString" />
      </Docs>
    </Member>
    <MemberGroup MemberName="InsertAt">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="43acf-332">Fügt an einer bestimmten Position innerhalb der formatierten Zeichenfolge ein Zeichen oder eine Zeichenfolge ein.</span><span class="sxs-lookup"><span data-stu-id="43acf-332">Inserts a character or string at a specific position within the formatted string.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="InsertAt">
      <MemberSignature Language="C#" Value="public bool InsertAt (char input, int position);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool InsertAt(char input, int32 position) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.InsertAt(System.Char,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function InsertAt (input As Char, position As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool InsertAt(char input, int position);" />
      <MemberSignature Language="F#" Value="member this.InsertAt : char * int -&gt; bool" Usage="maskedTextProvider.InsertAt (input, position)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Char" />
        <Parameter Name="position" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="43acf-333">Das einzufügende <see cref="T:System.Char" />-Objekt.</span><span class="sxs-lookup"><span data-stu-id="43acf-333">The <see cref="T:System.Char" /> to be inserted.</span></span></param>
        <param name="position"><span data-ttu-id="43acf-334">Die nullbasierte Position in der formatierten Zeichenfolge, an der das Zeichen eingefügt werden soll.</span><span class="sxs-lookup"><span data-stu-id="43acf-334">The zero-based position in the formatted string to insert the character.</span></span></param>
        <summary><span data-ttu-id="43acf-335">Fügt das angegebene Zeichen an der angegebenen Position innerhalb der formatierten Zeichenfolge ein.</span><span class="sxs-lookup"><span data-stu-id="43acf-335">Inserts the specified character at the specified position within the formatted string.</span></span></summary>
        <returns><span data-ttu-id="43acf-336"><see langword="true" />, wenn die Einfügung erfolgreich war, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="43acf-336"><see langword="true" /> if the insertion was successful; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43acf-337">Die <xref:System.ComponentModel.MaskedTextProvider.InsertAt%2A>-Methode fügt ein Zeichen in die erste Bearbeitungs Position an oder hinter der durch den `pos`-Parameter angegebenen Position ein.</span><span class="sxs-lookup"><span data-stu-id="43acf-337">The <xref:System.ComponentModel.MaskedTextProvider.InsertAt%2A> method inserts a character into the first edit position at or beyond that specified by the `pos` parameter.</span></span> <span data-ttu-id="43acf-338">Mit dieser Methode werden alle vorhandenen Zeichen nach der Einfügemarke um eine Position verschoben, um Platz für das eingefügte `input` Zeichen zu schaffen.</span><span class="sxs-lookup"><span data-stu-id="43acf-338">This method will shift all existing characters after the insertion point over by one position to make room for the inserted `input` character.</span></span> <span data-ttu-id="43acf-339">Wenn einer der folgenden Fehler auftritt, wird der Einfügevorgang nicht ausgeführt, und die Methode gibt `false`zurück.</span><span class="sxs-lookup"><span data-stu-id="43acf-339">If one of the following errors occurs, the insertion is not performed, and the method returns `false`.</span></span>  
  
-   <span data-ttu-id="43acf-340">Der `pos`-Parameter ist kleiner als 0 (null) oder größer als der <xref:System.ComponentModel.MaskedTextProvider.Length%2A> der formatierten Zeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="43acf-340">The `pos` parameter is less than zero or greater than the <xref:System.ComponentModel.MaskedTextProvider.Length%2A> of the formatted string.</span></span>  
  
-   <span data-ttu-id="43acf-341">Ein bearbeitbares Zeichen wurde in der formatierten Zeichenfolge an oder hinter der angegebenen Position `pos`nicht gefunden.</span><span class="sxs-lookup"><span data-stu-id="43acf-341">An editable character was not found in the formatted string at or beyond the specified position, `pos`.</span></span>  
  
-   <span data-ttu-id="43acf-342">Das Einfügezeichen (`input`) ist kein gültiges Eingabezeichen, da es nicht druckbar ist oder nicht mit dem entsprechenden Masken Element übereinstimmt.</span><span class="sxs-lookup"><span data-stu-id="43acf-342">The insertion character, `input`, is not a valid input character because it is not printable or does not match its corresponding mask element.</span></span>  
  
-   <span data-ttu-id="43acf-343">Rechts von der Einfügemarke sind keine Positionen verfügbar, sodass vorhandene Zeichen nicht verschoben werden können.</span><span class="sxs-lookup"><span data-stu-id="43acf-343">There are no available positions to the right of the insertion point, so that existing characters cannot be shifted.</span></span>  
  
-   <span data-ttu-id="43acf-344">Wenn Sie die vorhandenen Zeichen verschieben, würde dies zu einer Verletzung der Maske führen.</span><span class="sxs-lookup"><span data-stu-id="43acf-344">Shifting the existing characters would produce a violation of the mask.</span></span>  
  
 <span data-ttu-id="43acf-345">Eine leere `input` Zeichenfolge führt nicht zu einer Änderung in der formatierten Zeichenfolge, sondern gibt `true`zurück.</span><span class="sxs-lookup"><span data-stu-id="43acf-345">An empty `input` string will cause no change in the formatted string, but will return `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Add" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.AvailableEditPositionCount" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Mask" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Remove" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Replace" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Set" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.ToDisplayString" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.VerifyString" />
      </Docs>
    </Member>
    <Member MemberName="InsertAt">
      <MemberSignature Language="C#" Value="public bool InsertAt (string input, int position);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool InsertAt(string input, int32 position) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.InsertAt(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function InsertAt (input As String, position As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool InsertAt(System::String ^ input, int position);" />
      <MemberSignature Language="F#" Value="member this.InsertAt : string * int -&gt; bool" Usage="maskedTextProvider.InsertAt (input, position)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="position" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="43acf-346">Das einzufügende <see cref="T:System.String" />-Objekt.</span><span class="sxs-lookup"><span data-stu-id="43acf-346">The <see cref="T:System.String" /> to be inserted.</span></span></param>
        <param name="position"><span data-ttu-id="43acf-347">Die nullbasierte Position in der formatierten Zeichenfolge, an der die Eingabezeichenfolge eingefügt werden soll.</span><span class="sxs-lookup"><span data-stu-id="43acf-347">The zero-based position in the formatted string to insert the input string.</span></span></param>
        <summary><span data-ttu-id="43acf-348">Fügt die angegebene Zeichenfolge an einer angegebenen Position innerhalb der formatierten Zeichenfolge ein.</span><span class="sxs-lookup"><span data-stu-id="43acf-348">Inserts the specified string at a specified position within the formatted string.</span></span></summary>
        <returns><span data-ttu-id="43acf-349"><see langword="true" />, wenn die Einfügung erfolgreich war, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="43acf-349"><see langword="true" /> if the insertion was successful; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43acf-350">Die <xref:System.ComponentModel.MaskedTextProvider.InsertAt%2A>-Methode fügt jedes Zeichen aus der `input` Zeichenfolge in die Bearbeitungs Positionen an der Position `pos` und höher ein.</span><span class="sxs-lookup"><span data-stu-id="43acf-350">The <xref:System.ComponentModel.MaskedTextProvider.InsertAt%2A> method inserts each character from the `input` string into the edit positions located at position `pos` and beyond.</span></span> <span data-ttu-id="43acf-351">Mit dieser Methode werden alle vorhandenen Zeichen nach der Einfügemarke um eine Position für jedes eingefügte Zeichen verschoben.</span><span class="sxs-lookup"><span data-stu-id="43acf-351">This method will shift all existing characters after the insertion point over by one position for each inserted character.</span></span> <span data-ttu-id="43acf-352">Wenn einer der folgenden Fehler auftritt, wird kein Einfügevorgang durchgeführt, und die Methode gibt `false`zurück.</span><span class="sxs-lookup"><span data-stu-id="43acf-352">If one of the following errors occurs, no insertion is performed, and the method returns `false`.</span></span>  
  
-   <span data-ttu-id="43acf-353">Der `pos`-Parameter ist kleiner als 0 (null) oder größer als der <xref:System.ComponentModel.MaskedTextProvider.Length%2A> der formatierten Zeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="43acf-353">The `pos` parameter is less than zero or greater than the <xref:System.ComponentModel.MaskedTextProvider.Length%2A> of the formatted string.</span></span>  
  
-   <span data-ttu-id="43acf-354">Nicht genügend bearbeitbare Zeichen in der formatierten Zeichenfolge an oder hinter der angegebenen Position, `pos`, um alle Zeichen aus der `input` Zeichenfolge einzufügen.</span><span class="sxs-lookup"><span data-stu-id="43acf-354">Not enough editable characters exist in the formatted string at or beyond the specified position, `pos`, to insert all of the characters from the `input` string.</span></span>  
  
-   <span data-ttu-id="43acf-355">Mindestens eines der Einfügezeichen ist kein gültiges Eingabezeichen, da Sie nicht druckbar sind oder nicht mit dem entsprechenden Masken Element übereinstimmen.</span><span class="sxs-lookup"><span data-stu-id="43acf-355">One or more of the insertion characters are not a valid input character because they are not printable or do not match their corresponding mask element.</span></span>  
  
-   <span data-ttu-id="43acf-356">Rechts von der Einfügemarke sind nicht genügend Positionen verfügbar, sodass vorhandene Zeichen nicht verschoben werden können.</span><span class="sxs-lookup"><span data-stu-id="43acf-356">There are not enough available positions to the right of the insertion point, so that existing characters cannot be shifted.</span></span>  
  
-   <span data-ttu-id="43acf-357">Wenn Sie die vorhandenen Zeichen verschieben, würde dies zu einer Verletzung der Maske führen.</span><span class="sxs-lookup"><span data-stu-id="43acf-357">Shifting the existing characters would produce a violation of the mask.</span></span> <span data-ttu-id="43acf-358">Beachten Sie, dass diese Verschiebung während des Einfügens jedes einzelnen Zeichens auftritt.</span><span class="sxs-lookup"><span data-stu-id="43acf-358">Note that this shifting occurs during the insertion of each individual character.</span></span>  
  
 <span data-ttu-id="43acf-359">Eine leere `input` Zeichenfolge führt nicht zu einer Änderung in der formatierten Zeichenfolge, sondern gibt `true`zurück.</span><span class="sxs-lookup"><span data-stu-id="43acf-359">An empty `input` string will cause no change in the formatted string, but will return `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="43acf-360">Der Parameter <paramref name="input" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="43acf-360">The <paramref name="input" /> parameter is <see langword="null" />.</span></span></exception>
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Add" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.AvailableEditPositionCount" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Mask" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Remove" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Replace" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Set" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.ToDisplayString" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.VerifyString" />
      </Docs>
    </Member>
    <Member MemberName="InsertAt">
      <MemberSignature Language="C#" Value="public bool InsertAt (char input, int position, out int testPosition, out System.ComponentModel.MaskedTextResultHint resultHint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool InsertAt(char input, int32 position, [out] int32&amp; testPosition, [out] valuetype System.ComponentModel.MaskedTextResultHint&amp; resultHint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.InsertAt(System.Char,System.Int32,System.Int32@,System.ComponentModel.MaskedTextResultHint@)" />
      <MemberSignature Language="VB.NET" Value="Public Function InsertAt (input As Char, position As Integer, ByRef testPosition As Integer, ByRef resultHint As MaskedTextResultHint) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool InsertAt(char input, int position, [Runtime::InteropServices::Out] int % testPosition, [Runtime::InteropServices::Out] System::ComponentModel::MaskedTextResultHint % resultHint);" />
      <MemberSignature Language="F#" Value="member this.InsertAt : char * int * int * MaskedTextResultHint -&gt; bool" Usage="maskedTextProvider.InsertAt (input, position, testPosition, resultHint)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Char" />
        <Parameter Name="position" Type="System.Int32" />
        <Parameter Name="testPosition" Type="System.Int32" RefType="out" />
        <Parameter Name="resultHint" Type="System.ComponentModel.MaskedTextResultHint" RefType="out" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="43acf-361">Das einzufügende <see cref="T:System.Char" />-Objekt.</span><span class="sxs-lookup"><span data-stu-id="43acf-361">The <see cref="T:System.Char" /> to be inserted.</span></span></param>
        <param name="position"><span data-ttu-id="43acf-362">Die nullbasierte Position in der formatierten Zeichenfolge, an der das Zeichen eingefügt werden soll.</span><span class="sxs-lookup"><span data-stu-id="43acf-362">The zero-based position in the formatted string to insert the character.</span></span></param>
        <param name="testPosition"><span data-ttu-id="43acf-363">Bei Erfolg der Methode die Position, an der zuletzt ein Zeichen eingefügt wurde, andernfalls die erste Position, an der die Einfügung fehlgeschlagen ist.</span><span class="sxs-lookup"><span data-stu-id="43acf-363">If the method is successful, the last position where a character was inserted; otherwise, the first position where the insertion failed.</span></span> <span data-ttu-id="43acf-364">Ein Ausgabeparameter.</span><span class="sxs-lookup"><span data-stu-id="43acf-364">An output parameter.</span></span></param>
        <param name="resultHint"><span data-ttu-id="43acf-365">Ein <see cref="T:System.ComponentModel.MaskedTextResultHint" />, mit dem das Ergebnis des Einfügevorgangs kurz beschrieben wird.</span><span class="sxs-lookup"><span data-stu-id="43acf-365">A <see cref="T:System.ComponentModel.MaskedTextResultHint" /> that succinctly describes the result of the insertion operation.</span></span> <span data-ttu-id="43acf-366">Ein Ausgabeparameter.</span><span class="sxs-lookup"><span data-stu-id="43acf-366">An output parameter.</span></span></param>
        <summary><span data-ttu-id="43acf-367">Fügt das angegebene Zeichen an der angegebenen Position innerhalb der formatierten Zeichenfolge ein und gibt die letzte Einfügeposition sowie den Status des Vorgangs zurück.</span><span class="sxs-lookup"><span data-stu-id="43acf-367">Inserts the specified character at the specified position within the formatted string, returning the last insertion position and the status of the operation.</span></span></summary>
        <returns><span data-ttu-id="43acf-368"><see langword="true" />, wenn die Einfügung erfolgreich war, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="43acf-368"><see langword="true" /> if the insertion was successful; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43acf-369">Die <xref:System.ComponentModel.MaskedTextProvider.InsertAt%2A>-Methode fügt ein Zeichen in die erste Bearbeitungs Position an oder hinter der durch den `pos`-Parameter angegebenen Position ein.</span><span class="sxs-lookup"><span data-stu-id="43acf-369">The <xref:System.ComponentModel.MaskedTextProvider.InsertAt%2A> method inserts a character into the first edit position at or beyond that specified by the `pos` parameter.</span></span> <span data-ttu-id="43acf-370">Mit dieser Methode werden alle vorhandenen Zeichen nach der Einfügemarke um eine Position verschoben, um Platz für das eingefügte `input` Zeichen zu schaffen.</span><span class="sxs-lookup"><span data-stu-id="43acf-370">This method will shift all existing characters after the insertion point over by one position to make room for the inserted `input` character.</span></span> <span data-ttu-id="43acf-371">Wenn einer der folgenden Fehler auftritt, wird der Einfügevorgang nicht ausgeführt, und die Methode gibt `false`zurück.</span><span class="sxs-lookup"><span data-stu-id="43acf-371">If one of the following errors occurs, the insertion is not performed, and the method returns `false`.</span></span>  
  
-   <span data-ttu-id="43acf-372">Der `pos`-Parameter ist kleiner als 0 (null) oder größer als der <xref:System.ComponentModel.MaskedTextProvider.Length%2A> der formatierten Zeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="43acf-372">The `pos` parameter is less than zero or greater than the <xref:System.ComponentModel.MaskedTextProvider.Length%2A> of the formatted string.</span></span>  
  
-   <span data-ttu-id="43acf-373">Ein bearbeitbares Zeichen wurde in der formatierten Zeichenfolge an oder hinter der angegebenen Position `pos`nicht gefunden.</span><span class="sxs-lookup"><span data-stu-id="43acf-373">An editable character was not found in the formatted string at or beyond the specified position, `pos`.</span></span>  
  
-   <span data-ttu-id="43acf-374">Das Einfügezeichen (`input`) ist kein gültiges Eingabezeichen, da es nicht druckbar ist oder nicht mit dem entsprechenden Masken Element übereinstimmt.</span><span class="sxs-lookup"><span data-stu-id="43acf-374">The insertion character, `input`, is not a valid input character because it is not printable or does not match its corresponding mask element.</span></span>  
  
-   <span data-ttu-id="43acf-375">Rechts von der Einfügemarke sind keine Positionen verfügbar, sodass vorhandene Zeichen nicht verschoben werden können.</span><span class="sxs-lookup"><span data-stu-id="43acf-375">There are no available positions to the right of the insertion point, so that existing characters cannot be shifted.</span></span>  
  
-   <span data-ttu-id="43acf-376">Wenn Sie die vorhandenen Zeichen verschieben, würde dies zu einer Verletzung der Maske führen.</span><span class="sxs-lookup"><span data-stu-id="43acf-376">Shifting the existing characters would produce a violation of the mask.</span></span>  
  
 <span data-ttu-id="43acf-377">Eine leere `input` Zeichenfolge führt nicht zu einer Änderung in der formatierten Zeichenfolge, sondern gibt `true`zurück.</span><span class="sxs-lookup"><span data-stu-id="43acf-377">An empty `input` string will cause no change in the formatted string, but will return `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Add" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.AvailableEditPositionCount" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Mask" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Remove" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Replace" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Set" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.ToDisplayString" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.VerifyString" />
      </Docs>
    </Member>
    <Member MemberName="InsertAt">
      <MemberSignature Language="C#" Value="public bool InsertAt (string input, int position, out int testPosition, out System.ComponentModel.MaskedTextResultHint resultHint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool InsertAt(string input, int32 position, [out] int32&amp; testPosition, [out] valuetype System.ComponentModel.MaskedTextResultHint&amp; resultHint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.InsertAt(System.String,System.Int32,System.Int32@,System.ComponentModel.MaskedTextResultHint@)" />
      <MemberSignature Language="VB.NET" Value="Public Function InsertAt (input As String, position As Integer, ByRef testPosition As Integer, ByRef resultHint As MaskedTextResultHint) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool InsertAt(System::String ^ input, int position, [Runtime::InteropServices::Out] int % testPosition, [Runtime::InteropServices::Out] System::ComponentModel::MaskedTextResultHint % resultHint);" />
      <MemberSignature Language="F#" Value="member this.InsertAt : string * int * int * MaskedTextResultHint -&gt; bool" Usage="maskedTextProvider.InsertAt (input, position, testPosition, resultHint)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="position" Type="System.Int32" />
        <Parameter Name="testPosition" Type="System.Int32" RefType="out" />
        <Parameter Name="resultHint" Type="System.ComponentModel.MaskedTextResultHint" RefType="out" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="43acf-378">Das einzufügende <see cref="T:System.String" />-Objekt.</span><span class="sxs-lookup"><span data-stu-id="43acf-378">The <see cref="T:System.String" /> to be inserted.</span></span></param>
        <param name="position"><span data-ttu-id="43acf-379">Die nullbasierte Position in der formatierten Zeichenfolge, an der die Eingabezeichenfolge eingefügt werden soll.</span><span class="sxs-lookup"><span data-stu-id="43acf-379">The zero-based position in the formatted string to insert the input string.</span></span></param>
        <param name="testPosition"><span data-ttu-id="43acf-380">Bei Erfolg der Methode die Position, an der zuletzt ein Zeichen eingefügt wurde, andernfalls die erste Position, an der die Einfügung fehlgeschlagen ist.</span><span class="sxs-lookup"><span data-stu-id="43acf-380">If the method is successful, the last position where a character was inserted; otherwise, the first position where the insertion failed.</span></span> <span data-ttu-id="43acf-381">Ein Ausgabeparameter.</span><span class="sxs-lookup"><span data-stu-id="43acf-381">An output parameter.</span></span></param>
        <param name="resultHint"><span data-ttu-id="43acf-382">Ein <see cref="T:System.ComponentModel.MaskedTextResultHint" />, mit dem das Ergebnis des Einfügevorgangs kurz beschrieben wird.</span><span class="sxs-lookup"><span data-stu-id="43acf-382">A <see cref="T:System.ComponentModel.MaskedTextResultHint" /> that succinctly describes the result of the insertion operation.</span></span> <span data-ttu-id="43acf-383">Ein Ausgabeparameter.</span><span class="sxs-lookup"><span data-stu-id="43acf-383">An output parameter.</span></span></param>
        <summary><span data-ttu-id="43acf-384">Fügt die angegebene Zeichenfolge an einer angegebenen Position innerhalb der formatierten Zeichenfolge ein und gibt die letzte Einfügeposition sowie den Status des Vorgangs zurück.</span><span class="sxs-lookup"><span data-stu-id="43acf-384">Inserts the specified string at a specified position within the formatted string, returning the last insertion position and the status of the operation.</span></span></summary>
        <returns><span data-ttu-id="43acf-385"><see langword="true" />, wenn die Einfügung erfolgreich war, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="43acf-385"><see langword="true" /> if the insertion was successful; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43acf-386">Die <xref:System.ComponentModel.MaskedTextProvider.InsertAt%2A>-Methode fügt jedes Zeichen aus der `input` Zeichenfolge in die Bearbeitungs Positionen an der Position `pos` und höher ein.</span><span class="sxs-lookup"><span data-stu-id="43acf-386">The <xref:System.ComponentModel.MaskedTextProvider.InsertAt%2A> method inserts each character from the `input` string into the edit positions located at position `pos` and beyond.</span></span> <span data-ttu-id="43acf-387">Mit dieser Methode werden alle vorhandenen Zeichen nach der Einfügemarke um eine Position für jedes eingefügte Zeichen verschoben.</span><span class="sxs-lookup"><span data-stu-id="43acf-387">This method will shift all existing characters after the insertion point over by one position for each inserted character.</span></span> <span data-ttu-id="43acf-388">Wenn einer der folgenden Fehler auftritt, wird kein Einfügevorgang durchgeführt, und die Methode gibt `false`zurück.</span><span class="sxs-lookup"><span data-stu-id="43acf-388">If one of the following errors occurs, no insertion is performed, and the method returns `false`.</span></span>  
  
-   <span data-ttu-id="43acf-389">Der `pos`-Parameter ist kleiner als 0 (null) oder größer als der <xref:System.ComponentModel.MaskedTextProvider.Length%2A> der formatierten Zeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="43acf-389">The `pos` parameter is less than zero or greater than the <xref:System.ComponentModel.MaskedTextProvider.Length%2A> of the formatted string.</span></span>  
  
-   <span data-ttu-id="43acf-390">Nicht genügend bearbeitbare Zeichen in der formatierten Zeichenfolge an oder hinter der angegebenen Position, `pos`, um alle Zeichen aus der `input` Zeichenfolge einzufügen.</span><span class="sxs-lookup"><span data-stu-id="43acf-390">Not enough editable characters exist in the formatted string at or beyond the specified position, `pos`, to insert all of the characters from the `input` string.</span></span>  
  
-   <span data-ttu-id="43acf-391">Mindestens eines der Einfügezeichen ist kein gültiges Eingabezeichen, da Sie nicht druckbar sind oder nicht mit dem entsprechenden Masken Element übereinstimmen.</span><span class="sxs-lookup"><span data-stu-id="43acf-391">One or more of the insertion characters are not a valid input character because they are not printable or do not match their corresponding mask element.</span></span>  
  
-   <span data-ttu-id="43acf-392">Rechts von der Einfügemarke sind nicht genügend Positionen verfügbar, sodass vorhandene Zeichen nicht verschoben werden können.</span><span class="sxs-lookup"><span data-stu-id="43acf-392">There are not enough available positions to the right of the insertion point, so that existing characters cannot be shifted.</span></span>  
  
-   <span data-ttu-id="43acf-393">Wenn Sie die vorhandenen Zeichen verschieben, würde dies zu einer Verletzung der Maske führen.</span><span class="sxs-lookup"><span data-stu-id="43acf-393">Shifting the existing characters would produce a violation of the mask.</span></span> <span data-ttu-id="43acf-394">Beachten Sie, dass diese Verschiebung während des Einfügens jedes einzelnen Zeichens auftritt.</span><span class="sxs-lookup"><span data-stu-id="43acf-394">Note that this shifting occurs during the insertion of each individual character.</span></span>  
  
 <span data-ttu-id="43acf-395">Eine leere `input` Zeichenfolge führt nicht zu einer Änderung in der formatierten Zeichenfolge, sondern gibt `true`zurück.</span><span class="sxs-lookup"><span data-stu-id="43acf-395">An empty `input` string will cause no change in the formatted string, but will return `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="43acf-396">Der Parameter <paramref name="input" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="43acf-396">The <paramref name="input" /> parameter is <see langword="null" />.</span></span></exception>
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Add" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.AvailableEditPositionCount" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Mask" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Remove" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Replace" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Set" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.ToDisplayString" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.VerifyString" />
      </Docs>
    </Member>
    <Member MemberName="InvalidIndex">
      <MemberSignature Language="C#" Value="public static int InvalidIndex { get; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 InvalidIndex" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.MaskedTextProvider.InvalidIndex" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property InvalidIndex As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property int InvalidIndex { int get(); };" />
      <MemberSignature Language="F#" Value="member this.InvalidIndex : int" Usage="System.ComponentModel.MaskedTextProvider.InvalidIndex" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="43acf-397">Ruft die Obergrenze des ungültigen Indexbereichs ab.</span><span class="sxs-lookup"><span data-stu-id="43acf-397">Gets the upper bound of the range of invalid indexes.</span></span></summary>
        <value><span data-ttu-id="43acf-398">Ein Wert, der den von der Anbieterimplementierung bestimmten größten ungültigen Index darstellt.</span><span class="sxs-lookup"><span data-stu-id="43acf-398">A value representing the largest invalid index, as determined by the provider implementation.</span></span> <span data-ttu-id="43acf-399">Wenn beispielsweise der niedrigste gültige Index 0 ist, gibt diese Eigenschaft -1 zurück.</span><span class="sxs-lookup"><span data-stu-id="43acf-399">For example, if the lowest valid index is 0, this property will return -1.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43acf-400">Die <xref:System.ComponentModel.MaskedTextProvider.InvalidIndex%2A>-Eigenschaft wird zur Darstellung eines Ergebnisses verwendet, das für Indizierungs Vorgänge nicht gültig ist, z. b. die <xref:System.ComponentModel.MaskedTextProvider.LastAssignedPosition%2A>-Methode.</span><span class="sxs-lookup"><span data-stu-id="43acf-400">The <xref:System.ComponentModel.MaskedTextProvider.InvalidIndex%2A> property is used to represent a result that is not valid for indexing operations, such as the <xref:System.ComponentModel.MaskedTextProvider.LastAssignedPosition%2A> method.</span></span>  
  
 <span data-ttu-id="43acf-401">Wenn Sie den Anbieter verwenden oder einen eigenen implementieren, sollten Sie diese Eigenschaft verwenden, um zu entscheiden, ob ein Index ungültig ist, anstatt sich mit ungültigen Werten hart zu codieren.</span><span class="sxs-lookup"><span data-stu-id="43acf-401">When you use the provider or implement your own, you should use this property to decide if an index is invalid, rather than hard-coding knowledge of invalid values.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.LastAssignedPosition" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindEditPositionFrom(System.Int32,System.Boolean)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionInRange(System.Int32,System.Int32,System.Boolean)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindNonEditPositionFrom(System.Int32,System.Boolean)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindNonEditPositionInRange(System.Int32,System.Int32,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="IsAvailablePosition">
      <MemberSignature Language="C#" Value="public bool IsAvailablePosition (int position);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsAvailablePosition(int32 position) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.IsAvailablePosition(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsAvailablePosition (position As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsAvailablePosition(int position);" />
      <MemberSignature Language="F#" Value="member this.IsAvailablePosition : int -&gt; bool" Usage="maskedTextProvider.IsAvailablePosition position" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="position" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="position"><span data-ttu-id="43acf-402">Die zu überprüfende nullbasierte Position in der Maske.</span><span class="sxs-lookup"><span data-stu-id="43acf-402">The zero-based position in the mask to test.</span></span></param>
        <summary><span data-ttu-id="43acf-403">Bestimmt, ob die angegebene Position zugewiesen werden kann.</span><span class="sxs-lookup"><span data-stu-id="43acf-403">Determines whether the specified position is available for assignment.</span></span></summary>
        <returns><span data-ttu-id="43acf-404"><see langword="true" />, wenn die angegebene Position in der formatierten Zeichenfolge bearbeitbar ist und noch nicht zugewiesen wurde, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="43acf-404"><see langword="true" /> if the specified position in the formatted string is editable and has not been assigned to yet; otherwise <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43acf-405">Die <xref:System.ComponentModel.MaskedTextProvider.IsAvailablePosition%2A>-Methode gibt `true` nur dann zurück, wenn alle der folgenden Bedingungen zutreffen:</span><span class="sxs-lookup"><span data-stu-id="43acf-405">The <xref:System.ComponentModel.MaskedTextProvider.IsAvailablePosition%2A> method returns `true` only if all of the following conditions are true:</span></span>  
  
-   <span data-ttu-id="43acf-406">Der `pos`-Parameter liegt innerhalb der Grenzen der formatierten Zeichenfolge. Das heißt, der Wert ist größer als oder gleich 0 (null) und kleiner als die <xref:System.ComponentModel.MaskedTextProvider.Length%2A> der formatierten Zeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="43acf-406">The `pos` parameter is within the bounds of the formatted string; that is, its value is greater than or equal to zero and less than the <xref:System.ComponentModel.MaskedTextProvider.Length%2A> of the formatted string.</span></span>  
  
-   <span data-ttu-id="43acf-407">Die angegebene Position ist ein bearbeitbares Zeichen.</span><span class="sxs-lookup"><span data-stu-id="43acf-407">The specified position is an editable character.</span></span>  
  
-   <span data-ttu-id="43acf-408">Dieser Position wurde noch kein Zeichen zugewiesen.</span><span class="sxs-lookup"><span data-stu-id="43acf-408">A character has not already been assigned to this position.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsEditPosition(System.Int32)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsValidInputChar(System.Char)" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.LastAssignedPosition" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindUnassignedEditPositionFrom(System.Int32,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="IsEditPosition">
      <MemberSignature Language="C#" Value="public bool IsEditPosition (int position);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsEditPosition(int32 position) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.IsEditPosition(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsEditPosition (position As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsEditPosition(int position);" />
      <MemberSignature Language="F#" Value="member this.IsEditPosition : int -&gt; bool" Usage="maskedTextProvider.IsEditPosition position" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="position" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="position"><span data-ttu-id="43acf-409">Die zu überprüfende nullbasierte Position in der Maske.</span><span class="sxs-lookup"><span data-stu-id="43acf-409">The zero-based position in the mask to test.</span></span></param>
        <summary><span data-ttu-id="43acf-410">Bestimmt, ob die angegebene Position bearbeitbar ist.</span><span class="sxs-lookup"><span data-stu-id="43acf-410">Determines whether the specified position is editable.</span></span></summary>
        <returns><span data-ttu-id="43acf-411"><see langword="true" />, wenn die angegebene Position in der formatierten Zeichenfolge bearbeitbar ist, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="43acf-411"><see langword="true" /> if the specified position in the formatted string is editable; otherwise <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43acf-412">Die <xref:System.ComponentModel.MaskedTextProvider.IsEditPosition%2A>-Methode gibt `true` nur dann zurück, wenn die beiden folgenden Bedingungen zutreffen:</span><span class="sxs-lookup"><span data-stu-id="43acf-412">The <xref:System.ComponentModel.MaskedTextProvider.IsEditPosition%2A> method returns `true` only if both of the following conditions are true:</span></span>  
  
-   <span data-ttu-id="43acf-413">Der `pos`-Parameter liegt innerhalb der Grenzen der formatierten Zeichenfolge. Das heißt, der Wert ist größer als oder gleich 0 (null) und kleiner als die <xref:System.ComponentModel.MaskedTextProvider.Length%2A> der formatierten Zeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="43acf-413">The `pos` parameter is within the bounds of the formatted string; that is, its value is greater than or equal to zero and less than the <xref:System.ComponentModel.MaskedTextProvider.Length%2A> of the formatted string.</span></span>  
  
-   <span data-ttu-id="43acf-414">Die angegebene Position ist ein bearbeitbares Zeichen.</span><span class="sxs-lookup"><span data-stu-id="43acf-414">The specified position is an editable character.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsAvailablePosition(System.Int32)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsValidInputChar(System.Char)" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.EditPositionCount" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.EditPositions" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindEditPositionFrom(System.Int32,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="IsPassword">
      <MemberSignature Language="C#" Value="public bool IsPassword { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsPassword" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.MaskedTextProvider.IsPassword" />
      <MemberSignature Language="VB.NET" Value="Public Property IsPassword As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsPassword { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsPassword : bool with get, set" Usage="System.ComponentModel.MaskedTextProvider.IsPassword" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="43acf-415">Ruft einen Wert ab, der bestimmt, ob auf die formatierte Zeichenfolge Kennwortschutz angewendet werden soll, oder legt einen solchen Wert fest.</span><span class="sxs-lookup"><span data-stu-id="43acf-415">Gets or sets a value that determines whether password protection should be applied to the formatted string.</span></span></summary>
        <value><span data-ttu-id="43acf-416"><see langword="true" />, wenn die Eingabezeichenfolge als Kennwortzeichenfolge behandelt werden soll, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="43acf-416"><see langword="true" /> if the input string is to be treated as a password string; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="43acf-417">Der Standardwert lautet <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="43acf-417">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43acf-418">Der Kenn Wort Schutz kann mit einer der folgenden zwei Methoden initiiert werden:</span><span class="sxs-lookup"><span data-stu-id="43acf-418">Password protection can be initiated using one of the following two ways:</span></span>  
  
-   <span data-ttu-id="43acf-419">Festlegen der <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A>-Eigenschaft auf einen Wert, der nicht`null` ist.</span><span class="sxs-lookup"><span data-stu-id="43acf-419">Setting the <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A> property to a non-`null` value.</span></span>  
  
-   <span data-ttu-id="43acf-420">Wenn Sie die <xref:System.ComponentModel.MaskedTextProvider.IsPassword%2A>-Eigenschaft auf `true`festlegen, wird auch die Eigenschaft <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A> auf den <xref:System.ComponentModel.MaskedTextProvider.DefaultPasswordChar%2A> Wert festgelegt.</span><span class="sxs-lookup"><span data-stu-id="43acf-420">Setting the <xref:System.ComponentModel.MaskedTextProvider.IsPassword%2A> property to `true`, which also sets the <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A> property to the <xref:System.ComponentModel.MaskedTextProvider.DefaultPasswordChar%2A> value.</span></span>  
  
 <span data-ttu-id="43acf-421"><xref:System.ComponentModel.MaskedTextProvider.IsPassword%2A> wird von den Methoden <xref:System.ComponentModel.MaskedTextProvider.ToDisplayString%2A> und <xref:System.ComponentModel.MaskedTextProvider.ToString%2A> verwendet, um zu bestimmen, ob die eigentlichen Eingabezeichen angezeigt oder mit <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A>maskiert werden sollen.</span><span class="sxs-lookup"><span data-stu-id="43acf-421"><xref:System.ComponentModel.MaskedTextProvider.IsPassword%2A> is used by the <xref:System.ComponentModel.MaskedTextProvider.ToDisplayString%2A> and <xref:System.ComponentModel.MaskedTextProvider.ToString%2A> methods to determine whether to reveal the actual input characters or obscure them with <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.PasswordChar" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.DefaultPasswordChar" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.ToDisplayString" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.ToString" />
      </Docs>
    </Member>
    <Member MemberName="IsValidInputChar">
      <MemberSignature Language="C#" Value="public static bool IsValidInputChar (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsValidInputChar(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.IsValidInputChar(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsValidInputChar (c As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsValidInputChar(char c);" />
      <MemberSignature Language="F#" Value="static member IsValidInputChar : char -&gt; bool" Usage="System.ComponentModel.MaskedTextProvider.IsValidInputChar c" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c"><span data-ttu-id="43acf-422">Der zu testende <see cref="T:System.Char" />-Wert.</span><span class="sxs-lookup"><span data-stu-id="43acf-422">The <see cref="T:System.Char" /> value to test.</span></span></param>
        <summary><span data-ttu-id="43acf-423">Bestimmt, ob das angegebene Zeichen ein gültiges Eingabezeichen ist.</span><span class="sxs-lookup"><span data-stu-id="43acf-423">Determines whether the specified character is a valid input character.</span></span></summary>
        <returns><span data-ttu-id="43acf-424"><see langword="true" />, wenn das angegebene Zeichen einen gültigen Eingabewert enthält, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="43acf-424"><see langword="true" /> if the specified character contains a valid input value; otherwise <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43acf-425">Gültige Eingabezeichen sind alle druckbaren Zeichen, einschließlich Buchstaben, Ziffern, Interpunktions Zeichen, Symbolen und Leerzeichen.</span><span class="sxs-lookup"><span data-stu-id="43acf-425">Valid input characters include all printable characters, which include letters, digits, punctuation, symbols and the space character.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsEditPosition(System.Int32)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsAvailablePosition(System.Int32)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsValidMaskChar(System.Char)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsValidPasswordChar(System.Char)" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.AsciiOnly" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.AllowPromptAsInput" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.VerifyChar(System.Char,System.Int32,System.ComponentModel.MaskedTextResultHint@)" />
      </Docs>
    </Member>
    <Member MemberName="IsValidMaskChar">
      <MemberSignature Language="C#" Value="public static bool IsValidMaskChar (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsValidMaskChar(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.IsValidMaskChar(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsValidMaskChar (c As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsValidMaskChar(char c);" />
      <MemberSignature Language="F#" Value="static member IsValidMaskChar : char -&gt; bool" Usage="System.ComponentModel.MaskedTextProvider.IsValidMaskChar c" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c"><span data-ttu-id="43acf-426">Der zu testende <see cref="T:System.Char" />-Wert.</span><span class="sxs-lookup"><span data-stu-id="43acf-426">The <see cref="T:System.Char" /> value to test.</span></span></param>
        <summary><span data-ttu-id="43acf-427">Bestimmt, ob das angegebene Zeichen ein gültiges Maskenzeichen ist.</span><span class="sxs-lookup"><span data-stu-id="43acf-427">Determines whether the specified character is a valid mask character.</span></span></summary>
        <returns><span data-ttu-id="43acf-428"><see langword="true" />, wenn das angegebene Zeichen einen gültigen Maskenwert enthält, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="43acf-428"><see langword="true" /> if the specified character contains a valid mask value; otherwise <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43acf-429">Gültige Masken Zeichen umfassen alle druckbaren Zeichen, einschließlich Buchstaben, Ziffern, Interpunktions Zeichen, Symbolen und Leerzeichen.</span><span class="sxs-lookup"><span data-stu-id="43acf-429">Valid mask characters include all printable characters, which include letters, digits, punctuation, symbols and the space character.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsValidInputChar(System.Char)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsValidPasswordChar(System.Char)" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Mask" />
      </Docs>
    </Member>
    <Member MemberName="IsValidPasswordChar">
      <MemberSignature Language="C#" Value="public static bool IsValidPasswordChar (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsValidPasswordChar(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.IsValidPasswordChar(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsValidPasswordChar (c As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsValidPasswordChar(char c);" />
      <MemberSignature Language="F#" Value="static member IsValidPasswordChar : char -&gt; bool" Usage="System.ComponentModel.MaskedTextProvider.IsValidPasswordChar c" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c"><span data-ttu-id="43acf-430">Der zu testende <see cref="T:System.Char" />-Wert.</span><span class="sxs-lookup"><span data-stu-id="43acf-430">The <see cref="T:System.Char" /> value to test.</span></span></param>
        <summary><span data-ttu-id="43acf-431">Bestimmt, ob das angegebene Zeichen ein gültiges Kennwortzeichen ist.</span><span class="sxs-lookup"><span data-stu-id="43acf-431">Determines whether the specified character is a valid password character.</span></span></summary>
        <returns><span data-ttu-id="43acf-432"><see langword="true" />, wenn das angegebene Zeichen einen gültigen Kennwortwert enthält, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="43acf-432"><see langword="true" /> if the specified character contains a valid password value; otherwise <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43acf-433">Gültige Kenn Wort Zeichen umfassen alle druckbaren Zeichen und das NULL-Zeichen, das verwendet wird, um die Kenn Wort Funktionalität zu deaktivieren.</span><span class="sxs-lookup"><span data-stu-id="43acf-433">Valid password characters include all printable characters and the null character, which is used to disable password functionality.</span></span> <span data-ttu-id="43acf-434">Zu den druckbaren Zeichen zählen Buchstaben, Ziffern, Interpunktions Zeichen, Symbole und Leerzeichen.</span><span class="sxs-lookup"><span data-stu-id="43acf-434">Printable characters include letters, digits, punctuation, symbols and the space character.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.IsPassword" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.PasswordChar" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsValidInputChar(System.Char)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsValidMaskChar(System.Char)" />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public char this[int index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance char Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.MaskedTextProvider.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(index As Integer) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property char default[int] { char get(int index); };" />
      <MemberSignature Language="F#" Value="member this.Item(int) : char" Usage="System.ComponentModel.MaskedTextProvider.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="43acf-435">Ein nullbasierter Index des abzurufenden Elements.</span><span class="sxs-lookup"><span data-stu-id="43acf-435">A zero-based index of the element to retrieve.</span></span></param>
        <summary><span data-ttu-id="43acf-436">Ruft das Element an der angegebenen Position in der formatierten Zeichenfolge ab.</span><span class="sxs-lookup"><span data-stu-id="43acf-436">Gets the element at the specified position in the formatted string.</span></span></summary>
        <value><span data-ttu-id="43acf-437">Der <see cref="T:System.Char" /> an der angegebenen Position in der formatierten Zeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="43acf-437">The <see cref="T:System.Char" /> at the specified position in the formatted string.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43acf-438">Die <xref:System.ComponentModel.MaskedTextProvider.Item%2A>-Eigenschaft ist der Standardindexer für die <xref:System.ComponentModel.MaskedTextProvider>-Klasse.</span><span class="sxs-lookup"><span data-stu-id="43acf-438">The <xref:System.ComponentModel.MaskedTextProvider.Item%2A> property is the standard indexer for the <xref:System.ComponentModel.MaskedTextProvider> class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException"><span data-ttu-id="43acf-439"><paramref name="index" /> ist kleiner als 0 (null) oder größer oder gleich der <see cref="P:System.ComponentModel.MaskedTextProvider.Length" /> der Maske.</span><span class="sxs-lookup"><span data-stu-id="43acf-439"><paramref name="index" /> is less than zero or greater than or equal to the <see cref="P:System.ComponentModel.MaskedTextProvider.Length" /> of the mask.</span></span></exception>
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Mask" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Length" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.EditPositions" />
      </Docs>
    </Member>
    <Member MemberName="LastAssignedPosition">
      <MemberSignature Language="C#" Value="public int LastAssignedPosition { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 LastAssignedPosition" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.MaskedTextProvider.LastAssignedPosition" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LastAssignedPosition As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int LastAssignedPosition { int get(); };" />
      <MemberSignature Language="F#" Value="member this.LastAssignedPosition : int" Usage="System.ComponentModel.MaskedTextProvider.LastAssignedPosition" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="43acf-440">Ruft in der Maske den Index des ganz rechts stehenden, der Maske zugeordneten Eingabezeichens ab.</span><span class="sxs-lookup"><span data-stu-id="43acf-440">Gets the index in the mask of the rightmost input character that has been assigned to the mask.</span></span></summary>
        <value><span data-ttu-id="43acf-441">Wenn der Maske mindestens ein Eingabezeichen zugeordnet wurde, ein <see cref="T:System.Int32" /> mit dem Index der am weitesten rechts zugeordneten Position, andernfalls<see cref="P:System.ComponentModel.MaskedTextProvider.InvalidIndex" />, wenn keine Position zugeordnet wurde.</span><span class="sxs-lookup"><span data-stu-id="43acf-441">If at least one input character has been assigned to the mask, an <see cref="T:System.Int32" /> containing the index of rightmost assigned position; otherwise, if no position has been assigned, <see cref="P:System.ComponentModel.MaskedTextProvider.InvalidIndex" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43acf-442">Die <xref:System.ComponentModel.MaskedTextProvider.LastAssignedPosition%2A>-Eigenschaft stellt die weit entfernte Bearbeitungs Position in der Maske relativ zum Ursprung dar, der ein Eingabezeichen zugewiesen wurde.</span><span class="sxs-lookup"><span data-stu-id="43acf-442">The <xref:System.ComponentModel.MaskedTextProvider.LastAssignedPosition%2A> property represents the farthest edit position in the mask, relative to the origin, that has been assigned an input character.</span></span> <span data-ttu-id="43acf-443">Für Sprachen, die von links nach rechts (LTR) gelesen werden, wie z. b. Englisch, ist dies die am weitesten rechts zugewiesene Position. für Sprachen, die von rechts nach links (RTL) gelesen werden, wäre dies die linke Position.</span><span class="sxs-lookup"><span data-stu-id="43acf-443">For languages read left-to-right (LTR), such as English, this is the rightmost assigned position; for languages read right-to-left (RTL), this would be the leftmost position.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.AssignedEditPositionCount" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.EditPositionCount" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Length" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Item(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Length">
      <MemberSignature Language="C#" Value="public int Length { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Length" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.MaskedTextProvider.Length" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Length As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Length { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Length : int" Usage="System.ComponentModel.MaskedTextProvider.Length" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="43acf-444">Ruft die Länge der Maske ohne Maskenmodifiziererzeichen ab.</span><span class="sxs-lookup"><span data-stu-id="43acf-444">Gets the length of the mask, absent any mask modifier characters.</span></span></summary>
        <value><span data-ttu-id="43acf-445">Ein <see cref="T:System.Int32" /> mit der Anzahl der in der Maske enthaltenen Positionen mit Ausnahme von Zeichen zur Änderung der Maskeneingabe.</span><span class="sxs-lookup"><span data-stu-id="43acf-445">An <see cref="T:System.Int32" /> containing the number of positions in the mask, excluding characters that modify mask input.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43acf-446">Die <xref:System.ComponentModel.MaskedTextProvider.Length%2A>-Eigenschaft stellt die Gesamtzahl der Zeichen in der Maske dar, einschließlich literaler und bearbeitbarer Zeichen.</span><span class="sxs-lookup"><span data-stu-id="43acf-446">The <xref:System.ComponentModel.MaskedTextProvider.Length%2A> property represents the total number of characters in the mask, including both the literal and editable characters.</span></span> <span data-ttu-id="43acf-447">Die Anzahl der Literalzeichen kann bestimmt werden, indem der Wert der <xref:System.ComponentModel.MaskedTextProvider.EditPositionCount%2A> vom <xref:System.ComponentModel.MaskedTextProvider.Length%2A>subtrahieren wird.</span><span class="sxs-lookup"><span data-stu-id="43acf-447">The number of literal characters can be determined by subtracting the value of the <xref:System.ComponentModel.MaskedTextProvider.EditPositionCount%2A> from the <xref:System.ComponentModel.MaskedTextProvider.Length%2A>.</span></span>  
  
 <span data-ttu-id="43acf-448"><xref:System.ComponentModel.MaskedTextProvider.Length%2A> beschreibt auch die Länge der formatierten Zeichenfolge, einschließlich der Eingabezeichen, Literale und Eingabe Aufforderungs Zeichen.</span><span class="sxs-lookup"><span data-stu-id="43acf-448"><xref:System.ComponentModel.MaskedTextProvider.Length%2A> also describes the length of the formatted string, including input characters, literals, and prompt characters.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Mask" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Item(System.Int32)" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.EditPositionCount" />
      </Docs>
    </Member>
    <Member MemberName="Mask">
      <MemberSignature Language="C#" Value="public string Mask { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Mask" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.MaskedTextProvider.Mask" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Mask As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Mask { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Mask : string" Usage="System.ComponentModel.MaskedTextProvider.Mask" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="43acf-449">Ruft die Eingabemaske ab.</span><span class="sxs-lookup"><span data-stu-id="43acf-449">Gets the input mask.</span></span></summary>
        <value><span data-ttu-id="43acf-450">Ein <see cref="T:System.String" /> mit der vollständigen Maske.</span><span class="sxs-lookup"><span data-stu-id="43acf-450">A <see cref="T:System.String" /> containing the full mask.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43acf-451">Die <xref:System.ComponentModel.MaskedTextProvider.Mask%2A>-Eigenschaft wird im <xref:System.ComponentModel.MaskedTextProvider.%23ctor%2A>-Konstruktor festgelegt.</span><span class="sxs-lookup"><span data-stu-id="43acf-451">The <xref:System.ComponentModel.MaskedTextProvider.Mask%2A> property is set in the <xref:System.ComponentModel.MaskedTextProvider.%23ctor%2A> constructor.</span></span> <span data-ttu-id="43acf-452">Diese Maske darf nur gültige Zeichen enthalten, die von der Maskierungs Sprache definiert werden.</span><span class="sxs-lookup"><span data-stu-id="43acf-452">This mask must contain only valid characters as defined by the masking language.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.Mask" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.#ctor" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Length" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Item(System.Int32)" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.MaskFull" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.MaskCompleted" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.Clone" />
      </Docs>
    </Member>
    <Member MemberName="MaskCompleted">
      <MemberSignature Language="C#" Value="public bool MaskCompleted { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool MaskCompleted" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.MaskedTextProvider.MaskCompleted" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MaskCompleted As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool MaskCompleted { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.MaskCompleted : bool" Usage="System.ComponentModel.MaskedTextProvider.MaskCompleted" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="43acf-453">Ruft einen Wert ab, der angibt, ob in der formatierten Zeichenfolge alle erforderlichen Eingaben erfolgt sind.</span><span class="sxs-lookup"><span data-stu-id="43acf-453">Gets a value indicating whether all required inputs have been entered into the formatted string.</span></span></summary>
        <value><span data-ttu-id="43acf-454"><see langword="true" />, wenn alle erforderlichen Eingaben in der Maske erfolgt sind, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="43acf-454"><see langword="true" /> if all required input has been entered into the mask; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43acf-455">Die <xref:System.ComponentModel.MaskedTextProvider.MaskCompleted%2A>-Eigenschaft prüft nur erforderliche Eingabeelemente.</span><span class="sxs-lookup"><span data-stu-id="43acf-455">The <xref:System.ComponentModel.MaskedTextProvider.MaskCompleted%2A> property checks only required input elements.</span></span> <span data-ttu-id="43acf-456">Verwenden Sie stattdessen die <xref:System.Windows.Forms.MaskedTextBox.MaskFull%2A?displayProperty=nameWithType>-Eigenschaft der <xref:System.Windows.Forms.MaskedTextBox>-Klasse, um zu bestimmen, ob alle erforderlichen und optionalen Eingabeelemente eingegeben wurden.</span><span class="sxs-lookup"><span data-stu-id="43acf-456">To determine whether all required and optional input elements have been entered, use the <xref:System.Windows.Forms.MaskedTextBox.MaskFull%2A?displayProperty=nameWithType> property of the <xref:System.Windows.Forms.MaskedTextBox> class instead.</span></span>  
  
 <span data-ttu-id="43acf-457">Der aktuelle Wert der <xref:System.ComponentModel.MaskedTextProvider.Mask%2A>-Eigenschaft bestimmt, welche Formatierungs Elemente als erforderlich angesehen werden und welche optional sind.</span><span class="sxs-lookup"><span data-stu-id="43acf-457">The current value of the <xref:System.ComponentModel.MaskedTextProvider.Mask%2A> property determines which formatting elements are considered required and which are optional.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.MaskCompleted" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Mask" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.MaskFull" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Length" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.EditPositionCount" />
      </Docs>
    </Member>
    <Member MemberName="MaskFull">
      <MemberSignature Language="C#" Value="public bool MaskFull { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool MaskFull" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.MaskedTextProvider.MaskFull" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MaskFull As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool MaskFull { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.MaskFull : bool" Usage="System.ComponentModel.MaskedTextProvider.MaskFull" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="43acf-458">Ruft einen Wert ab, der angibt, ob in der formatierten Zeichenfolge alle erforderlichen und optionalen Eingaben erfolgt sind.</span><span class="sxs-lookup"><span data-stu-id="43acf-458">Gets a value indicating whether all required and optional inputs have been entered into the formatted string.</span></span></summary>
        <value><span data-ttu-id="43acf-459"><see langword="true" />, wenn alle erforderlichen und optionalen Eingaben erfolgt sind, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="43acf-459"><see langword="true" /> if all required and optional inputs have been entered; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43acf-460">Verwenden Sie stattdessen die <xref:System.ComponentModel.MaskedTextProvider.MaskCompleted%2A>-Eigenschaft, um zu überprüfen, ob nur erforderliche Eingabeelemente eingegeben wurden.</span><span class="sxs-lookup"><span data-stu-id="43acf-460">To verify if only required input elements have been entered, use the <xref:System.ComponentModel.MaskedTextProvider.MaskCompleted%2A> property instead.</span></span> <span data-ttu-id="43acf-461">Der aktuelle Wert der <xref:System.ComponentModel.MaskedTextProvider.Mask%2A>-Eigenschaft bestimmt, welche Formatierungs Elemente als erforderlich angesehen werden und welche optional sind.</span><span class="sxs-lookup"><span data-stu-id="43acf-461">The current value of the <xref:System.ComponentModel.MaskedTextProvider.Mask%2A> property determines which formatting elements are considered required and which are optional.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.MaskFull" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Mask" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.MaskCompleted" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Length" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.EditPositionCount" />
      </Docs>
    </Member>
    <Member MemberName="PasswordChar">
      <MemberSignature Language="C#" Value="public char PasswordChar { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance char PasswordChar" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.MaskedTextProvider.PasswordChar" />
      <MemberSignature Language="VB.NET" Value="Public Property PasswordChar As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property char PasswordChar { char get(); void set(char value); };" />
      <MemberSignature Language="F#" Value="member this.PasswordChar : char with get, set" Usage="System.ComponentModel.MaskedTextProvider.PasswordChar" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="43acf-462">Ruft das Zeichen ab, das das eigentliche Eingabezeichen ersetzen soll, oder legt dieses fest.</span><span class="sxs-lookup"><span data-stu-id="43acf-462">Gets or sets the character to be substituted for the actual input characters.</span></span></summary>
        <value><span data-ttu-id="43acf-463">Der als Kennwortzeichen verwendete <see cref="T:System.Char" />-Wert.</span><span class="sxs-lookup"><span data-stu-id="43acf-463">The <see cref="T:System.Char" /> value used as the password character.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43acf-464">Bei vertraulichen Benutzereingaben ist es üblich, die tatsächlichen Informationen zu verbergen, die der Benutzer während der Ausgabe Vorgänge eingegeben hat.</span><span class="sxs-lookup"><span data-stu-id="43acf-464">For sensitive user input, it is common practice to conceal the actual information entered by the user during output operations.</span></span> <span data-ttu-id="43acf-465">Wenn die <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A>-Eigenschaft auf ein nicht`null` Zeichen festgelegt ist, verdecken Ausgabemethoden wie <xref:System.ComponentModel.MaskedTextProvider.ToDisplayString%2A> und <xref:System.ComponentModel.MaskedTextProvider.ToString%2A> die Eingabezeichen mit dem angegebenen Kenn Wort Zeichen.</span><span class="sxs-lookup"><span data-stu-id="43acf-465">If the <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A> property is set to a non-`null` character, output methods such as <xref:System.ComponentModel.MaskedTextProvider.ToDisplayString%2A> and <xref:System.ComponentModel.MaskedTextProvider.ToString%2A> will obscure the input characters with the specified password character.</span></span> <span data-ttu-id="43acf-466">Wenn diese Eigenschaft auf `null` festgelegt wird, werden Kenn Wort Schutzfunktionen deaktiviert.</span><span class="sxs-lookup"><span data-stu-id="43acf-466">Setting this property to `null` will disable password protection functionality.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="43acf-467">Das bei der Festlegung dieser Eigenschaft angegebene Kennwortzeichen entspricht dem aktuellen Aufforderungszeichen <see cref="P:System.ComponentModel.MaskedTextProvider.PromptChar" />.</span><span class="sxs-lookup"><span data-stu-id="43acf-467">The password character specified when setting this property is the same as the current prompt character, <see cref="P:System.ComponentModel.MaskedTextProvider.PromptChar" />.</span></span> <span data-ttu-id="43acf-468">Die zwei Zeichen müssen unterschiedlich sein.</span><span class="sxs-lookup"><span data-stu-id="43acf-468">The two are required to be different.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="43acf-469">Das bei der Festlegung dieser Eigenschaft angegebene Zeichen ist kein durch die <see cref="M:System.ComponentModel.MaskedTextProvider.IsValidPasswordChar(System.Char)" />-Methode festgelegtes gültiges Kennwortzeichen.</span><span class="sxs-lookup"><span data-stu-id="43acf-469">The character specified when setting this property is not a valid password character, as determined by the <see cref="M:System.ComponentModel.MaskedTextProvider.IsValidPasswordChar(System.Char)" /> method.</span></span></exception>
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.PasswordChar" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.DefaultPasswordChar" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.IsPassword" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsValidPasswordChar(System.Char)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.ToDisplayString" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.ToString" />
      </Docs>
    </Member>
    <Member MemberName="PromptChar">
      <MemberSignature Language="C#" Value="public char PromptChar { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance char PromptChar" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.MaskedTextProvider.PromptChar" />
      <MemberSignature Language="VB.NET" Value="Public Property PromptChar As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property char PromptChar { char get(); void set(char value); };" />
      <MemberSignature Language="F#" Value="member this.PromptChar : char with get, set" Usage="System.ComponentModel.MaskedTextProvider.PromptChar" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="43acf-470">Ruft das Zeichen ab, mit dem das Nichtvorhandensein von Benutzereingaben für alle verfügbaren Bearbeitungspositionen dargestellt wird, oder legt dieses Zeichen fest.</span><span class="sxs-lookup"><span data-stu-id="43acf-470">Gets or sets the character used to represent the absence of user input for all available edit positions.</span></span></summary>
        <value><span data-ttu-id="43acf-471">Das Zeichen, über das der Benutzer zur Eingabe aufgefordert wird.</span><span class="sxs-lookup"><span data-stu-id="43acf-471">The character used to prompt the user for input.</span></span> <span data-ttu-id="43acf-472">Der Standardwert ist ein Unterstrich (_).</span><span class="sxs-lookup"><span data-stu-id="43acf-472">The default is an underscore (_).</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43acf-473">Die <xref:System.ComponentModel.MaskedTextProvider.PromptChar%2A>-Eigenschaft stellt das Aufforderungs Zeichen dar, das von den Methoden <xref:System.ComponentModel.MaskedTextProvider.ToDisplayString%2A> und <xref:System.ComponentModel.MaskedTextProvider.ToString%2A> verwendet wird, um den aktuellen Zustand der formatierten Eingabe Zeichenfolge darzustellen.</span><span class="sxs-lookup"><span data-stu-id="43acf-473">The <xref:System.ComponentModel.MaskedTextProvider.PromptChar%2A> property represents the prompt character that is used by the <xref:System.ComponentModel.MaskedTextProvider.ToDisplayString%2A> and <xref:System.ComponentModel.MaskedTextProvider.ToString%2A> methods to represent the current state of the formatted input string.</span></span> <span data-ttu-id="43acf-474">Ein Eingabe Aufforderungs Zeichen wird in bearbeitbare Positionen eingefügt, denen noch kein Eingabe Wert zugewiesen wurde.</span><span class="sxs-lookup"><span data-stu-id="43acf-474">A prompt character is placed in editable positions that have not yet been assigned an input value.</span></span> <span data-ttu-id="43acf-475">Einige Versionen der <xref:System.ComponentModel.MaskedTextProvider.ToString%2A>-Methode hängen auch vom Wert der <xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A>-Eigenschaft ab.</span><span class="sxs-lookup"><span data-stu-id="43acf-475">Some versions of the <xref:System.ComponentModel.MaskedTextProvider.ToString%2A> method also depend on the value of the <xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="43acf-476">Das bei der Festlegung dieser Eigenschaft angegebene Aufforderungszeichen entspricht dem aktuellen Kennwortzeichen <see cref="P:System.ComponentModel.MaskedTextProvider.PasswordChar" />.</span><span class="sxs-lookup"><span data-stu-id="43acf-476">The prompt character specified when setting this property is the same as the current password character, <see cref="P:System.ComponentModel.MaskedTextProvider.PasswordChar" />.</span></span> <span data-ttu-id="43acf-477">Die zwei Zeichen müssen unterschiedlich sein.</span><span class="sxs-lookup"><span data-stu-id="43acf-477">The two are required to be different.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="43acf-478">Das bei der Festlegung dieser Eigenschaft angegebene Zeichen ist kein durch die <see cref="M:System.ComponentModel.MaskedTextProvider.IsValidPasswordChar(System.Char)" />-Methode festgelegtes gültiges Kennwortzeichen.</span><span class="sxs-lookup"><span data-stu-id="43acf-478">The character specified when setting this property is not a valid password character, as determined by the <see cref="M:System.ComponentModel.MaskedTextProvider.IsValidPasswordChar(System.Char)" /> method.</span></span></exception>
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.PromptChar" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.IncludePrompt" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.ResetOnPrompt" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.AssignedEditPositionCount" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.AvailableEditPositionCount" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.ToDisplayString" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.ToString" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Remove">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="43acf-479">Entfernt das zuletzt zugewiesene Zeichen aus der formatierten Zeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="43acf-479">Removes the last assigned character from the formatted string.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public bool Remove ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Remove() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.Remove" />
      <MemberSignature Language="VB.NET" Value="Public Function Remove () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Remove();" />
      <MemberSignature Language="F#" Value="member this.Remove : unit -&gt; bool" Usage="maskedTextProvider.Remove " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="43acf-480">Entfernt das zuletzt zugewiesene Zeichen aus der formatierten Zeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="43acf-480">Removes the last assigned character from the formatted string.</span></span></summary>
        <returns><span data-ttu-id="43acf-481"><see langword="true" />, wenn das Zeichen erfolgreich entfernt wurde, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="43acf-481"><see langword="true" /> if the character was successfully removed; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43acf-482">Die <xref:System.ComponentModel.MaskedTextProvider.Remove%2A>-Methode hat keine Auswirkungen, wenn der Maske noch keine Zeichen zugewiesen sind.</span><span class="sxs-lookup"><span data-stu-id="43acf-482">The <xref:System.ComponentModel.MaskedTextProvider.Remove%2A> method has no effect if there are no characters assigned to the mask yet.</span></span>  
  
 <span data-ttu-id="43acf-483">Wenn das zuletzt zugewiesene Zeichen aus der formatierten Zeichenfolge entfernt wird, wird das bearbeitbare Masken Zeichen für diese Position zurückgesetzt und ermöglicht nachfolgende Eingaben.</span><span class="sxs-lookup"><span data-stu-id="43acf-483">When the last assigned character is removed from the formatted string, the editable mask character is reset for that position, allowing subsequent input.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.LastAssignedPosition" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Add" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Clear" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.InsertAt" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.RemoveAt" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Replace" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Set" />
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public bool Remove (out int testPosition, out System.ComponentModel.MaskedTextResultHint resultHint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Remove([out] int32&amp; testPosition, [out] valuetype System.ComponentModel.MaskedTextResultHint&amp; resultHint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.Remove(System.Int32@,System.ComponentModel.MaskedTextResultHint@)" />
      <MemberSignature Language="VB.NET" Value="Public Function Remove (ByRef testPosition As Integer, ByRef resultHint As MaskedTextResultHint) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Remove([Runtime::InteropServices::Out] int % testPosition, [Runtime::InteropServices::Out] System::ComponentModel::MaskedTextResultHint % resultHint);" />
      <MemberSignature Language="F#" Value="member this.Remove : int * MaskedTextResultHint -&gt; bool" Usage="maskedTextProvider.Remove (testPosition, resultHint)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="testPosition" Type="System.Int32" RefType="out" />
        <Parameter Name="resultHint" Type="System.ComponentModel.MaskedTextResultHint" RefType="out" />
      </Parameters>
      <Docs>
        <param name="testPosition"><span data-ttu-id="43acf-484">Die nullbasierte Position in der formatierten Zeichenfolge, an der das Zeichen entfernt wurde.</span><span class="sxs-lookup"><span data-stu-id="43acf-484">The zero-based position in the formatted string where the character was actually removed.</span></span> <span data-ttu-id="43acf-485">Ein Ausgabeparameter.</span><span class="sxs-lookup"><span data-stu-id="43acf-485">An output parameter.</span></span></param>
        <param name="resultHint"><span data-ttu-id="43acf-486">Ein <see cref="T:System.ComponentModel.MaskedTextResultHint" />, mit dem das Ergebnis des Vorgangs kurz beschrieben wird.</span><span class="sxs-lookup"><span data-stu-id="43acf-486">A <see cref="T:System.ComponentModel.MaskedTextResultHint" /> that succinctly describes the result of the operation.</span></span> <span data-ttu-id="43acf-487">Ein Ausgabeparameter.</span><span class="sxs-lookup"><span data-stu-id="43acf-487">An output parameter.</span></span></param>
        <summary><span data-ttu-id="43acf-488">Entfernt das zuletzt zugewiesene Zeichen aus der formatierten Zeichenfolge und gibt dann die Löschposition sowie beschreibende Informationen aus.</span><span class="sxs-lookup"><span data-stu-id="43acf-488">Removes the last assigned character from the formatted string, and then outputs the removal position and descriptive information.</span></span></summary>
        <returns><span data-ttu-id="43acf-489"><see langword="true" />, wenn das Zeichen erfolgreich entfernt wurde, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="43acf-489"><see langword="true" /> if the character was successfully removed; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43acf-490">Die <xref:System.ComponentModel.MaskedTextProvider.Remove%2A>-Methode hat keine Auswirkungen, wenn der Maske noch keine Zeichen zugewiesen sind.</span><span class="sxs-lookup"><span data-stu-id="43acf-490">The <xref:System.ComponentModel.MaskedTextProvider.Remove%2A> method has no effect if there are no characters assigned to the mask yet.</span></span>  
  
 <span data-ttu-id="43acf-491">Wenn das zuletzt zugewiesene Zeichen aus der formatierten Zeichenfolge entfernt wird, wird das bearbeitbare Masken Zeichen für diese Position zurückgesetzt und ermöglicht nachfolgende Eingaben.</span><span class="sxs-lookup"><span data-stu-id="43acf-491">When the last assigned character is removed from the formatted string, the editable mask character is reset for that position, allowing subsequent input.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.LastAssignedPosition" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Add" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Clear" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.InsertAt" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.RemoveAt" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Replace" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Set" />
      </Docs>
    </Member>
    <MemberGroup MemberName="RemoveAt">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="43acf-492">Entfernt ein oder mehrere zugewiesene Zeichen aus der formatierten Zeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="43acf-492">Removes one or more assigned characters from the formatted string.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public bool RemoveAt (int position);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool RemoveAt(int32 position) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function RemoveAt (position As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool RemoveAt(int position);" />
      <MemberSignature Language="F#" Value="member this.RemoveAt : int -&gt; bool" Usage="maskedTextProvider.RemoveAt position" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="position" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="position"><span data-ttu-id="43acf-493">Die nullbasierte Position des zu entfernenden zugewiesenen Zeichens.</span><span class="sxs-lookup"><span data-stu-id="43acf-493">The zero-based position of the assigned character to remove.</span></span></param>
        <summary><span data-ttu-id="43acf-494">Entfernt das zugewiesene Zeichen an der angegebenen Position aus der formatierten Zeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="43acf-494">Removes the assigned character at the specified position from the formatted string.</span></span></summary>
        <returns><span data-ttu-id="43acf-495"><see langword="true" />, wenn das Zeichen erfolgreich entfernt wurde, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="43acf-495"><see langword="true" /> if the character was successfully removed; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43acf-496">Die <xref:System.ComponentModel.MaskedTextProvider.RemoveAt%2A>-Methode hat keine Auswirkung, wenn an der angegebenen Entfernungs Position keine zugewiesenen Zeichen vorhanden sind.</span><span class="sxs-lookup"><span data-stu-id="43acf-496">The <xref:System.ComponentModel.MaskedTextProvider.RemoveAt%2A> method has no effect if there are no assigned characters at the removal position specified.</span></span> <span data-ttu-id="43acf-497">Literalzeichen sind von dieser Methode nicht betroffen.</span><span class="sxs-lookup"><span data-stu-id="43acf-497">Literal characters are not affected by this method.</span></span>  
  
 <span data-ttu-id="43acf-498">Wenn ein Zeichen entfernt wird, werden die verbleibenden höher positionierten Zeichen in der Maske nach links verschoben, um die vom Entfernungs Vorgang erstellte Lücke auszufüllen.</span><span class="sxs-lookup"><span data-stu-id="43acf-498">When a character is removed, the remaining higher-positioned characters in the mask will shift to the left to fill in the gap created by the removal.</span></span> <span data-ttu-id="43acf-499">Frei gewordenen Positionen werden für die Eingabe zurückgesetzt.</span><span class="sxs-lookup"><span data-stu-id="43acf-499">Vacated positions are reset for input.</span></span> <span data-ttu-id="43acf-500">Wenn das Verschieben der Zeichen durch die Masken Definition verhindert wird, erfolgt keine Entfernung, und <xref:System.ComponentModel.MaskedTextProvider.RemoveAt%2A> gibt `false`zurück.</span><span class="sxs-lookup"><span data-stu-id="43acf-500">If movement of the characters is prevented by the mask definition, no removal occurs, and <xref:System.ComponentModel.MaskedTextProvider.RemoveAt%2A> returns `false`.</span></span>  
  
 <span data-ttu-id="43acf-501">Dieser Methoden Aufrufwert entspricht dem folgenden aufrufsbefehl der überladenen <xref:System.ComponentModel.MaskedTextProvider.RemoveAt%28System.Int32%2CSystem.Int32%29>-Version:</span><span class="sxs-lookup"><span data-stu-id="43acf-501">This method call is exactly equivalent to the following call to the overloaded <xref:System.ComponentModel.MaskedTextProvider.RemoveAt%28System.Int32%2CSystem.Int32%29> version:</span></span>  
  
 `RemoveAt(pos, pos);`  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Add" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Clear" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.InsertAt" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Remove" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Replace" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Set" />
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public bool RemoveAt (int startPosition, int endPosition);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool RemoveAt(int32 startPosition, int32 endPosition) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.RemoveAt(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function RemoveAt (startPosition As Integer, endPosition As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool RemoveAt(int startPosition, int endPosition);" />
      <MemberSignature Language="F#" Value="member this.RemoveAt : int * int -&gt; bool" Usage="maskedTextProvider.RemoveAt (startPosition, endPosition)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startPosition" Type="System.Int32" />
        <Parameter Name="endPosition" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="startPosition"><span data-ttu-id="43acf-502">Der nullbasierte Index des zuerst zu entfernenden zugewiesenen Zeichens.</span><span class="sxs-lookup"><span data-stu-id="43acf-502">The zero-based index of the first assigned character to remove.</span></span></param>
        <param name="endPosition"><span data-ttu-id="43acf-503">Der nullbasierte Index des zuletzt zu entfernenden zugewiesenen Zeichens.</span><span class="sxs-lookup"><span data-stu-id="43acf-503">The zero-based index of the last assigned character to remove.</span></span></param>
        <summary><span data-ttu-id="43acf-504">Entfernt die zugewiesenen Zeichen zwischen den angegebenen Positionen aus der formatierten Zeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="43acf-504">Removes the assigned characters between the specified positions from the formatted string.</span></span></summary>
        <returns><span data-ttu-id="43acf-505"><see langword="true" />, wenn das Zeichen erfolgreich entfernt wurde, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="43acf-505"><see langword="true" /> if the character was successfully removed; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43acf-506">Die <xref:System.ComponentModel.MaskedTextProvider.RemoveAt%2A>-Methode hat keine Auswirkung, wenn keine zugewiesenen Zeichen an den angegebenen Entfernungs Positionen vorhanden sind.</span><span class="sxs-lookup"><span data-stu-id="43acf-506">The <xref:System.ComponentModel.MaskedTextProvider.RemoveAt%2A> method has no effect if there are no assigned characters at the removal positions specified.</span></span>  
  
 <span data-ttu-id="43acf-507">Wenn ein Zeichen entfernt wird, werden die verbleibenden höher positionierten Zeichen in der Maske nach links verschoben, um die vom Entfernungs Vorgang erstellte Lücke auszufüllen.</span><span class="sxs-lookup"><span data-stu-id="43acf-507">When a character is removed, the remaining higher-positioned characters in the mask will shift to the left to fill in the gap created by the removal.</span></span> <span data-ttu-id="43acf-508">Frei gewordenen Positionen werden für die Eingabe zurückgesetzt.</span><span class="sxs-lookup"><span data-stu-id="43acf-508">Vacated positions are reset for input.</span></span> <span data-ttu-id="43acf-509">Wenn das Verschieben der Zeichen durch die Masken Definition verhindert wird, erfolgt keine Entfernung, und <xref:System.ComponentModel.MaskedTextProvider.RemoveAt%2A> gibt `false`zurück.</span><span class="sxs-lookup"><span data-stu-id="43acf-509">If movement of the characters is prevented by the mask definition, no removal occurs, and <xref:System.ComponentModel.MaskedTextProvider.RemoveAt%2A> returns `false`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Add" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Clear" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.InsertAt" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Remove" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Replace" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Set" />
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public bool RemoveAt (int startPosition, int endPosition, out int testPosition, out System.ComponentModel.MaskedTextResultHint resultHint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool RemoveAt(int32 startPosition, int32 endPosition, [out] int32&amp; testPosition, [out] valuetype System.ComponentModel.MaskedTextResultHint&amp; resultHint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.RemoveAt(System.Int32,System.Int32,System.Int32@,System.ComponentModel.MaskedTextResultHint@)" />
      <MemberSignature Language="VB.NET" Value="Public Function RemoveAt (startPosition As Integer, endPosition As Integer, ByRef testPosition As Integer, ByRef resultHint As MaskedTextResultHint) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool RemoveAt(int startPosition, int endPosition, [Runtime::InteropServices::Out] int % testPosition, [Runtime::InteropServices::Out] System::ComponentModel::MaskedTextResultHint % resultHint);" />
      <MemberSignature Language="F#" Value="member this.RemoveAt : int * int * int * MaskedTextResultHint -&gt; bool" Usage="maskedTextProvider.RemoveAt (startPosition, endPosition, testPosition, resultHint)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startPosition" Type="System.Int32" />
        <Parameter Name="endPosition" Type="System.Int32" />
        <Parameter Name="testPosition" Type="System.Int32" RefType="out" />
        <Parameter Name="resultHint" Type="System.ComponentModel.MaskedTextResultHint" RefType="out" />
      </Parameters>
      <Docs>
        <param name="startPosition"><span data-ttu-id="43acf-510">Der nullbasierte Index des zuerst zu entfernenden zugewiesenen Zeichens.</span><span class="sxs-lookup"><span data-stu-id="43acf-510">The zero-based index of the first assigned character to remove.</span></span></param>
        <param name="endPosition"><span data-ttu-id="43acf-511">Der nullbasierte Index des zuletzt zu entfernenden zugewiesenen Zeichens.</span><span class="sxs-lookup"><span data-stu-id="43acf-511">The zero-based index of the last assigned character to remove.</span></span></param>
        <param name="testPosition"><span data-ttu-id="43acf-512">Bei Erfolg die nullbasierte Position in der formatierten Zeichenfolge, an der die Zeichen entfernt wurden, andernfalls die erste Position, an der der Vorgang fehlgeschlagen ist.</span><span class="sxs-lookup"><span data-stu-id="43acf-512">If successful, the zero-based position in the formatted string of where the characters were actually removed; otherwise, the first position where the operation failed.</span></span> <span data-ttu-id="43acf-513">Ein Ausgabeparameter.</span><span class="sxs-lookup"><span data-stu-id="43acf-513">An output parameter.</span></span></param>
        <param name="resultHint"><span data-ttu-id="43acf-514">Ein <see cref="T:System.ComponentModel.MaskedTextResultHint" />, mit dem das Ergebnis des Vorgangs kurz beschrieben wird.</span><span class="sxs-lookup"><span data-stu-id="43acf-514">A <see cref="T:System.ComponentModel.MaskedTextResultHint" /> that succinctly describes the result of the operation.</span></span> <span data-ttu-id="43acf-515">Ein Ausgabeparameter.</span><span class="sxs-lookup"><span data-stu-id="43acf-515">An output parameter.</span></span></param>
        <summary><span data-ttu-id="43acf-516">Entfernt die zwischen den angegebenen Positionen zugewiesenen Zeichen aus der formatierten Zeichenfolge und gibt dann die Löschposition sowie beschreibende Informationen aus.</span><span class="sxs-lookup"><span data-stu-id="43acf-516">Removes the assigned characters between the specified positions from the formatted string, and then outputs the removal position and descriptive information.</span></span></summary>
        <returns><span data-ttu-id="43acf-517"><see langword="true" />, wenn das Zeichen erfolgreich entfernt wurde, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="43acf-517"><see langword="true" /> if the character was successfully removed; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43acf-518">Die <xref:System.ComponentModel.MaskedTextProvider.RemoveAt%2A>-Methode hat keine Auswirkung, wenn keine zugewiesenen Zeichen an den angegebenen Entfernungs Positionen vorhanden sind.</span><span class="sxs-lookup"><span data-stu-id="43acf-518">The <xref:System.ComponentModel.MaskedTextProvider.RemoveAt%2A> method has no effect if there are no assigned characters at the removal positions specified.</span></span>  
  
 <span data-ttu-id="43acf-519">Wenn ein Zeichen entfernt wird, werden die verbleibenden höher positionierten Zeichen in der Maske nach links verschoben, um die vom Entfernungs Vorgang erstellte Lücke auszufüllen.</span><span class="sxs-lookup"><span data-stu-id="43acf-519">When a character is removed, the remaining higher-positioned characters in the mask will shift to the left to fill in the gap created by the removal.</span></span> <span data-ttu-id="43acf-520">Frei gewordenen Positionen werden für die Eingabe zurückgesetzt.</span><span class="sxs-lookup"><span data-stu-id="43acf-520">Vacated positions are reset for input.</span></span> <span data-ttu-id="43acf-521">Wenn das Verschieben der Zeichen durch die Masken Definition verhindert wird, erfolgt keine Entfernung, und <xref:System.ComponentModel.MaskedTextProvider.RemoveAt%2A> gibt `false`zurück.</span><span class="sxs-lookup"><span data-stu-id="43acf-521">If movement of the characters is prevented by the mask definition, no removal occurs, and <xref:System.ComponentModel.MaskedTextProvider.RemoveAt%2A> returns `false`.</span></span>  
  
 <span data-ttu-id="43acf-522">Diese Version von <xref:System.ComponentModel.MaskedTextProvider.RemoveAt%2A> bietet zwei zusätzliche Ausgabeparameter, um weitere Informationen über den Vorgang der Methode zu übermitteln.</span><span class="sxs-lookup"><span data-stu-id="43acf-522">This version of <xref:System.ComponentModel.MaskedTextProvider.RemoveAt%2A> provides two additional output parameters to convey more information about the operation of the method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Add" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Clear" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.InsertAt" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Remove" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Replace" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Set" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Replace">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="43acf-523">Ersetzt ein oder mehrere bearbeitbare Zeichen in der formatierten Zeichenfolge durch die angegebenen Zeichen.</span><span class="sxs-lookup"><span data-stu-id="43acf-523">Replaces one or more editable characters in the formatted string with the specified characters.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Replace">
      <MemberSignature Language="C#" Value="public bool Replace (char input, int position);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Replace(char input, int32 position) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.Replace(System.Char,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Replace (input As Char, position As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Replace(char input, int position);" />
      <MemberSignature Language="F#" Value="member this.Replace : char * int -&gt; bool" Usage="maskedTextProvider.Replace (input, position)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Char" />
        <Parameter Name="position" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="43acf-524">Der <see cref="T:System.Char" />-Wert, der den vorhandenen Wert ersetzt.</span><span class="sxs-lookup"><span data-stu-id="43acf-524">The <see cref="T:System.Char" /> value that replaces the existing value.</span></span></param>
        <param name="position"><span data-ttu-id="43acf-525">Die nullbasierte Position, an der nach dem ersten zu ersetzenden bearbeitbaren Zeichen gesucht werden soll.</span><span class="sxs-lookup"><span data-stu-id="43acf-525">The zero-based position to search for the first editable character to replace.</span></span></param>
        <summary><span data-ttu-id="43acf-526">Ersetzt ein einzelnes Zeichen an oder hinter der angegebenen Position durch den angegebenen Zeichenwert.</span><span class="sxs-lookup"><span data-stu-id="43acf-526">Replaces a single character at or beyond the specified position with the specified character value.</span></span></summary>
        <returns><span data-ttu-id="43acf-527"><see langword="true" />, wenn das Zeichen erfolgreich ersetzt wurde, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="43acf-527"><see langword="true" /> if the character was successfully replaced; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43acf-528">Die <xref:System.ComponentModel.MaskedTextProvider.Replace%28System.Char%2CSystem.Int32%29>-Methode sucht nach der ersten bearbeitbaren Position in der formatierten Zeichenfolge an oder hinter der angegebenen Position `pos`.</span><span class="sxs-lookup"><span data-stu-id="43acf-528">The <xref:System.ComponentModel.MaskedTextProvider.Replace%28System.Char%2CSystem.Int32%29> method searches for the first editable position in the formatted string at or beyond the specified position, `pos`.</span></span> <span data-ttu-id="43acf-529">Wenn ein solcher gefunden wird, wird der Wert der bearbeitbaren Position in das angegebene Zeichen (`input`) geändert.</span><span class="sxs-lookup"><span data-stu-id="43acf-529">If one is found, the value of the editable position is changed to the specified character, `input`.</span></span> <span data-ttu-id="43acf-530">Jede der folgenden Bedingungen führt zu einem Fehler, der bewirkt, dass kein Ersatz ausgeführt wird und der Wert `false` zurückgegeben wird:</span><span class="sxs-lookup"><span data-stu-id="43acf-530">Any of the following conditions will result in an error that causes no replacement to be performed and a value of `false` to be returned:</span></span>  
  
-   <span data-ttu-id="43acf-531">Der `pos`-Parameter ist kleiner als 0 (null) oder größer als der <xref:System.ComponentModel.MaskedTextProvider.Length%2A> der formatierten Zeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="43acf-531">The `pos` parameter is less than zero or greater than the <xref:System.ComponentModel.MaskedTextProvider.Length%2A> of the formatted string.</span></span>  
  
-   <span data-ttu-id="43acf-532">Ein bearbeitbares Zeichen wurde in der formatierten Zeichenfolge an oder hinter der angegebenen Position `pos`nicht gefunden.</span><span class="sxs-lookup"><span data-stu-id="43acf-532">An editable character was not found in the formatted string at or beyond the specified position, `pos`.</span></span>  
  
-   <span data-ttu-id="43acf-533">Das Ersetzungs Zeichen (`input`) ist kein gültiges Eingabezeichen, da es nicht druckbar ist oder nicht mit dem entsprechenden Masken Element übereinstimmt.</span><span class="sxs-lookup"><span data-stu-id="43acf-533">The replacement character, `input`, is not a valid input character because it is not printable or does not match its corresponding mask element.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsValidInputChar(System.Char)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindEditPositionFrom(System.Int32,System.Boolean)" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Add" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Clear" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.InsertAt" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Remove" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.RemoveAt" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Set" />
      </Docs>
    </Member>
    <Member MemberName="Replace">
      <MemberSignature Language="C#" Value="public bool Replace (string input, int position);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Replace(string input, int32 position) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.Replace(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Replace (input As String, position As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Replace(System::String ^ input, int position);" />
      <MemberSignature Language="F#" Value="member this.Replace : string * int -&gt; bool" Usage="maskedTextProvider.Replace (input, position)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="position" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="43acf-534">Der <see cref="T:System.String" />-Wert, durch den die vorhandenen bearbeitbaren Zeichen ersetzt werden.</span><span class="sxs-lookup"><span data-stu-id="43acf-534">The <see cref="T:System.String" /> value used to replace the existing editable characters.</span></span></param>
        <param name="position"><span data-ttu-id="43acf-535">Die nullbasierte Position, an der nach dem ersten zu ersetzenden bearbeitbaren Zeichen gesucht werden soll.</span><span class="sxs-lookup"><span data-stu-id="43acf-535">The zero-based position to search for the first editable character to replace.</span></span></param>
        <summary><span data-ttu-id="43acf-536">Ersetzt einen Bereich bearbeitbarer Zeichen und beginnt dabei an der angegebenen Position sowie mit der angegebenen Zeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="43acf-536">Replaces a range of editable characters starting at the specified position with the specified string.</span></span></summary>
        <returns><span data-ttu-id="43acf-537"><see langword="true" />, wenn alle Zeichen erfolgreich ersetzt wurden, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="43acf-537"><see langword="true" /> if all the characters were successfully replaced; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43acf-538">Die <xref:System.ComponentModel.MaskedTextProvider.Replace%28System.String%2CSystem.Int32%29>-Methode sucht nach der ersten bearbeitbaren Position an oder hinter der angegebenen Position `pos`.</span><span class="sxs-lookup"><span data-stu-id="43acf-538">The <xref:System.ComponentModel.MaskedTextProvider.Replace%28System.String%2CSystem.Int32%29> method searches for the first editable position at or beyond the specified position, `pos`.</span></span> <span data-ttu-id="43acf-539">Unter der Annahme, dass nach diesem Punkt ausreichend bearbeitbare Positionen vorhanden sind, werden die vorhandenen Zeichen Werte nacheinander durch den Inhalt des Parameters für die Ersetzungs Zeichenfolge ersetzt, `input`.</span><span class="sxs-lookup"><span data-stu-id="43acf-539">Operating under the assumption that there are enough editable positions after this point, the existing character values are replaced one-by-one with the contents of the replacement string parameter, `input`.</span></span>  
  
 <span data-ttu-id="43acf-540">Die folgenden Bedingungen werden als Fehler betrachtet.</span><span class="sxs-lookup"><span data-stu-id="43acf-540">The following conditions are considered errors.</span></span> <span data-ttu-id="43acf-541">Wenn ein Fehler auftritt, erfolgt keine Ersetzung, und <xref:System.ComponentModel.MaskedTextProvider.Replace%28System.String%2CSystem.Int32%29> gibt `false`zurück.</span><span class="sxs-lookup"><span data-stu-id="43acf-541">When an error occurs, no replacement occurs and <xref:System.ComponentModel.MaskedTextProvider.Replace%28System.String%2CSystem.Int32%29> returns `false`.</span></span>  
  
-   <span data-ttu-id="43acf-542">Der `pos`-Parameter ist kleiner als 0 (null) oder größer als der <xref:System.ComponentModel.MaskedTextProvider.Length%2A> der formatierten Zeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="43acf-542">The `pos` parameter is less than zero or greater than the <xref:System.ComponentModel.MaskedTextProvider.Length%2A> of the formatted string.</span></span>  
  
-   <span data-ttu-id="43acf-543">Es sind nicht genügend bearbeitbare Positionen in der formatierten Zeichenfolge vorhanden, um den Inhalt der Ersetzungs Zeichenfolge zu speichern.</span><span class="sxs-lookup"><span data-stu-id="43acf-543">There are not enough editable positions in the formatted string to hold the contents of the replacement string.</span></span>  
  
-   <span data-ttu-id="43acf-544">Einer der Ersatz Zeichen Werte ist ungültig, weil er nicht druckbar ist oder nicht mit dem entsprechenden Masken Element übereinstimmt.</span><span class="sxs-lookup"><span data-stu-id="43acf-544">One of the replacement character values is not valid because it is not printable or does not match its corresponding mask element.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="43acf-545">Der Parameter <paramref name="input" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="43acf-545">The <paramref name="input" /> parameter is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsValidInputChar(System.Char)" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Add" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Clear" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.InsertAt" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Remove" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.RemoveAt" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Set" />
      </Docs>
    </Member>
    <Member MemberName="Replace">
      <MemberSignature Language="C#" Value="public bool Replace (char input, int position, out int testPosition, out System.ComponentModel.MaskedTextResultHint resultHint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Replace(char input, int32 position, [out] int32&amp; testPosition, [out] valuetype System.ComponentModel.MaskedTextResultHint&amp; resultHint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.Replace(System.Char,System.Int32,System.Int32@,System.ComponentModel.MaskedTextResultHint@)" />
      <MemberSignature Language="VB.NET" Value="Public Function Replace (input As Char, position As Integer, ByRef testPosition As Integer, ByRef resultHint As MaskedTextResultHint) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Replace(char input, int position, [Runtime::InteropServices::Out] int % testPosition, [Runtime::InteropServices::Out] System::ComponentModel::MaskedTextResultHint % resultHint);" />
      <MemberSignature Language="F#" Value="member this.Replace : char * int * int * MaskedTextResultHint -&gt; bool" Usage="maskedTextProvider.Replace (input, position, testPosition, resultHint)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Char" />
        <Parameter Name="position" Type="System.Int32" />
        <Parameter Name="testPosition" Type="System.Int32" RefType="out" />
        <Parameter Name="resultHint" Type="System.ComponentModel.MaskedTextResultHint" RefType="out" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="43acf-546">Der <see cref="T:System.Char" />-Wert, der den vorhandenen Wert ersetzt.</span><span class="sxs-lookup"><span data-stu-id="43acf-546">The <see cref="T:System.Char" /> value that replaces the existing value.</span></span></param>
        <param name="position"><span data-ttu-id="43acf-547">Die nullbasierte Position, an der nach dem ersten zu ersetzenden bearbeitbaren Zeichen gesucht werden soll.</span><span class="sxs-lookup"><span data-stu-id="43acf-547">The zero-based position to search for the first editable character to replace.</span></span></param>
        <param name="testPosition"><span data-ttu-id="43acf-548">Bei Erfolg die nullbasierte Position in der formatierten Zeichenfolge, an der das letzte Zeichen ersetzt wurde, andernfalls die erste Position, an der der Vorgang fehlgeschlagen ist.</span><span class="sxs-lookup"><span data-stu-id="43acf-548">If successful, the zero-based position in the formatted string where the last character was actually replaced; otherwise, the first position where the operation failed.</span></span> <span data-ttu-id="43acf-549">Ein Ausgabeparameter.</span><span class="sxs-lookup"><span data-stu-id="43acf-549">An output parameter.</span></span></param>
        <param name="resultHint"><span data-ttu-id="43acf-550">Ein <see cref="T:System.ComponentModel.MaskedTextResultHint" />, mit dem das Ergebnis der Ersetzung kurz beschrieben wird.</span><span class="sxs-lookup"><span data-stu-id="43acf-550">A <see cref="T:System.ComponentModel.MaskedTextResultHint" /> that succinctly describes the result of the replacement operation.</span></span> <span data-ttu-id="43acf-551">Ein Ausgabeparameter.</span><span class="sxs-lookup"><span data-stu-id="43acf-551">An output parameter.</span></span></param>
        <summary><span data-ttu-id="43acf-552">Ersetzt ein einzelnes Zeichen an oder hinter der angegebenen Position durch den angegebenen Zeichenwert und gibt dann die Löschposition sowie beschreibende Informationen aus.</span><span class="sxs-lookup"><span data-stu-id="43acf-552">Replaces a single character at or beyond the specified position with the specified character value, and then outputs the removal position and descriptive information.</span></span></summary>
        <returns><span data-ttu-id="43acf-553"><see langword="true" />, wenn das Zeichen erfolgreich ersetzt wurde, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="43acf-553"><see langword="true" /> if the character was successfully replaced; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43acf-554">Die <xref:System.ComponentModel.MaskedTextProvider.Replace%28System.Char%2CSystem.Int32%2CSystem.Int32%40%2CSystem.ComponentModel.MaskedTextResultHint%40%29>-Methode sucht nach der ersten bearbeitbaren Position in der formatierten Zeichenfolge an oder hinter der angegebenen Position `pos`.</span><span class="sxs-lookup"><span data-stu-id="43acf-554">The <xref:System.ComponentModel.MaskedTextProvider.Replace%28System.Char%2CSystem.Int32%2CSystem.Int32%40%2CSystem.ComponentModel.MaskedTextResultHint%40%29> method searches for the first editable position in the formatted string at or beyond the specified position, `pos`.</span></span> <span data-ttu-id="43acf-555">Wenn ein solcher gefunden wird, wird der Wert der bearbeitbaren Position in das angegebene Zeichen (`input`) geändert.</span><span class="sxs-lookup"><span data-stu-id="43acf-555">If one is found, the value of the editable position is changed to the specified character, `input`.</span></span> <span data-ttu-id="43acf-556">Jede der folgenden Bedingungen führt zu einer Fehlerbedingung, die bewirkt, dass keine Ersetzung durchgeführt wird und der Wert `false` zurückgegeben wird:</span><span class="sxs-lookup"><span data-stu-id="43acf-556">Any of the following conditions will result in an error condition that causes no replacement to be performed and a value of `false` to be returned:</span></span>  
  
-   <span data-ttu-id="43acf-557">Der `pos`-Parameter ist kleiner als 0 (null) oder größer als der <xref:System.ComponentModel.MaskedTextProvider.Length%2A> der formatierten Zeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="43acf-557">The `pos` parameter is less than zero or greater than the <xref:System.ComponentModel.MaskedTextProvider.Length%2A> of the formatted string.</span></span>  
  
-   <span data-ttu-id="43acf-558">Ein bearbeitbares Zeichen wurde in der formatierten Zeichenfolge an oder hinter der angegebenen Position `pos`nicht gefunden.</span><span class="sxs-lookup"><span data-stu-id="43acf-558">An editable character was not found in the formatted string at or beyond the specified position, `pos`.</span></span>  
  
-   <span data-ttu-id="43acf-559">Das Ersetzungs Zeichen (`input`) ist kein gültiges Eingabezeichen, da es nicht druckbar ist oder nicht mit dem entsprechenden Masken Element übereinstimmt.</span><span class="sxs-lookup"><span data-stu-id="43acf-559">The replacement character, `input`, is not a valid input character because it is not printable or does not match its corresponding mask element.</span></span>  
  
 <span data-ttu-id="43acf-560">Zusätzlich zum Rückgabewert verfügt diese Methode über zwei Ausgabeparameter, um zusätzliche Informationen über den Ersetzungs Vorgang bereitzustellen.</span><span class="sxs-lookup"><span data-stu-id="43acf-560">In addition to the return value, this method has two output parameters to supply additional information about the replacement operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsValidInputChar(System.Char)" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Add" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Clear" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.InsertAt" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Remove" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.RemoveAt" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Set" />
      </Docs>
    </Member>
    <Member MemberName="Replace">
      <MemberSignature Language="C#" Value="public bool Replace (string input, int position, out int testPosition, out System.ComponentModel.MaskedTextResultHint resultHint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Replace(string input, int32 position, [out] int32&amp; testPosition, [out] valuetype System.ComponentModel.MaskedTextResultHint&amp; resultHint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.Replace(System.String,System.Int32,System.Int32@,System.ComponentModel.MaskedTextResultHint@)" />
      <MemberSignature Language="VB.NET" Value="Public Function Replace (input As String, position As Integer, ByRef testPosition As Integer, ByRef resultHint As MaskedTextResultHint) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Replace(System::String ^ input, int position, [Runtime::InteropServices::Out] int % testPosition, [Runtime::InteropServices::Out] System::ComponentModel::MaskedTextResultHint % resultHint);" />
      <MemberSignature Language="F#" Value="member this.Replace : string * int * int * MaskedTextResultHint -&gt; bool" Usage="maskedTextProvider.Replace (input, position, testPosition, resultHint)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="position" Type="System.Int32" />
        <Parameter Name="testPosition" Type="System.Int32" RefType="out" />
        <Parameter Name="resultHint" Type="System.ComponentModel.MaskedTextResultHint" RefType="out" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="43acf-561">Der <see cref="T:System.String" />-Wert, durch den die vorhandenen bearbeitbaren Zeichen ersetzt werden.</span><span class="sxs-lookup"><span data-stu-id="43acf-561">The <see cref="T:System.String" /> value used to replace the existing editable characters.</span></span></param>
        <param name="position"><span data-ttu-id="43acf-562">Die nullbasierte Position, an der nach dem ersten zu ersetzenden bearbeitbaren Zeichen gesucht werden soll.</span><span class="sxs-lookup"><span data-stu-id="43acf-562">The zero-based position to search for the first editable character to replace.</span></span></param>
        <param name="testPosition"><span data-ttu-id="43acf-563">Bei Erfolg die nullbasierte Position in der formatierten Zeichenfolge, an der das letzte Zeichen ersetzt wurde, andernfalls die erste Position, an der der Vorgang fehlgeschlagen ist.</span><span class="sxs-lookup"><span data-stu-id="43acf-563">If successful, the zero-based position in the formatted string where the last character was actually replaced; otherwise, the first position where the operation failed.</span></span> <span data-ttu-id="43acf-564">Ein Ausgabeparameter.</span><span class="sxs-lookup"><span data-stu-id="43acf-564">An output parameter.</span></span></param>
        <param name="resultHint"><span data-ttu-id="43acf-565">Ein <see cref="T:System.ComponentModel.MaskedTextResultHint" />, mit dem das Ergebnis der Ersetzung kurz beschrieben wird.</span><span class="sxs-lookup"><span data-stu-id="43acf-565">A <see cref="T:System.ComponentModel.MaskedTextResultHint" /> that succinctly describes the result of the replacement operation.</span></span> <span data-ttu-id="43acf-566">Ein Ausgabeparameter.</span><span class="sxs-lookup"><span data-stu-id="43acf-566">An output parameter.</span></span></param>
        <summary><span data-ttu-id="43acf-567">Ersetzt einen Bereich bearbeitbarer Zeichen beginnend an der angegebenen Position und mit der angegebenen Zeichenfolge und gibt dann die Löschposition sowie beschreibende Informationen aus.</span><span class="sxs-lookup"><span data-stu-id="43acf-567">Replaces a range of editable characters starting at the specified position with the specified string, and then outputs the removal position and descriptive information.</span></span></summary>
        <returns><span data-ttu-id="43acf-568"><see langword="true" />, wenn alle Zeichen erfolgreich ersetzt wurden, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="43acf-568"><see langword="true" /> if all the characters were successfully replaced; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43acf-569">Die <xref:System.ComponentModel.MaskedTextProvider.Replace%28System.String%2CSystem.Int32%2CSystem.Int32%40%2CSystem.ComponentModel.MaskedTextResultHint%40%29>-Methode sucht nach der ersten bearbeitbaren Position an oder hinter der angegebenen Position `pos`.</span><span class="sxs-lookup"><span data-stu-id="43acf-569">The <xref:System.ComponentModel.MaskedTextProvider.Replace%28System.String%2CSystem.Int32%2CSystem.Int32%40%2CSystem.ComponentModel.MaskedTextResultHint%40%29> method searches for the first editable position at or beyond the specified position, `pos`.</span></span> <span data-ttu-id="43acf-570">Unter der Annahme, dass nach diesem Punkt ausreichend bearbeitbare Positionen vorhanden sind, werden die vorhandenen Zeichen Werte nacheinander durch den Inhalt des Parameters für die Ersetzungs Zeichenfolge ersetzt, `input`.</span><span class="sxs-lookup"><span data-stu-id="43acf-570">Operating on the assumption that there are enough editable positions after this point, the existing character values are replaced one-by-one with the contents of the replacement string parameter, `input`.</span></span>  
  
 <span data-ttu-id="43acf-571">Die folgenden Bedingungen werden als Fehler betrachtet.</span><span class="sxs-lookup"><span data-stu-id="43acf-571">The following conditions are considered errors.</span></span> <span data-ttu-id="43acf-572">Wenn ein Fehler auftritt, erfolgt keine Ersetzung, und <xref:System.ComponentModel.MaskedTextProvider.Replace%28System.String%2CSystem.Int32%2CSystem.Int32%40%2CSystem.ComponentModel.MaskedTextResultHint%40%29> gibt `false`zurück.</span><span class="sxs-lookup"><span data-stu-id="43acf-572">When an error occurs, no replacement occurs and <xref:System.ComponentModel.MaskedTextProvider.Replace%28System.String%2CSystem.Int32%2CSystem.Int32%40%2CSystem.ComponentModel.MaskedTextResultHint%40%29> returns `false`.</span></span>  
  
-   <span data-ttu-id="43acf-573">Der `pos`-Parameter ist kleiner als 0 (null) oder größer als der <xref:System.ComponentModel.MaskedTextProvider.Length%2A> der formatierten Zeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="43acf-573">The `pos` parameter is less than zero or greater than the <xref:System.ComponentModel.MaskedTextProvider.Length%2A> of the formatted string.</span></span>  
  
-   <span data-ttu-id="43acf-574">Es sind nicht genügend bearbeitbare Positionen in der formatierten Zeichenfolge vorhanden, um den Inhalt der Ersetzungs Zeichenfolge zu speichern.</span><span class="sxs-lookup"><span data-stu-id="43acf-574">There are not enough editable positions in the formatted string to hold the contents of the replacement string.</span></span>  
  
-   <span data-ttu-id="43acf-575">Einer der Ersatz Zeichen Werte ist ungültig, weil er nicht druckbar ist oder nicht mit dem entsprechenden Masken Element übereinstimmt.</span><span class="sxs-lookup"><span data-stu-id="43acf-575">One of the replacement character values is not valid because it is not printable or does not match its corresponding mask element.</span></span>  
  
 <span data-ttu-id="43acf-576">Zusätzlich zum Rückgabewert verfügt diese Methode über zwei Ausgabeparameter, um zusätzliche Informationen über den Ersetzungs Vorgang bereitzustellen.</span><span class="sxs-lookup"><span data-stu-id="43acf-576">In addition to the return value, this method has two output parameters to supply additional information about the replacement operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsValidInputChar(System.Char)" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Add" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Clear" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.InsertAt" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Remove" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.RemoveAt" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Set" />
      </Docs>
    </Member>
    <Member MemberName="Replace">
      <MemberSignature Language="C#" Value="public bool Replace (char input, int startPosition, int endPosition, out int testPosition, out System.ComponentModel.MaskedTextResultHint resultHint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Replace(char input, int32 startPosition, int32 endPosition, [out] int32&amp; testPosition, [out] valuetype System.ComponentModel.MaskedTextResultHint&amp; resultHint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.Replace(System.Char,System.Int32,System.Int32,System.Int32@,System.ComponentModel.MaskedTextResultHint@)" />
      <MemberSignature Language="VB.NET" Value="Public Function Replace (input As Char, startPosition As Integer, endPosition As Integer, ByRef testPosition As Integer, ByRef resultHint As MaskedTextResultHint) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Replace(char input, int startPosition, int endPosition, [Runtime::InteropServices::Out] int % testPosition, [Runtime::InteropServices::Out] System::ComponentModel::MaskedTextResultHint % resultHint);" />
      <MemberSignature Language="F#" Value="member this.Replace : char * int * int * int * MaskedTextResultHint -&gt; bool" Usage="maskedTextProvider.Replace (input, startPosition, endPosition, testPosition, resultHint)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Char" />
        <Parameter Name="startPosition" Type="System.Int32" />
        <Parameter Name="endPosition" Type="System.Int32" />
        <Parameter Name="testPosition" Type="System.Int32" RefType="out" />
        <Parameter Name="resultHint" Type="System.ComponentModel.MaskedTextResultHint" RefType="out" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="43acf-577">Der <see cref="T:System.Char" />-Wert, der den vorhandenen Wert ersetzt.</span><span class="sxs-lookup"><span data-stu-id="43acf-577">The <see cref="T:System.Char" /> value that replaces the existing value.</span></span></param>
        <param name="startPosition"><span data-ttu-id="43acf-578">Die nullbasierte Position in der formatierten Zeichenfolge, an der die Ersetzung beginnt.</span><span class="sxs-lookup"><span data-stu-id="43acf-578">The zero-based position in the formatted string where the replacement starts.</span></span></param>
        <param name="endPosition"><span data-ttu-id="43acf-579">Die nullbasierte Position in der formatierten Zeichenfolge, an der die Ersetzung endet.</span><span class="sxs-lookup"><span data-stu-id="43acf-579">The zero-based position in the formatted string where the replacement ends.</span></span></param>
        <param name="testPosition"><span data-ttu-id="43acf-580">Bei Erfolg die nullbasierte Position in der formatierten Zeichenfolge, an der das letzte Zeichen ersetzt wurde, andernfalls die erste Position, an der der Vorgang fehlgeschlagen ist.</span><span class="sxs-lookup"><span data-stu-id="43acf-580">If successful, the zero-based position in the formatted string where the last character was actually replaced; otherwise, the first position where the operation failed.</span></span> <span data-ttu-id="43acf-581">Ein Ausgabeparameter.</span><span class="sxs-lookup"><span data-stu-id="43acf-581">An output parameter.</span></span></param>
        <param name="resultHint"><span data-ttu-id="43acf-582">Ein <see cref="T:System.ComponentModel.MaskedTextResultHint" />, mit dem das Ergebnis der Ersetzung kurz beschrieben wird.</span><span class="sxs-lookup"><span data-stu-id="43acf-582">A <see cref="T:System.ComponentModel.MaskedTextResultHint" /> that succinctly describes the result of the replacement operation.</span></span> <span data-ttu-id="43acf-583">Ein Ausgabeparameter.</span><span class="sxs-lookup"><span data-stu-id="43acf-583">An output parameter.</span></span></param>
        <summary><span data-ttu-id="43acf-584">Ersetzt ein einzelnes Zeichen zwischen der angegebenen Anfangs- und Endposition durch den angegebenen Zeichenwert und gibt dann die Löschposition sowie beschreibende Informationen aus.</span><span class="sxs-lookup"><span data-stu-id="43acf-584">Replaces a single character between the specified starting and ending positions with the specified character value, and then outputs the removal position and descriptive information.</span></span></summary>
        <returns><span data-ttu-id="43acf-585"><see langword="true" />, wenn das Zeichen erfolgreich ersetzt wurde, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="43acf-585"><see langword="true" /> if the character was successfully replaced; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43acf-586">Die <xref:System.ComponentModel.MaskedTextProvider.Replace%28System.Char%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%40%2CSystem.ComponentModel.MaskedTextResultHint%40%29>-Methode sucht in der formatierten Zeichenfolge nach der ersten bearbeitbaren Position zwischen den angegebenen Start-und Endpositionen.</span><span class="sxs-lookup"><span data-stu-id="43acf-586">The <xref:System.ComponentModel.MaskedTextProvider.Replace%28System.Char%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%40%2CSystem.ComponentModel.MaskedTextResultHint%40%29> method searches for the first editable position in the formatted string between the specified starting and ending positions.</span></span> <span data-ttu-id="43acf-587">Wenn ein solcher gefunden wird, wird der Wert der bearbeitbaren Position in das angegebene Zeichen (`input`) geändert.</span><span class="sxs-lookup"><span data-stu-id="43acf-587">If one is found, the value of the editable position is changed to the specified character, `input`.</span></span> <span data-ttu-id="43acf-588">Jede der folgenden Bedingungen führt zu einer Fehlerbedingung, die bewirkt, dass keine Ersetzung durchgeführt wird und der Wert `false` zurückgegeben wird:</span><span class="sxs-lookup"><span data-stu-id="43acf-588">Any of the following conditions will result in an error condition that causes no replacement to be performed and a value of `false` to be returned:</span></span>  
  
-   <span data-ttu-id="43acf-589">Die `startPos`-oder `endPos` Parameter zeigen vor dem Anfang der formatierten Zeichenfolge oder über das Ende hinaus.</span><span class="sxs-lookup"><span data-stu-id="43acf-589">The `startPos` or `endPos` parameters point before the start of the formatted string or beyond its end.</span></span>  
  
-   <span data-ttu-id="43acf-590">Ein bearbeitbares Zeichen wurde im angegebenen Intervall nicht gefunden.</span><span class="sxs-lookup"><span data-stu-id="43acf-590">An editable character was not found in the specified interval.</span></span>  
  
-   <span data-ttu-id="43acf-591">Das Ersetzungs Zeichen (`input`) ist kein gültiges Eingabezeichen, da es nicht druckbar ist oder nicht mit dem entsprechenden Masken Element übereinstimmt.</span><span class="sxs-lookup"><span data-stu-id="43acf-591">The replacement character, `input`, is not a valid input character because it is not printable or does not match its corresponding mask element.</span></span>  
  
 <span data-ttu-id="43acf-592">Zusätzlich zum Rückgabewert verfügt diese Methode über zwei Ausgabeparameter, um zusätzliche Informationen über den Ersetzungs Vorgang bereitzustellen.</span><span class="sxs-lookup"><span data-stu-id="43acf-592">In addition to the return value, this method has two output parameters to supply additional information about the replacement operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsValidInputChar(System.Char)" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Add" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Clear" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.InsertAt" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Remove" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.RemoveAt" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Set" />
      </Docs>
    </Member>
    <Member MemberName="Replace">
      <MemberSignature Language="C#" Value="public bool Replace (string input, int startPosition, int endPosition, out int testPosition, out System.ComponentModel.MaskedTextResultHint resultHint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Replace(string input, int32 startPosition, int32 endPosition, [out] int32&amp; testPosition, [out] valuetype System.ComponentModel.MaskedTextResultHint&amp; resultHint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.Replace(System.String,System.Int32,System.Int32,System.Int32@,System.ComponentModel.MaskedTextResultHint@)" />
      <MemberSignature Language="VB.NET" Value="Public Function Replace (input As String, startPosition As Integer, endPosition As Integer, ByRef testPosition As Integer, ByRef resultHint As MaskedTextResultHint) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Replace(System::String ^ input, int startPosition, int endPosition, [Runtime::InteropServices::Out] int % testPosition, [Runtime::InteropServices::Out] System::ComponentModel::MaskedTextResultHint % resultHint);" />
      <MemberSignature Language="F#" Value="member this.Replace : string * int * int * int * MaskedTextResultHint -&gt; bool" Usage="maskedTextProvider.Replace (input, startPosition, endPosition, testPosition, resultHint)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="startPosition" Type="System.Int32" />
        <Parameter Name="endPosition" Type="System.Int32" />
        <Parameter Name="testPosition" Type="System.Int32" RefType="out" />
        <Parameter Name="resultHint" Type="System.ComponentModel.MaskedTextResultHint" RefType="out" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="43acf-593">Der <see cref="T:System.String" />-Wert, durch den die vorhandenen bearbeitbaren Zeichen ersetzt werden.</span><span class="sxs-lookup"><span data-stu-id="43acf-593">The <see cref="T:System.String" /> value used to replace the existing editable characters.</span></span></param>
        <param name="startPosition"><span data-ttu-id="43acf-594">Die nullbasierte Position in der formatierten Zeichenfolge, an der die Ersetzung beginnt.</span><span class="sxs-lookup"><span data-stu-id="43acf-594">The zero-based position in the formatted string where the replacement starts.</span></span></param>
        <param name="endPosition"><span data-ttu-id="43acf-595">Die nullbasierte Position in der formatierten Zeichenfolge, an der die Ersetzung endet.</span><span class="sxs-lookup"><span data-stu-id="43acf-595">The zero-based position in the formatted string where the replacement ends.</span></span></param>
        <param name="testPosition"><span data-ttu-id="43acf-596">Bei Erfolg die nullbasierte Position in der formatierten Zeichenfolge, an der das letzte Zeichen ersetzt wurde, andernfalls die erste Position, an der der Vorgang fehlgeschlagen ist.</span><span class="sxs-lookup"><span data-stu-id="43acf-596">If successful, the zero-based position in the formatted string where the last character was actually replaced; otherwise, the first position where the operation failed.</span></span> <span data-ttu-id="43acf-597">Ein Ausgabeparameter.</span><span class="sxs-lookup"><span data-stu-id="43acf-597">An output parameter.</span></span></param>
        <param name="resultHint"><span data-ttu-id="43acf-598">Ein <see cref="T:System.ComponentModel.MaskedTextResultHint" />, mit dem das Ergebnis der Ersetzung kurz beschrieben wird.</span><span class="sxs-lookup"><span data-stu-id="43acf-598">A <see cref="T:System.ComponentModel.MaskedTextResultHint" /> that succinctly describes the result of the replacement operation.</span></span> <span data-ttu-id="43acf-599">Ein Ausgabeparameter.</span><span class="sxs-lookup"><span data-stu-id="43acf-599">An output parameter.</span></span></param>
        <summary><span data-ttu-id="43acf-600">Ersetzt einen Bereich bearbeitbarer Zeichen zwischen der angegebenen Anfangs- und Endposition durch die angegebene Zeichenfolge und gibt dann die Löschposition sowie beschreibende Informationen aus.</span><span class="sxs-lookup"><span data-stu-id="43acf-600">Replaces a range of editable characters between the specified starting and ending positions with the specified string, and then outputs the removal position and descriptive information.</span></span></summary>
        <returns><span data-ttu-id="43acf-601"><see langword="true" />, wenn alle Zeichen erfolgreich ersetzt wurden, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="43acf-601"><see langword="true" /> if all the characters were successfully replaced; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43acf-602">Die <xref:System.ComponentModel.MaskedTextProvider.Replace%2A>-Methode sucht in der formatierten Zeichenfolge nach der ersten bearbeitbaren Position zwischen den angegebenen Start-und Endpositionen.</span><span class="sxs-lookup"><span data-stu-id="43acf-602">The <xref:System.ComponentModel.MaskedTextProvider.Replace%2A> method searches for the first editable position in the formatted string between the specified starting and ending positions.</span></span> <span data-ttu-id="43acf-603">Unter der Annahme, dass nach diesem Punkt ausreichend bearbeitbare Positionen vorhanden sind, werden die vorhandenen Zeichen Werte nacheinander durch den Inhalt des Parameters für die Ersetzungs Zeichenfolge ersetzt, `input`.</span><span class="sxs-lookup"><span data-stu-id="43acf-603">Operating on the assumption that there are enough editable positions after this point, the existing character values are replaced one-by-one with the contents of the replacement string parameter, `input`.</span></span>  
  
 <span data-ttu-id="43acf-604">Die folgenden Bedingungen werden als Fehler betrachtet.</span><span class="sxs-lookup"><span data-stu-id="43acf-604">The following conditions are considered errors.</span></span> <span data-ttu-id="43acf-605">Wenn ein Fehler auftritt, erfolgt keine Ersetzung, und <xref:System.ComponentModel.MaskedTextProvider.Replace%2A> gibt `false`zurück.</span><span class="sxs-lookup"><span data-stu-id="43acf-605">When an error occurs, no replacement occurs and <xref:System.ComponentModel.MaskedTextProvider.Replace%2A> returns `false`.</span></span>  
  
-   <span data-ttu-id="43acf-606">Die `startPos`-oder `endPos` Parameter zeigen vor dem Anfang der formatierten Zeichenfolge oder über das Ende hinaus.</span><span class="sxs-lookup"><span data-stu-id="43acf-606">The `startPos` or `endPos` parameters point before the start of the formatted string or beyond its end.</span></span>  
  
-   <span data-ttu-id="43acf-607">Es sind nicht genügend bearbeitbare Positionen in der formatierten Zeichenfolge vorhanden, um den Inhalt der Ersetzungs Zeichenfolge zu speichern.</span><span class="sxs-lookup"><span data-stu-id="43acf-607">There are not enough editable positions in the formatted string to hold the contents of the replacement string.</span></span>  
  
-   <span data-ttu-id="43acf-608">Einer der Ersatz Zeichen Werte ist ungültig, weil er nicht druckbar ist oder nicht mit dem entsprechenden Masken Element übereinstimmt.</span><span class="sxs-lookup"><span data-stu-id="43acf-608">One of the replacement character values is not valid because it is not printable or does not match its corresponding mask element.</span></span>  
  
 <span data-ttu-id="43acf-609">Zusätzlich zum Rückgabewert verfügt diese Methode über zwei Ausgabeparameter, um zusätzliche Informationen über den Ersetzungs Vorgang bereitzustellen.</span><span class="sxs-lookup"><span data-stu-id="43acf-609">In addition to the return value, this method has two output parameters to supply additional information about the replacement operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsValidInputChar(System.Char)" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Add" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Clear" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.InsertAt" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Remove" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.RemoveAt" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Set" />
      </Docs>
    </Member>
    <Member MemberName="ResetOnPrompt">
      <MemberSignature Language="C#" Value="public bool ResetOnPrompt { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ResetOnPrompt" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.MaskedTextProvider.ResetOnPrompt" />
      <MemberSignature Language="VB.NET" Value="Public Property ResetOnPrompt As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ResetOnPrompt { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ResetOnPrompt : bool with get, set" Usage="System.ComponentModel.MaskedTextProvider.ResetOnPrompt" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="43acf-610">Ruft einen Wert ab, der bestimmt, wie ein dem Aufforderungszeichen entsprechendes Eingabezeichen behandelt werden soll, oder legt diesen Wert fest.</span><span class="sxs-lookup"><span data-stu-id="43acf-610">Gets or sets a value that determines how an input character that matches the prompt character should be handled.</span></span></summary>
        <value><span data-ttu-id="43acf-611"><see langword="true" />, wenn die Eingabe des Aufforderungszeichens die Zurücksetzung der aktuellen bearbeitbaren Position in der Maske zur Folge hat, andernfalls <see langword="false" />, um anzugeben, dass das Aufforderungszeichen wie ein normales Eingabezeichen verarbeitet werden soll.</span><span class="sxs-lookup"><span data-stu-id="43acf-611"><see langword="true" /> if the prompt character entered as input causes the current editable position in the mask to be reset; otherwise, <see langword="false" /> to indicate that the prompt character is to be processed as a normal input character.</span></span> <span data-ttu-id="43acf-612">Der Standardwert lautet <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="43acf-612">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43acf-613">in <xref:System.ComponentModel.MaskedTextProvider> können zwei Kategorien von Zeichen, paces und Eingabe Aufforderungs Zeichen auf besondere Weise behandelt werden.</span><span class="sxs-lookup"><span data-stu-id="43acf-613"><xref:System.ComponentModel.MaskedTextProvider> can treat two categories of characters, paces and prompt characters, in a special manner.</span></span> <span data-ttu-id="43acf-614">Normalerweise wird jedes Eingabezeichen anhand der Maske getestet und entweder akzeptiert oder abgelehnt.</span><span class="sxs-lookup"><span data-stu-id="43acf-614">Normally, each input character will be tested against the mask and either accepted or rejected.</span></span> <span data-ttu-id="43acf-615">Wenn Sie davon ausgehen, dass die <xref:System.ComponentModel.MaskedTextProvider.PromptChar%2A>-Eigenschaft auf einen anderen Wert als `null`festgelegt ist, führt das Festlegen der <xref:System.ComponentModel.MaskedTextProvider.ResetOnPrompt%2A>-Eigenschaft auf `true` zu einer besonderen Verarbeitung für das Eingabe Aufforderungs Zeichen.</span><span class="sxs-lookup"><span data-stu-id="43acf-615">Operating on the assumption that the <xref:System.ComponentModel.MaskedTextProvider.PromptChar%2A> property is set to a value other than `null`, then setting the <xref:System.ComponentModel.MaskedTextProvider.ResetOnPrompt%2A> property to `true` will result in special processing for the prompt character.</span></span> <span data-ttu-id="43acf-616">Wenn ein Prompt-Zeichen hinzugefügt wird, bewirkt dies, dass die aktuelle Maske-Zeichenposition gelöscht und die aktuelle Position auf das nächste bearbeitbare Zeichen erweitert wird.</span><span class="sxs-lookup"><span data-stu-id="43acf-616">When a prompt character is added, it causes the current mask character position to be cleared and the current position to be advanced to the next editable character.</span></span>  
  
 <span data-ttu-id="43acf-617"><xref:System.ComponentModel.MaskedTextProvider.ResetOnPrompt%2A> hat Vorrang vor der Eigenschaft <xref:System.ComponentModel.MaskedTextProvider.AllowPromptAsInput%2A>, wie in der folgenden Tabelle beschrieben.</span><span class="sxs-lookup"><span data-stu-id="43acf-617"><xref:System.ComponentModel.MaskedTextProvider.ResetOnPrompt%2A> takes precedence over the <xref:System.ComponentModel.MaskedTextProvider.AllowPromptAsInput%2A> property as described in the following table.</span></span>  
  
|<xref:System.ComponentModel.MaskedTextProvider.ResetOnPrompt%2A>|<xref:System.ComponentModel.MaskedTextProvider.AllowPromptAsInput%2A>|<span data-ttu-id="43acf-618">Resultierendes Verhalten</span><span class="sxs-lookup"><span data-stu-id="43acf-618">Resulting behavior</span></span>|  
|---------------------------------------------------------------------------------------------------------------------------------------------------------------------|--------------------------------------------------------------------------------------------------------------------------------------------------------------------------|------------------------|  
|`true`|`true`|<span data-ttu-id="43acf-619">Das Eingabe Aufforderungs Zeichen kann hinzugefügt werden und bewirkt, dass die aktuelle Masken Position zurückgesetzt wird.</span><span class="sxs-lookup"><span data-stu-id="43acf-619">The prompt character can be added and it causes the current mask position to be reset.</span></span> <span data-ttu-id="43acf-620">Der Standardwert.</span><span class="sxs-lookup"><span data-stu-id="43acf-620">The default.</span></span>|  
|`true`|`false`|<span data-ttu-id="43acf-621">Das Eingabe Aufforderungs Zeichen kann hinzugefügt werden und bewirkt, dass die aktuelle Masken Position zurückgesetzt wird.</span><span class="sxs-lookup"><span data-stu-id="43acf-621">The prompt character can be added and it causes the current mask position to be reset.</span></span>|  
|`false`|`true`|<span data-ttu-id="43acf-622">Das Eingabe Aufforderungs Zeichen wird als normales Eingabezeichen verarbeitet.</span><span class="sxs-lookup"><span data-stu-id="43acf-622">The prompt character is processed as a normal input character.</span></span>|  
|`false`|`false`|<span data-ttu-id="43acf-623">Das Eingabe Aufforderungs Zeichen ist ungültig, und Methoden, die versuchen, das Zeichen hinzuzufügen, schlagen fehl.</span><span class="sxs-lookup"><span data-stu-id="43acf-623">The prompt character is not valid and methods attempting to add the character will fail.</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.ResetOnPrompt" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.AllowPromptAsInput" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.ResetOnSpace" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.SkipLiterals" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.IncludePrompt" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.PromptChar" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Add" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.Clear" />
      </Docs>
    </Member>
    <Member MemberName="ResetOnSpace">
      <MemberSignature Language="C#" Value="public bool ResetOnSpace { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ResetOnSpace" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.MaskedTextProvider.ResetOnSpace" />
      <MemberSignature Language="VB.NET" Value="Public Property ResetOnSpace As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ResetOnSpace { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ResetOnSpace : bool with get, set" Usage="System.ComponentModel.MaskedTextProvider.ResetOnSpace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="43acf-624">Ruft einen Wert ab, der bestimmt, wie ein eingegebenes Leerzeichen zu behandeln ist, oder legt diesen Wert fest.</span><span class="sxs-lookup"><span data-stu-id="43acf-624">Gets or sets a value that determines how a space input character should be handled.</span></span></summary>
        <value><span data-ttu-id="43acf-625"><see langword="true" />, wenn die Eingabe des Leerzeichens die Zurücksetzung der aktuellen bearbeitbaren Position in der Maske zur Folge hat, andernfalls <see langword="false" />, um anzugeben, dass das Leerzeichen wie ein normales Eingabezeichen verarbeitet werden soll.</span><span class="sxs-lookup"><span data-stu-id="43acf-625"><see langword="true" /> if the space input character causes the current editable position in the mask to be reset; otherwise, <see langword="false" /> to indicate that it is to be processed as a normal input character.</span></span> <span data-ttu-id="43acf-626">Der Standardwert lautet <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="43acf-626">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43acf-627"><xref:System.ComponentModel.MaskedTextProvider> können zwei Kategorien von Zeichen, Leerzeichen und Eingabe Aufforderungs Zeichen auf besondere Weise behandeln.</span><span class="sxs-lookup"><span data-stu-id="43acf-627"><xref:System.ComponentModel.MaskedTextProvider> can treat two categories of characters, spaces and prompt characters, in a special manner.</span></span> <span data-ttu-id="43acf-628">Normalerweise wird jedes Eingabezeichen anhand der Maske getestet und entweder akzeptiert oder abgelehnt.</span><span class="sxs-lookup"><span data-stu-id="43acf-628">Normally, each input character will be tested against the mask and either accepted or rejected.</span></span> <span data-ttu-id="43acf-629">Wenn Sie die <xref:System.ComponentModel.MaskedTextProvider.ResetOnSpace%2A>-Eigenschaft auf `true` festlegen, wird die aktuelle Masken Zeichenposition gelöscht, und die aktuelle Position wird auf das nächste bearbeitbare Zeichen erweitert.</span><span class="sxs-lookup"><span data-stu-id="43acf-629">Setting the <xref:System.ComponentModel.MaskedTextProvider.ResetOnSpace%2A> property to `true` will result in the current mask character position being cleared and the current position being advanced to the next editable character.</span></span>  
  
 <span data-ttu-id="43acf-630"><xref:System.ComponentModel.MaskedTextProvider.ResetOnSpace%2A> ist nützlich, wenn Sie Text zuweisen, der mit Ausnahme der Eingabeaufforderung gespeichert wurde, wobei die Eingabeaufforderung durch ein Leerzeichen ersetzt wird.</span><span class="sxs-lookup"><span data-stu-id="43acf-630"><xref:System.ComponentModel.MaskedTextProvider.ResetOnSpace%2A> is useful when assigning text that was saved excluding the prompt, where the prompt is replaced with a space.</span></span> <span data-ttu-id="43acf-631">Vor dem Wiederherstellen einer solchen Zeichenfolge setzt das Festlegen von <xref:System.ComponentModel.MaskedTextProvider.ResetOnSpace%2A> auf `true` die Eingabe Aufforderungs Zeichen an den Positionen zurück, die von Leerzeichen in der Eingabe Zeichenfolge</span><span class="sxs-lookup"><span data-stu-id="43acf-631">Before restoring such a string, setting <xref:System.ComponentModel.MaskedTextProvider.ResetOnSpace%2A> to `true` will reset the prompt characters at the positions occupied by spaces in the input string.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.ResetOnSpace" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.ResetOnPrompt" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.SkipLiterals" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.Clear" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Set">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="43acf-632">Legt die formatierte Zeichenfolge auf die angegebene Eingabezeichenfolge fest.</span><span class="sxs-lookup"><span data-stu-id="43acf-632">Sets the formatted string to the specified input string.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Set">
      <MemberSignature Language="C#" Value="public bool Set (string input);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Set(string input) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.Set(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Set (input As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Set(System::String ^ input);" />
      <MemberSignature Language="F#" Value="member this.Set : string -&gt; bool" Usage="maskedTextProvider.Set input" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="43acf-633">Der <see cref="T:System.String" />-Wert, über den die formatierte Zeichenfolge festgelegt wird.</span><span class="sxs-lookup"><span data-stu-id="43acf-633">The <see cref="T:System.String" /> value used to set the formatted string.</span></span></param>
        <summary><span data-ttu-id="43acf-634">Legt die formatierte Zeichenfolge auf die angegebene Eingabezeichenfolge fest.</span><span class="sxs-lookup"><span data-stu-id="43acf-634">Sets the formatted string to the specified input string.</span></span></summary>
        <returns><span data-ttu-id="43acf-635"><see langword="true" />, wenn alle Zeichen erfolgreich festgelegt wurden, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="43acf-635"><see langword="true" /> if all the characters were successfully set; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43acf-636">Die <xref:System.ComponentModel.MaskedTextProvider.Set%2A>-Methode löscht den vorhandenen Inhalt der formatierten Zeichenfolge und wendet dann die Maske auf die `input` Zeichenfolge an, um den Inhalt der formatierten Zeichenfolge zu aktualisieren.</span><span class="sxs-lookup"><span data-stu-id="43acf-636">The <xref:System.ComponentModel.MaskedTextProvider.Set%2A> method clears the existing contents of the formatted string and then applies the mask against the `input` string to update the contents of the formatted string.</span></span>  
  
 <span data-ttu-id="43acf-637">Die folgenden Bedingungen werden als Fehler betrachtet.</span><span class="sxs-lookup"><span data-stu-id="43acf-637">The following conditions are considered errors.</span></span> <span data-ttu-id="43acf-638">Wenn ein Fehler auftritt, bleibt die formatierte Zeichenfolge unverändert, und <xref:System.ComponentModel.MaskedTextProvider.Set%2A> gibt `false`zurück.</span><span class="sxs-lookup"><span data-stu-id="43acf-638">When an error occurs, the formatted string remains unaltered and <xref:System.ComponentModel.MaskedTextProvider.Set%2A> returns `false`.</span></span>  
  
-   <span data-ttu-id="43acf-639">Es sind nicht genügend bearbeitbare Positionen in der formatierten Zeichenfolge vorhanden, um den Inhalt der Ersetzungs Zeichenfolge zu speichern.</span><span class="sxs-lookup"><span data-stu-id="43acf-639">There are not enough editable positions in the formatted string to hold the contents of the replacement string.</span></span>  
  
-   <span data-ttu-id="43acf-640">Einer der Ersatz Zeichen Werte ist ungültig, weil er nicht druckbar ist oder nicht mit dem entsprechenden Masken Element übereinstimmt.</span><span class="sxs-lookup"><span data-stu-id="43acf-640">One of the replacement character values is not valid because it is not printable or does not match its corresponding mask element.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="43acf-641">Der Parameter <paramref name="input" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="43acf-641">The <paramref name="input" /> parameter is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsValidInputChar(System.Char)" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Add" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Clear" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.InsertAt" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Remove" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.RemoveAt" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Replace" />
      </Docs>
    </Member>
    <Member MemberName="Set">
      <MemberSignature Language="C#" Value="public bool Set (string input, out int testPosition, out System.ComponentModel.MaskedTextResultHint resultHint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Set(string input, [out] int32&amp; testPosition, [out] valuetype System.ComponentModel.MaskedTextResultHint&amp; resultHint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.Set(System.String,System.Int32@,System.ComponentModel.MaskedTextResultHint@)" />
      <MemberSignature Language="VB.NET" Value="Public Function Set (input As String, ByRef testPosition As Integer, ByRef resultHint As MaskedTextResultHint) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Set(System::String ^ input, [Runtime::InteropServices::Out] int % testPosition, [Runtime::InteropServices::Out] System::ComponentModel::MaskedTextResultHint % resultHint);" />
      <MemberSignature Language="F#" Value="member this.Set : string * int * MaskedTextResultHint -&gt; bool" Usage="maskedTextProvider.Set (input, testPosition, resultHint)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="testPosition" Type="System.Int32" RefType="out" />
        <Parameter Name="resultHint" Type="System.ComponentModel.MaskedTextResultHint" RefType="out" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="43acf-642">Der <see cref="T:System.String" />-Wert, über den die formatierte Zeichenfolge festgelegt wird.</span><span class="sxs-lookup"><span data-stu-id="43acf-642">The <see cref="T:System.String" /> value used to set the formatted string.</span></span></param>
        <param name="testPosition"><span data-ttu-id="43acf-643">Bei Erfolg die nullbasierte Position in der formatierten Zeichenfolge, an der das letzte Zeichen festgelegt wurde, andernfalls die erste Position, an der der Vorgang fehlgeschlagen ist.</span><span class="sxs-lookup"><span data-stu-id="43acf-643">If successful, the zero-based position in the formatted string where the last character was actually set; otherwise, the first position where the operation failed.</span></span> <span data-ttu-id="43acf-644">Ein Ausgabeparameter.</span><span class="sxs-lookup"><span data-stu-id="43acf-644">An output parameter.</span></span></param>
        <param name="resultHint"><span data-ttu-id="43acf-645">Ein <see cref="T:System.ComponentModel.MaskedTextResultHint" />, mit dem das Ergebnis des Festlegungsvorgangs kurz beschrieben wird.</span><span class="sxs-lookup"><span data-stu-id="43acf-645">A <see cref="T:System.ComponentModel.MaskedTextResultHint" /> that succinctly describes the result of the set operation.</span></span> <span data-ttu-id="43acf-646">Ein Ausgabeparameter.</span><span class="sxs-lookup"><span data-stu-id="43acf-646">An output parameter.</span></span></param>
        <summary><span data-ttu-id="43acf-647">Legt die formatierte Zeichenfolge auf die angegebene Eingabezeichenfolge fest und gibt anschließend die Löschposition sowie beschreibende Informationen aus.</span><span class="sxs-lookup"><span data-stu-id="43acf-647">Sets the formatted string to the specified input string, and then outputs the removal position and descriptive information.</span></span></summary>
        <returns><span data-ttu-id="43acf-648"><see langword="true" />, wenn alle Zeichen erfolgreich festgelegt wurden, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="43acf-648"><see langword="true" /> if all the characters were successfully set; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43acf-649">Die <xref:System.ComponentModel.MaskedTextProvider.Set%2A>-Methode löscht den vorhandenen Inhalt der formatierten Zeichenfolge und wendet dann die Maske auf die `input` Zeichenfolge an, um den Inhalt der formatierten Zeichenfolge zu aktualisieren.</span><span class="sxs-lookup"><span data-stu-id="43acf-649">The <xref:System.ComponentModel.MaskedTextProvider.Set%2A> method clears the existing contents of the formatted string and then applies the mask against the `input` string to update the contents of the formatted string.</span></span>  
  
 <span data-ttu-id="43acf-650">Die folgenden Bedingungen werden als Fehler betrachtet.</span><span class="sxs-lookup"><span data-stu-id="43acf-650">The following conditions are considered errors.</span></span> <span data-ttu-id="43acf-651">Wenn ein Fehler auftritt, bleibt die formatierte Zeichenfolge unverändert, und <xref:System.ComponentModel.MaskedTextProvider.Set%2A> gibt `false`zurück.</span><span class="sxs-lookup"><span data-stu-id="43acf-651">When an error occurs, the formatted string remains unaltered and <xref:System.ComponentModel.MaskedTextProvider.Set%2A> returns `false`.</span></span>  
  
-   <span data-ttu-id="43acf-652">Es sind nicht genügend bearbeitbare Positionen in der formatierten Zeichenfolge vorhanden, um den Inhalt der Ersetzungs Zeichenfolge zu speichern.</span><span class="sxs-lookup"><span data-stu-id="43acf-652">There are not enough editable positions in the formatted string to hold the contents of the replacement string.</span></span>  
  
-   <span data-ttu-id="43acf-653">Einer der Ersatz Zeichen Werte ist ungültig, weil er nicht druckbar ist oder nicht mit dem entsprechenden Masken Element übereinstimmt.</span><span class="sxs-lookup"><span data-stu-id="43acf-653">One of the replacement character values is not valid because it is not printable or does not match its corresponding mask element.</span></span>  
  
 <span data-ttu-id="43acf-654">Diese Version von <xref:System.ComponentModel.MaskedTextProvider.Set%2A> bietet zwei zusätzliche Ausgabeparameter, um weitere Informationen über den Vorgang der Methode zu übermitteln.</span><span class="sxs-lookup"><span data-stu-id="43acf-654">This version of <xref:System.ComponentModel.MaskedTextProvider.Set%2A> provides two additional output parameters to convey more information about the operation of the method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="43acf-655">Der Parameter <paramref name="input" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="43acf-655">The <paramref name="input" /> parameter is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsValidInputChar(System.Char)" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Add" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Clear" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.InsertAt" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Remove" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.RemoveAt" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Replace" />
      </Docs>
    </Member>
    <Member MemberName="SkipLiterals">
      <MemberSignature Language="C#" Value="public bool SkipLiterals { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SkipLiterals" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.MaskedTextProvider.SkipLiterals" />
      <MemberSignature Language="VB.NET" Value="Public Property SkipLiterals As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SkipLiterals { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.SkipLiterals : bool with get, set" Usage="System.ComponentModel.MaskedTextProvider.SkipLiterals" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="43acf-656">Ruft einen Wert ab, der angibt, ob Literalzeichenpositionen in der Maske durch ihnen entsprechende Werte überschrieben werden dürfen, oder legt einen solchen Wert fest.</span><span class="sxs-lookup"><span data-stu-id="43acf-656">Gets or sets a value indicating whether literal character positions in the mask can be overwritten by their same values.</span></span></summary>
        <value><span data-ttu-id="43acf-657"><see langword="true" />, um das Wiederhinzufügen von Literalzeichen zuzulassen, andernfalls <see langword="false" />, wenn das Überschreiben von Literalzeichen durch den Benutzer nicht erlaubt werden soll.</span><span class="sxs-lookup"><span data-stu-id="43acf-657"><see langword="true" /> to allow literals to be added back; otherwise, <see langword="false" /> to not allow the user to overwrite literal characters.</span></span> <span data-ttu-id="43acf-658">Der Standardwert lautet <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="43acf-658">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43acf-659">Eingabemasken können Literale und bearbeitbare Zeichen enthalten.</span><span class="sxs-lookup"><span data-stu-id="43acf-659">Input masks can contain literal and editable characters.</span></span> <span data-ttu-id="43acf-660">Wenn versucht wird, der Position in einer von einem literalen belegten Maske ein Eingabezeichen hinzuzufügen, bestimmt der Wert der <xref:System.Windows.Forms.MaskedTextBox.SkipLiterals%2A>-Eigenschaft das Ergebnis.</span><span class="sxs-lookup"><span data-stu-id="43acf-660">If an attempt is made to add an input character to the position in a mask occupied by a literal, the value of the <xref:System.Windows.Forms.MaskedTextBox.SkipLiterals%2A> property determines the result.</span></span>  
  
-   <span data-ttu-id="43acf-661">Wenn diese Eigenschaft `true`ist, ist es zulässig, ein Literale mit dem gleichen Wert zu überschreiben, wenn Eingabezeichen hinzugefügt werden.</span><span class="sxs-lookup"><span data-stu-id="43acf-661">If this property is `true`, it is valid to overwrite a literal with the same value when adding input characters.</span></span> <span data-ttu-id="43acf-662">So kann z. b. ein Schrägstrich Wert (`'/'`) der dritten Position der Maske `"00/00/000"`hinzugefügt werden.</span><span class="sxs-lookup"><span data-stu-id="43acf-662">For example, a forward slash character value, `'/'`, could be added to the third position of the mask `"00/00/000"`.</span></span>  
  
-   <span data-ttu-id="43acf-663">Wenn diese Eigenschaft `false`ist, ist es nicht zulässig, einen beliebigen Wert einer Masken Position zuzuweisen, die von einem Literalzeichen belegt wird.</span><span class="sxs-lookup"><span data-stu-id="43acf-663">If this property is `false`, it is not valid to assign any value to a mask position occupied by a literal character.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.SkipLiterals" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.IncludeLiterals" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsEditPosition(System.Int32)" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.ResetOnSpace" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.ResetOnPrompt" />
      </Docs>
    </Member>
    <Member MemberName="ToDisplayString">
      <MemberSignature Language="C#" Value="public string ToDisplayString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToDisplayString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.ToDisplayString" />
      <MemberSignature Language="VB.NET" Value="Public Function ToDisplayString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToDisplayString();" />
      <MemberSignature Language="F#" Value="member this.ToDisplayString : unit -&gt; string" Usage="maskedTextProvider.ToDisplayString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="43acf-664">Gibt die formatierte Zeichenfolge in anzeigbarer Form zurück.</span><span class="sxs-lookup"><span data-stu-id="43acf-664">Returns the formatted string in a displayable form.</span></span></summary>
        <returns><span data-ttu-id="43acf-665">Der formatierte <see cref="T:System.String" /> mit Aufforderungszeichen und Maskenliteralzeichen.</span><span class="sxs-lookup"><span data-stu-id="43acf-665">The formatted <see cref="T:System.String" /> that includes prompts and mask literals.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43acf-666">Die <xref:System.ComponentModel.MaskedTextProvider.ToDisplayString%2A>-Methode enthält immer Eingabe Aufforderungs-und Literalzeichen im Rückgabewert, unabhängig vom Wert der Eigenschaften <xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A> oder <xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A>.</span><span class="sxs-lookup"><span data-stu-id="43acf-666">The <xref:System.ComponentModel.MaskedTextProvider.ToDisplayString%2A> method will always include prompt and literal characters in the return value, regardless of the value of the <xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A> or <xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A> properties.</span></span> <span data-ttu-id="43acf-667">Diese Methode zeigt immer Kenn Wort Zeichen an, wenn die <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A>-Eigenschaft auf einen anderen Zeichen Wert als `null`festgelegt ist.</span><span class="sxs-lookup"><span data-stu-id="43acf-667">This method will always display password characters if the <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A> property is set to a character value other than `null`.</span></span>  
  
 <span data-ttu-id="43acf-668"><xref:System.ComponentModel.MaskedTextProvider.ToDisplayString%2A> wird häufig verwendet, um die Zeichenfolge zu erhalten, die in zugeordneten Benutzeroberflächen Elementen angezeigt wird, z. b. <xref:System.Windows.Forms.MaskedTextBox>.</span><span class="sxs-lookup"><span data-stu-id="43acf-668"><xref:System.ComponentModel.MaskedTextProvider.ToDisplayString%2A> is commonly used to obtain the string to display in associated user interface elements, such as <xref:System.Windows.Forms.MaskedTextBox>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.ToString" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Set" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.IncludePrompt" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.IncludeLiterals" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.PasswordChar" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ToString">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="43acf-669">Gibt die formatierte Zeichenfolge zurück.</span><span class="sxs-lookup"><span data-stu-id="43acf-669">Returns the formatted string.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="maskedTextProvider.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="43acf-670">Gibt die formatierte Zeichenfolge zurück, die alle zugewiesenen Zeichenwerte umfasst.</span><span class="sxs-lookup"><span data-stu-id="43acf-670">Returns the formatted string that includes all the assigned character values.</span></span></summary>
        <returns><span data-ttu-id="43acf-671">Der formatierte <see cref="T:System.String" />, der alle zugewiesenen Zeichenwerte umfasst.</span><span class="sxs-lookup"><span data-stu-id="43acf-671">The formatted <see cref="T:System.String" /> that includes all the assigned character values.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43acf-672">Diese Version der überladenen <xref:System.ComponentModel.MaskedTextProvider.ToString%2A> Methode enthält, fordert und Literale gemäß der aktuellen Werte von der <xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A> und <xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A> Eigenschaften bzw.</span><span class="sxs-lookup"><span data-stu-id="43acf-672">This version of the overloaded <xref:System.ComponentModel.MaskedTextProvider.ToString%2A> method includes prompts and literals according to the current values of the <xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A> and <xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A> properties, respectively.</span></span> <span data-ttu-id="43acf-673">Es werden immer die ursprünglichen Eingabezeichen zurückgegeben, wobei der Wert der <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A>-Eigenschaft ignoriert wird.</span><span class="sxs-lookup"><span data-stu-id="43acf-673">It will always return the original input characters, ignoring the value of the <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A> property.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="43acf-674">Da durch diese Methode Informationen angezeigt werden, die in der Regel in der Benutzeroberfläche durch Kenn Wort Zeichen geschützt werden, sollten Sie mit äußerster Vorsicht verwendet werden, um zu vermeiden, dass sensible Benutzerdaten versehentlich angezeigt werden.</span><span class="sxs-lookup"><span data-stu-id="43acf-674">Because this method reveals information that is usually protected in the user interface by password characters, it should be used with extreme caution to avoid accidentally revealing sensitive user data.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.ToDisplayString" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Set" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.IncludePrompt" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.IncludeLiterals" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.PasswordChar" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (bool ignorePasswordChar);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToString(bool ignorePasswordChar) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.ToString(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (ignorePasswordChar As Boolean) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToString(bool ignorePasswordChar);" />
      <MemberSignature Language="F#" Value="override this.ToString : bool -&gt; string" Usage="maskedTextProvider.ToString ignorePasswordChar" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ignorePasswordChar" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="ignorePasswordChar"><span data-ttu-id="43acf-675"><see langword="true" />, um die tatsächlich bearbeitbaren Zeichen zurückzugeben, andernfalls <see langword="false" />, um anzugeben, dass die <see cref="P:System.ComponentModel.MaskedTextProvider.PasswordChar" />-Eigenschaft zu beachten ist.</span><span class="sxs-lookup"><span data-stu-id="43acf-675"><see langword="true" /> to return the actual editable characters; otherwise, <see langword="false" /> to indicate that the <see cref="P:System.ComponentModel.MaskedTextProvider.PasswordChar" /> property is to be honored.</span></span></param>
        <summary><span data-ttu-id="43acf-676">Gibt die formatierte Zeichenfolge (optional einschließlich von Kennwortzeichen) zurück.</span><span class="sxs-lookup"><span data-stu-id="43acf-676">Returns the formatted string, optionally including password characters.</span></span></summary>
        <returns><span data-ttu-id="43acf-677">Der formatierte <see cref="T:System.String" />, der Literalzeichen, Aufforderungszeichen und optional auch Kennwortzeichen umfasst.</span><span class="sxs-lookup"><span data-stu-id="43acf-677">The formatted <see cref="T:System.String" /> that includes literals, prompts, and optionally password characters.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43acf-678">Diese Version der überladenen <xref:System.ComponentModel.MaskedTextProvider.ToString%2A> Methode enthält, fordert und Literale gemäß der aktuellen Werte von der <xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A> und <xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A> Eigenschaften bzw.</span><span class="sxs-lookup"><span data-stu-id="43acf-678">This version of the overloaded <xref:System.ComponentModel.MaskedTextProvider.ToString%2A> method includes prompts and literals according to the current values of the <xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A> and <xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A> properties, respectively.</span></span> <span data-ttu-id="43acf-679">Wenn der `ignorePasswordChar`-Parameter `true`ist, werden die ursprünglichen Eingabezeichen zurückgegeben, wobei der Wert der <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A>-Eigenschaft ignoriert wird.</span><span class="sxs-lookup"><span data-stu-id="43acf-679">If the `ignorePasswordChar` parameter is `true`, it will return the original input characters, ignoring the value of the <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A> property.</span></span> <span data-ttu-id="43acf-680">Wenn dieser Parameter `false`ist, wird das Kenn Wort Zeichen verwendet, um bearbeitbare Benutzereingaben zu verbergen, wenn die <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A>-Eigenschaft auf einen anderen Wert als `null`festgelegt ist.</span><span class="sxs-lookup"><span data-stu-id="43acf-680">If this parameter is `false`, it will use the password character to obscure editable user input if the <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A> property is set to a value other than `null`.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="43acf-681">Da diese Methode möglicherweise Informationen aufzeigt, die in der Benutzeroberfläche in der Regel durch Kenn Wort Zeichen geschützt werden, sollte Sie mit äußerster Vorsicht verwendet werden, um zu vermeiden, dass sensible Benutzerdaten versehentlich angezeigt werden.</span><span class="sxs-lookup"><span data-stu-id="43acf-681">Because this method potentially reveals information that is usually protected in the user interface by password characters, it should be used with extreme caution to avoid accidentally revealing sensitive user data.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.ToDisplayString" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Set" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.IncludePrompt" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.IncludeLiterals" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.PasswordChar" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (bool includePrompt, bool includeLiterals);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToString(bool includePrompt, bool includeLiterals) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.ToString(System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (includePrompt As Boolean, includeLiterals As Boolean) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToString(bool includePrompt, bool includeLiterals);" />
      <MemberSignature Language="F#" Value="override this.ToString : bool * bool -&gt; string" Usage="maskedTextProvider.ToString (includePrompt, includeLiterals)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="includePrompt" Type="System.Boolean" />
        <Parameter Name="includeLiterals" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="includePrompt"><span data-ttu-id="43acf-682"><see langword="true" />, um Aufforderungszeichen in die Rückgabezeichenfolge einzuschließen, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="43acf-682"><see langword="true" /> to include prompt characters in the return string; otherwise, <see langword="false" />.</span></span></param>
        <param name="includeLiterals"><span data-ttu-id="43acf-683"><see langword="true" />, um Literalzeichen in die Rückgabezeichenfolge einzuschließen, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="43acf-683"><see langword="true" /> to include literal characters in the return string; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="43acf-684">Gibt die formatierte Zeichenfolge (optional einschließlich Aufforderungs- und Literalzeichen) zurück.</span><span class="sxs-lookup"><span data-stu-id="43acf-684">Returns the formatted string, optionally including prompt and literal characters.</span></span></summary>
        <returns><span data-ttu-id="43acf-685">Der formatierte <see cref="T:System.String" />, der alle zugewiesenen Zeichenwerte und optional Literal- und Aufforderungszeichen umfasst.</span><span class="sxs-lookup"><span data-stu-id="43acf-685">The formatted <see cref="T:System.String" /> that includes all the assigned character values and optionally includes literals and prompts.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43acf-686">Diese Version der überladenen <xref:System.ComponentModel.MaskedTextProvider.ToString%2A> Methode enthält, fordert und Literale nach den Werten der der `IncludePrompt` und `IncludeLiterals` Parameter bzw.</span><span class="sxs-lookup"><span data-stu-id="43acf-686">This version of the overloaded <xref:System.ComponentModel.MaskedTextProvider.ToString%2A> method includes prompts and literals according to the values of the `IncludePrompt` and `IncludeLiterals` parameters, respectively.</span></span> <span data-ttu-id="43acf-687">Beachten Sie, dass diese Parameter die Werte der <xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A><xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A> Eigenschaften überschreiben.</span><span class="sxs-lookup"><span data-stu-id="43acf-687">Notice that these parameters override the values of the <xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A><xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A> properties.</span></span> <span data-ttu-id="43acf-688">Diese Methode gibt immer die ursprünglichen Eingabezeichen zurück, wobei der Wert der <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A>-Eigenschaft ignoriert wird.</span><span class="sxs-lookup"><span data-stu-id="43acf-688">This method will always return the original input characters, ignoring the value of the <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A> property.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="43acf-689">Da durch diese Methode Informationen angezeigt werden, die in der Regel in der Benutzeroberfläche durch Kenn Wort Zeichen geschützt werden, sollten Sie mit äußerster Vorsicht verwendet werden, um zu vermeiden, dass sensible Benutzerdaten versehentlich angezeigt werden.</span><span class="sxs-lookup"><span data-stu-id="43acf-689">Because this method reveals information that is usually protected in the user interface by password characters, it should be used with extreme caution to avoid accidentally revealing sensitive user data.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsAvailablePosition(System.Int32)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.ToDisplayString" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Set" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.IncludePrompt" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.IncludeLiterals" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.PasswordChar" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (int startPosition, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToString(int32 startPosition, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.ToString(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (startPosition As Integer, length As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToString(int startPosition, int length);" />
      <MemberSignature Language="F#" Value="override this.ToString : int * int -&gt; string" Usage="maskedTextProvider.ToString (startPosition, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startPosition" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="startPosition"><span data-ttu-id="43acf-690">Die nullbasierte Position in der formatierten Zeichenfolge, an der die Ausgabe beginnt.</span><span class="sxs-lookup"><span data-stu-id="43acf-690">The zero-based position in the formatted string where the output begins.</span></span></param>
        <param name="length"><span data-ttu-id="43acf-691">Die Anzahl der zurückzugebenden Zeichen.</span><span class="sxs-lookup"><span data-stu-id="43acf-691">The number of characters to return.</span></span></param>
        <summary><span data-ttu-id="43acf-692">Gibt eine Teilzeichenfolge der formatierten Zeichenfolge zurück.</span><span class="sxs-lookup"><span data-stu-id="43acf-692">Returns a substring of the formatted string.</span></span></summary>
        <returns><span data-ttu-id="43acf-693">Bei Erfolg eine Teilzeichenfolge des formatierten <see cref="T:System.String" />, die alle zugewiesenen Zeichenwerte umfasst, andernfalls die <see cref="F:System.String.Empty" />-Zeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="43acf-693">If successful, a substring of the formatted <see cref="T:System.String" />, which includes all the assigned character values; otherwise the <see cref="F:System.String.Empty" /> string.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43acf-694">Diese Version der überladenen <xref:System.ComponentModel.MaskedTextProvider.ToString%2A> Methode gibt eine Teil Zeichenfolge der formatierten Zeichenfolge zurück, beginnend an der Position `startPos` und einschließlich der nachfolgenden Anzahl von Zeichen, die durch den `length`-Parameter angegeben werden.</span><span class="sxs-lookup"><span data-stu-id="43acf-694">This version of the overloaded <xref:System.ComponentModel.MaskedTextProvider.ToString%2A> method returns a substring of the formatted string, starting at the position `startPos` and including the subsequent number of characters specified by the `length` parameter.</span></span> <span data-ttu-id="43acf-695">Die zurückgegebene Zeichenfolge enthält, fordert und Literale gemäß der aktuellen Werte von der <xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A> und <xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A> Eigenschaften bzw.</span><span class="sxs-lookup"><span data-stu-id="43acf-695">The returned string includes prompts and literals according to the current values of the <xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A> and <xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A> properties, respectively.</span></span> <span data-ttu-id="43acf-696">Die Rückgabe Zeichenfolge enthält die ursprünglichen Eingabezeichen. die <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A>-Eigenschaft wird immer ignoriert.</span><span class="sxs-lookup"><span data-stu-id="43acf-696">The return string will contain the original input characters; the <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A> property is always ignored.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="43acf-697">Da durch diese Methode Informationen angezeigt werden, die in der Regel in der Benutzeroberfläche durch Kenn Wort Zeichen geschützt werden, sollten Sie mit äußerster Vorsicht verwendet werden, um zu vermeiden, dass sensible Benutzerdaten versehentlich angezeigt werden.</span><span class="sxs-lookup"><span data-stu-id="43acf-697">Because this method reveals information that is usually protected in the user interface by password characters, it should be used with extreme caution to avoid accidentally revealing sensitive user data.</span></span>  
  
 <span data-ttu-id="43acf-698"><xref:System.ComponentModel.MaskedTextProvider.ToString%2A> führt die folgenden Aktionen aus, wenn es Abweichungen in den Eingabe Parametern gibt:</span><span class="sxs-lookup"><span data-stu-id="43acf-698"><xref:System.ComponentModel.MaskedTextProvider.ToString%2A> performs the following actions when there are discrepancies in the input parameters:</span></span>  
  
-   <span data-ttu-id="43acf-699">Wenn `startPos` kleiner als 0 (null) ist, wird die Anfangsposition auf 0 (null) festgelegt.</span><span class="sxs-lookup"><span data-stu-id="43acf-699">If `startPos` is less than zero, the starting position is set to zero.</span></span>  
  
-   <span data-ttu-id="43acf-700">Wenn `startPos` größer oder gleich dem tatsächlichen <xref:System.ComponentModel.MaskedTextProvider.Length%2A> der formatierten Zeichenfolge ist, wird die <xref:System.String.Empty> Zeichenfolge zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="43acf-700">If `startPos` is greater than or equal to the actual <xref:System.ComponentModel.MaskedTextProvider.Length%2A> of the formatted string, the <xref:System.String.Empty> string is returned.</span></span>  
  
-   <span data-ttu-id="43acf-701">Wenn `length` größer als die verbleibende Anzahl von Zeichen nach der Anfangsposition ist, werden nur die verbleibenden Zeichen zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="43acf-701">If `length` is greater than the remaining number of characters past the starting position, only the remaining characters are returned.</span></span>  
  
-   <span data-ttu-id="43acf-702">Wenn `length` kleiner oder gleich NULL ist, wird die <xref:System.String.Empty> Zeichenfolge zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="43acf-702">If `length` is less than or equal to zero, the <xref:System.String.Empty> string is returned.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.ToDisplayString" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Set" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.IncludePrompt" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.IncludeLiterals" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.PasswordChar" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (bool ignorePasswordChar, int startPosition, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToString(bool ignorePasswordChar, int32 startPosition, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.ToString(System.Boolean,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (ignorePasswordChar As Boolean, startPosition As Integer, length As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToString(bool ignorePasswordChar, int startPosition, int length);" />
      <MemberSignature Language="F#" Value="override this.ToString : bool * int * int -&gt; string" Usage="maskedTextProvider.ToString (ignorePasswordChar, startPosition, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ignorePasswordChar" Type="System.Boolean" />
        <Parameter Name="startPosition" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ignorePasswordChar"><span data-ttu-id="43acf-703"><see langword="true" />, um die tatsächlich bearbeitbaren Zeichen zurückzugeben, andernfalls <see langword="false" />, um anzugeben, dass die <see cref="P:System.ComponentModel.MaskedTextProvider.PasswordChar" />-Eigenschaft zu beachten ist.</span><span class="sxs-lookup"><span data-stu-id="43acf-703"><see langword="true" /> to return the actual editable characters; otherwise, <see langword="false" /> to indicate that the <see cref="P:System.ComponentModel.MaskedTextProvider.PasswordChar" /> property is to be honored.</span></span></param>
        <param name="startPosition"><span data-ttu-id="43acf-704">Die nullbasierte Position in der formatierten Zeichenfolge, an der die Ausgabe beginnt.</span><span class="sxs-lookup"><span data-stu-id="43acf-704">The zero-based position in the formatted string where the output begins.</span></span></param>
        <param name="length"><span data-ttu-id="43acf-705">Die Anzahl der zurückzugebenden Zeichen.</span><span class="sxs-lookup"><span data-stu-id="43acf-705">The number of characters to return.</span></span></param>
        <summary><span data-ttu-id="43acf-706">Gibt eine Teilzeichenfolge der formatierten Zeichenfolge (optional einschließlich von Kennwortzeichen) zurück.</span><span class="sxs-lookup"><span data-stu-id="43acf-706">Returns a substring of the formatted string, optionally including password characters.</span></span></summary>
        <returns><span data-ttu-id="43acf-707">Bei Erfolg eine Teilzeichenfolge des formatierten <see cref="T:System.String" />, die Literal-, Aufforderungs- und optional Kennwortzeichen einschließt, andernfalls die <see cref="F:System.String.Empty" />-Zeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="43acf-707">If successful, a substring of the formatted <see cref="T:System.String" />, which includes literals, prompts, and optionally password characters; otherwise the <see cref="F:System.String.Empty" /> string.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43acf-708">Diese Version der überladenen <xref:System.ComponentModel.MaskedTextProvider.ToString%2A> Methode gibt eine Teil Zeichenfolge der formatierten Zeichenfolge zurück, beginnend an der Position `startPos` und einschließlich der nachfolgenden Anzahl von Zeichen, die durch den `length`-Parameter angegeben werden.</span><span class="sxs-lookup"><span data-stu-id="43acf-708">This version of the overloaded <xref:System.ComponentModel.MaskedTextProvider.ToString%2A> method returns a substring of the formatted string, starting at the position `startPos` and including the subsequent number of characters specified by the `length` parameter.</span></span> <span data-ttu-id="43acf-709">Die zurückgegebene Zeichenfolge enthält, fordert und Literale gemäß der aktuellen Werte von der <xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A> und <xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A> Eigenschaften bzw.</span><span class="sxs-lookup"><span data-stu-id="43acf-709">The returned string includes prompts and literals according to the current values of the <xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A> and <xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A> properties, respectively.</span></span> <span data-ttu-id="43acf-710">Wenn der `ignorePasswordChar`-Parameter `true`ist, werden die ursprünglichen Eingabezeichen zurückgegeben, wobei der Wert der <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A>-Eigenschaft ignoriert wird.</span><span class="sxs-lookup"><span data-stu-id="43acf-710">If the `ignorePasswordChar` parameter is `true`, it will return the original input characters, ignoring the value of the <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A> property.</span></span> <span data-ttu-id="43acf-711">Wenn dieser Parameter `false`ist, wird das Kenn Wort Zeichen verwendet, um bearbeitbare Benutzereingaben zu verbergen, wenn die <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A>-Eigenschaft auf einen anderen Wert als `null`festgelegt ist.</span><span class="sxs-lookup"><span data-stu-id="43acf-711">If this parameter is `false`, it will use the password character to obscure editable user input if the <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A> property is set to a value other than `null`.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="43acf-712">Da diese Methode möglicherweise Informationen aufzeigt, die in der Benutzeroberfläche in der Regel durch Kenn Wort Zeichen geschützt werden, sollte Sie mit äußerster Vorsicht verwendet werden, um zu vermeiden, dass sensible Benutzerdaten versehentlich angezeigt werden.</span><span class="sxs-lookup"><span data-stu-id="43acf-712">Because this method potentially reveals information that is usually protected in the user interface by password characters, it should be used with extreme caution to avoid accidentally revealing sensitive user data.</span></span>  
  
 <span data-ttu-id="43acf-713"><xref:System.ComponentModel.MaskedTextProvider.ToString%2A> führt die folgenden Aktionen aus, wenn es Abweichungen in den Eingabe Parametern gibt:</span><span class="sxs-lookup"><span data-stu-id="43acf-713"><xref:System.ComponentModel.MaskedTextProvider.ToString%2A> performs the following actions when there are discrepancies in the input parameters:</span></span>  
  
-   <span data-ttu-id="43acf-714">Wenn `startPos` kleiner als 0 (null) ist, wird die Anfangsposition auf 0 (null) festgelegt.</span><span class="sxs-lookup"><span data-stu-id="43acf-714">If `startPos` is less than zero, the starting position is set to zero.</span></span>  
  
-   <span data-ttu-id="43acf-715">Wenn `startPos` größer oder gleich dem tatsächlichen <xref:System.ComponentModel.MaskedTextProvider.Length%2A> der formatierten Zeichenfolge ist, wird die <xref:System.String.Empty> Zeichenfolge zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="43acf-715">If `startPos` is greater than or equal to the actual <xref:System.ComponentModel.MaskedTextProvider.Length%2A> of the formatted string, the <xref:System.String.Empty> string is returned.</span></span>  
  
-   <span data-ttu-id="43acf-716">Wenn `length` größer als die verbleibende Anzahl von Zeichen nach der Anfangsposition ist, werden nur die verbleibenden Zeichen zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="43acf-716">If `length` is greater than the remaining number of characters past the starting position, only the remaining characters are returned.</span></span>  
  
-   <span data-ttu-id="43acf-717">Wenn `length` kleiner oder gleich NULL ist, wird die <xref:System.String.Empty> Zeichenfolge zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="43acf-717">If `length` is less than or equal to zero, the <xref:System.String.Empty> string is returned.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.ToDisplayString" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Set" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.IncludePrompt" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.IncludeLiterals" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.PasswordChar" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (bool includePrompt, bool includeLiterals, int startPosition, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToString(bool includePrompt, bool includeLiterals, int32 startPosition, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.ToString(System.Boolean,System.Boolean,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (includePrompt As Boolean, includeLiterals As Boolean, startPosition As Integer, length As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToString(bool includePrompt, bool includeLiterals, int startPosition, int length);" />
      <MemberSignature Language="F#" Value="override this.ToString : bool * bool * int * int -&gt; string" Usage="maskedTextProvider.ToString (includePrompt, includeLiterals, startPosition, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="includePrompt" Type="System.Boolean" />
        <Parameter Name="includeLiterals" Type="System.Boolean" />
        <Parameter Name="startPosition" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="includePrompt"><span data-ttu-id="43acf-718"><see langword="true" />, um Aufforderungszeichen in die Rückgabezeichenfolge einzuschließen, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="43acf-718"><see langword="true" /> to include prompt characters in the return string; otherwise, <see langword="false" />.</span></span></param>
        <param name="includeLiterals"><span data-ttu-id="43acf-719"><see langword="true" />, um Literalzeichen in die Rückgabezeichenfolge einzuschließen, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="43acf-719"><see langword="true" /> to include literal characters in the return string; otherwise, <see langword="false" />.</span></span></param>
        <param name="startPosition"><span data-ttu-id="43acf-720">Die nullbasierte Position in der formatierten Zeichenfolge, an der die Ausgabe beginnt.</span><span class="sxs-lookup"><span data-stu-id="43acf-720">The zero-based position in the formatted string where the output begins.</span></span></param>
        <param name="length"><span data-ttu-id="43acf-721">Die Anzahl der zurückzugebenden Zeichen.</span><span class="sxs-lookup"><span data-stu-id="43acf-721">The number of characters to return.</span></span></param>
        <summary><span data-ttu-id="43acf-722">Gibt eine Teilzeichenfolge der formatierten Zeichenfolge (optional einschließlich Aufforderungs- und Literalzeichen) zurück.</span><span class="sxs-lookup"><span data-stu-id="43acf-722">Returns a substring of the formatted string, optionally including prompt and literal characters.</span></span></summary>
        <returns><span data-ttu-id="43acf-723">Bei Erfolg eine Teilzeichenfolge des formatierten <see cref="T:System.String" />, die alle zugewiesenen Zeichenwerte und optional Literal- und Aufforderungszeichen umfasst, andernfalls die <see cref="F:System.String.Empty" />-Zeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="43acf-723">If successful, a substring of the formatted <see cref="T:System.String" />, which includes all the assigned character values and optionally includes literals and prompts; otherwise the <see cref="F:System.String.Empty" /> string.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43acf-724">Diese Version der überladenen <xref:System.ComponentModel.MaskedTextProvider.ToString%2A> Methode gibt eine Teil Zeichenfolge der formatierten Zeichenfolge zurück, beginnend an der Position `startPos` und einschließlich der nachfolgenden Anzahl von Zeichen, die durch den `length`-Parameter angegeben werden.</span><span class="sxs-lookup"><span data-stu-id="43acf-724">This version of the overloaded <xref:System.ComponentModel.MaskedTextProvider.ToString%2A> method returns a substring of the formatted string, starting at the position `startPos` and including the subsequent number of characters specified by the `length` parameter.</span></span> <span data-ttu-id="43acf-725">Die zurückgegebene Zeichenfolge enthält, fordert und Literale nach den Werten der der `IncludePrompt` und `IncludeLiterals` Parameter bzw.</span><span class="sxs-lookup"><span data-stu-id="43acf-725">The return string includes prompts and literals according to the values of the `IncludePrompt` and `IncludeLiterals` parameters, respectively.</span></span> <span data-ttu-id="43acf-726">Beachten Sie, dass diese Parameter die Werte der <xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A><xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A> Eigenschaften überschreiben.</span><span class="sxs-lookup"><span data-stu-id="43acf-726">Notice that these parameters override the values of the <xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A><xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A> properties.</span></span> <span data-ttu-id="43acf-727">Diese Methode gibt immer die ursprünglichen Eingabezeichen zurück, wobei der Wert der <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A>-Eigenschaft ignoriert wird.</span><span class="sxs-lookup"><span data-stu-id="43acf-727">This method will always return the original input characters, ignoring the value of the <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A> property.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="43acf-728">Da durch diese Methode Informationen angezeigt werden, die in der Regel in der Benutzeroberfläche durch Kenn Wort Zeichen geschützt werden, sollten Sie mit äußerster Vorsicht verwendet werden, um zu vermeiden, dass sensible Benutzerdaten versehentlich angezeigt werden.</span><span class="sxs-lookup"><span data-stu-id="43acf-728">Because this method reveals information that is usually protected in the user interface by password characters, it should be used with extreme caution to avoid accidentally revealing sensitive user data.</span></span>  
  
 <span data-ttu-id="43acf-729"><xref:System.ComponentModel.MaskedTextProvider.ToString%2A> führt die folgenden Aktionen aus, wenn es Abweichungen in den Eingabe Parametern gibt:</span><span class="sxs-lookup"><span data-stu-id="43acf-729"><xref:System.ComponentModel.MaskedTextProvider.ToString%2A> performs the following actions when there are discrepancies in the input parameters:</span></span>  
  
-   <span data-ttu-id="43acf-730">Wenn `startPos` kleiner als 0 (null) ist, wird die Anfangsposition auf 0 (null) festgelegt.</span><span class="sxs-lookup"><span data-stu-id="43acf-730">If `startPos` is less than zero, the starting position is set to zero.</span></span>  
  
-   <span data-ttu-id="43acf-731">Wenn `startPos` größer oder gleich dem tatsächlichen <xref:System.ComponentModel.MaskedTextProvider.Length%2A> der formatierten Zeichenfolge ist, wird die <xref:System.String.Empty> Zeichenfolge zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="43acf-731">If `startPos` is greater than or equal to the actual <xref:System.ComponentModel.MaskedTextProvider.Length%2A> of the formatted string, the <xref:System.String.Empty> string is returned.</span></span>  
  
-   <span data-ttu-id="43acf-732">Wenn `length` größer als die verbleibende Anzahl von Zeichen nach der Anfangsposition ist, werden nur die verbleibenden Zeichen zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="43acf-732">If `length` is greater than the remaining number of characters past the starting position, only the remaining characters are returned.</span></span>  
  
-   <span data-ttu-id="43acf-733">Wenn `length` kleiner oder gleich NULL ist, wird die <xref:System.String.Empty> Zeichenfolge zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="43acf-733">If `length` is less than or equal to zero, the <xref:System.String.Empty> string is returned.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.ToDisplayString" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Set" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.IncludePrompt" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.IncludeLiterals" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.PasswordChar" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (bool ignorePasswordChar, bool includePrompt, bool includeLiterals, int startPosition, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToString(bool ignorePasswordChar, bool includePrompt, bool includeLiterals, int32 startPosition, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.ToString(System.Boolean,System.Boolean,System.Boolean,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (ignorePasswordChar As Boolean, includePrompt As Boolean, includeLiterals As Boolean, startPosition As Integer, length As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToString(bool ignorePasswordChar, bool includePrompt, bool includeLiterals, int startPosition, int length);" />
      <MemberSignature Language="F#" Value="override this.ToString : bool * bool * bool * int * int -&gt; string" Usage="maskedTextProvider.ToString (ignorePasswordChar, includePrompt, includeLiterals, startPosition, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ignorePasswordChar" Type="System.Boolean" />
        <Parameter Name="includePrompt" Type="System.Boolean" />
        <Parameter Name="includeLiterals" Type="System.Boolean" />
        <Parameter Name="startPosition" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ignorePasswordChar"><span data-ttu-id="43acf-734"><see langword="true" />, um die tatsächlich bearbeitbaren Zeichen zurückzugeben, andernfalls <see langword="false" />, um anzugeben, dass die <see cref="P:System.ComponentModel.MaskedTextProvider.PasswordChar" />-Eigenschaft zu beachten ist.</span><span class="sxs-lookup"><span data-stu-id="43acf-734"><see langword="true" /> to return the actual editable characters; otherwise, <see langword="false" /> to indicate that the <see cref="P:System.ComponentModel.MaskedTextProvider.PasswordChar" /> property is to be honored.</span></span></param>
        <param name="includePrompt"><span data-ttu-id="43acf-735"><see langword="true" />, um Aufforderungszeichen in die Rückgabezeichenfolge einzuschließen, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="43acf-735"><see langword="true" /> to include prompt characters in the return string; otherwise, <see langword="false" />.</span></span></param>
        <param name="includeLiterals"><span data-ttu-id="43acf-736"><see langword="true" />, um Literalzeichen in die Rückgabezeichenfolge einzuschließen, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="43acf-736"><see langword="true" /> to return literal characters in the return string; otherwise, <see langword="false" />.</span></span></param>
        <param name="startPosition"><span data-ttu-id="43acf-737">Die nullbasierte Position in der formatierten Zeichenfolge, an der die Ausgabe beginnt.</span><span class="sxs-lookup"><span data-stu-id="43acf-737">The zero-based position in the formatted string where the output begins.</span></span></param>
        <param name="length"><span data-ttu-id="43acf-738">Die Anzahl der zurückzugebenden Zeichen.</span><span class="sxs-lookup"><span data-stu-id="43acf-738">The number of characters to return.</span></span></param>
        <summary><span data-ttu-id="43acf-739">Gibt eine Teilzeichenfolge der formatierten Zeichenfolge (optional einschließlich Aufforderungs-, Literal- und Kennwortzeichen) zurück.</span><span class="sxs-lookup"><span data-stu-id="43acf-739">Returns a substring of the formatted string, optionally including prompt, literal, and password characters.</span></span></summary>
        <returns><span data-ttu-id="43acf-740">Bei Erfolg eine Teilzeichenfolge des formatierten <see cref="T:System.String" />, die alle zugewiesenen Zeichenwerte und optional Literal-, Aufforderungs- und Kennwortzeichen umfasst, andernfalls die <see cref="F:System.String.Empty" />-Zeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="43acf-740">If successful, a substring of the formatted <see cref="T:System.String" />, which includes all the assigned character values and optionally includes literals, prompts, and password characters; otherwise the <see cref="F:System.String.Empty" /> string.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43acf-741">Diese Version der überladenen <xref:System.ComponentModel.MaskedTextProvider.ToString%2A> Methode gibt eine Teil Zeichenfolge der formatierten Zeichenfolge zurück, beginnend an der Position `startPos` und einschließlich der nachfolgenden Anzahl von Zeichen, die durch den `length`-Parameter angegeben werden.</span><span class="sxs-lookup"><span data-stu-id="43acf-741">This version of the overloaded <xref:System.ComponentModel.MaskedTextProvider.ToString%2A> method returns a substring of the formatted string, starting at the position `startPos` and including the subsequent number of characters specified by the `length` parameter.</span></span> <span data-ttu-id="43acf-742">Die zurückgegebene Zeichenfolge enthält, fordert und Literale nach den Werten der der `IncludePrompt` und `IncludeLiterals` Parameter bzw.</span><span class="sxs-lookup"><span data-stu-id="43acf-742">The return string includes prompts and literals according to the values of the `IncludePrompt` and `IncludeLiterals` parameters, respectively.</span></span> <span data-ttu-id="43acf-743">Beachten Sie, dass diese Parameter die Werte der Eigenschaften <xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A> und <xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A> überschreiben.</span><span class="sxs-lookup"><span data-stu-id="43acf-743">Notice that these parameters override the values of the <xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A> and  <xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A> properties.</span></span> <span data-ttu-id="43acf-744">Wenn der `ignorePasswordChar`-Parameter `true`ist, werden die ursprünglichen Eingabezeichen zurückgegeben, wobei der Wert der <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A>-Eigenschaft ignoriert wird.</span><span class="sxs-lookup"><span data-stu-id="43acf-744">If the `ignorePasswordChar` parameter is `true`, it will return the original input characters, ignoring the value of the <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A> property.</span></span> <span data-ttu-id="43acf-745">Wenn dieser Parameter `false`ist, wird das Kenn Wort Zeichen verwendet, um bearbeitbare Benutzereingaben zu verbergen, wenn die <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A>-Eigenschaft auf einen anderen Wert als `null`festgelegt ist.</span><span class="sxs-lookup"><span data-stu-id="43acf-745">If this parameter is `false`, it will use the password character to obscure editable user input if the <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A> property is set to a value other than `null`.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="43acf-746">Da diese Methode möglicherweise Informationen aufzeigt, die in der Benutzeroberfläche in der Regel durch Kenn Wort Zeichen geschützt werden, sollte Sie mit äußerster Vorsicht verwendet werden, um zu vermeiden, dass sensible Benutzerdaten versehentlich angezeigt werden.</span><span class="sxs-lookup"><span data-stu-id="43acf-746">Because this method potentially reveals information that is usually protected in the user interface by password characters, it should be used with extreme caution to avoid accidentally revealing sensitive user data.</span></span>  
  
 <span data-ttu-id="43acf-747"><xref:System.ComponentModel.MaskedTextProvider.ToString%2A> führt die folgenden Aktionen aus, wenn es Abweichungen in den Eingabe Parametern gibt:</span><span class="sxs-lookup"><span data-stu-id="43acf-747"><xref:System.ComponentModel.MaskedTextProvider.ToString%2A> performs the following actions when there are discrepancies in the input parameters:</span></span>  
  
-   <span data-ttu-id="43acf-748">Wenn `startPos` kleiner als 0 (null) ist, wird die Anfangsposition auf 0 (null) festgelegt.</span><span class="sxs-lookup"><span data-stu-id="43acf-748">If `startPos` is less than zero, the starting position is set to zero.</span></span>  
  
-   <span data-ttu-id="43acf-749">Wenn `startPos` größer oder gleich dem tatsächlichen <xref:System.ComponentModel.MaskedTextProvider.Length%2A> der formatierten Zeichenfolge ist, wird die <xref:System.String.Empty> Zeichenfolge zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="43acf-749">If `startPos` is greater than or equal to the actual <xref:System.ComponentModel.MaskedTextProvider.Length%2A> of the formatted string, the <xref:System.String.Empty> string is returned.</span></span>  
  
-   <span data-ttu-id="43acf-750">Wenn `length` größer als die verbleibende Anzahl von Zeichen nach der Anfangsposition ist, werden nur die verbleibenden Zeichen zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="43acf-750">If `length` is greater than the remaining number of characters past the starting position, only the remaining characters are returned.</span></span>  
  
-   <span data-ttu-id="43acf-751">Wenn `length` kleiner oder gleich NULL ist, wird die <xref:System.String.Empty> Zeichenfolge zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="43acf-751">If `length` is less than or equal to zero, the <xref:System.String.Empty> string is returned.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.ToDisplayString" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Set" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.IncludePrompt" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.IncludeLiterals" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.PasswordChar" />
      </Docs>
    </Member>
    <Member MemberName="VerifyChar">
      <MemberSignature Language="C#" Value="public bool VerifyChar (char input, int position, out System.ComponentModel.MaskedTextResultHint hint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool VerifyChar(char input, int32 position, [out] valuetype System.ComponentModel.MaskedTextResultHint&amp; hint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.VerifyChar(System.Char,System.Int32,System.ComponentModel.MaskedTextResultHint@)" />
      <MemberSignature Language="VB.NET" Value="Public Function VerifyChar (input As Char, position As Integer, ByRef hint As MaskedTextResultHint) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool VerifyChar(char input, int position, [Runtime::InteropServices::Out] System::ComponentModel::MaskedTextResultHint % hint);" />
      <MemberSignature Language="F#" Value="member this.VerifyChar : char * int * MaskedTextResultHint -&gt; bool" Usage="maskedTextProvider.VerifyChar (input, position, hint)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Char" />
        <Parameter Name="position" Type="System.Int32" />
        <Parameter Name="hint" Type="System.ComponentModel.MaskedTextResultHint" RefType="out" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="43acf-752">Der zu testende <see cref="T:System.Char" />-Wert.</span><span class="sxs-lookup"><span data-stu-id="43acf-752">The <see cref="T:System.Char" /> value to test.</span></span></param>
        <param name="position"><span data-ttu-id="43acf-753">Die Position in der Maske, gegen die das Eingabezeichen geprüft werden soll.</span><span class="sxs-lookup"><span data-stu-id="43acf-753">The position in the mask to test the input character against.</span></span></param>
        <param name="hint"><span data-ttu-id="43acf-754">Ein <see cref="T:System.ComponentModel.MaskedTextResultHint" />, mit dem das Ergebnis des Vorgangs kurz beschrieben wird.</span><span class="sxs-lookup"><span data-stu-id="43acf-754">A <see cref="T:System.ComponentModel.MaskedTextResultHint" /> that succinctly describes the result of the operation.</span></span> <span data-ttu-id="43acf-755">Ein Ausgabeparameter.</span><span class="sxs-lookup"><span data-stu-id="43acf-755">An output parameter.</span></span></param>
        <summary><span data-ttu-id="43acf-756">Prüft, ob das angegebene Zeichen erfolgreich an der angegebenen Position festgelegt werden konnte.</span><span class="sxs-lookup"><span data-stu-id="43acf-756">Tests whether the specified character could be set successfully at the specified position.</span></span></summary>
        <returns><span data-ttu-id="43acf-757"><see langword="true" />, wenn das angegebene Zeichen für die angegebene Position gültig ist, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="43acf-757"><see langword="true" /> if the specified character is valid for the specified position; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43acf-758">Die <xref:System.ComponentModel.MaskedTextProvider.VerifyChar%2A>-Methode testet, ob ein einzelner Zeichen Wert gültige Eingaben an der angegebenen Position in der formatierten Zeichenfolge darstellt.</span><span class="sxs-lookup"><span data-stu-id="43acf-758">The <xref:System.ComponentModel.MaskedTextProvider.VerifyChar%2A> method tests whether a single character value represents valid input at the specified position in the formatted string.</span></span> <span data-ttu-id="43acf-759">Diese Methode gibt aus den folgenden Gründen `false` zurück:</span><span class="sxs-lookup"><span data-stu-id="43acf-759">This method will return `false` for the following reasons:</span></span>  
  
-   <span data-ttu-id="43acf-760">Der `pos`-Parameter ist kleiner als 0 (null) oder größer als die <xref:System.ComponentModel.MaskedTextProvider.Length%2A> der <xref:System.ComponentModel.MaskedTextProvider.Mask%2A>.</span><span class="sxs-lookup"><span data-stu-id="43acf-760">The `pos` parameter is less than zero or greater than the <xref:System.ComponentModel.MaskedTextProvider.Length%2A> of the <xref:System.ComponentModel.MaskedTextProvider.Mask%2A>.</span></span>  
  
-   <span data-ttu-id="43acf-761">Das Zeichen `input` ist kein gültiges Eingabezeichen, wie durch die <xref:System.ComponentModel.MaskedTextProvider.IsValidInputChar%2A>-Methode festgelegt.</span><span class="sxs-lookup"><span data-stu-id="43acf-761">The character `input` is not a valid input character, as determined by the <xref:System.ComponentModel.MaskedTextProvider.IsValidInputChar%2A> method.</span></span>  
  
-   <span data-ttu-id="43acf-762">Der `input` ist mit dem Mask-Element an der angegebenen Position `pos`nicht kompatibel.</span><span class="sxs-lookup"><span data-stu-id="43acf-762">The `input` is not compatible with the mask element at the specified position, `pos`.</span></span>  
  
 <span data-ttu-id="43acf-763">Die letzte Bedingung kann vom aktuellen Wert der Eigenschaften <xref:System.ComponentModel.MaskedTextProvider.AllowPromptAsInput%2A>, <xref:System.ComponentModel.MaskedTextProvider.AsciiOnly%2A>, <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A>, <xref:System.ComponentModel.MaskedTextProvider.PromptChar%2A> und <xref:System.ComponentModel.MaskedTextProvider.SkipLiterals%2A> abhängen.</span><span class="sxs-lookup"><span data-stu-id="43acf-763">The last condition may depend on the current value of the <xref:System.ComponentModel.MaskedTextProvider.AllowPromptAsInput%2A>, <xref:System.ComponentModel.MaskedTextProvider.AsciiOnly%2A>, <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A>, <xref:System.ComponentModel.MaskedTextProvider.PromptChar%2A> and <xref:System.ComponentModel.MaskedTextProvider.SkipLiterals%2A> properties.</span></span>  
  
 <span data-ttu-id="43acf-764">Verwenden Sie stattdessen eine der-<xref:System.ComponentModel.MaskedTextProvider.VerifyString%2A> Methoden, um eine gesamte Eingabe Zeichenfolge für die Maske zu testen.</span><span class="sxs-lookup"><span data-stu-id="43acf-764">To test an entire input string against the mask, use one of the <xref:System.ComponentModel.MaskedTextProvider.VerifyString%2A> methods instead.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsValidInputChar(System.Char)" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Mask" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsEditPosition(System.Int32)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.VerifyEscapeChar(System.Char,System.Int32)" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.VerifyString" />
      </Docs>
    </Member>
    <Member MemberName="VerifyEscapeChar">
      <MemberSignature Language="C#" Value="public bool VerifyEscapeChar (char input, int position);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool VerifyEscapeChar(char input, int32 position) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.VerifyEscapeChar(System.Char,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function VerifyEscapeChar (input As Char, position As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool VerifyEscapeChar(char input, int position);" />
      <MemberSignature Language="F#" Value="member this.VerifyEscapeChar : char * int -&gt; bool" Usage="maskedTextProvider.VerifyEscapeChar (input, position)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Char" />
        <Parameter Name="position" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="43acf-765">Der zu testende <see cref="T:System.Char" />-Wert.</span><span class="sxs-lookup"><span data-stu-id="43acf-765">The <see cref="T:System.Char" /> value to test.</span></span></param>
        <param name="position"><span data-ttu-id="43acf-766">Die Position in der Maske, gegen die das Eingabezeichen geprüft werden soll.</span><span class="sxs-lookup"><span data-stu-id="43acf-766">The position in the mask to test the input character against.</span></span></param>
        <summary><span data-ttu-id="43acf-767">Prüft, ob das angegebene Zeichen an der angegebenen Position mit Escapezeichen versehen werden würde.</span><span class="sxs-lookup"><span data-stu-id="43acf-767">Tests whether the specified character would be escaped at the specified position.</span></span></summary>
        <returns><span data-ttu-id="43acf-768"><see langword="true" />, wenn das angegebene Zeichen an der angegebenen Position mit Escapezeichen versehen werden würde, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="43acf-768"><see langword="true" /> if the specified character would be escaped at the specified position; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43acf-769">Ein Zeichen wird als Escapezeichen bezeichnet *, wenn es* eine gültige Eingabe ist, aber dieser Position in der formatierten Zeichenfolge nicht zugewiesen ist.</span><span class="sxs-lookup"><span data-stu-id="43acf-769">A character is said to be *escaped* if it is valid input, but is not assigned to that position in the formatted string.</span></span> <span data-ttu-id="43acf-770">Escapezeichen werden in die folgenden drei Kategorien eingeteilt:</span><span class="sxs-lookup"><span data-stu-id="43acf-770">Escaped characters fall into the following three categories:</span></span>  
  
-   <span data-ttu-id="43acf-771">Eingabe Aufforderungs Zeichen werden mit Escapezeichen versehen, wenn die <xref:System.ComponentModel.MaskedTextProvider.AllowPromptAsInput%2A> Eigenschaft `true`</span><span class="sxs-lookup"><span data-stu-id="43acf-771">Prompt characters are escaped if the <xref:System.ComponentModel.MaskedTextProvider.AllowPromptAsInput%2A> property is `true`.</span></span>  
  
-   <span data-ttu-id="43acf-772">Eingabezeichen werden mit Escapezeichen versehen, wenn Sie über denselben Wert wie das Literale in der Maske verfügen, und wenn die <xref:System.ComponentModel.MaskedTextProvider.SkipLiterals%2A>-Eigenschaft `true`ist.</span><span class="sxs-lookup"><span data-stu-id="43acf-772">Input characters are escaped if they have the same value as the literal in the mask, and if the <xref:System.ComponentModel.MaskedTextProvider.SkipLiterals%2A> property is `true`.</span></span>  
  
-   <span data-ttu-id="43acf-773">Leerzeichen werden mit Escapezeichen versehen, wenn die <xref:System.ComponentModel.MaskedTextProvider.ResetOnSpace%2A> Eigenschaft `true`ist.</span><span class="sxs-lookup"><span data-stu-id="43acf-773">Space characters are escaped if the <xref:System.ComponentModel.MaskedTextProvider.ResetOnSpace%2A> property is `true`.</span></span>  
  
 <span data-ttu-id="43acf-774">Die <xref:System.ComponentModel.MaskedTextProvider.VerifyEscapeChar%2A>-Methode gibt auch `false` zurück, wenn der `pos`-Parameter kleiner als 0 (null) oder größer als der <xref:System.ComponentModel.MaskedTextProvider.Length%2A> der <xref:System.ComponentModel.MaskedTextProvider.Mask%2A>ist.</span><span class="sxs-lookup"><span data-stu-id="43acf-774">The <xref:System.ComponentModel.MaskedTextProvider.VerifyEscapeChar%2A> method will also return `false` if the `pos` parameter is less than zero or greater than the <xref:System.ComponentModel.MaskedTextProvider.Length%2A> of the <xref:System.ComponentModel.MaskedTextProvider.Mask%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsValidInputChar(System.Char)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.VerifyChar(System.Char,System.Int32,System.ComponentModel.MaskedTextResultHint@)" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.VerifyString" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.AllowPromptAsInput" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.SkipLiterals" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.ResetOnSpace" />
      </Docs>
    </Member>
    <MemberGroup MemberName="VerifyString">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="43acf-775">Prüft, ob die angegebene Zeichenfolge erfolgreich festgelegt werden konnte.</span><span class="sxs-lookup"><span data-stu-id="43acf-775">Tests whether the specified string could be set successfully.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="VerifyString">
      <MemberSignature Language="C#" Value="public bool VerifyString (string input);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool VerifyString(string input) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.VerifyString(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function VerifyString (input As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool VerifyString(System::String ^ input);" />
      <MemberSignature Language="F#" Value="member this.VerifyString : string -&gt; bool" Usage="maskedTextProvider.VerifyString input" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="43acf-776">Der zu testende <see cref="T:System.String" />-Wert.</span><span class="sxs-lookup"><span data-stu-id="43acf-776">The <see cref="T:System.String" /> value to test.</span></span></param>
        <summary><span data-ttu-id="43acf-777">Prüft, ob die angegebene Zeichenfolge erfolgreich festgelegt werden konnte.</span><span class="sxs-lookup"><span data-stu-id="43acf-777">Tests whether the specified string could be set successfully.</span></span></summary>
        <returns><span data-ttu-id="43acf-778"><see langword="true" />, wenn die angegebene Zeichenfolge eine gültige Eingabe ist, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="43acf-778"><see langword="true" /> if the specified string represents valid input; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43acf-779">Der <xref:System.ComponentModel.MaskedTextProvider.VerifyString%2A> wendet die `input` Zeichenfolge auf die Maske an, ohne die formatierte Zeichenfolge tatsächlich zu ändern, um zu testen, ob `input` in einem entsprechenden <xref:System.ComponentModel.MaskedTextProvider.Set%2A> Vorgang gültig wäre.</span><span class="sxs-lookup"><span data-stu-id="43acf-779">The <xref:System.ComponentModel.MaskedTextProvider.VerifyString%2A> applies the `input` string against the mask, without actually changing the formatted string, to test whether `input` would be valid in a corresponding <xref:System.ComponentModel.MaskedTextProvider.Set%2A> operation.</span></span> <span data-ttu-id="43acf-780">Diese Methode gibt auch `true` zurück, wenn die Eingabe `null` oder die Länge 0 (null) aufweist.</span><span class="sxs-lookup"><span data-stu-id="43acf-780">This method also returns `true` if input is `null` or has zero length.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Set" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Mask" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.VerifyChar(System.Char,System.Int32,System.ComponentModel.MaskedTextResultHint@)" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Length" />
      </Docs>
    </Member>
    <Member MemberName="VerifyString">
      <MemberSignature Language="C#" Value="public bool VerifyString (string input, out int testPosition, out System.ComponentModel.MaskedTextResultHint resultHint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool VerifyString(string input, [out] int32&amp; testPosition, [out] valuetype System.ComponentModel.MaskedTextResultHint&amp; resultHint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.VerifyString(System.String,System.Int32@,System.ComponentModel.MaskedTextResultHint@)" />
      <MemberSignature Language="VB.NET" Value="Public Function VerifyString (input As String, ByRef testPosition As Integer, ByRef resultHint As MaskedTextResultHint) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool VerifyString(System::String ^ input, [Runtime::InteropServices::Out] int % testPosition, [Runtime::InteropServices::Out] System::ComponentModel::MaskedTextResultHint % resultHint);" />
      <MemberSignature Language="F#" Value="member this.VerifyString : string * int * MaskedTextResultHint -&gt; bool" Usage="maskedTextProvider.VerifyString (input, testPosition, resultHint)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="testPosition" Type="System.Int32" RefType="out" />
        <Parameter Name="resultHint" Type="System.ComponentModel.MaskedTextResultHint" RefType="out" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="43acf-781">Der zu testende <see cref="T:System.String" />-Wert.</span><span class="sxs-lookup"><span data-stu-id="43acf-781">The <see cref="T:System.String" /> value to test.</span></span></param>
        <param name="testPosition"><span data-ttu-id="43acf-782">Bei Erfolg die nullbasierte Position des zuletzt geprüften Zeichens, andernfalls die erste Position, an der die Prüfung fehlschlug.</span><span class="sxs-lookup"><span data-stu-id="43acf-782">If successful, the zero-based position of the last character actually tested; otherwise, the first position where the test failed.</span></span> <span data-ttu-id="43acf-783">Ein Ausgabeparameter.</span><span class="sxs-lookup"><span data-stu-id="43acf-783">An output parameter.</span></span></param>
        <param name="resultHint"><span data-ttu-id="43acf-784">Ein <see cref="T:System.ComponentModel.MaskedTextResultHint" />, mit dem das Ergebnis der Prüfung kurz beschrieben wird.</span><span class="sxs-lookup"><span data-stu-id="43acf-784">A <see cref="T:System.ComponentModel.MaskedTextResultHint" /> that succinctly describes the result of the test operation.</span></span> <span data-ttu-id="43acf-785">Ein Ausgabeparameter.</span><span class="sxs-lookup"><span data-stu-id="43acf-785">An output parameter.</span></span></param>
        <summary><span data-ttu-id="43acf-786">Prüft, ob die angegebene Zeichenfolge erfolgreich festgelegt werden konnte, und gibt dann die Position und beschreibende Informationen aus.</span><span class="sxs-lookup"><span data-stu-id="43acf-786">Tests whether the specified string could be set successfully, and then outputs position and descriptive information.</span></span></summary>
        <returns><span data-ttu-id="43acf-787"><see langword="true" />, wenn die angegebene Zeichenfolge eine gültige Eingabe ist, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="43acf-787"><see langword="true" /> if the specified string represents valid input; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43acf-788">Der <xref:System.ComponentModel.MaskedTextProvider.VerifyString%2A> wendet die `input` Zeichenfolge auf die Maske an, ohne die formatierte Zeichenfolge tatsächlich zu ändern, um zu testen, ob `input` in einem entsprechenden <xref:System.ComponentModel.MaskedTextProvider.Set%2A> Vorgang gültig wäre.</span><span class="sxs-lookup"><span data-stu-id="43acf-788">The <xref:System.ComponentModel.MaskedTextProvider.VerifyString%2A> applies the `input` string against the mask, without actually changing the formatted string, to test whether `input` would be valid in a corresponding <xref:System.ComponentModel.MaskedTextProvider.Set%2A> operation.</span></span> <span data-ttu-id="43acf-789">Diese Methode gibt auch `true` zurück, wenn die Eingabe `null` oder die Länge 0 (null) aufweist.</span><span class="sxs-lookup"><span data-stu-id="43acf-789">This method also returns `true` if input is `null` or has zero length.</span></span>  
  
 <span data-ttu-id="43acf-790">Diese Version von <xref:System.ComponentModel.MaskedTextProvider.VerifyString%2A> bietet zwei zusätzliche Ausgabeparameter, um weitere Informationen über den Vorgang der Methode zu übermitteln.</span><span class="sxs-lookup"><span data-stu-id="43acf-790">This version of <xref:System.ComponentModel.MaskedTextProvider.VerifyString%2A> provides two additional output parameters to convey more information about the operation of the method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Set" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Mask" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.VerifyChar(System.Char,System.Int32,System.ComponentModel.MaskedTextResultHint@)" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Length" />
      </Docs>
    </Member>
  </Members>
</Type>
