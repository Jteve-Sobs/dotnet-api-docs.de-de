<Type Name="IListSource" FullName="System.ComponentModel.IListSource">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="854d2280630e0531066f1e077cc99d8d435b9d8a" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30375914" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IListSource" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IListSource" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.IListSource" />
  <TypeSignature Language="VB.NET" Value="Public Interface IListSource" />
  <TypeSignature Language="C++ CLI" Value="public interface class IListSource" />
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.DataSourceListEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.TypeConverter("System.Windows.Forms.Design.DataSourceConverter, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Stellt Funktionen für ein Objekt bereit, mit denen dieses eine Liste zurückgeben kann, die an eine Datenquelle gebunden werden kann.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Schnittstelle in der Regel verwenden, um eine Liste zurückzugeben, die mit einer Datenquelle aus einem Objekt gebunden werden können, die nicht implementiert <xref:System.Collections.IList> selbst.  
  
 Binden an Daten kann zur Laufzeit oder in einem Designer auftreten, aber es sind Regeln für die einzelnen. Zur Laufzeit können Sie Daten in eine der folgenden binden:  
  
-   <xref:System.Array>  
  
-   Implementierer der <xref:System.Collections.IList>, sofern der Implementierer eines stark typisierten hat <xref:System.Collections.IList.Item%2A> Eigenschaft (d. h. die <xref:System.Type> ist alles andere <xref:System.Object>). Sie können dies bewerkstelligen, indem Sie die standardmäßige Implementierung des <xref:System.Collections.IList.Item%2A> private. Wenn Sie erstellen möchten eine <xref:System.Collections.IList> , folgt die Regeln für eine stark typisierte Auflistung, sollten Sie eine Ableitung von <xref:System.Collections.CollectionBase>.  
  
-   Implementierer der <xref:System.ComponentModel.ITypedList>.  
  
 Sie können in einem Designer Bindung zu initialisieren <xref:System.ComponentModel.Component> Objekte, indem Sie nach den gleichen Regeln.  
  
> [!NOTE]
>  Implementierer der <xref:System.ComponentModel.IListSource> zurückzugeben kann ein <xref:System.Collections.IList> , enthält eine Auflistung von <xref:System.Collections.IList> Objekte.  
  
   
  
## Examples  
 Das folgende Codebeispiel veranschaulicht das Implementieren der <xref:System.ComponentModel.IListSource> Schnittstelle. Eine Komponente mit dem Namen `EmployeeListSource` macht eine <xref:System.Collections.IList> für die Datenbindung durch Implementieren der <xref:System.ComponentModel.IListSource.GetList%2A> Methode. Eine vollständige Codebeispiel finden Sie unter [Vorgehensweise: Implementieren der IListSource-Schnittstelle](~/docs/framework/winforms/how-to-implement-the-ilistsource-interface.md).  
  
 [!code-csharp[System.ComponentModel.IListSource#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.IListSource/CS/EmployeeListSource.cs#1)]
 [!code-vb[System.ComponentModel.IListSource#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.IListSource/VB/EmployeeListSource.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.IListSource" />
    <altmember cref="T:System.ComponentModel.ITypedList" />
    <altmember cref="T:System.ComponentModel.BindingList`1" />
    <altmember cref="T:System.ComponentModel.IBindingList" />
    <altmember cref="T:System.Collections.CollectionBase" />
  </Docs>
  <Members>
    <Member MemberName="ContainsListCollection">
      <MemberSignature Language="C#" Value="public bool ContainsListCollection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ContainsListCollection" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.IListSource.ContainsListCollection" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ContainsListCollection As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ContainsListCollection { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob die Auflistung eine Auflistung von <see cref="T:System.Collections.IList" />-Objekten ist.</summary>
        <value>
          <see langword="true" />, wenn die Auflistung eine Auflistung von <see cref="T:System.Collections.IList" />-Objekten ist, andernfalls <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Mit dieser Eigenschaft in <xref:System.Data.DataSet> gibt `true` da die <xref:System.Data.DataSet> Klasse enthält eine Auflistung von Auflistungen. Mit dieser Eigenschaft in <xref:System.Data.DataTable> gibt `false` da die <xref:System.Data.DataTable> Klasse enthält eine Auflistung von Objekten.  
  
   
  
## Examples  
 Das folgende Codebeispiel veranschaulicht das Implementieren der <xref:System.ComponentModel.IListSource> Schnittstelle. Eine Komponente mit dem Namen `EmployeeListSource` gibt an, dass sie keine enthält ein <xref:System.Collections.IList> für die Datenbindung wird durch zurückgeben `false` aus der <xref:System.ComponentModel.IListSource.ContainsListCollection%2A> Methode. Eine vollständige Codebeispiel finden Sie unter [Vorgehensweise: Implementieren der IListSource-Schnittstelle](~/docs/framework/winforms/how-to-implement-the-ilistsource-interface.md).  
  
 [!code-csharp[System.ComponentModel.IListSource#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.IListSource/CS/EmployeeListSource.cs#3)]
 [!code-vb[System.ComponentModel.IListSource#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.IListSource/VB/EmployeeListSource.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.IListSource" />
        <altmember cref="T:System.ComponentModel.ITypedList" />
        <altmember cref="T:System.ComponentModel.BindingList`1" />
        <altmember cref="T:System.ComponentModel.IBindingList" />
      </Docs>
    </Member>
    <Member MemberName="GetList">
      <MemberSignature Language="C#" Value="public System.Collections.IList GetList ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IList GetList() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.IListSource.GetList" />
      <MemberSignature Language="VB.NET" Value="Public Function GetList () As IList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::IList ^ GetList();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IList</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt eine <see cref="T:System.Collections.IList" /> zurück, die an eine Datenquelle eines Objekts gebunden werden kann, das selbst keine <see cref="T:System.Collections.IList" /> implementiert.</summary>
        <returns>Eine <see cref="T:System.Collections.IList" />, die an eine Datenquelle eines Objekts gebunden werden kann.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Das folgende Codebeispiel veranschaulicht das Implementieren der <xref:System.ComponentModel.IListSource> Schnittstelle. Eine Komponente mit dem Namen `EmployeeListSource` macht eine <xref:System.Collections.IList> für die Datenbindung durch Implementieren der <xref:System.ComponentModel.IListSource.GetList%2A> Methode. Eine vollständige Codebeispiel finden Sie unter [Vorgehensweise: Implementieren der IListSource-Schnittstelle](~/docs/framework/winforms/how-to-implement-the-ilistsource-interface.md).  
  
 [!code-csharp[System.ComponentModel.IListSource#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.IListSource/CS/EmployeeListSource.cs#4)]
 [!code-vb[System.ComponentModel.IListSource#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.IListSource/VB/EmployeeListSource.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.IListSource" />
        <altmember cref="T:System.ComponentModel.ITypedList" />
        <altmember cref="T:System.ComponentModel.BindingList`1" />
        <altmember cref="T:System.ComponentModel.IBindingList" />
      </Docs>
    </Member>
  </Members>
</Type>