<Type Name="IEditableCollectionView" FullName="System.ComponentModel.IEditableCollectionView">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="8d11887074c54a7af85492421fa8f02341774506" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="08/24/2018" />
    <Meta Name="ms.locfileid" Value="37692880" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IEditableCollectionView" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IEditableCollectionView" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.IEditableCollectionView" />
  <TypeSignature Language="VB.NET" Value="Public Interface IEditableCollectionView" />
  <TypeSignature Language="C++ CLI" Value="public interface class IEditableCollectionView" />
  <TypeSignature Language="F#" Value="type IEditableCollectionView = interface" />
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="6bfe9-101">Definiert Methoden und Eigenschaften, die eine <see cref="T:System.Windows.Data.CollectionView" /> implementiert, um Bearbeitungsfunktionen für eine Auflistung bereitzustellen.</span>
      <span class="sxs-lookup">
        <span data-stu-id="6bfe9-101">Defines methods and properties that a <see cref="T:System.Windows.Data.CollectionView" /> implements to provide editing capabilities to a collection.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6bfe9-102">Wenn eine Auflistungsansicht implementiert die <xref:System.ComponentModel.IEditableCollectionView> -Schnittstelle direkt ändern, die zugrunde liegende Auflistung, wenn sie Änderungen vorgenommen werden, mithilfe der Methoden und Eigenschaften, ermöglicht, <xref:System.ComponentModel.IEditableCollectionView> verfügbar gemacht werden, unabhängig von der Art der Auflistung.</span><span class="sxs-lookup"><span data-stu-id="6bfe9-102">When a collection view implements the <xref:System.ComponentModel.IEditableCollectionView> interface, you can directly change the underlying collection, if it allows changes to be made, by using the methods and properties that <xref:System.ComponentModel.IEditableCollectionView> exposes, regardless of the collection's type.</span></span>  
  
 <span data-ttu-id="6bfe9-103">Die Typen <xref:System.Windows.Controls.ItemCollection>, <xref:System.Windows.Data.BindingListCollectionView>, und <xref:System.Windows.Data.ListCollectionView> sind die Typen aus dem Lieferumfang von [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] , die von erben <xref:System.Windows.Data.CollectionView>.</span><span class="sxs-lookup"><span data-stu-id="6bfe9-103">The types <xref:System.Windows.Controls.ItemCollection>, <xref:System.Windows.Data.BindingListCollectionView>, and <xref:System.Windows.Data.ListCollectionView> are the types that ship with [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] that inherit from <xref:System.Windows.Data.CollectionView>.</span></span>  <span data-ttu-id="6bfe9-104">Diese Typen implementieren, auch die <xref:System.ComponentModel.IEditableCollectionView>, um eine Auflistung bearbeiten zu können, die einen dieser Typen verwendet.</span><span class="sxs-lookup"><span data-stu-id="6bfe9-104">These types also implement the <xref:System.ComponentModel.IEditableCollectionView>, so you can edit a collection that uses one of those types.</span></span>  <span data-ttu-id="6bfe9-105"><xref:System.Windows.Controls.ItemCollection>, vor allem wird häufig verwendet, da die <xref:System.Windows.Controls.ItemsControl.Items%2A?displayProperty=nameWithType> -Eigenschaft ist ein <xref:System.Windows.Controls.ItemCollection>.</span><span class="sxs-lookup"><span data-stu-id="6bfe9-105"><xref:System.Windows.Controls.ItemCollection>, in particular, is often used because the <xref:System.Windows.Controls.ItemsControl.Items%2A?displayProperty=nameWithType> property is an <xref:System.Windows.Controls.ItemCollection>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6bfe9-106">Das folgende Beispiel zeigt, wie Sie das Hinzufügen eines Elements zu einer Sammlung mithilfe der Methoden, die von definiert werden <xref:System.ComponentModel.IEditableCollectionView>.</span><span class="sxs-lookup"><span data-stu-id="6bfe9-106">The following example shows how to add an item to a collection by using methods that are defined by <xref:System.ComponentModel.IEditableCollectionView>.</span></span>  <span data-ttu-id="6bfe9-107">Diese Anwendung zeigt eine Liste der Elemente für den Verkauf und bietet dem Benutzer die Option hinzufügen, bearbeiten oder Entfernen eines Elements.</span><span class="sxs-lookup"><span data-stu-id="6bfe9-107">This application displays a list of items for sale and gives the user the option of adding, editing, or removing an item.</span></span>  <span data-ttu-id="6bfe9-108">Wenn der Benutzer hinzugefügt oder ein Element bearbeitet, fordert ein Formular den Benutzer zur Eingabe eines neuen Elements an.</span><span class="sxs-lookup"><span data-stu-id="6bfe9-108">When the user adds or edits an item, a form prompts the user to enter a new item.</span></span>  <span data-ttu-id="6bfe9-109">Wenn der Benutzer das Formular sendet, ist das Element der Auflistung ein Commit ausgeführt.</span><span class="sxs-lookup"><span data-stu-id="6bfe9-109">If the user submits the form, the item is committed to the collection.</span></span>  <span data-ttu-id="6bfe9-110">Wenn der Benutzer das Formular abbricht, wird das Element verworfen.</span><span class="sxs-lookup"><span data-stu-id="6bfe9-110">If the user cancels the form, the item is discarded.</span></span> <span data-ttu-id="6bfe9-111">Das vollständige Beispiel finden Sie unter [Ändern einer Sammlungssatzkonfiguration mit IEditableCollectionView](https://github.com/Microsoft/WPF-Samples/tree/master/Data%20Binding/EditingCollections).</span><span class="sxs-lookup"><span data-stu-id="6bfe9-111">For the entire sample, see [Changing a Collection by Using IEditableCollectionView Sample](https://github.com/Microsoft/WPF-Samples/tree/master/Data%20Binding/EditingCollections).</span></span>  
  
 [!code-csharp[EditingCollectionsSnippets#AddItem](~/samples/snippets/csharp/VS_Snippets_Wpf/EditingCollectionsSnippets/CSharp/Window1.xaml.cs#additem)]
 [!code-vb[EditingCollectionsSnippets#AddItem](~/samples/snippets/visualbasic/VS_Snippets_Wpf/EditingCollectionsSnippets/visualbasic/window1.xaml.vb#additem)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AddNew">
      <MemberSignature Language="C#" Value="public object AddNew ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object AddNew() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.IEditableCollectionView.AddNew" />
      <MemberSignature Language="VB.NET" Value="Public Function AddNew () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ AddNew();" />
      <MemberSignature Language="F#" Value="abstract member AddNew : unit -&gt; obj" Usage="iEditableCollectionView.AddNew " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="6bfe9-112">Fügt der Auflistung ein neues Element hinzu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bfe9-112">Adds a new item to the collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6bfe9-113">Das neue Element, das der Auflistung hinzugefügt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bfe9-113">The new item that is added to the collection.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6bfe9-114">Aufrufen von <xref:System.ComponentModel.IEditableCollectionView.AddNew%2A> beginnt eine Transaktion zum Hinzufügen.</span><span class="sxs-lookup"><span data-stu-id="6bfe9-114">Calling <xref:System.ComponentModel.IEditableCollectionView.AddNew%2A> begins an add transaction.</span></span>  <span data-ttu-id="6bfe9-115">Rufen Sie <xref:System.ComponentModel.IEditableCollectionView.CommitNew%2A> oder <xref:System.ComponentModel.IEditableCollectionView.CancelNew%2A> um die Transaktion zu beenden.</span><span class="sxs-lookup"><span data-stu-id="6bfe9-115">You should call <xref:System.ComponentModel.IEditableCollectionView.CommitNew%2A> or <xref:System.ComponentModel.IEditableCollectionView.CancelNew%2A> to end the add transaction.</span></span> <span data-ttu-id="6bfe9-116">Ein neues Element erscheint immer in der Auflistung.</span><span class="sxs-lookup"><span data-stu-id="6bfe9-116">A new item always appears in the collection view.</span></span> <span data-ttu-id="6bfe9-117">Eine Filterung, Sortierung oder Gruppierung wird angewendet auf die Ansicht angewendet wird, auf das neue Element <xref:System.ComponentModel.IEditableCollectionView.CommitNew%2A> aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="6bfe9-117">Any filtering, sorting, or grouping that is applied to the view is applied to the new item when <xref:System.ComponentModel.IEditableCollectionView.CommitNew%2A> is called.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6bfe9-118">Das folgende Beispiel erstellt eine <xref:System.Windows.Window> , die der Benutzer aufgefordert, ein neues Element hinzufügen.</span><span class="sxs-lookup"><span data-stu-id="6bfe9-118">The following example creates a <xref:System.Windows.Window> that prompts the user to add a new item.</span></span>  <span data-ttu-id="6bfe9-119">Aufgerufen <xref:System.ComponentModel.IEditableCollectionView.AddNew%2A> zum Erstellen eines neuen Objekts und legt die <xref:System.Windows.FrameworkElement.DataContext%2A> von der <xref:System.Windows.Window> auf dieses Objekt.</span><span class="sxs-lookup"><span data-stu-id="6bfe9-119">Then it calls <xref:System.ComponentModel.IEditableCollectionView.AddNew%2A> to create a new object and sets the <xref:System.Windows.FrameworkElement.DataContext%2A> of the <xref:System.Windows.Window> to that object.</span></span> <span data-ttu-id="6bfe9-120">Das vollständige Beispiel finden Sie unter [Ändern einer Sammlungssatzkonfiguration mit IEditableCollectionView](https://github.com/Microsoft/WPF-Samples/tree/master/Data%20Binding/EditingCollections).</span><span class="sxs-lookup"><span data-stu-id="6bfe9-120">For the entire sample, see [Changing a Collection by Using IEditableCollectionView Sample](https://github.com/Microsoft/WPF-Samples/tree/master/Data%20Binding/EditingCollections).</span></span>  
  
 [!code-csharp[EditingCollectionsSnippets#AddItem](~/samples/snippets/csharp/VS_Snippets_Wpf/EditingCollectionsSnippets/CSharp/Window1.xaml.cs#additem)]
 [!code-vb[EditingCollectionsSnippets#AddItem](~/samples/snippets/visualbasic/VS_Snippets_Wpf/EditingCollectionsSnippets/visualbasic/window1.xaml.vb#additem)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanAddNew">
      <MemberSignature Language="C#" Value="public bool CanAddNew { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanAddNew" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.IEditableCollectionView.CanAddNew" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanAddNew As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanAddNew { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanAddNew : bool" Usage="System.ComponentModel.IEditableCollectionView.CanAddNew" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6bfe9-121">Ruft einen Wert ab, der angibt, ob der Auflistung ein neues Element hinzugefügt werden kann.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bfe9-121">Gets a value that indicates whether a new item can be added to the collection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6bfe9-122">
            <see langword="true" />, wenn der Auflistung ein neues Element hinzugefügt werden kann, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bfe9-122">
              <see langword="true" /> if a new item can be added to the collection; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6bfe9-123">Ein <xref:System.ComponentModel.IEditableCollectionView> können ein neues Element hinzufügen, wenn Folgendes zutrifft:</span><span class="sxs-lookup"><span data-stu-id="6bfe9-123">An <xref:System.ComponentModel.IEditableCollectionView> can add a new item if the following are true:</span></span>  
  
-   <span data-ttu-id="6bfe9-124">Ein Element kann der zugrunde liegenden Auflistung hinzugefügt werden.</span><span class="sxs-lookup"><span data-stu-id="6bfe9-124">An item can be added to the underlying collection.</span></span>  <span data-ttu-id="6bfe9-125">Wenn die Auflistung schreibgeschützt ist z. B. <xref:System.ComponentModel.IEditableCollectionView.CanAddNew%2A> ist `false`.</span><span class="sxs-lookup"><span data-stu-id="6bfe9-125">For example, if the collection is read-only, <xref:System.ComponentModel.IEditableCollectionView.CanAddNew%2A> is `false`.</span></span>  
  
-   <span data-ttu-id="6bfe9-126">Die <xref:System.ComponentModel.IEditableCollectionView> können erstellen Sie ein Objekt des Typs, der in der Auflistung ist.</span><span class="sxs-lookup"><span data-stu-id="6bfe9-126">The <xref:System.ComponentModel.IEditableCollectionView> can create an object of the type that is in the collection.</span></span>  <span data-ttu-id="6bfe9-127">Wenn die Auflistung des Typs ist z. B. <xref:System.Collections.ObjectModel.ObservableCollection%601>, wird die <xref:System.ComponentModel.IEditableCollectionView> muss in der Lage, erstellen Sie ein Objekt vom Typ `T`.</span><span class="sxs-lookup"><span data-stu-id="6bfe9-127">For example, if the collection is of type <xref:System.Collections.ObjectModel.ObservableCollection%601>, the <xref:System.ComponentModel.IEditableCollectionView> must be able to create an object of type `T`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6bfe9-128">Das folgende Beispiel überprüft, ob ein Element der Auflistung hinzugefügt werden kann.</span><span class="sxs-lookup"><span data-stu-id="6bfe9-128">The following example checks whether an item can be added to the collection.</span></span>  <span data-ttu-id="6bfe9-129">Wenn <xref:System.ComponentModel.IEditableCollectionView.CanAddNew%2A> ist `false`, im Beispiel wird der Benutzer darüber informiert, dass ein Element kann nicht hinzugefügt werden.</span><span class="sxs-lookup"><span data-stu-id="6bfe9-129">If <xref:System.ComponentModel.IEditableCollectionView.CanAddNew%2A> is `false`, the example tells the user that an item cannot be added.</span></span>  <span data-ttu-id="6bfe9-130">Andernfalls wird ein Formular, das den Benutzer auffordert, ein neues Element hinzufügen.</span><span class="sxs-lookup"><span data-stu-id="6bfe9-130">Otherwise, it shows a form that prompts the user to add a new item.</span></span> <span data-ttu-id="6bfe9-131">Das vollständige Beispiel finden Sie unter [Ändern einer Sammlungssatzkonfiguration mit IEditableCollectionView](https://github.com/Microsoft/WPF-Samples/tree/master/Data%20Binding/EditingCollections) .</span><span class="sxs-lookup"><span data-stu-id="6bfe9-131">For the entire sample, see [Changing a Collection by Using IEditableCollectionView Sample](https://github.com/Microsoft/WPF-Samples/tree/master/Data%20Binding/EditingCollections) .</span></span>  
  
 [!code-csharp[EditingCollectionsSnippets#AddItem](~/samples/snippets/csharp/VS_Snippets_Wpf/EditingCollectionsSnippets/CSharp/Window1.xaml.cs#additem)]
 [!code-vb[EditingCollectionsSnippets#AddItem](~/samples/snippets/visualbasic/VS_Snippets_Wpf/EditingCollectionsSnippets/visualbasic/window1.xaml.vb#additem)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanCancelEdit">
      <MemberSignature Language="C#" Value="public bool CanCancelEdit { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanCancelEdit" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.IEditableCollectionView.CanCancelEdit" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanCancelEdit As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanCancelEdit { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanCancelEdit : bool" Usage="System.ComponentModel.IEditableCollectionView.CanCancelEdit" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6bfe9-132">Ruft einen Wert ab, der angibt, ob die Auflistungsansicht ausstehende Änderungen verwerfen und die ursprünglichen Werte eines bearbeiteten Objekts wiederherstellen kann.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bfe9-132">Gets a value that indicates whether the collection view can discard pending changes and restore the original values of an edited object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6bfe9-133">
            <see langword="true" />, wenn die Auflistungsansicht ausstehende Änderungen verwerfen und die ursprünglichen Werte eines bearbeiteten Objekts wiederherstellen kann, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bfe9-133">
              <see langword="true" /> if the collection view can discard pending changes and restore the original values of an edited object; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6bfe9-134"><xref:System.ComponentModel.IEditableCollectionView.CanCancelEdit%2A> ist `true` , wenn die Ansicht das Konzept der "ausstehende Änderungen" für das derzeit bearbeitete Element unterstützt.</span><span class="sxs-lookup"><span data-stu-id="6bfe9-134"><xref:System.ComponentModel.IEditableCollectionView.CanCancelEdit%2A> is `true` if the view supports the notion of "pending changes" on the currently edited item.</span></span>   <span data-ttu-id="6bfe9-135">Eine Auflistungsansicht möglicherweise zurück, z. B. `true` , wenn die bearbeitete Element implementiert <xref:System.ComponentModel.IEditableObject>, oder wenn die Sicht Informationen über den Zustand des Elements, die sie verwenden kann enthält, um das Zurücksetzen zu sichern Änderungen.</span><span class="sxs-lookup"><span data-stu-id="6bfe9-135">For example, a collection view might return `true` if the edited item implements <xref:System.ComponentModel.IEditableObject>, or if the view has information about the item's state that it can use to roll back changes.</span></span> <span data-ttu-id="6bfe9-136"><xref:System.ComponentModel.IEditableCollectionView.CanCancelEdit%2A> ist `false` , wenn die Ansicht Änderungen auf ein Objekt nicht rückgängig machen.</span><span class="sxs-lookup"><span data-stu-id="6bfe9-136"><xref:System.ComponentModel.IEditableCollectionView.CanCancelEdit%2A> is `false` if the view cannot revert changes on an object.</span></span>  <span data-ttu-id="6bfe9-137">In diesem Fall rufen <xref:System.ComponentModel.IEditableCollectionView.CancelEdit%2A> , dazu führen, dass die Ansicht, um den Bearbeitungsstatus zu beenden, und geben Sie die Logik, um die Änderungen für das Objekt, das geändert wurde, rückgängig zu machen.</span><span class="sxs-lookup"><span data-stu-id="6bfe9-137">In that case, call <xref:System.ComponentModel.IEditableCollectionView.CancelEdit%2A> to cause the view to exit the edit state and provide logic to revert the changes on the object that was edited.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6bfe9-138">Im folgenden Beispiel wird <xref:System.ComponentModel.IEditableCollectionView.CanCancelEdit%2A> zu überprüfen, ob die ursprünglichen Werte des bearbeiteten Elements wiederhergestellt werden können, bevor er aufgerufen <xref:System.ComponentModel.IEditableCollectionView.CancelEdit%2A>.</span><span class="sxs-lookup"><span data-stu-id="6bfe9-138">The following example gets <xref:System.ComponentModel.IEditableCollectionView.CanCancelEdit%2A> to check whether the original values of the edited item can be restored before it calls <xref:System.ComponentModel.IEditableCollectionView.CancelEdit%2A>.</span></span>  <span data-ttu-id="6bfe9-139">Wenn die Werte nicht wiederhergestellt werden können, müssen Sie zusätzlichen Logik zu diesem Zweck angeben.</span><span class="sxs-lookup"><span data-stu-id="6bfe9-139">If the values cannot be restored, you must supply additional logic to do so.</span></span>  <span data-ttu-id="6bfe9-140">Falls sie sein können, sind die Werte wiederhergestellt, wenn das Beispiel ruft <xref:System.ComponentModel.IEditableCollectionView.CancelEdit%2A>.</span><span class="sxs-lookup"><span data-stu-id="6bfe9-140">If they can be, the values are restored when the example calls <xref:System.ComponentModel.IEditableCollectionView.CancelEdit%2A>.</span></span>   <span data-ttu-id="6bfe9-141">Das vollständige Beispiel finden Sie unter [Ändern einer Sammlungssatzkonfiguration mit IEditableCollectionView](https://github.com/Microsoft/WPF-Samples/tree/master/Data%20Binding/EditingCollections).</span><span class="sxs-lookup"><span data-stu-id="6bfe9-141">For the entire sample, see [Changing a Collection by Using IEditableCollectionView Sample](https://github.com/Microsoft/WPF-Samples/tree/master/Data%20Binding/EditingCollections).</span></span>  
  
 [!code-csharp[EditingCollectionsSnippets#CancelEdit](~/samples/snippets/csharp/VS_Snippets_Wpf/EditingCollectionsSnippets/CSharp/Window1.xaml.cs#canceledit)]
 [!code-vb[EditingCollectionsSnippets#CancelEdit](~/samples/snippets/visualbasic/VS_Snippets_Wpf/EditingCollectionsSnippets/visualbasic/window1.xaml.vb#canceledit)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CancelEdit">
      <MemberSignature Language="C#" Value="public void CancelEdit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CancelEdit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.IEditableCollectionView.CancelEdit" />
      <MemberSignature Language="VB.NET" Value="Public Sub CancelEdit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CancelEdit();" />
      <MemberSignature Language="F#" Value="abstract member CancelEdit : unit -&gt; unit" Usage="iEditableCollectionView.CancelEdit " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="6bfe9-142">Beendet die Transaktion zum Bearbeiten und stellt, wenn möglich, den ursprünglichen Wert des Elements wieder her.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bfe9-142">Ends the edit transaction and, if possible, restores the original value to the item.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6bfe9-143"><xref:System.ComponentModel.IEditableCollectionView.CancelEdit%2A> Legt <xref:System.ComponentModel.IEditableCollectionView.CurrentEditItem%2A> zu `null` und bewirkt, dass die Auflistungsansicht, um den Bearbeitungsstatus zu beenden.</span><span class="sxs-lookup"><span data-stu-id="6bfe9-143"><xref:System.ComponentModel.IEditableCollectionView.CancelEdit%2A> sets <xref:System.ComponentModel.IEditableCollectionView.CurrentEditItem%2A> to `null` and causes the collection view to exit the edit state.</span></span>  <span data-ttu-id="6bfe9-144">Wenn <xref:System.ComponentModel.IEditableCollectionView.CanCancelEdit%2A> ist `true`, <xref:System.ComponentModel.IEditableCollectionView.CancelEdit%2A> stellt auch die ursprünglichen Werte des bearbeiteten Objekts.</span><span class="sxs-lookup"><span data-stu-id="6bfe9-144">If <xref:System.ComponentModel.IEditableCollectionView.CanCancelEdit%2A> is `true`, <xref:System.ComponentModel.IEditableCollectionView.CancelEdit%2A> also restores the original values of the edited object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6bfe9-145">Im folgenden Beispiel wird <xref:System.ComponentModel.IEditableCollectionView.CanCancelEdit%2A> zu überprüfen, ob die ursprünglichen Werte des bearbeiteten Elements wiederhergestellt werden können, bevor er aufgerufen <xref:System.ComponentModel.IEditableCollectionView.CancelEdit%2A>.</span><span class="sxs-lookup"><span data-stu-id="6bfe9-145">The following example gets <xref:System.ComponentModel.IEditableCollectionView.CanCancelEdit%2A> to check whether the original values of the edited item can be restored before it calls <xref:System.ComponentModel.IEditableCollectionView.CancelEdit%2A>.</span></span>  <span data-ttu-id="6bfe9-146">Wenn die Werte nicht wiederhergestellt werden können, müssen Sie zusätzlichen Logik zu diesem Zweck angeben.</span><span class="sxs-lookup"><span data-stu-id="6bfe9-146">If the values cannot be restored, you must supply additional logic to do so.</span></span>  <span data-ttu-id="6bfe9-147">Falls sie sein können, sind die Werte wiederhergestellt, wenn das Beispiel ruft <xref:System.ComponentModel.IEditableCollectionView.CancelEdit%2A>.</span><span class="sxs-lookup"><span data-stu-id="6bfe9-147">If they can be, the values are restored when the example calls <xref:System.ComponentModel.IEditableCollectionView.CancelEdit%2A>.</span></span> <span data-ttu-id="6bfe9-148">Das vollständige Beispiel finden Sie unter [Ändern einer Sammlungssatzkonfiguration mit IEditableCollectionView](https://github.com/Microsoft/WPF-Samples/tree/master/Data%20Binding/EditingCollections).</span><span class="sxs-lookup"><span data-stu-id="6bfe9-148">For the entire sample, see [Changing a Collection by Using IEditableCollectionView Sample](https://github.com/Microsoft/WPF-Samples/tree/master/Data%20Binding/EditingCollections).</span></span>  
  
 [!code-csharp[EditingCollectionsSnippets#CancelEdit](~/samples/snippets/csharp/VS_Snippets_Wpf/EditingCollectionsSnippets/CSharp/Window1.xaml.cs#canceledit)]
 [!code-vb[EditingCollectionsSnippets#CancelEdit](~/samples/snippets/visualbasic/VS_Snippets_Wpf/EditingCollectionsSnippets/visualbasic/window1.xaml.vb#canceledit)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CancelNew">
      <MemberSignature Language="C#" Value="public void CancelNew ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CancelNew() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.IEditableCollectionView.CancelNew" />
      <MemberSignature Language="VB.NET" Value="Public Sub CancelNew ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CancelNew();" />
      <MemberSignature Language="F#" Value="abstract member CancelNew : unit -&gt; unit" Usage="iEditableCollectionView.CancelNew " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="6bfe9-149">Beendet die Transaktion zum Hinzufügen und verwirft das ausstehende neue Element.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bfe9-149">Ends the add transaction and discards the pending new item.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="6bfe9-150">Das folgende Beispiel zeigt ein Formular, das den Benutzer auffordert, ein neues Element hinzufügen.</span><span class="sxs-lookup"><span data-stu-id="6bfe9-150">The following example displays a form that prompts the user to add a new item.</span></span>  <span data-ttu-id="6bfe9-151">Im Beispiel wird aufgerufen, wenn der Benutzer das Formular sendet, <xref:System.ComponentModel.IEditableCollectionView.CommitNew%2A> das Element der Auflistung hinzugefügt.</span><span class="sxs-lookup"><span data-stu-id="6bfe9-151">If the user submits the form, the example calls <xref:System.ComponentModel.IEditableCollectionView.CommitNew%2A> to add the item to the collection.</span></span>  <span data-ttu-id="6bfe9-152">Im Beispiel wird aufgerufen, wenn der Benutzer das Formular abbricht, <xref:System.ComponentModel.IEditableCollectionView.CancelNew%2A> auf das Element zu verwerfen.</span><span class="sxs-lookup"><span data-stu-id="6bfe9-152">If the user cancels the form, the example calls <xref:System.ComponentModel.IEditableCollectionView.CancelNew%2A> to discard the item.</span></span> <span data-ttu-id="6bfe9-153">Das vollständige Beispiel finden Sie unter [Ändern einer Sammlungssatzkonfiguration mit IEditableCollectionView](https://github.com/Microsoft/WPF-Samples/tree/master/Data%20Binding/EditingCollections).</span><span class="sxs-lookup"><span data-stu-id="6bfe9-153">For the entire sample, see [Changing a Collection by Using IEditableCollectionView Sample](https://github.com/Microsoft/WPF-Samples/tree/master/Data%20Binding/EditingCollections).</span></span>  
  
 [!code-csharp[EditingCollectionsSnippets#AddItem](~/samples/snippets/csharp/VS_Snippets_Wpf/EditingCollectionsSnippets/CSharp/Window1.xaml.cs#additem)]
 [!code-vb[EditingCollectionsSnippets#AddItem](~/samples/snippets/visualbasic/VS_Snippets_Wpf/EditingCollectionsSnippets/visualbasic/window1.xaml.vb#additem)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanRemove">
      <MemberSignature Language="C#" Value="public bool CanRemove { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanRemove" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.IEditableCollectionView.CanRemove" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanRemove As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanRemove { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanRemove : bool" Usage="System.ComponentModel.IEditableCollectionView.CanRemove" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6bfe9-154">Ruft einen Wert ab, der angibt, ob ein Element aus der Auflistung entfernt werden kann.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bfe9-154">Gets a value that indicates whether an item can be removed from the collection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6bfe9-155">
            <see langword="true" />, wenn ein Element aus der Auflistung entfernt werden kann, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bfe9-155">
              <see langword="true" /> if an item can be removed from the collection; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6bfe9-156"><xref:System.ComponentModel.IEditableCollectionView.CanRemove%2A> ist `false` , wenn die zugrunde liegende Auflistung schreibgeschützt ist.</span><span class="sxs-lookup"><span data-stu-id="6bfe9-156"><xref:System.ComponentModel.IEditableCollectionView.CanRemove%2A> is `false` if the underlying collection is read-only.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6bfe9-157">Im folgenden Beispiel wird <xref:System.ComponentModel.IEditableCollectionView.CanRemove%2A> zu überprüfen, ob ein Element aus der Auflistung entfernt werden kann.</span><span class="sxs-lookup"><span data-stu-id="6bfe9-157">The following example calls <xref:System.ComponentModel.IEditableCollectionView.CanRemove%2A> to check whether an item can be removed from the collection.</span></span>  <span data-ttu-id="6bfe9-158">Wenn ein Element entfernt werden kann, im Beispiel wird der Benutzer aufgefordert, die Aktion zu bestätigen <xref:System.ComponentModel.IEditableCollectionView.Remove%2A> klickt der Benutzer **Ja**.</span><span class="sxs-lookup"><span data-stu-id="6bfe9-158">If an item can be removed, the example prompts the user to confirm the action and calls <xref:System.ComponentModel.IEditableCollectionView.Remove%2A> if the user clicks **Yes**.</span></span> <span data-ttu-id="6bfe9-159">Das vollständige Beispiel finden Sie unter [Ändern einer Sammlungssatzkonfiguration mit IEditableCollectionView](https://github.com/Microsoft/WPF-Samples/tree/master/Data%20Binding/EditingCollections).</span><span class="sxs-lookup"><span data-stu-id="6bfe9-159">For the entire sample, see [Changing a Collection by Using IEditableCollectionView Sample](https://github.com/Microsoft/WPF-Samples/tree/master/Data%20Binding/EditingCollections).</span></span>  
  
 [!code-csharp[EditingCollectionsSnippets#RemoveItem](~/samples/snippets/csharp/VS_Snippets_Wpf/EditingCollectionsSnippets/CSharp/Window1.xaml.cs#removeitem)]
 [!code-vb[EditingCollectionsSnippets#RemoveItem](~/samples/snippets/visualbasic/VS_Snippets_Wpf/EditingCollectionsSnippets/visualbasic/window1.xaml.vb#removeitem)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CommitEdit">
      <MemberSignature Language="C#" Value="public void CommitEdit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CommitEdit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.IEditableCollectionView.CommitEdit" />
      <MemberSignature Language="VB.NET" Value="Public Sub CommitEdit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CommitEdit();" />
      <MemberSignature Language="F#" Value="abstract member CommitEdit : unit -&gt; unit" Usage="iEditableCollectionView.CommitEdit " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="6bfe9-160">Beendet die Transaktion zum Bearbeiten und speichert die ausstehenden Änderungen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bfe9-160">Ends the edit transaction and saves the pending changes.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="6bfe9-161">Das folgende Beispiel erstellt ein Formular, das den Benutzer auffordert, ein vorhandenes Element zu bearbeiten.</span><span class="sxs-lookup"><span data-stu-id="6bfe9-161">The following example creates a form that prompts the user to edit an existing item.</span></span>  <span data-ttu-id="6bfe9-162">Im Beispiel wird aufgerufen, wenn der Benutzer das Formular sendet, <xref:System.ComponentModel.IEditableCollectionView.CommitEdit%2A> zum Speichern der Änderungen auf die Auflistung.</span><span class="sxs-lookup"><span data-stu-id="6bfe9-162">If the user submits the form, the example calls <xref:System.ComponentModel.IEditableCollectionView.CommitEdit%2A> to save the changes to the collection.</span></span>  <span data-ttu-id="6bfe9-163">Im Beispiel wird aufgerufen, wenn der Benutzer das Formular abbricht, <xref:System.ComponentModel.IEditableCollectionView.CancelEdit%2A> um die Änderungen zu verwerfen.</span><span class="sxs-lookup"><span data-stu-id="6bfe9-163">If the user cancels the form, the example calls <xref:System.ComponentModel.IEditableCollectionView.CancelEdit%2A> to discard the changes.</span></span> <span data-ttu-id="6bfe9-164">Das vollständige Beispiel finden Sie unter [Ändern einer Sammlungssatzkonfiguration mit IEditableCollectionView](https://github.com/Microsoft/WPF-Samples/tree/master/Data%20Binding/EditingCollections).</span><span class="sxs-lookup"><span data-stu-id="6bfe9-164">For the entire sample, see [Changing a Collection by Using IEditableCollectionView Sample](https://github.com/Microsoft/WPF-Samples/tree/master/Data%20Binding/EditingCollections).</span></span>  
  
 [!code-csharp[EditingCollectionsSnippets#EditItem](~/samples/snippets/csharp/VS_Snippets_Wpf/EditingCollectionsSnippets/CSharp/Window1.xaml.cs#edititem)]
 [!code-vb[EditingCollectionsSnippets#EditItem](~/samples/snippets/visualbasic/VS_Snippets_Wpf/EditingCollectionsSnippets/visualbasic/window1.xaml.vb#edititem)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CommitNew">
      <MemberSignature Language="C#" Value="public void CommitNew ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CommitNew() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.IEditableCollectionView.CommitNew" />
      <MemberSignature Language="VB.NET" Value="Public Sub CommitNew ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CommitNew();" />
      <MemberSignature Language="F#" Value="abstract member CommitNew : unit -&gt; unit" Usage="iEditableCollectionView.CommitNew " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="6bfe9-165">Beendet die Transaktion zum Hinzufügen und speichert das ausstehende neue Element.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bfe9-165">Ends the add transaction and saves the pending new item.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6bfe9-166">Eine Filterung, Sortierung oder Gruppierung wird angewendet die <xref:System.Windows.Data.CollectionView> angewendet wird, auf das neue Element <xref:System.ComponentModel.IEditableCollectionView.CommitNew%2A> aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="6bfe9-166">Any filtering, sorting, or grouping that is applied to the <xref:System.Windows.Data.CollectionView> is applied to the new item when <xref:System.ComponentModel.IEditableCollectionView.CommitNew%2A> is called.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6bfe9-167">Das folgende Beispiel zeigt ein Formular, das den Benutzer auffordert, ein neues Element hinzufügen.</span><span class="sxs-lookup"><span data-stu-id="6bfe9-167">The following example displays a form that prompts the user to add a new item.</span></span>  <span data-ttu-id="6bfe9-168">Im Beispiel wird aufgerufen, wenn der Benutzer das Formular sendet, <xref:System.ComponentModel.IEditableCollectionView.CommitNew%2A> das Element der Auflistung hinzugefügt.</span><span class="sxs-lookup"><span data-stu-id="6bfe9-168">If the user submits the form, the example calls <xref:System.ComponentModel.IEditableCollectionView.CommitNew%2A> to add the item to the collection.</span></span>  <span data-ttu-id="6bfe9-169">Im Beispiel wird aufgerufen, wenn der Benutzer das Formular abbricht, <xref:System.ComponentModel.IEditableCollectionView.CancelNew%2A> auf das Element zu verwerfen.</span><span class="sxs-lookup"><span data-stu-id="6bfe9-169">If the user cancels the form, the example calls <xref:System.ComponentModel.IEditableCollectionView.CancelNew%2A> to discard the item.</span></span> <span data-ttu-id="6bfe9-170">Das vollständige Beispiel finden Sie unter [Ändern einer Sammlungssatzkonfiguration mit IEditableCollectionView](https://github.com/Microsoft/WPF-Samples/tree/master/Data%20Binding/EditingCollections).</span><span class="sxs-lookup"><span data-stu-id="6bfe9-170">For the entire sample, see [Changing a Collection by Using IEditableCollectionView Sample](https://github.com/Microsoft/WPF-Samples/tree/master/Data%20Binding/EditingCollections).</span></span>  
  
 [!code-csharp[EditingCollectionsSnippets#AddItem](~/samples/snippets/csharp/VS_Snippets_Wpf/EditingCollectionsSnippets/CSharp/Window1.xaml.cs#additem)]
 [!code-vb[EditingCollectionsSnippets#AddItem](~/samples/snippets/visualbasic/VS_Snippets_Wpf/EditingCollectionsSnippets/visualbasic/window1.xaml.vb#additem)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentAddItem">
      <MemberSignature Language="C#" Value="public object CurrentAddItem { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object CurrentAddItem" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.IEditableCollectionView.CurrentAddItem" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CurrentAddItem As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ CurrentAddItem { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CurrentAddItem : obj" Usage="System.ComponentModel.IEditableCollectionView.CurrentAddItem" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6bfe9-171">Ruft das Element ab, das während der aktuellen Hinzufügetransaktion hinzugefügt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bfe9-171">Gets the item that is being added during the current add transaction.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6bfe9-172">Das Element, das hinzugefügt wird, wenn <see cref="P:System.ComponentModel.IEditableCollectionView.IsAddingNew" /><see langword="true" /> ist, andernfalls <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bfe9-172">The item that is being added if <see cref="P:System.ComponentModel.IEditableCollectionView.IsAddingNew" /> is <see langword="true" />; otherwise, <see langword="null" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentEditItem">
      <MemberSignature Language="C#" Value="public object CurrentEditItem { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object CurrentEditItem" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.IEditableCollectionView.CurrentEditItem" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CurrentEditItem As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ CurrentEditItem { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CurrentEditItem : obj" Usage="System.ComponentModel.IEditableCollectionView.CurrentEditItem" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6bfe9-173">Ruft das Element in der Auflistung ab, das gerade bearbeitet wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bfe9-173">Gets the item in the collection that is being edited.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6bfe9-174">Das Element in der Auflistung, die gerade bearbeitet wird, wenn <see cref="P:System.ComponentModel.IEditableCollectionView.IsEditingItem" /> gleich <see langword="true" /> ist, andernfalls <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bfe9-174">The item in the collection that is being edited if <see cref="P:System.ComponentModel.IEditableCollectionView.IsEditingItem" /> is <see langword="true" />; otherwise, <see langword="null" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EditItem">
      <MemberSignature Language="C#" Value="public void EditItem (object item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EditItem(object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.IEditableCollectionView.EditItem(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EditItem (item As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EditItem(System::Object ^ item);" />
      <MemberSignature Language="F#" Value="abstract member EditItem : obj -&gt; unit" Usage="iEditableCollectionView.EditItem item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="6bfe9-175">Das zu bearbeitende Element.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bfe9-175">The item to edit.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6bfe9-176">Startet eine Transaktion zum Bearbeiten des angegebenen Elements.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bfe9-176">Begins an edit transaction of the specified item.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="6bfe9-177">Das folgende Beispiel erstellt ein Formular, das den Benutzer auffordert, ein vorhandenes Element zu bearbeiten.</span><span class="sxs-lookup"><span data-stu-id="6bfe9-177">The following example creates a form that prompts the user to edit an existing item.</span></span>  <span data-ttu-id="6bfe9-178">Wenn der Benutzer das Formular sendet, werden die Änderungen an der Auflistung übergeben.</span><span class="sxs-lookup"><span data-stu-id="6bfe9-178">If the user submits the form, the changes are committed to the collection.</span></span>  <span data-ttu-id="6bfe9-179">Wenn der Benutzer das Formular abbricht, werden die Änderungen verworfen.</span><span class="sxs-lookup"><span data-stu-id="6bfe9-179">If the user cancels the form, the changes are discarded.</span></span> <span data-ttu-id="6bfe9-180">Das vollständige Beispiel finden Sie unter [Ändern einer Sammlungssatzkonfiguration mit IEditableCollectionView](https://github.com/Microsoft/WPF-Samples/tree/master/Data%20Binding/EditingCollections) .</span><span class="sxs-lookup"><span data-stu-id="6bfe9-180">For the entire sample, see [Changing a Collection by Using IEditableCollectionView Sample](https://github.com/Microsoft/WPF-Samples/tree/master/Data%20Binding/EditingCollections) .</span></span>  
  
 [!code-csharp[EditingCollectionsSnippets#EditItem](~/samples/snippets/csharp/VS_Snippets_Wpf/EditingCollectionsSnippets/CSharp/Window1.xaml.cs#edititem)]
 [!code-vb[EditingCollectionsSnippets#EditItem](~/samples/snippets/visualbasic/VS_Snippets_Wpf/EditingCollectionsSnippets/visualbasic/window1.xaml.vb#edititem)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAddingNew">
      <MemberSignature Language="C#" Value="public bool IsAddingNew { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAddingNew" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.IEditableCollectionView.IsAddingNew" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsAddingNew As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsAddingNew { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsAddingNew : bool" Usage="System.ComponentModel.IEditableCollectionView.IsAddingNew" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6bfe9-181">Ruft einen Wert ab, der angibt, ob gerade eine Transaktion zum Hinzufügen ausgeführt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bfe9-181">Gets a value that indicates whether an add transaction is in progress.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6bfe9-182">
            <see langword="true" />, wenn gegenwärtig eine Transaktion zum Hinzufügen ausgeführt wird, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bfe9-182">
              <see langword="true" /> if an add transaction is in progress; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6bfe9-183">Starten Sie eine Transaktion zum Hinzufügen durch einen Aufruf <xref:System.ComponentModel.IEditableCollectionView.AddNew%2A> und beenden die Transaktion zum Hinzufügen durch Aufrufen von <xref:System.ComponentModel.IEditableCollectionView.CommitNew%2A> oder <xref:System.ComponentModel.IEditableCollectionView.CancelNew%2A>.</span><span class="sxs-lookup"><span data-stu-id="6bfe9-183">You begin an add transaction by calling <xref:System.ComponentModel.IEditableCollectionView.AddNew%2A> and end the add transaction by calling <xref:System.ComponentModel.IEditableCollectionView.CommitNew%2A> or <xref:System.ComponentModel.IEditableCollectionView.CancelNew%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEditingItem">
      <MemberSignature Language="C#" Value="public bool IsEditingItem { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEditingItem" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.IEditableCollectionView.IsEditingItem" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsEditingItem As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsEditingItem { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsEditingItem : bool" Usage="System.ComponentModel.IEditableCollectionView.IsEditingItem" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6bfe9-184">Ruft einen Wert ab, der angibt, ob gerade eine Transaktion zum Bearbeiten ausgeführt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bfe9-184">Gets a value that indicates whether an edit transaction is in progress.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6bfe9-185">
            <see langword="true" />, wenn eine Transaktion zum Bearbeiten ausgeführt wird, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bfe9-185">
              <see langword="true" /> if an edit transaction is in progress; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6bfe9-186">Starten Sie eine Transaktion zum Bearbeiten, durch einen Aufruf <xref:System.ComponentModel.IEditableCollectionView.EditItem%2A> und beendet die Transaktion durch Aufrufen von <xref:System.ComponentModel.IEditableCollectionView.CommitEdit%2A> oder <xref:System.ComponentModel.IEditableCollectionView.CancelEdit%2A>.</span><span class="sxs-lookup"><span data-stu-id="6bfe9-186">You begin an edit transaction by calling <xref:System.ComponentModel.IEditableCollectionView.EditItem%2A> and end the transaction by calling <xref:System.ComponentModel.IEditableCollectionView.CommitEdit%2A> or <xref:System.ComponentModel.IEditableCollectionView.CancelEdit%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NewItemPlaceholderPosition">
      <MemberSignature Language="C#" Value="public System.ComponentModel.NewItemPlaceholderPosition NewItemPlaceholderPosition { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ComponentModel.NewItemPlaceholderPosition NewItemPlaceholderPosition" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.IEditableCollectionView.NewItemPlaceholderPosition" />
      <MemberSignature Language="VB.NET" Value="Public Property NewItemPlaceholderPosition As NewItemPlaceholderPosition" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ComponentModel::NewItemPlaceholderPosition NewItemPlaceholderPosition { System::ComponentModel::NewItemPlaceholderPosition get(); void set(System::ComponentModel::NewItemPlaceholderPosition value); };" />
      <MemberSignature Language="F#" Value="member this.NewItemPlaceholderPosition : System.ComponentModel.NewItemPlaceholderPosition with get, set" Usage="System.ComponentModel.IEditableCollectionView.NewItemPlaceholderPosition" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.NewItemPlaceholderPosition</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6bfe9-187">Ruft die Position des neuen Elementplatzhalters in der Auflistungsansicht ab oder legt diese fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bfe9-187">Gets or sets the position of the new item placeholder in the collection view.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6bfe9-188">Einer der Enumerationswerte, der die Position des neuen Elementplatzhalters in der Auflistungsansicht angibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bfe9-188">One of the enumeration values that specifies the position of the new item placeholder in the collection view.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (object item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Remove(object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.IEditableCollectionView.Remove(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Remove (item As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Remove(System::Object ^ item);" />
      <MemberSignature Language="F#" Value="abstract member Remove : obj -&gt; unit" Usage="iEditableCollectionView.Remove item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="6bfe9-189">Das zu entfernende Element.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bfe9-189">The item to remove.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6bfe9-190">Entfernt das angegebene Element aus der Auflistung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bfe9-190">Removes the specified item from the collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6bfe9-191">Wenn `item` befindet sich nicht in der Auflistung <xref:System.ComponentModel.IEditableCollectionView.Remove%2A> hat keine Auswirkungen.</span><span class="sxs-lookup"><span data-stu-id="6bfe9-191">If `item` is not in the collection, <xref:System.ComponentModel.IEditableCollectionView.Remove%2A> does nothing.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6bfe9-192">Im folgenden Beispiel wird <xref:System.ComponentModel.IEditableCollectionView.CanRemove%2A> zu überprüfen, ob ein Element aus der Auflistung entfernt werden kann.</span><span class="sxs-lookup"><span data-stu-id="6bfe9-192">The following example calls <xref:System.ComponentModel.IEditableCollectionView.CanRemove%2A> to check whether an item can be removed from the collection.</span></span>  <span data-ttu-id="6bfe9-193">Wenn ein Element entfernt werden kann, im Beispiel wird der Benutzer aufgefordert, die Aktion zu bestätigen <xref:System.ComponentModel.IEditableCollectionView.Remove%2A> klickt der Benutzer **Ja**.</span><span class="sxs-lookup"><span data-stu-id="6bfe9-193">If an item can be removed, the example prompts the user to confirm the action and calls <xref:System.ComponentModel.IEditableCollectionView.Remove%2A> if the user clicks **Yes**.</span></span> <span data-ttu-id="6bfe9-194">Das vollständige Beispiel finden Sie unter [Ändern einer Sammlungssatzkonfiguration mit IEditableCollectionView](https://github.com/Microsoft/WPF-Samples/tree/master/Data%20Binding/EditingCollections).</span><span class="sxs-lookup"><span data-stu-id="6bfe9-194">For the entire sample, see [Changing a Collection by Using IEditableCollectionView Sample](https://github.com/Microsoft/WPF-Samples/tree/master/Data%20Binding/EditingCollections).</span></span>  
  
 [!code-csharp[EditingCollectionsSnippets#RemoveItem](~/samples/snippets/csharp/VS_Snippets_Wpf/EditingCollectionsSnippets/CSharp/Window1.xaml.cs#removeitem)]
 [!code-vb[EditingCollectionsSnippets#RemoveItem](~/samples/snippets/visualbasic/VS_Snippets_Wpf/EditingCollectionsSnippets/visualbasic/window1.xaml.vb#removeitem)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public void RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.IEditableCollectionView.RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAt (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveAt(int index);" />
      <MemberSignature Language="F#" Value="abstract member RemoveAt : int -&gt; unit" Usage="iEditableCollectionView.RemoveAt index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="6bfe9-195">Die Position des zu entfernenden Elements.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bfe9-195">The position of the item to remove.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6bfe9-196">Entfernt das Element an der angegebenen Position aus der Auflistung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bfe9-196">Removes the item at the specified position from the collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6bfe9-197">`index` ist relativ zu der Auflistungsansicht, nicht in der Auflistung.</span><span class="sxs-lookup"><span data-stu-id="6bfe9-197">`index` is relative to the collection view, not the collection.</span></span>  <span data-ttu-id="6bfe9-198">Z. B. wenn die Auflistung 10 Elemente und die Ansicht hat verfügt über eine <xref:System.ComponentModel.ICollectionView.Filter%2A> , damit 7 Elemente angezeigt werden, die gültigen Werte der `index` sind 0 bis 6.</span><span class="sxs-lookup"><span data-stu-id="6bfe9-198">For example, if the collection has 10 items and the view has a <xref:System.ComponentModel.ICollectionView.Filter%2A> so that 7 items appear, the valid values of `index` are 0 through 6.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="6bfe9-199">
            <paramref name="index" /> ist kleiner als 0 (null) oder größer als die Anzahl der Elemente in der Auflistungsansicht.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bfe9-199">
              <paramref name="index" /> is less than 0 or greater than the number of items in the collection view.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>