<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="TypeDescriptor.xml" source-language="en-US" target-language="de-DE">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5968d329f2f177601a519db6bf1860db9d9f3c359.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">968d329f2f177601a519db6bf1860db9d9f3c359</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.TypeDescriptor">
          <source>Provides information about the characteristics for a component, such as its attributes, properties, and events.</source>
          <target state="translated">Stellt Informationen zu den Merkmalen für eine Komponente bereit, z.B. zu Attributen, Eigenschaften und Ereignissen.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.TypeDescriptor">
          <source>This class cannot be inherited.</source>
          <target state="translated">Diese Klasse kann nicht vererbt werden.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.TypeDescriptor">
          <source>The .NET Framework provides two ways to access metadata on a type: the reflection API provided in the <ph id="ph1">&lt;xref:System.Reflection?displayProperty=nameWithType&gt;</ph> namespace, and the <ph id="ph2">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph> class.</source>
          <target state="translated">.NET Framework bietet zwei Möglichkeiten, den Zugriff auf Metadaten für einen Typ: die Reflektion API bereitgestellt werden, in der <ph id="ph1">&lt;xref:System.Reflection?displayProperty=nameWithType&gt;</ph> -Namespace und die <ph id="ph2">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph> Klasse.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.TypeDescriptor">
          <source>Reflection is a general mechanism available to all types because its foundation is established in the <ph id="ph1">&lt;xref:System.Object.GetType%2A&gt;</ph> method of the root <ph id="ph2">&lt;xref:System.Object&gt;</ph> class.</source>
          <target state="translated">Reflektion ist ein allgemeiner Mechanismus für alle Typen verfügbar, da er in-Stammklasse der <ph id="ph1">&lt;xref:System.Object.GetType%2A&gt;</ph> Methode des Stamms <ph id="ph2">&lt;xref:System.Object&gt;</ph> Klasse.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.TypeDescriptor">
          <source>The information it returns for a type is not extensible, in that it cannot be modified after compilation of the target type.</source>
          <target state="translated">Die Informationen, die sie für einen Typ gibt ist nicht erweiterbar, insofern, dass er nach der Kompilierung des Zieltyps kann geändert werden.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.TypeDescriptor">
          <source>For more information, see the topics in <bpt id="p1">[</bpt>Reflection<ept id="p1">](~/docs/framework/reflection-and-codedom/reflection.md)</ept>.</source>
          <target state="translated">Weitere Informationen finden Sie unter den Themen in <bpt id="p1">[</bpt>Reflektion<ept id="p1">](~/docs/framework/reflection-and-codedom/reflection.md)</ept>.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.TypeDescriptor">
          <source>In contrast, <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph> is an extensible inspection mechanism for components: those classes that implement the <ph id="ph2">&lt;xref:System.ComponentModel.IComponent&gt;</ph> interface.</source>
          <target state="translated">Im Gegensatz dazu <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph> ist ein erweiterbares Inspektionsmechanismus für Komponenten: die Klassen, in denen die <ph id="ph2">&lt;xref:System.ComponentModel.IComponent&gt;</ph> Schnittstelle.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.TypeDescriptor">
          <source>Unlike reflection, it does not inspect for methods.</source>
          <target state="translated">Im Gegensatz zur Reflektion ist es nicht für Methoden überprüfen.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.TypeDescriptor">
          <source><ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph> can be dynamically extended by several services available through the target component's <ph id="ph2">&lt;xref:System.ComponentModel.Component.Site%2A&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph> Einige Dienste verfügbar sind, durch die Zielkomponente können dynamisch erweitert werden <ph id="ph2">&lt;xref:System.ComponentModel.Component.Site%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.TypeDescriptor">
          <source>The following table shows these services.</source>
          <target state="translated">Die folgende Tabelle zeigt diese Dienste.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.TypeDescriptor">
          <source>Service name</source>
          <target state="translated">Dienstname</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.TypeDescriptor">
          <source>Description</source>
          <target state="translated">Beschreibung </target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.TypeDescriptor">
          <source>Enables another class, such as <ph id="ph1">&lt;xref:System.Windows.Forms.ToolTip&gt;</ph>, to provide extra properties to a component.</source>
          <target state="translated">Aktiviert eine andere Klasse, z. B. <ph id="ph1">&lt;xref:System.Windows.Forms.ToolTip&gt;</ph>, um zusätzliche Eigenschaften für eine Komponente bereitzustellen.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.TypeDescriptor">
          <source>Enables another object to modify the standard metadata that is exposed by a component.</source>
          <target state="translated">Können ein weiteres Objekt für den standardmäßigen Metadaten zu ändern, der von einer Komponente verfügbar gemacht wird.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.TypeDescriptor">
          <source>Enables a class to completely and dynamically specify its own metadata, replacing the standard inspection mechanism of <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph>.</source>
          <target state="translated">Kann eine Klasse vollständig und dynamisch eine eigenen Metadaten anzugeben, und ersetzen den standard-Überprüfung-Mechanismus von <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.TypeDescriptor">
          <source>The extensibility provided by <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph> allows the design-time representation of a component to differ from its actual run-time representation, which makes <ph id="ph2">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph> useful for building design-time infrastructure.</source>
          <target state="translated">Die Erweiterbarkeit von bereitgestellten <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph> ermöglicht die Entwurfszeit Darstellung einer Komponente von ihrer tatsächlichen Laufzeit-Darstellung unterscheidet, wodurch das <ph id="ph2">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph> nützlich zur Erstellung von während der Entwurfszeit-Infrastruktur.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.TypeDescriptor">
          <source>All the methods in <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph> are <ph id="ph2">`static`</ph>.</source>
          <target state="translated">Alle Methoden in <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph> sind <ph id="ph2">`static`</ph>.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.TypeDescriptor">
          <source>You cannot create an instance of this class, and this class cannot be inherited.</source>
          <target state="translated">Sie können keine Instanz dieser Klasse erstellen, und diese Klasse kann nicht vererbt werden.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.TypeDescriptor">
          <source>You can set property and event values two different ways: specify them in the component class or change them at design time.</source>
          <target state="translated">Sie können die Eigenschaft festlegen und Ereignis Werte zwei unterschiedliche Arten: Legen Sie sie in der Komponentenklasse oder zur Entwurfszeit zu ändern.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.TypeDescriptor">
          <source>Because you can set these values two ways, the overloaded methods of <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph> take two different types of parameters: a class type or an object instance.</source>
          <target state="translated">Da nur werden, wenn diese festgelegt kann Werte zwei Möglichkeiten, die überladenen Methoden von <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph> nehmen zwei verschiedene Arten von Parametern: einen Klassentyp oder eine Objektinstanz.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.TypeDescriptor">
          <source>When you want to access <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph> information and you have an instance of the object, use the method that calls for a component.</source>
          <target state="translated">Wenn Sie zugreifen möchten <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph> Informationen, und Sie haben eine Instanz des Objekts, verwenden Sie die Methode, die für eine Komponente aufruft.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.TypeDescriptor">
          <source>Use the method that calls for the class type only when you do not have an instance of the object.</source>
          <target state="translated">Verwenden Sie die Methode, die für den Klassentyp nur aufgerufen, wenn Sie nicht über eine Instanz des Objekts verfügen.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.TypeDescriptor">
          <source>Properties and events are cached by <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph> for speed.</source>
          <target state="translated">Eigenschaften und Ereignisse werden von zwischengespeichert <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph> für Geschwindigkeit.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.TypeDescriptor">
          <source>Typically, they are constant for the lifetime of an object.</source>
          <target state="translated">In der Regel sind sie für die Lebensdauer eines Objekts konstant.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.TypeDescriptor">
          <source>However, extender providers and designers can change the set of properties on an object.</source>
          <target state="translated">Extenderanbieter und Designer können jedoch den Satz von Eigenschaften für ein Objekt ändern.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.TypeDescriptor">
          <source>If this is the case, then the <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.Refresh%2A&gt;</ph> method must be called to update the cache.</source>
          <target state="translated">Wenn dies der Fall ist die <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.Refresh%2A&gt;</ph> Methode muss aufgerufen werden, um den Cache aktualisieren.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.TypeDescriptor">
          <source>Adds class-level attributes to the target component.</source>
          <target state="translated">Fügt Attribute auf Klassenebene zur Zielkomponente hinzu.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.AddAttributes(System.Object,System.Attribute[])">
          <source>An instance of the target component.</source>
          <target state="translated">Eine Instanz der Zielkomponente.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.AddAttributes(System.Object,System.Attribute[])">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Attribute" /&gt;</ph> objects to add to the component's class.</source>
          <target state="translated">Ein Array von <ph id="ph1">&lt;see cref="T:System.Attribute" /&gt;</ph>-Objekten, die der Klasse der Komponente hinzugefügt werden sollen.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.AddAttributes(System.Object,System.Attribute[])">
          <source>Adds class-level attributes to the target component instance.</source>
          <target state="translated">Fügt Attribute auf Klassenebene zur Zielkomponenteninstanz hinzu.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.AddAttributes(System.Object,System.Attribute[])">
          <source>The newly created <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeDescriptionProvider" /&gt;</ph> that was used to add the specified attributes.</source>
          <target state="translated">Der neu erstellte <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeDescriptionProvider" /&gt;</ph>, mit dessen Hilfe die angegebenen Attribute hinzugefügt wurden.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.AddAttributes(System.Object,System.Attribute[])">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.AddAttributes%28System.Object%2CSystem.Attribute%5B%5D%29&gt;</ph> method adds class-level attributes to the specified instance of a component.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.AddAttributes%28System.Object%2CSystem.Attribute%5B%5D%29&gt;</ph> Methode fügt Attribute auf Klassenebene mit der angegebenen Instanz einer Komponente.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.AddAttributes(System.Object,System.Attribute[])">
          <source>Because this is a common requirement of applications using the <ph id="ph1">[!INCLUDE[vsprvs](~/includes/vsprvs-md.md)]</ph> Windows Forms Designer and Properties window, this method provides a shortcut by creating a type description provider that merges the provided attributes with the attributes that already exist on the class.</source>
          <target state="translated">Da dies eine häufige Anforderung von Anwendungen mit ist der <ph id="ph1">[!INCLUDE[vsprvs](~/includes/vsprvs-md.md)]</ph> Windows Forms-Designer und das Eigenschaftenfenster, diese Methode stellt eine Verknüpfung erstellen einen Typbeschreibungsanbieter, die mit den Attributen der bereitgestellten Attribute zusammenführt, für die Klasse bereits vorhanden.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.AddAttributes(System.Object,System.Attribute[])">
          <source>The return value is the type description provider that was used to add the attributes.</source>
          <target state="translated">Der Rückgabewert ist der Typbeschreibungsanbieter, der verwendet wurde, um die Attribute hinzuzufügen.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.AddAttributes(System.Object,System.Attribute[])">
          <source>This provider can later be passed to the <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.RemoveProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29&gt;</ph> method when the added attributes are no longer needed.</source>
          <target state="translated">Dieser Anbieter kann später übergeben werden, um die <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.RemoveProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29&gt;</ph> Methode, wenn die hinzugefügten Attribute nicht mehr benötigt werden.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.AddAttributes(System.Object,System.Attribute[])">
          <source>One or both of the parameters is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Einer oder beide Parameter haben den Wert <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.AddAttributes(System.Object,System.Attribute[])">
          <source>for full access to system resources.</source>
          <target state="translated">für Vollzugriff auf Systemressourcen verfügbar sind.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.AddAttributes(System.Object,System.Attribute[])">
          <source>Demand value: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph>.</source>
          <target state="translated">"Demand"-Wert: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.AddAttributes(System.Object,System.Attribute[])">
          <source>Associated state:</source>
          <target state="translated">Zugeordneten Zustand:</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.AddAttributes(System.Type,System.Attribute[])">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> of the target component.</source>
          <target state="translated">Der <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> der Zielkomponente.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.AddAttributes(System.Type,System.Attribute[])">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Attribute" /&gt;</ph> objects to add to the component's class.</source>
          <target state="translated">Ein Array von <ph id="ph1">&lt;see cref="T:System.Attribute" /&gt;</ph>-Objekten, die der Klasse der Komponente hinzugefügt werden sollen.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.AddAttributes(System.Type,System.Attribute[])">
          <source>Adds class-level attributes to the target component type.</source>
          <target state="translated">Fügt Attribute auf Klassenebene zum Zielkomponententyp hinzu.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.AddAttributes(System.Type,System.Attribute[])">
          <source>The newly created <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeDescriptionProvider" /&gt;</ph> that was used to add the specified attributes.</source>
          <target state="translated">Der neu erstellte <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeDescriptionProvider" /&gt;</ph>, mit dessen Hilfe die angegebenen Attribute hinzugefügt wurden.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.AddAttributes(System.Type,System.Attribute[])">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.AddAttributes%28System.Type%2CSystem.Attribute%5B%5D%29&gt;</ph> method adds class-level attributes to the specified type of a component.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.AddAttributes%28System.Type%2CSystem.Attribute%5B%5D%29&gt;</ph> Methode fügt Attribute auf Klassenebene in den angegebenen Typ einer Komponente.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.AddAttributes(System.Type,System.Attribute[])">
          <source>Because this is a common requirement of applications using the <ph id="ph1">[!INCLUDE[vsprvs](~/includes/vsprvs-md.md)]</ph> Windows Forms Designer and Properties window, this method provides a shortcut by creating a type description provider that merges the provided attributes with the attributes that already exist on the class.</source>
          <target state="translated">Da dies eine häufige Anforderung von Anwendungen mit ist der <ph id="ph1">[!INCLUDE[vsprvs](~/includes/vsprvs-md.md)]</ph> Windows Forms-Designer und das Eigenschaftenfenster, diese Methode stellt eine Verknüpfung erstellen einen Typbeschreibungsanbieter, die mit den Attributen der bereitgestellten Attribute zusammenführt, für die Klasse bereits vorhanden.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.AddAttributes(System.Type,System.Attribute[])">
          <source>The return value is the type description provider that was used to add the attributes.</source>
          <target state="translated">Der Rückgabewert ist der Typbeschreibungsanbieter, der verwendet wurde, um die Attribute hinzuzufügen.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.AddAttributes(System.Type,System.Attribute[])">
          <source>This provider can later be passed to the <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.RemoveProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29&gt;</ph> method when the added attributes are no longer needed.</source>
          <target state="translated">Dieser Anbieter kann später übergeben werden, um die <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.RemoveProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29&gt;</ph> Methode, wenn die hinzugefügten Attribute nicht mehr benötigt werden.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.AddAttributes(System.Type,System.Attribute[])">
          <source>One or both of the parameters is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Einer oder beide Parameter haben den Wert <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.AddAttributes(System.Type,System.Attribute[])">
          <source>for full access to system resources.</source>
          <target state="translated">für Vollzugriff auf Systemressourcen verfügbar sind.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.AddAttributes(System.Type,System.Attribute[])">
          <source>Demand value: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph>.</source>
          <target state="translated">"Demand"-Wert: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.AddAttributes(System.Type,System.Attribute[])">
          <source>Associated state:</source>
          <target state="translated">Zugeordneten Zustand:</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.AddEditorTable(System.Type,System.Collections.Hashtable)">
          <source>The editor base type to add the editor table for.</source>
          <target state="translated">Der Editor-Basistyp, für den die Editor-Tabelle hinzugefügt wird.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.AddEditorTable(System.Type,System.Collections.Hashtable)">
          <source>If a table already exists for this type, this method will do nothing.</source>
          <target state="translated">Wenn für diesen Typ bereits eine Tabelle vorhanden ist, führt diese Methode keine Aktion aus.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.AddEditorTable(System.Type,System.Collections.Hashtable)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.Hashtable" /&gt;</ph> to add.</source>
          <target state="translated">Das hinzuzufügende <ph id="ph1">&lt;see cref="T:System.Collections.Hashtable" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.AddEditorTable(System.Type,System.Collections.Hashtable)">
          <source>Adds an editor table for the given editor base type.</source>
          <target state="translated">Fügt eine Editor-Tabelle für den angegebenen Editor-Basistyp hinzu.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.AddEditorTable(System.Type,System.Collections.Hashtable)">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.AddEditorTable%2A&gt;</ph> method adds an editor table for the given editor base type.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.AddEditorTable%2A&gt;</ph> Methode fügt eine Editor-Tabelle für den angegebenen Editor-Basistyp hinzu.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.AddEditorTable(System.Type,System.Collections.Hashtable)">
          <source>Typically, editors are specified as metadata on a component.</source>
          <target state="translated">Editoren werden in der Regel als Metadaten für eine Komponente angegeben.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.AddEditorTable(System.Type,System.Collections.Hashtable)">
          <source>However, if no metadata for a requested editor base type can be found on the component, the associated <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph> will search an editor table for the editor type, if one can be found.</source>
          <target state="translated">Jedoch, wenn keine Metadaten für einen angeforderten Editor Basis Typ befinden sich auf die Komponente, die die zugeordnete <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph> sucht eine Editor-Tabelle für den Editortyp gefunden werden können.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.AddEditorTable(System.Type,System.Collections.Hashtable)">
          <source>Once an editor table has been added to a type descriptor, it cannot be removed and is owned by the type descriptor.</source>
          <target state="translated">Sobald ein Typdeskriptor eine Editor-Tabelle hinzugefügt wurde, kann nicht entfernt werden und ist im Besitz des Typdeskriptors.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.AddEditorTable(System.Type,System.Collections.Hashtable)">
          <source>The type descriptor may freely make modifications to this table.</source>
          <target state="translated">Der Typdeskriptor möglicherweise Änderungen an dieser Tabelle frei vornehmen.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.AddEditorTable(System.Type,System.Collections.Hashtable)">
          <source>The format for an editor table uses data types as keys and editors as values.</source>
          <target state="translated">Das Format für eine Editor-Tabelle verwendet Datentypen als Schlüssel und Editoren als Werte.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.AddEditorTable(System.Type,System.Collections.Hashtable)">
          <source>The value portion of an entry in the table represents an editor instance.</source>
          <target state="translated">Der Wertteil eines Eintrags in der Tabelle stellt eine Editorinstanz.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.AddEditorTable(System.Type,System.Collections.Hashtable)">
          <source>It can have one of three values.</source>
          <target state="translated">Es kann einen der drei folgenden Werte aufweisen.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.AddEditorTable(System.Type,System.Collections.Hashtable)">
          <source>If it contains a string, the type descriptor will assume this is a fully qualified name of a type, and then load the type for the object.</source>
          <target state="translated">Wenn es sich um eine Zeichenfolge enthält, wird der Typdeskriptor davon ausgegangen, dass dies einen vollqualifizierten Namen eines Typs, und lädt den Typ für das Objekt ist.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.AddEditorTable(System.Type,System.Collections.Hashtable)">
          <source>If it contains a type, an instance of this type will be created to obtain an editor.</source>
          <target state="translated">Wenn sie einen Typ enthält, wird eine Instanz dieses Typs erstellt werden, um einen Editor zu erhalten.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.AddEditorTable(System.Type,System.Collections.Hashtable)">
          <source>Finally, the value portion may contain an actual editor instance.</source>
          <target state="translated">Der Wertteil kann schließlich eine tatsächliche Editorinstanz enthalten.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.AddEditorTable(System.Type,System.Collections.Hashtable)">
          <source>If the type descriptor resolves an editor to an instance, it will store the instance back into the table for future use.</source>
          <target state="translated">Wenn der Typdeskriptor einen Editor mit einer Instanz aufgelöst wird, wird die Instanz wieder der Tabelle für die zukünftige Verwendung gespeichert.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.TypeDescriptor">
          <source>Adds a type description provider to the list of providers for this type descriptor.</source>
          <target state="translated">Fügt der Liste der Anbieter für diesen Typdeskriptor einen Typbeschreibungsanbieter hinzu.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.AddProvider(System.ComponentModel.TypeDescriptionProvider,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeDescriptionProvider" /&gt;</ph> to add.</source>
          <target state="translated">Das hinzuzufügende <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeDescriptionProvider" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.AddProvider(System.ComponentModel.TypeDescriptionProvider,System.Object)">
          <source>An instance of the target component.</source>
          <target state="translated">Eine Instanz der Zielkomponente.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.AddProvider(System.ComponentModel.TypeDescriptionProvider,System.Object)">
          <source>Adds a type description provider for a single instance of a component.</source>
          <target state="translated">Fügt einen Typbeschreibungsanbieter für eine einzelne Instanz einer Komponente hinzu.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.AddProvider(System.ComponentModel.TypeDescriptionProvider,System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29&gt;</ph> method adds a type description provider that supplies type information for a single instance of a component.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29&gt;</ph> Methode fügt einen Typbeschreibungsanbieter, dass die Typinformationen für eine einzelne Instanz einer Komponente bereitstellt.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.AddProvider(System.ComponentModel.TypeDescriptionProvider,System.Object)">
          <source>If a provider is added by this method, the provider's <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.CreateInstance%2A&gt;</ph> method will not be called because the instance already exists.</source>
          <target state="translated">Wenn ein Anbieter, von dieser Methode, den Anbieter des hinzugefügt wird <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.CreateInstance%2A&gt;</ph> Methode wird nicht aufgerufen werden, da die Instanz bereits vorhanden ist.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.AddProvider(System.ComponentModel.TypeDescriptionProvider,System.Object)">
          <source>This method does not maintain a hard reference to the component, so it does not prevent the component from finalizing.</source>
          <target state="translated">Diese Methode behält einen feste Verweis auf die Komponente, damit er nicht die Komponente abschließen verhindert wird.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.AddProvider(System.ComponentModel.TypeDescriptionProvider,System.Object)">
          <source>It is possible to add multiple type description providers for the same type or object.</source>
          <target state="translated">Es ist möglich, mehrere Typbeschreibungsanbieter für den gleichen Typ oder Objekt hinzuzufügen.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.AddProvider(System.ComponentModel.TypeDescriptionProvider,System.Object)">
          <source>If this occurs, the first type description provider encountered that provides type information will be used exclusively.</source>
          <target state="translated">In diesem Fall wird die erste gefundene Typbeschreibungsanbieter, der Typinformationen bereitstellt ausschließlich verwendet werden.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.AddProvider(System.ComponentModel.TypeDescriptionProvider,System.Object)">
          <source>Since type information providers are stored in a stack, the last provider added will be the first one queried.</source>
          <target state="translated">Da Anbieter von Typinformationen in einem Stapel gespeichert werden, wird der zuletzt hinzugefügte Anbieter das erste Schema abgefragt werden.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.AddProvider(System.ComponentModel.TypeDescriptionProvider,System.Object)">
          <source>This behavior enables the <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29&gt;</ph> and <ph id="ph2">&lt;xref:System.ComponentModel.TypeDescriptor.RemoveProvider%2A&gt;</ph> methods to be used to push and pop type description providers as required for particular scenarios.</source>
          <target state="translated">Dieses Verhalten ermöglicht die <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29&gt;</ph> und <ph id="ph2">&lt;xref:System.ComponentModel.TypeDescriptor.RemoveProvider%2A&gt;</ph> Methoden für push und pop zu verwendende Typbeschreibungsanbieter für bestimmte Szenarien erforderlich.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.AddProvider(System.ComponentModel.TypeDescriptionProvider,System.Object)">
          <source>If successful, this method calls the <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.Refresh%28System.Object%29&gt;</ph> method on the <ph id="ph2">`instance`</ph> parameter.</source>
          <target state="translated">Wenn erfolgreich, diese Methode ruft die <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.Refresh%28System.Object%29&gt;</ph> Methode für die <ph id="ph2">`instance`</ph> Parameter.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.AddProvider(System.ComponentModel.TypeDescriptionProvider,System.Object)">
          <source>The two versions of this method produce results with different scopes.</source>
          <target state="translated">Die beiden Versionen dieser Methode die Ergebnisse mit unterschiedlichen Bereichen.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.AddProvider(System.ComponentModel.TypeDescriptionProvider,System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.AddProvider%2A&gt;</ph> method that takes an <ph id="ph2">&lt;xref:System.Object&gt;</ph> parameter affects only that single instance of the component specified.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.AddProvider%2A&gt;</ph> Methode, eine <ph id="ph2">&lt;xref:System.Object&gt;</ph> Parameter wirkt sich auf nur diese einzelne Instanz der angegebenen Komponente.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.AddProvider(System.ComponentModel.TypeDescriptionProvider,System.Object)">
          <source>In contrast, the other overload, which takes a <ph id="ph1">&lt;xref:System.Type&gt;</ph> parameter, affects all instances of the component described by that type.</source>
          <target state="translated">Im Gegensatz dazu die andere Überladung, was in Anspruch nimmt eine <ph id="ph1">&lt;xref:System.Type&gt;</ph> Parameter, wirkt sich auf alle Instanzen der Komponente, die von diesem Typ beschrieben.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.AddProvider(System.ComponentModel.TypeDescriptionProvider,System.Object)">
          <source>Use the <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.AddProviderTransparent%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29&gt;</ph> method if you need to call from partially trusted code.</source>
          <target state="translated">Verwenden der <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.AddProviderTransparent%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29&gt;</ph> Methode von teilweise vertrauenswürdigem Code aufgerufen werden sollen.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.AddProvider(System.ComponentModel.TypeDescriptionProvider,System.Object)">
          <source>One or both of the parameters are <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Ein oder beide Parameter sind <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.AddProvider(System.ComponentModel.TypeDescriptionProvider,System.Object)">
          <source>for full access to system resources.</source>
          <target state="translated">für Vollzugriff auf Systemressourcen verfügbar sind.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.AddProvider(System.ComponentModel.TypeDescriptionProvider,System.Object)">
          <source>Demand value: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph>.</source>
          <target state="translated">"Demand"-Wert: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.AddProvider(System.ComponentModel.TypeDescriptionProvider,System.Object)">
          <source>Associated state:</source>
          <target state="translated">Zugeordneten Zustand:</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.AddProvider(System.ComponentModel.TypeDescriptionProvider,System.Type)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeDescriptionProvider" /&gt;</ph> to add.</source>
          <target state="translated">Das hinzuzufügende <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeDescriptionProvider" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.AddProvider(System.ComponentModel.TypeDescriptionProvider,System.Type)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> of the target component.</source>
          <target state="translated">Der <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> der Zielkomponente.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.AddProvider(System.ComponentModel.TypeDescriptionProvider,System.Type)">
          <source>Adds a type description provider for a component class.</source>
          <target state="translated">Fügt einen Typbeschreibungsanbieter für eine Komponentenklasse hinzu.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.AddProvider(System.ComponentModel.TypeDescriptionProvider,System.Type)">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29&gt;</ph> method adds a type description provider that supplies type information for the specified class, derived classes, and all instances of these types.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29&gt;</ph> Methode fügt einen Typbeschreibungsanbieter, dass die Typinformationen für die angegebene Klasse abgeleitete Klassen und alle Instanzen dieser Typen bereitstellt.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.AddProvider(System.ComponentModel.TypeDescriptionProvider,System.Type)">
          <source>The <ph id="ph1">`type`</ph> parameter can be any type, including an interface.</source>
          <target state="translated">Die <ph id="ph1">`type`</ph> Parameter kann beliebigen Typs, einschließlich einer Schnittstelle sein.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.AddProvider(System.ComponentModel.TypeDescriptionProvider,System.Type)">
          <source>For example, to provide custom type and instance information for all components, you would specify <ph id="ph1">`typeof(IComponent)`</ph>.</source>
          <target state="translated">Angenommen, um den benutzerdefinierten Typ und Instanzinformationen für alle Komponenten bereitzustellen, würden Sie angeben <ph id="ph1">`typeof(IComponent)`</ph>.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.AddProvider(System.ComponentModel.TypeDescriptionProvider,System.Type)">
          <source>Passing <ph id="ph1">`typeof(object)`</ph> will call the provider to supply type information for all types.</source>
          <target state="translated">Übergeben von <ph id="ph1">`typeof(object)`</ph> angerufen des Anbieters, um die Typinformationen für alle Typen bereitstellt.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.AddProvider(System.ComponentModel.TypeDescriptionProvider,System.Type)">
          <source>This method does not maintain a hard reference to any object, so it does not prevent objects from finalizing.</source>
          <target state="translated">Diese Methode behält einen festen Verweis auf ein beliebiges Objekt, damit es nicht Objekte endgültig feststehen verhindert wird.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.AddProvider(System.ComponentModel.TypeDescriptionProvider,System.Type)">
          <source>It is possible to add multiple type description providers for the same type or object.</source>
          <target state="translated">Es ist möglich, mehrere Typbeschreibungsanbieter für den gleichen Typ oder Objekt hinzuzufügen.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.AddProvider(System.ComponentModel.TypeDescriptionProvider,System.Type)">
          <source>If this occurs, the first type description provider encountered that provides type information will be used exclusively.</source>
          <target state="translated">In diesem Fall wird die erste gefundene Typbeschreibungsanbieter, der Typinformationen bereitstellt ausschließlich verwendet werden.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.AddProvider(System.ComponentModel.TypeDescriptionProvider,System.Type)">
          <source>Because type information providers are stored in a stack, the last provider added will be the first one queried.</source>
          <target state="translated">Da Anbieter von Typinformationen in einem Stapel gespeichert werden, wird der zuletzt hinzugefügte Anbieter das erste Schema abgefragt werden.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.AddProvider(System.ComponentModel.TypeDescriptionProvider,System.Type)">
          <source>This behavior enables the <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29&gt;</ph> and <ph id="ph2">&lt;xref:System.ComponentModel.TypeDescriptor.RemoveProvider%2A&gt;</ph> methods to be used to push and pop type description providers as required for particular scenarios.</source>
          <target state="translated">Dieses Verhalten ermöglicht die <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29&gt;</ph> und <ph id="ph2">&lt;xref:System.ComponentModel.TypeDescriptor.RemoveProvider%2A&gt;</ph> Methoden für push und pop zu verwendende Typbeschreibungsanbieter für bestimmte Szenarien erforderlich.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.AddProvider(System.ComponentModel.TypeDescriptionProvider,System.Type)">
          <source>If successful, this method calls the <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.Refresh%28System.Type%29&gt;</ph> method on the <ph id="ph2">`type`</ph> parameter.</source>
          <target state="translated">Wenn erfolgreich, diese Methode ruft die <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.Refresh%28System.Type%29&gt;</ph> Methode für die <ph id="ph2">`type`</ph> Parameter.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.AddProvider(System.ComponentModel.TypeDescriptionProvider,System.Type)">
          <source>The two versions of this method produce results with different scopes.</source>
          <target state="translated">Die beiden Versionen dieser Methode die Ergebnisse mit unterschiedlichen Bereichen.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.AddProvider(System.ComponentModel.TypeDescriptionProvider,System.Type)">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.AddProvider%2A&gt;</ph> method that takes an <ph id="ph2">&lt;xref:System.Object&gt;</ph> parameter affects only that single instance of the component specified.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.AddProvider%2A&gt;</ph> Methode, eine <ph id="ph2">&lt;xref:System.Object&gt;</ph> Parameter wirkt sich auf nur diese einzelne Instanz der angegebenen Komponente.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.AddProvider(System.ComponentModel.TypeDescriptionProvider,System.Type)">
          <source>In contrast, the other overload, which takes a <ph id="ph1">&lt;xref:System.Type&gt;</ph> parameter, affects all instances of the component described by that type.</source>
          <target state="translated">Im Gegensatz dazu die andere Überladung, was in Anspruch nimmt eine <ph id="ph1">&lt;xref:System.Type&gt;</ph> Parameter, wirkt sich auf alle Instanzen der Komponente, die von diesem Typ beschrieben.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.AddProvider(System.ComponentModel.TypeDescriptionProvider,System.Type)">
          <source>Use the <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.AddProviderTransparent%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29&gt;</ph> method if you need to call from partially trusted code.</source>
          <target state="translated">Verwenden der <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.AddProviderTransparent%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29&gt;</ph> Methode von teilweise vertrauenswürdigem Code aufgerufen werden sollen.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.AddProvider(System.ComponentModel.TypeDescriptionProvider,System.Type)">
          <source>One or both of the parameters are <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Ein oder beide Parameter sind <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.AddProvider(System.ComponentModel.TypeDescriptionProvider,System.Type)">
          <source>for full access to system resources.</source>
          <target state="translated">für Vollzugriff auf Systemressourcen verfügbar sind.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.AddProvider(System.ComponentModel.TypeDescriptionProvider,System.Type)">
          <source>Demand value: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph>.</source>
          <target state="translated">"Demand"-Wert: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.AddProvider(System.ComponentModel.TypeDescriptionProvider,System.Type)">
          <source>Associated state:</source>
          <target state="translated">Zugeordneten Zustand:</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.TypeDescriptor">
          <source>Adds a type description provider to the list of providers for this type descriptor.</source>
          <target state="translated">Fügt der Liste der Anbieter für diesen Typdeskriptor einen Typbeschreibungsanbieter hinzu.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.AddProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeDescriptionProvider" /&gt;</ph> to add.</source>
          <target state="translated">Das hinzuzufügende <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeDescriptionProvider" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.AddProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Object)">
          <source>An instance of the target component.</source>
          <target state="translated">Eine Instanz der Zielkomponente.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.AddProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Object)">
          <source>Adds a type description provider for a single instance of a component.</source>
          <target state="translated">Fügt einen Typbeschreibungsanbieter für eine einzelne Instanz einer Komponente hinzu.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.AddProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Object)">
          <source>This method can be called from partially trusted code.</source>
          <target state="translated">Diese Methode kann von teilweise vertrauenswürdigem Code aufgerufen werden.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.AddProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Object)">
          <source>If <ph id="ph1">&lt;xref:System.Security.Permissions.TypeDescriptorPermissionFlags.RestrictedRegistrationAccess&gt;</ph> is defined, the caller can register a provider for the specified instance if its type is also partially trusted.</source>
          <target state="translated">Wenn <ph id="ph1">&lt;xref:System.Security.Permissions.TypeDescriptorPermissionFlags.RestrictedRegistrationAccess&gt;</ph> wird definiert, kann der Aufrufer einen Anbieter für die angegebene Instanz registrieren, wenn dessen Typ auch teilweise vertrauenswürdig ist.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.AddProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Object)">
          <source>Use the <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29&gt;</ph> method if you do not need to call from partially trusted code.</source>
          <target state="translated">Verwenden der <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29&gt;</ph> Methode, wenn Sie nicht von teilweise vertrauenswürdigem Code aufgerufen werden müssen.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.AddProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Object)">
          <source>One or both of the parameters are <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Ein oder beide Parameter sind <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.AddProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Object)">
          <source>For registry access.</source>
          <target state="translated">Für den Zugriff auf die Registrierung.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.AddProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Object)">
          <source>Security action: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.Demand" /&gt;</ph>.</source>
          <target state="translated">Sicherheitsaktion: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.Demand" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.AddProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Object)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.TypeDescriptorPermissionFlags.RestrictedRegistrationAccess" /&gt;</ph></source>
          <target state="translated">Zugeordnete Enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.TypeDescriptorPermissionFlags.RestrictedRegistrationAccess" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.AddProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Object)">
          <source>Security action: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.Demand" /&gt;</ph>.</source>
          <target state="translated">Sicherheitsaktion: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.Demand" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.AddProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Object)">
          <source>Associated type: The <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph> that is required by the assembly that defines the <ph id="ph2">&lt;paramref name="instance" /&gt;</ph> parameter's type.</source>
          <target state="translated">Zugeordneter Typ: die <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph> , verlangt der Assembly, definiert die <ph id="ph2">&lt;paramref name="instance" /&gt;</ph> Typ des Parameters.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.AddProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Type)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeDescriptionProvider" /&gt;</ph> to add.</source>
          <target state="translated">Das hinzuzufügende <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeDescriptionProvider" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.AddProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Type)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> of the target component.</source>
          <target state="translated">Der <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> der Zielkomponente.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.AddProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Type)">
          <source>Adds a type description provider for a component class.</source>
          <target state="translated">Fügt einen Typbeschreibungsanbieter für eine Komponentenklasse hinzu.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.AddProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Type)">
          <source>This method can be called from partially trusted code.</source>
          <target state="translated">Diese Methode kann von teilweise vertrauenswürdigem Code aufgerufen werden.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.AddProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Type)">
          <source>If <ph id="ph1">&lt;xref:System.Security.Permissions.TypeDescriptorPermissionFlags.RestrictedRegistrationAccess&gt;</ph> is defined, the caller can register a provider for the specified type if it is also partially trusted.</source>
          <target state="translated">Wenn <ph id="ph1">&lt;xref:System.Security.Permissions.TypeDescriptorPermissionFlags.RestrictedRegistrationAccess&gt;</ph> wird definiert, kann der Aufrufer einen Anbieter für den angegebenen Typ registrieren, wenn er auch teilweise vertrauenswürdig ist.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.AddProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Type)">
          <source>Use the <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29&gt;</ph> method if you do not need to call from partially trusted code.</source>
          <target state="translated">Verwenden der <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29&gt;</ph> Methode, wenn Sie nicht von teilweise vertrauenswürdigem Code aufgerufen werden müssen.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.AddProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Type)">
          <source>One or both of the parameters are <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Ein oder beide Parameter sind <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.AddProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Type)">
          <source>For registry access.</source>
          <target state="translated">Für den Zugriff auf die Registrierung.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.AddProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Type)">
          <source>Security action: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.Demand" /&gt;</ph>.</source>
          <target state="translated">Sicherheitsaktion: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.Demand" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.AddProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Type)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.TypeDescriptorPermissionFlags.RestrictedRegistrationAccess" /&gt;</ph></source>
          <target state="translated">Zugeordnete Enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.TypeDescriptorPermissionFlags.RestrictedRegistrationAccess" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.AddProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Type)">
          <source>Security action: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.Demand" /&gt;</ph>.</source>
          <target state="translated">Sicherheitsaktion: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.Demand" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.AddProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Type)">
          <source>Associated type: The <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph> that is required by the assembly that defines <ph id="ph2">&lt;paramref name="type" /&gt;</ph>.</source>
          <target state="translated">Zugeordneter Typ: die <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph> , verlangt der Assembly, die definiert <ph id="ph2">&lt;paramref name="type" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.TypeDescriptor.ComNativeDescriptorHandler">
          <source>Gets or sets the provider for the Component Object Model (COM) type information for the target component.</source>
          <target state="translated">Ruft den Anbieter für COM-Typinformationen (Component Object Model) für die Zielkomponente ab oder legt diesen fest.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.TypeDescriptor.ComNativeDescriptorHandler">
          <source>An <ph id="ph1">&lt;see cref="T:System.ComponentModel.IComNativeDescriptorHandler" /&gt;</ph> instance representing the COM type information provider.</source>
          <target state="translated">Eine <ph id="ph1">&lt;see cref="T:System.ComponentModel.IComNativeDescriptorHandler" /&gt;</ph>-Instanz, die den Anbieter von COM-Typinformationen darstellt.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.TypeDescriptor.ComNativeDescriptorHandler">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.ComNativeDescriptorHandler%2A&gt;</ph> property and the <ph id="ph2">&lt;xref:System.ComponentModel.IComNativeDescriptorHandler&gt;</ph> interface are obsolete.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.ComNativeDescriptorHandler%2A&gt;</ph> Eigenschaft und die <ph id="ph2">&lt;xref:System.ComponentModel.IComNativeDescriptorHandler&gt;</ph> Schnittstelle sind veraltet.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.TypeDescriptor.ComNativeDescriptorHandler">
          <source>For more information, see the <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.ComObjectType%2A&gt;</ph> property.</source>
          <target state="translated">Weitere Informationen finden Sie in den Ausführungen zur <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.ComObjectType%2A&gt;</ph>-Eigenschaft.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.TypeDescriptor.ComNativeDescriptorHandler">
          <source>for full access to system resources.</source>
          <target state="translated">für Vollzugriff auf Systemressourcen verfügbar sind.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.TypeDescriptor.ComNativeDescriptorHandler">
          <source>Demand value: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph>.</source>
          <target state="translated">"Demand"-Wert: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.TypeDescriptor.ComNativeDescriptorHandler">
          <source>Associated state:</source>
          <target state="translated">Zugeordneten Zustand:</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.TypeDescriptor.ComObjectType">
          <source>Gets the type of the Component Object Model (COM) object represented by the target component.</source>
          <target state="translated">Ruft den Typ des COM-Objekts (Component Object Model) ab, das durch die Zielkomponente dargestellt wird.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.TypeDescriptor.ComObjectType">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> of the COM object represented by this component, or <ph id="ph2">&lt;see langword="null" /&gt;</ph> for non-COM objects.</source>
          <target state="translated">Das <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> des COM-Objekts, das von dieser Komponente dargestellt wird, oder <ph id="ph2">&lt;see langword="null" /&gt;</ph> für Nicht-COM-Objekte.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.TypeDescriptor.ComObjectType">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.ComObjectType%2A&gt;</ph> property returns a type that can be passed to the <ph id="ph2">&lt;xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29&gt;</ph> method to define a type description provider for COM types.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.ComObjectType%2A&gt;</ph> -Eigenschaft gibt einen Typ, der übergeben werden kann die <ph id="ph2">&lt;xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29&gt;</ph> Methode, um einen Typbeschreibungsanbieter für COM-Typen zu definieren.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.TypeDescriptor.ComObjectType">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.ComObjectType%2A&gt;</ph> property and other members in this class replace the functionality in the obsolete <ph id="ph2">&lt;xref:System.ComponentModel.IComNativeDescriptorHandler&gt;</ph> interface.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.ComObjectType%2A&gt;</ph> Eigenschaft und andere Elemente in dieser Klasse ersetzen die Funktionalität der veralteten <ph id="ph2">&lt;xref:System.ComponentModel.IComNativeDescriptorHandler&gt;</ph> Schnittstelle.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.TypeDescriptor.ComObjectType">
          <source>To implement a mapping layer between a COM object and <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph>, add a <ph id="ph2">&lt;xref:System.ComponentModel.TypeDescriptionProvider&gt;</ph> to handle type <ph id="ph3">&lt;xref:System.ComponentModel.TypeDescriptor.ComObjectType%2A&gt;</ph>.</source>
          <target state="translated">Um eine Zuordnungsebene zwischen einem COM-Objekt zu implementieren und <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph>, Hinzufügen einer <ph id="ph2">&lt;xref:System.ComponentModel.TypeDescriptionProvider&gt;</ph> Typ behandeln <ph id="ph3">&lt;xref:System.ComponentModel.TypeDescriptor.ComObjectType%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.CreateAssociation(System.Object,System.Object)">
          <source>The primary <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph>.</source>
          <target state="translated">Das primäre <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.CreateAssociation(System.Object,System.Object)">
          <source>The secondary <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph>.</source>
          <target state="translated">Das sekundäre <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.CreateAssociation(System.Object,System.Object)">
          <source>Creates a primary-secondary association between two objects.</source>
          <target state="translated">Erstellt eine Primär-/Sekundär-Zuordnung zwischen zwei Objekten.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.CreateAssociation(System.Object,System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.CreateAssociation%2A&gt;</ph> method creates an association between a primary and a secondary object.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.CreateAssociation%2A&gt;</ph> Methode erstellt eine Zuordnung zwischen einem primären und einem sekundären Objekt.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.CreateAssociation(System.Object,System.Object)">
          <source>Once an association is created, a designer or other filtering mechanism can add properties that route to either object into the primary object's property set.</source>
          <target state="translated">Sobald eine Zuordnung erstellt wurde, kann einem Designer oder andere Filtermechanismus Eigenschaften hinzufügen, die entweder Objekt in das primäre Objekt Eigenschaftensatz weiterleiten.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.CreateAssociation(System.Object,System.Object)">
          <source>When a property invocation is made against the primary object, the <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.GetAssociation%2A&gt;</ph> method will be called to resolve the actual object instance that is related to its type parameter.</source>
          <target state="translated">Wenn ein Eigenschaftenaufruf für das primäre Objekt erfolgt die <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.GetAssociation%2A&gt;</ph> Methode wird aufgerufen, um die tatsächliche Objektinstanz zu beheben, die an den Typparameter gehört.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.CreateAssociation(System.Object,System.Object)">
          <source>A <ph id="ph1">&lt;xref:System.WeakReference&gt;</ph> is used to maintain the association between the primary and secondary object; therefore, this method does not prevent either object from being finalized and reclaimed by garbage collection.</source>
          <target state="translated">Ein <ph id="ph1">&lt;xref:System.WeakReference&gt;</ph> wird verwendet, um die Zuordnung zwischen dem primären und sekundären Objekt verwalten; daher, diese Methode wird nicht verhindert entweder Objekt wird abgeschlossen und von der Garbagecollection wieder zugänglich gemacht wird.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.CreateAssociation(System.Object,System.Object)">
          <source>One or both of the parameters are <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Ein oder beide Parameter sind <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.CreateAssociation(System.Object,System.Object)">
          <source><ph id="ph1">&lt;paramref name="primary" /&gt;</ph> is equal to <ph id="ph2">&lt;paramref name="secondary" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="primary" /&gt;</ph> ist gleich <ph id="ph2">&lt;paramref name="secondary" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.CreateAssociation(System.Object,System.Object)">
          <source>for full access to system resources.</source>
          <target state="translated">für Vollzugriff auf Systemressourcen verfügbar sind.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.CreateAssociation(System.Object,System.Object)">
          <source>Demand value: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph>.</source>
          <target state="translated">"Demand"-Wert: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.CreateAssociation(System.Object,System.Object)">
          <source>Associated state:</source>
          <target state="translated">Zugeordneten Zustand:</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.CreateDesigner(System.ComponentModel.IComponent,System.Type)">
          <source>An <ph id="ph1">&lt;see cref="T:System.ComponentModel.IComponent" /&gt;</ph> that specifies the component to associate with the designer.</source>
          <target state="translated">Eine <ph id="ph1">&lt;see cref="T:System.ComponentModel.IComponent" /&gt;</ph>, die die Komponente angibt, die dem Designer zugeordnet werden soll.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.CreateDesigner(System.ComponentModel.IComponent,System.Type)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> that represents the type of designer to create.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>, der den Typ des zu erstellenden Designers darstellt.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.CreateDesigner(System.ComponentModel.IComponent,System.Type)">
          <source>Creates an instance of the designer associated with the specified component and of the specified type of designer.</source>
          <target state="translated">Erstellt eine Instanz des angegebenen Designers, der der angegebenen Komponente zugeordnet ist, und des angegebenen Typs des Designers.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.CreateDesigner(System.ComponentModel.IComponent,System.Type)">
          <source>An <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.IDesigner" /&gt;</ph> that is an instance of the designer for the component, or <ph id="ph2">&lt;see langword="null" /&gt;</ph> if no designer can be found.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.IDesigner" /&gt;</ph>, der eine Instanz des Designers für die Komponente oder <ph id="ph2">&lt;see langword="null" /&gt;</ph> ist, falls kein Designer gefunden werden kann.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.CreateDesigner(System.ComponentModel.IComponent,System.Type)">
          <source>If this method cannot find a valid <ph id="ph1">&lt;xref:System.ComponentModel.DesignerAttribute&gt;</ph>, it searches up the class hierarchy for a designer.</source>
          <target state="translated">Wenn diese Methode einen gültigen findet <ph id="ph1">&lt;xref:System.ComponentModel.DesignerAttribute&gt;</ph>, durchsucht er die Klassenhierarchie für einen Designer.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.CreateDesigner(System.ComponentModel.IComponent,System.Type)">
          <source>If it cannot find a designer in the class hierarchy, it returns <ph id="ph1">`null`</ph>.</source>
          <target state="translated">Wenn sie einen Designer in der Klassenhierarchie finden kann, gibt <ph id="ph1">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.TypeDescriptor">
          <source>Creates a new event descriptor that is identical to an existing event descriptor.</source>
          <target state="translated">Erstellt einen neuen Ereignisdeskriptor, der mit einem vorhandenen Ereignisdeskriptor identisch ist.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.CreateEvent(System.Type,System.ComponentModel.EventDescriptor,System.Attribute[])">
          <source>The type of the component for which to create the new event.</source>
          <target state="translated">Der Typ der Komponente, für die das neue Ereignis erstellt werden soll.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.CreateEvent(System.Type,System.ComponentModel.EventDescriptor,System.Attribute[])">
          <source>The existing event information.</source>
          <target state="translated">Die vorhandenen Ereignisinformationen.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.CreateEvent(System.Type,System.ComponentModel.EventDescriptor,System.Attribute[])">
          <source>The new attributes.</source>
          <target state="translated">Die neuen Attribute.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.CreateEvent(System.Type,System.ComponentModel.EventDescriptor,System.Attribute[])">
          <source>Creates a new event descriptor that is identical to an existing event descriptor, when passed the existing <ph id="ph1">&lt;see cref="T:System.ComponentModel.EventDescriptor" /&gt;</ph>.</source>
          <target state="translated">Erstellt einen neuen Ereignisdeskriptor, der mit einem vorhandenen Ereignisdeskriptor identisch ist, wenn der vorhandene <ph id="ph1">&lt;see cref="T:System.ComponentModel.EventDescriptor" /&gt;</ph> übergeben wird.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.CreateEvent(System.Type,System.ComponentModel.EventDescriptor,System.Attribute[])">
          <source>A new <ph id="ph1">&lt;see cref="T:System.ComponentModel.EventDescriptor" /&gt;</ph> that has merged the specified metadata attributes with the existing metadata attributes.</source>
          <target state="translated">Ein neuer <ph id="ph1">&lt;see cref="T:System.ComponentModel.EventDescriptor" /&gt;</ph>, der die angegebenen Metadatenattribute und die vorhandenen Metadatenattributen zusammengeführt hat.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.CreateEvent(System.Type,System.ComponentModel.EventDescriptor,System.Attribute[])">
          <source>Required to inspect non-public members of the component.</source>
          <target state="translated">Erforderlich, um nicht öffentliche Member der Komponente zu überprüfen.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.CreateEvent(System.Type,System.ComponentModel.EventDescriptor,System.Attribute[])">
          <source>Link demand access required for <ph id="ph1">&lt;see cref="T:System.Security.Permissions.ReflectionPermissionFlag" /&gt;</ph> type <ph id="ph2">&lt;see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /&gt;</ph>.</source>
          <target state="translated">Zugriff auf Verknüpfungsaufrufe für erforderliche <ph id="ph1">&lt;see cref="T:System.Security.Permissions.ReflectionPermissionFlag" /&gt;</ph> Typ <ph id="ph2">&lt;see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.CreateEvent(System.Type,System.String,System.Type,System.Attribute[])">
          <source>The type of the component the event lives on.</source>
          <target state="translated">Der Typ der Komponente, in der das Ereignis vorhanden ist.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.CreateEvent(System.Type,System.String,System.Type,System.Attribute[])">
          <source>The name of the event.</source>
          <target state="translated">Der Name des Ereignisses.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.CreateEvent(System.Type,System.String,System.Type,System.Attribute[])">
          <source>The type of the delegate that handles the event.</source>
          <target state="translated">Der Typ des Delegaten, der das Ereignis behandelt.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.CreateEvent(System.Type,System.String,System.Type,System.Attribute[])">
          <source>The attributes for this event.</source>
          <target state="translated">Die Attribute für dieses Ereignis.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.CreateEvent(System.Type,System.String,System.Type,System.Attribute[])">
          <source>Creates a new event descriptor that is identical to an existing event descriptor by dynamically generating descriptor information from a specified event on a type.</source>
          <target state="translated">Erstellt einen neuen Ereignisdeskriptor, der mit einem vorhandenen Ereignisdeskriptor identisch ist, indem die Deskriptorinformationen aus einem angegebenen Ereignis für einen Typ dynamisch erzeugt werden.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.CreateEvent(System.Type,System.String,System.Type,System.Attribute[])">
          <source>An <ph id="ph1">&lt;see cref="T:System.ComponentModel.EventDescriptor" /&gt;</ph> that is bound to a type.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.ComponentModel.EventDescriptor" /&gt;</ph>, das an einen Typ gebunden ist.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.CreateEvent(System.Type,System.String,System.Type,System.Attribute[])">
          <source>Required to inspect non-public members of the component.</source>
          <target state="translated">Erforderlich, um nicht öffentliche Member der Komponente zu überprüfen.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.CreateEvent(System.Type,System.String,System.Type,System.Attribute[])">
          <source>Link demand access required for <ph id="ph1">&lt;see cref="T:System.Security.Permissions.ReflectionPermissionFlag" /&gt;</ph> type <ph id="ph2">&lt;see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /&gt;</ph>.</source>
          <target state="translated">Zugriff auf Verknüpfungsaufrufe für erforderliche <ph id="ph1">&lt;see cref="T:System.Security.Permissions.ReflectionPermissionFlag" /&gt;</ph> Typ <ph id="ph2">&lt;see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])">
          <source>The service provider that provides a <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeDescriptionProvider" /&gt;</ph> service.</source>
          <target state="translated">Der Dienstanbieter, der einen <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeDescriptionProvider" /&gt;</ph>-Dienst bereitstellt.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])">
          <source>This parameter can be <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Dieser Parameter kann <ph id="ph1">&lt;see langword="null" /&gt;</ph> sein.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> of object to create.</source>
          <target state="translated">Der <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> des zu erstellenden Objekts.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])">
          <source>An optional array of parameter types to be passed to the object's constructor.</source>
          <target state="translated">Ein optionales Array von Parametertypen, die an den Konstruktor des Objekts übergeben werden sollen.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])">
          <source>This parameter can be <ph id="ph1">&lt;see langword="null" /&gt;</ph> or an array of zero length.</source>
          <target state="translated">Dieser Parameter kann <ph id="ph1">&lt;see langword="null" /&gt;</ph> oder ein Array der Länge 0 (null) sein.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])">
          <source>An optional array of parameter values to pass to the object's constructor.</source>
          <target state="translated">Ein optionales Array von Parameterwerten, die an den Konstruktor des Objekts übergeben werden.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])">
          <source>If not <ph id="ph1">&lt;see langword="null" /&gt;</ph>, the number of elements must be the same as <bpt id="p1">&lt;c&gt;</bpt>argTypes<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Wenn die Anzahl der Elemente nicht <ph id="ph1">&lt;see langword="null" /&gt;</ph> ist, muss sie <bpt id="p1">&lt;c&gt;</bpt>argTypes<ept id="p1">&lt;/c&gt;</ept> entsprechen.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])">
          <source>Creates an object that can substitute for another data type.</source>
          <target state="translated">Erstellt ein Objekt, das einen anderen Datentyp ersetzen kann.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])">
          <source>An instance of the substitute data type if an associated <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeDescriptionProvider" /&gt;</ph> is found; otherwise, <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Eine Instanz des Ersatzdatentyps, wenn ein zugeordneter <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeDescriptionProvider" /&gt;</ph> gefunden wurde, andernfalls <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.CreateInstance%2A&gt;</ph> method will search for a <ph id="ph2">&lt;xref:System.ComponentModel.TypeDescriptionProvider&gt;</ph> that is associated with the specified <ph id="ph3">`objectType`</ph> data type.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.CreateInstance%2A&gt;</ph> Methode sucht nach einem <ph id="ph2">&lt;xref:System.ComponentModel.TypeDescriptionProvider&gt;</ph> also mit dem angegebenen <ph id="ph3">`objectType`</ph> -Datentyp.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])">
          <source>This method first tries to obtain a type description provider from the <ph id="ph1">`provider`</ph> parameter.</source>
          <target state="translated">Diese Methode versucht zuerst, erhalten einen Typbeschreibungsanbieter aus der <ph id="ph1">`provider`</ph> Parameter.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])">
          <source>If this fails, it searches its own internal tables for a provider (these entries were created through previous calls to <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.AddProvider%2A&gt;</ph>).</source>
          <target state="translated">Wenn dies fehlschlägt, sucht er seine eigenen internen Tabellen für einen Anbieter (diese Einträge erstellt wurden, durch die vorherigen Aufrufe von <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.AddProvider%2A&gt;</ph>).</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])">
          <source>If it finds a provider, this method will delegate the creation call to that object.</source>
          <target state="translated">Wenn einen Anbieter gefunden wird, wird diese Methode den Erstellungsaufruf auf dieses Objekt delegieren.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])">
          <source><ph id="ph1">&lt;paramref name="objectType" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>, or <ph id="ph3">&lt;paramref name="args" /&gt;</ph> is <ph id="ph4">&lt;see langword="null" /&gt;</ph> when <ph id="ph5">&lt;paramref name="argTypes" /&gt;</ph> is not <ph id="ph6">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="objectType" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>, oder <ph id="ph3">&lt;paramref name="args" /&gt;</ph> ist <ph id="ph4">&lt;see langword="null" /&gt;</ph>, wenn <ph id="ph5">&lt;paramref name="argTypes" /&gt;</ph> nicht <ph id="ph6">&lt;see langword="null" /&gt;</ph> ist.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])">
          <source><ph id="ph1">&lt;paramref name="argTypes" /&gt;</ph> and <ph id="ph2">&lt;paramref name="args" /&gt;</ph> have different number of elements.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="argTypes" /&gt;</ph> und <ph id="ph2">&lt;paramref name="args" /&gt;</ph> weisen eine unterschiedliche Anzahl von Elementen auf.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])">
          <source>If the derived class does not provide a substitute instance, this method should call the base implementation.</source>
          <target state="translated">Wenn die abgeleitete Klasse eine Ersatz-Instanz nicht bereitstellt, sollten diese Methode die basisimplementierung aufrufen.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.TypeDescriptor">
          <source>Creates a new property descriptor for an existing property of a component.</source>
          <target state="translated">Erstellt eine neue Eigenschaftenbeschreibung für eine vorhandene Eigenschaft einer Komponente.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.CreateProperty(System.Type,System.ComponentModel.PropertyDescriptor,System.Attribute[])">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> of the component that the property is a member of.</source>
          <target state="translated">Der <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> der Komponente, der die Eigenschaft angehört.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.CreateProperty(System.Type,System.ComponentModel.PropertyDescriptor,System.Attribute[])">
          <source>The existing property descriptor.</source>
          <target state="translated">Der vorhandene Eigenschaftendeskriptor.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.CreateProperty(System.Type,System.ComponentModel.PropertyDescriptor,System.Attribute[])">
          <source>The new attributes for this property.</source>
          <target state="translated">Die neuen Attribute für diese Eigenschaft.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.CreateProperty(System.Type,System.ComponentModel.PropertyDescriptor,System.Attribute[])">
          <source>Creates a new property descriptor from an existing property descriptor, using the specified existing <ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptor" /&gt;</ph> and attribute array.</source>
          <target state="translated">Erstellt einen neuen Eigenschaftendeskriptor aus einem vorhandenen Eigenschaftendeskriptor mithilfe des angegebenen vorhandenen <ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptor" /&gt;</ph> und Attributarrays.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.CreateProperty(System.Type,System.ComponentModel.PropertyDescriptor,System.Attribute[])">
          <source>A new <ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptor" /&gt;</ph> that has the specified metadata attributes merged with the existing metadata attributes.</source>
          <target state="translated">Ein neuer <ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptor" /&gt;</ph>, bei dem die angegebenen Metadatenattribute mit den vorhandenen Metadatenattributen zusammengeführt sind.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.CreateProperty(System.Type,System.ComponentModel.PropertyDescriptor,System.Attribute[])">
          <source>Required to inspect non-public members of the component.</source>
          <target state="translated">Erforderlich, um nicht öffentliche Member der Komponente zu überprüfen.</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.CreateProperty(System.Type,System.ComponentModel.PropertyDescriptor,System.Attribute[])">
          <source>Link demand access required for <ph id="ph1">&lt;see cref="T:System.Security.Permissions.ReflectionPermissionFlag" /&gt;</ph> type <ph id="ph2">&lt;see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /&gt;</ph>.</source>
          <target state="translated">Zugriff auf Verknüpfungsaufrufe für erforderliche <ph id="ph1">&lt;see cref="T:System.Security.Permissions.ReflectionPermissionFlag" /&gt;</ph> Typ <ph id="ph2">&lt;see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.CreateProperty(System.Type,System.String,System.Type,System.Attribute[])">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> of the component that the property is a member of.</source>
          <target state="translated">Der <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> der Komponente, der die Eigenschaft angehört.</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.CreateProperty(System.Type,System.String,System.Type,System.Attribute[])">
          <source>The name of the property.</source>
          <target state="translated">Den Namen der Eigenschaft.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.CreateProperty(System.Type,System.String,System.Type,System.Attribute[])">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> of the property.</source>
          <target state="translated">Der <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> der Eigenschaft.</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.CreateProperty(System.Type,System.String,System.Type,System.Attribute[])">
          <source>The new attributes for this property.</source>
          <target state="translated">Die neuen Attribute für diese Eigenschaft.</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.CreateProperty(System.Type,System.String,System.Type,System.Attribute[])">
          <source>Creates and dynamically binds a property descriptor to a type, using the specified property name, type, and attribute array.</source>
          <target state="translated">Erstellt eine Eigenschaftsbeschreibung und bindet diese dynamisch an einen Typ. Dazu werden der angegebene Eigenschaftenname, der Typ und das Attributarray verwendet.</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.CreateProperty(System.Type,System.String,System.Type,System.Attribute[])">
          <source>A <ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptor" /&gt;</ph> that is bound to the specified type and that has the specified metadata attributes merged with the existing metadata attributes.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptor" /&gt;</ph>, der an den angegebenen Typ gebunden ist und bei dem die angegebenen Metadatenattribute mit den vorhandenen Metadatenattributen zusammengeführt sind.</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.CreateProperty(System.Type,System.String,System.Type,System.Attribute[])">
          <source>Required to inspect non-public members of the component.</source>
          <target state="translated">Erforderlich, um nicht öffentliche Member der Komponente zu überprüfen.</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.CreateProperty(System.Type,System.String,System.Type,System.Attribute[])">
          <source>Link demand access required for <ph id="ph1">&lt;see cref="T:System.Security.Permissions.ReflectionPermissionFlag" /&gt;</ph> type <ph id="ph2">&lt;see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /&gt;</ph>.</source>
          <target state="translated">Zugriff auf Verknüpfungsaufrufe für erforderliche <ph id="ph1">&lt;see cref="T:System.Security.Permissions.ReflectionPermissionFlag" /&gt;</ph> Typ <ph id="ph2">&lt;see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetAssociation(System.Type,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> of the target component.</source>
          <target state="translated">Der <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> der Zielkomponente.</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetAssociation(System.Type,System.Object)">
          <source>The primary object of the association.</source>
          <target state="translated">Das primäre Objekt der Zuordnung.</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetAssociation(System.Type,System.Object)">
          <source>Returns an instance of the type associated with the specified primary object.</source>
          <target state="translated">Gibt eine Instanz des Typs zurück, der dem angegebenen primären Objekt zugeordnet ist.</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetAssociation(System.Type,System.Object)">
          <source>An instance of the secondary type that has been associated with the primary object if an association exists; otherwise, <ph id="ph1">&lt;paramref name="primary" /&gt;</ph> if no specified association exists.</source>
          <target state="translated">Eine Instanz des sekundären Typs, die, sofern eine Zuordnung vorhanden ist, dem primären Objekt zugeordnet wurde; andernfalls <ph id="ph1">&lt;paramref name="primary" /&gt;</ph>, wenn keine angegebene Zuordnung vorhanden ist.</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetAssociation(System.Type,System.Object)">
          <source>If a previous association has been made for the <ph id="ph1">`type`</ph> parameter using the <ph id="ph2">&lt;xref:System.ComponentModel.TypeDescriptor.CreateAssociation%2A&gt;</ph> method, then the <ph id="ph3">&lt;xref:System.ComponentModel.TypeDescriptor.GetAssociation%2A&gt;</ph> method returns the correct secondary object to invoke for the requested type.</source>
          <target state="translated">Wenn eine vorherige Zuordnung vorgenommen wurde die <ph id="ph1">`type`</ph> Parameter mithilfe der <ph id="ph2">&lt;xref:System.ComponentModel.TypeDescriptor.CreateAssociation%2A&gt;</ph> -Methode, die <ph id="ph3">&lt;xref:System.ComponentModel.TypeDescriptor.GetAssociation%2A&gt;</ph> Methodenrückgabe das richtige sekundären Objekt für den angeforderten Typ aufgerufen.</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetAssociation(System.Type,System.Object)">
          <source>Otherwise, <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.GetAssociation%2A&gt;</ph> searches for a compatible designer for <ph id="ph2">`type`</ph> and returns the designer if one is found.</source>
          <target state="translated">Andernfalls <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.GetAssociation%2A&gt;</ph> sucht nach einem kompatiblen Designer für <ph id="ph2">`type`</ph> und gibt den Designer zurück, falls vorhanden.</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetAssociation(System.Type,System.Object)">
          <source>This method never returns <ph id="ph1">`null`</ph>.</source>
          <target state="translated">Diese Methode gibt nie <ph id="ph1">`null`</ph> zurück.</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetAssociation(System.Type,System.Object)">
          <source>A <ph id="ph1">&lt;xref:System.WeakReference&gt;</ph> is used to maintain the association between the primary and secondary object; therefore, this method does not prevent either the primary or secondary object from being finalized and reclaimed by garbage collection.</source>
          <target state="translated">Ein <ph id="ph1">&lt;xref:System.WeakReference&gt;</ph> wird verwendet, um die Zuordnung zwischen dem primären und sekundären Objekt verwalten; daher, diese Methode verhindert nicht, dass die primäre oder sekundäre Objekt wird abgeschlossen und von der Garbagecollection freigegeben.</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetAssociation(System.Type,System.Object)">
          <source>One or both of the parameters are <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Ein oder beide Parameter sind <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.TypeDescriptor">
          <source>Returns the collection of attributes for a component or a type.</source>
          <target state="translated">Gibt die Auflistung von Attributen für eine Komponente oder einen Typ zurück.</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetAttributes(System.Object)">
          <source>The component for which you want to get attributes.</source>
          <target state="translated">Die Komponente, für die Sie Attribute abrufen möchten.</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetAttributes(System.Object)">
          <source>Returns the collection of attributes for the specified component.</source>
          <target state="translated">Gibt eine Auflistung von Attributen für die angegebene Komponente zurück.</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetAttributes(System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.ComponentModel.AttributeCollection" /&gt;</ph> containing the attributes for the component.</source>
          <target state="translated">Eine <ph id="ph1">&lt;see cref="T:System.ComponentModel.AttributeCollection" /&gt;</ph> mit den Attributen für die Komponente.</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetAttributes(System.Object)">
          <source>If <ph id="ph1">&lt;paramref name="component" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>, this method returns an empty collection.</source>
          <target state="translated">Wenn die <ph id="ph1">&lt;paramref name="component" /&gt;</ph> über den Wert <ph id="ph2">&lt;see langword="null" /&gt;</ph> verfügt, gibt diese Methode eine leere Auflistung zurück.</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetAttributes(System.Object)">
          <source>The attributes returned by the <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.GetAttributes%2A&gt;</ph> method may be dynamically modified from the original component's source listing by extender providers (<ph id="ph2">&lt;xref:System.ComponentModel.IExtenderProvider&gt;</ph>), filter services (<ph id="ph3">&lt;xref:System.ComponentModel.Design.ITypeDescriptorFilterService&gt;</ph>), and attribute filters.</source>
          <target state="translated">Die Attribute, die zurückgegeben werden, indem Sie die <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.GetAttributes%2A&gt;</ph> Methode kann aus der ursprünglichen Komponente Quelle auflisten nach Extenderanbieter dynamisch geändert werden (<ph id="ph2">&lt;xref:System.ComponentModel.IExtenderProvider&gt;</ph>), Dienste Filtern (<ph id="ph3">&lt;xref:System.ComponentModel.Design.ITypeDescriptorFilterService&gt;</ph>), und das Attribut Filter.</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetAttributes(System.Object)">
          <source>When you define a custom attribute with <ph id="ph1">&lt;xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=nameWithType&gt;</ph> set to <ph id="ph2">`true`</ph>, you must override the <ph id="ph3">&lt;xref:System.Attribute.TypeId%2A?displayProperty=nameWithType&gt;</ph> property to make it unique.</source>
          <target state="translated">Beim Definieren eines benutzerdefinierten Attributs mit <ph id="ph1">&lt;xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=nameWithType&gt;</ph> festgelegt <ph id="ph2">`true`</ph>, müssen Sie überschreiben die <ph id="ph3">&lt;xref:System.Attribute.TypeId%2A?displayProperty=nameWithType&gt;</ph> Eigenschaft, um die Eindeutigkeit herzustellen.</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetAttributes(System.Object)">
          <source>If all instances of your attribute are unique, override <ph id="ph1">&lt;xref:System.Attribute.TypeId%2A?displayProperty=nameWithType&gt;</ph> to return the object identity of your attribute.</source>
          <target state="translated">Wenn alle Instanzen des Attributs eindeutig sind, überschreiben <ph id="ph1">&lt;xref:System.Attribute.TypeId%2A?displayProperty=nameWithType&gt;</ph> um die Objektidentität des Attributs zurückzugeben.</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetAttributes(System.Object)">
          <source>If only some instances of your attribute are unique, return a value from <ph id="ph1">&lt;xref:System.Attribute.TypeId%2A?displayProperty=nameWithType&gt;</ph> that would return equality in those cases.</source>
          <target state="translated">Wenn nur einige Instanzen eines Attributs eindeutig sind, einen Wert von zurückgeben <ph id="ph1">&lt;xref:System.Attribute.TypeId%2A?displayProperty=nameWithType&gt;</ph> , in diesen Fällen Gleichheit zurückgibt.</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetAttributes(System.Object)">
          <source>For example, some attributes have a constructor parameter that acts as a unique key.</source>
          <target state="translated">Beispielsweise haben einige Attribute Konstruktorparameter, der als eindeutiger Schlüssel fungiert.</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetAttributes(System.Object)">
          <source>For these attributes, return the value of the constructor parameter from the <ph id="ph1">&lt;xref:System.Attribute.TypeId%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">Für diese Attribute den Rückgabewert des Konstruktorparameters aus der <ph id="ph1">&lt;xref:System.Attribute.TypeId%2A?displayProperty=nameWithType&gt;</ph> Eigenschaft.</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetAttributes(System.Object)">
          <source>The default implementation of <ph id="ph1">&lt;xref:System.Attribute.TypeId%2A?displayProperty=nameWithType&gt;</ph> returns the type identity regardless of the value of the <ph id="ph2">&lt;xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">Die standardmäßige Implementierung des <ph id="ph1">&lt;xref:System.Attribute.TypeId%2A?displayProperty=nameWithType&gt;</ph> gibt die Typidentität unabhängig vom Wert für die <ph id="ph2">&lt;xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=nameWithType&gt;</ph> Eigenschaft.</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetAttributes(System.Object)">
          <source>In order to return multiple instances of an <ph id="ph1">&lt;xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=nameWithType&gt;</ph> attribute from the <ph id="ph2">&lt;xref:System.ComponentModel.AttributeCollection&gt;</ph>, your attribute must override the <ph id="ph3">&lt;xref:System.Attribute.TypeId%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">Um mehrere Instanzen des zurückzugeben eine <ph id="ph1">&lt;xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=nameWithType&gt;</ph> -Attribut aus der <ph id="ph2">&lt;xref:System.ComponentModel.AttributeCollection&gt;</ph>, muss das Attribut überschreiben die <ph id="ph3">&lt;xref:System.Attribute.TypeId%2A?displayProperty=nameWithType&gt;</ph> Eigenschaft.</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetAttributes(System.Object)">
          <source>For an example of this method, see the <ph id="ph1">&lt;xref:System.ComponentModel.AttributeCollection.Matches%2A&gt;</ph> method.</source>
          <target state="translated">Ein Beispiel dieser Methode finden Sie unter der <ph id="ph1">&lt;xref:System.ComponentModel.AttributeCollection.Matches%2A&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetAttributes(System.Type)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> of the target component.</source>
          <target state="translated">Der <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> der Zielkomponente.</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetAttributes(System.Type)">
          <source>Returns a collection of attributes for the specified type of component.</source>
          <target state="translated">Gibt eine Auflistung von Attributen für den angegebenen Typ der Komponente zurück.</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetAttributes(System.Type)">
          <source>An <ph id="ph1">&lt;see cref="T:System.ComponentModel.AttributeCollection" /&gt;</ph> with the attributes for the type of the component.</source>
          <target state="translated">Eine <ph id="ph1">&lt;see cref="T:System.ComponentModel.AttributeCollection" /&gt;</ph> mit den Attributen für den Typ der Komponente.</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetAttributes(System.Type)">
          <source>If the component is <ph id="ph1">&lt;see langword="null" /&gt;</ph>, this method returns an empty collection.</source>
          <target state="translated">Wenn die Komponente <ph id="ph1">&lt;see langword="null" /&gt;</ph> ist, gibt diese Methode eine leere Auflistung zurück.</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetAttributes(System.Type)">
          <source>Call this version of this method only when you do not have an instance of the object.</source>
          <target state="translated">Rufen Sie diese Version dieser Methode, nur, wenn Sie nicht über eine Instanz des Objekts verfügen.</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetAttributes(System.Type)">
          <source>For attributes with <ph id="ph1">&lt;xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=nameWithType&gt;</ph> set to <ph id="ph2">`true`</ph>, the attribute collection removes duplicate instances.</source>
          <target state="translated">Für Attribute mit <ph id="ph1">&lt;xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=nameWithType&gt;</ph> festgelegt <ph id="ph2">`true`</ph>, die attributauflistung entfernt doppelte Instanzen.</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetAttributes(System.Type)">
          <source>These are instances in which the <ph id="ph1">&lt;xref:System.Attribute.TypeId%2A?displayProperty=nameWithType&gt;</ph> property returns equal values.</source>
          <target state="translated">Hierbei handelt es sich um Fälle, in denen die <ph id="ph1">&lt;xref:System.Attribute.TypeId%2A?displayProperty=nameWithType&gt;</ph> Eigenschaft gibt identische Werte zurück.</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetAttributes(System.Type)">
          <source>When you define a custom attribute with <ph id="ph1">&lt;xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=nameWithType&gt;</ph> set to <ph id="ph2">`true`</ph>, you must override the <ph id="ph3">&lt;xref:System.Attribute.TypeId%2A?displayProperty=nameWithType&gt;</ph> property to make it unique.</source>
          <target state="translated">Beim Definieren eines benutzerdefinierten Attributs mit <ph id="ph1">&lt;xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=nameWithType&gt;</ph> festgelegt <ph id="ph2">`true`</ph>, müssen Sie überschreiben die <ph id="ph3">&lt;xref:System.Attribute.TypeId%2A?displayProperty=nameWithType&gt;</ph> Eigenschaft, um die Eindeutigkeit herzustellen.</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetAttributes(System.Type)">
          <source>If all instances of your attribute are unique, override <ph id="ph1">&lt;xref:System.Attribute.TypeId%2A?displayProperty=nameWithType&gt;</ph> to return the object identity of your attribute.</source>
          <target state="translated">Wenn alle Instanzen des Attributs eindeutig sind, überschreiben <ph id="ph1">&lt;xref:System.Attribute.TypeId%2A?displayProperty=nameWithType&gt;</ph> um die Objektidentität des Attributs zurückzugeben.</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetAttributes(System.Type)">
          <source>If only some instances of your attribute are unique, return a value from <ph id="ph1">&lt;xref:System.Attribute.TypeId%2A?displayProperty=nameWithType&gt;</ph> that would return equality in those cases.</source>
          <target state="translated">Wenn nur einige Instanzen eines Attributs eindeutig sind, einen Wert von zurückgeben <ph id="ph1">&lt;xref:System.Attribute.TypeId%2A?displayProperty=nameWithType&gt;</ph> , in diesen Fällen Gleichheit zurückgibt.</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetAttributes(System.Type)">
          <source>For example, some attributes have a constructor parameter that acts as a unique key.</source>
          <target state="translated">Beispielsweise haben einige Attribute Konstruktorparameter, der als eindeutiger Schlüssel fungiert.</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetAttributes(System.Type)">
          <source>For these attributes, return the value of the constructor parameter from the <ph id="ph1">&lt;xref:System.Attribute.TypeId%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">Für diese Attribute den Rückgabewert des Konstruktorparameters aus der <ph id="ph1">&lt;xref:System.Attribute.TypeId%2A?displayProperty=nameWithType&gt;</ph> Eigenschaft.</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetAttributes(System.Type)">
          <source>The default implementation of <ph id="ph1">&lt;xref:System.Attribute.TypeId%2A?displayProperty=nameWithType&gt;</ph> returns the type identity regardless of the value of the <ph id="ph2">&lt;xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">Die standardmäßige Implementierung des <ph id="ph1">&lt;xref:System.Attribute.TypeId%2A?displayProperty=nameWithType&gt;</ph> gibt die Typidentität unabhängig vom Wert für die <ph id="ph2">&lt;xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=nameWithType&gt;</ph> Eigenschaft.</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetAttributes(System.Type)">
          <source>In order to return multiple instances of an <ph id="ph1">&lt;xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=nameWithType&gt;</ph> attribute from the <ph id="ph2">&lt;xref:System.ComponentModel.AttributeCollection&gt;</ph>, your attribute must override the <ph id="ph3">&lt;xref:System.Attribute.TypeId%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">Um mehrere Instanzen des zurückzugeben eine <ph id="ph1">&lt;xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=nameWithType&gt;</ph> -Attribut aus der <ph id="ph2">&lt;xref:System.ComponentModel.AttributeCollection&gt;</ph>, muss das Attribut überschreiben die <ph id="ph3">&lt;xref:System.Attribute.TypeId%2A?displayProperty=nameWithType&gt;</ph> Eigenschaft.</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetAttributes(System.Object,System.Boolean)">
          <source>The component for which you want to get attributes.</source>
          <target state="translated">Die Komponente, für die Sie Attribute abrufen möchten.</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetAttributes(System.Object,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to use a baseline set of attributes from the custom type descriptor if <bpt id="p1">&lt;c&gt;</bpt>component<ept id="p1">&lt;/c&gt;</ept> is of type <ph id="ph2">&lt;see cref="T:System.ComponentModel.ICustomTypeDescriptor" /&gt;</ph>; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, um einen Basissatz von Attributen des benutzerdefinierten Typdeskriptors zu verwenden, wenn <bpt id="p1">&lt;c&gt;</bpt>component<ept id="p1">&lt;/c&gt;</ept> den Typ <ph id="ph2">&lt;see cref="T:System.ComponentModel.ICustomTypeDescriptor" /&gt;</ph> besitzt, andernfalls <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetAttributes(System.Object,System.Boolean)">
          <source>Returns a collection of attributes for the specified component and a Boolean indicating that a custom type descriptor has been created.</source>
          <target state="translated">Gibt eine Auflistung von Attributen für die angegebene Komponente und einen booleschen Wert zurück, der angibt, dass ein Deskriptor mit benutzerdefiniertem Typ erstellt wurde.</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetAttributes(System.Object,System.Boolean)">
          <source>An <ph id="ph1">&lt;see cref="T:System.ComponentModel.AttributeCollection" /&gt;</ph> with the attributes for the component.</source>
          <target state="translated">Eine <ph id="ph1">&lt;see cref="T:System.ComponentModel.AttributeCollection" /&gt;</ph> mit den Attributen für die Komponente.</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetAttributes(System.Object,System.Boolean)">
          <source>If the component is <ph id="ph1">&lt;see langword="null" /&gt;</ph>, this method returns an empty collection.</source>
          <target state="translated">Wenn die Komponente <ph id="ph1">&lt;see langword="null" /&gt;</ph> ist, gibt diese Methode eine leere Auflistung zurück.</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetAttributes(System.Object,System.Boolean)">
          <source>The attributes returned by the <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.GetAttributes%2A&gt;</ph> method may be dynamically modified from the original components source listing by extender providers (<ph id="ph2">&lt;xref:System.ComponentModel.IExtenderProvider&gt;</ph>), filter services (<ph id="ph3">&lt;xref:System.ComponentModel.Design.ITypeDescriptorFilterService&gt;</ph>), and attribute filters.</source>
          <target state="translated">Die Attribute, die zurückgegeben werden, indem Sie die <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.GetAttributes%2A&gt;</ph> Methode kann dynamisch geändert werden, aus der Originalquelle der Komponenten von Extenderanbieter auflisten (<ph id="ph2">&lt;xref:System.ComponentModel.IExtenderProvider&gt;</ph>), Dienste Filtern (<ph id="ph3">&lt;xref:System.ComponentModel.Design.ITypeDescriptorFilterService&gt;</ph>), und das Attribut Filter.</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetAttributes(System.Object,System.Boolean)">
          <source>When you define a custom attribute with <ph id="ph1">&lt;xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=nameWithType&gt;</ph> set to <ph id="ph2">`true`</ph>, you must override the <ph id="ph3">&lt;xref:System.Attribute.TypeId%2A?displayProperty=nameWithType&gt;</ph> property to make it unique.</source>
          <target state="translated">Beim Definieren eines benutzerdefinierten Attributs mit <ph id="ph1">&lt;xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=nameWithType&gt;</ph> festgelegt <ph id="ph2">`true`</ph>, müssen Sie überschreiben die <ph id="ph3">&lt;xref:System.Attribute.TypeId%2A?displayProperty=nameWithType&gt;</ph> Eigenschaft, um die Eindeutigkeit herzustellen.</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetAttributes(System.Object,System.Boolean)">
          <source>If all instances of your attribute are unique, override <ph id="ph1">&lt;xref:System.Attribute.TypeId%2A?displayProperty=nameWithType&gt;</ph> to return the object identity of your attribute.</source>
          <target state="translated">Wenn alle Instanzen des Attributs eindeutig sind, überschreiben <ph id="ph1">&lt;xref:System.Attribute.TypeId%2A?displayProperty=nameWithType&gt;</ph> um die Objektidentität des Attributs zurückzugeben.</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetAttributes(System.Object,System.Boolean)">
          <source>If only some instances of your attribute are unique, return a value from <ph id="ph1">&lt;xref:System.Attribute.TypeId%2A?displayProperty=nameWithType&gt;</ph> that would return equality in those cases.</source>
          <target state="translated">Wenn nur einige Instanzen eines Attributs eindeutig sind, einen Wert von zurückgeben <ph id="ph1">&lt;xref:System.Attribute.TypeId%2A?displayProperty=nameWithType&gt;</ph> , in diesen Fällen Gleichheit zurückgibt.</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetAttributes(System.Object,System.Boolean)">
          <source>For example, some attributes have a constructor parameter that acts as a unique key.</source>
          <target state="translated">Beispielsweise haben einige Attribute Konstruktorparameter, der als eindeutiger Schlüssel fungiert.</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetAttributes(System.Object,System.Boolean)">
          <source>For these attributes, return the value of the constructor parameter from the <ph id="ph1">&lt;xref:System.Attribute.TypeId%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">Für diese Attribute den Rückgabewert des Konstruktorparameters aus der <ph id="ph1">&lt;xref:System.Attribute.TypeId%2A?displayProperty=nameWithType&gt;</ph> Eigenschaft.</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetAttributes(System.Object,System.Boolean)">
          <source>The default implementation of <ph id="ph1">&lt;xref:System.Attribute.TypeId%2A?displayProperty=nameWithType&gt;</ph> returns the type identity regardless of the value of the <ph id="ph2">&lt;xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">Die standardmäßige Implementierung des <ph id="ph1">&lt;xref:System.Attribute.TypeId%2A?displayProperty=nameWithType&gt;</ph> gibt die Typidentität unabhängig vom Wert für die <ph id="ph2">&lt;xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=nameWithType&gt;</ph> Eigenschaft.</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetAttributes(System.Object,System.Boolean)">
          <source>In order to return multiple instances of an <ph id="ph1">&lt;xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=nameWithType&gt;</ph> attribute from the <ph id="ph2">&lt;xref:System.ComponentModel.AttributeCollection&gt;</ph>, your attribute must override the <ph id="ph3">&lt;xref:System.Attribute.TypeId%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">Um mehrere Instanzen des zurückzugeben eine <ph id="ph1">&lt;xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=nameWithType&gt;</ph> -Attribut aus der <ph id="ph2">&lt;xref:System.ComponentModel.AttributeCollection&gt;</ph>, muss das Attribut überschreiben die <ph id="ph3">&lt;xref:System.Attribute.TypeId%2A?displayProperty=nameWithType&gt;</ph> Eigenschaft.</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.TypeDescriptor">
          <source>Returns the name of the class for the specified component.</source>
          <target state="translated">Gibt den Namen der Klasse für die angegebene Komponente zurück.</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetClassName(System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> for which you want the class name.</source>
          <target state="translated">Das <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph>, für das der Klassenname erforderlich ist.</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetClassName(System.Object)">
          <source>Returns the name of the class for the specified component using the default type descriptor.</source>
          <target state="translated">Gibt den Namen der Klasse für die angegebene Komponente zurück. Dazu wird der Standardtypdeskriptor verwendet.</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetClassName(System.Object)">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> containing the name of the class for the specified component.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> mit dem Namen der Klasse für die angegebene Komponente.</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetClassName(System.Object)">
          <source>Typically, this method returns the full <ph id="ph1">&lt;xref:System.Type&gt;</ph> name for the <ph id="ph2">`component`</ph> parameter type.</source>
          <target state="translated">Diese Methode gibt in der Regel den vollständigen <ph id="ph1">&lt;xref:System.Type&gt;</ph> Namen für die <ph id="ph2">`component`</ph> Parametertyp.</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetClassName(System.Object)">
          <source>For example, the class name for a button is "System.Windows.Forms.Button".</source>
          <target state="translated">Beispielsweise ist der Klassenname für eine Schaltfläche "System.Windows.Forms.Button".</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetClassName(System.Object)">
          <source>If <ph id="ph1">`component`</ph> implements <ph id="ph2">&lt;xref:System.ComponentModel.ICustomTypeDescriptor&gt;</ph>, it can return an alternate name.</source>
          <target state="translated">Wenn <ph id="ph1">`component`</ph> implementiert <ph id="ph2">&lt;xref:System.ComponentModel.ICustomTypeDescriptor&gt;</ph>, können sie einen alternativen Namen zurückgeben.</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetClassName(System.Object)">
          <source>This method is equivalent to the overloaded <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.GetClassName%28System.Object%2CSystem.Boolean%29&gt;</ph> method with a second parameter of <ph id="ph2">`false`</ph>.</source>
          <target state="translated">Diese Methode entspricht der überladenen <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.GetClassName%28System.Object%2CSystem.Boolean%29&gt;</ph> Methode mit einem zweiten Parameter <ph id="ph2">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetClassName(System.Object)">
          <source><ph id="ph1">&lt;paramref name="component" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="component" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetClassName(System.Type)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> of the target component.</source>
          <target state="translated">Der <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> der Zielkomponente.</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetClassName(System.Type)">
          <source>Returns the name of the class for the specified type.</source>
          <target state="translated">Gibt den Namen der Klasse für den angegebenen Typ zurück.</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetClassName(System.Type)">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> containing the name of the class for the specified component type.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> mit dem Namen der Klasse für den angegebenen Komponententyp.</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetClassName(System.Type)">
          <source>This method uses the cached custom type descriptor for the specified type to discover the associated class name.</source>
          <target state="translated">Diese Methode verwendet den zwischengespeicherten benutzerdefinierten Typdeskriptor für den angegebenen Typ, um den Namen der zugeordneten Klasse zu ermitteln.</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetClassName(System.Type)">
          <source><ph id="ph1">&lt;paramref name="componentType" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="componentType" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetClassName(System.Object,System.Boolean)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> for which you want the class name.</source>
          <target state="translated">Das <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph>, für das der Klassenname erforderlich ist.</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetClassName(System.Object,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to consider custom type description information; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, um benutzerdefinierte Typinformationen zu berücksichtigen, andernfalls <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetClassName(System.Object,System.Boolean)">
          <source>Returns the name of the class for the specified component using a custom type descriptor.</source>
          <target state="translated">Gibt den Namen der Klasse für die angegebene Komponente mithilfe eines benutzerdefinierten Typdeskriptors zurück.</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetClassName(System.Object,System.Boolean)">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> containing the name of the class for the specified component.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> mit dem Namen der Klasse für die angegebene Komponente.</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetClassName(System.Object,System.Boolean)">
          <source>Typically, this method returns the full <ph id="ph1">&lt;xref:System.Type&gt;</ph> name for the <ph id="ph2">`component`</ph> parameter type.</source>
          <target state="translated">Diese Methode gibt in der Regel den vollständigen <ph id="ph1">&lt;xref:System.Type&gt;</ph> Namen für die <ph id="ph2">`component`</ph> Parametertyp.</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetClassName(System.Object,System.Boolean)">
          <source>For example, the class name for a button is "System.Windows.Forms.Button".</source>
          <target state="translated">Beispielsweise ist der Klassenname für eine Schaltfläche "System.Windows.Forms.Button".</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetClassName(System.Object,System.Boolean)">
          <source>If the <ph id="ph1">`component`</ph> parameter implements <ph id="ph2">&lt;xref:System.ComponentModel.ICustomTypeDescriptor&gt;</ph>, it can return an alternate name.</source>
          <target state="translated">Wenn die <ph id="ph1">`component`</ph> -Parameter implementiert <ph id="ph2">&lt;xref:System.ComponentModel.ICustomTypeDescriptor&gt;</ph>, können sie einen alternativen Namen zurückgeben.</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetClassName(System.Object,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="component" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="component" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetClassName(System.Object,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="component" /&gt;</ph> is a cross-process remoted object.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="component" /&gt;</ph> ist ein prozessübergreifendes Remoteobjekt.</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.TypeDescriptor">
          <source>Returns the name of the specified component.</source>
          <target state="translated">Gibt den Namen der angegebenen Komponente zurück.</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetComponentName(System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> for which you want the class name.</source>
          <target state="translated">Das <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph>, für das der Klassenname erforderlich ist.</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetComponentName(System.Object)">
          <source>Returns the name of the specified component using the default type descriptor.</source>
          <target state="translated">Gibt den Namen der angegebenen Komponente zurück. Dazu wird der Standardtypdeskriptor verwendet.</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetComponentName(System.Object)">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> containing the name of the specified component, or <ph id="ph2">&lt;see langword="null" /&gt;</ph> if there is no component name.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>, der den Namen der angegebenen Komponente enthält, oder <ph id="ph2">&lt;see langword="null" /&gt;</ph>, wenn kein Komponentenname vorhanden ist.</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetComponentName(System.Object)">
          <source>Typically, this method returns the name for the site of the component, if one exists.</source>
          <target state="translated">In der Regel gibt diese Methode den Namen für die Site der Komponente, falls vorhanden.</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetComponentName(System.Object)">
          <source>For example, the class name for a button is "System.Windows.Forms.Button".</source>
          <target state="translated">Beispielsweise ist der Klassenname für eine Schaltfläche "System.Windows.Forms.Button".</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetComponentName(System.Object)">
          <source>This method is equivalent to the overloaded <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.GetComponentName%28System.Object%2CSystem.Boolean%29&gt;</ph> method with a second parameter of <ph id="ph2">`false`</ph>.</source>
          <target state="translated">Diese Methode entspricht der überladenen <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.GetComponentName%28System.Object%2CSystem.Boolean%29&gt;</ph> Methode mit einem zweiten Parameter <ph id="ph2">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetComponentName(System.Object)">
          <source>This method is used at design time to retrieve the name of an instance of a component.</source>
          <target state="translated">Diese Methode wird zur Entwurfszeit verwendet, um den Namen einer Instanz einer Komponente abzurufen.</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetComponentName(System.Object)">
          <source><ph id="ph1">&lt;paramref name="component" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="component" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetComponentName(System.Object)">
          <source><ph id="ph1">&lt;paramref name="component" /&gt;</ph> is a cross-process remoted object.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="component" /&gt;</ph> ist ein prozessübergreifendes Remoteobjekt.</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetComponentName(System.Object,System.Boolean)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> for which you want the class name.</source>
          <target state="translated">Das <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph>, für das der Klassenname erforderlich ist.</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetComponentName(System.Object,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to consider custom type description information; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, um benutzerdefinierte Typinformationen zu berücksichtigen, andernfalls <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetComponentName(System.Object,System.Boolean)">
          <source>Returns the name of the specified component using a custom type descriptor.</source>
          <target state="translated">Gibt den Namen der angegebenen Komponente zurück. Dazu wird ein benutzerdefinierter Typdeskriptor verwendet.</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetComponentName(System.Object,System.Boolean)">
          <source>The name of the class for the specified component, or <ph id="ph1">&lt;see langword="null" /&gt;</ph> if there is no component name.</source>
          <target state="translated">Der Name der Klasse für die angegebene Komponente oder <ph id="ph1">&lt;see langword="null" /&gt;</ph>, wenn kein Komponentenname vorhanden ist.</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetComponentName(System.Object,System.Boolean)">
          <source>This method is used at design time to retrieve the name of an instance of a component.</source>
          <target state="translated">Diese Methode wird zur Entwurfszeit verwendet, um den Namen einer Instanz einer Komponente abzurufen.</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetComponentName(System.Object,System.Boolean)">
          <source>Typically, this method returns the name for the site of the component, if one exists.</source>
          <target state="translated">In der Regel gibt diese Methode den Namen für die Site der Komponente, falls vorhanden.</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetComponentName(System.Object,System.Boolean)">
          <source>For example, the class name for a button is "System.Windows.Forms.Button".</source>
          <target state="translated">Beispielsweise ist der Klassenname für eine Schaltfläche "System.Windows.Forms.Button".</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetComponentName(System.Object,System.Boolean)">
          <source>If the component implements the <ph id="ph1">&lt;xref:System.ComponentModel.ICustomTypeDescriptor&gt;</ph> interface, it can return an alternate name.</source>
          <target state="translated">Wenn die Komponente implementiert die <ph id="ph1">&lt;xref:System.ComponentModel.ICustomTypeDescriptor&gt;</ph> -Schnittstelle, können sie einen alternativen Namen zurückgeben.</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetComponentName(System.Object,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="component" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="component" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetComponentName(System.Object,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="component" /&gt;</ph> is a cross-process remoted object.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="component" /&gt;</ph> ist ein prozessübergreifendes Remoteobjekt.</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.TypeDescriptor">
          <source>Returns a type converter for a component or a type.</source>
          <target state="translated">Gibt einen Typkonverter für eine Komponente oder einen Typ zurück.</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetConverter(System.Object)">
          <source>A component to get the converter for.</source>
          <target state="translated">Eine Komponente, für die der Konverter abgerufen werden soll.</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetConverter(System.Object)">
          <source>Returns a type converter for the type of the specified component.</source>
          <target state="translated">Gibt einen Typkonverter für den Typ der angegebenen Komponente zurück.</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetConverter(System.Object)">
          <source>A <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeConverter" /&gt;</ph> for the specified component.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeConverter" /&gt;</ph> für die angegebene Komponente.</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetConverter(System.Object)">
          <source>This method locates an appropriate type converter by looking for a <ph id="ph1">&lt;xref:System.ComponentModel.TypeConverterAttribute&gt;</ph>.</source>
          <target state="translated">Diese Methode sucht nach einem entsprechenden Typkonverter anhand einer <ph id="ph1">&lt;xref:System.ComponentModel.TypeConverterAttribute&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetConverter(System.Object)">
          <source>If it cannot find a <ph id="ph1">&lt;xref:System.ComponentModel.TypeConverterAttribute&gt;</ph>, it traverses the base class hierarchy of the class until it finds a primitive type.</source>
          <target state="translated">Es findet ein <ph id="ph1">&lt;xref:System.ComponentModel.TypeConverterAttribute&gt;</ph>, durchläuft er die Hierarchie der Basisklasse der Klasse, bis einen primitiven Typ gefunden wird.</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetConverter(System.Object)">
          <source>This method is equivalent to the overloaded <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.GetConverter%2A&gt;</ph> method with a second parameter of <ph id="ph2">`false`</ph>.</source>
          <target state="translated">Diese Methode entspricht der überladenen <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.GetConverter%2A&gt;</ph> Methode mit einem zweiten Parameter <ph id="ph2">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetConverter(System.Object)">
          <source>For an example of using this method, see the <ph id="ph1">&lt;xref:System.ComponentModel.TypeConverter&gt;</ph> class.</source>
          <target state="translated">Ein Beispiel der Verwendung dieser Methode finden Sie unter der <ph id="ph1">&lt;xref:System.ComponentModel.TypeConverter&gt;</ph> Klasse.</target>       </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetConverter(System.Object)">
          <source><ph id="ph1">&lt;paramref name="component" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="component" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetConverter(System.Object)">
          <source><ph id="ph1">&lt;paramref name="component" /&gt;</ph> is a cross-process remoted object.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="component" /&gt;</ph> ist ein prozessübergreifendes Remoteobjekt.</target>       </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetConverter(System.Type)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> of the target component.</source>
          <target state="translated">Der <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> der Zielkomponente.</target>       </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetConverter(System.Type)">
          <source>Returns a type converter for the specified type.</source>
          <target state="translated">Gibt für den angegebenen Typ einen Typkonverter zurück.</target>       </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetConverter(System.Type)">
          <source>A <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeConverter" /&gt;</ph> for the specified type.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeConverter" /&gt;</ph> für den angegebenen Typ.</target>       </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetConverter(System.Type)">
          <source>Call this version of this method only when you do not have an instance of the object.</source>
          <target state="translated">Rufen Sie diese Version dieser Methode, nur, wenn Sie nicht über eine Instanz des Objekts verfügen.</target>       </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetConverter(System.Type)">
          <source>This method looks for the appropriate type converter by looking for a <ph id="ph1">&lt;xref:System.ComponentModel.TypeConverterAttribute&gt;</ph>.</source>
          <target state="translated">Diese Methode sucht nach der entsprechenden Typkonverter anhand einer <ph id="ph1">&lt;xref:System.ComponentModel.TypeConverterAttribute&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetConverter(System.Type)">
          <source>If it cannot find a <ph id="ph1">&lt;xref:System.ComponentModel.TypeConverterAttribute&gt;</ph>, it traverses the base class hierarchy of the class until it finds a primitive type.</source>
          <target state="translated">Es findet ein <ph id="ph1">&lt;xref:System.ComponentModel.TypeConverterAttribute&gt;</ph>, durchläuft er die Hierarchie der Basisklasse der Klasse, bis einen primitiven Typ gefunden wird.</target>       </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetConverter(System.Type)">
          <source><ph id="ph1">&lt;paramref name="type" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="type" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetConverter(System.Object,System.Boolean)">
          <source>A component to get the converter for.</source>
          <target state="translated">Eine Komponente, für die der Konverter abgerufen werden soll.</target>       </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetConverter(System.Object,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to consider custom type description information; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, um benutzerdefinierte Typinformationen zu berücksichtigen, andernfalls <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetConverter(System.Object,System.Boolean)">
          <source>Returns a type converter for the type of the specified component with a custom type descriptor.</source>
          <target state="translated">Gibt einen Typkonverter für den Typ der angegebenen Komponente mit einem benutzerdefinierten Typdeskriptor zurück.</target>       </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetConverter(System.Object,System.Boolean)">
          <source>A <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeConverter" /&gt;</ph> for the specified component.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeConverter" /&gt;</ph> für die angegebene Komponente.</target>       </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetConverter(System.Object,System.Boolean)">
          <source>This method looks for the appropriate type converter by trying to find a <ph id="ph1">&lt;xref:System.ComponentModel.TypeConverterAttribute&gt;</ph>.</source>
          <target state="translated">Diese Methode sucht nach der entsprechenden Typkonverter von beim Suchen nach einem <ph id="ph1">&lt;xref:System.ComponentModel.TypeConverterAttribute&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetConverter(System.Object,System.Boolean)">
          <source>If it cannot find a <ph id="ph1">&lt;xref:System.ComponentModel.TypeConverterAttribute&gt;</ph>, it traverses the base class hierarchy of the class until it finds a primitive type.</source>
          <target state="translated">Es findet ein <ph id="ph1">&lt;xref:System.ComponentModel.TypeConverterAttribute&gt;</ph>, durchläuft er die Hierarchie der Basisklasse der Klasse, bis einen primitiven Typ gefunden wird.</target>       </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetConverter(System.Object,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="component" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="component" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetConverter(System.Object,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="component" /&gt;</ph> is a cross-process remoted object.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="component" /&gt;</ph> ist ein prozessübergreifendes Remoteobjekt.</target>       </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.TypeDescriptor">
          <source>Returns the default event for a component or type.</source>
          <target state="translated">Gibt das Standardereignis für eine Komponente oder einen Typ zurück.</target>       </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetDefaultEvent(System.Object)">
          <source>The component to get the event for.</source>
          <target state="translated">Die Komponente, für die das Ereignis abgerufen werden soll.</target>       </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetDefaultEvent(System.Object)">
          <source>Returns the default event for the specified component.</source>
          <target state="translated">Gibt das Standardereignis für die  angegebene Komponente zurück.</target>       </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetDefaultEvent(System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.ComponentModel.EventDescriptor" /&gt;</ph> with the default event, or <ph id="ph2">&lt;see langword="null" /&gt;</ph> if there are no events.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.ComponentModel.EventDescriptor" /&gt;</ph> mit dem Standardereignis oder <ph id="ph2">&lt;see langword="null" /&gt;</ph>, wenn keine Ereignisse vorhanden sind.</target>       </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetDefaultEvent(System.Object)">
          <source>This method is equivalent to the overloaded <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.GetDefaultEvent%28System.Object%2CSystem.Boolean%29&gt;</ph> method with a second parameter of <ph id="ph2">`false`</ph>.</source>
          <target state="translated">Diese Methode entspricht der überladenen <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.GetDefaultEvent%28System.Object%2CSystem.Boolean%29&gt;</ph> Methode mit einem zweiten Parameter <ph id="ph2">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetDefaultEvent(System.Object)">
          <source><ph id="ph1">&lt;paramref name="component" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="component" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetDefaultEvent(System.Object)">
          <source><ph id="ph1">&lt;paramref name="component" /&gt;</ph> is a cross-process remoted object.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="component" /&gt;</ph> ist ein prozessübergreifendes Remoteobjekt.</target>       </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetDefaultEvent(System.Type)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> of the target component.</source>
          <target state="translated">Der <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> der Zielkomponente.</target>       </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetDefaultEvent(System.Type)">
          <source>Returns the default event for the specified type of component.</source>
          <target state="translated">Gibt das Standardereignis für den angegebenen Typ der Komponente zurück.</target>       </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetDefaultEvent(System.Type)">
          <source>An <ph id="ph1">&lt;see cref="T:System.ComponentModel.EventDescriptor" /&gt;</ph> with the default event, or <ph id="ph2">&lt;see langword="null" /&gt;</ph> if there are no events.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.ComponentModel.EventDescriptor" /&gt;</ph> mit dem Standardereignis oder <ph id="ph2">&lt;see langword="null" /&gt;</ph>, wenn keine Ereignisse vorhanden sind.</target>       </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetDefaultEvent(System.Type)">
          <source>Call this version of this method only when you do not have an instance of the object.</source>
          <target state="translated">Rufen Sie diese Version dieser Methode, nur, wenn Sie nicht über eine Instanz des Objekts verfügen.</target>       </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetDefaultEvent(System.Type)">
          <source><ph id="ph1">&lt;paramref name="componentType" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="componentType" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetDefaultEvent(System.Object,System.Boolean)">
          <source>The component to get the event for.</source>
          <target state="translated">Die Komponente, für die das Ereignis abgerufen werden soll.</target>       </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetDefaultEvent(System.Object,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to consider custom type description information; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, um benutzerdefinierte Typinformationen zu berücksichtigen, andernfalls <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetDefaultEvent(System.Object,System.Boolean)">
          <source>Returns the default event for a component with a custom type descriptor.</source>
          <target state="translated">Gibt das Standardereignis für eine Komponente mit einem benutzerdefinierten Typdeskriptor zurück.</target>       </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetDefaultEvent(System.Object,System.Boolean)">
          <source>An <ph id="ph1">&lt;see cref="T:System.ComponentModel.EventDescriptor" /&gt;</ph> with the default event, or <ph id="ph2">&lt;see langword="null" /&gt;</ph> if there are no events.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.ComponentModel.EventDescriptor" /&gt;</ph> mit dem Standardereignis oder <ph id="ph2">&lt;see langword="null" /&gt;</ph>, wenn keine Ereignisse vorhanden sind.</target>       </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetDefaultEvent(System.Object,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="component" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="component" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetDefaultEvent(System.Object,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="component" /&gt;</ph> is a cross-process remoted object.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="component" /&gt;</ph> ist ein prozessübergreifendes Remoteobjekt.</target>       </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.TypeDescriptor">
          <source>Returns the default property for a component.</source>
          <target state="translated">Gibt die Standardeigenschaft für eine Komponente zurück.</target>       </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetDefaultProperty(System.Object)">
          <source>The component to get the default property for.</source>
          <target state="translated">Die Komponente, für die die Standardeigenschaft abgerufen werden soll.</target>       </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetDefaultProperty(System.Object)">
          <source>Returns the default property for the specified component.</source>
          <target state="translated">Gibt die Standardeigenschaft für die angegebene Komponente zurück.</target>       </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetDefaultProperty(System.Object)">
          <source>A <ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptor" /&gt;</ph> with the default property, or <ph id="ph2">&lt;see langword="null" /&gt;</ph> if there are no properties.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptor" /&gt;</ph> mit der Standardeigenschaft oder <ph id="ph2">&lt;see langword="null" /&gt;</ph>, wenn keine Eigenschaften vorhanden sind.</target>       </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetDefaultProperty(System.Object)">
          <source>If the <ph id="ph1">`component`</ph> parameter is <ph id="ph2">`null`</ph>, this method returns <ph id="ph3">`null`</ph>.</source>
          <target state="translated">Wenn die <ph id="ph1">`component`</ph> Parameter ist <ph id="ph2">`null`</ph>, gibt diese Methode <ph id="ph3">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetDefaultProperty(System.Object)">
          <source><ph id="ph1">&lt;paramref name="component" /&gt;</ph> is a cross-process remoted object.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="component" /&gt;</ph> ist ein prozessübergreifendes Remoteobjekt.</target>       </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetDefaultProperty(System.Type)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> that represents the class to get the property for.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>, der die Klasse darstellt, für die die Eigenschaft abgerufen werden soll.</target>       </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetDefaultProperty(System.Type)">
          <source>Returns the default property for the specified type of component.</source>
          <target state="translated">Gibt die Standardeigenschaft für den angegebenen Komponententyp zurück.</target>       </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetDefaultProperty(System.Type)">
          <source>A <ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptor" /&gt;</ph> with the default property, or <ph id="ph2">&lt;see langword="null" /&gt;</ph> if there are no properties.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptor" /&gt;</ph> mit der Standardeigenschaft oder <ph id="ph2">&lt;see langword="null" /&gt;</ph>, wenn keine Eigenschaften vorhanden sind.</target>       </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetDefaultProperty(System.Type)">
          <source>Call this version of this method only when you do not have an instance of the object.</source>
          <target state="translated">Rufen Sie diese Version dieser Methode, nur, wenn Sie nicht über eine Instanz des Objekts verfügen.</target>       </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetDefaultProperty(System.Type)">
          <source>If the <ph id="ph1">`componentType`</ph> parameter is <ph id="ph2">`null`</ph>, this method returns <ph id="ph3">`null`</ph>.</source>
          <target state="translated">Wenn die <ph id="ph1">`componentType`</ph> Parameter ist <ph id="ph2">`null`</ph>, gibt diese Methode <ph id="ph3">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetDefaultProperty(System.Object,System.Boolean)">
          <source>The component to get the default property for.</source>
          <target state="translated">Die Komponente, für die die Standardeigenschaft abgerufen werden soll.</target>       </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetDefaultProperty(System.Object,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to consider custom type description information; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, um benutzerdefinierte Typinformationen zu berücksichtigen, andernfalls <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetDefaultProperty(System.Object,System.Boolean)">
          <source>Returns the default property for the specified component with a custom type descriptor.</source>
          <target state="translated">Gibt die Standardeigenschaft für die angegebene Komponente mit einem benutzerdefinierten Typdeskriptor zurück.</target>       </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetDefaultProperty(System.Object,System.Boolean)">
          <source>A <ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptor" /&gt;</ph> with the default property, or <ph id="ph2">&lt;see langword="null" /&gt;</ph> if there are no properties.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptor" /&gt;</ph> mit der Standardeigenschaft oder <ph id="ph2">&lt;see langword="null" /&gt;</ph>, wenn keine Eigenschaften vorhanden sind.</target>       </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetDefaultProperty(System.Object,System.Boolean)">
          <source>If the <ph id="ph1">`component`</ph> parameter is <ph id="ph2">`null`</ph>, this method returns <ph id="ph3">`null`</ph>.</source>
          <target state="translated">Wenn die <ph id="ph1">`component`</ph> Parameter ist <ph id="ph2">`null`</ph>, gibt diese Methode <ph id="ph3">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetDefaultProperty(System.Object,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="component" /&gt;</ph> is a cross-process remoted object.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="component" /&gt;</ph> ist ein prozessübergreifendes Remoteobjekt.</target>       </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.TypeDescriptor">
          <source>Returns an editor with the specified base type.</source>
          <target state="translated">Gibt einen Editor mit dem angegebenen Basistyp zurück.</target>       </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetEditor(System.Object,System.Type)">
          <source>The component to get the editor for.</source>
          <target state="translated">Die Komponente, für die der Editor abgerufen werden soll.</target>       </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetEditor(System.Object,System.Type)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> that represents the base type of the editor you want to find.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>, der den Basistyp des gesuchten Editors darstellt.</target>       </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetEditor(System.Object,System.Type)">
          <source>Gets an editor with the specified base type for the specified component.</source>
          <target state="translated">Ruft einen Editor mit dem angegebenen Basistyp für die angegebene Komponente ab.</target>       </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetEditor(System.Object,System.Type)">
          <source>An instance of the editor that can be cast to the specified editor type, or <ph id="ph1">&lt;see langword="null" /&gt;</ph> if no editor of the requested type can be found.</source>
          <target state="translated">Eine Instanz des Editors, die in den angegebenen Editortyp umgewandelt werden kann, oder <ph id="ph1">&lt;see langword="null" /&gt;</ph>, wenn kein Editor vom angeforderten Typ gefunden wurde.</target>       </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetEditor(System.Object,System.Type)">
          <source>The type of <ph id="ph1">`editorBaseType`</ph> is usually <ph id="ph2">&lt;xref:System.Drawing.Design.UITypeEditor&gt;</ph>, but you can also use other types (for example, <ph id="ph3">&lt;xref:System.ComponentModel.ComponentEditor&gt;</ph> and <ph id="ph4">&lt;xref:System.ComponentModel.InstanceCreationEditor&gt;</ph>).</source>
          <target state="translated">Der Typ des <ph id="ph1">`editorBaseType`</ph> ist in der Regel <ph id="ph2">&lt;xref:System.Drawing.Design.UITypeEditor&gt;</ph>, aber Sie können auch andere Typen (z. B. <ph id="ph3">&lt;xref:System.ComponentModel.ComponentEditor&gt;</ph> und <ph id="ph4">&lt;xref:System.ComponentModel.InstanceCreationEditor&gt;</ph>).</target>       </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetEditor(System.Object,System.Type)">
          <source>You can define multiple editors for a property.</source>
          <target state="translated">Sie können mehrere Editoren für eine Eigenschaft definieren.</target>       </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetEditor(System.Object,System.Type)">
          <source>You use this method to select the editor you want to use.</source>
          <target state="translated">Sie können diese Methode verwenden, um den Editor auswählen, die, den Sie verwenden möchten.</target>       </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetEditor(System.Object,System.Type)">
          <source><ph id="ph1">&lt;paramref name="component" /&gt;</ph> or <ph id="ph2">&lt;paramref name="editorBaseType" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="component" /&gt;</ph> oder <ph id="ph2">&lt;paramref name="editorBaseType" /&gt;</ph> ist <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetEditor(System.Object,System.Type)">
          <source><ph id="ph1">&lt;paramref name="component" /&gt;</ph> is a cross-process remoted object.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="component" /&gt;</ph> ist ein prozessübergreifendes Remoteobjekt.</target>       </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetEditor(System.Type,System.Type)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> of the target component.</source>
          <target state="translated">Der <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> der Zielkomponente.</target>       </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetEditor(System.Type,System.Type)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> that represents the base type of the editor you are trying to find.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>, der den Basistyp des gesuchten Editors darstellt.</target>       </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetEditor(System.Type,System.Type)">
          <source>Returns an editor with the specified base type for the specified type.</source>
          <target state="translated">Gibt einen Editor mit dem angegebenen Basistyp für den angegebenen Typ zurück.</target>       </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetEditor(System.Type,System.Type)">
          <source>An instance of the editor object that can be cast to the given base type, or <ph id="ph1">&lt;see langword="null" /&gt;</ph> if no editor of the requested type can be found.</source>
          <target state="translated">Eine Instanz des Editorobjekts, die in den angegebenen Basistyp umgewandelt werden kann, oder <ph id="ph1">&lt;see langword="null" /&gt;</ph>, wenn kein Editor vom angeforderten Typ gefunden wurde.</target>       </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetEditor(System.Type,System.Type)">
          <source>The type of <ph id="ph1">`editorBaseType`</ph> is usually <ph id="ph2">&lt;xref:System.Drawing.Design.UITypeEditor&gt;</ph>, but you can also use other types (for example <ph id="ph3">&lt;xref:System.ComponentModel.ComponentEditor&gt;</ph> and <ph id="ph4">&lt;xref:System.ComponentModel.InstanceCreationEditor&gt;</ph>).</source>
          <target state="translated">Der Typ des <ph id="ph1">`editorBaseType`</ph> ist in der Regel <ph id="ph2">&lt;xref:System.Drawing.Design.UITypeEditor&gt;</ph>, aber Sie können auch andere Typen (z. B. <ph id="ph3">&lt;xref:System.ComponentModel.ComponentEditor&gt;</ph> und <ph id="ph4">&lt;xref:System.ComponentModel.InstanceCreationEditor&gt;</ph>).</target>       </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetEditor(System.Type,System.Type)">
          <source>You can define multiple editors for a type.</source>
          <target state="translated">Sie können mehrere Editoren für einen Typ definieren.</target>       </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetEditor(System.Type,System.Type)">
          <source>You use this method to select the one you want to use.</source>
          <target state="translated">Sie können diese Methode verwenden, um das Zertifikat auszuwählen, die Sie verwenden möchten.</target>       </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetEditor(System.Type,System.Type)">
          <source>Call this version of this method only when you do not have an instance of the object.</source>
          <target state="translated">Rufen Sie diese Version dieser Methode, nur, wenn Sie nicht über eine Instanz des Objekts verfügen.</target>       </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetEditor(System.Type,System.Type)">
          <source><ph id="ph1">&lt;paramref name="type" /&gt;</ph> or <ph id="ph2">&lt;paramref name="editorBaseType" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="type" /&gt;</ph> oder <ph id="ph2">&lt;paramref name="editorBaseType" /&gt;</ph> ist <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetEditor(System.Object,System.Type,System.Boolean)">
          <source>The component to get the editor for.</source>
          <target state="translated">Die Komponente, für die der Editor abgerufen werden soll.</target>       </trans-unit>
        <trans-unit id="485" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetEditor(System.Object,System.Type,System.Boolean)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> that represents the base type of the editor you want to find.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>, der den Basistyp des gesuchten Editors darstellt.</target>       </trans-unit>
        <trans-unit id="486" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetEditor(System.Object,System.Type,System.Boolean)">
          <source>A flag indicating whether custom type description information should be considered.</source>
          <target state="translated">Ein Flag, das angibt, ob benutzerdefinierte Typbeschreibungsinformationen berücksichtigt werden sollten.</target>       </trans-unit>
        <trans-unit id="487" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetEditor(System.Object,System.Type,System.Boolean)">
          <source>Returns an editor with the specified base type and with a custom type descriptor for the specified component.</source>
          <target state="translated">Gibt einen Editor mit dem angegebenen Basistyp und mit einem benutzerdefinierten Typdeskriptor für die angegebene Komponente zurück.</target>       </trans-unit>
        <trans-unit id="488" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetEditor(System.Object,System.Type,System.Boolean)">
          <source>An instance of the editor that can be cast to the specified editor type, or <ph id="ph1">&lt;see langword="null" /&gt;</ph> if no editor of the requested type can be found.</source>
          <target state="translated">Eine Instanz des Editors, die in den angegebenen Editortyp umgewandelt werden kann, oder <ph id="ph1">&lt;see langword="null" /&gt;</ph>, wenn kein Editor vom angeforderten Typ gefunden wurde.</target>       </trans-unit>
        <trans-unit id="489" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetEditor(System.Object,System.Type,System.Boolean)">
          <source>The type of <ph id="ph1">`editorBaseType`</ph> is usually <ph id="ph2">&lt;xref:System.Drawing.Design.UITypeEditor&gt;</ph>, but you can also use other types (for example <ph id="ph3">&lt;xref:System.ComponentModel.ComponentEditor&gt;</ph> and <ph id="ph4">&lt;xref:System.ComponentModel.InstanceCreationEditor&gt;</ph>).</source>
          <target state="translated">Der Typ des <ph id="ph1">`editorBaseType`</ph> ist in der Regel <ph id="ph2">&lt;xref:System.Drawing.Design.UITypeEditor&gt;</ph>, aber Sie können auch andere Typen (z. B. <ph id="ph3">&lt;xref:System.ComponentModel.ComponentEditor&gt;</ph> und <ph id="ph4">&lt;xref:System.ComponentModel.InstanceCreationEditor&gt;</ph>).</target>       </trans-unit>
        <trans-unit id="490" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetEditor(System.Object,System.Type,System.Boolean)">
          <source>You can define multiple editors for a property.</source>
          <target state="translated">Sie können mehrere Editoren für eine Eigenschaft definieren.</target>       </trans-unit>
        <trans-unit id="491" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetEditor(System.Object,System.Type,System.Boolean)">
          <source>You use this method to select the editor you want to use.</source>
          <target state="translated">Sie können diese Methode verwenden, um den Editor auswählen, die, den Sie verwenden möchten.</target>       </trans-unit>
        <trans-unit id="492" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetEditor(System.Object,System.Type,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="component" /&gt;</ph> or <ph id="ph2">&lt;paramref name="editorBaseType" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="component" /&gt;</ph> oder <ph id="ph2">&lt;paramref name="editorBaseType" /&gt;</ph> ist <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="493" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetEditor(System.Object,System.Type,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="component" /&gt;</ph> is a cross-process remoted object.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="component" /&gt;</ph> ist ein prozessübergreifendes Remoteobjekt.</target>       </trans-unit>
        <trans-unit id="494" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.TypeDescriptor">
          <source>Returns the collection of events for a component or type.</source>
          <target state="translated">Gibt die Auflistung von Ereignissen für eine Komponente oder einen Typ zurück.</target>       </trans-unit>
        <trans-unit id="495" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Object)">
          <source>A component to get the events for.</source>
          <target state="translated">Eine Komponente, für die die Ereignisse abgerufen werden sollen.</target>       </trans-unit>
        <trans-unit id="496" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Object)">
          <source>Returns the collection of events for the specified component.</source>
          <target state="translated">Gibt eine Auflistung von Ereignissen für die angegebene Komponente zurück.</target>       </trans-unit>
        <trans-unit id="497" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.ComponentModel.EventDescriptorCollection" /&gt;</ph> with the events for this component.</source>
          <target state="translated">Eine <ph id="ph1">&lt;see cref="T:System.ComponentModel.EventDescriptorCollection" /&gt;</ph> mit den Ereignissen für diese Komponente.</target>       </trans-unit>
        <trans-unit id="498" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Object)">
          <source>Retrieves a collection of events that the given <ph id="ph1">`component`</ph> parameter instance provides.</source>
          <target state="translated">Ruft eine Auflistung von Ereignissen ab, die die angegebenen <ph id="ph1">`component`</ph> Parameterinstanz bereitstellt.</target>       </trans-unit>
        <trans-unit id="499" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Object)">
          <source>This collection can differ from the set of events the class provides.</source>
          <target state="translated">Diese Sammlung kann aus dem Satz von Ereignissen die Klasse bereitgestellten unterscheiden.</target>       </trans-unit>
        <trans-unit id="500" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Object)">
          <source>If the <ph id="ph1">`component`</ph> parameter is sited, the site can add or remove additional events.</source>
          <target state="translated">Wenn die <ph id="ph1">`component`</ph> Parameter platziert wird, die Site hinzufügen oder entfernen Sie zusätzliche Ereignisse kann.</target>       </trans-unit>
        <trans-unit id="501" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Object)">
          <source>If <ph id="ph1">`component`</ph> is <ph id="ph2">`null`</ph>, then an empty collection is returned.</source>
          <target state="translated">Wenn <ph id="ph1">`component`</ph> ist <ph id="ph2">`null`</ph>, wird eine leere Auflistung zurückgegeben wird.</target>       </trans-unit>
        <trans-unit id="502" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Object)">
          <source>The order of the returned collection is not guaranteed to be identical between calls, so always order it before use.</source>
          <target state="translated">Die Reihenfolge der zurückgegebenen Auflistung ist nicht sichergestellt, zwischen den Aufrufen identisch sein, daher immer vor der Verwendung zu bestellen.</target>       </trans-unit>
        <trans-unit id="503" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Object)">
          <source>For an example of this method, see the <ph id="ph1">&lt;xref:System.ComponentModel.EventDescriptorCollection.Count%2A&gt;</ph> property.</source>
          <target state="translated">Ein Beispiel dieser Methode finden Sie unter der <ph id="ph1">&lt;xref:System.ComponentModel.EventDescriptorCollection.Count%2A&gt;</ph> Eigenschaft.</target>       </trans-unit>
        <trans-unit id="504" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Object)">
          <source><ph id="ph1">&lt;paramref name="component" /&gt;</ph> is a cross-process remoted object.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="component" /&gt;</ph> ist ein prozessübergreifendes Remoteobjekt.</target>       </trans-unit>
        <trans-unit id="505" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Type)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> of the target component.</source>
          <target state="translated">Der <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> der Zielkomponente.</target>       </trans-unit>
        <trans-unit id="506" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Type)">
          <source>Returns the collection of events for a specified type of component.</source>
          <target state="translated">Gibt die Auflistung von Ereignissen für einen angegebenen Komponententyp zurück.</target>       </trans-unit>
        <trans-unit id="507" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Type)">
          <source>An <ph id="ph1">&lt;see cref="T:System.ComponentModel.EventDescriptorCollection" /&gt;</ph> with the events for this component.</source>
          <target state="translated">Eine <ph id="ph1">&lt;see cref="T:System.ComponentModel.EventDescriptorCollection" /&gt;</ph> mit den Ereignissen für diese Komponente.</target>       </trans-unit>
        <trans-unit id="508" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Type)">
          <source>Call this version of this method only when you do not have an instance of the object.</source>
          <target state="translated">Rufen Sie diese Version dieser Methode, nur, wenn Sie nicht über eine Instanz des Objekts verfügen.</target>       </trans-unit>
        <trans-unit id="509" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Type)">
          <source>If the <ph id="ph1">`componentType`</ph> parameter is <ph id="ph2">`null`</ph>, an empty collection is returned.</source>
          <target state="translated">Wenn die <ph id="ph1">`componentType`</ph> Parameter ist <ph id="ph2">`null`</ph>, eine leere Auflistung zurückgegeben wird.</target>       </trans-unit>
        <trans-unit id="510" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Type)">
          <source>The order of the returned collection is not guaranteed to be identical between calls, so always order it before use.</source>
          <target state="translated">Die Reihenfolge der zurückgegebenen Auflistung ist nicht sichergestellt, zwischen den Aufrufen identisch sein, daher immer vor der Verwendung zu bestellen.</target>       </trans-unit>
        <trans-unit id="511" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Object,System.Attribute[])">
          <source>A component to get the events for.</source>
          <target state="translated">Eine Komponente, für die die Ereignisse abgerufen werden sollen.</target>       </trans-unit>
        <trans-unit id="512" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Object,System.Attribute[])">
          <source>An array of type <ph id="ph1">&lt;see cref="T:System.Attribute" /&gt;</ph> that you can use as a filter.</source>
          <target state="translated">Ein Array vom Typ <ph id="ph1">&lt;see cref="T:System.Attribute" /&gt;</ph>, das als Filter verwendet werden kann.</target>       </trans-unit>
        <trans-unit id="513" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Object,System.Attribute[])">
          <source>Returns the collection of events for a specified component using a specified array of attributes as a filter.</source>
          <target state="translated">Gibt die Auflistung der Ereignisse für eine angegebene Komponente zurück. Hierbei wird ein angegebenes Array von Attributen als Filter verwendet.</target>       </trans-unit>
        <trans-unit id="514" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Object,System.Attribute[])">
          <source>An <ph id="ph1">&lt;see cref="T:System.ComponentModel.EventDescriptorCollection" /&gt;</ph> with the events that match the specified attributes for this component.</source>
          <target state="translated">Eine <ph id="ph1">&lt;see cref="T:System.ComponentModel.EventDescriptorCollection" /&gt;</ph> mit den Ereignissen, die mit den angegebenen Attributen für diese Komponente übereinstimmen.</target>       </trans-unit>
        <trans-unit id="515" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Object,System.Attribute[])">
          <source>The events for the <ph id="ph1">`component`</ph> parameter can differ from the events of a class, because the site can add or remove events if the <ph id="ph2">`component`</ph> parameter is sited.</source>
          <target state="translated">Die Ereignisse für die <ph id="ph1">`component`</ph> Parameter kann von den Ereignissen einer Klasse unterscheiden, da der Standort kann hinzufügen oder Entfernen Ereignisse aus, wenn die <ph id="ph2">`component`</ph> -Parameter platziert wird.</target>       </trans-unit>
        <trans-unit id="516" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Object,System.Attribute[])">
          <source>The <ph id="ph1">`attributes`</ph> array can have a mix of <ph id="ph2">&lt;xref:System.Type&gt;</ph> and <ph id="ph3">&lt;xref:System.Attribute&gt;</ph> objects.</source>
          <target state="translated">Die <ph id="ph1">`attributes`</ph> Arrays haben eine Mischung aus <ph id="ph2">&lt;xref:System.Type&gt;</ph> und <ph id="ph3">&lt;xref:System.Attribute&gt;</ph> Objekte.</target>       </trans-unit>
        <trans-unit id="517" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Object,System.Attribute[])">
          <source>Filtering is defined by the following rules:</source>
          <target state="translated">Filterung wird durch die folgenden Regeln definiert:</target>       </trans-unit>
        <trans-unit id="518" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Object,System.Attribute[])">
          <source>A <ph id="ph1">&lt;xref:System.Type&gt;</ph> is treated as a wildcard; it matches any event that has the <ph id="ph2">&lt;xref:System.Type&gt;</ph> in its set of attributes.</source>
          <target state="translated">Ein <ph id="ph1">&lt;xref:System.Type&gt;</ph> wird behandelt, als Platzhalter; Feldeintrag jedes Ereignis, das ist die <ph id="ph2">&lt;xref:System.Type&gt;</ph> in einen Satz von Attributen.</target>       </trans-unit>
        <trans-unit id="519" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Object,System.Attribute[])">
          <source>If an event does not have an <ph id="ph1">&lt;xref:System.Attribute&gt;</ph> of the same class, the event is not included in the returned array.</source>
          <target state="translated">Wenn ein Ereignis kein <ph id="ph1">&lt;xref:System.Attribute&gt;</ph> derselben Klasse das Ereignis nicht im zurückgegebenen Array enthalten ist.</target>       </trans-unit>
        <trans-unit id="520" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Object,System.Attribute[])">
          <source>If the attribute is an instance of the <ph id="ph1">&lt;xref:System.Attribute&gt;</ph> class, the event must be an exact match or it is not included in the returned array.</source>
          <target state="translated">Wenn das Attribut eine Instanz ist die <ph id="ph1">&lt;xref:System.Attribute&gt;</ph> -Klasse des Ereignisses muss eine genaue Übereinstimmung, oder es ist nicht im zurückgegebenen Array enthalten.</target>       </trans-unit>
        <trans-unit id="521" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Object,System.Attribute[])">
          <source>If an <ph id="ph1">&lt;xref:System.Attribute&gt;</ph> instance is specified and it is the default event, it is included in the returned array even if there is no instance of the <ph id="ph2">&lt;xref:System.Attribute&gt;</ph> in the event.</source>
          <target state="translated">Wenn ein <ph id="ph1">&lt;xref:System.Attribute&gt;</ph> Instanz angegeben ist und es ist das Standardereignis, es ist im zurückgegebenen Array enthalten, selbst wenn keine Instanz von der <ph id="ph2">&lt;xref:System.Attribute&gt;</ph> im Ereignisprotokoll.</target>       </trans-unit>
        <trans-unit id="522" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Object,System.Attribute[])">
          <source>If <ph id="ph1">`component`</ph> is <ph id="ph2">`null`</ph>, an empty collection is returned.</source>
          <target state="translated">Wenn <ph id="ph1">`component`</ph> ist <ph id="ph2">`null`</ph>, eine leere Auflistung zurückgegeben wird.</target>       </trans-unit>
        <trans-unit id="523" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Object,System.Attribute[])">
          <source>The order of the returned collection is not guaranteed to be identical between calls, so always order it before use.</source>
          <target state="translated">Die Reihenfolge der zurückgegebenen Auflistung ist nicht sichergestellt, zwischen den Aufrufen identisch sein, daher immer vor der Verwendung zu bestellen.</target>       </trans-unit>
        <trans-unit id="524" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Object,System.Attribute[])">
          <source><ph id="ph1">&lt;paramref name="component" /&gt;</ph> is a cross-process remoted object.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="component" /&gt;</ph> ist ein prozessübergreifendes Remoteobjekt.</target>       </trans-unit>
        <trans-unit id="525" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Object,System.Boolean)">
          <source>A component to get the events for.</source>
          <target state="translated">Eine Komponente, für die die Ereignisse abgerufen werden sollen.</target>       </trans-unit>
        <trans-unit id="526" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Object,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to consider custom type description information; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, um benutzerdefinierte Typinformationen zu berücksichtigen, andernfalls <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="527" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Object,System.Boolean)">
          <source>Returns the collection of events for a specified component with a custom type descriptor.</source>
          <target state="translated">Gibt die Auflistung von Eigenschaften für eine angegebene Komponente mit einem benutzerdefinierten Typdeskriptor zurück.</target>       </trans-unit>
        <trans-unit id="528" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Object,System.Boolean)">
          <source>An <ph id="ph1">&lt;see cref="T:System.ComponentModel.EventDescriptorCollection" /&gt;</ph> with the events for this component.</source>
          <target state="translated">Eine <ph id="ph1">&lt;see cref="T:System.ComponentModel.EventDescriptorCollection" /&gt;</ph> mit den Ereignissen für diese Komponente.</target>       </trans-unit>
        <trans-unit id="529" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Object,System.Boolean)">
          <source>This method retrieves a collection of events that the given <ph id="ph1">`component`</ph> parameter instance provides.</source>
          <target state="translated">Diese Methode ruft eine Auflistung von Ereignissen ab, die die angegebenen <ph id="ph1">`component`</ph> Parameterinstanz bereitstellt.</target>       </trans-unit>
        <trans-unit id="530" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Object,System.Boolean)">
          <source>This can differ from the set of events the class provides.</source>
          <target state="translated">Dies kann aus dem Satz von Ereignissen die Klasse bereitgestellten unterscheiden.</target>       </trans-unit>
        <trans-unit id="531" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Object,System.Boolean)">
          <source>If the <ph id="ph1">`component`</ph> parameter is sited, the site can add or remove additional events.</source>
          <target state="translated">Wenn die <ph id="ph1">`component`</ph> Parameter platziert wird, die Site hinzufügen oder entfernen Sie zusätzliche Ereignisse kann.</target>       </trans-unit>
        <trans-unit id="532" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Object,System.Boolean)">
          <source>If <ph id="ph1">`component`</ph> is <ph id="ph2">`null`</ph>, an empty collection is returned.</source>
          <target state="translated">Wenn <ph id="ph1">`component`</ph> ist <ph id="ph2">`null`</ph>, eine leere Auflistung zurückgegeben wird.</target>       </trans-unit>
        <trans-unit id="533" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Object,System.Boolean)">
          <source>The order of the returned collection is not guaranteed to be identical between calls, so always order it before use.</source>
          <target state="translated">Die Reihenfolge der zurückgegebenen Auflistung ist nicht sichergestellt, zwischen den Aufrufen identisch sein, daher immer vor der Verwendung zu bestellen.</target>       </trans-unit>
        <trans-unit id="534" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Object,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="component" /&gt;</ph> is a cross-process remoted object.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="component" /&gt;</ph> ist ein prozessübergreifendes Remoteobjekt.</target>       </trans-unit>
        <trans-unit id="535" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Type,System.Attribute[])">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> of the target component.</source>
          <target state="translated">Der <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> der Zielkomponente.</target>       </trans-unit>
        <trans-unit id="536" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Type,System.Attribute[])">
          <source>An array of type <ph id="ph1">&lt;see cref="T:System.Attribute" /&gt;</ph> that you can use as a filter.</source>
          <target state="translated">Ein Array vom Typ <ph id="ph1">&lt;see cref="T:System.Attribute" /&gt;</ph>, das als Filter verwendet werden kann.</target>       </trans-unit>
        <trans-unit id="537" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Type,System.Attribute[])">
          <source>Returns the collection of events for a specified type of component using a specified array of attributes as a filter.</source>
          <target state="translated">Gibt die Auflistung der Ereignisse für einen angegebenen Komponententyp zurück. Hierbei wird ein angegebenes Array von Attributen als Filter verwendet.</target>       </trans-unit>
        <trans-unit id="538" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Type,System.Attribute[])">
          <source>An <ph id="ph1">&lt;see cref="T:System.ComponentModel.EventDescriptorCollection" /&gt;</ph> with the events that match the specified attributes for this component.</source>
          <target state="translated">Eine <ph id="ph1">&lt;see cref="T:System.ComponentModel.EventDescriptorCollection" /&gt;</ph> mit den Ereignissen, die mit den angegebenen Attributen für diese Komponente übereinstimmen.</target>       </trans-unit>
        <trans-unit id="539" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Type,System.Attribute[])">
          <source>Call this version of this method only when you do not have an instance of the object.</source>
          <target state="translated">Rufen Sie diese Version dieser Methode, nur, wenn Sie nicht über eine Instanz des Objekts verfügen.</target>       </trans-unit>
        <trans-unit id="540" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Type,System.Attribute[])">
          <source>The <ph id="ph1">`attributes`</ph> parameter array can have a mix of <ph id="ph2">&lt;xref:System.Type&gt;</ph> and <ph id="ph3">&lt;xref:System.Attribute&gt;</ph> objects.</source>
          <target state="translated">Die <ph id="ph1">`attributes`</ph> Parameterarray kann eine Mischung aus haben <ph id="ph2">&lt;xref:System.Type&gt;</ph> und <ph id="ph3">&lt;xref:System.Attribute&gt;</ph> Objekte.</target>       </trans-unit>
        <trans-unit id="541" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Type,System.Attribute[])">
          <source>Filtering is defined by the following rules:</source>
          <target state="translated">Filterung wird durch die folgenden Regeln definiert:</target>       </trans-unit>
        <trans-unit id="542" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Type,System.Attribute[])">
          <source>A <ph id="ph1">&lt;xref:System.Type&gt;</ph> is treated as a wildcard; it matches any event that has the <ph id="ph2">&lt;xref:System.Type&gt;</ph> in its set of attributes.</source>
          <target state="translated">Ein <ph id="ph1">&lt;xref:System.Type&gt;</ph> wird behandelt, als Platzhalter; Feldeintrag jedes Ereignis, das ist die <ph id="ph2">&lt;xref:System.Type&gt;</ph> in einen Satz von Attributen.</target>       </trans-unit>
        <trans-unit id="543" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Type,System.Attribute[])">
          <source>If an event does not have an <ph id="ph1">&lt;xref:System.Attribute&gt;</ph> of the same class, the event is not included in the returned array.</source>
          <target state="translated">Wenn ein Ereignis kein <ph id="ph1">&lt;xref:System.Attribute&gt;</ph> derselben Klasse das Ereignis nicht im zurückgegebenen Array enthalten ist.</target>       </trans-unit>
        <trans-unit id="544" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Type,System.Attribute[])">
          <source>If the attribute is an instance of the <ph id="ph1">&lt;xref:System.Attribute&gt;</ph> class, the event must be an exact match or it is not included in the returned array.</source>
          <target state="translated">Wenn das Attribut eine Instanz ist die <ph id="ph1">&lt;xref:System.Attribute&gt;</ph> -Klasse des Ereignisses muss eine genaue Übereinstimmung, oder es ist nicht im zurückgegebenen Array enthalten.</target>       </trans-unit>
        <trans-unit id="545" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Type,System.Attribute[])">
          <source>If an <ph id="ph1">&lt;xref:System.Attribute&gt;</ph> instance is specified and it is the default event, it is included in the returned array even if there is no instance of the <ph id="ph2">&lt;xref:System.Attribute&gt;</ph> in the event.</source>
          <target state="translated">Wenn ein <ph id="ph1">&lt;xref:System.Attribute&gt;</ph> Instanz angegeben ist und es ist das Standardereignis, es ist im zurückgegebenen Array enthalten, selbst wenn keine Instanz von der <ph id="ph2">&lt;xref:System.Attribute&gt;</ph> im Ereignisprotokoll.</target>       </trans-unit>
        <trans-unit id="546" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Type,System.Attribute[])">
          <source>If the <ph id="ph1">`componentType`</ph> parameter is <ph id="ph2">`null`</ph>, an empty collection is returned.</source>
          <target state="translated">Wenn die <ph id="ph1">`componentType`</ph> Parameter ist <ph id="ph2">`null`</ph>, eine leere Auflistung zurückgegeben wird.</target>       </trans-unit>
        <trans-unit id="547" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Type,System.Attribute[])">
          <source>The order of the returned collection is not guaranteed to be identical between calls, so always order it before use.</source>
          <target state="translated">Die Reihenfolge der zurückgegebenen Auflistung ist nicht sichergestellt, zwischen den Aufrufen identisch sein, daher immer vor der Verwendung zu bestellen.</target>       </trans-unit>
        <trans-unit id="548" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Object,System.Attribute[],System.Boolean)">
          <source>A component to get the events for.</source>
          <target state="translated">Eine Komponente, für die die Ereignisse abgerufen werden sollen.</target>       </trans-unit>
        <trans-unit id="549" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Object,System.Attribute[],System.Boolean)">
          <source>An array of type <ph id="ph1">&lt;see cref="T:System.Attribute" /&gt;</ph> to use as a filter.</source>
          <target state="translated">Ein Array vom Typ <ph id="ph1">&lt;see cref="T:System.Attribute" /&gt;</ph>, das als Filter verwendet werden soll.</target>       </trans-unit>
        <trans-unit id="550" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Object,System.Attribute[],System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to consider custom type description information; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, um benutzerdefinierte Typinformationen zu berücksichtigen, andernfalls <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="551" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Object,System.Attribute[],System.Boolean)">
          <source>Returns the collection of events for a specified component using a specified array of attributes as a filter and using a custom type descriptor.</source>
          <target state="translated">Gibt die Auflistung von Ereignissen für eine angegebene Komponente zurück. Hierbei wird ein angegebenes Array von Attributen als Filter und ein benutzerdefinierter Typdeskriptor verwendet.</target>       </trans-unit>
        <trans-unit id="552" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Object,System.Attribute[],System.Boolean)">
          <source>An <ph id="ph1">&lt;see cref="T:System.ComponentModel.EventDescriptorCollection" /&gt;</ph> with the events that match the specified attributes for this component.</source>
          <target state="translated">Eine <ph id="ph1">&lt;see cref="T:System.ComponentModel.EventDescriptorCollection" /&gt;</ph> mit den Ereignissen, die mit den angegebenen Attributen für diese Komponente übereinstimmen.</target>       </trans-unit>
        <trans-unit id="553" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Object,System.Attribute[],System.Boolean)">
          <source>The events for the <ph id="ph1">`component`</ph> parameter can differ from the events of a class, because the site can add or remove events if the <ph id="ph2">`component`</ph> parameter is sited.</source>
          <target state="translated">Die Ereignisse für die <ph id="ph1">`component`</ph> Parameter kann von den Ereignissen einer Klasse unterscheiden, da der Standort kann hinzufügen oder Entfernen Ereignisse aus, wenn die <ph id="ph2">`component`</ph> -Parameter platziert wird.</target>       </trans-unit>
        <trans-unit id="554" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Object,System.Attribute[],System.Boolean)">
          <source>The <ph id="ph1">`attributes`</ph> parameter array can have a mix of <ph id="ph2">&lt;xref:System.Type&gt;</ph> and <ph id="ph3">&lt;xref:System.Attribute&gt;</ph> objects.</source>
          <target state="translated">Die <ph id="ph1">`attributes`</ph> Parameterarray kann eine Mischung aus haben <ph id="ph2">&lt;xref:System.Type&gt;</ph> und <ph id="ph3">&lt;xref:System.Attribute&gt;</ph> Objekte.</target>       </trans-unit>
        <trans-unit id="555" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Object,System.Attribute[],System.Boolean)">
          <source>Filtering is defined by the following rules:</source>
          <target state="translated">Filterung wird durch die folgenden Regeln definiert:</target>       </trans-unit>
        <trans-unit id="556" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Object,System.Attribute[],System.Boolean)">
          <source>A <ph id="ph1">&lt;xref:System.Type&gt;</ph> is treated as a wildcard; it matches any event that has the <ph id="ph2">&lt;xref:System.Type&gt;</ph> in its set of attributes.</source>
          <target state="translated">Ein <ph id="ph1">&lt;xref:System.Type&gt;</ph> wird behandelt, als Platzhalter; Feldeintrag jedes Ereignis, das ist die <ph id="ph2">&lt;xref:System.Type&gt;</ph> in einen Satz von Attributen.</target>       </trans-unit>
        <trans-unit id="557" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Object,System.Attribute[],System.Boolean)">
          <source>If an event does not have an <ph id="ph1">&lt;xref:System.Attribute&gt;</ph> of the same class, the event is not included in the returned array.</source>
          <target state="translated">Wenn ein Ereignis kein <ph id="ph1">&lt;xref:System.Attribute&gt;</ph> derselben Klasse das Ereignis nicht im zurückgegebenen Array enthalten ist.</target>       </trans-unit>
        <trans-unit id="558" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Object,System.Attribute[],System.Boolean)">
          <source>If the attribute is an instance of the <ph id="ph1">&lt;xref:System.Attribute&gt;</ph> class, the event must be an exact match or it is not included in the returned array.</source>
          <target state="translated">Wenn das Attribut eine Instanz ist die <ph id="ph1">&lt;xref:System.Attribute&gt;</ph> -Klasse des Ereignisses muss eine genaue Übereinstimmung, oder es ist nicht im zurückgegebenen Array enthalten.</target>       </trans-unit>
        <trans-unit id="559" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Object,System.Attribute[],System.Boolean)">
          <source>If an <ph id="ph1">&lt;xref:System.Attribute&gt;</ph> instance is specified and it is the default event, it is included in the returned array even if there is no instance of the <ph id="ph2">&lt;xref:System.Attribute&gt;</ph> in the event.</source>
          <target state="translated">Wenn ein <ph id="ph1">&lt;xref:System.Attribute&gt;</ph> Instanz angegeben ist und es ist das Standardereignis, es ist im zurückgegebenen Array enthalten, selbst wenn keine Instanz von der <ph id="ph2">&lt;xref:System.Attribute&gt;</ph> im Ereignisprotokoll.</target>       </trans-unit>
        <trans-unit id="560" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Object,System.Attribute[],System.Boolean)">
          <source>If <ph id="ph1">`component`</ph> is <ph id="ph2">`null`</ph>, an empty collection is returned.</source>
          <target state="translated">Wenn <ph id="ph1">`component`</ph> ist <ph id="ph2">`null`</ph>, eine leere Auflistung zurückgegeben wird.</target>       </trans-unit>
        <trans-unit id="561" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Object,System.Attribute[],System.Boolean)">
          <source>The order of the returned collection is not guaranteed to be identical between calls, so always order it before use.</source>
          <target state="translated">Die Reihenfolge der zurückgegebenen Auflistung ist nicht sichergestellt, zwischen den Aufrufen identisch sein, daher immer vor der Verwendung zu bestellen.</target>       </trans-unit>
        <trans-unit id="562" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Object,System.Attribute[],System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="component" /&gt;</ph> is a cross-process remoted object.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="component" /&gt;</ph> ist ein prozessübergreifendes Remoteobjekt.</target>       </trans-unit>
        <trans-unit id="563" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetFullComponentName(System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ComponentModel.Component" /&gt;</ph> to find the name for.</source>
          <target state="translated">Die <ph id="ph1">&lt;see cref="T:System.ComponentModel.Component" /&gt;</ph>, deren Name gefunden werden soll.</target>       </trans-unit>
        <trans-unit id="564" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetFullComponentName(System.Object)">
          <source>Returns the fully qualified name of the component.</source>
          <target state="translated">Gibt den vollqualifizierten Namen der Komponente zurück.</target>       </trans-unit>
        <trans-unit id="565" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetFullComponentName(System.Object)">
          <source>The fully qualified name of the specified component, or <ph id="ph1">&lt;see langword="null" /&gt;</ph> if the component has no name.</source>
          <target state="translated">Der vollqualifizierte Name der angegebenen Komponente oder <ph id="ph1">&lt;see langword="null" /&gt;</ph>, wenn der Komponente kein Name zugewiesen ist.</target>       </trans-unit>
        <trans-unit id="566" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetFullComponentName(System.Object)">
          <source>In many cases, the <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.GetFullComponentName%2A&gt;</ph> method will return the same value as the <ph id="ph2">&lt;xref:System.ComponentModel.TypeDescriptor.GetComponentName%2A&gt;</ph> method.</source>
          <target state="translated">In vielen Fällen die <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.GetFullComponentName%2A&gt;</ph> Methodenrückgabewert den gleichen Wert wie die <ph id="ph2">&lt;xref:System.ComponentModel.TypeDescriptor.GetComponentName%2A&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="567" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetFullComponentName(System.Object)">
          <source>However, if the component resides in a nested container or has other nested semantics, it may return a different fully qualified name.</source>
          <target state="translated">Wenn die Komponente befindet sich in einem geschachtelten Container oder andere geschachtelte Semantik, kann es jedoch einen anderen vollqualifizierten Namen zurück.</target>       </trans-unit>
        <trans-unit id="568" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetFullComponentName(System.Object)">
          <source><ph id="ph1">&lt;paramref name="component" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="component" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="569" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.TypeDescriptor">
          <source>Returns the collection of properties on a component or type.</source>
          <target state="translated">Gibt die Auflistung von Eigenschaften für eine Komponente oder einen Typ zurück.</target>       </trans-unit>
        <trans-unit id="570" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object)">
          <source>A component to get the properties for.</source>
          <target state="translated">Eine Komponente, deren Eigenschaften abgerufen werden sollen.</target>       </trans-unit>
        <trans-unit id="571" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object)">
          <source>Returns the collection of properties for a specified component.</source>
          <target state="translated">Gibt die Auflistung von Eigenschaften für eine angegebene Komponente zurück.</target>       </trans-unit>
        <trans-unit id="572" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object)">
          <source>A <ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptorCollection" /&gt;</ph> with the properties for the specified component.</source>
          <target state="translated">Eine <ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptorCollection" /&gt;</ph> mit den Eigenschaften für die angegebene Komponente.</target>       </trans-unit>
        <trans-unit id="573" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object)">
          <source>The properties for a component can differ from the properties of a class, because the site can add or remove properties if the component is sited.</source>
          <target state="translated">Die Eigenschaften für eine Komponente können über die Eigenschaften einer Klasse unterscheiden, da die Site kann Eigenschaften hinzufügen oder entfernen, wenn die Komponente platziert wird.</target>       </trans-unit>
        <trans-unit id="574" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object)">
          <source>If the <ph id="ph1">`component`</ph> parameter is <ph id="ph2">`null`</ph>, an empty collection is returned.</source>
          <target state="translated">Wenn die <ph id="ph1">`component`</ph> Parameter ist <ph id="ph2">`null`</ph>, eine leere Auflistung zurückgegeben wird.</target>       </trans-unit>
        <trans-unit id="575" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object)">
          <source>The order of the returned collection is not guaranteed to be identical between calls, so always order it before use.</source>
          <target state="translated">Die Reihenfolge der zurückgegebenen Auflistung ist nicht sichergestellt, zwischen den Aufrufen identisch sein, daher immer vor der Verwendung zu bestellen.</target>       </trans-unit>
        <trans-unit id="576" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object)">
          <source>The following code example demonstrates the use of the <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.GetProperties%2A&gt;</ph> method to access the properties of a control.</source>
          <target state="translated">Das folgende Codebeispiel veranschaulicht die Verwendung von der <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.GetProperties%2A&gt;</ph> Methode, um die Eigenschaften eines Steuerelements zuzugreifen.</target>       </trans-unit>
        <trans-unit id="577" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object)">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.ComponentModel.Design.ComponentDesigner&gt;</ph> class.</source>
          <target state="translated">Dieses Codebeispiel ist Teil eines umfangreicheren Beispiels für die <ph id="ph1">&lt;xref:System.ComponentModel.Design.ComponentDesigner&gt;</ph> Klasse.</target>       </trans-unit>
        <trans-unit id="578" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object)">
          <source><ph id="ph1">&lt;paramref name="component" /&gt;</ph> is a cross-process remoted object.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="component" /&gt;</ph> ist ein prozessübergreifendes Remoteobjekt.</target>       </trans-unit>
        <trans-unit id="579" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Type)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> that represents the component to get properties for.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>, der die Komponente darstellt, für die Eigenschaften abgerufen werden sollen.</target>       </trans-unit>
        <trans-unit id="580" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Type)">
          <source>Returns the collection of properties for a specified type of component.</source>
          <target state="translated">Gibt die Auflistung von Eigenschaften für einen angegebenen Komponententyp zurück.</target>       </trans-unit>
        <trans-unit id="581" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Type)">
          <source>A <ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptorCollection" /&gt;</ph> with the properties for a specified type of component.</source>
          <target state="translated">Eine <ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptorCollection" /&gt;</ph> mit den Eigenschaften für den angegebenen Komponententyp.</target>       </trans-unit>
        <trans-unit id="582" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Type)">
          <source>Call this version of this method only when you do not have an instance of the object.</source>
          <target state="translated">Rufen Sie diese Version dieser Methode, nur, wenn Sie nicht über eine Instanz des Objekts verfügen.</target>       </trans-unit>
        <trans-unit id="583" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Type)">
          <source>If the <ph id="ph1">`componentType`</ph> parameter is <ph id="ph2">`null`</ph>, an empty collection is returned.</source>
          <target state="translated">Wenn die <ph id="ph1">`componentType`</ph> Parameter ist <ph id="ph2">`null`</ph>, eine leere Auflistung zurückgegeben wird.</target>       </trans-unit>
        <trans-unit id="584" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Type)">
          <source>The order of the returned collection is not guaranteed to be identical between calls, so always order it before use.</source>
          <target state="translated">Die Reihenfolge der zurückgegebenen Auflistung ist nicht sichergestellt, zwischen den Aufrufen identisch sein, daher immer vor der Verwendung zu bestellen.</target>       </trans-unit>
        <trans-unit id="585" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object,System.Attribute[])">
          <source>A component to get the properties for.</source>
          <target state="translated">Eine Komponente, deren Eigenschaften abgerufen werden sollen.</target>       </trans-unit>
        <trans-unit id="586" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object,System.Attribute[])">
          <source>An array of type <ph id="ph1">&lt;see cref="T:System.Attribute" /&gt;</ph> to use as a filter.</source>
          <target state="translated">Ein Array vom Typ <ph id="ph1">&lt;see cref="T:System.Attribute" /&gt;</ph>, das als Filter verwendet werden soll.</target>       </trans-unit>
        <trans-unit id="587" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object,System.Attribute[])">
          <source>Returns the collection of properties for a specified component using a specified array of attributes as a filter.</source>
          <target state="translated">Gibt die Auflistung der Eigenschaften für eine angegebene Komponente zurück. Hierbei wird ein angegebenes Array von Attributen als Filter verwendet.</target>       </trans-unit>
        <trans-unit id="588" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object,System.Attribute[])">
          <source>A <ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptorCollection" /&gt;</ph> with the properties that match the specified attributes for the specified component.</source>
          <target state="translated">Eine <ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptorCollection" /&gt;</ph>-Klasse mit den Eigenschaften, die mit den angegebenen Attributen für die angegebene Komponente übereinstimmen.</target>       </trans-unit>
        <trans-unit id="589" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object,System.Attribute[])">
          <source>The properties for the <ph id="ph1">`component`</ph> parameter can differ from the properties of a class, because the site can add or remove properties if the <ph id="ph2">`component`</ph> parameter is sited.</source>
          <target state="translated">Die Eigenschaften für die <ph id="ph1">`component`</ph> Parameter kann in den Eigenschaften einer Klasse unterscheiden, da die Site hinzufügen oder Entfernen von Eigenschaften, wenn kann die <ph id="ph2">`component`</ph> -Parameter platziert wird.</target>       </trans-unit>
        <trans-unit id="590" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object,System.Attribute[])">
          <source>The <ph id="ph1">`attributes`</ph> parameter array is used to filter the array.</source>
          <target state="translated">Die <ph id="ph1">`attributes`</ph> Parameterarray wird zum Filtern des Arrays verwendet.</target>       </trans-unit>
        <trans-unit id="591" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object,System.Attribute[])">
          <source>Filtering is defined by the following rules:</source>
          <target state="translated">Filterung wird durch die folgenden Regeln definiert:</target>       </trans-unit>
        <trans-unit id="592" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object,System.Attribute[])">
          <source>If a property does not have an <ph id="ph1">&lt;xref:System.Attribute&gt;</ph> of the same class, the property is not included in the returned array.</source>
          <target state="translated">Wenn eine Eigenschaft kein <ph id="ph1">&lt;xref:System.Attribute&gt;</ph> der gleichen Klasse, die Eigenschaft nicht im zurückgegebenen Array enthalten.</target>       </trans-unit>
        <trans-unit id="593" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object,System.Attribute[])">
          <source>If the attribute is an instance of the <ph id="ph1">&lt;xref:System.Attribute&gt;</ph> class, the property must be an exact match or it is not included in the returned array.</source>
          <target state="translated">Wenn das Attribut eine Instanz ist die <ph id="ph1">&lt;xref:System.Attribute&gt;</ph> -Klasse, die Eigenschaft muss eine genaue Übereinstimmung, oder es ist nicht im zurückgegebenen Array enthalten.</target>       </trans-unit>
        <trans-unit id="594" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object,System.Attribute[])">
          <source>If an <ph id="ph1">&lt;xref:System.Attribute&gt;</ph> instance is specified and it is the default property, it is included in the returned array even if there is no instance of the <ph id="ph2">&lt;xref:System.Attribute&gt;</ph> in the property.</source>
          <target state="translated">Wenn ein <ph id="ph1">&lt;xref:System.Attribute&gt;</ph> Instanz angegeben ist und die Standardeigenschaft ist, es ist im zurückgegebenen Array enthalten, selbst wenn keine Instanz von der <ph id="ph2">&lt;xref:System.Attribute&gt;</ph> in der Eigenschaft.</target>       </trans-unit>
        <trans-unit id="595" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object,System.Attribute[])">
          <source>If <ph id="ph1">`attributes`</ph> has a default attribute, the <ph id="ph2">&lt;xref:System.ComponentModel.TypeDescriptor.GetProperties%2A&gt;</ph> method matches the case when the property does not have the attribute applied.</source>
          <target state="translated">Wenn <ph id="ph1">`attributes`</ph> verfügt über eine Default-Attribut, das <ph id="ph2">&lt;xref:System.ComponentModel.TypeDescriptor.GetProperties%2A&gt;</ph> Methoden entsprechen den Fall, wenn die Eigenschaft nicht das Attribut angewendet wird.</target>       </trans-unit>
        <trans-unit id="596" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object,System.Attribute[])">
          <source>If <ph id="ph1">`component`</ph> is <ph id="ph2">`null`</ph>, an empty collection is returned.</source>
          <target state="translated">Wenn <ph id="ph1">`component`</ph> ist <ph id="ph2">`null`</ph>, eine leere Auflistung zurückgegeben wird.</target>       </trans-unit>
        <trans-unit id="597" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object,System.Attribute[])">
          <source>The order of the returned collection is not guaranteed to be identical between calls, so always order it before use.</source>
          <target state="translated">Die Reihenfolge der zurückgegebenen Auflistung ist nicht sichergestellt, zwischen den Aufrufen identisch sein, daher immer vor der Verwendung zu bestellen.</target>       </trans-unit>
        <trans-unit id="598" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object,System.Attribute[])">
          <source>The following code example demonstrates how to implement the <ph id="ph1">&lt;xref:System.Windows.Forms.Design.PropertyTab.GetProperties%2A&gt;</ph> method.</source>
          <target state="translated">Das folgende Codebeispiel veranschaulicht das Implementieren der <ph id="ph1">&lt;xref:System.Windows.Forms.Design.PropertyTab.GetProperties%2A&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="599" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object,System.Attribute[])">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Windows.Forms.Design.PropertyTab&gt;</ph> class.</source>
          <target state="translated">Dieses Codebeispiel ist Teil eines umfangreicheren Beispiels für die <ph id="ph1">&lt;xref:System.Windows.Forms.Design.PropertyTab&gt;</ph> Klasse.</target>       </trans-unit>
        <trans-unit id="600" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object,System.Attribute[])">
          <source><ph id="ph1">&lt;paramref name="component" /&gt;</ph> is a cross-process remoted object.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="component" /&gt;</ph> ist ein prozessübergreifendes Remoteobjekt.</target>       </trans-unit>
        <trans-unit id="601" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object,System.Boolean)">
          <source>A component to get the properties for.</source>
          <target state="translated">Eine Komponente, deren Eigenschaften abgerufen werden sollen.</target>       </trans-unit>
        <trans-unit id="602" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to not consider custom type description information; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, wenn benutzerdefinierte Typinformationen nicht berücksichtigt werden sollen, andernfalls <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="603" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object,System.Boolean)">
          <source>Returns the collection of properties for a specified component using the default type descriptor.</source>
          <target state="translated">Gibt die Auflistung von Eigenschaften für eine angegebene Komponente zurück. Dazu wird der Standardtypdeskriptor verwendet.</target>       </trans-unit>
        <trans-unit id="604" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object,System.Boolean)">
          <source>A <ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptorCollection" /&gt;</ph> with the properties for a specified component.</source>
          <target state="translated">Eine <ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptorCollection" /&gt;</ph> mit den Eigenschaften für eine angegebene Komponente.</target>       </trans-unit>
        <trans-unit id="605" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object,System.Boolean)">
          <source>The properties for the <ph id="ph1">`component`</ph> parameter can differ from the properties of a class, because the site can add or remove properties if the <ph id="ph2">`component`</ph> parameter is sited.</source>
          <target state="translated">Die Eigenschaften für die <ph id="ph1">`component`</ph> Parameter kann in den Eigenschaften einer Klasse unterscheiden, da die Site hinzufügen oder Entfernen von Eigenschaften, wenn kann die <ph id="ph2">`component`</ph> -Parameter platziert wird.</target>       </trans-unit>
        <trans-unit id="606" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object,System.Boolean)">
          <source>If <ph id="ph1">`component`</ph> is <ph id="ph2">`null`</ph>, an empty collection is returned.</source>
          <target state="translated">Wenn <ph id="ph1">`component`</ph> ist <ph id="ph2">`null`</ph>, eine leere Auflistung zurückgegeben wird.</target>       </trans-unit>
        <trans-unit id="607" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object,System.Boolean)">
          <source>The order of the returned collection is not guaranteed to be identical between calls, so always order it before use.</source>
          <target state="translated">Die Reihenfolge der zurückgegebenen Auflistung ist nicht sichergestellt, zwischen den Aufrufen identisch sein, daher immer vor der Verwendung zu bestellen.</target>       </trans-unit>
        <trans-unit id="608" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="component" /&gt;</ph> is a cross-process remoted object.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="component" /&gt;</ph> ist ein prozessübergreifendes Remoteobjekt.</target>       </trans-unit>
        <trans-unit id="609" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Type,System.Attribute[])">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> of the target component.</source>
          <target state="translated">Der <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> der Zielkomponente.</target>       </trans-unit>
        <trans-unit id="610" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Type,System.Attribute[])">
          <source>An array of type <ph id="ph1">&lt;see cref="T:System.Attribute" /&gt;</ph> to use as a filter.</source>
          <target state="translated">Ein Array vom Typ <ph id="ph1">&lt;see cref="T:System.Attribute" /&gt;</ph>, das als Filter verwendet werden soll.</target>       </trans-unit>
        <trans-unit id="611" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Type,System.Attribute[])">
          <source>Returns the collection of properties for a specified type of component using a specified array of attributes as a filter.</source>
          <target state="translated">Gibt die Auflistung der Eigenschaften für einen angegebenen Komponententyp zurück. Hierbei wird ein angegebenes Array von Attributen als Filter verwendet.</target>       </trans-unit>
        <trans-unit id="612" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Type,System.Attribute[])">
          <source>A <ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptorCollection" /&gt;</ph> with the properties that match the specified attributes for this type of component.</source>
          <target state="translated">Eine <ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptorCollection" /&gt;</ph> mit den Eigenschaften, die mit den angegebenen Attributen für diesen Komponententyp übereinstimmen.</target>       </trans-unit>
        <trans-unit id="613" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Type,System.Attribute[])">
          <source>Call this version of this method only when you do not have an instance of the object.</source>
          <target state="translated">Rufen Sie diese Version dieser Methode, nur, wenn Sie nicht über eine Instanz des Objekts verfügen.</target>       </trans-unit>
        <trans-unit id="614" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Type,System.Attribute[])">
          <source>The <ph id="ph1">`attributes`</ph> parameter array is used to filter the array.</source>
          <target state="translated">Die <ph id="ph1">`attributes`</ph> Parameterarray wird zum Filtern des Arrays verwendet.</target>       </trans-unit>
        <trans-unit id="615" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Type,System.Attribute[])">
          <source>Filtering is defined by the following rules:</source>
          <target state="translated">Filterung wird durch die folgenden Regeln definiert:</target>       </trans-unit>
        <trans-unit id="616" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Type,System.Attribute[])">
          <source>If a property does not have an <ph id="ph1">&lt;xref:System.Attribute&gt;</ph> of the same class, the property is not included in the returned array.</source>
          <target state="translated">Wenn eine Eigenschaft kein <ph id="ph1">&lt;xref:System.Attribute&gt;</ph> der gleichen Klasse, die Eigenschaft nicht im zurückgegebenen Array enthalten.</target>       </trans-unit>
        <trans-unit id="617" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Type,System.Attribute[])">
          <source>If the attribute is an instance of the <ph id="ph1">&lt;xref:System.Attribute&gt;</ph> class, the property must be an exact match or it is not included in the returned array.</source>
          <target state="translated">Wenn das Attribut eine Instanz ist die <ph id="ph1">&lt;xref:System.Attribute&gt;</ph> -Klasse, die Eigenschaft muss eine genaue Übereinstimmung, oder es ist nicht im zurückgegebenen Array enthalten.</target>       </trans-unit>
        <trans-unit id="618" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Type,System.Attribute[])">
          <source>If an <ph id="ph1">&lt;xref:System.Attribute&gt;</ph> instance is specified and it is the default property, it is included in the returned array even if there is no instance of the <ph id="ph2">&lt;xref:System.Attribute&gt;</ph> in the property.</source>
          <target state="translated">Wenn ein <ph id="ph1">&lt;xref:System.Attribute&gt;</ph> Instanz angegeben ist und die Standardeigenschaft ist, es ist im zurückgegebenen Array enthalten, selbst wenn keine Instanz von der <ph id="ph2">&lt;xref:System.Attribute&gt;</ph> in der Eigenschaft.</target>       </trans-unit>
        <trans-unit id="619" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Type,System.Attribute[])">
          <source>If <ph id="ph1">`attributes`</ph> has a default attribute, the <ph id="ph2">&lt;xref:System.ComponentModel.TypeDescriptor.GetProperties%2A&gt;</ph> method matches the case when the property does not have the attribute applied.</source>
          <target state="translated">Wenn <ph id="ph1">`attributes`</ph> verfügt über eine Default-Attribut, das <ph id="ph2">&lt;xref:System.ComponentModel.TypeDescriptor.GetProperties%2A&gt;</ph> Methoden entsprechen den Fall, wenn die Eigenschaft nicht das Attribut angewendet wird.</target>       </trans-unit>
        <trans-unit id="620" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Type,System.Attribute[])">
          <source>If the <ph id="ph1">`componentType`</ph> parameter is <ph id="ph2">`null`</ph>, an empty collection is returned.</source>
          <target state="translated">Wenn die <ph id="ph1">`componentType`</ph> Parameter ist <ph id="ph2">`null`</ph>, eine leere Auflistung zurückgegeben wird.</target>       </trans-unit>
        <trans-unit id="621" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Type,System.Attribute[])">
          <source>The order of the returned collection is not guaranteed to be identical between calls, so always order it before use.</source>
          <target state="translated">Die Reihenfolge der zurückgegebenen Auflistung ist nicht sichergestellt, zwischen den Aufrufen identisch sein, daher immer vor der Verwendung zu bestellen.</target>       </trans-unit>
        <trans-unit id="622" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Type,System.Attribute[])">
          <source>The following code example demonstrates how to implement the <ph id="ph1">&lt;xref:System.Windows.Forms.Design.PropertyTab.GetProperties%2A&gt;</ph> method.</source>
          <target state="translated">Das folgende Codebeispiel veranschaulicht das Implementieren der <ph id="ph1">&lt;xref:System.Windows.Forms.Design.PropertyTab.GetProperties%2A&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="623" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Type,System.Attribute[])">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Windows.Forms.Design.PropertyTab&gt;</ph> class.</source>
          <target state="translated">Dieses Codebeispiel ist Teil eines umfangreicheren Beispiels für die <ph id="ph1">&lt;xref:System.Windows.Forms.Design.PropertyTab&gt;</ph> Klasse.</target>       </trans-unit>
        <trans-unit id="624" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object,System.Attribute[],System.Boolean)">
          <source>A component to get the properties for.</source>
          <target state="translated">Eine Komponente, deren Eigenschaften abgerufen werden sollen.</target>       </trans-unit>
        <trans-unit id="625" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object,System.Attribute[],System.Boolean)">
          <source>An array of type <ph id="ph1">&lt;see cref="T:System.Attribute" /&gt;</ph> to use as a filter.</source>
          <target state="translated">Ein Array vom Typ <ph id="ph1">&lt;see cref="T:System.Attribute" /&gt;</ph>, das als Filter verwendet werden soll.</target>       </trans-unit>
        <trans-unit id="626" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object,System.Attribute[],System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to consider custom type description information; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, um benutzerdefinierte Typinformationen zu berücksichtigen, andernfalls <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="627" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object,System.Attribute[],System.Boolean)">
          <source>Returns the collection of properties for a specified component using a specified array of attributes as a filter and using a custom type descriptor.</source>
          <target state="translated">Gibt die Auflistung der Eigenschaften für eine angegebene Komponente zurück. Hierbei wird ein angegebenes Array von Attributen als Filter sowie ein benutzerdefinierter Typdeskriptor verwendet.</target>       </trans-unit>
        <trans-unit id="628" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object,System.Attribute[],System.Boolean)">
          <source>A <ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptorCollection" /&gt;</ph> with the events that match the specified attributes for the specified component.</source>
          <target state="translated">Eine <ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptorCollection" /&gt;</ph> mit den Ereignissen, die mit den angegebenen Attributen für die angegebene Komponente übereinstimmen.</target>       </trans-unit>
        <trans-unit id="629" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object,System.Attribute[],System.Boolean)">
          <source>The properties for a <ph id="ph1">`component`</ph> can differ from the properties of a class, because the site can add or remove properties if the <ph id="ph2">`component`</ph> is sited.</source>
          <target state="translated">Die Eigenschaften für eine <ph id="ph1">`component`</ph> können über die Eigenschaften einer Klasse unterscheiden, da die Site hinzufügen oder Entfernen von Eigenschaften, wenn kann die <ph id="ph2">`component`</ph> positioniert ist.</target>       </trans-unit>
        <trans-unit id="630" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object,System.Attribute[],System.Boolean)">
          <source>The <ph id="ph1">`attributes`</ph> parameter array is used to filter the array.</source>
          <target state="translated">Die <ph id="ph1">`attributes`</ph> Parameterarray wird zum Filtern des Arrays verwendet.</target>       </trans-unit>
        <trans-unit id="631" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object,System.Attribute[],System.Boolean)">
          <source>Filtering is defined by the following rules:</source>
          <target state="translated">Filterung wird durch die folgenden Regeln definiert:</target>       </trans-unit>
        <trans-unit id="632" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object,System.Attribute[],System.Boolean)">
          <source>If a property does not have an <ph id="ph1">&lt;xref:System.Attribute&gt;</ph> of the same class, the property is not included in the returned array.</source>
          <target state="translated">Wenn eine Eigenschaft kein <ph id="ph1">&lt;xref:System.Attribute&gt;</ph> der gleichen Klasse, die Eigenschaft nicht im zurückgegebenen Array enthalten.</target>       </trans-unit>
        <trans-unit id="633" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object,System.Attribute[],System.Boolean)">
          <source>If the attribute is an instance of the <ph id="ph1">&lt;xref:System.Attribute&gt;</ph> class, the property must be an exact match or it is not included in the returned array.</source>
          <target state="translated">Wenn das Attribut eine Instanz ist die <ph id="ph1">&lt;xref:System.Attribute&gt;</ph> -Klasse, die Eigenschaft muss eine genaue Übereinstimmung, oder es ist nicht im zurückgegebenen Array enthalten.</target>       </trans-unit>
        <trans-unit id="634" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object,System.Attribute[],System.Boolean)">
          <source>If an <ph id="ph1">&lt;xref:System.Attribute&gt;</ph> instance is specified and it is the default property, it is included in the returned array even if there is no instance of the <ph id="ph2">&lt;xref:System.Attribute&gt;</ph> in the property.</source>
          <target state="translated">Wenn ein <ph id="ph1">&lt;xref:System.Attribute&gt;</ph> Instanz angegeben ist und die Standardeigenschaft ist, es ist im zurückgegebenen Array enthalten, selbst wenn keine Instanz von der <ph id="ph2">&lt;xref:System.Attribute&gt;</ph> in der Eigenschaft.</target>       </trans-unit>
        <trans-unit id="635" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object,System.Attribute[],System.Boolean)">
          <source>If <ph id="ph1">`attributes`</ph> has a default attribute, the <ph id="ph2">&lt;xref:System.ComponentModel.TypeDescriptor.GetProperties%2A&gt;</ph> method matches the case when the property does not have the attribute applied.</source>
          <target state="translated">Wenn <ph id="ph1">`attributes`</ph> verfügt über eine Default-Attribut, das <ph id="ph2">&lt;xref:System.ComponentModel.TypeDescriptor.GetProperties%2A&gt;</ph> Methoden entsprechen den Fall, wenn die Eigenschaft nicht das Attribut angewendet wird.</target>       </trans-unit>
        <trans-unit id="636" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object,System.Attribute[],System.Boolean)">
          <source>If the <ph id="ph1">`component`</ph> parameter is <ph id="ph2">`null`</ph>, an empty collection is returned.</source>
          <target state="translated">Wenn die <ph id="ph1">`component`</ph> Parameter ist <ph id="ph2">`null`</ph>, eine leere Auflistung zurückgegeben wird.</target>       </trans-unit>
        <trans-unit id="637" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object,System.Attribute[],System.Boolean)">
          <source>The order of the returned collection is not guaranteed to be identical between calls, so always order it before use.</source>
          <target state="translated">Die Reihenfolge der zurückgegebenen Auflistung ist nicht sichergestellt, zwischen den Aufrufen identisch sein, daher immer vor der Verwendung zu bestellen.</target>       </trans-unit>
        <trans-unit id="638" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object,System.Attribute[],System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="component" /&gt;</ph> is a cross-process remoted object.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="component" /&gt;</ph> ist ein prozessübergreifendes Remoteobjekt.</target>       </trans-unit>
        <trans-unit id="639" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.TypeDescriptor">
          <source>Returns the type description provider for the component or type.</source>
          <target state="translated">Gibt den Typbeschreibungsanbieter für die Komponente oder den Typ zurück.</target>       </trans-unit>
        <trans-unit id="640" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetProvider(System.Object)">
          <source>An instance of the target component.</source>
          <target state="translated">Eine Instanz der Zielkomponente.</target>       </trans-unit>
        <trans-unit id="641" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetProvider(System.Object)">
          <source>Returns the type description provider for the specified component.</source>
          <target state="translated">Gibt den Typbeschreibungsanbieter für die angegebene Komponente zurück.</target>       </trans-unit>
        <trans-unit id="642" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetProvider(System.Object)">
          <source>A <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeDescriptionProvider" /&gt;</ph> associated with the specified component.</source>
          <target state="translated">Ein der angegebenen Komponente zugeordneter <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeDescriptionProvider" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="643" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetProvider(System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.GetProvider%2A&gt;</ph> method will always return a type description provider.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.GetProvider%2A&gt;</ph> Methode gibt immer einen Typbeschreibungsanbieter zurück.</target>       </trans-unit>
        <trans-unit id="644" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetProvider(System.Object)">
          <source>Even the default <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph> implementation is built on a <ph id="ph2">&lt;xref:System.ComponentModel.TypeDescriptionProvider&gt;</ph>.</source>
          <target state="translated">Auch die Standardeinstellung <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph> Implementierung basiert auf einem <ph id="ph2">&lt;xref:System.ComponentModel.TypeDescriptionProvider&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="645" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetProvider(System.Object)">
          <source><ph id="ph1">&lt;paramref name="instance" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="instance" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="646" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetProvider(System.Type)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> of the target component.</source>
          <target state="translated">Der <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> der Zielkomponente.</target>       </trans-unit>
        <trans-unit id="647" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetProvider(System.Type)">
          <source>Returns the type description provider for the specified type.</source>
          <target state="translated">Gibt den Typbeschreibungsanbieter für den angegebenen Typ zurück.</target>       </trans-unit>
        <trans-unit id="648" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetProvider(System.Type)">
          <source>A <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeDescriptionProvider" /&gt;</ph> associated with the specified type.</source>
          <target state="translated">Ein dem angegebenen Typ zugeordneter <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeDescriptionProvider" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="649" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetProvider(System.Type)">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.GetProvider%2A&gt;</ph> method will always return a type description provider.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.GetProvider%2A&gt;</ph> Methode gibt immer einen Typbeschreibungsanbieter zurück.</target>       </trans-unit>
        <trans-unit id="650" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetProvider(System.Type)">
          <source>Even the default <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph> implementation is built on a <ph id="ph2">&lt;xref:System.ComponentModel.TypeDescriptionProvider&gt;</ph>.</source>
          <target state="translated">Auch die Standardeinstellung <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph> Implementierung basiert auf einem <ph id="ph2">&lt;xref:System.ComponentModel.TypeDescriptionProvider&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="651" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetProvider(System.Type)">
          <source><ph id="ph1">&lt;paramref name="type" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="type" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="652" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.TypeDescriptor">
          <source>Returns a <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> that can be used to perform reflection.</source>
          <target state="translated">Gibt einen <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> für die Ausführung von Reflektion zurück.</target>       </trans-unit>
        <trans-unit id="653" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetReflectionType(System.Object)">
          <source>An instance of the target component.</source>
          <target state="translated">Eine Instanz der Zielkomponente.</target>       </trans-unit>
        <trans-unit id="654" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetReflectionType(System.Object)">
          <source>Returns a <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> that can be used to perform reflection, given an object.</source>
          <target state="translated">Gibt einen <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> zurück, der verwendet werden kann, um Reflektion für ein Objekt auszuführen.</target>       </trans-unit>
        <trans-unit id="655" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetReflectionType(System.Object)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> for the specified object.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> für das angegebene Objekt.</target>       </trans-unit>
        <trans-unit id="656" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetReflectionType(System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.GetReflectionType%2A&gt;</ph> method is a low-level version of the <ph id="ph2">&lt;xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A&gt;</ph> method.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.GetReflectionType%2A&gt;</ph> Methode ist eine Low-Level-Version von der <ph id="ph2">&lt;xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="657" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetReflectionType(System.Object)">
          <source><ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.GetReflectionType%2A&gt;</ph> is typically used to perform standard reflection against an object when no custom type descriptor can be located for it.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.GetReflectionType%2A&gt;</ph> wird normalerweise verwendet, um standard Reflektion für ein Objekt auszuführen, wenn keine benutzerdefinierten Typdeskriptors dafür gefunden werden kann.</target>       </trans-unit>
        <trans-unit id="658" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetReflectionType(System.Object)">
          <source><ph id="ph1">&lt;paramref name="instance" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="instance" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="659" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetReflectionType(System.Type)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> of the target component.</source>
          <target state="translated">Der <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> der Zielkomponente.</target>       </trans-unit>
        <trans-unit id="660" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetReflectionType(System.Type)">
          <source>Returns a <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> that can be used to perform reflection, given a class type.</source>
          <target state="translated">Gibt einen <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> zurück, mit dessen Hilfe Reflektion für einen Klassentyp ausgeführt werden kann.</target>       </trans-unit>
        <trans-unit id="661" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetReflectionType(System.Type)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> of the specified class.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> der angegebenen Klasse.</target>       </trans-unit>
        <trans-unit id="662" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetReflectionType(System.Type)">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.GetReflectionType%2A&gt;</ph> method is a low-level version of the <ph id="ph2">&lt;xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A&gt;</ph> method.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.GetReflectionType%2A&gt;</ph> Methode ist eine Low-Level-Version von der <ph id="ph2">&lt;xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="663" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.GetReflectionType(System.Type)">
          <source><ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.GetReflectionType%2A&gt;</ph> is typically used to perform standard reflection against a class when no custom type descriptor can be located for it.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.GetReflectionType%2A&gt;</ph> wird normalerweise verwendet, um standard Reflektion vor einer Klasse auszuführen, wenn keine benutzerdefinierten Typdeskriptors dafür gefunden werden kann.</target>       </trans-unit>
        <trans-unit id="664" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.GetReflectionType(System.Type)">
          <source><ph id="ph1">&lt;paramref name="type" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="type" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="665" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.TypeDescriptor.InterfaceType">
          <source>Gets a type that represents a type description provider for all interface types.</source>
          <target state="translated">Ruft einen Typ ab, der einen Typbeschreibungsanbieter für alle Schnittstellentypen darstellt.</target>       </trans-unit>
        <trans-unit id="666" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.TypeDescriptor.InterfaceType">
          <source>A <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> that represents a custom type description provider for all interface types.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>, der einen benutzerdefinierten Typbeschreibungsanbieter für alle Schnittstellentypen darstellt.</target>       </trans-unit>
        <trans-unit id="667" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.TypeDescriptor.InterfaceType">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.InterfaceType%2A&gt;</ph> property gets a <ph id="ph2">&lt;xref:System.Type&gt;</ph> object that you can pass to the <ph id="ph3">&lt;xref:System.ComponentModel.TypeDescriptor.AddProvider%2A&gt;</ph> methods to define a type description provider for interface types.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.InterfaceType%2A&gt;</ph> Eigenschaft ruft eine <ph id="ph2">&lt;xref:System.Type&gt;</ph> -Objekt, das Sie übergeben können die <ph id="ph3">&lt;xref:System.ComponentModel.TypeDescriptor.AddProvider%2A&gt;</ph> Methoden, um einen Typbeschreibungsanbieter für Schnittstellentypen zu definieren.</target>       </trans-unit>
        <trans-unit id="668" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.TypeDescriptor">
          <source>Clears the properties and events from the cache.</source>
          <target state="translated">Löscht die Eigenschaften und Ereignisse aus dem Cache.</target>       </trans-unit>
        <trans-unit id="669" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.Refresh(System.Object)">
          <source>A component for which the properties or events have changed.</source>
          <target state="translated">Eine Komponente, für die die Eigenschaften oder Ereignisse geändert wurden.</target>       </trans-unit>
        <trans-unit id="670" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.Refresh(System.Object)">
          <source>Clears the properties and events for the specified component from the cache.</source>
          <target state="translated">Löscht die Eigenschaften und Ereignisse für die angegebene Komponente aus dem Cache.</target>       </trans-unit>
        <trans-unit id="671" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.Refresh(System.Object)">
          <source>Properties and events are cached by <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph> for speed.</source>
          <target state="translated">Eigenschaften und Ereignisse werden von zwischengespeichert <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph> für Geschwindigkeit.</target>       </trans-unit>
        <trans-unit id="672" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.Refresh(System.Object)">
          <source>Typically, they are constant for the lifetime of an object.</source>
          <target state="translated">In der Regel sind sie für die Lebensdauer eines Objekts konstant.</target>       </trans-unit>
        <trans-unit id="673" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.Refresh(System.Object)">
          <source>However, extender providers and designers can change the set of properties on an object.</source>
          <target state="translated">Extenderanbieter und Designer können jedoch den Satz von Eigenschaften für ein Objekt ändern.</target>       </trans-unit>
        <trans-unit id="674" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.Refresh(System.Object)">
          <source>If they do, they should call this method to clear the property and event descriptors of the object.</source>
          <target state="translated">Wenn dies der Fall ist, sollten sie diese Methode, um deaktivieren Sie die Eigenschaften- und Ereignisdeskriptoren des Objekts aufrufen.</target>       </trans-unit>
        <trans-unit id="675" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.Refresh(System.Object)">
          <source>This method is used only at design time.</source>
          <target state="translated">Diese Methode wird nur zur Entwurfszeit verwendet.</target>       </trans-unit>
        <trans-unit id="676" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.Refresh(System.Object)">
          <source>It is not used during run time.</source>
          <target state="translated">Er wird während der Laufzeit nicht verwendet.</target>       </trans-unit>
        <trans-unit id="677" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.Refresh(System.Object)">
          <source>This method also raises a <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.Refreshed&gt;</ph> event when the properties or events of a component change.</source>
          <target state="translated">Diese Methode löst auch ein <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.Refreshed&gt;</ph> Ereignis aus, wenn die Eigenschaften oder Ereignisse einer Komponente ändern.</target>       </trans-unit>
        <trans-unit id="678" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.Refresh(System.Object)">
          <source>This event is only raised if there was a prior call to the <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.GetProperties%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.ComponentModel.TypeDescriptor.GetEvents%2A&gt;</ph> method that cached the information.</source>
          <target state="translated">Dieses Ereignis wird nur ausgelöst, wenn es wurde von ein vorheriger Aufruf für die <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.GetProperties%2A&gt;</ph> oder <ph id="ph2">&lt;xref:System.ComponentModel.TypeDescriptor.GetEvents%2A&gt;</ph> -Methode, die die Informationen aus dem Cache.</target>       </trans-unit>
        <trans-unit id="679" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.Refresh(System.Object)">
          <source>For an example of using this method, see the <ph id="ph1">&lt;xref:System.ComponentModel.RefreshEventHandler&gt;</ph> class.</source>
          <target state="translated">Ein Beispiel der Verwendung dieser Methode finden Sie unter der <ph id="ph1">&lt;xref:System.ComponentModel.RefreshEventHandler&gt;</ph> Klasse.</target>       </trans-unit>
        <trans-unit id="680" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.Refresh(System.Reflection.Assembly)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Reflection.Assembly" /&gt;</ph> that represents the assembly to refresh.</source>
          <target state="translated">Die <ph id="ph1">&lt;see cref="T:System.Reflection.Assembly" /&gt;</ph>, die die zu aktualisierende Assembly darstellt.</target>       </trans-unit>
        <trans-unit id="681" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.Refresh(System.Reflection.Assembly)">
          <source>Each <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> in this assembly will be refreshed.</source>
          <target state="translated">Jeder <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> in dieser Assembly wird aktualisiert.</target>       </trans-unit>
        <trans-unit id="682" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.Refresh(System.Reflection.Assembly)">
          <source>Clears the properties and events for the specified assembly from the cache.</source>
          <target state="translated">Löscht die Eigenschaften und Ereignisse für die angegebene Assembly aus dem Cache.</target>       </trans-unit>
        <trans-unit id="683" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.Refresh(System.Reflection.Assembly)">
          <source>Properties and events are cached by <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph> for speed.</source>
          <target state="translated">Eigenschaften und Ereignisse werden von zwischengespeichert <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph> für Geschwindigkeit.</target>       </trans-unit>
        <trans-unit id="684" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.Refresh(System.Reflection.Assembly)">
          <source>Typically, they are constant for the lifetime of an object.</source>
          <target state="translated">In der Regel sind sie für die Lebensdauer eines Objekts konstant.</target>       </trans-unit>
        <trans-unit id="685" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.Refresh(System.Reflection.Assembly)">
          <source>However, extender providers and designers can change the set of properties on an object.</source>
          <target state="translated">Extenderanbieter und Designer können jedoch den Satz von Eigenschaften für ein Objekt ändern.</target>       </trans-unit>
        <trans-unit id="686" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.Refresh(System.Reflection.Assembly)">
          <source>If they do, they can call this method to clear the property and event descriptors of the object.</source>
          <target state="translated">Wenn dies der Fall ist, können sie diese Methode, um die Eigenschaften- und Ereignisdeskriptoren des Objekts deaktivieren aufrufen.</target>       </trans-unit>
        <trans-unit id="687" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.Refresh(System.Reflection.Assembly)">
          <source>This method is used only at design time.</source>
          <target state="translated">Diese Methode wird nur zur Entwurfszeit verwendet.</target>       </trans-unit>
        <trans-unit id="688" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.Refresh(System.Reflection.Assembly)">
          <source>It is not used during run time.</source>
          <target state="translated">Er wird während der Laufzeit nicht verwendet.</target>       </trans-unit>
        <trans-unit id="689" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.Refresh(System.Reflection.Assembly)">
          <source>Before you make a call to the <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.Refresh%2A&gt;</ph> method to clear the cache, you need to call the <ph id="ph2">&lt;xref:System.ComponentModel.TypeDescriptor.GetProperties%2A&gt;</ph> method for the specific assembly to cache the information first.</source>
          <target state="translated">Vor einem Aufruf der <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.Refresh%2A&gt;</ph> Methode, um den Cache zu leeren aufrufen, müssen Sie die <ph id="ph2">&lt;xref:System.ComponentModel.TypeDescriptor.GetProperties%2A&gt;</ph> Methode für die spezielle Assembly, um die Informationen zunächst im cache.</target>       </trans-unit>
        <trans-unit id="690" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.Refresh(System.Reflection.Assembly)">
          <source>This method also raises a <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.Refreshed&gt;</ph> event to notify all classes that want to be notified when the property set of a component changes.</source>
          <target state="translated">Diese Methode löst auch ein <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.Refreshed&gt;</ph> Ereignis, um alle Klassen zu informieren, die benachrichtigt werden, wenn einer Komponente ändert die Eigenschaft festgelegt werden soll.</target>       </trans-unit>
        <trans-unit id="691" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.Refresh(System.Reflection.Module)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Reflection.Module" /&gt;</ph> that represents the module to refresh.</source>
          <target state="translated">Das <ph id="ph1">&lt;see cref="T:System.Reflection.Module" /&gt;</ph>, das das zu aktualisierende Modul darstellt.</target>       </trans-unit>
        <trans-unit id="692" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.Refresh(System.Reflection.Module)">
          <source>Each <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> in this module will be refreshed.</source>
          <target state="translated">Jeder <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> in diesem Modul wird aktualisiert.</target>       </trans-unit>
        <trans-unit id="693" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.Refresh(System.Reflection.Module)">
          <source>Clears the properties and events for the specified module from the cache.</source>
          <target state="translated">Löscht die Eigenschaften und Ereignisse für das angegebene Modul aus dem Cache.</target>       </trans-unit>
        <trans-unit id="694" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.Refresh(System.Reflection.Module)">
          <source>Properties and events are cached by <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph> for speed.</source>
          <target state="translated">Eigenschaften und Ereignisse werden von zwischengespeichert <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph> für Geschwindigkeit.</target>       </trans-unit>
        <trans-unit id="695" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.Refresh(System.Reflection.Module)">
          <source>Typically, they are constant for the lifetime of an object.</source>
          <target state="translated">In der Regel sind sie für die Lebensdauer eines Objekts konstant.</target>       </trans-unit>
        <trans-unit id="696" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.Refresh(System.Reflection.Module)">
          <source>However, extender providers and designers can change the set of properties on an object.</source>
          <target state="translated">Extenderanbieter und Designer können jedoch den Satz von Eigenschaften für ein Objekt ändern.</target>       </trans-unit>
        <trans-unit id="697" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.Refresh(System.Reflection.Module)">
          <source>If they do, they can call this method to clear the property and event descriptors of the object.</source>
          <target state="translated">Wenn dies der Fall ist, können sie diese Methode, um die Eigenschaften- und Ereignisdeskriptoren des Objekts deaktivieren aufrufen.</target>       </trans-unit>
        <trans-unit id="698" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.Refresh(System.Reflection.Module)">
          <source>This method is used only at design time.</source>
          <target state="translated">Diese Methode wird nur zur Entwurfszeit verwendet.</target>       </trans-unit>
        <trans-unit id="699" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.Refresh(System.Reflection.Module)">
          <source>It is not used during run time.</source>
          <target state="translated">Er wird während der Laufzeit nicht verwendet.</target>       </trans-unit>
        <trans-unit id="700" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.Refresh(System.Reflection.Module)">
          <source>Before you make a call to the <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.Refresh%2A&gt;</ph> method to clear the cache, you need to call the <ph id="ph2">&lt;xref:System.ComponentModel.TypeDescriptor.GetProperties%2A&gt;</ph> method for the specific module to cache the information first.</source>
          <target state="translated">Vor einem Aufruf der <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.Refresh%2A&gt;</ph> Methode, um den Cache zu leeren aufrufen, müssen Sie die <ph id="ph2">&lt;xref:System.ComponentModel.TypeDescriptor.GetProperties%2A&gt;</ph> Methode für das angegebene Modul, um die Informationen zunächst im cache.</target>       </trans-unit>
        <trans-unit id="701" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.Refresh(System.Reflection.Module)">
          <source>This method also raises a <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.Refreshed&gt;</ph> event to notify all classes that want to be notified when the property set of a component changes.</source>
          <target state="translated">Diese Methode löst auch ein <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.Refreshed&gt;</ph> Ereignis, um alle Klassen zu informieren, die benachrichtigt werden, wenn einer Komponente ändert die Eigenschaft festgelegt werden soll.</target>       </trans-unit>
        <trans-unit id="702" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.Refresh(System.Type)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> of the target component.</source>
          <target state="translated">Der <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> der Zielkomponente.</target>       </trans-unit>
        <trans-unit id="703" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.Refresh(System.Type)">
          <source>Clears the properties and events for the specified type of component from the cache.</source>
          <target state="translated">Löscht die Eigenschaften und Ereignisse für die angegebene Art von Komponente aus dem Cache.</target>       </trans-unit>
        <trans-unit id="704" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.Refresh(System.Type)">
          <source>Call this version of this method only when you do not have an instance of the object.</source>
          <target state="translated">Rufen Sie diese Version dieser Methode, nur, wenn Sie nicht über eine Instanz des Objekts verfügen.</target>       </trans-unit>
        <trans-unit id="705" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.Refresh(System.Type)">
          <source>Properties and events are cached by <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph> for speed.</source>
          <target state="translated">Eigenschaften und Ereignisse werden von zwischengespeichert <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph> für Geschwindigkeit.</target>       </trans-unit>
        <trans-unit id="706" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.Refresh(System.Type)">
          <source>Typically, they are constant for the lifetime of an object.</source>
          <target state="translated">In der Regel sind sie für die Lebensdauer eines Objekts konstant.</target>       </trans-unit>
        <trans-unit id="707" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.Refresh(System.Type)">
          <source>However, extender providers and designers can change the set of properties on an object.</source>
          <target state="translated">Extenderanbieter und Designer können jedoch den Satz von Eigenschaften für ein Objekt ändern.</target>       </trans-unit>
        <trans-unit id="708" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.Refresh(System.Type)">
          <source>If they do, they can call this method to clear the property and event descriptors of the object.</source>
          <target state="translated">Wenn dies der Fall ist, können sie diese Methode, um die Eigenschaften- und Ereignisdeskriptoren des Objekts deaktivieren aufrufen.</target>       </trans-unit>
        <trans-unit id="709" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.Refresh(System.Type)">
          <source>This method is used only at design time.</source>
          <target state="translated">Diese Methode wird nur zur Entwurfszeit verwendet.</target>       </trans-unit>
        <trans-unit id="710" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.Refresh(System.Type)">
          <source>It is not used during run time.</source>
          <target state="translated">Er wird während der Laufzeit nicht verwendet.</target>       </trans-unit>
        <trans-unit id="711" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.Refresh(System.Type)">
          <source>This method also raises a <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.Refreshed&gt;</ph> event when the properties or events of a component change.</source>
          <target state="translated">Diese Methode löst auch ein <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.Refreshed&gt;</ph> Ereignis aus, wenn die Eigenschaften oder Ereignisse einer Komponente ändern.</target>       </trans-unit>
        <trans-unit id="712" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.Refresh(System.Type)">
          <source>This event is only raised if there was a prior call to the <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.GetProperties%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.ComponentModel.TypeDescriptor.GetEvents%2A&gt;</ph> method that cached the information.</source>
          <target state="translated">Dieses Ereignis wird nur ausgelöst, wenn es wurde von ein vorheriger Aufruf für die <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.GetProperties%2A&gt;</ph> oder <ph id="ph2">&lt;xref:System.ComponentModel.TypeDescriptor.GetEvents%2A&gt;</ph> -Methode, die die Informationen aus dem Cache.</target>       </trans-unit>
        <trans-unit id="713" translate="yes" xml:space="preserve" uid="E:System.ComponentModel.TypeDescriptor.Refreshed">
          <source>Occurs when the cache for a component is cleared.</source>
          <target state="translated">Tritt auf, wenn der Cache für eine Komponente gelöscht wird.</target>       </trans-unit>
        <trans-unit id="714" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.ComponentModel.TypeDescriptor.Refreshed">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">Weitere Informationen zur Behandlung von Ereignissen finden Sie unter <bpt id="p1">[</bpt>NIB: Behandeln von Ereignissen<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</target>       </trans-unit>
        <trans-unit id="715" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.ComponentModel.TypeDescriptor.Refreshed">
          <source>For an example of using this event, see the <ph id="ph1">&lt;xref:System.ComponentModel.RefreshEventHandler&gt;</ph> class.</source>
          <target state="translated">Ein Beispiel für die Verwendung dieses Ereignisses, finden Sie unter der <ph id="ph1">&lt;xref:System.ComponentModel.RefreshEventHandler&gt;</ph> Klasse.</target>       </trans-unit>
        <trans-unit id="716" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.RemoveAssociation(System.Object,System.Object)">
          <source>The primary <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph>.</source>
          <target state="translated">Das primäre <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="717" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.RemoveAssociation(System.Object,System.Object)">
          <source>The secondary <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph>.</source>
          <target state="translated">Das sekundäre <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="718" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.RemoveAssociation(System.Object,System.Object)">
          <source>Removes an association between two objects.</source>
          <target state="translated">Entfernt eine Zuordnung zwischen zwei Objekten.</target>       </trans-unit>
        <trans-unit id="719" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.RemoveAssociation(System.Object,System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.RemoveAssociation%2A&gt;</ph> method removes an association between two objects formed by the <ph id="ph2">&lt;xref:System.ComponentModel.TypeDescriptor.CreateAssociation%2A&gt;</ph> method.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.RemoveAssociation%2A&gt;</ph> -Methode entfernt eine Zuordnung zwischen zwei Objekten gebildet, indem die <ph id="ph2">&lt;xref:System.ComponentModel.TypeDescriptor.CreateAssociation%2A&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="720" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.RemoveAssociation(System.Object,System.Object)">
          <source>A <ph id="ph1">&lt;xref:System.WeakReference&gt;</ph> is used to maintain the association between the primary and secondary object; therefore, this method does not influence when either object is finalized or reclaimed by garbage collection.</source>
          <target state="translated">Ein <ph id="ph1">&lt;xref:System.WeakReference&gt;</ph> wird verwendet, um die Zuordnung zwischen dem primären und sekundären Objekt verwalten; daher, diese Methode hat keinen Einfluss, wenn entweder Objekt abgeschlossen oder von der Garbagecollection freigegeben wird.</target>       </trans-unit>
        <trans-unit id="721" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.RemoveAssociation(System.Object,System.Object)">
          <source>One or both of the parameters are <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Ein oder beide Parameter sind <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="722" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.RemoveAssociation(System.Object,System.Object)">
          <source>for full access to system resources.</source>
          <target state="translated">für Vollzugriff auf Systemressourcen verfügbar sind.</target>       </trans-unit>
        <trans-unit id="723" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.RemoveAssociation(System.Object,System.Object)">
          <source>Demand value: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph>.</source>
          <target state="translated">"Demand"-Wert: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="724" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.RemoveAssociation(System.Object,System.Object)">
          <source>Associated state:</source>
          <target state="translated">Zugeordneten Zustand:</target>       </trans-unit>
        <trans-unit id="725" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.RemoveAssociations(System.Object)">
          <source>The primary <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> in an association.</source>
          <target state="translated">Das primäre <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> in einer Zuordnung.</target>       </trans-unit>
        <trans-unit id="726" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.RemoveAssociations(System.Object)">
          <source>Removes all associations for a primary object.</source>
          <target state="translated">Entfernt alle Zuordnungen für ein primäres Objekt.</target>       </trans-unit>
        <trans-unit id="727" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.RemoveAssociations(System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.RemoveAssociations%2A&gt;</ph> method removes all associations between a primary object and all of its secondary objects, created by calls to the <ph id="ph2">&lt;xref:System.ComponentModel.TypeDescriptor.CreateAssociation%2A&gt;</ph> method.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.RemoveAssociations%2A&gt;</ph> -Methode entfernt alle Zuordnungen zwischen einem primären Objekt und alle seine sekundären Objekte, erstellt durch Aufrufe der <ph id="ph2">&lt;xref:System.ComponentModel.TypeDescriptor.CreateAssociation%2A&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="728" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.RemoveAssociations(System.Object)">
          <source>A <ph id="ph1">&lt;xref:System.WeakReference&gt;</ph> is used to maintain the association between the primary and secondary object; therefore, this method does not influence when either the primary of secondary objects are finalized or reclaimed by garbage collection.</source>
          <target state="translated">Ein <ph id="ph1">&lt;xref:System.WeakReference&gt;</ph> wird verwendet, um verwalten die Zuordnung zwischen dem primären und sekundären Objekt; daher, diese Methode hat keinen Einfluss Wenn entweder das primäre sekundäre Objekte abgeschlossen sind oder von der Garbagecollection wieder zugänglich gemacht wird.</target>       </trans-unit>
        <trans-unit id="729" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.RemoveAssociations(System.Object)">
          <source><ph id="ph1">&lt;paramref name="primary" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="primary" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="730" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.RemoveAssociations(System.Object)">
          <source>for full access to system resources.</source>
          <target state="translated">für Vollzugriff auf Systemressourcen verfügbar sind.</target>       </trans-unit>
        <trans-unit id="731" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.RemoveAssociations(System.Object)">
          <source>Demand value: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph>.</source>
          <target state="translated">"Demand"-Wert: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="732" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.RemoveAssociations(System.Object)">
          <source>Associated state:</source>
          <target state="translated">Zugeordneten Zustand:</target>       </trans-unit>
        <trans-unit id="733" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.TypeDescriptor">
          <source>Removes a previously added type description provider.</source>
          <target state="translated">Entfernt einen zuvor hinzugefügten Typbeschreibungsanbieter.</target>       </trans-unit>
        <trans-unit id="734" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.RemoveProvider(System.ComponentModel.TypeDescriptionProvider,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeDescriptionProvider" /&gt;</ph> to remove.</source>
          <target state="translated">Das zu entfernende <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeDescriptionProvider" /&gt;</ph>-Element.</target>       </trans-unit>
        <trans-unit id="735" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.RemoveProvider(System.ComponentModel.TypeDescriptionProvider,System.Object)">
          <source>An instance of the target component.</source>
          <target state="translated">Eine Instanz der Zielkomponente.</target>       </trans-unit>
        <trans-unit id="736" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.RemoveProvider(System.ComponentModel.TypeDescriptionProvider,System.Object)">
          <source>Removes a previously added type description provider that is associated with the specified object.</source>
          <target state="translated">Entfernt einen zuvor hinzugefügten Typbeschreibungsanbieter, der dem angegebenen Objekt zugeordnet ist.</target>       </trans-unit>
        <trans-unit id="737" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.RemoveProvider(System.ComponentModel.TypeDescriptionProvider,System.Object)">
          <source>This method removes a type description provider previously added with the <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29&gt;</ph> method.</source>
          <target state="translated">Diese Methode entfernt einen Typbeschreibungsanbieter, der zuvor hinzugefügt haben, mit der <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="738" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.RemoveProvider(System.ComponentModel.TypeDescriptionProvider,System.Object)">
          <source>Removing a provider causes a <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.Refreshed&gt;</ph> event to be raised for the associated object.</source>
          <target state="translated">Entfernen eines Anbieters bewirkt, dass eine <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.Refreshed&gt;</ph> -Ereignis für das zugeordnete Objekt ausgelöst werden.</target>       </trans-unit>
        <trans-unit id="739" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.RemoveProvider(System.ComponentModel.TypeDescriptionProvider,System.Object)">
          <source>Use the <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.RemoveProviderTransparent%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29&gt;</ph> method if you need to call from partially trusted code.</source>
          <target state="translated">Verwenden der <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.RemoveProviderTransparent%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29&gt;</ph> Methode von teilweise vertrauenswürdigem Code aufgerufen werden sollen.</target>       </trans-unit>
        <trans-unit id="740" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.RemoveProvider(System.ComponentModel.TypeDescriptionProvider,System.Object)">
          <source>One or both of the parameters are <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Ein oder beide Parameter sind <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="741" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.RemoveProvider(System.ComponentModel.TypeDescriptionProvider,System.Object)">
          <source>for full access to system resources.</source>
          <target state="translated">für Vollzugriff auf Systemressourcen verfügbar sind.</target>       </trans-unit>
        <trans-unit id="742" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.RemoveProvider(System.ComponentModel.TypeDescriptionProvider,System.Object)">
          <source>Demand value: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph>.</source>
          <target state="translated">"Demand"-Wert: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="743" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.RemoveProvider(System.ComponentModel.TypeDescriptionProvider,System.Object)">
          <source>Associated state:</source>
          <target state="translated">Zugeordneten Zustand:</target>       </trans-unit>
        <trans-unit id="744" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.RemoveProvider(System.ComponentModel.TypeDescriptionProvider,System.Type)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeDescriptionProvider" /&gt;</ph> to remove.</source>
          <target state="translated">Das zu entfernende <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeDescriptionProvider" /&gt;</ph>-Element.</target>       </trans-unit>
        <trans-unit id="745" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.RemoveProvider(System.ComponentModel.TypeDescriptionProvider,System.Type)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> of the target component.</source>
          <target state="translated">Der <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> der Zielkomponente.</target>       </trans-unit>
        <trans-unit id="746" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.RemoveProvider(System.ComponentModel.TypeDescriptionProvider,System.Type)">
          <source>Removes a previously added type description provider that is associated with the specified type.</source>
          <target state="translated">Entfernt einen zuvor hinzugefügten Typbeschreibungsanbieter, der dem angegebenen Typ zugeordnet ist.</target>       </trans-unit>
        <trans-unit id="747" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.RemoveProvider(System.ComponentModel.TypeDescriptionProvider,System.Type)">
          <source>This method removes a type description provider previously added with the <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29&gt;</ph> method.</source>
          <target state="translated">Diese Methode entfernt einen Typbeschreibungsanbieter, der zuvor hinzugefügt haben, mit der <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="748" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.RemoveProvider(System.ComponentModel.TypeDescriptionProvider,System.Type)">
          <source>Removing a provider causes a <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.Refreshed&gt;</ph> event to be raised for the associated type.</source>
          <target state="translated">Entfernen eines Anbieters bewirkt, dass ein <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.Refreshed&gt;</ph> Ereignis für den zugeordneten Typ ausgelöst werden soll.</target>       </trans-unit>
        <trans-unit id="749" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.RemoveProvider(System.ComponentModel.TypeDescriptionProvider,System.Type)">
          <source>Use the <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.RemoveProviderTransparent%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29&gt;</ph> method if you need to call from partially trusted code.</source>
          <target state="translated">Verwenden der <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.RemoveProviderTransparent%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29&gt;</ph> Methode von teilweise vertrauenswürdigem Code aufgerufen werden sollen.</target>       </trans-unit>
        <trans-unit id="750" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.RemoveProvider(System.ComponentModel.TypeDescriptionProvider,System.Type)">
          <source>One or both of the parameters are <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Ein oder beide Parameter sind <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="751" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.RemoveProvider(System.ComponentModel.TypeDescriptionProvider,System.Type)">
          <source>for full access to system resources.</source>
          <target state="translated">für Vollzugriff auf Systemressourcen verfügbar sind.</target>       </trans-unit>
        <trans-unit id="752" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.RemoveProvider(System.ComponentModel.TypeDescriptionProvider,System.Type)">
          <source>Demand value: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph>.</source>
          <target state="translated">"Demand"-Wert: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="753" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.RemoveProvider(System.ComponentModel.TypeDescriptionProvider,System.Type)">
          <source>Associated state:</source>
          <target state="translated">Zugeordneten Zustand:</target>       </trans-unit>
        <trans-unit id="754" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.TypeDescriptor">
          <source>Removes a previously added type description provider.</source>
          <target state="translated">Entfernt einen zuvor hinzugefügten Typbeschreibungsanbieter.</target>       </trans-unit>
        <trans-unit id="755" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.RemoveProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeDescriptionProvider" /&gt;</ph> to remove.</source>
          <target state="translated">Das zu entfernende <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeDescriptionProvider" /&gt;</ph>-Element.</target>       </trans-unit>
        <trans-unit id="756" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.RemoveProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Object)">
          <source>An instance of the target component.</source>
          <target state="translated">Eine Instanz der Zielkomponente.</target>       </trans-unit>
        <trans-unit id="757" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.RemoveProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Object)">
          <source>Removes a previously added type description provider that is associated with the specified object.</source>
          <target state="translated">Entfernt einen zuvor hinzugefügten Typbeschreibungsanbieter, der dem angegebenen Objekt zugeordnet ist.</target>       </trans-unit>
        <trans-unit id="758" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.RemoveProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Object)">
          <source>This method removes a type description provider previously added with the <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29&gt;</ph> method.</source>
          <target state="translated">Diese Methode entfernt einen Typbeschreibungsanbieter, der zuvor hinzugefügt haben, mit der <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="759" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.RemoveProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Object)">
          <source>Removing a provider causes a <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.Refreshed&gt;</ph> event to be raised for the associated object.</source>
          <target state="translated">Entfernen eines Anbieters bewirkt, dass eine <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.Refreshed&gt;</ph> -Ereignis für das zugeordnete Objekt ausgelöst werden.</target>       </trans-unit>
        <trans-unit id="760" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.RemoveProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Object)">
          <source>This method can be called from partially trusted code.</source>
          <target state="translated">Diese Methode kann von teilweise vertrauenswürdigem Code aufgerufen werden.</target>       </trans-unit>
        <trans-unit id="761" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.RemoveProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Object)">
          <source>If <ph id="ph1">&lt;xref:System.Security.Permissions.TypeDescriptorPermissionFlags.RestrictedRegistrationAccess&gt;</ph> is defined, the caller can register a provider for the specified instance if its type is also partially trusted.</source>
          <target state="translated">Wenn <ph id="ph1">&lt;xref:System.Security.Permissions.TypeDescriptorPermissionFlags.RestrictedRegistrationAccess&gt;</ph> wird definiert, kann der Aufrufer einen Anbieter für die angegebene Instanz registrieren, wenn dessen Typ auch teilweise vertrauenswürdig ist.</target>       </trans-unit>
        <trans-unit id="762" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.RemoveProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Object)">
          <source>Use the <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.RemoveProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29&gt;</ph> method if you do not need to call from partially trusted code.</source>
          <target state="translated">Verwenden der <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.RemoveProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29&gt;</ph> Methode, wenn Sie nicht von teilweise vertrauenswürdigem Code aufgerufen werden müssen.</target>       </trans-unit>
        <trans-unit id="763" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.RemoveProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Object)">
          <source>One or both of the parameters are <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Ein oder beide Parameter sind <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="764" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.RemoveProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Object)">
          <source>For registry access.</source>
          <target state="translated">Für den Zugriff auf die Registrierung.</target>       </trans-unit>
        <trans-unit id="765" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.RemoveProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Object)">
          <source>Security action: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.Demand" /&gt;</ph>.</source>
          <target state="translated">Sicherheitsaktion: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.Demand" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="766" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.RemoveProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Object)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.TypeDescriptorPermissionFlags.RestrictedRegistrationAccess" /&gt;</ph></source>
          <target state="translated">Zugeordnete Enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.TypeDescriptorPermissionFlags.RestrictedRegistrationAccess" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="767" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.RemoveProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Object)">
          <source>Security action: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.Demand" /&gt;</ph>.</source>
          <target state="translated">Sicherheitsaktion: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.Demand" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="768" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.RemoveProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Object)">
          <source>Associated type: The <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph> that is required by the assembly that defines the <ph id="ph2">&lt;paramref name="instance" /&gt;</ph> parameter's type.</source>
          <target state="translated">Zugeordneter Typ: die <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph> , verlangt der Assembly, definiert die <ph id="ph2">&lt;paramref name="instance" /&gt;</ph> Typ des Parameters.</target>       </trans-unit>
        <trans-unit id="769" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.RemoveProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Type)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeDescriptionProvider" /&gt;</ph> to remove.</source>
          <target state="translated">Das zu entfernende <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeDescriptionProvider" /&gt;</ph>-Element.</target>       </trans-unit>
        <trans-unit id="770" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.RemoveProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Type)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> of the target component.</source>
          <target state="translated">Der <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> der Zielkomponente.</target>       </trans-unit>
        <trans-unit id="771" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.RemoveProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Type)">
          <source>Removes a previously added type description provider that is associated with the specified type.</source>
          <target state="translated">Entfernt einen zuvor hinzugefügten Typbeschreibungsanbieter, der dem angegebenen Typ zugeordnet ist.</target>       </trans-unit>
        <trans-unit id="772" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.RemoveProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Type)">
          <source>This method removes a type description provider previously added with the <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29&gt;</ph> method.</source>
          <target state="translated">Diese Methode entfernt einen Typbeschreibungsanbieter, der zuvor hinzugefügt haben, mit der <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="773" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.RemoveProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Type)">
          <source>Removing a provider causes a <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.Refreshed&gt;</ph> event to be raised for the associated type.</source>
          <target state="translated">Entfernen eines Anbieters bewirkt, dass ein <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.Refreshed&gt;</ph> Ereignis für den zugeordneten Typ ausgelöst werden soll.</target>       </trans-unit>
        <trans-unit id="774" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.RemoveProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Type)">
          <source>This method can be called from partially trusted code.</source>
          <target state="translated">Diese Methode kann von teilweise vertrauenswürdigem Code aufgerufen werden.</target>       </trans-unit>
        <trans-unit id="775" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.RemoveProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Type)">
          <source>If <ph id="ph1">&lt;xref:System.Security.Permissions.TypeDescriptorPermissionFlags.RestrictedRegistrationAccess&gt;</ph> is defined, the caller can unregister a provider for the specified type if it is also partially trusted.</source>
          <target state="translated">Wenn <ph id="ph1">&lt;xref:System.Security.Permissions.TypeDescriptorPermissionFlags.RestrictedRegistrationAccess&gt;</ph> wird definiert, der Aufrufer kann heben Sie die Registrierung eines Anbieters für den angegebenen Typ dieser auch teilweise vertrauenswürdig ist.</target>       </trans-unit>
        <trans-unit id="776" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.RemoveProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Type)">
          <source>Use the <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.RemoveProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29&gt;</ph> method if you do not need to call from partially trusted code.</source>
          <target state="translated">Verwenden der <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.RemoveProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29&gt;</ph> Methode, wenn Sie nicht von teilweise vertrauenswürdigem Code aufgerufen werden müssen.</target>       </trans-unit>
        <trans-unit id="777" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.RemoveProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Type)">
          <source>One or both of the parameters are <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Ein oder beide Parameter sind <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="778" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.RemoveProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Type)">
          <source>For registry access.</source>
          <target state="translated">Für den Zugriff auf die Registrierung.</target>       </trans-unit>
        <trans-unit id="779" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.RemoveProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Type)">
          <source>Security action: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.Demand" /&gt;</ph>.</source>
          <target state="translated">Sicherheitsaktion: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.Demand" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="780" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.RemoveProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Type)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.TypeDescriptorPermissionFlags.RestrictedRegistrationAccess" /&gt;</ph></source>
          <target state="translated">Zugeordnete Enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.TypeDescriptorPermissionFlags.RestrictedRegistrationAccess" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="781" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.RemoveProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Type)">
          <source>Security action: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.Demand" /&gt;</ph>.</source>
          <target state="translated">Sicherheitsaktion: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.Demand" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="782" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptor.RemoveProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Type)">
          <source>Associated type: The <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph> that is required by the assembly that defines <ph id="ph2">&lt;paramref name="type" /&gt;</ph>.</source>
          <target state="translated">Zugeordneter Typ: die <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph> , verlangt der Assembly, die definiert <ph id="ph2">&lt;paramref name="type" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="783" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.SortDescriptorArray(System.Collections.IList)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.IList" /&gt;</ph> that contains the descriptors to sort.</source>
          <target state="translated">Eine <ph id="ph1">&lt;see cref="T:System.Collections.IList" /&gt;</ph> mit den zu sortierenden Deskriptoren.</target>       </trans-unit>
        <trans-unit id="784" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.SortDescriptorArray(System.Collections.IList)">
          <source>Sorts descriptors using the name of the descriptor.</source>
          <target state="translated">Sortiert Deskriptoren anhand der Namen der Deskriptoren.</target>       </trans-unit>
        <trans-unit id="785" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptor.SortDescriptorArray(System.Collections.IList)">
          <source><ph id="ph1">&lt;paramref name="infos" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="infos" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>