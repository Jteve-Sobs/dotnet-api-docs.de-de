<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="TypeConverter.xml" source-language="en-US" target-language="de-DE">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac529784c7bb8db50596e86f55caea973624c84e3d4.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">29784c7bb8db50596e86f55caea973624c84e3d4</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.TypeConverter">
          <source>Provides a unified way of converting types of values to other types, as well as for accessing standard values and subproperties.</source>
          <target state="translated">Stellt eine einheitliche Methode zum Konvertieren von Werttypen in andere Typen sowie zum Zugreifen auf Standardwerte und Untereigenschaften bereit.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.TypeConverter">
          <source>The most common type of converter is one that converts to and from a text representation.</source>
          <target state="translated">Die am häufigsten verwendete Typ der Konverter ist eine, die in und aus einem Textdarstellung konvertiert.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.TypeConverter">
          <source>The type converter for a class is bound to the class with a <ph id="ph1">&lt;xref:System.ComponentModel.TypeConverterAttribute&gt;</ph>.</source>
          <target state="translated">Der Typkonverter für eine Klasse gebunden ist, auf die Klasse mit einem <ph id="ph1">&lt;xref:System.ComponentModel.TypeConverterAttribute&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.TypeConverter">
          <source>Unless this attribute is overridden, all classes that inherit from this class use the same type converter as the base class.</source>
          <target state="translated">Wenn dieses Attribut überschrieben wird, verwenden alle Klassen, die von dieser Klasse erben den gleichen Typkonverter als Basisklasse an.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.TypeConverter">
          <source>For general type system purposes, do not access a type converter directly.</source>
          <target state="translated">Für Systemzwecke für Typ "Allgemein" nicht auf einen Typkonverter direkt.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.TypeConverter">
          <source>Instead, access the appropriate converter by using <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph>.</source>
          <target state="translated">Stattdessen Zugriff auf den entsprechenden Konverter mit <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.TypeConverter">
          <source>For more information, see the code examples provided.</source>
          <target state="translated">Weitere Informationen finden Sie unter die bereitgestellten Codebeispiele.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.TypeConverter">
          <source><bpt id="p1">**</bpt>Note<ept id="p1">**</ept> For XAML purposes, a XAML processor searches for the <ph id="ph1">&lt;xref:System.ComponentModel.TypeConverterAttribute&gt;</ph> directly, instead of going through <ph id="ph2">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph>.</source>
          <target state="translated"><bpt id="p1">**</bpt>Hinweis<ept id="p1">**</ept> für XAML-Zwecke ist ein XAML-Prozessor sucht nach der <ph id="ph1">&lt;xref:System.ComponentModel.TypeConverterAttribute&gt;</ph> direkt, anstatt durchlaufen <ph id="ph2">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.TypeConverter">
          <source>For cases where you do want a <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph> instance from code, or where you create a shared instance in WPF resources, it is acceptable to construct it directly without referencing <ph id="ph2">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph> or other reflection and type system support.</source>
          <target state="translated">Für Fälle, in denen Sie möchten, eine <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph> -Instanz von Code oder, in dem Sie eine freigegebene Instanz in WPF erstellen Ressourcen, es ist zulässig, erstellen Sie es direkt ohne Verweis auf <ph id="ph2">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph> oder andere Verwendungen von Reflektion und Typ-System zu unterstützen.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.TypeConverter">
          <source>Classes derived from <ph id="ph1">&lt;xref:System.ComponentModel.TypeConverter&gt;</ph> are often referenced as part of how a XAML processor converts an attribute or initialization text value from markup (which is inherently a string) and generates an object for a run-time representation.</source>
          <target state="translated">Abgeleitete Klassen von <ph id="ph1">&lt;xref:System.ComponentModel.TypeConverter&gt;</ph> verwiesen wird häufig als Teil der wie ein XAML-Prozessor einen Textwert Attribut- oder Initialisierung von Markup konvertiert (d. h. grundsätzlich eine Zeichenfolge) und generiert ein Objekt für eine Laufzeit-Darstellung.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.TypeConverter">
          <source>Custom type authors that intend to support a type conversion behavior for XAML typically implement a <ph id="ph1">&lt;xref:System.ComponentModel.TypeConverter&gt;</ph> class that supports their own unique <ph id="ph2">`ConvertFrom`</ph> behavior from a string.</source>
          <target state="translated">Implementieren von benutzerdefinierten Autoren, die in der Regel ein typkonvertierungsverhaltens für XAML unterstützen möchten eine <ph id="ph1">&lt;xref:System.ComponentModel.TypeConverter&gt;</ph> Klasse, die ihren eigenen eindeutigen unterstützt <ph id="ph2">`ConvertFrom`</ph> Verhalten aus einer Zeichenfolge.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.TypeConverter">
          <source>This behavior enables type conversion from the string provided as a XAML attribute value and provides a XAML processor with the support needed to create an object from the string, so that the object can be produced in a parsed object graph.</source>
          <target state="translated">Dieses Verhalten ermöglicht die typkonvertierung aus der Zeichenfolge, die als XAML-Attributwert angegeben und stellt einen XAML-Prozessor mit Unterstützung erforderlich, um ein Objekt aus der Zeichenfolge zu erstellen, damit das Objekt in einem Objektdiagramm analysierte gefertigt werden kann.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.TypeConverter">
          <source>Custom types or members of custom types are indicated by applying <ph id="ph1">&lt;xref:System.ComponentModel.TypeConverterAttribute&gt;</ph> to the definitions, with the attribute referencing the custom <ph id="ph2">&lt;xref:System.ComponentModel.TypeConverter&gt;</ph> implementation.</source>
          <target state="translated">Benutzerdefinierte Typen oder Member von benutzerdefinierten Typen werden durch Anwenden von angegeben <ph id="ph1">&lt;xref:System.ComponentModel.TypeConverterAttribute&gt;</ph> verweisen auf Definitionen, mit dem Attribut auf die benutzerdefinierte <ph id="ph2">&lt;xref:System.ComponentModel.TypeConverter&gt;</ph> Implementierung.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.TypeConverter">
          <source>For more information, see <bpt id="p1">[</bpt>Type Converters for XAML Overview<ept id="p1">](~/docs/framework/xaml-services/type-converters-for-xaml-overview.md)</ept>.</source>
          <target state="translated">Weitere Informationen finden Sie unter <bpt id="p1">[</bpt>Typkonverter für XAML-Übersicht<ept id="p1">](~/docs/framework/xaml-services/type-converters-for-xaml-overview.md)</ept>.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.TypeConverter">
          <source>The following code example shows how to create an instance of a type converter and bind it to a class.</source>
          <target state="translated">Im folgenden Codebeispiel wird veranschaulicht, wie eine Instanz eines Typkonverters erstellen und binden es auf eine Klasse.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.TypeConverter">
          <source>The class implementing the converter, <ph id="ph1">`MyClassConverter`</ph>, must inherit from the <ph id="ph2">&lt;xref:System.ComponentModel.TypeConverter&gt;</ph> class.</source>
          <target state="translated">Die Klasse zur Implementierung des Konverters <ph id="ph1">`MyClassConverter`</ph>, müssen von erben die <ph id="ph2">&lt;xref:System.ComponentModel.TypeConverter&gt;</ph> Klasse.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.TypeConverter">
          <source>When you have a property that has an enumeration, check to see whether an enumeration value is valid before setting the property.</source>
          <target state="translated">Überprüfen Sie bei einer Eigenschaft, die eine Enumeration verfügt, um festzustellen, ob ein Enumerationswert gültig ist, bevor Sie die Eigenschaft festlegen.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.TypeConverter">
          <source>The next code example requires that an enumeration called <ph id="ph1">`MyPropertyEnum`</ph> has been declared.</source>
          <target state="translated">Das nächste Codebeispiel erfordert, dass eine Enumeration namens <ph id="ph1">`MyPropertyEnum`</ph> deklariert wurde.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.TypeConverter">
          <source>Another common type converter usage is to convert an object to a string.</source>
          <target state="translated">Eine andere häufige Typkonverterverwendung ist ein Objekt in eine Zeichenfolge zu konvertieren.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.TypeConverter">
          <source>The following code example prints out the name of the <ph id="ph1">&lt;xref:System.Drawing.Color&gt;</ph> stored in the variable <ph id="ph2">`c`</ph>.</source>
          <target state="translated">Das folgende Codebeispiel gibt den Namen des der <ph id="ph1">&lt;xref:System.Drawing.Color&gt;</ph> in der Variablen gespeicherte <ph id="ph2">`c`</ph>.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.TypeConverter">
          <source>You can also use a type converter to convert a value from its name, as shown in the next code example.</source>
          <target state="translated">Sie können auch einen Typkonverter verwenden Konvertieren eines Werts aus dem Namen wie im nächsten Codebeispiel gezeigt.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.TypeConverter">
          <source>In the following code example, you can use a type converter to print out the set of standard values that the object supports.</source>
          <target state="translated">Im folgenden Codebeispiel können Sie einen Typkonverter verwenden, um den Satz von Standardwerten auszugeben, die das Objekt unterstützt.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.TypeConverter">
          <source>Inherit from <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeConverter" /&gt;</ph> to implement your own conversion requirements.</source>
          <target state="translated">Erben von <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeConverter" /&gt;</ph> um eigene konvertierungsanforderungen zu implementieren.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.TypeConverter">
          <source>When you inherit from this class, you can override the following methods:</source>
          <target state="translated">Wenn Sie von dieser Klasse erben, können Sie die folgenden Methoden überschreiben:</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.TypeConverter">
          <source>To support custom type conversion, override the <ph id="ph1">&lt;see cref="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)" /&gt;</ph>, <ph id="ph2">&lt;see cref="M:System.ComponentModel.TypeConverter.CanConvertTo(System.Type)" /&gt;</ph>, <ph id="ph3">&lt;see cref="M:System.ComponentModel.TypeConverter.ConvertFrom(System.Object)" /&gt;</ph>, and <ph id="ph4">&lt;see cref="M:System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)" /&gt;</ph> methods.</source>
          <target state="translated">Um benutzerdefinierte Konvertierung zu unterstützen, überschreiben die <ph id="ph1">&lt;see cref="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)" /&gt;</ph>, <ph id="ph2">&lt;see cref="M:System.ComponentModel.TypeConverter.CanConvertTo(System.Type)" /&gt;</ph>, <ph id="ph3">&lt;see cref="M:System.ComponentModel.TypeConverter.ConvertFrom(System.Object)" /&gt;</ph>, und <ph id="ph4">&lt;see cref="M:System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)" /&gt;</ph> Methoden.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.TypeConverter">
          <source>To convert types that must re-create the object to change its value, override the <ph id="ph1">&lt;see cref="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" /&gt;</ph> and <ph id="ph2">&lt;see cref="M:System.ComponentModel.TypeConverter.GetCreateInstanceSupported" /&gt;</ph> methods.</source>
          <target state="translated">Zum Konvertieren von Typen, die das Objekt zum Ändern seines Werts neu erstellen müssen, überschreiben die <ph id="ph1">&lt;see cref="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" /&gt;</ph> und <ph id="ph2">&lt;see cref="M:System.ComponentModel.TypeConverter.GetCreateInstanceSupported" /&gt;</ph> Methoden.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.TypeConverter">
          <source>To convert types that support properties, override the <ph id="ph1">&lt;see cref="M:System.ComponentModel.TypeConverter.GetProperties(System.Object)" /&gt;</ph> and <ph id="ph2">&lt;see cref="M:System.ComponentModel.TypeConverter.GetPropertiesSupported" /&gt;</ph> methods.</source>
          <target state="translated">Zum Konvertieren von Typen, die Eigenschaften zu unterstützen, überschreiben die <ph id="ph1">&lt;see cref="M:System.ComponentModel.TypeConverter.GetProperties(System.Object)" /&gt;</ph> und <ph id="ph2">&lt;see cref="M:System.ComponentModel.TypeConverter.GetPropertiesSupported" /&gt;</ph> Methoden.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.TypeConverter">
          <source>If the class you are converting does not have properties, and you need to implement properties, you can use the <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeConverter.SimplePropertyDescriptor" /&gt;</ph> class as a base for implementing the property descriptors.</source>
          <target state="translated">Wenn die Klasse, die Sie konvertieren keine Eigenschaften, und Sie Eigenschaften implementieren müssen, können Sie die <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeConverter.SimplePropertyDescriptor" /&gt;</ph> Klasse als Basis für das Implementieren der Eigenschaftenbezeichner.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.TypeConverter">
          <source>When you inherit from <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeConverter.SimplePropertyDescriptor" /&gt;</ph>, you must override the <ph id="ph2">&lt;see cref="M:System.ComponentModel.PropertyDescriptor.GetValue(System.Object)" /&gt;</ph> and <ph id="ph3">&lt;see cref="M:System.ComponentModel.PropertyDescriptor.SetValue(System.Object,System.Object)" /&gt;</ph> methods.</source>
          <target state="translated">Beim Erben von <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeConverter.SimplePropertyDescriptor" /&gt;</ph>, müssen Sie überschreiben die <ph id="ph2">&lt;see cref="M:System.ComponentModel.PropertyDescriptor.GetValue(System.Object)" /&gt;</ph> und <ph id="ph3">&lt;see cref="M:System.ComponentModel.PropertyDescriptor.SetValue(System.Object,System.Object)" /&gt;</ph> Methoden.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.TypeConverter">
          <source>To convert types that support standard values, override the <ph id="ph1">&lt;see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /&gt;</ph>, <ph id="ph2">&lt;see cref="M:System.ComponentModel.TypeConverter.GetStandardValuesExclusive" /&gt;</ph>, <ph id="ph3">&lt;see cref="M:System.ComponentModel.TypeConverter.GetStandardValuesSupported" /&gt;</ph> and <ph id="ph4">&lt;see cref="M:System.ComponentModel.TypeConverter.IsValid(System.Object)" /&gt;</ph> methods.</source>
          <target state="translated">Zum Konvertieren von Typen, die Standardwerte zu unterstützen, überschreiben die <ph id="ph1">&lt;see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /&gt;</ph>, <ph id="ph2">&lt;see cref="M:System.ComponentModel.TypeConverter.GetStandardValuesExclusive" /&gt;</ph>, <ph id="ph3">&lt;see cref="M:System.ComponentModel.TypeConverter.GetStandardValuesSupported" /&gt;</ph> und <ph id="ph4">&lt;see cref="M:System.ComponentModel.TypeConverter.IsValid(System.Object)" /&gt;</ph> Methoden.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.TypeConverter">
          <source>Your derived type might be marked as <ph id="ph1">&lt;see langword="internal" /&gt;</ph> or <ph id="ph2">&lt;see langword="private" /&gt;</ph>, but an instance of your type can be created with the <ph id="ph3">&lt;see cref="T:System.ComponentModel.TypeDescriptor" /&gt;</ph> class.</source>
          <target state="translated">Der abgeleitete Typ kann als gekennzeichnet sein <ph id="ph1">&lt;see langword="internal" /&gt;</ph> oder <ph id="ph2">&lt;see langword="private" /&gt;</ph>, jedoch eine Instanz des Typs erstellt werden kann, mit der <ph id="ph3">&lt;see cref="T:System.ComponentModel.TypeDescriptor" /&gt;</ph> Klasse.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.TypeConverter">
          <source>Do not write insecure code by assuming the caller is trusted.</source>
          <target state="translated">Führen Sie nicht geschrieben Sie werden, vorausgesetzt, des Aufrufers von unsicheren Code als vertrauenswürdig eingestuft wird.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.TypeConverter">
          <source>Assume instead that callers might create instances of your type in partial trust.</source>
          <target state="translated">Nehmen Sie stattdessen, dass Aufrufer Instanzen des Typs unter teilweiser Vertrauenswürdigkeit erstellen können.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.TypeConverter">
          <source>For more information about type converters for general (non-XAML) purposes, see <bpt id="p1">[</bpt>How to: Implement a Type Converter<ept id="p1">](http://msdn.microsoft.com/library/90373a3f-d8c8-492d-841c-945d62393c56)</ept> or <bpt id="p2">[</bpt>Generalized Type Conversion<ept id="p2">](http://msdn.microsoft.com/library/49253ae6-7657-4810-82ab-1176a6feeada)</ept>.</source>
          <target state="translated">Weitere Informationen über den Einsatz von Typkonvertern für allgemeine (nicht-XAML) Zwecke finden Sie unter <bpt id="p1">[</bpt>Vorgehensweise: Implementieren eines Typkonverters<ept id="p1">](http://msdn.microsoft.com/library/90373a3f-d8c8-492d-841c-945d62393c56)</ept> oder <bpt id="p2">[</bpt>verallgemeinerte Typkonvertierung<ept id="p2">](http://msdn.microsoft.com/library/49253ae6-7657-4810-82ab-1176a6feeada)</ept>.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeConverter.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeConverter" /&gt;</ph> class.</source>
          <target state="translated">Initialisiert eine neue Instanz der <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeConverter" /&gt;</ph>-Klasse.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.TypeConverter">
          <source>Returns whether this converter can convert an object of one type to the type of this converter.</source>
          <target state="translated">Gibt zurück, ob dieser Konverter ein Objekt eines Typs in den Typ dieses Konverters konvertieren kann.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> that represents the type you want to convert from.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>, der den Typ darstellt, aus dem konvertiert werden soll.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)">
          <source>Returns whether this converter can convert an object of the given type to the type of this converter.</source>
          <target state="translated">Gibt zurück, ob dieser Konverter ein Objekt des angegebenen Typs in den Typ dieses Konverters konvertieren kann.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if this converter can perform the conversion; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, wenn dieser Konverter die Konvertierung durchführen kann, andernfalls <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)">
          <source>As implemented in this class, this method always returns <ph id="ph1">`false`</ph>.</source>
          <target state="translated">Bei Implementierung in dieser Klasse gibt diese Methode immer <ph id="ph1">`false`</ph> zurück.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)">
          <source>It never returns <ph id="ph1">`true`</ph>.</source>
          <target state="translated">Wird niemals zurückgegeben <ph id="ph1">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
          <source>An <ph id="ph1">&lt;see cref="T:System.ComponentModel.ITypeDescriptorContext" /&gt;</ph> that provides a format context.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.ComponentModel.ITypeDescriptorContext" /&gt;</ph>, der einen Formatierungskontext bereitstellt.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> that represents the type you want to convert from.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>, der den Typ darstellt, aus dem konvertiert werden soll.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
          <source>Returns whether this converter can convert an object of the given type to the type of this converter, using the specified context.</source>
          <target state="translated">Gibt zurück, ob dieser Konverter ein Objekt vom angegebenen Typ unter Verwendung des angegebenen Kontexts in den Typ dieses Konverters konvertieren kann.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if this converter can perform the conversion; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, wenn dieser Konverter die Konvertierung durchführen kann, andernfalls <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
          <source>As implemented in this class, this method returns <ph id="ph1">`false`</ph>, unless <ph id="ph2">`sourceType`</ph> is an <ph id="ph3">&lt;xref:System.ComponentModel.Design.Serialization.InstanceDescriptor&gt;</ph>.</source>
          <target state="translated">Wie in dieser Klasse implementiert wird, gibt diese Methode <ph id="ph1">`false`</ph>, es sei denn, <ph id="ph2">`sourceType`</ph> ist ein <ph id="ph3">&lt;xref:System.ComponentModel.Design.Serialization.InstanceDescriptor&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
          <source>Override this method to provide your own conversion requirements.</source>
          <target state="translated">Überschreiben Sie diese Methode, um eigene Konvertierungsanforderungen anzugeben.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
          <source>Use the <ph id="ph1">&lt;paramref name="context" /&gt;</ph> parameter to extract additional information about the environment from which this converter is invoked.</source>
          <target state="translated">Über den <ph id="ph1">&lt;paramref name="context" /&gt;</ph>-Parameter können zusätzliche Informationen über die Umgebung extrahiert werden, aus der dieser Konverter aufgerufen wurde.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
          <source>This parameter can be <ph id="ph1">&lt;see langword="null" /&gt;</ph>, so always check it.</source>
          <target state="translated">Dieser Parameter kann <ph id="ph1">&lt;see langword="null" /&gt;</ph>, daher immer überprüft.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
          <source>Also, properties on the context object can return <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Außerdem können die Eigenschaften des Kontextobjekts <ph id="ph1">&lt;see langword="null" /&gt;</ph> zurückgeben.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.TypeConverter">
          <source>Returns whether this converter can convert the object to the specified type.</source>
          <target state="translated">Gibt zurück, ob dieser Konverter das Objekt in den angegebenen Typ konvertieren kann.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeConverter.CanConvertTo(System.Type)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> that represents the type you want to convert to.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>, der den Typ darstellt, in den konvertiert werden soll.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeConverter.CanConvertTo(System.Type)">
          <source>Returns whether this converter can convert the object to the specified type.</source>
          <target state="translated">Gibt zurück, ob dieser Konverter das Objekt in den angegebenen Typ konvertieren kann.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeConverter.CanConvertTo(System.Type)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if this converter can perform the conversion; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, wenn dieser Konverter die Konvertierung durchführen kann, andernfalls <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeConverter.CanConvertTo(System.Type)">
          <source>If <ph id="ph1">`destinationType`</ph> is a string, the default implementation of <ph id="ph2">&lt;xref:System.ComponentModel.TypeConverter.CanConvertTo%2A&gt;</ph> always returns <ph id="ph3">`true`</ph>.</source>
          <target state="translated">Wenn <ph id="ph1">`destinationType`</ph> ist eine Zeichenfolge, die standardmäßige Implementierung des <ph id="ph2">&lt;xref:System.ComponentModel.TypeConverter.CanConvertTo%2A&gt;</ph> gibt immer <ph id="ph3">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
          <source>An <ph id="ph1">&lt;see cref="T:System.ComponentModel.ITypeDescriptorContext" /&gt;</ph> that provides a format context.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.ComponentModel.ITypeDescriptorContext" /&gt;</ph>, der einen Formatierungskontext bereitstellt.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> that represents the type you want to convert to.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>, der den Typ darstellt, in den konvertiert werden soll.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
          <source>Returns whether this converter can convert the object to the specified type, using the specified context.</source>
          <target state="translated">Gibt zurück, ob dieser Konverter das Objekt mithilfe des angegebenen Kontexts in den angegebenen Typ umwandeln kann.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if this converter can perform the conversion; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, wenn dieser Konverter die Konvertierung durchführen kann, andernfalls <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
          <source>Use the <ph id="ph1">`context`</ph> parameter to extract additional information about the environment from which this converter is invoked.</source>
          <target state="translated">Über den <ph id="ph1">`context`</ph>-Parameter können zusätzliche Informationen über die Umgebung extrahiert werden, aus der dieser Konverter aufgerufen wurde.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
          <source>This parameter can be <ph id="ph1">`null`</ph>, so always check it.</source>
          <target state="translated">Dieser Parameter kann <ph id="ph1">`null`</ph>, daher immer überprüft.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
          <source>Also, properties on the context object can return <ph id="ph1">`null`</ph>.</source>
          <target state="translated">Außerdem können die Eigenschaften des Kontextobjekts <ph id="ph1">`null`</ph> zurückgeben.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
          <source>If <ph id="ph1">`destinationType`</ph> is a string, the default implementation of <ph id="ph2">&lt;xref:System.ComponentModel.TypeConverter.CanConvertTo%2A&gt;</ph> always returns <ph id="ph3">`true`</ph>.</source>
          <target state="translated">Wenn <ph id="ph1">`destinationType`</ph> ist eine Zeichenfolge, die standardmäßige Implementierung des <ph id="ph2">&lt;xref:System.ComponentModel.TypeConverter.CanConvertTo%2A&gt;</ph> gibt immer <ph id="ph3">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
          <source>Override this method to provide your own conversion requirements.</source>
          <target state="translated">Überschreiben Sie diese Methode, um eigene Konvertierungsanforderungen anzugeben.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.TypeConverter">
          <source>Converts the given value to the type of this converter.</source>
          <target state="translated">Konvertiert den angegebenen Wert in den Typ dieses Konverters.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeConverter.ConvertFrom(System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> to convert.</source>
          <target state="translated">Die zu konvertierende <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeConverter.ConvertFrom(System.Object)">
          <source>Converts the given value to the type of this converter.</source>
          <target state="translated">Konvertiert den angegebenen Wert in den Typ dieses Konverters.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeConverter.ConvertFrom(System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> that represents the converted value.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph>, das den konvertierten Wert darstellt.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeConverter.ConvertFrom(System.Object)">
          <source>The conversion cannot be performed.</source>
          <target state="translated">Die Konvertierung kann nicht durchgeführt werden.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.ComponentModel.ITypeDescriptorContext" /&gt;</ph> that provides a format context.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.ComponentModel.ITypeDescriptorContext" /&gt;</ph>, der einen Formatierungskontext bereitstellt.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Globalization.CultureInfo" /&gt;</ph> to use as the current culture.</source>
          <target state="translated">Das als aktuelle Kultur zu verwendende <ph id="ph1">&lt;see cref="T:System.Globalization.CultureInfo" /&gt;</ph>-Element.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> to convert.</source>
          <target state="translated">Die zu konvertierende <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
          <source>Converts the given object to the type of this converter, using the specified context and culture information.</source>
          <target state="translated">Konvertiert das angegebene Objekt unter Verwendung des angegebenen Kontexts und der angegebenen Kulturinformationen in den Typ dieses Konverters.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> that represents the converted value.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph>, das den konvertierten Wert darstellt.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
          <source>Custom type authors that intend to support a type conversion behavior for XAML typically implement a <ph id="ph1">&lt;xref:System.ComponentModel.TypeConverter&gt;</ph> class that supports <ph id="ph2">&lt;xref:System.ComponentModel.TypeConverter.ConvertFrom%2A&gt;</ph> behavior from a string.</source>
          <target state="translated">Implementieren von benutzerdefinierten Autoren, die in der Regel ein typkonvertierungsverhaltens für XAML unterstützen möchten eine <ph id="ph1">&lt;xref:System.ComponentModel.TypeConverter&gt;</ph> Klasse, die unterstützt <ph id="ph2">&lt;xref:System.ComponentModel.TypeConverter.ConvertFrom%2A&gt;</ph> Verhalten aus einer Zeichenfolge.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
          <source>This behavior enables type conversion from the string provided as a XAML attribute value and provides a XAML processor with the support needed to create an object from the string, so that the object can be produced in a parsed object graph.</source>
          <target state="translated">Dieses Verhalten ermöglicht die typkonvertierung aus der Zeichenfolge, die als XAML-Attributwert angegeben und stellt einen XAML-Prozessor mit Unterstützung erforderlich, um ein Objekt aus der Zeichenfolge zu erstellen, damit das Objekt in einem Objektdiagramm analysierte gefertigt werden kann.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
          <source>Custom types or members of custom types are indicated by applying <ph id="ph1">&lt;xref:System.ComponentModel.TypeConverterAttribute&gt;</ph> to the definitions, with the attribute referencing the custom <ph id="ph2">&lt;xref:System.ComponentModel.TypeConverter&gt;</ph> implementation.</source>
          <target state="translated">Benutzerdefinierte Typen oder Member von benutzerdefinierten Typen werden durch Anwenden von angegeben <ph id="ph1">&lt;xref:System.ComponentModel.TypeConverterAttribute&gt;</ph> verweisen auf Definitionen, mit dem Attribut auf die benutzerdefinierte <ph id="ph2">&lt;xref:System.ComponentModel.TypeConverter&gt;</ph> Implementierung.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
          <source>For XAML purposes, you do not typically provide branching implementations based on <ph id="ph1">`culture`</ph>.</source>
          <target state="translated">Für XAML-Zwecke ist Sie in der Regel bieten keine Verzweigung basierend auf Implementierungen <ph id="ph1">`culture`</ph>.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
          <source>This is because XAML is precompiled in a development environment context, and culture-specific information for runtime XAML is not relevant for XAML type conversion.</source>
          <target state="translated">Dies ist, da XAML in einem Kontext der Development-Umgebung vorkompiliert wird und kulturspezifische Informationen für die Common Language Runtime XAML nicht relevant für die Verwendung von XAML-typkonvertierung.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
          <source>For more information, see <bpt id="p1">[</bpt>Type Converters for XAML Overview<ept id="p1">](~/docs/framework/xaml-services/type-converters-for-xaml-overview.md)</ept>.</source>
          <target state="translated">Weitere Informationen finden Sie unter <bpt id="p1">[</bpt>Typkonverter für XAML-Übersicht<ept id="p1">](~/docs/framework/xaml-services/type-converters-for-xaml-overview.md)</ept>.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
          <source>The conversion cannot be performed.</source>
          <target state="translated">Die Konvertierung kann nicht durchgeführt werden.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
          <source>Override this method to provide your own conversion requirements.</source>
          <target state="translated">Überschreiben Sie diese Methode, um eigene Konvertierungsanforderungen anzugeben.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
          <source>Use the <ph id="ph1">&lt;paramref name="context" /&gt;</ph> parameter to extract additional information about the environment from which this converter is invoked.</source>
          <target state="translated">Über den <ph id="ph1">&lt;paramref name="context" /&gt;</ph>-Parameter können zusätzliche Informationen über die Umgebung extrahiert werden, aus der dieser Konverter aufgerufen wurde.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
          <source>This parameter can be <ph id="ph1">&lt;see langword="null" /&gt;</ph>, so always check it.</source>
          <target state="translated">Dieser Parameter kann <ph id="ph1">&lt;see langword="null" /&gt;</ph>, daher immer überprüft.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
          <source>Also, properties on the context object can return <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Außerdem können die Eigenschaften des Kontextobjekts <ph id="ph1">&lt;see langword="null" /&gt;</ph> zurückgeben.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
          <source>For implementation patterns for type converters that are used to support XAML and custom types, see <bpt id="p1">[</bpt>Type Converters for XAML Overview<ept id="p1">](~/docs/framework/xaml-services/type-converters-for-xaml-overview.md)</ept>.</source>
          <target state="translated">Implementierungsmuster für den Einsatz von Typkonvertern, die verwendet werden, um XAML und benutzerdefinierte Typen zu unterstützen, finden Sie unter <bpt id="p1">[</bpt>Typkonverter für XAML-Übersicht<ept id="p1">](~/docs/framework/xaml-services/type-converters-for-xaml-overview.md)</ept>.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.TypeConverter">
          <source>Converts the value to a type of this converter, using the invariant culture.</source>
          <target state="translated">Konvertiert den Wert unter Verwendung der invarianten Kultur in einen Typ dieses Konverters.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.String)">
          <source>The <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> to convert.</source>
          <target state="translated">Die zu konvertierende <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.String)">
          <source>Converts the given string to the type of this converter, using the invariant culture.</source>
          <target state="translated">Konvertiert die angegebene Zeichenfolge unter Verwendung der invarianten Kultur in einen Typ dieses Konverters.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.String)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> that represents the converted text.</source>
          <target state="translated">Eine <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph>-Klasse, die den konvertierten Text darstellt.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.String)">
          <source>The default implementation always returns <ph id="ph1">`null`</ph>.</source>
          <target state="translated">Die Standardimplementierung gibt immer <ph id="ph1">`null`</ph> zurück.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.String)">
          <source>The conversion cannot be performed.</source>
          <target state="translated">Die Konvertierung kann nicht durchgeführt werden.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext,System.String)">
          <source>An <ph id="ph1">&lt;see cref="T:System.ComponentModel.ITypeDescriptorContext" /&gt;</ph> that provides a format context.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.ComponentModel.ITypeDescriptorContext" /&gt;</ph>, der einen Formatierungskontext bereitstellt.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext,System.String)">
          <source>The <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> to convert.</source>
          <target state="translated">Die zu konvertierende <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext,System.String)">
          <source>Converts the given string to the type of this converter, using the invariant culture and the specified context.</source>
          <target state="translated">Konvertiert die angegebene Zeichenfolge unter Verwendung der invarianten Kultur und des angegebenen Kontexts in den Typ dieses Konverters.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext,System.String)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> that represents the converted text.</source>
          <target state="translated">Eine <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph>-Klasse, die den konvertierten Text darstellt.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext,System.String)">
          <source>An exception is raised if the string cannot be converted into the appropriate object.</source>
          <target state="translated">Eine Ausnahme wird ausgelöst, wenn die Zeichenfolge in das entsprechende Objekt konvertiert werden kann.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext,System.String)">
          <source>The default implementation always returns <ph id="ph1">`null`</ph>.</source>
          <target state="translated">Die Standardimplementierung gibt immer <ph id="ph1">`null`</ph> zurück.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext,System.String)">
          <source>Use the <ph id="ph1">`context`</ph> parameter to extract additional information about the environment from which this converter is invoked.</source>
          <target state="translated">Über den <ph id="ph1">`context`</ph>-Parameter können zusätzliche Informationen über die Umgebung extrahiert werden, aus der dieser Konverter aufgerufen wurde.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext,System.String)">
          <source>This parameter can be <ph id="ph1">`null`</ph>, so always check it.</source>
          <target state="translated">Dieser Parameter kann <ph id="ph1">`null`</ph>, daher immer überprüft.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext,System.String)">
          <source>Also, properties on the context object can return <ph id="ph1">`null`</ph>.</source>
          <target state="translated">Außerdem können die Eigenschaften des Kontextobjekts <ph id="ph1">`null`</ph> zurückgeben.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext,System.String)">
          <source>The conversion cannot be performed.</source>
          <target state="translated">Die Konvertierung kann nicht durchgeführt werden.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.TypeConverter">
          <source>Converts the specified text to an object.</source>
          <target state="translated">Konvertiert den angegebenen Text in ein Objekt.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeConverter.ConvertFromString(System.String)">
          <source>The text representation of the object to convert.</source>
          <target state="translated">Die Textdarstellung des zu konvertierenden Objekts.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeConverter.ConvertFromString(System.String)">
          <source>Converts the specified text to an object.</source>
          <target state="translated">Konvertiert den angegebenen Text in ein Objekt.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeConverter.ConvertFromString(System.String)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> that represents the converted text.</source>
          <target state="translated">Eine <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph>-Klasse, die den konvertierten Text darstellt.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeConverter.ConvertFromString(System.String)">
          <source>The default implementation always returns <ph id="ph1">`null`</ph>.</source>
          <target state="translated">Die Standardimplementierung gibt immer <ph id="ph1">`null`</ph> zurück.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeConverter.ConvertFromString(System.String)">
          <source>For an example of this function, see the <ph id="ph1">&lt;xref:System.ComponentModel.TypeConverter&gt;</ph> class.</source>
          <target state="translated">Ein Beispiel dieser Funktion finden Sie unter der <ph id="ph1">&lt;xref:System.ComponentModel.TypeConverter&gt;</ph> Klasse.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeConverter.ConvertFromString(System.String)">
          <source>The string cannot be converted into the appropriate object.</source>
          <target state="translated">Die Zeichenfolge kann nicht in das entsprechende Objekt konvertiert werden.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.String)">
          <source>An <ph id="ph1">&lt;see cref="T:System.ComponentModel.ITypeDescriptorContext" /&gt;</ph> that provides a format context.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.ComponentModel.ITypeDescriptorContext" /&gt;</ph>, der einen Formatierungskontext bereitstellt.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.String)">
          <source>The <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> to convert.</source>
          <target state="translated">Die zu konvertierende <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.String)">
          <source>Converts the given text to an object, using the specified context.</source>
          <target state="translated">Konvertiert den angegebenen Text unter Verwendung des angegebenen Kontexts in ein Objekt.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.String)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> that represents the converted text.</source>
          <target state="translated">Eine <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph>-Klasse, die den konvertierten Text darstellt.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.String)">
          <source>An exception is raised if the string cannot be converted into the appropriate object.</source>
          <target state="translated">Eine Ausnahme wird ausgelöst, wenn die Zeichenfolge in das entsprechende Objekt konvertiert werden kann.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.String)">
          <source>The default implementation always returns <ph id="ph1">`null`</ph>.</source>
          <target state="translated">Die Standardimplementierung gibt immer <ph id="ph1">`null`</ph> zurück.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.String)">
          <source>Use the <ph id="ph1">`context`</ph> parameter to extract additional information about the environment from which this converter is invoked.</source>
          <target state="translated">Über den <ph id="ph1">`context`</ph>-Parameter können zusätzliche Informationen über die Umgebung extrahiert werden, aus der dieser Konverter aufgerufen wurde.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.String)">
          <source>This parameter can be <ph id="ph1">`null`</ph>, so always check it.</source>
          <target state="translated">Dieser Parameter kann <ph id="ph1">`null`</ph>, daher immer überprüft.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.String)">
          <source>Also, properties on the context object can return <ph id="ph1">`null`</ph>.</source>
          <target state="translated">Außerdem können die Eigenschaften des Kontextobjekts <ph id="ph1">`null`</ph> zurückgeben.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.String)">
          <source>The conversion cannot be performed.</source>
          <target state="translated">Die Konvertierung kann nicht durchgeführt werden.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.String)">
          <source>An <ph id="ph1">&lt;see cref="T:System.ComponentModel.ITypeDescriptorContext" /&gt;</ph> that provides a format context.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.ComponentModel.ITypeDescriptorContext" /&gt;</ph>, der einen Formatierungskontext bereitstellt.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.String)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Globalization.CultureInfo" /&gt;</ph>.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Globalization.CultureInfo" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.String)">
          <source>If <ph id="ph1">&lt;see langword="null" /&gt;</ph> is passed, the current culture is assumed.</source>
          <target state="translated">Wenn <ph id="ph1">&lt;see langword="null" /&gt;</ph> übergeben wird, wird von der aktuellen Kultur ausgegangen.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.String)">
          <source>The <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> to convert.</source>
          <target state="translated">Die zu konvertierende <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.String)">
          <source>Converts the given text to an object, using the specified context and culture information.</source>
          <target state="translated">Konvertiert den angegebenen Text unter Verwendung des angegebenen Kontexts und der angegebenen Kulturinformationen in ein Objekt.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.String)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> that represents the converted text.</source>
          <target state="translated">Eine <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph>-Klasse, die den konvertierten Text darstellt.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.String)">
          <source>An exception is raised if the string cannot be converted into the appropriate object.</source>
          <target state="translated">Eine Ausnahme wird ausgelöst, wenn die Zeichenfolge in das entsprechende Objekt konvertiert werden kann.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.String)">
          <source>The default implementation always returns <ph id="ph1">`null`</ph>.</source>
          <target state="translated">Die Standardimplementierung gibt immer <ph id="ph1">`null`</ph> zurück.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.String)">
          <source>Use the <ph id="ph1">`context`</ph> parameter to extract additional information about the environment from which this converter is invoked.</source>
          <target state="translated">Über den <ph id="ph1">`context`</ph>-Parameter können zusätzliche Informationen über die Umgebung extrahiert werden, aus der dieser Konverter aufgerufen wurde.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.String)">
          <source>This parameter can be <ph id="ph1">`null`</ph>, so always check it.</source>
          <target state="translated">Dieser Parameter kann <ph id="ph1">`null`</ph>, daher immer überprüft.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.String)">
          <source>Also, properties on the context object can return <ph id="ph1">`null`</ph>.</source>
          <target state="translated">Außerdem können die Eigenschaften des Kontextobjekts <ph id="ph1">`null`</ph> zurückgeben.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.String)">
          <source>The conversion cannot be performed.</source>
          <target state="translated">Die Konvertierung kann nicht durchgeführt werden.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.TypeConverter">
          <source>Converts the given value object to the specified type.</source>
          <target state="translated">Konvertiert das angegebene Wertobjekt in den angegebenen Typ.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> to convert.</source>
          <target state="translated">Die zu konvertierende <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> to convert the <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept> parameter to.</source>
          <target state="translated">Der <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>, in den der <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept>-Parameter konvertiert wird</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)">
          <source>Converts the given value object to the specified type, using the arguments.</source>
          <target state="translated">Konvertiert das angegebene Wertobjekt unter Verwendung der Argumente in den angegebenen Typ.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> that represents the converted value.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph>, das den konvertierten Wert darstellt.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)">
          <source>The most common type to convert to and from is a string object.</source>
          <target state="translated">Konvertieren in und aus der am häufigsten verwendete Typ ist ein String-Objekt.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)">
          <source>This implementation calls <ph id="ph1">&lt;xref:System.Object.ToString%2A&gt;</ph> on the object, if the object is valid and if the destination type is a string.</source>
          <target state="translated">Diese Implementierung ruft <ph id="ph1">&lt;xref:System.Object.ToString%2A&gt;</ph> für das Objekt, wenn das Objekt gültig ist und der Zieltyp eine Zeichenfolge ist.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)">
          <source>The <ph id="ph1">&lt;paramref name="destinationType" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Der <ph id="ph1">&lt;paramref name="destinationType" /&gt;</ph>-Parameter ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)">
          <source>The conversion cannot be performed.</source>
          <target state="translated">Die Konvertierung kann nicht durchgeführt werden.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
          <source>An <ph id="ph1">&lt;see cref="T:System.ComponentModel.ITypeDescriptorContext" /&gt;</ph> that provides a format context.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.ComponentModel.ITypeDescriptorContext" /&gt;</ph>, der einen Formatierungskontext bereitstellt.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Globalization.CultureInfo" /&gt;</ph>.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Globalization.CultureInfo" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
          <source>If <ph id="ph1">&lt;see langword="null" /&gt;</ph> is passed, the current culture is assumed.</source>
          <target state="translated">Wenn <ph id="ph1">&lt;see langword="null" /&gt;</ph> übergeben wird, wird von der aktuellen Kultur ausgegangen.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> to convert.</source>
          <target state="translated">Die zu konvertierende <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> to convert the <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept> parameter to.</source>
          <target state="translated">Der <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>, in den der <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept>-Parameter konvertiert wird</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
          <source>Converts the given value object to the specified type, using the specified context and culture information.</source>
          <target state="translated">Konvertiert das angegebene Wertobjekt unter Verwendung des angegebenen Kontexts und der angegebenen Kulturinformationen in den angegebenen Typ.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> that represents the converted value.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph>, das den konvertierten Wert darstellt.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
          <source>The most common types to convert are to and from a string object.</source>
          <target state="translated">Am häufigsten wird in Zeichenfolgenobjekte und aus diesen konvertiert.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
          <source>This implementation calls <ph id="ph1">&lt;xref:System.Object.ToString%2A&gt;</ph> on the object if the object is valid and if the destination type is a string.</source>
          <target state="translated">Diese Implementierung ruft <ph id="ph1">&lt;xref:System.Object.ToString%2A&gt;</ph> für das Objekt, wenn das Objekt gültig ist und der Zieltyp eine Zeichenfolge ist.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
          <source>Use the <ph id="ph1">`context`</ph> parameter to extract additional information about the environment from which this converter is invoked.</source>
          <target state="translated">Über den <ph id="ph1">`context`</ph>-Parameter können zusätzliche Informationen über die Umgebung extrahiert werden, aus der dieser Konverter aufgerufen wurde.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
          <source>This parameter can be <ph id="ph1">`null`</ph>, so always check it.</source>
          <target state="translated">Dieser Parameter kann <ph id="ph1">`null`</ph>, daher immer überprüft.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
          <source>Also, properties on the context object can return <ph id="ph1">`null`</ph>.</source>
          <target state="translated">Außerdem können die Eigenschaften des Kontextobjekts <ph id="ph1">`null`</ph> zurückgeben.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
          <source>Custom type authors that intend to support a type conversion behavior for XAML typically implement a <ph id="ph1">&lt;xref:System.ComponentModel.TypeConverter&gt;</ph> class that supports <ph id="ph2">&lt;xref:System.ComponentModel.TypeConverter.ConvertFrom%2A&gt;</ph> behavior from a string.</source>
          <target state="translated">Implementieren von benutzerdefinierten Autoren, die in der Regel ein typkonvertierungsverhaltens für XAML unterstützen möchten eine <ph id="ph1">&lt;xref:System.ComponentModel.TypeConverter&gt;</ph> Klasse, die unterstützt <ph id="ph2">&lt;xref:System.ComponentModel.TypeConverter.ConvertFrom%2A&gt;</ph> Verhalten aus einer Zeichenfolge.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
          <source>These type converters might also implement <ph id="ph1">&lt;xref:System.ComponentModel.TypeConverter.ConvertTo%2A&gt;</ph> to support serialization back to XAML.</source>
          <target state="translated">Diese Typkonverter könnten auch implementieren <ph id="ph1">&lt;xref:System.ComponentModel.TypeConverter.ConvertTo%2A&gt;</ph> zur Unterstützung der Serialisierung in XAML zurück.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
          <source>Some XAML serialization scenarios cannot be adequately addressed with <ph id="ph1">&lt;xref:System.ComponentModel.TypeConverter&gt;</ph> alone.</source>
          <target state="translated">Einige XAML-Serialisierungsszenarien können nicht mit ausreichend adressiert werden <ph id="ph1">&lt;xref:System.ComponentModel.TypeConverter&gt;</ph> allein.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
          <source>In these cases, it may be necessary to also define a <ph id="ph1">&lt;xref:System.Windows.Markup.ValueSerializer&gt;</ph> that handles the serialization cases that would otherwise be handled by <ph id="ph2">&lt;xref:System.ComponentModel.TypeConverter.ConvertTo%2A&gt;</ph>.</source>
          <target state="translated">In diesen Fällen ist es möglicherweise erforderlich ist, definieren auch eine <ph id="ph1">&lt;xref:System.Windows.Markup.ValueSerializer&gt;</ph> , verarbeitet die Serialisierungsfälle, die andernfalls von behandelt werden würde <ph id="ph2">&lt;xref:System.ComponentModel.TypeConverter.ConvertTo%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
          <source>For more information, see <ph id="ph1">&lt;xref:System.Windows.Markup.ValueSerializer&gt;</ph>.</source>
          <target state="translated">Weitere Informationen finden Sie unter <ph id="ph1">&lt;xref:System.Windows.Markup.ValueSerializer&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
          <source>The <ph id="ph1">&lt;paramref name="destinationType" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Der <ph id="ph1">&lt;paramref name="destinationType" /&gt;</ph>-Parameter ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
          <source>The conversion cannot be performed.</source>
          <target state="translated">Die Konvertierung kann nicht durchgeführt werden.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
          <source>Override this method to provide your own conversion requirements.</source>
          <target state="translated">Überschreiben Sie diese Methode, um eigene Konvertierungsanforderungen anzugeben.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
          <source>For implementation patterns for type converters that are used to support XAML and custom types, see <bpt id="p1">[</bpt>Type Converters for XAML Overview<ept id="p1">](~/docs/framework/xaml-services/type-converters-for-xaml-overview.md)</ept>.</source>
          <target state="translated">Implementierungsmuster für den Einsatz von Typkonvertern, die verwendet werden, um XAML und benutzerdefinierte Typen zu unterstützen, finden Sie unter <bpt id="p1">[</bpt>Typkonverter für XAML-Übersicht<ept id="p1">](~/docs/framework/xaml-services/type-converters-for-xaml-overview.md)</ept>.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.TypeConverter">
          <source>Converts the specified value to a culture-invariant string representation.</source>
          <target state="translated">Konvertiert den angegebenen Wert in eine Zeichenfolgendarstellung mit invarianter Kultur.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeConverter.ConvertToInvariantString(System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> to convert.</source>
          <target state="translated">Die zu konvertierende <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeConverter.ConvertToInvariantString(System.Object)">
          <source>Converts the specified value to a culture-invariant string representation.</source>
          <target state="translated">Konvertiert den angegebenen Wert in eine Zeichenfolgendarstellung mit invarianter Kultur.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeConverter.ConvertToInvariantString(System.Object)">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> that represents the converted value.</source>
          <target state="translated">Eine <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>-Klasse, die den konvertierten Wert darstellt.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeConverter.ConvertToInvariantString(System.Object)">
          <source>The <ph id="ph1">`context`</ph> parameter can be used to extract additional information about the environment from which this converter is being invoked.</source>
          <target state="translated">Die <ph id="ph1">`context`</ph> Parameter kann verwendet werden, um zusätzliche Informationen über die Umgebung extrahiert werden, aus der dieser Konverter aufgerufen wurde.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeConverter.ConvertToInvariantString(System.Object)">
          <source>This can be <ph id="ph1">`null`</ph>, so always check.</source>
          <target state="translated">Dieser Parameter kann <ph id="ph1">`null`</ph> sein und muss daher immer überprüft werden.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeConverter.ConvertToInvariantString(System.Object)">
          <source>Also, properties on the context object can return <ph id="ph1">`null`</ph>.</source>
          <target state="translated">Außerdem können die Eigenschaften des Kontextobjekts <ph id="ph1">`null`</ph> zurückgeben.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeConverter.ConvertToInvariantString(System.Object)">
          <source>Depending on the implementation of the value formatter, it might be possible to pass the returned string back into the value formatter to re-create an instance of the object.</source>
          <target state="translated">Je nach Implementierung des Werteformatierers kann es möglich, übergeben die zurückgegebene Zeichenfolge wieder in den Werteformatierer zum Neuerstellen einer Instanz des Objekts sein.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeConverter.ConvertToInvariantString(System.Object)">
          <source>The conversion cannot be performed.</source>
          <target state="translated">Die Konvertierung kann nicht durchgeführt werden.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeConverter.ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext,System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.ComponentModel.ITypeDescriptorContext" /&gt;</ph> that provides a format context.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.ComponentModel.ITypeDescriptorContext" /&gt;</ph>, der einen Formatierungskontext bereitstellt.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeConverter.ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> to convert.</source>
          <target state="translated">Die zu konvertierende <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeConverter.ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext,System.Object)">
          <source>Converts the specified value to a culture-invariant string representation, using the specified context.</source>
          <target state="translated">Konvertiert den angegebenen Wert unter Verwendung des angegebenen Kontexts in eine Zeichenfolgendarstellung mit invarianter Kultur.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeConverter.ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext,System.Object)">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> that represents the converted value.</source>
          <target state="translated">Eine <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>-Klasse, die den konvertierten Wert darstellt.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeConverter.ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext,System.Object)">
          <source>Use the <ph id="ph1">`context`</ph> parameter to extract additional information about the environment from which this converter is invoked.</source>
          <target state="translated">Über den <ph id="ph1">`context`</ph>-Parameter können zusätzliche Informationen über die Umgebung extrahiert werden, aus der dieser Konverter aufgerufen wurde.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeConverter.ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext,System.Object)">
          <source>This parameter can be <ph id="ph1">`null`</ph>, so always check it.</source>
          <target state="translated">Dieser Parameter kann <ph id="ph1">`null`</ph>, daher immer überprüft.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeConverter.ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext,System.Object)">
          <source>Also, properties on the context object can return <ph id="ph1">`null`</ph>.</source>
          <target state="translated">Außerdem können die Eigenschaften des Kontextobjekts <ph id="ph1">`null`</ph> zurückgeben.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeConverter.ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext,System.Object)">
          <source>Depending on the implementation of the value formatter, it might be possible to pass the returned string back into the value formatter to re-create an instance of the object.</source>
          <target state="translated">Je nach Implementierung des Werteformatierers kann es möglich, übergeben die zurückgegebene Zeichenfolge wieder in den Werteformatierer zum Neuerstellen einer Instanz des Objekts sein.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeConverter.ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext,System.Object)">
          <source>The conversion cannot be performed.</source>
          <target state="translated">Die Konvertierung kann nicht durchgeführt werden.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.TypeConverter">
          <source>Converts the specified value to a string representation.</source>
          <target state="translated">Konvertiert den angegebenen Wert in eine Zeichenfolgendarstellung.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeConverter.ConvertToString(System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> to convert.</source>
          <target state="translated">Die zu konvertierende <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeConverter.ConvertToString(System.Object)">
          <source>Converts the specified value to a string representation.</source>
          <target state="translated">Konvertiert den angegebenen Wert in eine Zeichenfolgendarstellung.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeConverter.ConvertToString(System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> that represents the converted value.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph>, das den konvertierten Wert darstellt.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeConverter.ConvertToString(System.Object)">
          <source>Depending on the implementation of the value formatter, it might be possible to pass the returned string back into the value formatter to re-create an instance of the object.</source>
          <target state="translated">Je nach Implementierung des Werteformatierers kann es möglich, übergeben die zurückgegebene Zeichenfolge wieder in den Werteformatierer zum Neuerstellen einer Instanz des Objekts sein.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeConverter.ConvertToString(System.Object)">
          <source>For an example on this function, see the <ph id="ph1">&lt;xref:System.ComponentModel.TypeConverter&gt;</ph> class.</source>
          <target state="translated">Ein Beispiel für diese Funktion finden Sie unter der <ph id="ph1">&lt;xref:System.ComponentModel.TypeConverter&gt;</ph> Klasse.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeConverter.ConvertToString(System.Object)">
          <source>The conversion cannot be performed.</source>
          <target state="translated">Die Konvertierung kann nicht durchgeführt werden.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.ComponentModel.ITypeDescriptorContext" /&gt;</ph> that provides a format context.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.ComponentModel.ITypeDescriptorContext" /&gt;</ph>, der einen Formatierungskontext bereitstellt.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> to convert.</source>
          <target state="translated">Die zu konvertierende <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Object)">
          <source>Converts the given value to a string representation, using the given context.</source>
          <target state="translated">Konvertiert den angegebenen Wert unter Verwendung des angegebenen Kontexts in eine Zeichenfolgendarstellung.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> that represents the converted value.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph>, das den konvertierten Wert darstellt.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Object)">
          <source>Use the <ph id="ph1">`context`</ph> parameter to extract additional information about the environment from which this converter is invoked.</source>
          <target state="translated">Über den <ph id="ph1">`context`</ph>-Parameter können zusätzliche Informationen über die Umgebung extrahiert werden, aus der dieser Konverter aufgerufen wurde.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Object)">
          <source>This parameter can be <ph id="ph1">`null`</ph>, so always check it.</source>
          <target state="translated">Dieser Parameter kann <ph id="ph1">`null`</ph>, daher immer überprüft.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Object)">
          <source>Also, properties on the context object can return <ph id="ph1">`null`</ph>.</source>
          <target state="translated">Außerdem können die Eigenschaften des Kontextobjekts <ph id="ph1">`null`</ph> zurückgeben.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Object)">
          <source>Depending on the implementation of the value formatter, it might be possible to pass the returned string back into the value formatter to re-create an instance of the object.</source>
          <target state="translated">Je nach Implementierung des Werteformatierers kann es möglich, übergeben die zurückgegebene Zeichenfolge wieder in den Werteformatierer zum Neuerstellen einer Instanz des Objekts sein.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Object)">
          <source>The conversion cannot be performed.</source>
          <target state="translated">Die Konvertierung kann nicht durchgeführt werden.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.ComponentModel.ITypeDescriptorContext" /&gt;</ph> that provides a format context.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.ComponentModel.ITypeDescriptorContext" /&gt;</ph>, der einen Formatierungskontext bereitstellt.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Globalization.CultureInfo" /&gt;</ph>.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Globalization.CultureInfo" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
          <source>If <ph id="ph1">&lt;see langword="null" /&gt;</ph> is passed, the current culture is assumed.</source>
          <target state="translated">Wenn <ph id="ph1">&lt;see langword="null" /&gt;</ph> übergeben wird, wird von der aktuellen Kultur ausgegangen.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> to convert.</source>
          <target state="translated">Die zu konvertierende <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
          <source>Converts the given value to a string representation, using the specified context and culture information.</source>
          <target state="translated">Konvertiert den angegebenen Wert unter Verwendung des angegebenen Kontexts und der angegebenen Kulturinformationen in eine Zeichenfolgendarstellung.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> that represents the converted value.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph>, das den konvertierten Wert darstellt.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
          <source>Use the <ph id="ph1">`context`</ph> parameter to extract additional information about the environment from which this converter is invoked.</source>
          <target state="translated">Über den <ph id="ph1">`context`</ph>-Parameter können zusätzliche Informationen über die Umgebung extrahiert werden, aus der dieser Konverter aufgerufen wurde.</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
          <source>This parameter can be <ph id="ph1">`null`</ph>, so always check it.</source>
          <target state="translated">Dieser Parameter kann <ph id="ph1">`null`</ph>, daher immer überprüft.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
          <source>Also, properties on the context object can return <ph id="ph1">`null`</ph>.</source>
          <target state="translated">Außerdem können die Eigenschaften des Kontextobjekts <ph id="ph1">`null`</ph> zurückgeben.</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
          <source>Depending on the implementation of the value formatter, it might be possible to pass the returned string back into the value formatter to re-create an instance of the object.</source>
          <target state="translated">Je nach Implementierung des Werteformatierers kann es möglich, übergeben die zurückgegebene Zeichenfolge wieder in den Werteformatierer zum Neuerstellen einer Instanz des Objekts sein.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
          <source>The conversion cannot be performed.</source>
          <target state="translated">Die Konvertierung kann nicht durchgeführt werden.</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.TypeConverter">
          <source>Re-creates an <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> given a set of property values for the object.</source>
          <target state="translated">Erstellt eine <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph>-Klasse mit einer angegebenen Menge von Eigenschaftswerten für das Objekt neu.</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> that represents a dictionary of new property values.</source>
          <target state="translated">Eine <ph id="ph1">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph>-Schnittstelle, die ein Wörterbuch mit neuen Eigenschaftswerten darstellt.</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)">
          <source>Re-creates an <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> given a set of property values for the object.</source>
          <target state="translated">Erstellt eine <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph>-Klasse mit einer angegebenen Menge von Eigenschaftswerten für das Objekt neu.</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> representing the given <ph id="ph2">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph>, or <ph id="ph3">&lt;see langword="null" /&gt;</ph> if the object cannot be created.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph>, das das angegebene <ph id="ph2">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> darstellt, oder <ph id="ph3">&lt;see langword="null" /&gt;</ph>, wenn das Objekt nicht erstellt werden kann.</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)">
          <source>This method always returns <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Diese Methode gibt immer <ph id="ph1">&lt;see langword="null" /&gt;</ph> zurück.</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)">
          <source>Use this method for objects that are immutable, but for which you want to provide changeable properties.</source>
          <target state="translated">Verwenden Sie diese Methode für Objekte, die unveränderlich sind, aber für die veränderliche Eigenschaften bereitgestellt werden sollen.</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)">
          <source>The dictionary provided by the <ph id="ph1">`propertyValues`</ph> parameter has a series of name/value pairs, one for each property returned from <ph id="ph2">&lt;xref:System.ComponentModel.TypeConverter.GetProperties%2A&gt;</ph>.</source>
          <target state="translated">Das Wörterbuch von bereitgestellten der <ph id="ph1">`propertyValues`</ph> Parameter hat eine Reihe von Name/Wert-Paare, einer für jede Eigenschaft vom zurückgegebenen <ph id="ph2">&lt;xref:System.ComponentModel.TypeConverter.GetProperties%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)">
          <source>An <ph id="ph1">&lt;see cref="T:System.ComponentModel.ITypeDescriptorContext" /&gt;</ph> that provides a format context.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.ComponentModel.ITypeDescriptorContext" /&gt;</ph>, der einen Formatierungskontext bereitstellt.</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> of new property values.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> mit neuen Eigenschaftswerten.</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)">
          <source>Creates an instance of the type that this <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeConverter" /&gt;</ph> is associated with, using the specified context, given a set of property values for the object.</source>
          <target state="translated">Erstellt über den angegebenen Kontext, der aus einer angegebenen Menge von Eigenschaftswerten für das Objekt besteht, eine Instanz des Typs, der dieser <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeConverter" /&gt;</ph>-Klasse zugeordnet ist.</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> representing the given <ph id="ph2">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph>, or <ph id="ph3">&lt;see langword="null" /&gt;</ph> if the object cannot be created.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph>, das das angegebene <ph id="ph2">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> darstellt, oder <ph id="ph3">&lt;see langword="null" /&gt;</ph>, wenn das Objekt nicht erstellt werden kann.</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)">
          <source>This method always returns <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Diese Methode gibt immer <ph id="ph1">&lt;see langword="null" /&gt;</ph> zurück.</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)">
          <source>Use this method for objects that are immutable, but for which you want to provide changeable properties.</source>
          <target state="translated">Verwenden Sie diese Methode für Objekte, die unveränderlich sind, aber für die veränderliche Eigenschaften bereitgestellt werden sollen.</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)">
          <source>Override this method if the type you want to convert must re-create the object to change its value.</source>
          <target state="translated">Überschreiben Sie diese Methode, wenn der Typ, den Sie konvertieren möchten das Objekt zum Ändern seines Werts neu erstellen muss.</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)">
          <source>Use the <ph id="ph1">&lt;paramref name="context" /&gt;</ph> parameter to extract additional information about the environment from which this converter is invoked.</source>
          <target state="translated">Über den <ph id="ph1">&lt;paramref name="context" /&gt;</ph>-Parameter können zusätzliche Informationen über die Umgebung extrahiert werden, aus der dieser Konverter aufgerufen wurde.</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)">
          <source>This parameter can be <ph id="ph1">&lt;see langword="null" /&gt;</ph>, so always check it.</source>
          <target state="translated">Dieser Parameter kann <ph id="ph1">&lt;see langword="null" /&gt;</ph>, daher immer überprüft.</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)">
          <source>Also, properties on the context object can return <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Außerdem können die Eigenschaften des Kontextobjekts <ph id="ph1">&lt;see langword="null" /&gt;</ph> zurückgeben.</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)">
          <source>The dictionary provided by the <ph id="ph1">&lt;paramref name="propertyValues" /&gt;</ph> parameter has a series of name/value pairs, one for each property returned from <ph id="ph2">&lt;see cref="M:System.ComponentModel.TypeConverter.GetProperties(System.Object)" /&gt;</ph>.</source>
          <target state="translated">Das Wörterbuch von bereitgestellten der <ph id="ph1">&lt;paramref name="propertyValues" /&gt;</ph> Parameter hat eine Reihe von Name/Wert-Paare, einer für jede Eigenschaft vom zurückgegebenen <ph id="ph2">&lt;see cref="M:System.ComponentModel.TypeConverter.GetProperties(System.Object)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeConverter.GetConvertFromException(System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> to convert, or <ph id="ph2">&lt;see langword="null" /&gt;</ph> if the object is not available.</source>
          <target state="translated">Die zu konvertierende <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph>-Klasse oder <ph id="ph2">&lt;see langword="null" /&gt;</ph>, wenn das Objekt nicht verfügbar ist.</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeConverter.GetConvertFromException(System.Object)">
          <source>Returns an exception to throw when a conversion cannot be performed.</source>
          <target state="translated">Gibt eine Ausnahme zurück, wenn eine Konvertierung nicht erfolgen kann.</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeConverter.GetConvertFromException(System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Exception" /&gt;</ph> that represents the exception to throw when a conversion cannot be performed.</source>
          <target state="translated">Eine <ph id="ph1">&lt;see cref="T:System.Exception" /&gt;</ph>-Klasse, die die Ausnahme darstellt, die ausgelöst wird, wenn eine Konvertierung nicht durchgeführt werden kann.</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeConverter.GetConvertFromException(System.Object)">
          <source>Automatically thrown by this method.</source>
          <target state="translated">Wird automatisch durch diese Methode ausgelöst.</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeConverter.GetConvertToException(System.Object,System.Type)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> to convert, or <ph id="ph2">&lt;see langword="null" /&gt;</ph> if the object is not available.</source>
          <target state="translated">Die zu konvertierende <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph>-Klasse oder <ph id="ph2">&lt;see langword="null" /&gt;</ph>, wenn das Objekt nicht verfügbar ist.</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeConverter.GetConvertToException(System.Object,System.Type)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> that represents the type the conversion was trying to convert to.</source>
          <target state="translated">Eine <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>-Klasse, die den Typ darstellt, in den konvertiert werden sollte.</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeConverter.GetConvertToException(System.Object,System.Type)">
          <source>Returns an exception to throw when a conversion cannot be performed.</source>
          <target state="translated">Gibt eine Ausnahme zurück, wenn eine Konvertierung nicht erfolgen kann.</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeConverter.GetConvertToException(System.Object,System.Type)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Exception" /&gt;</ph> that represents the exception to throw when a conversion cannot be performed.</source>
          <target state="translated">Eine <ph id="ph1">&lt;see cref="T:System.Exception" /&gt;</ph>-Klasse, die die Ausnahme darstellt, die ausgelöst wird, wenn eine Konvertierung nicht durchgeführt werden kann.</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeConverter.GetConvertToException(System.Object,System.Type)">
          <source>Automatically thrown by this method.</source>
          <target state="translated">Wird automatisch durch diese Methode ausgelöst.</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.TypeConverter">
          <source>Returns whether changing a value on this object requires a call to the <ph id="ph1">&lt;see cref="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" /&gt;</ph> method to create a new value.</source>
          <target state="translated">Gibt zurück, ob zum Ändern eines Werts für dieses Objekt ein Aufruf der <ph id="ph1">&lt;see cref="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" /&gt;</ph>-Methode erforderlich ist.</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeConverter.GetCreateInstanceSupported">
          <source>Returns whether changing a value on this object requires a call to the <ph id="ph1">&lt;see cref="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" /&gt;</ph> method to create a new value.</source>
          <target state="translated">Gibt zurück, ob zum Ändern eines Werts für dieses Objekt ein Aufruf der <ph id="ph1">&lt;see cref="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" /&gt;</ph>-Methode erforderlich ist.</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeConverter.GetCreateInstanceSupported">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if changing a property on this object requires a call to <ph id="ph2">&lt;see cref="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" /&gt;</ph> to create a new value; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, wenn zum Ändern einer Eigenschaft für dieses Objekt die <ph id="ph2">&lt;see cref="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" /&gt;</ph>-Methode aufgerufen werden muss, um einen neuen Wert zu erstellen, andernfalls <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)">
          <source>An <ph id="ph1">&lt;see cref="T:System.ComponentModel.ITypeDescriptorContext" /&gt;</ph> that provides a format context.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.ComponentModel.ITypeDescriptorContext" /&gt;</ph>, der einen Formatierungskontext bereitstellt.</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)">
          <source>Returns whether changing a value on this object requires a call to <ph id="ph1">&lt;see cref="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" /&gt;</ph> to create a new value, using the specified context.</source>
          <target state="translated">Gibt zurück, ob zum Ändern eines Werts für dieses Objekt ein Aufruf der <ph id="ph1">&lt;see cref="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" /&gt;</ph>-Methode erforderlich ist, um unter Verwendung des angegebenen Kontexts einen neuen Wert zu erstellen.</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if changing a property on this object requires a call to <ph id="ph2">&lt;see cref="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" /&gt;</ph> to create a new value; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, wenn zum Ändern einer Eigenschaft für dieses Objekt die <ph id="ph2">&lt;see cref="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" /&gt;</ph>-Methode aufgerufen werden muss, um einen neuen Wert zu erstellen, andernfalls <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)">
          <source>As implemented in this class, this method always returns <ph id="ph1">`false`</ph>.</source>
          <target state="translated">Bei Implementierung in dieser Klasse gibt diese Methode immer <ph id="ph1">`false`</ph> zurück.</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)">
          <source>Override this method if the type you want to convert must re-create the object to change its value.</source>
          <target state="translated">Überschreiben Sie diese Methode, wenn der Typ, den Sie konvertieren möchten das Objekt zum Ändern seines Werts neu erstellen muss.</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)">
          <source>Use the <ph id="ph1">&lt;paramref name="context" /&gt;</ph> parameter to extract additional information about the environment from which this converter is invoked.</source>
          <target state="translated">Über den <ph id="ph1">&lt;paramref name="context" /&gt;</ph>-Parameter können zusätzliche Informationen über die Umgebung extrahiert werden, aus der dieser Konverter aufgerufen wurde.</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)">
          <source>This parameter can be <ph id="ph1">&lt;see langword="null" /&gt;</ph>, so always check it.</source>
          <target state="translated">Dieser Parameter kann <ph id="ph1">&lt;see langword="null" /&gt;</ph>, daher immer überprüft.</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)">
          <source>Also, properties on the context object can return <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Außerdem können die Eigenschaften des Kontextobjekts <ph id="ph1">&lt;see langword="null" /&gt;</ph> zurückgeben.</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.TypeConverter">
          <source>Returns a collection of properties for the type of array specified by the value parameter.</source>
          <target state="translated">Gibt eine Auflistung von Eigenschaften für den Typ Array zurück, der durch den Wertparameter angegeben ist.</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeConverter.GetProperties(System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> that specifies the type of array for which to get properties.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph>, die den Typ des Arrays angibt, für den Eigenschaften abgerufen werden sollen.</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeConverter.GetProperties(System.Object)">
          <source>Returns a collection of properties for the type of array specified by the value parameter.</source>
          <target state="translated">Gibt eine Auflistung von Eigenschaften für den Typ Array zurück, der durch den Wertparameter angegeben ist.</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeConverter.GetProperties(System.Object)">
          <source>A <ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptorCollection" /&gt;</ph> with the properties that are exposed for this data type, or <ph id="ph2">&lt;see langword="null" /&gt;</ph> if there are no properties.</source>
          <target state="translated">Eine <ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptorCollection" /&gt;</ph> mit den Eigenschaften, die für diesen Datentyp verfügbar sind, oder <ph id="ph2">&lt;see langword="null" /&gt;</ph>, wenn keine Eigenschaften vorhanden sind.</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeConverter.GetProperties(System.Object)">
          <source>As implemented in this class, this method always returns <ph id="ph1">`null`</ph>.</source>
          <target state="translated">Bei Implementierung in dieser Klasse gibt diese Methode immer <ph id="ph1">`null`</ph> zurück.</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeConverter.GetProperties(System.Object)">
          <source>By default, a type does not return properties.</source>
          <target state="translated">Standardmäßig ein Typ nicht Eigenschaften zurück.</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeConverter.GetProperties(System.Object)">
          <source>An easy implementation of this method can call <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.GetProperties%2A&gt;</ph> for the correct data type.</source>
          <target state="translated">Eine einfache Implementierung dieser Methode aufrufen kann <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.GetProperties%2A&gt;</ph> für den richtigen Datentyp hin.</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.ComponentModel.ITypeDescriptorContext" /&gt;</ph> that provides a format context.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.ComponentModel.ITypeDescriptorContext" /&gt;</ph>, der einen Formatierungskontext bereitstellt.</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> that specifies the type of array for which to get properties.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph>, die den Typ des Arrays angibt, für den Eigenschaften abgerufen werden sollen.</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object)">
          <source>Returns a collection of properties for the type of array specified by the value parameter, using the specified context.</source>
          <target state="translated">Gibt unter Verwendung des angegebenen Kontexts eine Auflistung der Eigenschaften für den Typ von Array zurück, der durch den Wertparameter angegeben ist.</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object)">
          <source>A <ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptorCollection" /&gt;</ph> with the properties that are exposed for this data type, or <ph id="ph2">&lt;see langword="null" /&gt;</ph> if there are no properties.</source>
          <target state="translated">Eine <ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptorCollection" /&gt;</ph> mit den Eigenschaften, die für diesen Datentyp verfügbar sind, oder <ph id="ph2">&lt;see langword="null" /&gt;</ph>, wenn keine Eigenschaften vorhanden sind.</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object)">
          <source>Use the <ph id="ph1">`context`</ph> parameter to extract additional information about the environment from which this converter is invoked.</source>
          <target state="translated">Über den <ph id="ph1">`context`</ph>-Parameter können zusätzliche Informationen über die Umgebung extrahiert werden, aus der dieser Konverter aufgerufen wurde.</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object)">
          <source>This parameter can be <ph id="ph1">`null`</ph>, so always check it.</source>
          <target state="translated">Dieser Parameter kann <ph id="ph1">`null`</ph>, daher immer überprüft.</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object)">
          <source>Also, properties on the context object can return <ph id="ph1">`null`</ph>.</source>
          <target state="translated">Außerdem können die Eigenschaften des Kontextobjekts <ph id="ph1">`null`</ph> zurückgeben.</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object)">
          <source>As implemented in this class, this method always returns <ph id="ph1">`null`</ph>.</source>
          <target state="translated">Bei Implementierung in dieser Klasse gibt diese Methode immer <ph id="ph1">`null`</ph> zurück.</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object)">
          <source>By default, a type does not return properties.</source>
          <target state="translated">Standardmäßig ein Typ nicht Eigenschaften zurück.</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object)">
          <source>An easy implementation of this method can call <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.GetProperties%2A&gt;</ph> for the correct data type.</source>
          <target state="translated">Eine einfache Implementierung dieser Methode aufrufen kann <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.GetProperties%2A&gt;</ph> für den richtigen Datentyp hin.</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
          <source>An <ph id="ph1">&lt;see cref="T:System.ComponentModel.ITypeDescriptorContext" /&gt;</ph> that provides a format context.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.ComponentModel.ITypeDescriptorContext" /&gt;</ph>, der einen Formatierungskontext bereitstellt.</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
          <source>An <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> that specifies the type of array for which to get properties.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph>, die den Typ des Arrays angibt, für den Eigenschaften abgerufen werden sollen.</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
          <source>An array of type <ph id="ph1">&lt;see cref="T:System.Attribute" /&gt;</ph> that is used as a filter.</source>
          <target state="translated">Ein Array vom Typ <ph id="ph1">&lt;see cref="T:System.Attribute" /&gt;</ph>, das als Filter verwendet wird.</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
          <source>Returns a collection of properties for the type of array specified by the value parameter, using the specified context and attributes.</source>
          <target state="translated">Gibt unter Verwendung des angegebenen Kontexts und der angegebenen Attribute eine Auflistung der Eigenschaften für den Arraytyp zurück, der durch den Wertparameter angegeben ist.</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
          <source>A <ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptorCollection" /&gt;</ph> with the properties that are exposed for this data type, or <ph id="ph2">&lt;see langword="null" /&gt;</ph> if there are no properties.</source>
          <target state="translated">Eine <ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptorCollection" /&gt;</ph> mit den Eigenschaften, die für diesen Datentyp verfügbar sind, oder <ph id="ph2">&lt;see langword="null" /&gt;</ph>, wenn keine Eigenschaften vorhanden sind.</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
          <source>As implemented in this class, this method always returns <ph id="ph1">`null`</ph>.</source>
          <target state="translated">Bei Implementierung in dieser Klasse gibt diese Methode immer <ph id="ph1">`null`</ph> zurück.</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
          <source>Override this method if the type you want to convert supports properties.</source>
          <target state="translated">Überschreiben Sie diese Methode, wenn der Typ, den Sie konvertieren möchten Eigenschaften unterstützt.</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
          <source>Use the <ph id="ph1">&lt;paramref name="context" /&gt;</ph> parameter to extract additional information about the environment from which this converter is invoked.</source>
          <target state="translated">Über den <ph id="ph1">&lt;paramref name="context" /&gt;</ph>-Parameter können zusätzliche Informationen über die Umgebung extrahiert werden, aus der dieser Konverter aufgerufen wurde.</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
          <source>This parameter can be <ph id="ph1">&lt;see langword="null" /&gt;</ph>, so always check it.</source>
          <target state="translated">Dieser Parameter kann <ph id="ph1">&lt;see langword="null" /&gt;</ph>, daher immer überprüft.</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
          <source>Also, properties on the context object can return <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Außerdem können die Eigenschaften des Kontextobjekts <ph id="ph1">&lt;see langword="null" /&gt;</ph> zurückgeben.</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
          <source>The attributes array is used to filter the array.</source>
          <target state="translated">Das AttributeArray wird zum Filtern des Arrays verwendet.</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
          <source>The attributes can have a mix of <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> and <ph id="ph2">&lt;see cref="T:System.Attribute" /&gt;</ph> objects.</source>
          <target state="translated">Die Attribute können eine Mischung aus <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> und <ph id="ph2">&lt;see cref="T:System.Attribute" /&gt;</ph> Objekte.</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
          <source>Filtering is defined by the following rules:</source>
          <target state="translated">Filterung wird durch die folgenden Regeln definiert:</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
          <source>A <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> is treated as a wildcard; it matches a property that has the <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> in its set of attributes.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> wird behandelt, als Platzhalter; er entspricht eine Eigenschaft, besitzt die <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> in einen Satz von Attributen.</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
          <source>If a property does not have an <ph id="ph1">&lt;see cref="T:System.Attribute" /&gt;</ph> of the same class, the property is not included in the returned array.</source>
          <target state="translated">Wenn eine Eigenschaft kein <ph id="ph1">&lt;see cref="T:System.Attribute" /&gt;</ph> der gleichen Klasse, die Eigenschaft nicht im zurückgegebenen Array enthalten.</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
          <source>If the attribute is an instance of <ph id="ph1">&lt;see cref="T:System.Attribute" /&gt;</ph>, the property must be an exact match or it is not included in the returned array.</source>
          <target state="translated">Wenn das Attribut eine Instanz von <ph id="ph1">&lt;see cref="T:System.Attribute" /&gt;</ph>, die Eigenschaft muss eine genaue Übereinstimmung, oder es ist nicht im zurückgegebenen Array enthalten.</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
          <source>If an <ph id="ph1">&lt;see cref="T:System.Attribute" /&gt;</ph> instance is specified and it is the default property, it is included in the returned array even if there is no instance of the <ph id="ph2">&lt;see cref="T:System.Attribute" /&gt;</ph> in the property.</source>
          <target state="translated">Wenn ein <ph id="ph1">&lt;see cref="T:System.Attribute" /&gt;</ph> Instanz angegeben ist und die Standardeigenschaft ist, es ist im zurückgegebenen Array enthalten, selbst wenn keine Instanz von der <ph id="ph2">&lt;see cref="T:System.Attribute" /&gt;</ph> in der Eigenschaft.</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.TypeConverter">
          <source>Returns whether this object supports properties.</source>
          <target state="translated">Gibt zurück, ob dieses Objekt Eigenschaften unterstützt.</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeConverter.GetPropertiesSupported">
          <source>Returns whether this object supports properties.</source>
          <target state="translated">Gibt zurück, ob dieses Objekt Eigenschaften unterstützt.</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeConverter.GetPropertiesSupported">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;see cref="M:System.ComponentModel.TypeConverter.GetProperties(System.Object)" /&gt;</ph> should be called to find the properties of this object; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, wenn <ph id="ph2">&lt;see cref="M:System.ComponentModel.TypeConverter.GetProperties(System.Object)" /&gt;</ph> aufgerufen werden muss, um die Eigenschaften dieses Objekts zu ermitteln, andernfalls <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeConverter.GetPropertiesSupported">
          <source>As implemented in this class, this method always returns <ph id="ph1">`false`</ph>.</source>
          <target state="translated">Bei Implementierung in dieser Klasse gibt diese Methode immer <ph id="ph1">`false`</ph> zurück.</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)">
          <source>An <ph id="ph1">&lt;see cref="T:System.ComponentModel.ITypeDescriptorContext" /&gt;</ph> that provides a format context.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.ComponentModel.ITypeDescriptorContext" /&gt;</ph>, der einen Formatierungskontext bereitstellt.</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)">
          <source>Returns whether this object supports properties, using the specified context.</source>
          <target state="translated">Gibt zurück, ob dieses Objekt Eigenschaften unter Verwendung des angegebenen Kontexts unterstützt.</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;see cref="M:System.ComponentModel.TypeConverter.GetProperties(System.Object)" /&gt;</ph> should be called to find the properties of this object; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, wenn <ph id="ph2">&lt;see cref="M:System.ComponentModel.TypeConverter.GetProperties(System.Object)" /&gt;</ph> aufgerufen werden muss, um die Eigenschaften dieses Objekts zu ermitteln, andernfalls <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)">
          <source>As implemented in this class, this method always returns <ph id="ph1">`false`</ph>.</source>
          <target state="translated">Bei Implementierung in dieser Klasse gibt diese Methode immer <ph id="ph1">`false`</ph> zurück.</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)">
          <source>Override this method if the type you want to convert supports properties.</source>
          <target state="translated">Überschreiben Sie diese Methode, wenn der Typ, den Sie konvertieren möchten Eigenschaften unterstützt.</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)">
          <source>Use the <ph id="ph1">&lt;paramref name="context" /&gt;</ph> parameter to extract additional information about the environment from which this converter is invoked.</source>
          <target state="translated">Über den <ph id="ph1">&lt;paramref name="context" /&gt;</ph>-Parameter können zusätzliche Informationen über die Umgebung extrahiert werden, aus der dieser Konverter aufgerufen wurde.</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)">
          <source>This parameter can be <ph id="ph1">&lt;see langword="null" /&gt;</ph>, so always check it.</source>
          <target state="translated">Dieser Parameter kann <ph id="ph1">&lt;see langword="null" /&gt;</ph>, daher immer überprüft.</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)">
          <source>Also, properties on the context object can return <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Außerdem können die Eigenschaften des Kontextobjekts <ph id="ph1">&lt;see langword="null" /&gt;</ph> zurückgeben.</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.TypeConverter">
          <source>Returns a collection of standard values for the data type this type converter is designed for.</source>
          <target state="translated">Gibt eine Auflistung von Standardwerten für den Datentyp zurück, für den dieser Typkonverter vorgesehen ist.</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeConverter.GetStandardValues">
          <source>Returns a collection of standard values from the default context for the data type this type converter is designed for.</source>
          <target state="translated">Gibt eine Auflistung von Standardwerten aus dem Standardkontext für den Datentyp zurück, für den dieser Typkonverter vorgesehen ist.</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeConverter.GetStandardValues">
          <source>A <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /&gt;</ph> containing a standard set of valid values, or <ph id="ph2">&lt;see langword="null" /&gt;</ph> if the data type does not support a standard set of values.</source>
          <target state="translated">Eine <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /&gt;</ph>, die eine Standardmenge zulässiger Werte enthält, oder <ph id="ph2">&lt;see langword="null" /&gt;</ph>, wenn der Datentyp keine Standardmenge von Werten unterstützt.</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeConverter.GetStandardValues">
          <source>As implemented in this class, this method always returns <ph id="ph1">`null`</ph>.</source>
          <target state="translated">Bei Implementierung in dieser Klasse gibt diese Methode immer <ph id="ph1">`null`</ph> zurück.</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
          <source>An <ph id="ph1">&lt;see cref="T:System.ComponentModel.ITypeDescriptorContext" /&gt;</ph> that provides a format context that can be used to extract additional information about the environment from which this converter is invoked.</source>
          <target state="translated">Eine <ph id="ph1">&lt;see cref="T:System.ComponentModel.ITypeDescriptorContext" /&gt;</ph>-Schnittstelle, die einen Formatierungskontext bereitstellt, mit dem zusätzliche Informationen über die Umgebung extrahiert werden können, aus der dieser Konverter aufgerufen wird.</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
          <source>This parameter or properties of this parameter can be <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Dieser Parameter oder Eigenschaften dieses Parameters können gleich <ph id="ph1">&lt;see langword="null" /&gt;</ph> sein.</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
          <source>Returns a collection of standard values for the data type this type converter is designed for when provided with a format context.</source>
          <target state="translated">Gibt eine Auflistung von Standardwerten für den Datentyp zurück, auf den dieser Typkonverter ausgelegt ist, wenn ein Formatkontext bereitgestellt wird.</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
          <source>A <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /&gt;</ph> that holds a standard set of valid values, or <ph id="ph2">&lt;see langword="null" /&gt;</ph> if the data type does not support a standard set of values.</source>
          <target state="translated">Eine <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /&gt;</ph>, die einen Standardsatz gültiger Werte enthält, oder <ph id="ph2">&lt;see langword="null" /&gt;</ph>, wenn der Datentyp keinen Standardsatz von Werten unterstützt.</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
          <source>As implemented in <ph id="ph1">&lt;xref:System.ComponentModel.TypeConverter&gt;</ph>, this method always returns <ph id="ph2">`null`</ph>.</source>
          <target state="translated">Bei Implementierung in <ph id="ph1">&lt;xref:System.ComponentModel.TypeConverter&gt;</ph>, diese Methode gibt immer <ph id="ph2">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
          <source>For an example on this function, see the <ph id="ph1">&lt;xref:System.ComponentModel.TypeConverter&gt;</ph> class.</source>
          <target state="translated">Ein Beispiel für diese Funktion finden Sie unter der <ph id="ph1">&lt;xref:System.ComponentModel.TypeConverter&gt;</ph> Klasse.</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
          <source>Override this method if the type you want to convert supports standard values.</source>
          <target state="translated">Überschreiben Sie diese Methode, wenn der Typ, den Sie konvertieren möchten Standardwerten unterstützt.</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.TypeConverter">
          <source>Returns whether the collection of standard values returned from <ph id="ph1">&lt;see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /&gt;</ph> is an exclusive list.</source>
          <target state="translated">Gibt zurück, ob die von <ph id="ph1">&lt;see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /&gt;</ph> zurückgegebene Auflistung von Standardwerten eine exklusive Liste darstellt.</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeConverter.GetStandardValuesExclusive">
          <source>Returns whether the collection of standard values returned from <ph id="ph1">&lt;see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /&gt;</ph> is an exclusive list.</source>
          <target state="translated">Gibt zurück, ob die von <ph id="ph1">&lt;see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /&gt;</ph> zurückgegebene Auflistung von Standardwerten eine exklusive Liste darstellt.</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeConverter.GetStandardValuesExclusive">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /&gt;</ph> returned from <ph id="ph3">&lt;see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /&gt;</ph> is an exhaustive list of possible values; <ph id="ph4">&lt;see langword="false" /&gt;</ph> if other values are possible.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, wenn die von der <ph id="ph2">&lt;see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /&gt;</ph>-Methode zurückgegebene <ph id="ph3">&lt;see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /&gt;</ph> eine vollständige Liste möglicher Werte darstellt, oder <ph id="ph4">&lt;see langword="false" /&gt;</ph>, wenn andere Werte möglich sind.</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeConverter.GetStandardValuesExclusive">
          <source>As implemented in this class, this method always returns <ph id="ph1">`false`</ph>.</source>
          <target state="translated">Bei Implementierung in dieser Klasse gibt diese Methode immer <ph id="ph1">`false`</ph> zurück.</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeConverter.GetStandardValuesExclusive">
          <source>If the list is exclusive, such as in an enumeration data type, then no other values are valid.</source>
          <target state="translated">Wenn es sich um eine exklusive Liste handelt, zum Beispiel bei einem Enumerationsdatentyp, sind keine anderen Werte gültig.</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeConverter.GetStandardValuesExclusive">
          <source>If the list is not exclusive, then other valid values might exist in addition to the list of standard values that the <ph id="ph1">&lt;xref:System.ComponentModel.TypeConverter.GetStandardValues%2A&gt;</ph> method provides.</source>
          <target state="translated">Wenn die Liste nicht exklusiv ist, können in der von der <ph id="ph1">&lt;xref:System.ComponentModel.TypeConverter.GetStandardValues%2A&gt;</ph>-Methode bereitgestellten Liste neben den Standardwerten auch andere Werte gültige Werte vorhanden sein.</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeConverter.GetStandardValuesExclusive">
          <source>If the values are exclusive, the list returned by <ph id="ph1">&lt;xref:System.ComponentModel.TypeConverter.GetStandardValues%2A&gt;</ph> should not allow these values to be edited.</source>
          <target state="translated">Wenn die Werte exklusiv sind, ist es nicht möglich, diese Werte in der von der <ph id="ph1">&lt;xref:System.ComponentModel.TypeConverter.GetStandardValues%2A&gt;</ph>-Methode zurückgegebenen Liste zu bearbeiten.</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)">
          <source>An <ph id="ph1">&lt;see cref="T:System.ComponentModel.ITypeDescriptorContext" /&gt;</ph> that provides a format context.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.ComponentModel.ITypeDescriptorContext" /&gt;</ph>, der einen Formatierungskontext bereitstellt.</target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)">
          <source>Returns whether the collection of standard values returned from <ph id="ph1">&lt;see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /&gt;</ph> is an exclusive list of possible values, using the specified context.</source>
          <target state="translated">Gibt zurück, ob die Auflistung von Standardwerten, die von der <ph id="ph1">&lt;see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /&gt;</ph>-Methode unter Verwendung des angegebenen Kontexts zurückgegeben werden, eine exklusive Liste von möglichen Werten darstellt.</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /&gt;</ph> returned from <ph id="ph3">&lt;see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /&gt;</ph> is an exhaustive list of possible values; <ph id="ph4">&lt;see langword="false" /&gt;</ph> if other values are possible.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, wenn die von der <ph id="ph2">&lt;see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /&gt;</ph>-Methode zurückgegebene <ph id="ph3">&lt;see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /&gt;</ph> eine vollständige Liste möglicher Werte darstellt, oder <ph id="ph4">&lt;see langword="false" /&gt;</ph>, wenn andere Werte möglich sind.</target>       </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)">
          <source>As implemented in this class, this method always returns <ph id="ph1">`false`</ph>.</source>
          <target state="translated">Bei Implementierung in dieser Klasse gibt diese Methode immer <ph id="ph1">`false`</ph> zurück.</target>       </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)">
          <source>If the list is exclusive, such as in an enumeration data type, then no other values are valid.</source>
          <target state="translated">Wenn es sich um eine exklusive Liste handelt, zum Beispiel bei einem Enumerationsdatentyp, sind keine anderen Werte gültig.</target>       </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)">
          <source>If the list is not exclusive, then other valid values might exist in addition to the list of standard values that the <ph id="ph1">&lt;xref:System.ComponentModel.TypeConverter.GetStandardValues%2A&gt;</ph> method provides.</source>
          <target state="translated">Wenn die Liste nicht exklusiv ist, können in der von der <ph id="ph1">&lt;xref:System.ComponentModel.TypeConverter.GetStandardValues%2A&gt;</ph>-Methode bereitgestellten Liste neben den Standardwerten auch andere Werte gültige Werte vorhanden sein.</target>       </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)">
          <source>If the values are exclusive, the list returned by <ph id="ph1">&lt;xref:System.ComponentModel.TypeConverter.GetStandardValues%2A&gt;</ph> should not allow these values to be edited.</source>
          <target state="translated">Wenn die Werte exklusiv sind, ist es nicht möglich, diese Werte in der von der <ph id="ph1">&lt;xref:System.ComponentModel.TypeConverter.GetStandardValues%2A&gt;</ph>-Methode zurückgegebenen Liste zu bearbeiten.</target>       </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)">
          <source>Override this method if the type you want to convert supports standard values.</source>
          <target state="translated">Überschreiben Sie diese Methode, wenn der Typ, den Sie konvertieren möchten Standardwerten unterstützt.</target>       </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)">
          <source>Use the <ph id="ph1">&lt;paramref name="context" /&gt;</ph> parameter to extract additional information about the environment from which this converter is invoked.</source>
          <target state="translated">Über den <ph id="ph1">&lt;paramref name="context" /&gt;</ph>-Parameter können zusätzliche Informationen über die Umgebung extrahiert werden, aus der dieser Konverter aufgerufen wurde.</target>       </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)">
          <source>This parameter can be <ph id="ph1">&lt;see langword="null" /&gt;</ph>, so always check it.</source>
          <target state="translated">Dieser Parameter kann <ph id="ph1">&lt;see langword="null" /&gt;</ph>, daher immer überprüft.</target>       </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)">
          <source>Also, properties on the context object can return <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Außerdem können die Eigenschaften des Kontextobjekts <ph id="ph1">&lt;see langword="null" /&gt;</ph> zurückgeben.</target>       </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.TypeConverter">
          <source>Returns whether this object supports a standard set of values that can be picked from a list.</source>
          <target state="translated">Gibt zurück, ob dieses Objekt einen Standardsatz von Werten unterstützt, die aus einer Liste ausgewählt werden können.</target>       </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeConverter.GetStandardValuesSupported">
          <source>Returns whether this object supports a standard set of values that can be picked from a list.</source>
          <target state="translated">Gibt zurück, ob dieses Objekt einen Standardsatz von Werten unterstützt, die aus einer Liste ausgewählt werden können.</target>       </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeConverter.GetStandardValuesSupported">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /&gt;</ph> should be called to find a common set of values the object supports; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, wenn die <ph id="ph2">&lt;see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /&gt;</ph>-Methode aufgerufen werden muss, um eine vom Objekt unterstützte Standardmenge von Werten zu ermitteln, andernfalls <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)">
          <source>An <ph id="ph1">&lt;see cref="T:System.ComponentModel.ITypeDescriptorContext" /&gt;</ph> that provides a format context.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.ComponentModel.ITypeDescriptorContext" /&gt;</ph>, der einen Formatierungskontext bereitstellt.</target>       </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)">
          <source>Returns whether this object supports a standard set of values that can be picked from a list, using the specified context.</source>
          <target state="translated">Gibt zurück, ob dieses Objekt einen Standardsatz von Werten unterstützt, die unter Verwendung des angegebenen Kontexts aus einer Liste ausgewählt werden können.</target>       </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /&gt;</ph> should be called to find a common set of values the object supports; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, wenn die <ph id="ph2">&lt;see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /&gt;</ph>-Methode aufgerufen werden muss, um eine vom Objekt unterstützte Standardmenge von Werten zu ermitteln, andernfalls <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)">
          <source>As implemented in this class, this method always returns <ph id="ph1">`false`</ph>.</source>
          <target state="translated">Bei Implementierung in dieser Klasse gibt diese Methode immer <ph id="ph1">`false`</ph> zurück.</target>       </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)">
          <source>Use the <ph id="ph1">`context`</ph> parameter to extract additional information about the environment from which this converter is invoked.</source>
          <target state="translated">Über den <ph id="ph1">`context`</ph>-Parameter können zusätzliche Informationen über die Umgebung extrahiert werden, aus der dieser Konverter aufgerufen wurde.</target>       </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)">
          <source>This parameter can be <ph id="ph1">`null`</ph>, so always check it.</source>
          <target state="translated">Dieser Parameter kann <ph id="ph1">`null`</ph>, daher immer überprüft.</target>       </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)">
          <source>Also, properties on the context object can return <ph id="ph1">`null`</ph>.</source>
          <target state="translated">Außerdem können die Eigenschaften des Kontextobjekts <ph id="ph1">`null`</ph> zurückgeben.</target>       </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)">
          <source>Override this method if the type you want to convert supports standard values.</source>
          <target state="translated">Überschreiben Sie diese Methode, wenn der Typ, den Sie konvertieren möchten Standardwerten unterstützt.</target>       </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.TypeConverter">
          <source>Returns whether the given value object is valid for this type.</source>
          <target state="translated">Ruft ab, ob das angegebene Werteobjekt für diesen Typ gültig ist.</target>       </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeConverter.IsValid(System.Object)">
          <source>The object to test for validity.</source>
          <target state="translated">Das auf Gültigkeit zu prüfende Objekt.</target>       </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeConverter.IsValid(System.Object)">
          <source>Returns whether the given value object is valid for this type.</source>
          <target state="translated">Ruft ab, ob das angegebene Werteobjekt für diesen Typ gültig ist.</target>       </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeConverter.IsValid(System.Object)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the specified value is valid for this object; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, wenn der angegebene Wert für dieses Objekt gültig ist, andernfalls <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeConverter.IsValid(System.Object)">
          <source>Starting in <ph id="ph1">[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]</ph>, the <ph id="ph2">&lt;xref:System.ComponentModel.TypeConverter.IsValid%2A&gt;</ph> method catches exceptions from the <ph id="ph3">&lt;xref:System.ComponentModel.TypeConverter.CanConvertFrom%2A&gt;</ph> and <ph id="ph4">&lt;xref:System.ComponentModel.TypeConverter.ConvertFrom%2A&gt;</ph> methods.</source>
          <target state="translated">Ab <ph id="ph1">[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]</ph>, <ph id="ph2">&lt;xref:System.ComponentModel.TypeConverter.IsValid%2A&gt;</ph> -Methode fängt Ausnahmen aus der <ph id="ph3">&lt;xref:System.ComponentModel.TypeConverter.CanConvertFrom%2A&gt;</ph> und <ph id="ph4">&lt;xref:System.ComponentModel.TypeConverter.ConvertFrom%2A&gt;</ph> Methoden.</target>       </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeConverter.IsValid(System.Object)">
          <source>If the input value type causes <ph id="ph1">&lt;xref:System.ComponentModel.TypeConverter.CanConvertFrom%2A&gt;</ph> to return <ph id="ph2">`false`</ph>, or if the input value causes <ph id="ph3">&lt;xref:System.ComponentModel.TypeConverter.ConvertFrom%2A&gt;</ph> to raise an exception, the <ph id="ph4">&lt;xref:System.ComponentModel.TypeConverter.IsValid%2A&gt;</ph> method returns <ph id="ph5">`false`</ph>.</source>
          <target state="translated">Wenn der Eingabewerttyp <ph id="ph1">&lt;xref:System.ComponentModel.TypeConverter.CanConvertFrom%2A&gt;</ph> zurückzugebenden <ph id="ph2">`false`</ph>, oder wenn der Eingabewert bewirkt, dass <ph id="ph3">&lt;xref:System.ComponentModel.TypeConverter.ConvertFrom%2A&gt;</ph> zum Auslösen einer Ausnahme, die <ph id="ph4">&lt;xref:System.ComponentModel.TypeConverter.IsValid%2A&gt;</ph> -Methode zurückkehrt <ph id="ph5">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeConverter.IsValid(System.Object)">
          <source>To enable the legacy behavior, insert the following lines into the configuration file of the application, for example, application1.exe.config.</source>
          <target state="translated">Um die Legacyverhalten zu aktivieren, fügen Sie die folgenden Zeilen in der Konfigurationsdatei der Anwendung, z. B. application1.exe.config, ein.</target>       </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeConverter.IsValid(System.Object)">
          <source>Override this method if the type you want to convert supports standard values that can be validated.</source>
          <target state="translated">Überschreiben Sie diese Methode, wenn der Typ, den Sie konvertieren möchten Standardwerten unterstützt, die überprüft werden kann.</target>       </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeConverter.IsValid(System.Object)">
          <source>The <ph id="ph1">&lt;see cref="M:System.ComponentModel.TypeConverter.IsValid(System.Object)" /&gt;</ph> method is used to validate a value within the type rather than to determine if <ph id="ph2">&lt;paramref name="value" /&gt;</ph> can be converted to the given type.</source>
          <target state="translated">Die <ph id="ph1">&lt;see cref="M:System.ComponentModel.TypeConverter.IsValid(System.Object)" /&gt;</ph> Methode wird verwendet, um einen Wert innerhalb des Typs zu überprüfen, statt zum bestimmen, ob <ph id="ph2">&lt;paramref name="value" /&gt;</ph> für den angegebenen Typ konvertiert werden kann.</target>       </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeConverter.IsValid(System.Object)">
          <source>For example, <ph id="ph1">&lt;see cref="M:System.ComponentModel.TypeConverter.IsValid(System.Object)" /&gt;</ph> can be used to determine if a given value is valid for an enumeration type.</source>
          <target state="translated">Beispielsweise <ph id="ph1">&lt;see cref="M:System.ComponentModel.TypeConverter.IsValid(System.Object)" /&gt;</ph> können verwendet werden, um zu bestimmen, ob ein angegebener Wert für einen Enumerationstyp gültig ist.</target>       </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeConverter.IsValid(System.Object)">
          <source>For an example, see <ph id="ph1">&lt;see cref="T:System.ComponentModel.EnumConverter" /&gt;</ph>.</source>
          <target state="translated">Ein Beispiel finden Sie unter <ph id="ph1">&lt;see cref="T:System.ComponentModel.EnumConverter" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeConverter.IsValid(System.Object)">
          <source>You can write your own <bpt id="p1">&lt;c&gt;</bpt>WillConvertSucceed<ept id="p1">&lt;/c&gt;</ept> method by wrapping the <ph id="ph1">&lt;see cref="Overload:System.ComponentModel.TypeConverter.ConvertTo" /&gt;</ph> and <ph id="ph2">&lt;see cref="Overload:System.ComponentModel.TypeConverter.ConvertFrom" /&gt;</ph> methods in exception blocks.</source>
          <target state="translated">Sie können einen eigenen Handler erstellen <bpt id="p1">&lt;c&gt;</bpt>WillConvertSucceed<ept id="p1">&lt;/c&gt;</ept> Methode durch wrapping der <ph id="ph1">&lt;see cref="Overload:System.ComponentModel.TypeConverter.ConvertTo" /&gt;</ph> und <ph id="ph2">&lt;see cref="Overload:System.ComponentModel.TypeConverter.ConvertFrom" /&gt;</ph> Methoden in Ausnahmeblöcke.</target>       </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.ComponentModel.ITypeDescriptorContext" /&gt;</ph> that provides a format context.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.ComponentModel.ITypeDescriptorContext" /&gt;</ph>, der einen Formatierungskontext bereitstellt.</target>       </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> to test for validity.</source>
          <target state="translated">Die auf Gültigkeit zu überprüfende <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph>-Klasse.</target>       </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)">
          <source>Returns whether the given value object is valid for this type and for the specified context.</source>
          <target state="translated">Gibt zurück, ob das angegebene Wertobjekt für diesen Typ und den angegebenen Kontext gültig ist.</target>       </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the specified value is valid for this object; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, wenn der angegebene Wert für dieses Objekt gültig ist, andernfalls <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)">
          <source>Use the <ph id="ph1">`context`</ph> parameter to extract additional information about the environment from which this converter is invoked.</source>
          <target state="translated">Über den <ph id="ph1">`context`</ph>-Parameter können zusätzliche Informationen über die Umgebung extrahiert werden, aus der dieser Konverter aufgerufen wurde.</target>       </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)">
          <source>This parameter can be <ph id="ph1">`null`</ph>, so always check it.</source>
          <target state="translated">Dieser Parameter kann <ph id="ph1">`null`</ph>, daher immer überprüft.</target>       </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)">
          <source>Also, properties on the context object can return <ph id="ph1">`null`</ph>.</source>
          <target state="translated">Außerdem können die Eigenschaften des Kontextobjekts <ph id="ph1">`null`</ph> zurückgeben.</target>       </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)">
          <source>Starting in <ph id="ph1">[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]</ph>, the <ph id="ph2">&lt;xref:System.ComponentModel.TypeConverter.IsValid%2A&gt;</ph> method catches exceptions from the <ph id="ph3">&lt;xref:System.ComponentModel.TypeConverter.CanConvertFrom%2A&gt;</ph> and <ph id="ph4">&lt;xref:System.ComponentModel.TypeConverter.ConvertFrom%2A&gt;</ph> methods.</source>
          <target state="translated">Ab <ph id="ph1">[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]</ph>, <ph id="ph2">&lt;xref:System.ComponentModel.TypeConverter.IsValid%2A&gt;</ph> -Methode fängt Ausnahmen aus der <ph id="ph3">&lt;xref:System.ComponentModel.TypeConverter.CanConvertFrom%2A&gt;</ph> und <ph id="ph4">&lt;xref:System.ComponentModel.TypeConverter.ConvertFrom%2A&gt;</ph> Methoden.</target>       </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)">
          <source>If the input value type causes <ph id="ph1">&lt;xref:System.ComponentModel.TypeConverter.CanConvertFrom%2A&gt;</ph> to return <ph id="ph2">`false`</ph>, or if the input value causes <ph id="ph3">&lt;xref:System.ComponentModel.TypeConverter.ConvertFrom%2A&gt;</ph> to raise an exception, the <ph id="ph4">&lt;xref:System.ComponentModel.TypeConverter.IsValid%2A&gt;</ph> method returns <ph id="ph5">`false`</ph>.</source>
          <target state="translated">Wenn der Eingabewerttyp <ph id="ph1">&lt;xref:System.ComponentModel.TypeConverter.CanConvertFrom%2A&gt;</ph> zurückzugebenden <ph id="ph2">`false`</ph>, oder wenn der Eingabewert bewirkt, dass <ph id="ph3">&lt;xref:System.ComponentModel.TypeConverter.ConvertFrom%2A&gt;</ph> zum Auslösen einer Ausnahme, die <ph id="ph4">&lt;xref:System.ComponentModel.TypeConverter.IsValid%2A&gt;</ph> -Methode zurückkehrt <ph id="ph5">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)">
          <source>To enable the legacy behavior, insert the following lines into the configuration file of the application, for example, application1.exe.config.</source>
          <target state="translated">Um die Legacyverhalten zu aktivieren, fügen Sie die folgenden Zeilen in der Konfigurationsdatei der Anwendung, z. B. application1.exe.config, ein.</target>       </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)">
          <source>For an example of this function, see the <ph id="ph1">&lt;xref:System.ComponentModel.TypeConverter&gt;</ph> class.</source>
          <target state="translated">Ein Beispiel dieser Funktion finden Sie unter der <ph id="ph1">&lt;xref:System.ComponentModel.TypeConverter&gt;</ph> Klasse.</target>       </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)">
          <source>Override this method if the type you want to convert supports standard values that can be validated.</source>
          <target state="translated">Überschreiben Sie diese Methode, wenn der Typ, den Sie konvertieren möchten Standardwerten unterstützt, die überprüft werden kann.</target>       </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="M:System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)" /&gt;</ph> method is used to validate a value within the type rather than to determine if <ph id="ph2">&lt;paramref name="value" /&gt;</ph> can be converted to the given type.</source>
          <target state="translated">Die <ph id="ph1">&lt;see cref="M:System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)" /&gt;</ph> Methode wird verwendet, um einen Wert innerhalb des Typs zu überprüfen, statt zum bestimmen, ob <ph id="ph2">&lt;paramref name="value" /&gt;</ph> für den angegebenen Typ konvertiert werden kann.</target>       </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)">
          <source>For example, <ph id="ph1">&lt;see cref="M:System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)" /&gt;</ph> can be used to determine if a given value is valid for an enumeration type.</source>
          <target state="translated">Beispielsweise <ph id="ph1">&lt;see cref="M:System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)" /&gt;</ph> können verwendet werden, um zu bestimmen, ob ein angegebener Wert für einen Enumerationstyp gültig ist.</target>       </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)">
          <source>For an example, see <ph id="ph1">&lt;see cref="T:System.ComponentModel.EnumConverter" /&gt;</ph>.</source>
          <target state="translated">Ein Beispiel finden Sie unter <ph id="ph1">&lt;see cref="T:System.ComponentModel.EnumConverter" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeConverter.SortProperties(System.ComponentModel.PropertyDescriptorCollection,System.String[])">
          <source>A <ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptorCollection" /&gt;</ph> that has the properties to sort.</source>
          <target state="translated">Eine <ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptorCollection" /&gt;</ph>-Klasse mit den zu sortierenden Eigenschaften.</target>       </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeConverter.SortProperties(System.ComponentModel.PropertyDescriptorCollection,System.String[])">
          <source>An array of names in the order you want the properties to appear in the collection.</source>
          <target state="translated">Ein Array von Namen in der Reihenfolge, in der die Eigenschaften in der Auflistung angezeigt werden sollen.</target>       </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeConverter.SortProperties(System.ComponentModel.PropertyDescriptorCollection,System.String[])">
          <source>Sorts a collection of properties.</source>
          <target state="translated">Sortiert eine Auflistung von Eigenschaften.</target>       </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeConverter.SortProperties(System.ComponentModel.PropertyDescriptorCollection,System.String[])">
          <source>A <ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptorCollection" /&gt;</ph> that contains the sorted properties.</source>
          <target state="translated">Eine <ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptorCollection" /&gt;</ph>-Klasse mit den sortierten Eigenschaften.</target>       </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeConverter.SortProperties(System.ComponentModel.PropertyDescriptorCollection,System.String[])">
          <source>All properties in the collection that are not already in the array of names are added alphabetically to the end.</source>
          <target state="translated">Alle Eigenschaften in der Auflistung, die nicht bereits in das Array von Namen werden in alphabetischer Reihenfolge am Ende hinzugefügt.</target>       </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeConverter.SortProperties(System.ComponentModel.PropertyDescriptorCollection,System.String[])">
          <source>If the <ph id="ph1">`names`</ph> parameter is an empty array or <ph id="ph2">`null`</ph>, all the properties in the collection are sorted alphabetically.</source>
          <target state="translated">Wenn die <ph id="ph1">`names`</ph> Parameter ist ein leeres Array oder <ph id="ph2">`null`</ph>, alle Eigenschaften in der Auflistung alphabetisch sortiert.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>