<Type Name="TypeConverter" FullName="System.ComponentModel.TypeConverter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="5f481b34feb6da5934d7304387e22b436d3287b0" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70691812" /></Metadata><TypeSignature Language="C#" Value="public class TypeConverter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TypeConverter extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.TypeConverter" />
  <TypeSignature Language="VB.NET" Value="Public Class TypeConverter" />
  <TypeSignature Language="C++ CLI" Value="public ref class TypeConverter" />
  <TypeSignature Language="F#" Value="type TypeConverter = class" />
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="1a18e-101">Stellt eine einheitliche Methode zum Konvertieren von Werttypen in andere Typen sowie zum Zugreifen auf Standardwerte und Untereigenschaften bereit.</span><span class="sxs-lookup"><span data-stu-id="1a18e-101">Provides a unified way of converting types of values to other types, as well as for accessing standard values and subproperties.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a18e-102">Der häufigste Konvertertyp ist ein Typ, der in eine und aus einer Textdarstellung konvertiert.</span><span class="sxs-lookup"><span data-stu-id="1a18e-102">The most common type of converter is one that converts to and from a text representation.</span></span> <span data-ttu-id="1a18e-103">Der Typkonverter für eine Klasse wird mit einem <xref:System.ComponentModel.TypeConverterAttribute>an die-Klasse gebunden.</span><span class="sxs-lookup"><span data-stu-id="1a18e-103">The type converter for a class is bound to the class with a <xref:System.ComponentModel.TypeConverterAttribute>.</span></span> <span data-ttu-id="1a18e-104">Wenn dieses Attribut nicht überschrieben wird, verwenden alle Klassen, die von dieser Klasse erben, denselben Typkonverter wie die Basisklasse.</span><span class="sxs-lookup"><span data-stu-id="1a18e-104">Unless this attribute is overridden, all classes that inherit from this class use the same type converter as the base class.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1a18e-105">Verwenden Sie für allgemeine Typsystem Zwecke keinen direkten Zugriff auf einen Typkonverter.</span><span class="sxs-lookup"><span data-stu-id="1a18e-105">For general type system purposes, do not access a type converter directly.</span></span> <span data-ttu-id="1a18e-106">Greifen Sie stattdessen mithilfe <xref:System.ComponentModel.TypeDescriptor>von auf den entsprechenden Konverter zu.</span><span class="sxs-lookup"><span data-stu-id="1a18e-106">Instead, access the appropriate converter by using <xref:System.ComponentModel.TypeDescriptor>.</span></span> <span data-ttu-id="1a18e-107">Weitere Informationen finden Sie in den bereitgestellten Codebeispielen.</span><span class="sxs-lookup"><span data-stu-id="1a18e-107">For more information, see the code examples provided.</span></span> 
>
> <span data-ttu-id="1a18e-108">Wenn Sie jedoch XAML verwenden, sucht ein XAML-Prozessor direkt <xref:System.ComponentModel.TypeConverterAttribute> nach dem, anstatt zu durch <xref:System.ComponentModel.TypeDescriptor>laufen.</span><span class="sxs-lookup"><span data-stu-id="1a18e-108">However, when using XAML, a XAML processor searches for the <xref:System.ComponentModel.TypeConverterAttribute> directly, instead of going through <xref:System.ComponentModel.TypeDescriptor>.</span></span> <span data-ttu-id="1a18e-109">In Fällen, in denen Sie eine <xref:System.ComponentModel.TypeDescriptor> -Instanz aus Code oder eine freigegebene Instanz in WPF-Ressourcen erstellen möchten, ist es akzeptabel, Sie direkt ohne <xref:System.ComponentModel.TypeDescriptor> Verweise oder andere Reflektions-und typsystemunterstützung zu konstruieren.</span><span class="sxs-lookup"><span data-stu-id="1a18e-109">For cases where you do want a <xref:System.ComponentModel.TypeDescriptor> instance from code, or where you create a shared instance in WPF resources, it is acceptable to construct it directly without referencing <xref:System.ComponentModel.TypeDescriptor> or other reflection and type system support.</span></span>  
  
 <span data-ttu-id="1a18e-110">Auf Klassen, <xref:System.ComponentModel.TypeConverter> die von abgeleitet sind, wird häufig als Teil davon verwiesen, wie ein XAML-Prozessor einen Attribut-oder Initialisierungs Textwert aus Markup konvertiert (d. h. eine Zeichenfolge) und ein Objekt für eine Lauf Zeit Darstellung generiert.</span><span class="sxs-lookup"><span data-stu-id="1a18e-110">Classes derived from <xref:System.ComponentModel.TypeConverter> are often referenced as part of how a XAML processor converts an attribute or initialization text value from markup (which is inherently a string) and generates an object for a run-time representation.</span></span> <span data-ttu-id="1a18e-111">Benutzerdefinierte typautoren, die ein Typkonvertierungs Verhalten für XAML unterstützen möchten <xref:System.ComponentModel.TypeConverter> , implementieren in der Regel eine `ConvertFrom` Klasse, die ihr eigenes eindeutiges Verhalten von einer Zeichenfolge unterstützt.</span><span class="sxs-lookup"><span data-stu-id="1a18e-111">Custom type authors that intend to support a type conversion behavior for XAML typically implement a <xref:System.ComponentModel.TypeConverter> class that supports their own unique `ConvertFrom` behavior from a string.</span></span> <span data-ttu-id="1a18e-112">Dieses Verhalten ermöglicht die Typkonvertierung aus der Zeichenfolge, die als XAML-Attribut Wert bereitgestellt wird, und stellt einen XAML-Prozessor mit der Unterstützung bereit, der zum Erstellen eines Objekts aus der Zeichenfolge erforderlich ist, damit das Objekt in einem analysierten Objekt Diagramm erstellt werden kann.</span><span class="sxs-lookup"><span data-stu-id="1a18e-112">This behavior enables type conversion from the string provided as a XAML attribute value and provides a XAML processor with the support needed to create an object from the string, so that the object can be produced in a parsed object graph.</span></span> <span data-ttu-id="1a18e-113">Benutzerdefinierte Typen oder Member von benutzerdefinierten Typen werden durch <xref:System.ComponentModel.TypeConverterAttribute> anwenden auf die Definitionen angegeben, wobei das-Attribut auf <xref:System.ComponentModel.TypeConverter> die benutzerdefinierte Implementierung verweist.</span><span class="sxs-lookup"><span data-stu-id="1a18e-113">Custom types or members of custom types are indicated by applying <xref:System.ComponentModel.TypeConverterAttribute> to the definitions, with the attribute referencing the custom <xref:System.ComponentModel.TypeConverter> implementation.</span></span> <span data-ttu-id="1a18e-114">Weitere Informationen finden Sie unter [Übersicht über Typkonverter für XAML](~/docs/framework/xaml-services/type-converters-for-xaml-overview.md).</span><span class="sxs-lookup"><span data-stu-id="1a18e-114">For more information, see [Type Converters for XAML Overview](~/docs/framework/xaml-services/type-converters-for-xaml-overview.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1a18e-115">Im folgenden Codebeispiel wird gezeigt, wie eine Instanz eines Typkonverters erstellt und an eine-Klasse gebunden wird.</span><span class="sxs-lookup"><span data-stu-id="1a18e-115">The following code example shows how to create an instance of a type converter and bind it to a class.</span></span> <span data-ttu-id="1a18e-116">Die Klasse, die den Konverter `MyClassConverter`implementiert, muss von der <xref:System.ComponentModel.TypeConverter> -Klasse erben.</span><span class="sxs-lookup"><span data-stu-id="1a18e-116">The class implementing the converter, `MyClassConverter`, must inherit from the <xref:System.ComponentModel.TypeConverter> class.</span></span>  
  
 [!code-cpp[Classic TypeConverter Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TypeConverter Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TypeConverter Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TypeConverter Example/CS/source.cs#1)]
 [!code-vb[Classic TypeConverter Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TypeConverter Example/VB/source.vb#1)]  
  
 <span data-ttu-id="1a18e-117">Wenn Sie über eine Eigenschaft mit einer Enumeration verfügen, überprüfen Sie, ob ein Enumerationswert gültig ist, bevor Sie die-Eigenschaft festlegen.</span><span class="sxs-lookup"><span data-stu-id="1a18e-117">When you have a property that has an enumeration, check to see whether an enumeration value is valid before setting the property.</span></span> <span data-ttu-id="1a18e-118">Das nächste Codebeispiel setzt voraus, dass eine Enumeration mit dem Namen `MyPropertyEnum` deklariert wurde.</span><span class="sxs-lookup"><span data-stu-id="1a18e-118">The next code example requires that an enumeration called `MyPropertyEnum` has been declared.</span></span>  
  
 [!code-cpp[Classic TypeConverter Example#2](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TypeConverter Example/CPP/source.cpp#2)]
 [!code-csharp[Classic TypeConverter Example#2](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TypeConverter Example/CS/source.cs#2)]
 [!code-vb[Classic TypeConverter Example#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TypeConverter Example/VB/source.vb#2)]  
  
 <span data-ttu-id="1a18e-119">Eine andere gängige typkonverterverwendung ist das Konvertieren eines Objekts in eine Zeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="1a18e-119">Another common type converter usage is to convert an object to a string.</span></span> <span data-ttu-id="1a18e-120">Im folgenden Codebeispiel wird der Name <xref:System.Drawing.Color> der in der Variablen `c`gespeicherten ausgegeben.</span><span class="sxs-lookup"><span data-stu-id="1a18e-120">The following code example prints out the name of the <xref:System.Drawing.Color> stored in the variable `c`.</span></span>  
  
 [!code-cpp[Classic TypeConverter Example#3](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TypeConverter Example/CPP/source.cpp#3)]
 [!code-csharp[Classic TypeConverter Example#3](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TypeConverter Example/CS/source.cs#3)]
 [!code-vb[Classic TypeConverter Example#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TypeConverter Example/VB/source.vb#3)]  
  
 <span data-ttu-id="1a18e-121">Sie können auch einen Typkonverter verwenden, um einen Wert aus seinem Namen zu konvertieren, wie im folgenden Codebeispiel gezeigt.</span><span class="sxs-lookup"><span data-stu-id="1a18e-121">You can also use a type converter to convert a value from its name, as shown in the next code example.</span></span>  
  
 [!code-cpp[Classic TypeConverter Example#4](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TypeConverter Example/CPP/source.cpp#4)]
 [!code-csharp[Classic TypeConverter Example#4](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TypeConverter Example/CS/source.cs#4)]
 [!code-vb[Classic TypeConverter Example#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TypeConverter Example/VB/source.vb#4)]  
  
 <span data-ttu-id="1a18e-122">Im folgenden Codebeispiel können Sie einen Typkonverter verwenden, um den Satz von Standardwerten auszugeben, den das-Objekt unterstützt.</span><span class="sxs-lookup"><span data-stu-id="1a18e-122">In the following code example, you can use a type converter to print out the set of standard values that the object supports.</span></span>  
  
 [!code-cpp[Classic TypeConverter Example#5](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TypeConverter Example/CPP/source.cpp#5)]
 [!code-csharp[Classic TypeConverter Example#5](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TypeConverter Example/CS/source.cs#5)]
 [!code-vb[Classic TypeConverter Example#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TypeConverter Example/VB/source.vb#5)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para><span data-ttu-id="1a18e-123">Erben von <see cref="T:System.ComponentModel.TypeConverter" /> , um Ihre eigenen Konvertierungs Anforderungen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="1a18e-123">Inherit from <see cref="T:System.ComponentModel.TypeConverter" /> to implement your own conversion requirements.</span></span> <span data-ttu-id="1a18e-124">Wenn Sie von dieser Klasse erben, können Sie die folgenden Methoden überschreiben:</span><span class="sxs-lookup"><span data-stu-id="1a18e-124">When you inherit from this class, you can override the following methods:</span></span> 
<span data-ttu-id="1a18e-125">-Um die benutzerdefinierte Typkonvertierung zu unter <see cref="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" />stützen, <see cref="M:System.ComponentModel.TypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />überschreiben <see cref="M:System.ComponentModel.TypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" /> Sie die Methoden, <see cref="M:System.ComponentModel.TypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)" />, und.</span><span class="sxs-lookup"><span data-stu-id="1a18e-125">-   To support custom type conversion, override the <see cref="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" />, <see cref="M:System.ComponentModel.TypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)" />, <see cref="M:System.ComponentModel.TypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />, and <see cref="M:System.ComponentModel.TypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" /> methods.</span></span>  
  
<span data-ttu-id="1a18e-126">-Um Typen zu konvertieren, die das-Objekt neu erstellen müssen, um den Wert zu <see cref="M:System.ComponentModel.TypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)" /> ändern <see cref="M:System.ComponentModel.TypeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)" /> , überschreiben Sie die-und-Methoden.</span><span class="sxs-lookup"><span data-stu-id="1a18e-126">-   To convert types that must re-create the object to change its value, override the <see cref="M:System.ComponentModel.TypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)" /> and <see cref="M:System.ComponentModel.TypeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)" /> methods.</span></span>  
  
<span data-ttu-id="1a18e-127">-Um Typen zu konvertieren, die Eigenschaften unterstützen <see cref="M:System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])" /> , <see cref="M:System.ComponentModel.TypeConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)" /> überschreiben Sie die Methoden und.</span><span class="sxs-lookup"><span data-stu-id="1a18e-127">-   To convert types that support properties, override the <see cref="M:System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])" /> and <see cref="M:System.ComponentModel.TypeConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)" /> methods.</span></span> <span data-ttu-id="1a18e-128">Wenn die Klasse, die Sie umrechnen, keine Eigenschaften besitzt und Sie Eigenschaften implementieren müssen, können Sie die <see cref="T:System.ComponentModel.TypeConverter.SimplePropertyDescriptor" /> -Klasse als Basis zum Implementieren der Eigenschafts Deskriptoren verwenden.</span><span class="sxs-lookup"><span data-stu-id="1a18e-128">If the class you are converting does not have properties, and you need to implement properties, you can use the <see cref="T:System.ComponentModel.TypeConverter.SimplePropertyDescriptor" /> class as a base for implementing the property descriptors.</span></span> <span data-ttu-id="1a18e-129">Wenn Sie von <see cref="T:System.ComponentModel.TypeConverter.SimplePropertyDescriptor" />erben, müssen Sie die-Methode <see cref="M:System.ComponentModel.PropertyDescriptor.SetValue(System.Object,System.Object)" /> und die <see cref="M:System.ComponentModel.PropertyDescriptor.GetValue(System.Object)" /> -Methode überschreiben.</span><span class="sxs-lookup"><span data-stu-id="1a18e-129">When you inherit from <see cref="T:System.ComponentModel.TypeConverter.SimplePropertyDescriptor" />, you must override the <see cref="M:System.ComponentModel.PropertyDescriptor.GetValue(System.Object)" /> and <see cref="M:System.ComponentModel.PropertyDescriptor.SetValue(System.Object,System.Object)" /> methods.</span></span>  
  
<span data-ttu-id="1a18e-130">-Um Typen zu konvertieren, die Standardwerte unterstützen <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)" />, über <see cref="M:System.ComponentModel.TypeConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)" /> schreiben <see cref="M:System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)" /> Sie die Methoden, <see cref="M:System.ComponentModel.TypeConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)" />und.</span><span class="sxs-lookup"><span data-stu-id="1a18e-130">-   To convert types that support standard values, override the <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)" />, <see cref="M:System.ComponentModel.TypeConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)" />, <see cref="M:System.ComponentModel.TypeConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)" /> and <see cref="M:System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)" /> methods.</span></span>  
  
 <block subset="none" type="note"><para>  
 <span data-ttu-id="1a18e-131">Der abgeleitete Typ ist möglicherweise <see langword="internal" /> als <see langword="private" />oder gekennzeichnet, aber es kann eine Instanz des Typs mit der <see cref="T:System.ComponentModel.TypeDescriptor" /> -Klasse erstellt werden.</span><span class="sxs-lookup"><span data-stu-id="1a18e-131">Your derived type might be marked as <see langword="internal" /> or <see langword="private" />, but an instance of your type can be created with the <see cref="T:System.ComponentModel.TypeDescriptor" /> class.</span></span> <span data-ttu-id="1a18e-132">Schreiben Sie unsicheren Code nicht, indem Sie annehmen, dass der Aufrufer vertrauenswürdig ist</span><span class="sxs-lookup"><span data-stu-id="1a18e-132">Do not write insecure code by assuming the caller is trusted.</span></span> <span data-ttu-id="1a18e-133">Nehmen Sie an, dass Aufrufer möglicherweise Instanzen des Typs in teilweiser Vertrauenswürdigkeit erstellen.</span><span class="sxs-lookup"><span data-stu-id="1a18e-133">Assume instead that callers might create instances of your type in partial trust.</span></span>  
  
</para></block>  
  
 <span data-ttu-id="1a18e-134">Weitere Informationen zu Typkonvertern für allgemeine (nicht-XAML)-Zwecke finden [Sie unter Gewusst wie: Implementieren eines Typkonverters oder einer](https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2013/ayybcxe5(v=vs.120)) [generalisierten Typkonvertierung](https://msdn.microsoft.com/library/49253ae6-7657-4810-82ab-1176a6feeada).</span><span class="sxs-lookup"><span data-stu-id="1a18e-134">For more information about type converters for general (non-XAML) purposes, see [How to: Implement a Type Converter](https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2013/ayybcxe5(v=vs.120)) or [Generalized Type Conversion](https://msdn.microsoft.com/library/49253ae6-7657-4810-82ab-1176a6feeada).</span></span></para></block>
    <altmember cref="T:System.ComponentModel.TypeConverterAttribute" />
    <altmember cref="T:System.ComponentModel.PropertyDescriptorCollection" />
    <altmember cref="T:System.ComponentModel.TypeConverter.SimplePropertyDescriptor" />
    <altmember cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" />
    <related type="Article" href="https://msdn.microsoft.com/library/51a65860-efcb-4fe0-95a0-1c679cde66b7"><span data-ttu-id="1a18e-135">Übersicht über Typkonverter für XAML</span><span class="sxs-lookup"><span data-stu-id="1a18e-135">Type Converters for XAML Overview</span></span></related>
    <related type="Article" href="https://msdn.microsoft.com/library/5dfb299a-b6e2-41b8-8694-e6ac987547f1"><span data-ttu-id="1a18e-136">XAML-bezogene CLR-Attribute für benutzerdefinierte Typen und Bibliotheken</span><span class="sxs-lookup"><span data-stu-id="1a18e-136">XAML-Related CLR Attributes For Custom Types and Libraries</span></span></related>
    <related type="Article" href="https://msdn.microsoft.com/library/c2667cbd-2f46-4a7f-9dfc-53696e35e8e4"><span data-ttu-id="1a18e-137">Definieren von benutzerdefinierten Typen für die Verwendung mit .NET Framework-XAML-Diensten</span><span class="sxs-lookup"><span data-stu-id="1a18e-137">Defining Custom Types for Use with .NET Framework XAML Services</span></span></related>
    <related type="Article" href="https://msdn.microsoft.com/library/0e11f386-808c-4eae-9ba6-029ad7ba2211"><span data-ttu-id="1a18e-138">Konzeptionelle Dokumentation zur net-XAML-Dienste</span><span class="sxs-lookup"><span data-stu-id="1a18e-138">NET XAML Services Conceptual Documentation</span></span></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TypeConverter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TypeConverter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1a18e-139">Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.TypeConverter" />-Klasse.</span><span class="sxs-lookup"><span data-stu-id="1a18e-139">Initializes a new instance of the <see cref="T:System.ComponentModel.TypeConverter" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CanConvertFrom">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="1a18e-140">Gibt zurück, ob dieser Konverter ein Objekt eines Typs in den Typ dieses Konverters konvertieren kann.</span><span class="sxs-lookup"><span data-stu-id="1a18e-140">Returns whether this converter can convert an object of one type to the type of this converter.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CanConvertFrom">
      <MemberSignature Language="C#" Value="public bool CanConvertFrom (Type sourceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool CanConvertFrom(class System.Type sourceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function CanConvertFrom (sourceType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CanConvertFrom(Type ^ sourceType);" />
      <MemberSignature Language="F#" Value="member this.CanConvertFrom : Type -&gt; bool" Usage="typeConverter.CanConvertFrom sourceType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="sourceType"><span data-ttu-id="1a18e-141">Ein <see cref="T:System.Type" />, der den Typ darstellt, aus dem konvertiert werden soll.</span><span class="sxs-lookup"><span data-stu-id="1a18e-141">A <see cref="T:System.Type" /> that represents the type you want to convert from.</span></span></param>
        <summary><span data-ttu-id="1a18e-142">Gibt zurück, ob dieser Konverter ein Objekt des angegebenen Typs in den Typ dieses Konverters konvertieren kann.</span><span class="sxs-lookup"><span data-stu-id="1a18e-142">Returns whether this converter can convert an object of the given type to the type of this converter.</span></span></summary>
        <returns><span data-ttu-id="1a18e-143"><see langword="true" />, wenn dieser Konverter die Konvertierung durchführen kann, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="1a18e-143"><see langword="true" /> if this converter can perform the conversion; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a18e-144">Bei Implementierung in dieser Klasse gibt diese Methode immer `false` zurück.</span><span class="sxs-lookup"><span data-stu-id="1a18e-144">As implemented in this class, this method always returns `false`.</span></span> <span data-ttu-id="1a18e-145">Es wird nie `true`zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="1a18e-145">It never returns `true`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanConvertFrom">
      <MemberSignature Language="C#" Value="public virtual bool CanConvertFrom (System.ComponentModel.ITypeDescriptorContext context, Type sourceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class System.Type sourceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CanConvertFrom (context As ITypeDescriptorContext, sourceType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CanConvertFrom(System::ComponentModel::ITypeDescriptorContext ^ context, Type ^ sourceType);" />
      <MemberSignature Language="F#" Value="abstract member CanConvertFrom : System.ComponentModel.ITypeDescriptorContext * Type -&gt; bool&#xA;override this.CanConvertFrom : System.ComponentModel.ITypeDescriptorContext * Type -&gt; bool" Usage="typeConverter.CanConvertFrom (context, sourceType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="sourceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="1a18e-146">Ein <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, der einen Formatierungskontext bereitstellt.</span><span class="sxs-lookup"><span data-stu-id="1a18e-146">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span></span></param>
        <param name="sourceType"><span data-ttu-id="1a18e-147">Ein <see cref="T:System.Type" />, der den Typ darstellt, aus dem konvertiert werden soll.</span><span class="sxs-lookup"><span data-stu-id="1a18e-147">A <see cref="T:System.Type" /> that represents the type you want to convert from.</span></span></param>
        <summary><span data-ttu-id="1a18e-148">Gibt zurück, ob dieser Konverter ein Objekt vom angegebenen Typ unter Verwendung des angegebenen Kontexts in den Typ dieses Konverters konvertieren kann.</span><span class="sxs-lookup"><span data-stu-id="1a18e-148">Returns whether this converter can convert an object of the given type to the type of this converter, using the specified context.</span></span></summary>
        <returns><span data-ttu-id="1a18e-149"><see langword="true" />, wenn dieser Konverter die Konvertierung durchführen kann, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="1a18e-149"><see langword="true" /> if this converter can perform the conversion; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a18e-150">Gemäß der Implementierung in dieser Klasse gibt diese Methode `false`zurück, `sourceType` es sei <xref:System.ComponentModel.Design.Serialization.InstanceDescriptor>denn, ist ein.</span><span class="sxs-lookup"><span data-stu-id="1a18e-150">As implemented in this class, this method returns `false`, unless `sourceType` is an <xref:System.ComponentModel.Design.Serialization.InstanceDescriptor>.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="1a18e-151">Überschreiben Sie diese Methode, um eigene Konvertierungsanforderungen anzugeben.</span><span class="sxs-lookup"><span data-stu-id="1a18e-151">Override this method to provide your own conversion requirements.</span></span>  
  
<span data-ttu-id="1a18e-152">Über den <paramref name="context" />-Parameter können zusätzliche Informationen über die Umgebung extrahiert werden, aus der dieser Konverter aufgerufen wurde.</span><span class="sxs-lookup"><span data-stu-id="1a18e-152">Use the <paramref name="context" /> parameter to extract additional information about the environment from which this converter is invoked.</span></span> <span data-ttu-id="1a18e-153">Dieser Parameter kann sein <see langword="null" />, daher sollten Sie ihn immer überprüfen.</span><span class="sxs-lookup"><span data-stu-id="1a18e-153">This parameter can be <see langword="null" />, so always check it.</span></span> <span data-ttu-id="1a18e-154">Außerdem können die Eigenschaften des Kontextobjekts <see langword="null" /> zurückgeben.</span><span class="sxs-lookup"><span data-stu-id="1a18e-154">Also, properties on the context object can return <see langword="null" />.</span></span></para></block>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <MemberGroup MemberName="CanConvertTo">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="1a18e-155">Gibt zurück, ob dieser Konverter das Objekt in den angegebenen Typ konvertieren kann.</span><span class="sxs-lookup"><span data-stu-id="1a18e-155">Returns whether this converter can convert the object to the specified type.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CanConvertTo">
      <MemberSignature Language="C#" Value="public bool CanConvertTo (Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool CanConvertTo(class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.CanConvertTo(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function CanConvertTo (destinationType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CanConvertTo(Type ^ destinationType);" />
      <MemberSignature Language="F#" Value="member this.CanConvertTo : Type -&gt; bool" Usage="typeConverter.CanConvertTo destinationType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="destinationType"><span data-ttu-id="1a18e-156">Ein <see cref="T:System.Type" />, der den Typ darstellt, in den konvertiert werden soll.</span><span class="sxs-lookup"><span data-stu-id="1a18e-156">A <see cref="T:System.Type" /> that represents the type you want to convert to.</span></span></param>
        <summary><span data-ttu-id="1a18e-157">Gibt zurück, ob dieser Konverter das Objekt in den angegebenen Typ konvertieren kann.</span><span class="sxs-lookup"><span data-stu-id="1a18e-157">Returns whether this converter can convert the object to the specified type.</span></span></summary>
        <returns><span data-ttu-id="1a18e-158"><see langword="true" />, wenn dieser Konverter die Konvertierung durchführen kann, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="1a18e-158"><see langword="true" /> if this converter can perform the conversion; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a18e-159">Wenn `destinationType` eine Zeichenfolge ist, gibt die Standard <xref:System.ComponentModel.TypeConverter.CanConvertTo%2A> Implementierung von `true`immer zurück.</span><span class="sxs-lookup"><span data-stu-id="1a18e-159">If `destinationType` is a string, the default implementation of <xref:System.ComponentModel.TypeConverter.CanConvertTo%2A> always returns `true`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanConvertTo">
      <MemberSignature Language="C#" Value="public virtual bool CanConvertTo (System.ComponentModel.ITypeDescriptorContext context, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanConvertTo(class System.ComponentModel.ITypeDescriptorContext context, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CanConvertTo (context As ITypeDescriptorContext, destinationType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CanConvertTo(System::ComponentModel::ITypeDescriptorContext ^ context, Type ^ destinationType);" />
      <MemberSignature Language="F#" Value="abstract member CanConvertTo : System.ComponentModel.ITypeDescriptorContext * Type -&gt; bool&#xA;override this.CanConvertTo : System.ComponentModel.ITypeDescriptorContext * Type -&gt; bool" Usage="typeConverter.CanConvertTo (context, destinationType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="1a18e-160">Ein <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, der einen Formatierungskontext bereitstellt.</span><span class="sxs-lookup"><span data-stu-id="1a18e-160">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span></span></param>
        <param name="destinationType"><span data-ttu-id="1a18e-161">Ein <see cref="T:System.Type" />, der den Typ darstellt, in den konvertiert werden soll.</span><span class="sxs-lookup"><span data-stu-id="1a18e-161">A <see cref="T:System.Type" /> that represents the type you want to convert to.</span></span></param>
        <summary><span data-ttu-id="1a18e-162">Gibt zurück, ob dieser Konverter das Objekt mithilfe des angegebenen Kontexts in den angegebenen Typ umwandeln kann.</span><span class="sxs-lookup"><span data-stu-id="1a18e-162">Returns whether this converter can convert the object to the specified type, using the specified context.</span></span></summary>
        <returns><span data-ttu-id="1a18e-163"><see langword="true" />, wenn dieser Konverter die Konvertierung durchführen kann, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="1a18e-163"><see langword="true" /> if this converter can perform the conversion; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a18e-164">Über den `context`-Parameter können zusätzliche Informationen über die Umgebung extrahiert werden, aus der dieser Konverter aufgerufen wurde.</span><span class="sxs-lookup"><span data-stu-id="1a18e-164">Use the `context` parameter to extract additional information about the environment from which this converter is invoked.</span></span> <span data-ttu-id="1a18e-165">Dieser Parameter kann sein `null`, daher sollten Sie ihn immer überprüfen.</span><span class="sxs-lookup"><span data-stu-id="1a18e-165">This parameter can be `null`, so always check it.</span></span> <span data-ttu-id="1a18e-166">Außerdem können die Eigenschaften des Kontextobjekts `null` zurückgeben.</span><span class="sxs-lookup"><span data-stu-id="1a18e-166">Also, properties on the context object can return `null`.</span></span>  
  
 <span data-ttu-id="1a18e-167">Wenn `destinationType` eine Zeichenfolge ist, gibt die Standard <xref:System.ComponentModel.TypeConverter.CanConvertTo%2A> Implementierung von `true`immer zurück.</span><span class="sxs-lookup"><span data-stu-id="1a18e-167">If `destinationType` is a string, the default implementation of <xref:System.ComponentModel.TypeConverter.CanConvertTo%2A> always returns `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="1a18e-168">Überschreiben Sie diese Methode, um eigene Konvertierungsanforderungen anzugeben.</span><span class="sxs-lookup"><span data-stu-id="1a18e-168">Override this method to provide your own conversion requirements.</span></span></para></block>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ConvertFrom">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="1a18e-169">Konvertiert den angegebenen Wert in den Typ dieses Konverters.</span><span class="sxs-lookup"><span data-stu-id="1a18e-169">Converts the given value to the type of this converter.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ConvertFrom">
      <MemberSignature Language="C#" Value="public object ConvertFrom (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object ConvertFrom(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.ConvertFrom(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConvertFrom (value As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ ConvertFrom(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="member this.ConvertFrom : obj -&gt; obj" Usage="typeConverter.ConvertFrom value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="1a18e-170">Die zu konvertierende <see cref="T:System.Object" />.</span><span class="sxs-lookup"><span data-stu-id="1a18e-170">The <see cref="T:System.Object" /> to convert.</span></span></param>
        <summary><span data-ttu-id="1a18e-171">Konvertiert den angegebenen Wert in den Typ dieses Konverters.</span><span class="sxs-lookup"><span data-stu-id="1a18e-171">Converts the given value to the type of this converter.</span></span></summary>
        <returns><span data-ttu-id="1a18e-172">Ein <see cref="T:System.Object" />, das den konvertierten Wert darstellt.</span><span class="sxs-lookup"><span data-stu-id="1a18e-172">An <see cref="T:System.Object" /> that represents the converted value.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="1a18e-173">Die Konvertierung kann nicht durchgeführt werden.</span><span class="sxs-lookup"><span data-stu-id="1a18e-173">The conversion cannot be performed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ConvertFrom">
      <MemberSignature Language="C#" Value="public virtual object ConvertFrom (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ConvertFrom (context As ITypeDescriptorContext, culture As CultureInfo, value As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ ConvertFrom(System::ComponentModel::ITypeDescriptorContext ^ context, System::Globalization::CultureInfo ^ culture, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member ConvertFrom : System.ComponentModel.ITypeDescriptorContext * System.Globalization.CultureInfo * obj -&gt; obj&#xA;override this.ConvertFrom : System.ComponentModel.ITypeDescriptorContext * System.Globalization.CultureInfo * obj -&gt; obj" Usage="typeConverter.ConvertFrom (context, culture, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="1a18e-174">Ein <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, der einen Formatierungskontext bereitstellt.</span><span class="sxs-lookup"><span data-stu-id="1a18e-174">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span></span></param>
        <param name="culture"><span data-ttu-id="1a18e-175">Das als aktuelle Kultur zu verwendende <see cref="T:System.Globalization.CultureInfo" />-Element.</span><span class="sxs-lookup"><span data-stu-id="1a18e-175">The <see cref="T:System.Globalization.CultureInfo" /> to use as the current culture.</span></span></param>
        <param name="value"><span data-ttu-id="1a18e-176">Die zu konvertierende <see cref="T:System.Object" />.</span><span class="sxs-lookup"><span data-stu-id="1a18e-176">The <see cref="T:System.Object" /> to convert.</span></span></param>
        <summary><span data-ttu-id="1a18e-177">Konvertiert das angegebene Objekt unter Verwendung des angegebenen Kontexts und der angegebenen Kulturinformationen in den Typ dieses Konverters.</span><span class="sxs-lookup"><span data-stu-id="1a18e-177">Converts the given object to the type of this converter, using the specified context and culture information.</span></span></summary>
        <returns><span data-ttu-id="1a18e-178">Ein <see cref="T:System.Object" />, das den konvertierten Wert darstellt.</span><span class="sxs-lookup"><span data-stu-id="1a18e-178">An <see cref="T:System.Object" /> that represents the converted value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a18e-179">Benutzerdefinierte typautoren, die ein Typkonvertierungs Verhalten für XAML unterstützen möchten <xref:System.ComponentModel.TypeConverter> , implementieren Normal <xref:System.ComponentModel.TypeConverter.ConvertFrom%2A> erweise eine Klasse, die das Verhalten von einer Zeichenfolge unterstützt.</span><span class="sxs-lookup"><span data-stu-id="1a18e-179">Custom type authors that intend to support a type conversion behavior for XAML typically implement a <xref:System.ComponentModel.TypeConverter> class that supports <xref:System.ComponentModel.TypeConverter.ConvertFrom%2A> behavior from a string.</span></span> <span data-ttu-id="1a18e-180">Dieses Verhalten ermöglicht die Typkonvertierung aus der Zeichenfolge, die als XAML-Attribut Wert bereitgestellt wird, und stellt einen XAML-Prozessor mit der Unterstützung bereit, der zum Erstellen eines Objekts aus der Zeichenfolge erforderlich ist, damit das Objekt in einem analysierten Objekt Diagramm erstellt werden kann.</span><span class="sxs-lookup"><span data-stu-id="1a18e-180">This behavior enables type conversion from the string provided as a XAML attribute value and provides a XAML processor with the support needed to create an object from the string, so that the object can be produced in a parsed object graph.</span></span> <span data-ttu-id="1a18e-181">Benutzerdefinierte Typen oder Member von benutzerdefinierten Typen werden durch <xref:System.ComponentModel.TypeConverterAttribute> anwenden auf die Definitionen angegeben, wobei das-Attribut auf <xref:System.ComponentModel.TypeConverter> die benutzerdefinierte Implementierung verweist.</span><span class="sxs-lookup"><span data-stu-id="1a18e-181">Custom types or members of custom types are indicated by applying <xref:System.ComponentModel.TypeConverterAttribute> to the definitions, with the attribute referencing the custom <xref:System.ComponentModel.TypeConverter> implementation.</span></span>  
  
 <span data-ttu-id="1a18e-182">Für XAML-Zwecke stellen Sie in der Regel keine Verzweigungs Implementierungen bereit `culture`, die auf basieren.</span><span class="sxs-lookup"><span data-stu-id="1a18e-182">For XAML purposes, you do not typically provide branching implementations based on `culture`.</span></span> <span data-ttu-id="1a18e-183">Der Grund hierfür ist, dass XAML in einem Entwicklungs Umgebungs Kontext vorkompiliert wird und kulturspezifische Informationen für das XAML-Lauf Zeit Modul für die XAML-Typkonvertierung nicht relevant sind.</span><span class="sxs-lookup"><span data-stu-id="1a18e-183">This is because XAML is precompiled in a development environment context, and culture-specific information for runtime XAML is not relevant for XAML type conversion.</span></span> <span data-ttu-id="1a18e-184">Weitere Informationen finden Sie unter [Übersicht über Typkonverter für XAML](~/docs/framework/xaml-services/type-converters-for-xaml-overview.md).</span><span class="sxs-lookup"><span data-stu-id="1a18e-184">For more information, see [Type Converters for XAML Overview](~/docs/framework/xaml-services/type-converters-for-xaml-overview.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="1a18e-185">Die Konvertierung kann nicht durchgeführt werden.</span><span class="sxs-lookup"><span data-stu-id="1a18e-185">The conversion cannot be performed.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="1a18e-186">Überschreiben Sie diese Methode, um eigene Konvertierungsanforderungen anzugeben.</span><span class="sxs-lookup"><span data-stu-id="1a18e-186">Override this method to provide your own conversion requirements.</span></span>  
  
<span data-ttu-id="1a18e-187">Über den <paramref name="context" />-Parameter können zusätzliche Informationen über die Umgebung extrahiert werden, aus der dieser Konverter aufgerufen wurde.</span><span class="sxs-lookup"><span data-stu-id="1a18e-187">Use the <paramref name="context" /> parameter to extract additional information about the environment from which this converter is invoked.</span></span> <span data-ttu-id="1a18e-188">Dieser Parameter kann sein <see langword="null" />, daher sollten Sie ihn immer überprüfen.</span><span class="sxs-lookup"><span data-stu-id="1a18e-188">This parameter can be <see langword="null" />, so always check it.</span></span> <span data-ttu-id="1a18e-189">Außerdem können die Eigenschaften des Kontextobjekts <see langword="null" /> zurückgeben.</span><span class="sxs-lookup"><span data-stu-id="1a18e-189">Also, properties on the context object can return <see langword="null" />.</span></span>  
  
<span data-ttu-id="1a18e-190">Implementierungs Muster für Typkonverter, die zur Unterstützung von XAML-und benutzerdefinierten Typen verwendet werden, finden Sie unter [Übersicht über Typkonverter für XAML](~/docs/framework/xaml-services/type-converters-for-xaml-overview.md).</span><span class="sxs-lookup"><span data-stu-id="1a18e-190">For implementation patterns for type converters that are used to support XAML and custom types, see [Type Converters for XAML Overview](~/docs/framework/xaml-services/type-converters-for-xaml-overview.md).</span></span></para></block>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
        <related type="Article" href="https://msdn.microsoft.com/library/51a65860-efcb-4fe0-95a0-1c679cde66b7"><span data-ttu-id="1a18e-191">Übersicht über Typkonverter für XAML</span><span class="sxs-lookup"><span data-stu-id="1a18e-191">Type Converters for XAML Overview</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="ConvertFromInvariantString">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="1a18e-192">Konvertiert den Wert unter Verwendung der invarianten Kultur in einen Typ dieses Konverters.</span><span class="sxs-lookup"><span data-stu-id="1a18e-192">Converts the value to a type of this converter, using the invariant culture.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ConvertFromInvariantString">
      <MemberSignature Language="C#" Value="public object ConvertFromInvariantString (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object ConvertFromInvariantString(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConvertFromInvariantString (text As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ ConvertFromInvariantString(System::String ^ text);" />
      <MemberSignature Language="F#" Value="member this.ConvertFromInvariantString : string -&gt; obj" Usage="typeConverter.ConvertFromInvariantString text" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text"><span data-ttu-id="1a18e-193">Die zu konvertierende <see cref="T:System.String" />.</span><span class="sxs-lookup"><span data-stu-id="1a18e-193">The <see cref="T:System.String" /> to convert.</span></span></param>
        <summary><span data-ttu-id="1a18e-194">Konvertiert die angegebene Zeichenfolge unter Verwendung der invarianten Kultur in einen Typ dieses Konverters.</span><span class="sxs-lookup"><span data-stu-id="1a18e-194">Converts the given string to the type of this converter, using the invariant culture.</span></span></summary>
        <returns><span data-ttu-id="1a18e-195">Eine <see cref="T:System.Object" />-Klasse, die den konvertierten Text darstellt.</span><span class="sxs-lookup"><span data-stu-id="1a18e-195">An <see cref="T:System.Object" /> that represents the converted text.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a18e-196">Die Standardimplementierung gibt immer `null` zurück.</span><span class="sxs-lookup"><span data-stu-id="1a18e-196">The default implementation always returns `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="1a18e-197">Die Konvertierung kann nicht durchgeführt werden.</span><span class="sxs-lookup"><span data-stu-id="1a18e-197">The conversion cannot be performed.</span></span></exception>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <Member MemberName="ConvertFromInvariantString">
      <MemberSignature Language="C#" Value="public object ConvertFromInvariantString (System.ComponentModel.ITypeDescriptorContext context, string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object ConvertFromInvariantString(class System.ComponentModel.ITypeDescriptorContext context, string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConvertFromInvariantString (context As ITypeDescriptorContext, text As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ ConvertFromInvariantString(System::ComponentModel::ITypeDescriptorContext ^ context, System::String ^ text);" />
      <MemberSignature Language="F#" Value="member this.ConvertFromInvariantString : System.ComponentModel.ITypeDescriptorContext * string -&gt; obj" Usage="typeConverter.ConvertFromInvariantString (context, text)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="1a18e-198">Ein <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, der einen Formatierungskontext bereitstellt.</span><span class="sxs-lookup"><span data-stu-id="1a18e-198">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span></span></param>
        <param name="text"><span data-ttu-id="1a18e-199">Die zu konvertierende <see cref="T:System.String" />.</span><span class="sxs-lookup"><span data-stu-id="1a18e-199">The <see cref="T:System.String" /> to convert.</span></span></param>
        <summary><span data-ttu-id="1a18e-200">Konvertiert die angegebene Zeichenfolge unter Verwendung der invarianten Kultur und des angegebenen Kontexts in den Typ dieses Konverters.</span><span class="sxs-lookup"><span data-stu-id="1a18e-200">Converts the given string to the type of this converter, using the invariant culture and the specified context.</span></span></summary>
        <returns><span data-ttu-id="1a18e-201">Eine <see cref="T:System.Object" />-Klasse, die den konvertierten Text darstellt.</span><span class="sxs-lookup"><span data-stu-id="1a18e-201">An <see cref="T:System.Object" /> that represents the converted text.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a18e-202">Eine-Ausnahme wird ausgelöst, wenn die Zeichenfolge nicht in das entsprechende-Objekt konvertiert werden kann.</span><span class="sxs-lookup"><span data-stu-id="1a18e-202">An exception is raised if the string cannot be converted into the appropriate object.</span></span> <span data-ttu-id="1a18e-203">Die Standardimplementierung gibt immer `null` zurück.</span><span class="sxs-lookup"><span data-stu-id="1a18e-203">The default implementation always returns `null`.</span></span>  
  
 <span data-ttu-id="1a18e-204">Über den `context`-Parameter können zusätzliche Informationen über die Umgebung extrahiert werden, aus der dieser Konverter aufgerufen wurde.</span><span class="sxs-lookup"><span data-stu-id="1a18e-204">Use the `context` parameter to extract additional information about the environment from which this converter is invoked.</span></span> <span data-ttu-id="1a18e-205">Dieser Parameter kann sein `null`, daher sollten Sie ihn immer überprüfen.</span><span class="sxs-lookup"><span data-stu-id="1a18e-205">This parameter can be `null`, so always check it.</span></span> <span data-ttu-id="1a18e-206">Außerdem können die Eigenschaften des Kontextobjekts `null` zurückgeben.</span><span class="sxs-lookup"><span data-stu-id="1a18e-206">Also, properties on the context object can return `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="1a18e-207">Die Konvertierung kann nicht durchgeführt werden.</span><span class="sxs-lookup"><span data-stu-id="1a18e-207">The conversion cannot be performed.</span></span></exception>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ConvertFromString">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="1a18e-208">Konvertiert den angegebenen Text in ein Objekt.</span><span class="sxs-lookup"><span data-stu-id="1a18e-208">Converts the specified text to an object.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ConvertFromString">
      <MemberSignature Language="C#" Value="public object ConvertFromString (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object ConvertFromString(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.ConvertFromString(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConvertFromString (text As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ ConvertFromString(System::String ^ text);" />
      <MemberSignature Language="F#" Value="member this.ConvertFromString : string -&gt; obj" Usage="typeConverter.ConvertFromString text" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text"><span data-ttu-id="1a18e-209">Die Textdarstellung des zu konvertierenden Objekts.</span><span class="sxs-lookup"><span data-stu-id="1a18e-209">The text representation of the object to convert.</span></span></param>
        <summary><span data-ttu-id="1a18e-210">Konvertiert den angegebenen Text in ein Objekt.</span><span class="sxs-lookup"><span data-stu-id="1a18e-210">Converts the specified text to an object.</span></span></summary>
        <returns><span data-ttu-id="1a18e-211">Eine <see cref="T:System.Object" />-Klasse, die den konvertierten Text darstellt.</span><span class="sxs-lookup"><span data-stu-id="1a18e-211">An <see cref="T:System.Object" /> that represents the converted text.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a18e-212">Die Standardimplementierung gibt immer `null` zurück.</span><span class="sxs-lookup"><span data-stu-id="1a18e-212">The default implementation always returns `null`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1a18e-213">Ein Beispiel für diese Funktion finden Sie unter der <xref:System.ComponentModel.TypeConverter> -Klasse.</span><span class="sxs-lookup"><span data-stu-id="1a18e-213">For an example of this function, see the <xref:System.ComponentModel.TypeConverter> class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="1a18e-214">Die Zeichenfolge kann nicht in das entsprechende Objekt konvertiert werden.</span><span class="sxs-lookup"><span data-stu-id="1a18e-214">The string cannot be converted into the appropriate object.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ConvertFromString">
      <MemberSignature Language="C#" Value="public object ConvertFromString (System.ComponentModel.ITypeDescriptorContext context, string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object ConvertFromString(class System.ComponentModel.ITypeDescriptorContext context, string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConvertFromString (context As ITypeDescriptorContext, text As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ ConvertFromString(System::ComponentModel::ITypeDescriptorContext ^ context, System::String ^ text);" />
      <MemberSignature Language="F#" Value="member this.ConvertFromString : System.ComponentModel.ITypeDescriptorContext * string -&gt; obj" Usage="typeConverter.ConvertFromString (context, text)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="1a18e-215">Ein <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, der einen Formatierungskontext bereitstellt.</span><span class="sxs-lookup"><span data-stu-id="1a18e-215">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span></span></param>
        <param name="text"><span data-ttu-id="1a18e-216">Die zu konvertierende <see cref="T:System.String" />.</span><span class="sxs-lookup"><span data-stu-id="1a18e-216">The <see cref="T:System.String" /> to convert.</span></span></param>
        <summary><span data-ttu-id="1a18e-217">Konvertiert den angegebenen Text unter Verwendung des angegebenen Kontexts in ein Objekt.</span><span class="sxs-lookup"><span data-stu-id="1a18e-217">Converts the given text to an object, using the specified context.</span></span></summary>
        <returns><span data-ttu-id="1a18e-218">Eine <see cref="T:System.Object" />-Klasse, die den konvertierten Text darstellt.</span><span class="sxs-lookup"><span data-stu-id="1a18e-218">An <see cref="T:System.Object" /> that represents the converted text.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a18e-219">Eine-Ausnahme wird ausgelöst, wenn die Zeichenfolge nicht in das entsprechende-Objekt konvertiert werden kann.</span><span class="sxs-lookup"><span data-stu-id="1a18e-219">An exception is raised if the string cannot be converted into the appropriate object.</span></span> <span data-ttu-id="1a18e-220">Die Standardimplementierung gibt immer `null` zurück.</span><span class="sxs-lookup"><span data-stu-id="1a18e-220">The default implementation always returns `null`.</span></span>  
  
 <span data-ttu-id="1a18e-221">Über den `context`-Parameter können zusätzliche Informationen über die Umgebung extrahiert werden, aus der dieser Konverter aufgerufen wurde.</span><span class="sxs-lookup"><span data-stu-id="1a18e-221">Use the `context` parameter to extract additional information about the environment from which this converter is invoked.</span></span> <span data-ttu-id="1a18e-222">Dieser Parameter kann sein `null`, daher sollten Sie ihn immer überprüfen.</span><span class="sxs-lookup"><span data-stu-id="1a18e-222">This parameter can be `null`, so always check it.</span></span> <span data-ttu-id="1a18e-223">Außerdem können die Eigenschaften des Kontextobjekts `null` zurückgeben.</span><span class="sxs-lookup"><span data-stu-id="1a18e-223">Also, properties on the context object can return `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="1a18e-224">Die Konvertierung kann nicht durchgeführt werden.</span><span class="sxs-lookup"><span data-stu-id="1a18e-224">The conversion cannot be performed.</span></span></exception>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <Member MemberName="ConvertFromString">
      <MemberSignature Language="C#" Value="public object ConvertFromString (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object ConvertFromString(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConvertFromString (context As ITypeDescriptorContext, culture As CultureInfo, text As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ ConvertFromString(System::ComponentModel::ITypeDescriptorContext ^ context, System::Globalization::CultureInfo ^ culture, System::String ^ text);" />
      <MemberSignature Language="F#" Value="member this.ConvertFromString : System.ComponentModel.ITypeDescriptorContext * System.Globalization.CultureInfo * string -&gt; obj" Usage="typeConverter.ConvertFromString (context, culture, text)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="1a18e-225">Ein <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, der einen Formatierungskontext bereitstellt.</span><span class="sxs-lookup"><span data-stu-id="1a18e-225">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span></span></param>
        <param name="culture"><span data-ttu-id="1a18e-226">Ein <see cref="T:System.Globalization.CultureInfo" />.</span><span class="sxs-lookup"><span data-stu-id="1a18e-226">A <see cref="T:System.Globalization.CultureInfo" />.</span></span> <span data-ttu-id="1a18e-227">Wenn <see langword="null" /> übergeben wird, wird von der aktuellen Kultur ausgegangen.</span><span class="sxs-lookup"><span data-stu-id="1a18e-227">If <see langword="null" /> is passed, the current culture is assumed.</span></span></param>
        <param name="text"><span data-ttu-id="1a18e-228">Die zu konvertierende <see cref="T:System.String" />.</span><span class="sxs-lookup"><span data-stu-id="1a18e-228">The <see cref="T:System.String" /> to convert.</span></span></param>
        <summary><span data-ttu-id="1a18e-229">Konvertiert den angegebenen Text unter Verwendung des angegebenen Kontexts und der angegebenen Kulturinformationen in ein Objekt.</span><span class="sxs-lookup"><span data-stu-id="1a18e-229">Converts the given text to an object, using the specified context and culture information.</span></span></summary>
        <returns><span data-ttu-id="1a18e-230">Eine <see cref="T:System.Object" />-Klasse, die den konvertierten Text darstellt.</span><span class="sxs-lookup"><span data-stu-id="1a18e-230">An <see cref="T:System.Object" /> that represents the converted text.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a18e-231">Eine-Ausnahme wird ausgelöst, wenn die Zeichenfolge nicht in das entsprechende-Objekt konvertiert werden kann.</span><span class="sxs-lookup"><span data-stu-id="1a18e-231">An exception is raised if the string cannot be converted into the appropriate object.</span></span> <span data-ttu-id="1a18e-232">Die Standardimplementierung gibt immer `null` zurück.</span><span class="sxs-lookup"><span data-stu-id="1a18e-232">The default implementation always returns `null`.</span></span>  
  
 <span data-ttu-id="1a18e-233">Über den `context`-Parameter können zusätzliche Informationen über die Umgebung extrahiert werden, aus der dieser Konverter aufgerufen wurde.</span><span class="sxs-lookup"><span data-stu-id="1a18e-233">Use the `context` parameter to extract additional information about the environment from which this converter is invoked.</span></span> <span data-ttu-id="1a18e-234">Dieser Parameter kann sein `null`, daher sollten Sie ihn immer überprüfen.</span><span class="sxs-lookup"><span data-stu-id="1a18e-234">This parameter can be `null`, so always check it.</span></span> <span data-ttu-id="1a18e-235">Außerdem können die Eigenschaften des Kontextobjekts `null` zurückgeben.</span><span class="sxs-lookup"><span data-stu-id="1a18e-235">Also, properties on the context object can return `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="1a18e-236">Die Konvertierung kann nicht durchgeführt werden.</span><span class="sxs-lookup"><span data-stu-id="1a18e-236">The conversion cannot be performed.</span></span></exception>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ConvertTo">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="1a18e-237">Konvertiert das angegebene Wertobjekt in den angegebenen Typ.</span><span class="sxs-lookup"><span data-stu-id="1a18e-237">Converts the given value object to the specified type.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ConvertTo">
      <MemberSignature Language="C#" Value="public object ConvertTo (object value, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object ConvertTo(object value, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConvertTo (value As Object, destinationType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ ConvertTo(System::Object ^ value, Type ^ destinationType);" />
      <MemberSignature Language="F#" Value="member this.ConvertTo : obj * Type -&gt; obj" Usage="typeConverter.ConvertTo (value, destinationType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="1a18e-238">Die zu konvertierende <see cref="T:System.Object" />.</span><span class="sxs-lookup"><span data-stu-id="1a18e-238">The <see cref="T:System.Object" /> to convert.</span></span></param>
        <param name="destinationType"><span data-ttu-id="1a18e-239">Der <see cref="T:System.Type" />, in den der <paramref name="value" />-Parameter konvertiert werden soll.</span><span class="sxs-lookup"><span data-stu-id="1a18e-239">The <see cref="T:System.Type" /> to convert the <paramref name="value" /> parameter to.</span></span></param>
        <summary><span data-ttu-id="1a18e-240">Konvertiert das angegebene Wertobjekt unter Verwendung der Argumente in den angegebenen Typ.</span><span class="sxs-lookup"><span data-stu-id="1a18e-240">Converts the given value object to the specified type, using the arguments.</span></span></summary>
        <returns><span data-ttu-id="1a18e-241">Ein <see cref="T:System.Object" />, das den konvertierten Wert darstellt.</span><span class="sxs-lookup"><span data-stu-id="1a18e-241">An <see cref="T:System.Object" /> that represents the converted value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a18e-242">Der häufigste Typ, der in und aus konvertiert werden soll, ist ein String-Objekt.</span><span class="sxs-lookup"><span data-stu-id="1a18e-242">The most common type to convert to and from is a string object.</span></span> <span data-ttu-id="1a18e-243">Diese Implementierung ruft <xref:System.Object.ToString%2A> für das-Objekt auf, wenn das-Objekt gültig ist und der Zieltyp eine Zeichenfolge ist.</span><span class="sxs-lookup"><span data-stu-id="1a18e-243">This implementation calls <xref:System.Object.ToString%2A> on the object, if the object is valid and if the destination type is a string.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="1a18e-244">Der <paramref name="destinationType" />-Parameter ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="1a18e-244">The <paramref name="destinationType" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="1a18e-245">Die Konvertierung kann nicht durchgeführt werden.</span><span class="sxs-lookup"><span data-stu-id="1a18e-245">The conversion cannot be performed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ConvertTo">
      <MemberSignature Language="C#" Value="public virtual object ConvertTo (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ConvertTo(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object value, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ConvertTo (context As ITypeDescriptorContext, culture As CultureInfo, value As Object, destinationType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ ConvertTo(System::ComponentModel::ITypeDescriptorContext ^ context, System::Globalization::CultureInfo ^ culture, System::Object ^ value, Type ^ destinationType);" />
      <MemberSignature Language="F#" Value="abstract member ConvertTo : System.ComponentModel.ITypeDescriptorContext * System.Globalization.CultureInfo * obj * Type -&gt; obj&#xA;override this.ConvertTo : System.ComponentModel.ITypeDescriptorContext * System.Globalization.CultureInfo * obj * Type -&gt; obj" Usage="typeConverter.ConvertTo (context, culture, value, destinationType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="1a18e-246">Ein <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, der einen Formatierungskontext bereitstellt.</span><span class="sxs-lookup"><span data-stu-id="1a18e-246">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span></span></param>
        <param name="culture"><span data-ttu-id="1a18e-247">Ein <see cref="T:System.Globalization.CultureInfo" />.</span><span class="sxs-lookup"><span data-stu-id="1a18e-247">A <see cref="T:System.Globalization.CultureInfo" />.</span></span> <span data-ttu-id="1a18e-248">Wenn <see langword="null" /> übergeben wird, wird von der aktuellen Kultur ausgegangen.</span><span class="sxs-lookup"><span data-stu-id="1a18e-248">If <see langword="null" /> is passed, the current culture is assumed.</span></span></param>
        <param name="value"><span data-ttu-id="1a18e-249">Die zu konvertierende <see cref="T:System.Object" />.</span><span class="sxs-lookup"><span data-stu-id="1a18e-249">The <see cref="T:System.Object" /> to convert.</span></span></param>
        <param name="destinationType"><span data-ttu-id="1a18e-250">Der <see cref="T:System.Type" />, in den der <paramref name="value" />-Parameter konvertiert werden soll.</span><span class="sxs-lookup"><span data-stu-id="1a18e-250">The <see cref="T:System.Type" /> to convert the <paramref name="value" /> parameter to.</span></span></param>
        <summary><span data-ttu-id="1a18e-251">Konvertiert das angegebene Wertobjekt unter Verwendung des angegebenen Kontexts und der angegebenen Kulturinformationen in den angegebenen Typ.</span><span class="sxs-lookup"><span data-stu-id="1a18e-251">Converts the given value object to the specified type, using the specified context and culture information.</span></span></summary>
        <returns><span data-ttu-id="1a18e-252">Ein <see cref="T:System.Object" />, das den konvertierten Wert darstellt.</span><span class="sxs-lookup"><span data-stu-id="1a18e-252">An <see cref="T:System.Object" /> that represents the converted value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a18e-253">Am häufigsten wird in Zeichenfolgenobjekte und aus diesen konvertiert.</span><span class="sxs-lookup"><span data-stu-id="1a18e-253">The most common types to convert are to and from a string object.</span></span> <span data-ttu-id="1a18e-254">Diese Implementierung ruft <xref:System.Object.ToString%2A> für das-Objekt auf, wenn das-Objekt gültig ist, und, wenn der Zieltyp eine Zeichenfolge ist.</span><span class="sxs-lookup"><span data-stu-id="1a18e-254">This implementation calls <xref:System.Object.ToString%2A> on the object if the object is valid and if the destination type is a string.</span></span>  
  
 <span data-ttu-id="1a18e-255">Über den `context`-Parameter können zusätzliche Informationen über die Umgebung extrahiert werden, aus der dieser Konverter aufgerufen wurde.</span><span class="sxs-lookup"><span data-stu-id="1a18e-255">Use the `context` parameter to extract additional information about the environment from which this converter is invoked.</span></span> <span data-ttu-id="1a18e-256">Dieser Parameter kann sein `null`, daher sollten Sie ihn immer überprüfen.</span><span class="sxs-lookup"><span data-stu-id="1a18e-256">This parameter can be `null`, so always check it.</span></span> <span data-ttu-id="1a18e-257">Außerdem können die Eigenschaften des Kontextobjekts `null` zurückgeben.</span><span class="sxs-lookup"><span data-stu-id="1a18e-257">Also, properties on the context object can return `null`.</span></span>  
  
 <span data-ttu-id="1a18e-258">Benutzerdefinierte typautoren, die ein Typkonvertierungs Verhalten für XAML unterstützen möchten <xref:System.ComponentModel.TypeConverter> , implementieren Normal <xref:System.ComponentModel.TypeConverter.ConvertFrom%2A> erweise eine Klasse, die das Verhalten von einer Zeichenfolge unterstützt.</span><span class="sxs-lookup"><span data-stu-id="1a18e-258">Custom type authors that intend to support a type conversion behavior for XAML typically implement a <xref:System.ComponentModel.TypeConverter> class that supports <xref:System.ComponentModel.TypeConverter.ConvertFrom%2A> behavior from a string.</span></span> <span data-ttu-id="1a18e-259">Diese Typkonverter können auch implementieren <xref:System.ComponentModel.TypeConverter.ConvertTo%2A> , um die Serialisierung zurück in XAML zu unterstützen.</span><span class="sxs-lookup"><span data-stu-id="1a18e-259">These type converters might also implement <xref:System.ComponentModel.TypeConverter.ConvertTo%2A> to support serialization back to XAML.</span></span>  
  
 <span data-ttu-id="1a18e-260">Einige XAML-Serialisierungsszenarien können <xref:System.ComponentModel.TypeConverter> nicht mit alleine adressiert werden.</span><span class="sxs-lookup"><span data-stu-id="1a18e-260">Some XAML serialization scenarios cannot be adequately addressed with <xref:System.ComponentModel.TypeConverter> alone.</span></span> <span data-ttu-id="1a18e-261">In diesen Fällen kann es auch erforderlich sein, eine <xref:System.Windows.Markup.ValueSerializer> zu definieren, die die serialisierungsfälle behandelt, die andernfalls von <xref:System.ComponentModel.TypeConverter.ConvertTo%2A>behandelt werden.</span><span class="sxs-lookup"><span data-stu-id="1a18e-261">In these cases, it may be necessary to also define a <xref:System.Windows.Markup.ValueSerializer> that handles the serialization cases that would otherwise be handled by <xref:System.ComponentModel.TypeConverter.ConvertTo%2A>.</span></span> <span data-ttu-id="1a18e-262">Weitere Informationen finden Sie unter <xref:System.Windows.Markup.ValueSerializer>.</span><span class="sxs-lookup"><span data-stu-id="1a18e-262">For more information, see <xref:System.Windows.Markup.ValueSerializer>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="1a18e-263">Der <paramref name="destinationType" />-Parameter ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="1a18e-263">The <paramref name="destinationType" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="1a18e-264">Die Konvertierung kann nicht durchgeführt werden.</span><span class="sxs-lookup"><span data-stu-id="1a18e-264">The conversion cannot be performed.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="1a18e-265">Überschreiben Sie diese Methode, um eigene Konvertierungsanforderungen anzugeben.</span><span class="sxs-lookup"><span data-stu-id="1a18e-265">Override this method to provide your own conversion requirements.</span></span>  
  
<span data-ttu-id="1a18e-266">Implementierungs Muster für Typkonverter, die zur Unterstützung von XAML-und benutzerdefinierten Typen verwendet werden, finden Sie unter [Übersicht über Typkonverter für XAML](~/docs/framework/xaml-services/type-converters-for-xaml-overview.md).</span><span class="sxs-lookup"><span data-stu-id="1a18e-266">For implementation patterns for type converters that are used to support XAML and custom types, see [Type Converters for XAML Overview](~/docs/framework/xaml-services/type-converters-for-xaml-overview.md).</span></span></para></block>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
        <related type="Article" href="https://msdn.microsoft.com/library/51a65860-efcb-4fe0-95a0-1c679cde66b7"><span data-ttu-id="1a18e-267">Übersicht über Typkonverter für XAML</span><span class="sxs-lookup"><span data-stu-id="1a18e-267">Type Converters for XAML Overview</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="ConvertToInvariantString">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="1a18e-268">Konvertiert den angegebenen Wert in eine Zeichenfolgendarstellung mit invarianter Kultur.</span><span class="sxs-lookup"><span data-stu-id="1a18e-268">Converts the specified value to a culture-invariant string representation.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ConvertToInvariantString">
      <MemberSignature Language="C#" Value="public string ConvertToInvariantString (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ConvertToInvariantString(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.ConvertToInvariantString(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConvertToInvariantString (value As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ConvertToInvariantString(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="member this.ConvertToInvariantString : obj -&gt; string" Usage="typeConverter.ConvertToInvariantString value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="1a18e-269">Die zu konvertierende <see cref="T:System.Object" />.</span><span class="sxs-lookup"><span data-stu-id="1a18e-269">The <see cref="T:System.Object" /> to convert.</span></span></param>
        <summary><span data-ttu-id="1a18e-270">Konvertiert den angegebenen Wert in eine Zeichenfolgendarstellung mit invarianter Kultur.</span><span class="sxs-lookup"><span data-stu-id="1a18e-270">Converts the specified value to a culture-invariant string representation.</span></span></summary>
        <returns><span data-ttu-id="1a18e-271">Eine <see cref="T:System.String" />-Klasse, die den konvertierten Wert darstellt.</span><span class="sxs-lookup"><span data-stu-id="1a18e-271">A <see cref="T:System.String" /> that represents the converted value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a18e-272">Mit `context` dem-Parameter können zusätzliche Informationen über die Umgebung extrahiert werden, aus der dieser Konverter aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="1a18e-272">The `context` parameter can be used to extract additional information about the environment from which this converter is being invoked.</span></span> <span data-ttu-id="1a18e-273">Dieser Parameter kann `null` sein und muss daher immer überprüft werden.</span><span class="sxs-lookup"><span data-stu-id="1a18e-273">This can be `null`, so always check.</span></span> <span data-ttu-id="1a18e-274">Außerdem können die Eigenschaften des Kontextobjekts `null` zurückgeben.</span><span class="sxs-lookup"><span data-stu-id="1a18e-274">Also, properties on the context object can return `null`.</span></span>  
  
 <span data-ttu-id="1a18e-275">Abhängig von der Implementierung des wertformatierers kann es möglich sein, die zurückgegebene Zeichenfolge zurück an den wertformatierer zu übergeben, um eine Instanz des Objekts neu zu erstellen.</span><span class="sxs-lookup"><span data-stu-id="1a18e-275">Depending on the implementation of the value formatter, it might be possible to pass the returned string back into the value formatter to re-create an instance of the object.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="1a18e-276">Die Konvertierung kann nicht durchgeführt werden.</span><span class="sxs-lookup"><span data-stu-id="1a18e-276">The conversion cannot be performed.</span></span></exception>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <Member MemberName="ConvertToInvariantString">
      <MemberSignature Language="C#" Value="public string ConvertToInvariantString (System.ComponentModel.ITypeDescriptorContext context, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ConvertToInvariantString(class System.ComponentModel.ITypeDescriptorContext context, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConvertToInvariantString (context As ITypeDescriptorContext, value As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ConvertToInvariantString(System::ComponentModel::ITypeDescriptorContext ^ context, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="member this.ConvertToInvariantString : System.ComponentModel.ITypeDescriptorContext * obj -&gt; string" Usage="typeConverter.ConvertToInvariantString (context, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="1a18e-277">Ein <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, der einen Formatierungskontext bereitstellt.</span><span class="sxs-lookup"><span data-stu-id="1a18e-277">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span></span></param>
        <param name="value"><span data-ttu-id="1a18e-278">Die zu konvertierende <see cref="T:System.Object" />.</span><span class="sxs-lookup"><span data-stu-id="1a18e-278">The <see cref="T:System.Object" /> to convert.</span></span></param>
        <summary><span data-ttu-id="1a18e-279">Konvertiert den angegebenen Wert unter Verwendung des angegebenen Kontexts in eine Zeichenfolgendarstellung mit invarianter Kultur.</span><span class="sxs-lookup"><span data-stu-id="1a18e-279">Converts the specified value to a culture-invariant string representation, using the specified context.</span></span></summary>
        <returns><span data-ttu-id="1a18e-280">Eine <see cref="T:System.String" />-Klasse, die den konvertierten Wert darstellt.</span><span class="sxs-lookup"><span data-stu-id="1a18e-280">A <see cref="T:System.String" /> that represents the converted value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a18e-281">Über den `context`-Parameter können zusätzliche Informationen über die Umgebung extrahiert werden, aus der dieser Konverter aufgerufen wurde.</span><span class="sxs-lookup"><span data-stu-id="1a18e-281">Use the `context` parameter to extract additional information about the environment from which this converter is invoked.</span></span> <span data-ttu-id="1a18e-282">Dieser Parameter kann sein `null`, daher sollten Sie ihn immer überprüfen.</span><span class="sxs-lookup"><span data-stu-id="1a18e-282">This parameter can be `null`, so always check it.</span></span> <span data-ttu-id="1a18e-283">Außerdem können die Eigenschaften des Kontextobjekts `null` zurückgeben.</span><span class="sxs-lookup"><span data-stu-id="1a18e-283">Also, properties on the context object can return `null`.</span></span>  
  
 <span data-ttu-id="1a18e-284">Abhängig von der Implementierung des wertformatierers kann es möglich sein, die zurückgegebene Zeichenfolge zurück an den wertformatierer zu übergeben, um eine Instanz des Objekts neu zu erstellen.</span><span class="sxs-lookup"><span data-stu-id="1a18e-284">Depending on the implementation of the value formatter, it might be possible to pass the returned string back into the value formatter to re-create an instance of the object.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="1a18e-285">Die Konvertierung kann nicht durchgeführt werden.</span><span class="sxs-lookup"><span data-stu-id="1a18e-285">The conversion cannot be performed.</span></span></exception>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ConvertToString">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="1a18e-286">Konvertiert den angegebenen Wert in eine Zeichenfolgendarstellung.</span><span class="sxs-lookup"><span data-stu-id="1a18e-286">Converts the specified value to a string representation.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ConvertToString">
      <MemberSignature Language="C#" Value="public string ConvertToString (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ConvertToString(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.ConvertToString(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConvertToString (value As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ConvertToString(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="member this.ConvertToString : obj -&gt; string" Usage="typeConverter.ConvertToString value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="1a18e-287">Die zu konvertierende <see cref="T:System.Object" />.</span><span class="sxs-lookup"><span data-stu-id="1a18e-287">The <see cref="T:System.Object" /> to convert.</span></span></param>
        <summary><span data-ttu-id="1a18e-288">Konvertiert den angegebenen Wert in eine Zeichenfolgendarstellung.</span><span class="sxs-lookup"><span data-stu-id="1a18e-288">Converts the specified value to a string representation.</span></span></summary>
        <returns><span data-ttu-id="1a18e-289">Ein <see cref="T:System.Object" />, das den konvertierten Wert darstellt.</span><span class="sxs-lookup"><span data-stu-id="1a18e-289">An <see cref="T:System.Object" /> that represents the converted value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a18e-290">Abhängig von der Implementierung des wertformatierers kann es möglich sein, die zurückgegebene Zeichenfolge zurück an den wertformatierer zu übergeben, um eine Instanz des Objekts neu zu erstellen.</span><span class="sxs-lookup"><span data-stu-id="1a18e-290">Depending on the implementation of the value formatter, it might be possible to pass the returned string back into the value formatter to re-create an instance of the object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1a18e-291">Ein Beispiel für diese Funktion finden Sie unter der <xref:System.ComponentModel.TypeConverter> -Klasse.</span><span class="sxs-lookup"><span data-stu-id="1a18e-291">For an example on this function, see the <xref:System.ComponentModel.TypeConverter> class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="1a18e-292">Die Konvertierung kann nicht durchgeführt werden.</span><span class="sxs-lookup"><span data-stu-id="1a18e-292">The conversion cannot be performed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ConvertToString">
      <MemberSignature Language="C#" Value="public string ConvertToString (System.ComponentModel.ITypeDescriptorContext context, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ConvertToString(class System.ComponentModel.ITypeDescriptorContext context, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConvertToString (context As ITypeDescriptorContext, value As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ConvertToString(System::ComponentModel::ITypeDescriptorContext ^ context, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="member this.ConvertToString : System.ComponentModel.ITypeDescriptorContext * obj -&gt; string" Usage="typeConverter.ConvertToString (context, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="1a18e-293">Ein <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, der einen Formatierungskontext bereitstellt.</span><span class="sxs-lookup"><span data-stu-id="1a18e-293">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span></span></param>
        <param name="value"><span data-ttu-id="1a18e-294">Die zu konvertierende <see cref="T:System.Object" />.</span><span class="sxs-lookup"><span data-stu-id="1a18e-294">The <see cref="T:System.Object" /> to convert.</span></span></param>
        <summary><span data-ttu-id="1a18e-295">Konvertiert den angegebenen Wert unter Verwendung des angegebenen Kontexts in eine Zeichenfolgendarstellung.</span><span class="sxs-lookup"><span data-stu-id="1a18e-295">Converts the given value to a string representation, using the given context.</span></span></summary>
        <returns><span data-ttu-id="1a18e-296">Ein <see cref="T:System.Object" />, das den konvertierten Wert darstellt.</span><span class="sxs-lookup"><span data-stu-id="1a18e-296">An <see cref="T:System.Object" /> that represents the converted value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a18e-297">Über den `context`-Parameter können zusätzliche Informationen über die Umgebung extrahiert werden, aus der dieser Konverter aufgerufen wurde.</span><span class="sxs-lookup"><span data-stu-id="1a18e-297">Use the `context` parameter to extract additional information about the environment from which this converter is invoked.</span></span> <span data-ttu-id="1a18e-298">Dieser Parameter kann sein `null`, daher sollten Sie ihn immer überprüfen.</span><span class="sxs-lookup"><span data-stu-id="1a18e-298">This parameter can be `null`, so always check it.</span></span> <span data-ttu-id="1a18e-299">Außerdem können die Eigenschaften des Kontextobjekts `null` zurückgeben.</span><span class="sxs-lookup"><span data-stu-id="1a18e-299">Also, properties on the context object can return `null`.</span></span>  
  
 <span data-ttu-id="1a18e-300">Abhängig von der Implementierung des wertformatierers kann es möglich sein, die zurückgegebene Zeichenfolge zurück an den wertformatierer zu übergeben, um eine Instanz des Objekts neu zu erstellen.</span><span class="sxs-lookup"><span data-stu-id="1a18e-300">Depending on the implementation of the value formatter, it might be possible to pass the returned string back into the value formatter to re-create an instance of the object.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="1a18e-301">Die Konvertierung kann nicht durchgeführt werden.</span><span class="sxs-lookup"><span data-stu-id="1a18e-301">The conversion cannot be performed.</span></span></exception>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <Member MemberName="ConvertToString">
      <MemberSignature Language="C#" Value="public string ConvertToString (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ConvertToString(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConvertToString (context As ITypeDescriptorContext, culture As CultureInfo, value As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ConvertToString(System::ComponentModel::ITypeDescriptorContext ^ context, System::Globalization::CultureInfo ^ culture, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="member this.ConvertToString : System.ComponentModel.ITypeDescriptorContext * System.Globalization.CultureInfo * obj -&gt; string" Usage="typeConverter.ConvertToString (context, culture, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="1a18e-302">Ein <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, der einen Formatierungskontext bereitstellt.</span><span class="sxs-lookup"><span data-stu-id="1a18e-302">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span></span></param>
        <param name="culture"><span data-ttu-id="1a18e-303">Ein <see cref="T:System.Globalization.CultureInfo" />.</span><span class="sxs-lookup"><span data-stu-id="1a18e-303">A <see cref="T:System.Globalization.CultureInfo" />.</span></span> <span data-ttu-id="1a18e-304">Wenn <see langword="null" /> übergeben wird, wird von der aktuellen Kultur ausgegangen.</span><span class="sxs-lookup"><span data-stu-id="1a18e-304">If <see langword="null" /> is passed, the current culture is assumed.</span></span></param>
        <param name="value"><span data-ttu-id="1a18e-305">Die zu konvertierende <see cref="T:System.Object" />.</span><span class="sxs-lookup"><span data-stu-id="1a18e-305">The <see cref="T:System.Object" /> to convert.</span></span></param>
        <summary><span data-ttu-id="1a18e-306">Konvertiert den angegebenen Wert unter Verwendung des angegebenen Kontexts und der angegebenen Kulturinformationen in eine Zeichenfolgendarstellung.</span><span class="sxs-lookup"><span data-stu-id="1a18e-306">Converts the given value to a string representation, using the specified context and culture information.</span></span></summary>
        <returns><span data-ttu-id="1a18e-307">Ein <see cref="T:System.Object" />, das den konvertierten Wert darstellt.</span><span class="sxs-lookup"><span data-stu-id="1a18e-307">An <see cref="T:System.Object" /> that represents the converted value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a18e-308">Über den `context`-Parameter können zusätzliche Informationen über die Umgebung extrahiert werden, aus der dieser Konverter aufgerufen wurde.</span><span class="sxs-lookup"><span data-stu-id="1a18e-308">Use the `context` parameter to extract additional information about the environment from which this converter is invoked.</span></span> <span data-ttu-id="1a18e-309">Dieser Parameter kann sein `null`, daher sollten Sie ihn immer überprüfen.</span><span class="sxs-lookup"><span data-stu-id="1a18e-309">This parameter can be `null`, so always check it.</span></span> <span data-ttu-id="1a18e-310">Außerdem können die Eigenschaften des Kontextobjekts `null` zurückgeben.</span><span class="sxs-lookup"><span data-stu-id="1a18e-310">Also, properties on the context object can return `null`.</span></span>  
  
 <span data-ttu-id="1a18e-311">Abhängig von der Implementierung des wertformatierers kann es möglich sein, die zurückgegebene Zeichenfolge zurück an den wertformatierer zu übergeben, um eine Instanz des Objekts neu zu erstellen.</span><span class="sxs-lookup"><span data-stu-id="1a18e-311">Depending on the implementation of the value formatter, it might be possible to pass the returned string back into the value formatter to re-create an instance of the object.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="1a18e-312">Die Konvertierung kann nicht durchgeführt werden.</span><span class="sxs-lookup"><span data-stu-id="1a18e-312">The conversion cannot be performed.</span></span></exception>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateInstance">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="1a18e-313">Erstellt eine <see cref="T:System.Object" />-Klasse mit einer angegebenen Menge von Eigenschaftswerten für das Objekt neu.</span><span class="sxs-lookup"><span data-stu-id="1a18e-313">Re-creates an <see cref="T:System.Object" /> given a set of property values for the object.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public object CreateInstance (System.Collections.IDictionary propertyValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object CreateInstance(class System.Collections.IDictionary propertyValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateInstance (propertyValues As IDictionary) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ CreateInstance(System::Collections::IDictionary ^ propertyValues);" />
      <MemberSignature Language="F#" Value="member this.CreateInstance : System.Collections.IDictionary -&gt; obj" Usage="typeConverter.CreateInstance propertyValues" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyValues" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="propertyValues"><span data-ttu-id="1a18e-314">Eine <see cref="T:System.Collections.IDictionary" />-Schnittstelle, die ein Wörterbuch mit neuen Eigenschaftswerten darstellt.</span><span class="sxs-lookup"><span data-stu-id="1a18e-314">An <see cref="T:System.Collections.IDictionary" /> that represents a dictionary of new property values.</span></span></param>
        <summary><span data-ttu-id="1a18e-315">Erstellt eine <see cref="T:System.Object" />-Klasse mit einer angegebenen Menge von Eigenschaftswerten für das Objekt neu.</span><span class="sxs-lookup"><span data-stu-id="1a18e-315">Re-creates an <see cref="T:System.Object" /> given a set of property values for the object.</span></span></summary>
        <returns><span data-ttu-id="1a18e-316">Ein <see cref="T:System.Object" />, das das angegebene <see cref="T:System.Collections.IDictionary" /> darstellt, oder <see langword="null" />, wenn das Objekt nicht erstellt werden kann.</span><span class="sxs-lookup"><span data-stu-id="1a18e-316">An <see cref="T:System.Object" /> representing the given <see cref="T:System.Collections.IDictionary" />, or <see langword="null" /> if the object cannot be created.</span></span> <span data-ttu-id="1a18e-317">Diese Methode gibt immer <see langword="null" /> zurück.</span><span class="sxs-lookup"><span data-stu-id="1a18e-317">This method always returns <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a18e-318">Verwenden Sie diese Methode für Objekte, die unveränderlich sind, aber für die Sie änderbare Eigenschaften bereitstellen möchten.</span><span class="sxs-lookup"><span data-stu-id="1a18e-318">Use this method for objects that are immutable, but for which you want to provide changeable properties.</span></span>  
  
 <span data-ttu-id="1a18e-319">Das vom `propertyValues` -Parameter bereitgestellte Wörterbuch verfügt über eine Reihe von Name-Wert-Paaren, eine für <xref:System.ComponentModel.TypeConverter.GetProperties%2A>jede Eigenschaft, die von zurückgegeben wird.</span><span class="sxs-lookup"><span data-stu-id="1a18e-319">The dictionary provided by the `propertyValues` parameter has a series of name/value pairs, one for each property returned from <xref:System.ComponentModel.TypeConverter.GetProperties%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IDictionary" />
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public virtual object CreateInstance (System.ComponentModel.ITypeDescriptorContext context, System.Collections.IDictionary propertyValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object CreateInstance(class System.ComponentModel.ITypeDescriptorContext context, class System.Collections.IDictionary propertyValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateInstance (context As ITypeDescriptorContext, propertyValues As IDictionary) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ CreateInstance(System::ComponentModel::ITypeDescriptorContext ^ context, System::Collections::IDictionary ^ propertyValues);" />
      <MemberSignature Language="F#" Value="abstract member CreateInstance : System.ComponentModel.ITypeDescriptorContext * System.Collections.IDictionary -&gt; obj&#xA;override this.CreateInstance : System.ComponentModel.ITypeDescriptorContext * System.Collections.IDictionary -&gt; obj" Usage="typeConverter.CreateInstance (context, propertyValues)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="propertyValues" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="1a18e-320">Ein <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, der einen Formatierungskontext bereitstellt.</span><span class="sxs-lookup"><span data-stu-id="1a18e-320">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span></span></param>
        <param name="propertyValues"><span data-ttu-id="1a18e-321">Ein <see cref="T:System.Collections.IDictionary" /> mit neuen Eigenschaftswerten.</span><span class="sxs-lookup"><span data-stu-id="1a18e-321">An <see cref="T:System.Collections.IDictionary" /> of new property values.</span></span></param>
        <summary><span data-ttu-id="1a18e-322">Erstellt über den angegebenen Kontext, der aus einer angegebenen Menge von Eigenschaftswerten für das Objekt besteht, eine Instanz des Typs, der dieser <see cref="T:System.ComponentModel.TypeConverter" />-Klasse zugeordnet ist.</span><span class="sxs-lookup"><span data-stu-id="1a18e-322">Creates an instance of the type that this <see cref="T:System.ComponentModel.TypeConverter" /> is associated with, using the specified context, given a set of property values for the object.</span></span></summary>
        <returns><span data-ttu-id="1a18e-323">Ein <see cref="T:System.Object" />, das das angegebene <see cref="T:System.Collections.IDictionary" /> darstellt, oder <see langword="null" />, wenn das Objekt nicht erstellt werden kann.</span><span class="sxs-lookup"><span data-stu-id="1a18e-323">An <see cref="T:System.Object" /> representing the given <see cref="T:System.Collections.IDictionary" />, or <see langword="null" /> if the object cannot be created.</span></span> <span data-ttu-id="1a18e-324">Diese Methode gibt immer <see langword="null" /> zurück.</span><span class="sxs-lookup"><span data-stu-id="1a18e-324">This method always returns <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a18e-325">Verwenden Sie diese Methode für Objekte, die unveränderlich sind, aber für die Sie änderbare Eigenschaften bereitstellen möchten.</span><span class="sxs-lookup"><span data-stu-id="1a18e-325">Use this method for objects that are immutable, but for which you want to provide changeable properties.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="1a18e-326">Überschreiben Sie diese Methode, wenn der Typ, den Sie konvertieren möchten, das Objekt neu erstellen muss, um den Wert zu ändern.</span><span class="sxs-lookup"><span data-stu-id="1a18e-326">Override this method if the type you want to convert must re-create the object to change its value.</span></span>  
  
<span data-ttu-id="1a18e-327">Über den <paramref name="context" />-Parameter können zusätzliche Informationen über die Umgebung extrahiert werden, aus der dieser Konverter aufgerufen wurde.</span><span class="sxs-lookup"><span data-stu-id="1a18e-327">Use the <paramref name="context" /> parameter to extract additional information about the environment from which this converter is invoked.</span></span> <span data-ttu-id="1a18e-328">Dieser Parameter kann sein <see langword="null" />, daher sollten Sie ihn immer überprüfen.</span><span class="sxs-lookup"><span data-stu-id="1a18e-328">This parameter can be <see langword="null" />, so always check it.</span></span> <span data-ttu-id="1a18e-329">Außerdem können die Eigenschaften des Kontextobjekts <see langword="null" /> zurückgeben.</span><span class="sxs-lookup"><span data-stu-id="1a18e-329">Also, properties on the context object can return <see langword="null" />.</span></span>  
  
<span data-ttu-id="1a18e-330">Das vom <paramref name="propertyValues" /> -Parameter bereitgestellte Wörterbuch verfügt über eine Reihe von Name-Wert-Paaren, eine für <see cref="M:System.ComponentModel.TypeConverter.GetProperties(System.Object)" />jede Eigenschaft, die von zurückgegeben wird.</span><span class="sxs-lookup"><span data-stu-id="1a18e-330">The dictionary provided by the <paramref name="propertyValues" /> parameter has a series of name/value pairs, one for each property returned from <see cref="M:System.ComponentModel.TypeConverter.GetProperties(System.Object)" />.</span></span></para></block>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
        <altmember cref="T:System.Collections.IDictionary" />
      </Docs>
    </Member>
    <Member MemberName="GetConvertFromException">
      <MemberSignature Language="C#" Value="protected Exception GetConvertFromException (object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.Exception GetConvertFromException(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.GetConvertFromException(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetConvertFromException (value As Object) As Exception" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Exception ^ GetConvertFromException(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="member this.GetConvertFromException : obj -&gt; Exception" Usage="typeConverter.GetConvertFromException value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="1a18e-331">Die zu konvertierende <see cref="T:System.Object" />-Klasse oder <see langword="null" />, wenn das Objekt nicht verfügbar ist.</span><span class="sxs-lookup"><span data-stu-id="1a18e-331">The <see cref="T:System.Object" /> to convert, or <see langword="null" /> if the object is not available.</span></span></param>
        <summary><span data-ttu-id="1a18e-332">Gibt eine Ausnahme zurück, die ausgelöst wird, wenn eine Konvertierung nicht durchgeführt werden kann.</span><span class="sxs-lookup"><span data-stu-id="1a18e-332">Returns an exception to throw when a conversion cannot be performed.</span></span></summary>
        <returns><span data-ttu-id="1a18e-333">Eine <see cref="T:System.Exception" />-Klasse, die die Ausnahme darstellt, die ausgelöst wird, wenn eine Konvertierung nicht durchgeführt werden kann.</span><span class="sxs-lookup"><span data-stu-id="1a18e-333">An <see cref="T:System.Exception" /> that represents the exception to throw when a conversion cannot be performed.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="1a18e-334">Wird automatisch durch diese Methode ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="1a18e-334">Automatically thrown by this method.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetConvertToException">
      <MemberSignature Language="C#" Value="protected Exception GetConvertToException (object value, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.Exception GetConvertToException(object value, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.GetConvertToException(System.Object,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetConvertToException (value As Object, destinationType As Type) As Exception" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Exception ^ GetConvertToException(System::Object ^ value, Type ^ destinationType);" />
      <MemberSignature Language="F#" Value="member this.GetConvertToException : obj * Type -&gt; Exception" Usage="typeConverter.GetConvertToException (value, destinationType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="1a18e-335">Die zu konvertierende <see cref="T:System.Object" />-Klasse oder <see langword="null" />, wenn das Objekt nicht verfügbar ist.</span><span class="sxs-lookup"><span data-stu-id="1a18e-335">The <see cref="T:System.Object" /> to convert, or <see langword="null" /> if the object is not available.</span></span></param>
        <param name="destinationType"><span data-ttu-id="1a18e-336">Eine <see cref="T:System.Type" />-Klasse, die den Typ darstellt, in den konvertiert werden sollte.</span><span class="sxs-lookup"><span data-stu-id="1a18e-336">A <see cref="T:System.Type" /> that represents the type the conversion was trying to convert to.</span></span></param>
        <summary><span data-ttu-id="1a18e-337">Gibt eine Ausnahme zurück, die ausgelöst wird, wenn eine Konvertierung nicht durchgeführt werden kann.</span><span class="sxs-lookup"><span data-stu-id="1a18e-337">Returns an exception to throw when a conversion cannot be performed.</span></span></summary>
        <returns><span data-ttu-id="1a18e-338">Eine <see cref="T:System.Exception" />-Klasse, die die Ausnahme darstellt, die ausgelöst wird, wenn eine Konvertierung nicht durchgeführt werden kann.</span><span class="sxs-lookup"><span data-stu-id="1a18e-338">An <see cref="T:System.Exception" /> that represents the exception to throw when a conversion cannot be performed.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="1a18e-339">Wird automatisch durch diese Methode ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="1a18e-339">Automatically thrown by this method.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetCreateInstanceSupported">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="1a18e-340">Gibt zurück, ob zum Ändern eines Werts für dieses Objekt ein Aufruf der <see cref="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" />-Methode erforderlich ist.</span><span class="sxs-lookup"><span data-stu-id="1a18e-340">Returns whether changing a value on this object requires a call to the <see cref="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" /> method to create a new value.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetCreateInstanceSupported">
      <MemberSignature Language="C#" Value="public bool GetCreateInstanceSupported ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool GetCreateInstanceSupported() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.GetCreateInstanceSupported" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCreateInstanceSupported () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool GetCreateInstanceSupported();" />
      <MemberSignature Language="F#" Value="member this.GetCreateInstanceSupported : unit -&gt; bool" Usage="typeConverter.GetCreateInstanceSupported " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1a18e-341">Gibt zurück, ob zum Ändern eines Werts für dieses Objekt ein Aufruf der <see cref="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" />-Methode erforderlich ist.</span><span class="sxs-lookup"><span data-stu-id="1a18e-341">Returns whether changing a value on this object requires a call to the <see cref="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" /> method to create a new value.</span></span></summary>
        <returns><span data-ttu-id="1a18e-342"><see langword="true" />, wenn zum Ändern einer Eigenschaft für dieses Objekt die <see cref="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" />-Methode aufgerufen werden muss, um einen neuen Wert zu erstellen, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="1a18e-342"><see langword="true" /> if changing a property on this object requires a call to <see cref="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" /> to create a new value; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCreateInstanceSupported">
      <MemberSignature Language="C#" Value="public virtual bool GetCreateInstanceSupported (System.ComponentModel.ITypeDescriptorContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetCreateInstanceSupported(class System.ComponentModel.ITypeDescriptorContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCreateInstanceSupported (context As ITypeDescriptorContext) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool GetCreateInstanceSupported(System::ComponentModel::ITypeDescriptorContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member GetCreateInstanceSupported : System.ComponentModel.ITypeDescriptorContext -&gt; bool&#xA;override this.GetCreateInstanceSupported : System.ComponentModel.ITypeDescriptorContext -&gt; bool" Usage="typeConverter.GetCreateInstanceSupported context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="1a18e-343">Ein <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, der einen Formatierungskontext bereitstellt.</span><span class="sxs-lookup"><span data-stu-id="1a18e-343">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span></span></param>
        <summary><span data-ttu-id="1a18e-344">Gibt zurück, ob zum Ändern eines Werts für dieses Objekt ein Aufruf der <see cref="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" />-Methode erforderlich ist, um unter Verwendung des angegebenen Kontexts einen neuen Wert zu erstellen.</span><span class="sxs-lookup"><span data-stu-id="1a18e-344">Returns whether changing a value on this object requires a call to <see cref="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" /> to create a new value, using the specified context.</span></span></summary>
        <returns><span data-ttu-id="1a18e-345"><see langword="true" />, wenn zum Ändern einer Eigenschaft für dieses Objekt die <see cref="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" />-Methode aufgerufen werden muss, um einen neuen Wert zu erstellen, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="1a18e-345"><see langword="true" /> if changing a property on this object requires a call to <see cref="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" /> to create a new value; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a18e-346">Bei Implementierung in dieser Klasse gibt diese Methode immer `false` zurück.</span><span class="sxs-lookup"><span data-stu-id="1a18e-346">As implemented in this class, this method always returns `false`.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="1a18e-347">Überschreiben Sie diese Methode, wenn der Typ, den Sie konvertieren möchten, das Objekt neu erstellen muss, um den Wert zu ändern.</span><span class="sxs-lookup"><span data-stu-id="1a18e-347">Override this method if the type you want to convert must re-create the object to change its value.</span></span>  
  
<span data-ttu-id="1a18e-348">Über den <paramref name="context" />-Parameter können zusätzliche Informationen über die Umgebung extrahiert werden, aus der dieser Konverter aufgerufen wurde.</span><span class="sxs-lookup"><span data-stu-id="1a18e-348">Use the <paramref name="context" /> parameter to extract additional information about the environment from which this converter is invoked.</span></span> <span data-ttu-id="1a18e-349">Dieser Parameter kann sein <see langword="null" />, daher sollten Sie ihn immer überprüfen.</span><span class="sxs-lookup"><span data-stu-id="1a18e-349">This parameter can be <see langword="null" />, so always check it.</span></span> <span data-ttu-id="1a18e-350">Außerdem können die Eigenschaften des Kontextobjekts <see langword="null" /> zurückgeben.</span><span class="sxs-lookup"><span data-stu-id="1a18e-350">Also, properties on the context object can return <see langword="null" />.</span></span></para></block>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetProperties">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="1a18e-351">Gibt eine Auflistung von Eigenschaften für den Typ von Array zurück, der durch den Wertparameter angegeben ist.</span><span class="sxs-lookup"><span data-stu-id="1a18e-351">Returns a collection of properties for the type of array specified by the value parameter.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetProperties">
      <MemberSignature Language="C#" Value="public System.ComponentModel.PropertyDescriptorCollection GetProperties (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ComponentModel.PropertyDescriptorCollection GetProperties(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.GetProperties(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetProperties (value As Object) As PropertyDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ComponentModel::PropertyDescriptorCollection ^ GetProperties(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="member this.GetProperties : obj -&gt; System.ComponentModel.PropertyDescriptorCollection" Usage="typeConverter.GetProperties value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="1a18e-352">Ein <see cref="T:System.Object" />, das den Typ des Arrays angibt, für den Eigenschaften abgerufen werden sollen.</span><span class="sxs-lookup"><span data-stu-id="1a18e-352">An <see cref="T:System.Object" /> that specifies the type of array for which to get properties.</span></span></param>
        <summary><span data-ttu-id="1a18e-353">Gibt eine Auflistung von Eigenschaften für den Typ von Array zurück, der durch den Wertparameter angegeben ist.</span><span class="sxs-lookup"><span data-stu-id="1a18e-353">Returns a collection of properties for the type of array specified by the value parameter.</span></span></summary>
        <returns><span data-ttu-id="1a18e-354">Eine <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> mit den Eigenschaften, die für diesen Datentyp verfügbar sind, oder <see langword="null" />, wenn keine Eigenschaften vorhanden sind.</span><span class="sxs-lookup"><span data-stu-id="1a18e-354">A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> with the properties that are exposed for this data type, or <see langword="null" /> if there are no properties.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a18e-355">Bei Implementierung in dieser Klasse gibt diese Methode immer `null` zurück.</span><span class="sxs-lookup"><span data-stu-id="1a18e-355">As implemented in this class, this method always returns `null`.</span></span>  
  
 <span data-ttu-id="1a18e-356">Standardmäßig gibt ein Typ keine Eigenschaften zurück.</span><span class="sxs-lookup"><span data-stu-id="1a18e-356">By default, a type does not return properties.</span></span> <span data-ttu-id="1a18e-357">Eine einfache Implementierung dieser Methode kann für den <xref:System.ComponentModel.TypeDescriptor.GetProperties%2A> korrekten Datentyp aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="1a18e-357">An easy implementation of this method can call <xref:System.ComponentModel.TypeDescriptor.GetProperties%2A> for the correct data type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetProperties">
      <MemberSignature Language="C#" Value="public System.ComponentModel.PropertyDescriptorCollection GetProperties (System.ComponentModel.ITypeDescriptorContext context, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ComponentModel.PropertyDescriptorCollection GetProperties(class System.ComponentModel.ITypeDescriptorContext context, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetProperties (context As ITypeDescriptorContext, value As Object) As PropertyDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ComponentModel::PropertyDescriptorCollection ^ GetProperties(System::ComponentModel::ITypeDescriptorContext ^ context, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="member this.GetProperties : System.ComponentModel.ITypeDescriptorContext * obj -&gt; System.ComponentModel.PropertyDescriptorCollection" Usage="typeConverter.GetProperties (context, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="1a18e-358">Ein <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, der einen Formatierungskontext bereitstellt.</span><span class="sxs-lookup"><span data-stu-id="1a18e-358">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span></span></param>
        <param name="value"><span data-ttu-id="1a18e-359">Ein <see cref="T:System.Object" />, das den Typ des Arrays angibt, für den Eigenschaften abgerufen werden sollen.</span><span class="sxs-lookup"><span data-stu-id="1a18e-359">An <see cref="T:System.Object" /> that specifies the type of array for which to get properties.</span></span></param>
        <summary><span data-ttu-id="1a18e-360">Gibt unter Verwendung des angegebenen Kontexts eine Auflistung der Eigenschaften für den Typ von Array zurück, der durch den Wertparameter angegeben ist.</span><span class="sxs-lookup"><span data-stu-id="1a18e-360">Returns a collection of properties for the type of array specified by the value parameter, using the specified context.</span></span></summary>
        <returns><span data-ttu-id="1a18e-361">Eine <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> mit den Eigenschaften, die für diesen Datentyp verfügbar sind, oder <see langword="null" />, wenn keine Eigenschaften vorhanden sind.</span><span class="sxs-lookup"><span data-stu-id="1a18e-361">A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> with the properties that are exposed for this data type, or <see langword="null" /> if there are no properties.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a18e-362">Über den `context`-Parameter können zusätzliche Informationen über die Umgebung extrahiert werden, aus der dieser Konverter aufgerufen wurde.</span><span class="sxs-lookup"><span data-stu-id="1a18e-362">Use the `context` parameter to extract additional information about the environment from which this converter is invoked.</span></span> <span data-ttu-id="1a18e-363">Dieser Parameter kann sein `null`, daher sollten Sie ihn immer überprüfen.</span><span class="sxs-lookup"><span data-stu-id="1a18e-363">This parameter can be `null`, so always check it.</span></span> <span data-ttu-id="1a18e-364">Außerdem können die Eigenschaften des Kontextobjekts `null` zurückgeben.</span><span class="sxs-lookup"><span data-stu-id="1a18e-364">Also, properties on the context object can return `null`.</span></span>  
  
 <span data-ttu-id="1a18e-365">Bei Implementierung in dieser Klasse gibt diese Methode immer `null` zurück.</span><span class="sxs-lookup"><span data-stu-id="1a18e-365">As implemented in this class, this method always returns `null`.</span></span>  
  
 <span data-ttu-id="1a18e-366">Standardmäßig gibt ein Typ keine Eigenschaften zurück.</span><span class="sxs-lookup"><span data-stu-id="1a18e-366">By default, a type does not return properties.</span></span> <span data-ttu-id="1a18e-367">Eine einfache Implementierung dieser Methode kann für den <xref:System.ComponentModel.TypeDescriptor.GetProperties%2A> korrekten Datentyp aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="1a18e-367">An easy implementation of this method can call <xref:System.ComponentModel.TypeDescriptor.GetProperties%2A> for the correct data type.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <Member MemberName="GetProperties">
      <MemberSignature Language="C#" Value="public virtual System.ComponentModel.PropertyDescriptorCollection GetProperties (System.ComponentModel.ITypeDescriptorContext context, object value, Attribute[] attributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ComponentModel.PropertyDescriptorCollection GetProperties(class System.ComponentModel.ITypeDescriptorContext context, object value, class System.Attribute[] attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetProperties (context As ITypeDescriptorContext, value As Object, attributes As Attribute()) As PropertyDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::ComponentModel::PropertyDescriptorCollection ^ GetProperties(System::ComponentModel::ITypeDescriptorContext ^ context, System::Object ^ value, cli::array &lt;Attribute ^&gt; ^ attributes);" />
      <MemberSignature Language="F#" Value="abstract member GetProperties : System.ComponentModel.ITypeDescriptorContext * obj * Attribute[] -&gt; System.ComponentModel.PropertyDescriptorCollection&#xA;override this.GetProperties : System.ComponentModel.ITypeDescriptorContext * obj * Attribute[] -&gt; System.ComponentModel.PropertyDescriptorCollection" Usage="typeConverter.GetProperties (context, value, attributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="attributes" Type="System.Attribute[]" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="1a18e-368">Ein <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, der einen Formatierungskontext bereitstellt.</span><span class="sxs-lookup"><span data-stu-id="1a18e-368">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span></span></param>
        <param name="value"><span data-ttu-id="1a18e-369">Ein <see cref="T:System.Object" /> , die den Typ des Arrays angibt, für den Eigenschaften abgerufen werden sollen.</span><span class="sxs-lookup"><span data-stu-id="1a18e-369">An <see cref="T:System.Object" /> that specifies the type of array for which to get properties.</span></span></param>
        <param name="attributes"><span data-ttu-id="1a18e-370">Ein Array vom Typ <see cref="T:System.Attribute" />, das als Filter verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="1a18e-370">An array of type <see cref="T:System.Attribute" /> that is used as a filter.</span></span></param>
        <summary><span data-ttu-id="1a18e-371">Gibt unter Verwendung des angegebenen Kontexts und der angegebenen Attribute eine Auflistung der Eigenschaften für den Typ von Array zurück, der durch den Wertparameter angegeben ist.</span><span class="sxs-lookup"><span data-stu-id="1a18e-371">Returns a collection of properties for the type of array specified by the value parameter, using the specified context and attributes.</span></span></summary>
        <returns><span data-ttu-id="1a18e-372">Eine <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> mit den Eigenschaften, die für diesen Datentyp verfügbar sind, oder <see langword="null" />, wenn keine Eigenschaften vorhanden sind.</span><span class="sxs-lookup"><span data-stu-id="1a18e-372">A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> with the properties that are exposed for this data type, or <see langword="null" /> if there are no properties.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a18e-373">Bei Implementierung in dieser Klasse gibt diese Methode immer `null` zurück.</span><span class="sxs-lookup"><span data-stu-id="1a18e-373">As implemented in this class, this method always returns `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="1a18e-374">Überschreiben Sie diese Methode, wenn der Typ, den Sie konvertieren möchten, Eigenschaften unterstützt.</span><span class="sxs-lookup"><span data-stu-id="1a18e-374">Override this method if the type you want to convert supports properties.</span></span>  
  
<span data-ttu-id="1a18e-375">Über den <paramref name="context" />-Parameter können zusätzliche Informationen über die Umgebung extrahiert werden, aus der dieser Konverter aufgerufen wurde.</span><span class="sxs-lookup"><span data-stu-id="1a18e-375">Use the <paramref name="context" /> parameter to extract additional information about the environment from which this converter is invoked.</span></span> <span data-ttu-id="1a18e-376">Dieser Parameter kann sein <see langword="null" />, daher sollten Sie ihn immer überprüfen.</span><span class="sxs-lookup"><span data-stu-id="1a18e-376">This parameter can be <see langword="null" />, so always check it.</span></span> <span data-ttu-id="1a18e-377">Außerdem können die Eigenschaften des Kontextobjekts <see langword="null" /> zurückgeben.</span><span class="sxs-lookup"><span data-stu-id="1a18e-377">Also, properties on the context object can return <see langword="null" />.</span></span>  
  
<span data-ttu-id="1a18e-378">Das Array Attribute wird verwendet, um das Array zu filtern.</span><span class="sxs-lookup"><span data-stu-id="1a18e-378">The attributes array is used to filter the array.</span></span> <span data-ttu-id="1a18e-379">Die Attribute können eine Mischung aus <see cref="T:System.Type" /> -und- <see cref="T:System.Attribute" /> Objekten aufweisen.</span><span class="sxs-lookup"><span data-stu-id="1a18e-379">The attributes can have a mix of <see cref="T:System.Type" /> and <see cref="T:System.Attribute" /> objects.</span></span> <span data-ttu-id="1a18e-380">Das Filtern wird durch die folgenden Regeln definiert:</span><span class="sxs-lookup"><span data-stu-id="1a18e-380">Filtering is defined by the following rules:</span></span> 
<span data-ttu-id="1a18e-381">-A <see cref="T:System.Type" /> wird als Platzhalter behandelt. er entspricht einer Eigenschaft, die über <see cref="T:System.Type" /> die in der Gruppe von Attributen verfügt.</span><span class="sxs-lookup"><span data-stu-id="1a18e-381">-   A <see cref="T:System.Type" /> is treated as a wildcard; it matches a property that has the <see cref="T:System.Type" /> in its set of attributes.</span></span>  
  
<span data-ttu-id="1a18e-382">Wenn eine Eigenschaft nicht über eine <see cref="T:System.Attribute" /> der gleichen Klasse verfügt, ist die Eigenschaft nicht im zurückgegebenen Array enthalten.</span><span class="sxs-lookup"><span data-stu-id="1a18e-382">-   If a property does not have an <see cref="T:System.Attribute" /> of the same class, the property is not included in the returned array.</span></span>  
  
<span data-ttu-id="1a18e-383">-Wenn das-Attribut eine Instanz von <see cref="T:System.Attribute" />ist, muss die-Eigenschaft eine genaue Entsprechung aufweisen, oder Sie ist nicht im zurückgegebenen Array enthalten.</span><span class="sxs-lookup"><span data-stu-id="1a18e-383">-   If the attribute is an instance of <see cref="T:System.Attribute" />, the property must be an exact match or it is not included in the returned array.</span></span>  
  
<span data-ttu-id="1a18e-384">-Wenn eine <see cref="T:System.Attribute" /> Instanz angegeben wird und es sich um die Standard Eigenschaft handelt, wird Sie in das zurückgegebene Array eingeschlossen, auch wenn <see cref="T:System.Attribute" /> in der-Eigenschaft keine Instanz von vorhanden ist.</span><span class="sxs-lookup"><span data-stu-id="1a18e-384">-   If an <see cref="T:System.Attribute" /> instance is specified and it is the default property, it is included in the returned array even if there is no instance of the <see cref="T:System.Attribute" /> in the property.</span></span></para></block>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
        <altmember cref="T:System.Attribute" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetPropertiesSupported">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="1a18e-385">Gibt zurück, ob dieses Objekt Eigenschaften unterstützt.</span><span class="sxs-lookup"><span data-stu-id="1a18e-385">Returns whether this object supports properties.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetPropertiesSupported">
      <MemberSignature Language="C#" Value="public bool GetPropertiesSupported ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool GetPropertiesSupported() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.GetPropertiesSupported" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPropertiesSupported () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool GetPropertiesSupported();" />
      <MemberSignature Language="F#" Value="member this.GetPropertiesSupported : unit -&gt; bool" Usage="typeConverter.GetPropertiesSupported " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1a18e-386">Gibt zurück, ob dieses Objekt Eigenschaften unterstützt.</span><span class="sxs-lookup"><span data-stu-id="1a18e-386">Returns whether this object supports properties.</span></span></summary>
        <returns><span data-ttu-id="1a18e-387"><see langword="true" />, wenn <see cref="M:System.ComponentModel.TypeConverter.GetProperties(System.Object)" /> aufgerufen werden muss, um die Eigenschaften dieses Objekts zu ermitteln, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="1a18e-387"><see langword="true" /> if <see cref="M:System.ComponentModel.TypeConverter.GetProperties(System.Object)" /> should be called to find the properties of this object; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a18e-388">Bei Implementierung in dieser Klasse gibt diese Methode immer `false` zurück.</span><span class="sxs-lookup"><span data-stu-id="1a18e-388">As implemented in this class, this method always returns `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPropertiesSupported">
      <MemberSignature Language="C#" Value="public virtual bool GetPropertiesSupported (System.ComponentModel.ITypeDescriptorContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetPropertiesSupported(class System.ComponentModel.ITypeDescriptorContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPropertiesSupported (context As ITypeDescriptorContext) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool GetPropertiesSupported(System::ComponentModel::ITypeDescriptorContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member GetPropertiesSupported : System.ComponentModel.ITypeDescriptorContext -&gt; bool&#xA;override this.GetPropertiesSupported : System.ComponentModel.ITypeDescriptorContext -&gt; bool" Usage="typeConverter.GetPropertiesSupported context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="1a18e-389">Ein <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, der einen Formatierungskontext bereitstellt.</span><span class="sxs-lookup"><span data-stu-id="1a18e-389">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span></span></param>
        <summary><span data-ttu-id="1a18e-390">Gibt zurück, ob dieses Objekt unter Verwendung des angegebenen Kontexts Eigenschaften unterstützt.</span><span class="sxs-lookup"><span data-stu-id="1a18e-390">Returns whether this object supports properties, using the specified context.</span></span></summary>
        <returns><span data-ttu-id="1a18e-391"><see langword="true" />, wenn <see cref="M:System.ComponentModel.TypeConverter.GetProperties(System.Object)" /> aufgerufen werden muss, um die Eigenschaften dieses Objekts zu ermitteln, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="1a18e-391"><see langword="true" /> if <see cref="M:System.ComponentModel.TypeConverter.GetProperties(System.Object)" /> should be called to find the properties of this object; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a18e-392">Bei Implementierung in dieser Klasse gibt diese Methode immer `false` zurück.</span><span class="sxs-lookup"><span data-stu-id="1a18e-392">As implemented in this class, this method always returns `false`.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="1a18e-393">Überschreiben Sie diese Methode, wenn der Typ, den Sie konvertieren möchten, Eigenschaften unterstützt.</span><span class="sxs-lookup"><span data-stu-id="1a18e-393">Override this method if the type you want to convert supports properties.</span></span>  
  
<span data-ttu-id="1a18e-394">Über den <paramref name="context" />-Parameter können zusätzliche Informationen über die Umgebung extrahiert werden, aus der dieser Konverter aufgerufen wurde.</span><span class="sxs-lookup"><span data-stu-id="1a18e-394">Use the <paramref name="context" /> parameter to extract additional information about the environment from which this converter is invoked.</span></span> <span data-ttu-id="1a18e-395">Dieser Parameter kann sein <see langword="null" />, daher sollten Sie ihn immer überprüfen.</span><span class="sxs-lookup"><span data-stu-id="1a18e-395">This parameter can be <see langword="null" />, so always check it.</span></span> <span data-ttu-id="1a18e-396">Außerdem können die Eigenschaften des Kontextobjekts <see langword="null" /> zurückgeben.</span><span class="sxs-lookup"><span data-stu-id="1a18e-396">Also, properties on the context object can return <see langword="null" />.</span></span></para></block>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetStandardValues">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="1a18e-397">Gibt eine Auflistung von Standardwerten für den Datentyp zurück, für den dieser Typkonverter vorgesehen ist.</span><span class="sxs-lookup"><span data-stu-id="1a18e-397">Returns a collection of standard values for the data type this type converter is designed for.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetStandardValues">
      <MemberSignature Language="C#" Value="public System.Collections.ICollection GetStandardValues ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.ICollection GetStandardValues() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.GetStandardValues" />
      <MemberSignature Language="VB.NET" Value="Public Function GetStandardValues () As ICollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::ICollection ^ GetStandardValues();" />
      <MemberSignature Language="F#" Value="member this.GetStandardValues : unit -&gt; System.Collections.ICollection" Usage="typeConverter.GetStandardValues " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1a18e-398">Gibt eine Auflistung von Standardwerten aus dem Standardkontext für den Datentyp zurück, für den dieser Typkonverter vorgesehen ist.</span><span class="sxs-lookup"><span data-stu-id="1a18e-398">Returns a collection of standard values from the default context for the data type this type converter is designed for.</span></span></summary>
        <returns><span data-ttu-id="1a18e-399">Eine <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" />, die eine Standardmenge zulässiger Werte enthält, oder <see langword="null" />, wenn der Datentyp keine Standardmenge von Werten unterstützt.</span><span class="sxs-lookup"><span data-stu-id="1a18e-399">A <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /> containing a standard set of valid values, or <see langword="null" /> if the data type does not support a standard set of values.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a18e-400">Bei Implementierung in dieser Klasse gibt diese Methode immer `null` zurück.</span><span class="sxs-lookup"><span data-stu-id="1a18e-400">As implemented in this class, this method always returns `null`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetStandardValues">
      <MemberSignature Language="C#" Value="public virtual System.ComponentModel.TypeConverter.StandardValuesCollection GetStandardValues (System.ComponentModel.ITypeDescriptorContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ComponentModel.TypeConverter/StandardValuesCollection GetStandardValues(class System.ComponentModel.ITypeDescriptorContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetStandardValues (context As ITypeDescriptorContext) As TypeConverter.StandardValuesCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::ComponentModel::TypeConverter::StandardValuesCollection ^ GetStandardValues(System::ComponentModel::ITypeDescriptorContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member GetStandardValues : System.ComponentModel.ITypeDescriptorContext -&gt; System.ComponentModel.TypeConverter.StandardValuesCollection&#xA;override this.GetStandardValues : System.ComponentModel.ITypeDescriptorContext -&gt; System.ComponentModel.TypeConverter.StandardValuesCollection" Usage="typeConverter.GetStandardValues context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.TypeConverter+StandardValuesCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="1a18e-401">Eine <see cref="T:System.ComponentModel.ITypeDescriptorContext" />-Schnittstelle, die einen Formatierungskontext bereitstellt, mit dem zusätzliche Informationen über die Umgebung extrahiert werden können, aus der dieser Konverter aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="1a18e-401">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context that can be used to extract additional information about the environment from which this converter is invoked.</span></span> <span data-ttu-id="1a18e-402">Dieser Parameter oder Eigenschaften dieses Parameters können gleich <see langword="null" /> sein.</span><span class="sxs-lookup"><span data-stu-id="1a18e-402">This parameter or properties of this parameter can be <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="1a18e-403">Gibt bei Bereitstellung eines Formatierungskontexts eine Auflistung von Standardwerten für den Datentyp zurück, für den dieser Typkonverter vorgesehen ist.</span><span class="sxs-lookup"><span data-stu-id="1a18e-403">Returns a collection of standard values for the data type this type converter is designed for when provided with a format context.</span></span></summary>
        <returns><span data-ttu-id="1a18e-404">Eine <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" />, die einen Standardsatz gültiger Werte enthält, oder <see langword="null" />, wenn der Datentyp keinen Standardsatz von Werten unterstützt.</span><span class="sxs-lookup"><span data-stu-id="1a18e-404">A <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /> that holds a standard set of valid values, or <see langword="null" /> if the data type does not support a standard set of values.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a18e-405">Gemäß der Implementierung <xref:System.ComponentModel.TypeConverter>in gibt diese Methode immer `null`zurück.</span><span class="sxs-lookup"><span data-stu-id="1a18e-405">As implemented in <xref:System.ComponentModel.TypeConverter>, this method always returns `null`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1a18e-406">Ein Beispiel für diese Funktion finden Sie unter der <xref:System.ComponentModel.TypeConverter> -Klasse.</span><span class="sxs-lookup"><span data-stu-id="1a18e-406">For an example on this function, see the <xref:System.ComponentModel.TypeConverter> class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="1a18e-407">Überschreiben Sie diese Methode, wenn der Typ, den Sie konvertieren möchten, Standardwerte unterstützt.</span><span class="sxs-lookup"><span data-stu-id="1a18e-407">Override this method if the type you want to convert supports standard values.</span></span></para></block>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetStandardValuesExclusive">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="1a18e-408">Gibt zurück, ob die von der <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" />-Methode zurückgegebene Auflistung von Standardwerten eine exklusive Liste darstellt.</span><span class="sxs-lookup"><span data-stu-id="1a18e-408">Returns whether the collection of standard values returned from <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> is an exclusive list.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetStandardValuesExclusive">
      <MemberSignature Language="C#" Value="public bool GetStandardValuesExclusive ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool GetStandardValuesExclusive() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.GetStandardValuesExclusive" />
      <MemberSignature Language="VB.NET" Value="Public Function GetStandardValuesExclusive () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool GetStandardValuesExclusive();" />
      <MemberSignature Language="F#" Value="member this.GetStandardValuesExclusive : unit -&gt; bool" Usage="typeConverter.GetStandardValuesExclusive " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1a18e-409">Gibt zurück, ob die von der <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" />-Methode zurückgegebene Auflistung von Standardwerten eine exklusive Liste darstellt.</span><span class="sxs-lookup"><span data-stu-id="1a18e-409">Returns whether the collection of standard values returned from <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> is an exclusive list.</span></span></summary>
        <returns><span data-ttu-id="1a18e-410"><see langword="true" />, wenn die von <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /> zurückgegebene <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> eine vollständige Liste möglicher Werte darstellt, oder <see langword="false" />, wenn andere Werte möglich sind.</span><span class="sxs-lookup"><span data-stu-id="1a18e-410"><see langword="true" /> if the <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /> returned from <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> is an exhaustive list of possible values; <see langword="false" /> if other values are possible.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a18e-411">Bei Implementierung in dieser Klasse gibt diese Methode immer `false` zurück.</span><span class="sxs-lookup"><span data-stu-id="1a18e-411">As implemented in this class, this method always returns `false`.</span></span>  
  
 <span data-ttu-id="1a18e-412">Wenn es sich um eine exklusive Liste handelt, zum Beispiel bei einem Enumerationsdatentyp, sind keine anderen Werte gültig.</span><span class="sxs-lookup"><span data-stu-id="1a18e-412">If the list is exclusive, such as in an enumeration data type, then no other values are valid.</span></span> <span data-ttu-id="1a18e-413">Wenn die Liste nicht exklusiv ist, können in der von der <xref:System.ComponentModel.TypeConverter.GetStandardValues%2A>-Methode bereitgestellten Liste neben den Standardwerten auch andere Werte gültige Werte vorhanden sein.</span><span class="sxs-lookup"><span data-stu-id="1a18e-413">If the list is not exclusive, then other valid values might exist in addition to the list of standard values that the <xref:System.ComponentModel.TypeConverter.GetStandardValues%2A> method provides.</span></span> <span data-ttu-id="1a18e-414">Wenn die Werte exklusiv sind, ist es nicht möglich, diese Werte in der von der <xref:System.ComponentModel.TypeConverter.GetStandardValues%2A>-Methode zurückgegebenen Liste zu bearbeiten.</span><span class="sxs-lookup"><span data-stu-id="1a18e-414">If the values are exclusive, the list returned by <xref:System.ComponentModel.TypeConverter.GetStandardValues%2A> should not allow these values to be edited.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetStandardValuesExclusive">
      <MemberSignature Language="C#" Value="public virtual bool GetStandardValuesExclusive (System.ComponentModel.ITypeDescriptorContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetStandardValuesExclusive(class System.ComponentModel.ITypeDescriptorContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetStandardValuesExclusive (context As ITypeDescriptorContext) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool GetStandardValuesExclusive(System::ComponentModel::ITypeDescriptorContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member GetStandardValuesExclusive : System.ComponentModel.ITypeDescriptorContext -&gt; bool&#xA;override this.GetStandardValuesExclusive : System.ComponentModel.ITypeDescriptorContext -&gt; bool" Usage="typeConverter.GetStandardValuesExclusive context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="1a18e-415">Ein <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, der einen Formatierungskontext bereitstellt.</span><span class="sxs-lookup"><span data-stu-id="1a18e-415">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span></span></param>
        <summary><span data-ttu-id="1a18e-416">Gibt zurück, ob die Auflistung von Standardwerten, die von der <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" />-Methode unter Verwendung des angegebenen Kontexts zurückgegeben werden, eine exklusive Liste von möglichen Werten darstellt.</span><span class="sxs-lookup"><span data-stu-id="1a18e-416">Returns whether the collection of standard values returned from <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> is an exclusive list of possible values, using the specified context.</span></span></summary>
        <returns><span data-ttu-id="1a18e-417"><see langword="true" />, wenn die von <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /> zurückgegebene <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> eine vollständige Liste möglicher Werte darstellt, oder <see langword="false" />, wenn andere Werte möglich sind.</span><span class="sxs-lookup"><span data-stu-id="1a18e-417"><see langword="true" /> if the <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /> returned from <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> is an exhaustive list of possible values; <see langword="false" /> if other values are possible.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a18e-418">Bei Implementierung in dieser Klasse gibt diese Methode immer `false` zurück.</span><span class="sxs-lookup"><span data-stu-id="1a18e-418">As implemented in this class, this method always returns `false`.</span></span>  
  
 <span data-ttu-id="1a18e-419">Wenn es sich um eine exklusive Liste handelt, zum Beispiel bei einem Enumerationsdatentyp, sind keine anderen Werte gültig.</span><span class="sxs-lookup"><span data-stu-id="1a18e-419">If the list is exclusive, such as in an enumeration data type, then no other values are valid.</span></span> <span data-ttu-id="1a18e-420">Wenn die Liste nicht exklusiv ist, können in der von der <xref:System.ComponentModel.TypeConverter.GetStandardValues%2A>-Methode bereitgestellten Liste neben den Standardwerten auch andere Werte gültige Werte vorhanden sein.</span><span class="sxs-lookup"><span data-stu-id="1a18e-420">If the list is not exclusive, then other valid values might exist in addition to the list of standard values that the <xref:System.ComponentModel.TypeConverter.GetStandardValues%2A> method provides.</span></span> <span data-ttu-id="1a18e-421">Wenn die Werte exklusiv sind, ist es nicht möglich, diese Werte in der von der <xref:System.ComponentModel.TypeConverter.GetStandardValues%2A>-Methode zurückgegebenen Liste zu bearbeiten.</span><span class="sxs-lookup"><span data-stu-id="1a18e-421">If the values are exclusive, the list returned by <xref:System.ComponentModel.TypeConverter.GetStandardValues%2A> should not allow these values to be edited.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="1a18e-422">Überschreiben Sie diese Methode, wenn der Typ, den Sie konvertieren möchten, Standardwerte unterstützt.</span><span class="sxs-lookup"><span data-stu-id="1a18e-422">Override this method if the type you want to convert supports standard values.</span></span>  
  
<span data-ttu-id="1a18e-423">Über den <paramref name="context" />-Parameter können zusätzliche Informationen über die Umgebung extrahiert werden, aus der dieser Konverter aufgerufen wurde.</span><span class="sxs-lookup"><span data-stu-id="1a18e-423">Use the <paramref name="context" /> parameter to extract additional information about the environment from which this converter is invoked.</span></span> <span data-ttu-id="1a18e-424">Dieser Parameter kann sein <see langword="null" />, daher sollten Sie ihn immer überprüfen.</span><span class="sxs-lookup"><span data-stu-id="1a18e-424">This parameter can be <see langword="null" />, so always check it.</span></span> <span data-ttu-id="1a18e-425">Außerdem können die Eigenschaften des Kontextobjekts <see langword="null" /> zurückgeben.</span><span class="sxs-lookup"><span data-stu-id="1a18e-425">Also, properties on the context object can return <see langword="null" />.</span></span></para></block>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetStandardValuesSupported">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="1a18e-426">Gibt zurück, ob dieses Objekt eine Standardmenge von Werten unterstützt, die aus einer Liste ausgewählt werden können.</span><span class="sxs-lookup"><span data-stu-id="1a18e-426">Returns whether this object supports a standard set of values that can be picked from a list.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetStandardValuesSupported">
      <MemberSignature Language="C#" Value="public bool GetStandardValuesSupported ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool GetStandardValuesSupported() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.GetStandardValuesSupported" />
      <MemberSignature Language="VB.NET" Value="Public Function GetStandardValuesSupported () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool GetStandardValuesSupported();" />
      <MemberSignature Language="F#" Value="member this.GetStandardValuesSupported : unit -&gt; bool" Usage="typeConverter.GetStandardValuesSupported " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1a18e-427">Gibt zurück, ob dieses Objekt eine Standardmenge von Werten unterstützt, die aus einer Liste ausgewählt werden können.</span><span class="sxs-lookup"><span data-stu-id="1a18e-427">Returns whether this object supports a standard set of values that can be picked from a list.</span></span></summary>
        <returns><span data-ttu-id="1a18e-428"><see langword="true" />, wenn die <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" />-Methode aufgerufen werden muss, um eine vom Objekt unterstützte Standardmenge von Werten zu ermitteln, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="1a18e-428"><see langword="true" /> if <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> should be called to find a common set of values the object supports; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetStandardValuesSupported">
      <MemberSignature Language="C#" Value="public virtual bool GetStandardValuesSupported (System.ComponentModel.ITypeDescriptorContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetStandardValuesSupported(class System.ComponentModel.ITypeDescriptorContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetStandardValuesSupported (context As ITypeDescriptorContext) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool GetStandardValuesSupported(System::ComponentModel::ITypeDescriptorContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member GetStandardValuesSupported : System.ComponentModel.ITypeDescriptorContext -&gt; bool&#xA;override this.GetStandardValuesSupported : System.ComponentModel.ITypeDescriptorContext -&gt; bool" Usage="typeConverter.GetStandardValuesSupported context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="1a18e-429">Ein <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, der einen Formatierungskontext bereitstellt.</span><span class="sxs-lookup"><span data-stu-id="1a18e-429">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span></span></param>
        <summary><span data-ttu-id="1a18e-430">Gibt zurück, ob dieses Objekt eine Standardmenge von Werten unterstützt, die unter Verwendung des angegebenen Kontexts aus einer Liste ausgewählt werden können.</span><span class="sxs-lookup"><span data-stu-id="1a18e-430">Returns whether this object supports a standard set of values that can be picked from a list, using the specified context.</span></span></summary>
        <returns><span data-ttu-id="1a18e-431"><see langword="true" />, wenn die <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" />-Methode aufgerufen werden muss, um eine vom Objekt unterstützte Standardmenge von Werten zu ermitteln, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="1a18e-431"><see langword="true" /> if <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> should be called to find a common set of values the object supports; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a18e-432">Bei Implementierung in dieser Klasse gibt diese Methode immer `false` zurück.</span><span class="sxs-lookup"><span data-stu-id="1a18e-432">As implemented in this class, this method always returns `false`.</span></span>  
  
 <span data-ttu-id="1a18e-433">Über den `context`-Parameter können zusätzliche Informationen über die Umgebung extrahiert werden, aus der dieser Konverter aufgerufen wurde.</span><span class="sxs-lookup"><span data-stu-id="1a18e-433">Use the `context` parameter to extract additional information about the environment from which this converter is invoked.</span></span> <span data-ttu-id="1a18e-434">Dieser Parameter kann sein `null`, daher sollten Sie ihn immer überprüfen.</span><span class="sxs-lookup"><span data-stu-id="1a18e-434">This parameter can be `null`, so always check it.</span></span> <span data-ttu-id="1a18e-435">Außerdem können die Eigenschaften des Kontextobjekts `null` zurückgeben.</span><span class="sxs-lookup"><span data-stu-id="1a18e-435">Also, properties on the context object can return `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="1a18e-436">Überschreiben Sie diese Methode, wenn der Typ, den Sie konvertieren möchten, Standardwerte unterstützt.</span><span class="sxs-lookup"><span data-stu-id="1a18e-436">Override this method if the type you want to convert supports standard values.</span></span></para></block>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IsValid">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="1a18e-437">Ruft ab, ob das angegebene Werteobjekt für diesen Typ gültig ist.</span><span class="sxs-lookup"><span data-stu-id="1a18e-437">Returns whether the given value object is valid for this type.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsValid">
      <MemberSignature Language="C#" Value="public bool IsValid (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsValid(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.IsValid(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsValid (value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsValid(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="member this.IsValid : obj -&gt; bool" Usage="typeConverter.IsValid value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="1a18e-438">Das auf Gültigkeit zu prüfende Objekt.</span><span class="sxs-lookup"><span data-stu-id="1a18e-438">The object to test for validity.</span></span></param>
        <summary><span data-ttu-id="1a18e-439">Ruft ab, ob das angegebene Werteobjekt für diesen Typ gültig ist.</span><span class="sxs-lookup"><span data-stu-id="1a18e-439">Returns whether the given value object is valid for this type.</span></span></summary>
        <returns><span data-ttu-id="1a18e-440"><see langword="true" />, wenn der angegebene Wert für dieses Objekt gültig ist, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="1a18e-440"><see langword="true" /> if the specified value is valid for this object; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a18e-441">Ab fängt die <xref:System.ComponentModel.TypeConverter.IsValid%2A> -Methode Ausnahmen von der <xref:System.ComponentModel.TypeConverter.CanConvertFrom%2A> -Methode <xref:System.ComponentModel.TypeConverter.ConvertFrom%2A> und der-Methode ab. [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]</span><span class="sxs-lookup"><span data-stu-id="1a18e-441">Starting in [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], the <xref:System.ComponentModel.TypeConverter.IsValid%2A> method catches exceptions from the <xref:System.ComponentModel.TypeConverter.CanConvertFrom%2A> and <xref:System.ComponentModel.TypeConverter.ConvertFrom%2A> methods.</span></span> <span data-ttu-id="1a18e-442">Wenn der Eingabe Werttyp <xref:System.ComponentModel.TypeConverter.CanConvertFrom%2A> bewirkt, `false`dass zurückgegeben wird, oder wenn <xref:System.ComponentModel.TypeConverter.ConvertFrom%2A> der Eingabe Wert bewirkt, dass eine Ausnahme `false`auslöst, gibt die <xref:System.ComponentModel.TypeConverter.IsValid%2A> Methode zurück.</span><span class="sxs-lookup"><span data-stu-id="1a18e-442">If the input value type causes <xref:System.ComponentModel.TypeConverter.CanConvertFrom%2A> to return `false`, or if the input value causes <xref:System.ComponentModel.TypeConverter.ConvertFrom%2A> to raise an exception, the <xref:System.ComponentModel.TypeConverter.IsValid%2A> method returns `false`.</span></span>  
  
 <span data-ttu-id="1a18e-443">Um das Legacy Verhalten zu aktivieren, fügen Sie die folgenden Zeilen in die Konfigurationsdatei der Anwendung ein, z. b. Anwendung1. exe. config.</span><span class="sxs-lookup"><span data-stu-id="1a18e-443">To enable the legacy behavior, insert the following lines into the configuration file of the application, for example, application1.exe.config.</span></span>  
  
```xml  
<configuration>  
  <appSettings>  
    <add key="UseCompatibleTypeConverterBehavior" value="true" />  
  </appSettings>  
</configuration>  
```  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="1a18e-444">Überschreiben Sie diese Methode, wenn der Typ, den Sie konvertieren möchten, Standardwerte unterstützt, die überprüft werden können.</span><span class="sxs-lookup"><span data-stu-id="1a18e-444">Override this method if the type you want to convert supports standard values that can be validated.</span></span>  
  
<span data-ttu-id="1a18e-445">Die <see cref="M:System.ComponentModel.TypeConverter.IsValid(System.Object)" /> -Methode wird verwendet, um einen Wert innerhalb des Typs zu validieren, <paramref name="value" /> anstatt zu ermitteln, ob in den angegebenen Typ konvertiert werden kann.</span><span class="sxs-lookup"><span data-stu-id="1a18e-445">The <see cref="M:System.ComponentModel.TypeConverter.IsValid(System.Object)" /> method is used to validate a value within the type rather than to determine if <paramref name="value" /> can be converted to the given type.</span></span> <span data-ttu-id="1a18e-446">Beispielsweise kann <see cref="M:System.ComponentModel.TypeConverter.IsValid(System.Object)" /> verwendet werden, um zu bestimmen, ob ein bestimmter Wert für einen Enumerationstyp gültig ist.</span><span class="sxs-lookup"><span data-stu-id="1a18e-446">For example, <see cref="M:System.ComponentModel.TypeConverter.IsValid(System.Object)" /> can be used to determine if a given value is valid for an enumeration type.</span></span> <span data-ttu-id="1a18e-447">Ein Beispiel finden Sie unter <see cref="T:System.ComponentModel.EnumConverter" />.</span><span class="sxs-lookup"><span data-stu-id="1a18e-447">For an example, see <see cref="T:System.ComponentModel.EnumConverter" />.</span></span>  
  
<span data-ttu-id="1a18e-448">Sie können Ihre eigene Methode " <c>willconverterfolg</c> " schreiben, <see cref="Overload:System.ComponentModel.TypeConverter.ConvertTo" /> indem <see cref="Overload:System.ComponentModel.TypeConverter.ConvertFrom" /> Sie die Methoden und in Ausnahme Blöcken umschlossen.</span><span class="sxs-lookup"><span data-stu-id="1a18e-448">You can write your own <c>WillConvertSucceed</c> method by wrapping the <see cref="Overload:System.ComponentModel.TypeConverter.ConvertTo" /> and <see cref="Overload:System.ComponentModel.TypeConverter.ConvertFrom" /> methods in exception blocks.</span></span></para></block>
        <altmember cref="T:System.ComponentModel.EnumConverter" />
      </Docs>
    </Member>
    <Member MemberName="IsValid">
      <MemberSignature Language="C#" Value="public virtual bool IsValid (System.ComponentModel.ITypeDescriptorContext context, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsValid(class System.ComponentModel.ITypeDescriptorContext context, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsValid (context As ITypeDescriptorContext, value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsValid(System::ComponentModel::ITypeDescriptorContext ^ context, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member IsValid : System.ComponentModel.ITypeDescriptorContext * obj -&gt; bool&#xA;override this.IsValid : System.ComponentModel.ITypeDescriptorContext * obj -&gt; bool" Usage="typeConverter.IsValid (context, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="1a18e-449">Ein <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, der einen Formatierungskontext bereitstellt.</span><span class="sxs-lookup"><span data-stu-id="1a18e-449">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span></span></param>
        <param name="value"><span data-ttu-id="1a18e-450">Die auf Gültigkeit zu überprüfende <see cref="T:System.Object" />-Klasse.</span><span class="sxs-lookup"><span data-stu-id="1a18e-450">The <see cref="T:System.Object" /> to test for validity.</span></span></param>
        <summary><span data-ttu-id="1a18e-451">Ruft ab, ob das angegebene Werteobjekt für diesen Typ und den angegebenen Kontext gültig ist.</span><span class="sxs-lookup"><span data-stu-id="1a18e-451">Returns whether the given value object is valid for this type and for the specified context.</span></span></summary>
        <returns><span data-ttu-id="1a18e-452"><see langword="true" />, wenn der angegebene Wert für dieses Objekt gültig ist, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="1a18e-452"><see langword="true" /> if the specified value is valid for this object; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a18e-453">Über den `context`-Parameter können zusätzliche Informationen über die Umgebung extrahiert werden, aus der dieser Konverter aufgerufen wurde.</span><span class="sxs-lookup"><span data-stu-id="1a18e-453">Use the `context` parameter to extract additional information about the environment from which this converter is invoked.</span></span> <span data-ttu-id="1a18e-454">Dieser Parameter kann sein `null`, daher sollten Sie ihn immer überprüfen.</span><span class="sxs-lookup"><span data-stu-id="1a18e-454">This parameter can be `null`, so always check it.</span></span> <span data-ttu-id="1a18e-455">Außerdem können die Eigenschaften des Kontextobjekts `null` zurückgeben.</span><span class="sxs-lookup"><span data-stu-id="1a18e-455">Also, properties on the context object can return `null`.</span></span>  
  
 <span data-ttu-id="1a18e-456">Ab fängt die <xref:System.ComponentModel.TypeConverter.IsValid%2A> -Methode Ausnahmen von der <xref:System.ComponentModel.TypeConverter.CanConvertFrom%2A> -Methode <xref:System.ComponentModel.TypeConverter.ConvertFrom%2A> und der-Methode ab. [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]</span><span class="sxs-lookup"><span data-stu-id="1a18e-456">Starting in [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], the <xref:System.ComponentModel.TypeConverter.IsValid%2A> method catches exceptions from the <xref:System.ComponentModel.TypeConverter.CanConvertFrom%2A> and <xref:System.ComponentModel.TypeConverter.ConvertFrom%2A> methods.</span></span> <span data-ttu-id="1a18e-457">Wenn der Eingabe Werttyp <xref:System.ComponentModel.TypeConverter.CanConvertFrom%2A> bewirkt, `false`dass zurückgegeben wird, oder wenn <xref:System.ComponentModel.TypeConverter.ConvertFrom%2A> der Eingabe Wert bewirkt, dass eine Ausnahme `false`auslöst, gibt die <xref:System.ComponentModel.TypeConverter.IsValid%2A> Methode zurück.</span><span class="sxs-lookup"><span data-stu-id="1a18e-457">If the input value type causes <xref:System.ComponentModel.TypeConverter.CanConvertFrom%2A> to return `false`, or if the input value causes <xref:System.ComponentModel.TypeConverter.ConvertFrom%2A> to raise an exception, the <xref:System.ComponentModel.TypeConverter.IsValid%2A> method returns `false`.</span></span>  
  
 <span data-ttu-id="1a18e-458">Um das Legacy Verhalten zu aktivieren, fügen Sie die folgenden Zeilen in die Konfigurationsdatei der Anwendung ein, z. b. Anwendung1. exe. config.</span><span class="sxs-lookup"><span data-stu-id="1a18e-458">To enable the legacy behavior, insert the following lines into the configuration file of the application, for example, application1.exe.config.</span></span>  
  
```xml  
<configuration>  
  <appSettings>  
    <add key="UseCompatibleTypeConverterBehavior" value="true" />  
  </appSettings>  
</configuration>  
```  
  
   
  
## Examples  
 <span data-ttu-id="1a18e-459">Ein Beispiel für diese Funktion finden Sie unter der <xref:System.ComponentModel.TypeConverter> -Klasse.</span><span class="sxs-lookup"><span data-stu-id="1a18e-459">For an example of this function, see the <xref:System.ComponentModel.TypeConverter> class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="1a18e-460">Überschreiben Sie diese Methode, wenn der Typ, den Sie konvertieren möchten, Standardwerte unterstützt, die überprüft werden können.</span><span class="sxs-lookup"><span data-stu-id="1a18e-460">Override this method if the type you want to convert supports standard values that can be validated.</span></span>  
  
<span data-ttu-id="1a18e-461">Die <see cref="M:System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)" /> -Methode wird verwendet, um einen Wert innerhalb des Typs zu validieren, <paramref name="value" /> anstatt zu ermitteln, ob in den angegebenen Typ konvertiert werden kann.</span><span class="sxs-lookup"><span data-stu-id="1a18e-461">The <see cref="M:System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)" /> method is used to validate a value within the type rather than to determine if <paramref name="value" /> can be converted to the given type.</span></span> <span data-ttu-id="1a18e-462">Beispielsweise kann <see cref="M:System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)" /> verwendet werden, um zu bestimmen, ob ein bestimmter Wert für einen Enumerationstyp gültig ist.</span><span class="sxs-lookup"><span data-stu-id="1a18e-462">For example, <see cref="M:System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)" /> can be used to determine if a given value is valid for an enumeration type.</span></span> <span data-ttu-id="1a18e-463">Ein Beispiel finden Sie unter <see cref="T:System.ComponentModel.EnumConverter" />.</span><span class="sxs-lookup"><span data-stu-id="1a18e-463">For an example, see <see cref="T:System.ComponentModel.EnumConverter" />.</span></span></para></block>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
        <altmember cref="T:System.ComponentModel.EnumConverter" />
      </Docs>
    </Member>
    <Member MemberName="SortProperties">
      <MemberSignature Language="C#" Value="protected System.ComponentModel.PropertyDescriptorCollection SortProperties (System.ComponentModel.PropertyDescriptorCollection props, string[] names);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.ComponentModel.PropertyDescriptorCollection SortProperties(class System.ComponentModel.PropertyDescriptorCollection props, string[] names) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.SortProperties(System.ComponentModel.PropertyDescriptorCollection,System.String[])" />
      <MemberSignature Language="VB.NET" Value="Protected Function SortProperties (props As PropertyDescriptorCollection, names As String()) As PropertyDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::ComponentModel::PropertyDescriptorCollection ^ SortProperties(System::ComponentModel::PropertyDescriptorCollection ^ props, cli::array &lt;System::String ^&gt; ^ names);" />
      <MemberSignature Language="F#" Value="member this.SortProperties : System.ComponentModel.PropertyDescriptorCollection * string[] -&gt; System.ComponentModel.PropertyDescriptorCollection" Usage="typeConverter.SortProperties (props, names)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="props" Type="System.ComponentModel.PropertyDescriptorCollection" />
        <Parameter Name="names" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="props"><span data-ttu-id="1a18e-464">Eine <see cref="T:System.ComponentModel.PropertyDescriptorCollection" />-Klasse mit den zu sortierenden Eigenschaften.</span><span class="sxs-lookup"><span data-stu-id="1a18e-464">A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> that has the properties to sort.</span></span></param>
        <param name="names"><span data-ttu-id="1a18e-465">Ein Array von Namen in der Reihenfolge, in der die Eigenschaften in der Auflistung angezeigt werden sollen.</span><span class="sxs-lookup"><span data-stu-id="1a18e-465">An array of names in the order you want the properties to appear in the collection.</span></span></param>
        <summary><span data-ttu-id="1a18e-466">Sortiert eine Auflistung von Eigenschaften.</span><span class="sxs-lookup"><span data-stu-id="1a18e-466">Sorts a collection of properties.</span></span></summary>
        <returns><span data-ttu-id="1a18e-467">Eine <see cref="T:System.ComponentModel.PropertyDescriptorCollection" />-Klasse mit den sortierten Eigenschaften.</span><span class="sxs-lookup"><span data-stu-id="1a18e-467">A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> that contains the sorted properties.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a18e-468">Alle Eigenschaften in der Auflistung, die nicht bereits im Namen Array vorhanden sind, werden am Ende alphabetisch hinzugefügt.</span><span class="sxs-lookup"><span data-stu-id="1a18e-468">All properties in the collection that are not already in the array of names are added alphabetically to the end.</span></span> <span data-ttu-id="1a18e-469">Wenn es `names` sich bei dem Parameter um ein `null`leeres Array oder handelt, werden alle Eigenschaften in der Auflistung alphabetisch sortiert.</span><span class="sxs-lookup"><span data-stu-id="1a18e-469">If the `names` parameter is an empty array or `null`, all the properties in the collection are sorted alphabetically.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.PropertyDescriptorCollection" />
        <altmember cref="T:System.ComponentModel.TypeConverter" />
      </Docs>
    </Member>
  </Members>
</Type>
