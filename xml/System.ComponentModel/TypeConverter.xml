<Type Name="TypeConverter" FullName="System.ComponentModel.TypeConverter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="809b51f24bfbdc7fbecb465b25929a15b9e606e2" />
    <Meta Name="ms.sourcegitcommit" Value="d877ae76e9e11799bf919379507239e2c4072742" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="08/09/2018" />
    <Meta Name="ms.locfileid" Value="39817342" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class TypeConverter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TypeConverter extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.TypeConverter" />
  <TypeSignature Language="VB.NET" Value="Public Class TypeConverter" />
  <TypeSignature Language="C++ CLI" Value="public ref class TypeConverter" />
  <TypeSignature Language="F#" Value="type TypeConverter = class" />
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="c32aa-101">Stellt eine einheitliche Methode zum Konvertieren von Werttypen in andere Typen sowie zum Zugreifen auf Standardwerte und Untereigenschaften bereit.</span>
      <span class="sxs-lookup">
        <span data-stu-id="c32aa-101">Provides a unified way of converting types of values to other types, as well as for accessing standard values and subproperties.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c32aa-102">Die am häufigsten verwendete Typ des Konverters ist eine, die dem und in eine Textdarstellung konvertiert.</span><span class="sxs-lookup"><span data-stu-id="c32aa-102">The most common type of converter is one that converts to and from a text representation.</span></span> <span data-ttu-id="c32aa-103">Der Typkonverter für eine Klasse gebunden ist, auf die Klasse mit einem <xref:System.ComponentModel.TypeConverterAttribute>.</span><span class="sxs-lookup"><span data-stu-id="c32aa-103">The type converter for a class is bound to the class with a <xref:System.ComponentModel.TypeConverterAttribute>.</span></span> <span data-ttu-id="c32aa-104">Wenn dieses Attribut überschrieben wird, verwenden alle Klassen, die von dieser Klasse erben den gleichen Typkonverter als Basisklasse an.</span><span class="sxs-lookup"><span data-stu-id="c32aa-104">Unless this attribute is overridden, all classes that inherit from this class use the same type converter as the base class.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c32aa-105">Greifen Sie für Systemzwecke "Allgemein" keinen Typkonverter direkt.</span><span class="sxs-lookup"><span data-stu-id="c32aa-105">For general type system purposes, do not access a type converter directly.</span></span> <span data-ttu-id="c32aa-106">Stattdessen greifen Sie auf der entsprechenden Konverter mithilfe <xref:System.ComponentModel.TypeDescriptor>.</span><span class="sxs-lookup"><span data-stu-id="c32aa-106">Instead, access the appropriate converter by using <xref:System.ComponentModel.TypeDescriptor>.</span></span> <span data-ttu-id="c32aa-107">Weitere Informationen finden Sie unter den bereitgestellten Codebeispielen.</span><span class="sxs-lookup"><span data-stu-id="c32aa-107">For more information, see the code examples provided.</span></span>  
  
 <span data-ttu-id="c32aa-108">**Beachten Sie** für XAML-Zwecke ist ein XAML-Prozessor, sucht Sie nach der <xref:System.ComponentModel.TypeConverterAttribute> direkt, anstatt über <xref:System.ComponentModel.TypeDescriptor>.</span><span class="sxs-lookup"><span data-stu-id="c32aa-108">**Note** For XAML purposes, a XAML processor searches for the <xref:System.ComponentModel.TypeConverterAttribute> directly, instead of going through <xref:System.ComponentModel.TypeDescriptor>.</span></span> <span data-ttu-id="c32aa-109">Für Fälle, in denen Sie möchten, eine <xref:System.ComponentModel.TypeDescriptor> -Instanz vom Code oder eine freigegebene Instanz erstellen Sie in WPF-Ressourcen, es akzeptabel ist, erstellen Sie es direkt ohne Verweis auf <xref:System.ComponentModel.TypeDescriptor> oder andere Reflektion und das Typsystem unterstützt.</span><span class="sxs-lookup"><span data-stu-id="c32aa-109">For cases where you do want a <xref:System.ComponentModel.TypeDescriptor> instance from code, or where you create a shared instance in WPF resources, it is acceptable to construct it directly without referencing <xref:System.ComponentModel.TypeDescriptor> or other reflection and type system support.</span></span>  
  
 <span data-ttu-id="c32aa-110">Von abgeleiteten Klassen <xref:System.ComponentModel.TypeConverter> sind häufig auf die verwiesen wird als Teil der wie ein XAML-Prozessor einen Textwert Attribut- oder Initialisierung von Markup konvertiert (die grundsätzlich eine Zeichenfolge) und ein Objekt für eine Darstellung zur Laufzeit generiert.</span><span class="sxs-lookup"><span data-stu-id="c32aa-110">Classes derived from <xref:System.ComponentModel.TypeConverter> are often referenced as part of how a XAML processor converts an attribute or initialization text value from markup (which is inherently a string) and generates an object for a run-time representation.</span></span> <span data-ttu-id="c32aa-111">Autoren von benutzerdefinierten Typen, die in der Regel ein typkonvertierungsverhaltens für XAML unterstützen möchten implementieren eine <xref:System.ComponentModel.TypeConverter> Klasse, die ihren eigenen eindeutigen unterstützt `ConvertFrom` Verhalten aus einer Zeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="c32aa-111">Custom type authors that intend to support a type conversion behavior for XAML typically implement a <xref:System.ComponentModel.TypeConverter> class that supports their own unique `ConvertFrom` behavior from a string.</span></span> <span data-ttu-id="c32aa-112">Dieses Verhalten ermöglicht die typkonvertierung aus der Zeichenfolge, die als ein XAML-Attributwert bereitgestellt und bietet einen XAML-Prozessor mit Unterstützung zum Erstellen eines Objekts aus der Zeichenfolge benötigt werden, sodass das Objekt in einem Diagramm analysierten Objekts erzeugt werden kann.</span><span class="sxs-lookup"><span data-stu-id="c32aa-112">This behavior enables type conversion from the string provided as a XAML attribute value and provides a XAML processor with the support needed to create an object from the string, so that the object can be produced in a parsed object graph.</span></span> <span data-ttu-id="c32aa-113">Benutzerdefinierte Typen oder Member von benutzerdefinierten Typen werden durch Anwenden von angegeben <xref:System.ComponentModel.TypeConverterAttribute> verweisen auf die Definitionen, mit dem Attribut auf die benutzerdefinierte <xref:System.ComponentModel.TypeConverter> Implementierung.</span><span class="sxs-lookup"><span data-stu-id="c32aa-113">Custom types or members of custom types are indicated by applying <xref:System.ComponentModel.TypeConverterAttribute> to the definitions, with the attribute referencing the custom <xref:System.ComponentModel.TypeConverter> implementation.</span></span> <span data-ttu-id="c32aa-114">Weitere Informationen finden Sie unter [Type Converters for XAML Overview](~/docs/framework/xaml-services/type-converters-for-xaml-overview.md).</span><span class="sxs-lookup"><span data-stu-id="c32aa-114">For more information, see [Type Converters for XAML Overview](~/docs/framework/xaml-services/type-converters-for-xaml-overview.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c32aa-115">Im folgenden Codebeispiel wird veranschaulicht, wie erstellen Sie eine Instanz eines Typkonverters und auf eine Klasse gebunden wird.</span><span class="sxs-lookup"><span data-stu-id="c32aa-115">The following code example shows how to create an instance of a type converter and bind it to a class.</span></span> <span data-ttu-id="c32aa-116">Die Klasse, die den Konverter `MyClassConverter`, erben muss die <xref:System.ComponentModel.TypeConverter> Klasse.</span><span class="sxs-lookup"><span data-stu-id="c32aa-116">The class implementing the converter, `MyClassConverter`, must inherit from the <xref:System.ComponentModel.TypeConverter> class.</span></span>  
  
 [!code-cpp[Classic TypeConverter Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TypeConverter Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TypeConverter Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TypeConverter Example/CS/source.cs#1)]
 [!code-vb[Classic TypeConverter Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TypeConverter Example/VB/source.vb#1)]  
  
 <span data-ttu-id="c32aa-117">Wenn Sie eine Eigenschaft, die eine Enumeration ist verfügen, überprüfen Sie, ob ein Enumerationswert gültig ist, bevor Sie die Eigenschaft festlegen.</span><span class="sxs-lookup"><span data-stu-id="c32aa-117">When you have a property that has an enumeration, check to see whether an enumeration value is valid before setting the property.</span></span> <span data-ttu-id="c32aa-118">Im nächste Codebeispiel erfordert, dass eine Enumeration namens `MyPropertyEnum` deklariert wurde.</span><span class="sxs-lookup"><span data-stu-id="c32aa-118">The next code example requires that an enumeration called `MyPropertyEnum` has been declared.</span></span>  
  
 [!code-cpp[Classic TypeConverter Example#2](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TypeConverter Example/CPP/source.cpp#2)]
 [!code-csharp[Classic TypeConverter Example#2](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TypeConverter Example/CS/source.cs#2)]
 [!code-vb[Classic TypeConverter Example#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TypeConverter Example/VB/source.vb#2)]  
  
 <span data-ttu-id="c32aa-119">Eine weitere häufige Verwendung für die Typ-Konverter ist ein Objekt in eine Zeichenfolge zu konvertieren.</span><span class="sxs-lookup"><span data-stu-id="c32aa-119">Another common type converter usage is to convert an object to a string.</span></span> <span data-ttu-id="c32aa-120">Im folgenden Codebeispiel gibt den Namen der <xref:System.Drawing.Color> in der Variablen gespeicherten `c`.</span><span class="sxs-lookup"><span data-stu-id="c32aa-120">The following code example prints out the name of the <xref:System.Drawing.Color> stored in the variable `c`.</span></span>  
  
 [!code-cpp[Classic TypeConverter Example#3](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TypeConverter Example/CPP/source.cpp#3)]
 [!code-csharp[Classic TypeConverter Example#3](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TypeConverter Example/CS/source.cs#3)]
 [!code-vb[Classic TypeConverter Example#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TypeConverter Example/VB/source.vb#3)]  
  
 <span data-ttu-id="c32aa-121">Sie können auch einen Typkonverter verwenden zum Konvertieren eines Werts aus seinem Namen, wie im nächsten Codebeispiel gezeigt.</span><span class="sxs-lookup"><span data-stu-id="c32aa-121">You can also use a type converter to convert a value from its name, as shown in the next code example.</span></span>  
  
 [!code-cpp[Classic TypeConverter Example#4](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TypeConverter Example/CPP/source.cpp#4)]
 [!code-csharp[Classic TypeConverter Example#4](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TypeConverter Example/CS/source.cs#4)]
 [!code-vb[Classic TypeConverter Example#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TypeConverter Example/VB/source.vb#4)]  
  
 <span data-ttu-id="c32aa-122">Das folgende Codebeispiel zeigt können Sie einen Typkonverter zum Drucken von des Satz von Standardwerten, die das Objekt unterstützt.</span><span class="sxs-lookup"><span data-stu-id="c32aa-122">In the following code example, you can use a type converter to print out the set of standard values that the object supports.</span></span>  
  
 [!code-cpp[Classic TypeConverter Example#5](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TypeConverter Example/CPP/source.cpp#5)]
 [!code-csharp[Classic TypeConverter Example#5](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TypeConverter Example/CS/source.cs#5)]
 [!code-vb[Classic TypeConverter Example#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TypeConverter Example/VB/source.vb#5)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <span data-ttu-id="c32aa-123">
        <para>Erben von <see cref="T:System.ComponentModel.TypeConverter" /> um eigene konvertierungsanforderungen zu implementieren. Wenn Sie von dieser Klasse erben, können Sie die folgenden Methoden überschreiben:: Informationen zum außer Kraft, benutzerdefinierte typkonvertierung unterstützen die <see cref="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)" />, <see cref="M:System.ComponentModel.TypeConverter.CanConvertTo(System.Type)" />, <see cref="M:System.ComponentModel.TypeConverter.ConvertFrom(System.Object)" />, und <see cref="M:System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)" /> Methoden.  – Zum Konvertieren von Typen, die das Objekt, dessen Wert zu ändern, neu erstellen müssen, überschreiben die <see cref="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" /> und <see cref="M:System.ComponentModel.TypeConverter.GetCreateInstanceSupported" /> Methoden.  – Zum Konvertieren von Typen, die die Eigenschaften zu unterstützen, überschreiben die <see cref="M:System.ComponentModel.TypeConverter.GetProperties(System.Object)" /> und <see cref="M:System.ComponentModel.TypeConverter.GetPropertiesSupported" /> Methoden. Wenn die Klasse, die Sie konvertieren keine Eigenschaften, und Eigenschaften implementiert werden müssen, können Sie die <see cref="T:System.ComponentModel.TypeConverter.SimplePropertyDescriptor" /> Klasse als Basis für das Implementieren der Eigenschaftenbezeichner. Beim Erben von <see cref="T:System.ComponentModel.TypeConverter.SimplePropertyDescriptor" />, müssen Sie überschreiben die <see cref="M:System.ComponentModel.PropertyDescriptor.GetValue(System.Object)" /> und <see cref="M:System.ComponentModel.PropertyDescriptor.SetValue(System.Object,System.Object)" /> Methoden.  – Zum Konvertieren von Typen, die Standardwerte zu unterstützen, überschreiben die <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" />, <see cref="M:System.ComponentModel.TypeConverter.GetStandardValuesExclusive" />, <see cref="M:System.ComponentModel.TypeConverter.GetStandardValuesSupported" /> und <see cref="M:System.ComponentModel.TypeConverter.IsValid(System.Object)" /> Methoden.  <block subset="none" type="note"><para> Der abgeleitete Typ gekennzeichnet werden kann, als <see langword="internal" /> oder <see langword="private" />, jedoch eine Instanz des Typs erstellt werden kann, mit der <see cref="T:System.ComponentModel.TypeDescriptor" /> Klasse. Führen Sie nicht geschrieben Sie werden, dass die unsicheren Code durch Annahme des Aufrufers als vertrauenswürdig eingestuft wird. Nehmen Sie stattdessen an, dass Aufrufer Instanzen des Typs bei teilweiser Vertrauenswürdigkeit erstellen können.  </para></block>  Weitere Informationen zu den Typkonverter für Zwecke der allgemeinen (nicht-XAML), finden Sie unter [Vorgehensweise: Implementieren eines Typkonverters](http://msdn.microsoft.com/library/90373a3f-d8c8-492d-841c-945d62393c56) oder [verallgemeinerte Typkonvertierung](http://msdn.microsoft.com/library/49253ae6-7657-4810-82ab-1176a6feeada).</para>
      </span>
      <span class="sxs-lookup">
        <span data-stu-id="c32aa-123">
          <para>Inherit from <see cref="T:System.ComponentModel.TypeConverter" /> to implement your own conversion requirements. When you inherit from this class, you can override the following methods:  -   To support custom type conversion, override the <see cref="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)" />, <see cref="M:System.ComponentModel.TypeConverter.CanConvertTo(System.Type)" />, <see cref="M:System.ComponentModel.TypeConverter.ConvertFrom(System.Object)" />, and <see cref="M:System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)" /> methods.  -   To convert types that must re-create the object to change its value, override the <see cref="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" /> and <see cref="M:System.ComponentModel.TypeConverter.GetCreateInstanceSupported" /> methods.  -   To convert types that support properties, override the <see cref="M:System.ComponentModel.TypeConverter.GetProperties(System.Object)" /> and <see cref="M:System.ComponentModel.TypeConverter.GetPropertiesSupported" /> methods. If the class you are converting does not have properties, and you need to implement properties, you can use the <see cref="T:System.ComponentModel.TypeConverter.SimplePropertyDescriptor" /> class as a base for implementing the property descriptors. When you inherit from <see cref="T:System.ComponentModel.TypeConverter.SimplePropertyDescriptor" />, you must override the <see cref="M:System.ComponentModel.PropertyDescriptor.GetValue(System.Object)" /> and <see cref="M:System.ComponentModel.PropertyDescriptor.SetValue(System.Object,System.Object)" /> methods.  -   To convert types that support standard values, override the <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" />, <see cref="M:System.ComponentModel.TypeConverter.GetStandardValuesExclusive" />, <see cref="M:System.ComponentModel.TypeConverter.GetStandardValuesSupported" /> and <see cref="M:System.ComponentModel.TypeConverter.IsValid(System.Object)" /> methods.  <block subset="none" type="note"><para> Your derived type might be marked as <see langword="internal" /> or <see langword="private" />, but an instance of your type can be created with the <see cref="T:System.ComponentModel.TypeDescriptor" /> class. Do not write insecure code by assuming the caller is trusted. Assume instead that callers might create instances of your type in partial trust.  </para></block>  For more information about type converters for general (non-XAML) purposes, see [How to: Implement a Type Converter](http://msdn.microsoft.com/library/90373a3f-d8c8-492d-841c-945d62393c56) or [Generalized Type Conversion](http://msdn.microsoft.com/library/49253ae6-7657-4810-82ab-1176a6feeada).</para>
        </span>
      </span>
    </block>
    <altmember cref="T:System.ComponentModel.TypeConverterAttribute" />
    <altmember cref="T:System.ComponentModel.PropertyDescriptorCollection" />
    <altmember cref="T:System.ComponentModel.TypeConverter.SimplePropertyDescriptor" />
    <altmember cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TypeConverter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TypeConverter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c32aa-124">Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.TypeConverter" />-Klasse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c32aa-124">Initializes a new instance of the <see cref="T:System.ComponentModel.TypeConverter" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CanConvertFrom">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="c32aa-125">Gibt zurück, ob dieser Konverter ein Objekt eines Typs in den Typ dieses Konverters konvertieren kann.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c32aa-125">Returns whether this converter can convert an object of one type to the type of this converter.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CanConvertFrom">
      <MemberSignature Language="C#" Value="public bool CanConvertFrom (Type sourceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool CanConvertFrom(class System.Type sourceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function CanConvertFrom (sourceType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CanConvertFrom(Type ^ sourceType);" />
      <MemberSignature Language="F#" Value="member this.CanConvertFrom : Type -&gt; bool" Usage="typeConverter.CanConvertFrom sourceType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="sourceType">
          <span data-ttu-id="c32aa-126">Ein <see cref="T:System.Type" />, der den Typ darstellt, aus dem konvertiert werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c32aa-126">A <see cref="T:System.Type" /> that represents the type you want to convert from.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c32aa-127">Gibt zurück, ob dieser Konverter ein Objekt des angegebenen Typs in den Typ dieses Konverters konvertieren kann.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c32aa-127">Returns whether this converter can convert an object of the given type to the type of this converter.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c32aa-128">
            <see langword="true" />, wenn dieser Konverter die Konvertierung durchführen kann, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c32aa-128">
              <see langword="true" /> if this converter can perform the conversion; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c32aa-129">Bei Implementierung in dieser Klasse gibt diese Methode immer `false` zurück.</span><span class="sxs-lookup"><span data-stu-id="c32aa-129">As implemented in this class, this method always returns `false`.</span></span> <span data-ttu-id="c32aa-130">Wird niemals `true`.</span><span class="sxs-lookup"><span data-stu-id="c32aa-130">It never returns `true`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanConvertFrom">
      <MemberSignature Language="C#" Value="public virtual bool CanConvertFrom (System.ComponentModel.ITypeDescriptorContext context, Type sourceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class System.Type sourceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CanConvertFrom (context As ITypeDescriptorContext, sourceType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CanConvertFrom(System::ComponentModel::ITypeDescriptorContext ^ context, Type ^ sourceType);" />
      <MemberSignature Language="F#" Value="abstract member CanConvertFrom : System.ComponentModel.ITypeDescriptorContext * Type -&gt; bool&#xA;override this.CanConvertFrom : System.ComponentModel.ITypeDescriptorContext * Type -&gt; bool" Usage="typeConverter.CanConvertFrom (context, sourceType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="sourceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="c32aa-131">Ein <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, der einen Formatierungskontext bereitstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c32aa-131">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span>
          </span>
        </param>
        <param name="sourceType">
          <span data-ttu-id="c32aa-132">Ein <see cref="T:System.Type" />, der den Typ darstellt, aus dem konvertiert werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c32aa-132">A <see cref="T:System.Type" /> that represents the type you want to convert from.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c32aa-133">Gibt zurück, ob dieser Konverter ein Objekt vom angegebenen Typ unter Verwendung des angegebenen Kontexts in den Typ dieses Konverters konvertieren kann.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c32aa-133">Returns whether this converter can convert an object of the given type to the type of this converter, using the specified context.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c32aa-134">
            <see langword="true" />, wenn dieser Konverter die Konvertierung durchführen kann, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c32aa-134">
              <see langword="true" /> if this converter can perform the conversion; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c32aa-135">Diese Methode gibt bei Implementierung in dieser Klasse zurück `false`, es sei denn, `sourceType` ist ein <xref:System.ComponentModel.Design.Serialization.InstanceDescriptor>.</span><span class="sxs-lookup"><span data-stu-id="c32aa-135">As implemented in this class, this method returns `false`, unless `sourceType` is an <xref:System.ComponentModel.Design.Serialization.InstanceDescriptor>.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="c32aa-136">
            <para>Überschreiben Sie diese Methode, um eigene konvertierungsanforderungen anzugeben.  Über den <paramref name="context" />-Parameter können zusätzliche Informationen über die Umgebung extrahiert werden, aus der dieser Konverter aufgerufen wurde. Dieser Parameter kann sein <see langword="null" />, daher immer überprüft werden. Außerdem können die Eigenschaften des Kontextobjekts zurückgeben <see langword="null" />.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="c32aa-136">
              <para>Override this method to provide your own conversion requirements.  Use the <paramref name="context" /> parameter to extract additional information about the environment from which this converter is invoked. This parameter can be <see langword="null" />, so always check it. Also, properties on the context object can return <see langword="null" />.</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <MemberGroup MemberName="CanConvertTo">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="c32aa-137">Gibt zurück, ob dieser Konverter das Objekt in den angegebenen Typ konvertieren kann.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c32aa-137">Returns whether this converter can convert the object to the specified type.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CanConvertTo">
      <MemberSignature Language="C#" Value="public bool CanConvertTo (Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool CanConvertTo(class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.CanConvertTo(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function CanConvertTo (destinationType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CanConvertTo(Type ^ destinationType);" />
      <MemberSignature Language="F#" Value="member this.CanConvertTo : Type -&gt; bool" Usage="typeConverter.CanConvertTo destinationType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="destinationType">
          <span data-ttu-id="c32aa-138">Ein <see cref="T:System.Type" />, der den Typ darstellt, in den konvertiert werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c32aa-138">A <see cref="T:System.Type" /> that represents the type you want to convert to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c32aa-139">Gibt zurück, ob dieser Konverter das Objekt in den angegebenen Typ konvertieren kann.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c32aa-139">Returns whether this converter can convert the object to the specified type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c32aa-140">
            <see langword="true" />, wenn dieser Konverter die Konvertierung durchführen kann, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c32aa-140">
              <see langword="true" /> if this converter can perform the conversion; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c32aa-141">Wenn `destinationType` ist eine Zeichenfolge, die standardmäßige Implementierung des <xref:System.ComponentModel.TypeConverter.CanConvertTo%2A> gibt immer `true`.</span><span class="sxs-lookup"><span data-stu-id="c32aa-141">If `destinationType` is a string, the default implementation of <xref:System.ComponentModel.TypeConverter.CanConvertTo%2A> always returns `true`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanConvertTo">
      <MemberSignature Language="C#" Value="public virtual bool CanConvertTo (System.ComponentModel.ITypeDescriptorContext context, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanConvertTo(class System.ComponentModel.ITypeDescriptorContext context, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CanConvertTo (context As ITypeDescriptorContext, destinationType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CanConvertTo(System::ComponentModel::ITypeDescriptorContext ^ context, Type ^ destinationType);" />
      <MemberSignature Language="F#" Value="abstract member CanConvertTo : System.ComponentModel.ITypeDescriptorContext * Type -&gt; bool&#xA;override this.CanConvertTo : System.ComponentModel.ITypeDescriptorContext * Type -&gt; bool" Usage="typeConverter.CanConvertTo (context, destinationType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="c32aa-142">Ein <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, der einen Formatierungskontext bereitstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c32aa-142">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span>
          </span>
        </param>
        <param name="destinationType">
          <span data-ttu-id="c32aa-143">Ein <see cref="T:System.Type" />, der den Typ darstellt, in den konvertiert werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c32aa-143">A <see cref="T:System.Type" /> that represents the type you want to convert to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c32aa-144">Gibt zurück, ob dieser Konverter das Objekt mithilfe des angegebenen Kontexts in den angegebenen Typ umwandeln kann.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c32aa-144">Returns whether this converter can convert the object to the specified type, using the specified context.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c32aa-145">
            <see langword="true" />, wenn dieser Konverter die Konvertierung durchführen kann, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c32aa-145">
              <see langword="true" /> if this converter can perform the conversion; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c32aa-146">Über den `context`-Parameter können zusätzliche Informationen über die Umgebung extrahiert werden, aus der dieser Konverter aufgerufen wurde.</span><span class="sxs-lookup"><span data-stu-id="c32aa-146">Use the `context` parameter to extract additional information about the environment from which this converter is invoked.</span></span> <span data-ttu-id="c32aa-147">Dieser Parameter kann sein `null`, daher immer überprüft werden.</span><span class="sxs-lookup"><span data-stu-id="c32aa-147">This parameter can be `null`, so always check it.</span></span> <span data-ttu-id="c32aa-148">Außerdem können die Eigenschaften des Kontextobjekts `null` zurückgeben.</span><span class="sxs-lookup"><span data-stu-id="c32aa-148">Also, properties on the context object can return `null`.</span></span>  
  
 <span data-ttu-id="c32aa-149">Wenn `destinationType` ist eine Zeichenfolge, die standardmäßige Implementierung des <xref:System.ComponentModel.TypeConverter.CanConvertTo%2A> gibt immer `true`.</span><span class="sxs-lookup"><span data-stu-id="c32aa-149">If `destinationType` is a string, the default implementation of <xref:System.ComponentModel.TypeConverter.CanConvertTo%2A> always returns `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="c32aa-150">
            <para>Überschreiben Sie diese Methode, um eigene konvertierungsanforderungen anzugeben.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="c32aa-150">
              <para>Override this method to provide your own conversion requirements.</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ConvertFrom">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="c32aa-151">Konvertiert den angegebenen Wert in den Typ dieses Konverters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c32aa-151">Converts the given value to the type of this converter.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ConvertFrom">
      <MemberSignature Language="C#" Value="public object ConvertFrom (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object ConvertFrom(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.ConvertFrom(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConvertFrom (value As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ ConvertFrom(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="member this.ConvertFrom : obj -&gt; obj" Usage="typeConverter.ConvertFrom value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="c32aa-152">Die zu konvertierende <see cref="T:System.Object" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c32aa-152">The <see cref="T:System.Object" /> to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c32aa-153">Konvertiert den angegebenen Wert in den Typ dieses Konverters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c32aa-153">Converts the given value to the type of this converter.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c32aa-154">Ein <see cref="T:System.Object" />, das den konvertierten Wert darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c32aa-154">An <see cref="T:System.Object" /> that represents the converted value.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="c32aa-155">Die Konvertierung kann nicht durchgeführt werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c32aa-155">The conversion cannot be performed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ConvertFrom">
      <MemberSignature Language="C#" Value="public virtual object ConvertFrom (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ConvertFrom (context As ITypeDescriptorContext, culture As CultureInfo, value As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ ConvertFrom(System::ComponentModel::ITypeDescriptorContext ^ context, System::Globalization::CultureInfo ^ culture, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member ConvertFrom : System.ComponentModel.ITypeDescriptorContext * System.Globalization.CultureInfo * obj -&gt; obj&#xA;override this.ConvertFrom : System.ComponentModel.ITypeDescriptorContext * System.Globalization.CultureInfo * obj -&gt; obj" Usage="typeConverter.ConvertFrom (context, culture, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="c32aa-156">Ein <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, der einen Formatierungskontext bereitstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c32aa-156">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span>
          </span>
        </param>
        <param name="culture">
          <span data-ttu-id="c32aa-157">Das als aktuelle Kultur zu verwendende <see cref="T:System.Globalization.CultureInfo" />-Element.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c32aa-157">The <see cref="T:System.Globalization.CultureInfo" /> to use as the current culture.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="c32aa-158">Die zu konvertierende <see cref="T:System.Object" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c32aa-158">The <see cref="T:System.Object" /> to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c32aa-159">Konvertiert das angegebene Objekt unter Verwendung des angegebenen Kontexts und der angegebenen Kulturinformationen in den Typ dieses Konverters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c32aa-159">Converts the given object to the type of this converter, using the specified context and culture information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c32aa-160">Ein <see cref="T:System.Object" />, das den konvertierten Wert darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c32aa-160">An <see cref="T:System.Object" /> that represents the converted value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c32aa-161">Autoren von benutzerdefinierten Typen, die in der Regel ein typkonvertierungsverhaltens für XAML unterstützen möchten implementieren eine <xref:System.ComponentModel.TypeConverter> Klasse, die unterstützt <xref:System.ComponentModel.TypeConverter.ConvertFrom%2A> Verhalten aus einer Zeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="c32aa-161">Custom type authors that intend to support a type conversion behavior for XAML typically implement a <xref:System.ComponentModel.TypeConverter> class that supports <xref:System.ComponentModel.TypeConverter.ConvertFrom%2A> behavior from a string.</span></span> <span data-ttu-id="c32aa-162">Dieses Verhalten ermöglicht die typkonvertierung aus der Zeichenfolge, die als ein XAML-Attributwert bereitgestellt und bietet einen XAML-Prozessor mit Unterstützung zum Erstellen eines Objekts aus der Zeichenfolge benötigt werden, sodass das Objekt in einem Diagramm analysierten Objekts erzeugt werden kann.</span><span class="sxs-lookup"><span data-stu-id="c32aa-162">This behavior enables type conversion from the string provided as a XAML attribute value and provides a XAML processor with the support needed to create an object from the string, so that the object can be produced in a parsed object graph.</span></span> <span data-ttu-id="c32aa-163">Benutzerdefinierte Typen oder Member von benutzerdefinierten Typen werden durch Anwenden von angegeben <xref:System.ComponentModel.TypeConverterAttribute> verweisen auf die Definitionen, mit dem Attribut auf die benutzerdefinierte <xref:System.ComponentModel.TypeConverter> Implementierung.</span><span class="sxs-lookup"><span data-stu-id="c32aa-163">Custom types or members of custom types are indicated by applying <xref:System.ComponentModel.TypeConverterAttribute> to the definitions, with the attribute referencing the custom <xref:System.ComponentModel.TypeConverter> implementation.</span></span>  
  
 <span data-ttu-id="c32aa-164">Für XAML-Zwecke Sie in der Regel bieten keine Verzweigungen basierend auf Implementierungen `culture`.</span><span class="sxs-lookup"><span data-stu-id="c32aa-164">For XAML purposes, you do not typically provide branching implementations based on `culture`.</span></span> <span data-ttu-id="c32aa-165">Dies ist da XAML in einem Umgebungskontext Entwicklung vorkompiliert wird und kulturspezifische Informationen für die Laufzeit die XAML nicht relevant, für die typkonvertierung für XAML ist.</span><span class="sxs-lookup"><span data-stu-id="c32aa-165">This is because XAML is precompiled in a development environment context, and culture-specific information for runtime XAML is not relevant for XAML type conversion.</span></span> <span data-ttu-id="c32aa-166">Weitere Informationen finden Sie unter [Type Converters for XAML Overview](~/docs/framework/xaml-services/type-converters-for-xaml-overview.md).</span><span class="sxs-lookup"><span data-stu-id="c32aa-166">For more information, see [Type Converters for XAML Overview](~/docs/framework/xaml-services/type-converters-for-xaml-overview.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="c32aa-167">Die Konvertierung kann nicht durchgeführt werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c32aa-167">The conversion cannot be performed.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <span data-ttu-id="c32aa-168">
            <para>Überschreiben Sie diese Methode, um eigene konvertierungsanforderungen anzugeben.  Über den <paramref name="context" />-Parameter können zusätzliche Informationen über die Umgebung extrahiert werden, aus der dieser Konverter aufgerufen wurde. Dieser Parameter kann sein <see langword="null" />, daher immer überprüft werden. Außerdem können die Eigenschaften des Kontextobjekts zurückgeben <see langword="null" />.  Implementierungsmuster für Typkonverter, die zur Unterstützung von XAML und benutzerdefinierte Typen verwendet werden, finden Sie unter [Type Converters for XAML Overview](~/docs/framework/xaml-services/type-converters-for-xaml-overview.md).</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="c32aa-168">
              <para>Override this method to provide your own conversion requirements.  Use the <paramref name="context" /> parameter to extract additional information about the environment from which this converter is invoked. This parameter can be <see langword="null" />, so always check it. Also, properties on the context object can return <see langword="null" />.  For implementation patterns for type converters that are used to support XAML and custom types, see [Type Converters for XAML Overview](~/docs/framework/xaml-services/type-converters-for-xaml-overview.md).</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ConvertFromInvariantString">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="c32aa-169">Konvertiert den Wert unter Verwendung der invarianten Kultur in einen Typ dieses Konverters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c32aa-169">Converts the value to a type of this converter, using the invariant culture.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ConvertFromInvariantString">
      <MemberSignature Language="C#" Value="public object ConvertFromInvariantString (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object ConvertFromInvariantString(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConvertFromInvariantString (text As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ ConvertFromInvariantString(System::String ^ text);" />
      <MemberSignature Language="F#" Value="member this.ConvertFromInvariantString : string -&gt; obj" Usage="typeConverter.ConvertFromInvariantString text" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">
          <span data-ttu-id="c32aa-170">Die zu konvertierende <see cref="T:System.String" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c32aa-170">The <see cref="T:System.String" /> to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c32aa-171">Konvertiert die angegebene Zeichenfolge unter Verwendung der invarianten Kultur in einen Typ dieses Konverters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c32aa-171">Converts the given string to the type of this converter, using the invariant culture.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c32aa-172">Eine <see cref="T:System.Object" />-Klasse, die den konvertierten Text darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c32aa-172">An <see cref="T:System.Object" /> that represents the converted text.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c32aa-173">Die Standardimplementierung gibt immer `null` zurück.</span><span class="sxs-lookup"><span data-stu-id="c32aa-173">The default implementation always returns `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="c32aa-174">Die Konvertierung kann nicht durchgeführt werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c32aa-174">The conversion cannot be performed.</span>
          </span>
        </exception>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <Member MemberName="ConvertFromInvariantString">
      <MemberSignature Language="C#" Value="public object ConvertFromInvariantString (System.ComponentModel.ITypeDescriptorContext context, string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object ConvertFromInvariantString(class System.ComponentModel.ITypeDescriptorContext context, string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConvertFromInvariantString (context As ITypeDescriptorContext, text As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ ConvertFromInvariantString(System::ComponentModel::ITypeDescriptorContext ^ context, System::String ^ text);" />
      <MemberSignature Language="F#" Value="member this.ConvertFromInvariantString : System.ComponentModel.ITypeDescriptorContext * string -&gt; obj" Usage="typeConverter.ConvertFromInvariantString (context, text)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="c32aa-175">Ein <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, der einen Formatierungskontext bereitstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c32aa-175">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span>
          </span>
        </param>
        <param name="text">
          <span data-ttu-id="c32aa-176">Die zu konvertierende <see cref="T:System.String" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c32aa-176">The <see cref="T:System.String" /> to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c32aa-177">Konvertiert die angegebene Zeichenfolge unter Verwendung der invarianten Kultur und des angegebenen Kontexts in den Typ dieses Konverters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c32aa-177">Converts the given string to the type of this converter, using the invariant culture and the specified context.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c32aa-178">Eine <see cref="T:System.Object" />-Klasse, die den konvertierten Text darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c32aa-178">An <see cref="T:System.Object" /> that represents the converted text.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c32aa-179">Eine Ausnahme wird ausgelöst, wenn die Zeichenfolge in das entsprechende Objekt umgewandelt werden kann.</span><span class="sxs-lookup"><span data-stu-id="c32aa-179">An exception is raised if the string cannot be converted into the appropriate object.</span></span> <span data-ttu-id="c32aa-180">Die Standardimplementierung gibt immer `null` zurück.</span><span class="sxs-lookup"><span data-stu-id="c32aa-180">The default implementation always returns `null`.</span></span>  
  
 <span data-ttu-id="c32aa-181">Über den `context`-Parameter können zusätzliche Informationen über die Umgebung extrahiert werden, aus der dieser Konverter aufgerufen wurde.</span><span class="sxs-lookup"><span data-stu-id="c32aa-181">Use the `context` parameter to extract additional information about the environment from which this converter is invoked.</span></span> <span data-ttu-id="c32aa-182">Dieser Parameter kann sein `null`, daher immer überprüft werden.</span><span class="sxs-lookup"><span data-stu-id="c32aa-182">This parameter can be `null`, so always check it.</span></span> <span data-ttu-id="c32aa-183">Außerdem können die Eigenschaften des Kontextobjekts `null` zurückgeben.</span><span class="sxs-lookup"><span data-stu-id="c32aa-183">Also, properties on the context object can return `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="c32aa-184">Die Konvertierung kann nicht durchgeführt werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c32aa-184">The conversion cannot be performed.</span>
          </span>
        </exception>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ConvertFromString">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="c32aa-185">Konvertiert den angegebenen Text in ein Objekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c32aa-185">Converts the specified text to an object.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ConvertFromString">
      <MemberSignature Language="C#" Value="public object ConvertFromString (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object ConvertFromString(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.ConvertFromString(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConvertFromString (text As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ ConvertFromString(System::String ^ text);" />
      <MemberSignature Language="F#" Value="member this.ConvertFromString : string -&gt; obj" Usage="typeConverter.ConvertFromString text" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">
          <span data-ttu-id="c32aa-186">Die Textdarstellung des zu konvertierenden Objekts.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c32aa-186">The text representation of the object to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c32aa-187">Konvertiert den angegebenen Text in ein Objekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c32aa-187">Converts the specified text to an object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c32aa-188">Eine <see cref="T:System.Object" />-Klasse, die den konvertierten Text darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c32aa-188">An <see cref="T:System.Object" /> that represents the converted text.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c32aa-189">Die Standardimplementierung gibt immer `null` zurück.</span><span class="sxs-lookup"><span data-stu-id="c32aa-189">The default implementation always returns `null`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c32aa-190">Ein Beispiel dieser Funktion finden Sie unter den <xref:System.ComponentModel.TypeConverter> Klasse.</span><span class="sxs-lookup"><span data-stu-id="c32aa-190">For an example of this function, see the <xref:System.ComponentModel.TypeConverter> class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="c32aa-191">Die Zeichenfolge kann nicht in das entsprechende Objekt konvertiert werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c32aa-191">The string cannot be converted into the appropriate object.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ConvertFromString">
      <MemberSignature Language="C#" Value="public object ConvertFromString (System.ComponentModel.ITypeDescriptorContext context, string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object ConvertFromString(class System.ComponentModel.ITypeDescriptorContext context, string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConvertFromString (context As ITypeDescriptorContext, text As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ ConvertFromString(System::ComponentModel::ITypeDescriptorContext ^ context, System::String ^ text);" />
      <MemberSignature Language="F#" Value="member this.ConvertFromString : System.ComponentModel.ITypeDescriptorContext * string -&gt; obj" Usage="typeConverter.ConvertFromString (context, text)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="c32aa-192">Ein <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, der einen Formatierungskontext bereitstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c32aa-192">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span>
          </span>
        </param>
        <param name="text">
          <span data-ttu-id="c32aa-193">Die zu konvertierende <see cref="T:System.String" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c32aa-193">The <see cref="T:System.String" /> to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c32aa-194">Konvertiert den angegebenen Text unter Verwendung des angegebenen Kontexts in ein Objekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c32aa-194">Converts the given text to an object, using the specified context.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c32aa-195">Eine <see cref="T:System.Object" />-Klasse, die den konvertierten Text darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c32aa-195">An <see cref="T:System.Object" /> that represents the converted text.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c32aa-196">Eine Ausnahme wird ausgelöst, wenn die Zeichenfolge in das entsprechende Objekt umgewandelt werden kann.</span><span class="sxs-lookup"><span data-stu-id="c32aa-196">An exception is raised if the string cannot be converted into the appropriate object.</span></span> <span data-ttu-id="c32aa-197">Die Standardimplementierung gibt immer `null` zurück.</span><span class="sxs-lookup"><span data-stu-id="c32aa-197">The default implementation always returns `null`.</span></span>  
  
 <span data-ttu-id="c32aa-198">Über den `context`-Parameter können zusätzliche Informationen über die Umgebung extrahiert werden, aus der dieser Konverter aufgerufen wurde.</span><span class="sxs-lookup"><span data-stu-id="c32aa-198">Use the `context` parameter to extract additional information about the environment from which this converter is invoked.</span></span> <span data-ttu-id="c32aa-199">Dieser Parameter kann sein `null`, daher immer überprüft werden.</span><span class="sxs-lookup"><span data-stu-id="c32aa-199">This parameter can be `null`, so always check it.</span></span> <span data-ttu-id="c32aa-200">Außerdem können die Eigenschaften des Kontextobjekts `null` zurückgeben.</span><span class="sxs-lookup"><span data-stu-id="c32aa-200">Also, properties on the context object can return `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="c32aa-201">Die Konvertierung kann nicht durchgeführt werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c32aa-201">The conversion cannot be performed.</span>
          </span>
        </exception>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <Member MemberName="ConvertFromString">
      <MemberSignature Language="C#" Value="public object ConvertFromString (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object ConvertFromString(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConvertFromString (context As ITypeDescriptorContext, culture As CultureInfo, text As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ ConvertFromString(System::ComponentModel::ITypeDescriptorContext ^ context, System::Globalization::CultureInfo ^ culture, System::String ^ text);" />
      <MemberSignature Language="F#" Value="member this.ConvertFromString : System.ComponentModel.ITypeDescriptorContext * System.Globalization.CultureInfo * string -&gt; obj" Usage="typeConverter.ConvertFromString (context, culture, text)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="c32aa-202">Ein <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, der einen Formatierungskontext bereitstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c32aa-202">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span>
          </span>
        </param>
        <param name="culture">
          <span data-ttu-id="c32aa-203">Ein <see cref="T:System.Globalization.CultureInfo" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c32aa-203">A <see cref="T:System.Globalization.CultureInfo" />.</span>
          </span>
          <span data-ttu-id="c32aa-204">Wenn <see langword="null" /> übergeben wird, wird von der aktuellen Kultur ausgegangen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c32aa-204">If <see langword="null" /> is passed, the current culture is assumed.</span>
          </span>
        </param>
        <param name="text">
          <span data-ttu-id="c32aa-205">Die zu konvertierende <see cref="T:System.String" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c32aa-205">The <see cref="T:System.String" /> to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c32aa-206">Konvertiert den angegebenen Text unter Verwendung des angegebenen Kontexts und der angegebenen Kulturinformationen in ein Objekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c32aa-206">Converts the given text to an object, using the specified context and culture information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c32aa-207">Eine <see cref="T:System.Object" />-Klasse, die den konvertierten Text darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c32aa-207">An <see cref="T:System.Object" /> that represents the converted text.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c32aa-208">Eine Ausnahme wird ausgelöst, wenn die Zeichenfolge in das entsprechende Objekt umgewandelt werden kann.</span><span class="sxs-lookup"><span data-stu-id="c32aa-208">An exception is raised if the string cannot be converted into the appropriate object.</span></span> <span data-ttu-id="c32aa-209">Die Standardimplementierung gibt immer `null` zurück.</span><span class="sxs-lookup"><span data-stu-id="c32aa-209">The default implementation always returns `null`.</span></span>  
  
 <span data-ttu-id="c32aa-210">Über den `context`-Parameter können zusätzliche Informationen über die Umgebung extrahiert werden, aus der dieser Konverter aufgerufen wurde.</span><span class="sxs-lookup"><span data-stu-id="c32aa-210">Use the `context` parameter to extract additional information about the environment from which this converter is invoked.</span></span> <span data-ttu-id="c32aa-211">Dieser Parameter kann sein `null`, daher immer überprüft werden.</span><span class="sxs-lookup"><span data-stu-id="c32aa-211">This parameter can be `null`, so always check it.</span></span> <span data-ttu-id="c32aa-212">Außerdem können die Eigenschaften des Kontextobjekts `null` zurückgeben.</span><span class="sxs-lookup"><span data-stu-id="c32aa-212">Also, properties on the context object can return `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="c32aa-213">Die Konvertierung kann nicht durchgeführt werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c32aa-213">The conversion cannot be performed.</span>
          </span>
        </exception>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ConvertTo">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="c32aa-214">Konvertiert das angegebene Wertobjekt in den angegebenen Typ.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c32aa-214">Converts the given value object to the specified type.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ConvertTo">
      <MemberSignature Language="C#" Value="public object ConvertTo (object value, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object ConvertTo(object value, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConvertTo (value As Object, destinationType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ ConvertTo(System::Object ^ value, Type ^ destinationType);" />
      <MemberSignature Language="F#" Value="member this.ConvertTo : obj * Type -&gt; obj" Usage="typeConverter.ConvertTo (value, destinationType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="c32aa-215">Die zu konvertierende <see cref="T:System.Object" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c32aa-215">The <see cref="T:System.Object" /> to convert.</span>
          </span>
        </param>
        <param name="destinationType">
          <span data-ttu-id="c32aa-216">Der <see cref="T:System.Type" />, in den der <c>value</c>-Parameter konvertiert wird</span>
          <span class="sxs-lookup">
            <span data-stu-id="c32aa-216">The <see cref="T:System.Type" /> to convert the <c>value</c> parameter to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c32aa-217">Konvertiert das angegebene Wertobjekt unter Verwendung der Argumente in den angegebenen Typ.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c32aa-217">Converts the given value object to the specified type, using the arguments.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c32aa-218">Ein <see cref="T:System.Object" />, das den konvertierten Wert darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c32aa-218">An <see cref="T:System.Object" /> that represents the converted value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c32aa-219">Die häufigste Art, um die Konvertierung ist ein String-Objekt.</span><span class="sxs-lookup"><span data-stu-id="c32aa-219">The most common type to convert to and from is a string object.</span></span> <span data-ttu-id="c32aa-220">Diese Implementierung ruft <xref:System.Object.ToString%2A> für das Objekt, wenn das Objekt gültig ist und der Zieltyp eine Zeichenfolge ist.</span><span class="sxs-lookup"><span data-stu-id="c32aa-220">This implementation calls <xref:System.Object.ToString%2A> on the object, if the object is valid and if the destination type is a string.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c32aa-221">Der <paramref name="destinationType" />-Parameter ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c32aa-221">The <paramref name="destinationType" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="c32aa-222">Die Konvertierung kann nicht durchgeführt werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c32aa-222">The conversion cannot be performed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ConvertTo">
      <MemberSignature Language="C#" Value="public virtual object ConvertTo (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ConvertTo(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object value, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ConvertTo (context As ITypeDescriptorContext, culture As CultureInfo, value As Object, destinationType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ ConvertTo(System::ComponentModel::ITypeDescriptorContext ^ context, System::Globalization::CultureInfo ^ culture, System::Object ^ value, Type ^ destinationType);" />
      <MemberSignature Language="F#" Value="abstract member ConvertTo : System.ComponentModel.ITypeDescriptorContext * System.Globalization.CultureInfo * obj * Type -&gt; obj&#xA;override this.ConvertTo : System.ComponentModel.ITypeDescriptorContext * System.Globalization.CultureInfo * obj * Type -&gt; obj" Usage="typeConverter.ConvertTo (context, culture, value, destinationType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="c32aa-223">Ein <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, der einen Formatierungskontext bereitstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c32aa-223">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span>
          </span>
        </param>
        <param name="culture">
          <span data-ttu-id="c32aa-224">Ein <see cref="T:System.Globalization.CultureInfo" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c32aa-224">A <see cref="T:System.Globalization.CultureInfo" />.</span>
          </span>
          <span data-ttu-id="c32aa-225">Wenn <see langword="null" /> übergeben wird, wird von der aktuellen Kultur ausgegangen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c32aa-225">If <see langword="null" /> is passed, the current culture is assumed.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="c32aa-226">Die zu konvertierende <see cref="T:System.Object" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c32aa-226">The <see cref="T:System.Object" /> to convert.</span>
          </span>
        </param>
        <param name="destinationType">
          <span data-ttu-id="c32aa-227">Der <see cref="T:System.Type" />, in den der <c>value</c>-Parameter konvertiert wird</span>
          <span class="sxs-lookup">
            <span data-stu-id="c32aa-227">The <see cref="T:System.Type" /> to convert the <c>value</c> parameter to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c32aa-228">Konvertiert das angegebene Wertobjekt unter Verwendung des angegebenen Kontexts und der angegebenen Kulturinformationen in den angegebenen Typ.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c32aa-228">Converts the given value object to the specified type, using the specified context and culture information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c32aa-229">Ein <see cref="T:System.Object" />, das den konvertierten Wert darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c32aa-229">An <see cref="T:System.Object" /> that represents the converted value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c32aa-230">Am häufigsten wird in Zeichenfolgenobjekte und aus diesen konvertiert.</span><span class="sxs-lookup"><span data-stu-id="c32aa-230">The most common types to convert are to and from a string object.</span></span> <span data-ttu-id="c32aa-231">Diese Implementierung ruft <xref:System.Object.ToString%2A> für das Objekt, wenn das Objekt gültig ist und der Zieltyp eine Zeichenfolge ist.</span><span class="sxs-lookup"><span data-stu-id="c32aa-231">This implementation calls <xref:System.Object.ToString%2A> on the object if the object is valid and if the destination type is a string.</span></span>  
  
 <span data-ttu-id="c32aa-232">Über den `context`-Parameter können zusätzliche Informationen über die Umgebung extrahiert werden, aus der dieser Konverter aufgerufen wurde.</span><span class="sxs-lookup"><span data-stu-id="c32aa-232">Use the `context` parameter to extract additional information about the environment from which this converter is invoked.</span></span> <span data-ttu-id="c32aa-233">Dieser Parameter kann sein `null`, daher immer überprüft werden.</span><span class="sxs-lookup"><span data-stu-id="c32aa-233">This parameter can be `null`, so always check it.</span></span> <span data-ttu-id="c32aa-234">Außerdem können die Eigenschaften des Kontextobjekts `null` zurückgeben.</span><span class="sxs-lookup"><span data-stu-id="c32aa-234">Also, properties on the context object can return `null`.</span></span>  
  
 <span data-ttu-id="c32aa-235">Autoren von benutzerdefinierten Typen, die in der Regel ein typkonvertierungsverhaltens für XAML unterstützen möchten implementieren eine <xref:System.ComponentModel.TypeConverter> Klasse, die unterstützt <xref:System.ComponentModel.TypeConverter.ConvertFrom%2A> Verhalten aus einer Zeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="c32aa-235">Custom type authors that intend to support a type conversion behavior for XAML typically implement a <xref:System.ComponentModel.TypeConverter> class that supports <xref:System.ComponentModel.TypeConverter.ConvertFrom%2A> behavior from a string.</span></span> <span data-ttu-id="c32aa-236">Diese Typkonverter könnte auch implementieren <xref:System.ComponentModel.TypeConverter.ConvertTo%2A> zur Unterstützung der Serialisierung in XAML zurück.</span><span class="sxs-lookup"><span data-stu-id="c32aa-236">These type converters might also implement <xref:System.ComponentModel.TypeConverter.ConvertTo%2A> to support serialization back to XAML.</span></span>  
  
 <span data-ttu-id="c32aa-237">Einige XAML-Serialisierungsszenarien können nicht ausreichend behandelt werden, mit <xref:System.ComponentModel.TypeConverter> allein.</span><span class="sxs-lookup"><span data-stu-id="c32aa-237">Some XAML serialization scenarios cannot be adequately addressed with <xref:System.ComponentModel.TypeConverter> alone.</span></span> <span data-ttu-id="c32aa-238">In diesen Fällen ist es möglicherweise erforderlich ist, definieren auch eine <xref:System.Windows.Markup.ValueSerializer> , verarbeitet die Serialisierungsfälle, die andernfalls von behandelt werden würde <xref:System.ComponentModel.TypeConverter.ConvertTo%2A>.</span><span class="sxs-lookup"><span data-stu-id="c32aa-238">In these cases, it may be necessary to also define a <xref:System.Windows.Markup.ValueSerializer> that handles the serialization cases that would otherwise be handled by <xref:System.ComponentModel.TypeConverter.ConvertTo%2A>.</span></span> <span data-ttu-id="c32aa-239">Weitere Informationen finden Sie unter <xref:System.Windows.Markup.ValueSerializer>.</span><span class="sxs-lookup"><span data-stu-id="c32aa-239">For more information, see <xref:System.Windows.Markup.ValueSerializer>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c32aa-240">Der <paramref name="destinationType" />-Parameter ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c32aa-240">The <paramref name="destinationType" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="c32aa-241">Die Konvertierung kann nicht durchgeführt werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c32aa-241">The conversion cannot be performed.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <span data-ttu-id="c32aa-242">
            <para>Überschreiben Sie diese Methode, um eigene konvertierungsanforderungen anzugeben.  Implementierungsmuster für Typkonverter, die zur Unterstützung von XAML und benutzerdefinierte Typen verwendet werden, finden Sie unter [Type Converters for XAML Overview](~/docs/framework/xaml-services/type-converters-for-xaml-overview.md).</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="c32aa-242">
              <para>Override this method to provide your own conversion requirements.  For implementation patterns for type converters that are used to support XAML and custom types, see [Type Converters for XAML Overview](~/docs/framework/xaml-services/type-converters-for-xaml-overview.md).</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ConvertToInvariantString">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="c32aa-243">Konvertiert den angegebenen Wert in eine Zeichenfolgendarstellung mit invarianter Kultur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c32aa-243">Converts the specified value to a culture-invariant string representation.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ConvertToInvariantString">
      <MemberSignature Language="C#" Value="public string ConvertToInvariantString (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ConvertToInvariantString(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.ConvertToInvariantString(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConvertToInvariantString (value As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ConvertToInvariantString(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="member this.ConvertToInvariantString : obj -&gt; string" Usage="typeConverter.ConvertToInvariantString value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="c32aa-244">Die zu konvertierende <see cref="T:System.Object" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c32aa-244">The <see cref="T:System.Object" /> to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c32aa-245">Konvertiert den angegebenen Wert in eine Zeichenfolgendarstellung mit invarianter Kultur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c32aa-245">Converts the specified value to a culture-invariant string representation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c32aa-246">Eine <see cref="T:System.String" />-Klasse, die den konvertierten Wert darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c32aa-246">A <see cref="T:System.String" /> that represents the converted value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c32aa-247">Die `context` Parameter kann verwendet werden, um zusätzliche Informationen über die Umgebung extrahiert, von dem dieser Konverter aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="c32aa-247">The `context` parameter can be used to extract additional information about the environment from which this converter is being invoked.</span></span> <span data-ttu-id="c32aa-248">Dieser Parameter kann `null` sein und muss daher immer überprüft werden.</span><span class="sxs-lookup"><span data-stu-id="c32aa-248">This can be `null`, so always check.</span></span> <span data-ttu-id="c32aa-249">Außerdem können die Eigenschaften des Kontextobjekts `null` zurückgeben.</span><span class="sxs-lookup"><span data-stu-id="c32aa-249">Also, properties on the context object can return `null`.</span></span>  
  
 <span data-ttu-id="c32aa-250">Abhängig von der Implementierung des Werteformatierers kann es möglich, übergeben die zurückgegebene Zeichenfolge wieder in das Formatierungsprogramm Wert um eine Instanz des Objekts neu zu erstellen sein.</span><span class="sxs-lookup"><span data-stu-id="c32aa-250">Depending on the implementation of the value formatter, it might be possible to pass the returned string back into the value formatter to re-create an instance of the object.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="c32aa-251">Die Konvertierung kann nicht durchgeführt werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c32aa-251">The conversion cannot be performed.</span>
          </span>
        </exception>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <Member MemberName="ConvertToInvariantString">
      <MemberSignature Language="C#" Value="public string ConvertToInvariantString (System.ComponentModel.ITypeDescriptorContext context, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ConvertToInvariantString(class System.ComponentModel.ITypeDescriptorContext context, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConvertToInvariantString (context As ITypeDescriptorContext, value As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ConvertToInvariantString(System::ComponentModel::ITypeDescriptorContext ^ context, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="member this.ConvertToInvariantString : System.ComponentModel.ITypeDescriptorContext * obj -&gt; string" Usage="typeConverter.ConvertToInvariantString (context, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="c32aa-252">Ein <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, der einen Formatierungskontext bereitstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c32aa-252">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="c32aa-253">Die zu konvertierende <see cref="T:System.Object" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c32aa-253">The <see cref="T:System.Object" /> to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c32aa-254">Konvertiert den angegebenen Wert unter Verwendung des angegebenen Kontexts in eine Zeichenfolgendarstellung mit invarianter Kultur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c32aa-254">Converts the specified value to a culture-invariant string representation, using the specified context.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c32aa-255">Eine <see cref="T:System.String" />-Klasse, die den konvertierten Wert darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c32aa-255">A <see cref="T:System.String" /> that represents the converted value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c32aa-256">Über den `context`-Parameter können zusätzliche Informationen über die Umgebung extrahiert werden, aus der dieser Konverter aufgerufen wurde.</span><span class="sxs-lookup"><span data-stu-id="c32aa-256">Use the `context` parameter to extract additional information about the environment from which this converter is invoked.</span></span> <span data-ttu-id="c32aa-257">Dieser Parameter kann sein `null`, daher immer überprüft werden.</span><span class="sxs-lookup"><span data-stu-id="c32aa-257">This parameter can be `null`, so always check it.</span></span> <span data-ttu-id="c32aa-258">Außerdem können die Eigenschaften des Kontextobjekts `null` zurückgeben.</span><span class="sxs-lookup"><span data-stu-id="c32aa-258">Also, properties on the context object can return `null`.</span></span>  
  
 <span data-ttu-id="c32aa-259">Abhängig von der Implementierung des Werteformatierers kann es möglich, übergeben die zurückgegebene Zeichenfolge wieder in das Formatierungsprogramm Wert um eine Instanz des Objekts neu zu erstellen sein.</span><span class="sxs-lookup"><span data-stu-id="c32aa-259">Depending on the implementation of the value formatter, it might be possible to pass the returned string back into the value formatter to re-create an instance of the object.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="c32aa-260">Die Konvertierung kann nicht durchgeführt werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c32aa-260">The conversion cannot be performed.</span>
          </span>
        </exception>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ConvertToString">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="c32aa-261">Konvertiert den angegebenen Wert in eine Zeichenfolgendarstellung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c32aa-261">Converts the specified value to a string representation.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ConvertToString">
      <MemberSignature Language="C#" Value="public string ConvertToString (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ConvertToString(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.ConvertToString(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConvertToString (value As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ConvertToString(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="member this.ConvertToString : obj -&gt; string" Usage="typeConverter.ConvertToString value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="c32aa-262">Die zu konvertierende <see cref="T:System.Object" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c32aa-262">The <see cref="T:System.Object" /> to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c32aa-263">Konvertiert den angegebenen Wert in eine Zeichenfolgendarstellung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c32aa-263">Converts the specified value to a string representation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c32aa-264">Ein <see cref="T:System.Object" />, das den konvertierten Wert darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c32aa-264">An <see cref="T:System.Object" /> that represents the converted value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c32aa-265">Abhängig von der Implementierung des Werteformatierers kann es möglich, übergeben die zurückgegebene Zeichenfolge wieder in das Formatierungsprogramm Wert um eine Instanz des Objekts neu zu erstellen sein.</span><span class="sxs-lookup"><span data-stu-id="c32aa-265">Depending on the implementation of the value formatter, it might be possible to pass the returned string back into the value formatter to re-create an instance of the object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c32aa-266">Ein Beispiel für diese Funktion finden Sie in der <xref:System.ComponentModel.TypeConverter> Klasse.</span><span class="sxs-lookup"><span data-stu-id="c32aa-266">For an example on this function, see the <xref:System.ComponentModel.TypeConverter> class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="c32aa-267">Die Konvertierung kann nicht durchgeführt werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c32aa-267">The conversion cannot be performed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ConvertToString">
      <MemberSignature Language="C#" Value="public string ConvertToString (System.ComponentModel.ITypeDescriptorContext context, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ConvertToString(class System.ComponentModel.ITypeDescriptorContext context, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConvertToString (context As ITypeDescriptorContext, value As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ConvertToString(System::ComponentModel::ITypeDescriptorContext ^ context, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="member this.ConvertToString : System.ComponentModel.ITypeDescriptorContext * obj -&gt; string" Usage="typeConverter.ConvertToString (context, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="c32aa-268">Ein <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, der einen Formatierungskontext bereitstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c32aa-268">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="c32aa-269">Die zu konvertierende <see cref="T:System.Object" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c32aa-269">The <see cref="T:System.Object" /> to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c32aa-270">Konvertiert den angegebenen Wert unter Verwendung des angegebenen Kontexts in eine Zeichenfolgendarstellung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c32aa-270">Converts the given value to a string representation, using the given context.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c32aa-271">Ein <see cref="T:System.Object" />, das den konvertierten Wert darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c32aa-271">An <see cref="T:System.Object" /> that represents the converted value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c32aa-272">Über den `context`-Parameter können zusätzliche Informationen über die Umgebung extrahiert werden, aus der dieser Konverter aufgerufen wurde.</span><span class="sxs-lookup"><span data-stu-id="c32aa-272">Use the `context` parameter to extract additional information about the environment from which this converter is invoked.</span></span> <span data-ttu-id="c32aa-273">Dieser Parameter kann sein `null`, daher immer überprüft werden.</span><span class="sxs-lookup"><span data-stu-id="c32aa-273">This parameter can be `null`, so always check it.</span></span> <span data-ttu-id="c32aa-274">Außerdem können die Eigenschaften des Kontextobjekts `null` zurückgeben.</span><span class="sxs-lookup"><span data-stu-id="c32aa-274">Also, properties on the context object can return `null`.</span></span>  
  
 <span data-ttu-id="c32aa-275">Abhängig von der Implementierung des Werteformatierers kann es möglich, übergeben die zurückgegebene Zeichenfolge wieder in das Formatierungsprogramm Wert um eine Instanz des Objekts neu zu erstellen sein.</span><span class="sxs-lookup"><span data-stu-id="c32aa-275">Depending on the implementation of the value formatter, it might be possible to pass the returned string back into the value formatter to re-create an instance of the object.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="c32aa-276">Die Konvertierung kann nicht durchgeführt werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c32aa-276">The conversion cannot be performed.</span>
          </span>
        </exception>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <Member MemberName="ConvertToString">
      <MemberSignature Language="C#" Value="public string ConvertToString (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ConvertToString(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConvertToString (context As ITypeDescriptorContext, culture As CultureInfo, value As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ConvertToString(System::ComponentModel::ITypeDescriptorContext ^ context, System::Globalization::CultureInfo ^ culture, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="member this.ConvertToString : System.ComponentModel.ITypeDescriptorContext * System.Globalization.CultureInfo * obj -&gt; string" Usage="typeConverter.ConvertToString (context, culture, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="c32aa-277">Ein <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, der einen Formatierungskontext bereitstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c32aa-277">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span>
          </span>
        </param>
        <param name="culture">
          <span data-ttu-id="c32aa-278">Ein <see cref="T:System.Globalization.CultureInfo" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c32aa-278">A <see cref="T:System.Globalization.CultureInfo" />.</span>
          </span>
          <span data-ttu-id="c32aa-279">Wenn <see langword="null" /> übergeben wird, wird von der aktuellen Kultur ausgegangen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c32aa-279">If <see langword="null" /> is passed, the current culture is assumed.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="c32aa-280">Die zu konvertierende <see cref="T:System.Object" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c32aa-280">The <see cref="T:System.Object" /> to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c32aa-281">Konvertiert den angegebenen Wert unter Verwendung des angegebenen Kontexts und der angegebenen Kulturinformationen in eine Zeichenfolgendarstellung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c32aa-281">Converts the given value to a string representation, using the specified context and culture information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c32aa-282">Ein <see cref="T:System.Object" />, das den konvertierten Wert darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c32aa-282">An <see cref="T:System.Object" /> that represents the converted value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c32aa-283">Über den `context`-Parameter können zusätzliche Informationen über die Umgebung extrahiert werden, aus der dieser Konverter aufgerufen wurde.</span><span class="sxs-lookup"><span data-stu-id="c32aa-283">Use the `context` parameter to extract additional information about the environment from which this converter is invoked.</span></span> <span data-ttu-id="c32aa-284">Dieser Parameter kann sein `null`, daher immer überprüft werden.</span><span class="sxs-lookup"><span data-stu-id="c32aa-284">This parameter can be `null`, so always check it.</span></span> <span data-ttu-id="c32aa-285">Außerdem können die Eigenschaften des Kontextobjekts `null` zurückgeben.</span><span class="sxs-lookup"><span data-stu-id="c32aa-285">Also, properties on the context object can return `null`.</span></span>  
  
 <span data-ttu-id="c32aa-286">Abhängig von der Implementierung des Werteformatierers kann es möglich, übergeben die zurückgegebene Zeichenfolge wieder in das Formatierungsprogramm Wert um eine Instanz des Objekts neu zu erstellen sein.</span><span class="sxs-lookup"><span data-stu-id="c32aa-286">Depending on the implementation of the value formatter, it might be possible to pass the returned string back into the value formatter to re-create an instance of the object.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="c32aa-287">Die Konvertierung kann nicht durchgeführt werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c32aa-287">The conversion cannot be performed.</span>
          </span>
        </exception>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateInstance">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="c32aa-288">Erstellt eine <see cref="T:System.Object" />-Klasse mit einer angegebenen Menge von Eigenschaftswerten für das Objekt neu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c32aa-288">Re-creates an <see cref="T:System.Object" /> given a set of property values for the object.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public object CreateInstance (System.Collections.IDictionary propertyValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object CreateInstance(class System.Collections.IDictionary propertyValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateInstance (propertyValues As IDictionary) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ CreateInstance(System::Collections::IDictionary ^ propertyValues);" />
      <MemberSignature Language="F#" Value="member this.CreateInstance : System.Collections.IDictionary -&gt; obj" Usage="typeConverter.CreateInstance propertyValues" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyValues" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="propertyValues">
          <span data-ttu-id="c32aa-289">Eine <see cref="T:System.Collections.IDictionary" />-Schnittstelle, die ein Wörterbuch mit neuen Eigenschaftswerten darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c32aa-289">An <see cref="T:System.Collections.IDictionary" /> that represents a dictionary of new property values.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c32aa-290">Erstellt eine <see cref="T:System.Object" />-Klasse mit einer angegebenen Menge von Eigenschaftswerten für das Objekt neu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c32aa-290">Re-creates an <see cref="T:System.Object" /> given a set of property values for the object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c32aa-291">Ein <see cref="T:System.Object" />, das das angegebene <see cref="T:System.Collections.IDictionary" /> darstellt, oder <see langword="null" />, wenn das Objekt nicht erstellt werden kann.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c32aa-291">An <see cref="T:System.Object" /> representing the given <see cref="T:System.Collections.IDictionary" />, or <see langword="null" /> if the object cannot be created.</span>
          </span>
          <span data-ttu-id="c32aa-292">Diese Methode gibt immer <see langword="null" /> zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c32aa-292">This method always returns <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c32aa-293">Verwenden Sie diese Methode für Objekte, die unveränderlich sind, aber für die veränderliche Eigenschaften bereitgestellt werden sollen.</span><span class="sxs-lookup"><span data-stu-id="c32aa-293">Use this method for objects that are immutable, but for which you want to provide changeable properties.</span></span>  
  
 <span data-ttu-id="c32aa-294">Das Wörterbuch von bereitgestellten der `propertyValues` Parameter hat eine Reihe von Name/Wert-Paare, einer für jede Eigenschaft vom zurückgegebenen <xref:System.ComponentModel.TypeConverter.GetProperties%2A>.</span><span class="sxs-lookup"><span data-stu-id="c32aa-294">The dictionary provided by the `propertyValues` parameter has a series of name/value pairs, one for each property returned from <xref:System.ComponentModel.TypeConverter.GetProperties%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IDictionary" />
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public virtual object CreateInstance (System.ComponentModel.ITypeDescriptorContext context, System.Collections.IDictionary propertyValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object CreateInstance(class System.ComponentModel.ITypeDescriptorContext context, class System.Collections.IDictionary propertyValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateInstance (context As ITypeDescriptorContext, propertyValues As IDictionary) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ CreateInstance(System::ComponentModel::ITypeDescriptorContext ^ context, System::Collections::IDictionary ^ propertyValues);" />
      <MemberSignature Language="F#" Value="abstract member CreateInstance : System.ComponentModel.ITypeDescriptorContext * System.Collections.IDictionary -&gt; obj&#xA;override this.CreateInstance : System.ComponentModel.ITypeDescriptorContext * System.Collections.IDictionary -&gt; obj" Usage="typeConverter.CreateInstance (context, propertyValues)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="propertyValues" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="c32aa-295">Ein <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, der einen Formatierungskontext bereitstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c32aa-295">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span>
          </span>
        </param>
        <param name="propertyValues">
          <span data-ttu-id="c32aa-296">Ein <see cref="T:System.Collections.IDictionary" /> mit neuen Eigenschaftswerten.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c32aa-296">An <see cref="T:System.Collections.IDictionary" /> of new property values.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c32aa-297">Erstellt über den angegebenen Kontext, der aus einer angegebenen Menge von Eigenschaftswerten für das Objekt besteht, eine Instanz des Typs, der dieser <see cref="T:System.ComponentModel.TypeConverter" />-Klasse zugeordnet ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c32aa-297">Creates an instance of the type that this <see cref="T:System.ComponentModel.TypeConverter" /> is associated with, using the specified context, given a set of property values for the object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c32aa-298">Ein <see cref="T:System.Object" />, das das angegebene <see cref="T:System.Collections.IDictionary" /> darstellt, oder <see langword="null" />, wenn das Objekt nicht erstellt werden kann.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c32aa-298">An <see cref="T:System.Object" /> representing the given <see cref="T:System.Collections.IDictionary" />, or <see langword="null" /> if the object cannot be created.</span>
          </span>
          <span data-ttu-id="c32aa-299">Diese Methode gibt immer <see langword="null" /> zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c32aa-299">This method always returns <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c32aa-300">Verwenden Sie diese Methode für Objekte, die unveränderlich sind, aber für die veränderliche Eigenschaften bereitgestellt werden sollen.</span><span class="sxs-lookup"><span data-stu-id="c32aa-300">Use this method for objects that are immutable, but for which you want to provide changeable properties.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="c32aa-301">
            <para>Überschreiben Sie diese Methode, wenn der Typ, die, den Sie konvertieren möchten. das Objekt, dessen Wert ändern, neu erstellen muss.  Über den <paramref name="context" />-Parameter können zusätzliche Informationen über die Umgebung extrahiert werden, aus der dieser Konverter aufgerufen wurde. Dieser Parameter kann sein <see langword="null" />, daher immer überprüft werden. Außerdem können die Eigenschaften des Kontextobjekts zurückgeben <see langword="null" />.  Das Wörterbuch von bereitgestellten der <paramref name="propertyValues" /> Parameter hat eine Reihe von Name/Wert-Paare, einer für jede Eigenschaft vom zurückgegebenen <see cref="M:System.ComponentModel.TypeConverter.GetProperties(System.Object)" />.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="c32aa-301">
              <para>Override this method if the type you want to convert must re-create the object to change its value.  Use the <paramref name="context" /> parameter to extract additional information about the environment from which this converter is invoked. This parameter can be <see langword="null" />, so always check it. Also, properties on the context object can return <see langword="null" />.  The dictionary provided by the <paramref name="propertyValues" /> parameter has a series of name/value pairs, one for each property returned from <see cref="M:System.ComponentModel.TypeConverter.GetProperties(System.Object)" />.</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
        <altmember cref="T:System.Collections.IDictionary" />
      </Docs>
    </Member>
    <Member MemberName="GetConvertFromException">
      <MemberSignature Language="C#" Value="protected Exception GetConvertFromException (object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.Exception GetConvertFromException(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.GetConvertFromException(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetConvertFromException (value As Object) As Exception" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Exception ^ GetConvertFromException(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="member this.GetConvertFromException : obj -&gt; Exception" Usage="typeConverter.GetConvertFromException value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="c32aa-302">Die zu konvertierende <see cref="T:System.Object" />-Klasse oder <see langword="null" />, wenn das Objekt nicht verfügbar ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c32aa-302">The <see cref="T:System.Object" /> to convert, or <see langword="null" /> if the object is not available.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c32aa-303">Gibt eine Ausnahme zurück, wenn eine Konvertierung nicht erfolgen kann.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c32aa-303">Returns an exception to throw when a conversion cannot be performed.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c32aa-304">Eine <see cref="T:System.Exception" />-Klasse, die die Ausnahme darstellt, die ausgelöst wird, wenn eine Konvertierung nicht durchgeführt werden kann.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c32aa-304">An <see cref="T:System.Exception" /> that represents the exception to throw when a conversion cannot be performed.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="c32aa-305">Wird automatisch durch diese Methode ausgelöst.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c32aa-305">Automatically thrown by this method.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetConvertToException">
      <MemberSignature Language="C#" Value="protected Exception GetConvertToException (object value, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.Exception GetConvertToException(object value, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.GetConvertToException(System.Object,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetConvertToException (value As Object, destinationType As Type) As Exception" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Exception ^ GetConvertToException(System::Object ^ value, Type ^ destinationType);" />
      <MemberSignature Language="F#" Value="member this.GetConvertToException : obj * Type -&gt; Exception" Usage="typeConverter.GetConvertToException (value, destinationType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="c32aa-306">Die zu konvertierende <see cref="T:System.Object" />-Klasse oder <see langword="null" />, wenn das Objekt nicht verfügbar ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c32aa-306">The <see cref="T:System.Object" /> to convert, or <see langword="null" /> if the object is not available.</span>
          </span>
        </param>
        <param name="destinationType">
          <span data-ttu-id="c32aa-307">Eine <see cref="T:System.Type" />-Klasse, die den Typ darstellt, in den konvertiert werden sollte.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c32aa-307">A <see cref="T:System.Type" /> that represents the type the conversion was trying to convert to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c32aa-308">Gibt eine Ausnahme zurück, wenn eine Konvertierung nicht erfolgen kann.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c32aa-308">Returns an exception to throw when a conversion cannot be performed.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c32aa-309">Eine <see cref="T:System.Exception" />-Klasse, die die Ausnahme darstellt, die ausgelöst wird, wenn eine Konvertierung nicht durchgeführt werden kann.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c32aa-309">An <see cref="T:System.Exception" /> that represents the exception to throw when a conversion cannot be performed.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="c32aa-310">Wird automatisch durch diese Methode ausgelöst.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c32aa-310">Automatically thrown by this method.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetCreateInstanceSupported">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="c32aa-311">Gibt zurück, ob zum Ändern eines Werts für dieses Objekt ein Aufruf der <see cref="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" />-Methode erforderlich ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c32aa-311">Returns whether changing a value on this object requires a call to the <see cref="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" /> method to create a new value.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetCreateInstanceSupported">
      <MemberSignature Language="C#" Value="public bool GetCreateInstanceSupported ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool GetCreateInstanceSupported() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.GetCreateInstanceSupported" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCreateInstanceSupported () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool GetCreateInstanceSupported();" />
      <MemberSignature Language="F#" Value="member this.GetCreateInstanceSupported : unit -&gt; bool" Usage="typeConverter.GetCreateInstanceSupported " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c32aa-312">Gibt zurück, ob zum Ändern eines Werts für dieses Objekt ein Aufruf der <see cref="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" />-Methode erforderlich ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c32aa-312">Returns whether changing a value on this object requires a call to the <see cref="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" /> method to create a new value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c32aa-313">
            <see langword="true" />, wenn zum Ändern einer Eigenschaft für dieses Objekt die <see cref="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" />-Methode aufgerufen werden muss, um einen neuen Wert zu erstellen, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c32aa-313">
              <see langword="true" /> if changing a property on this object requires a call to <see cref="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" /> to create a new value; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCreateInstanceSupported">
      <MemberSignature Language="C#" Value="public virtual bool GetCreateInstanceSupported (System.ComponentModel.ITypeDescriptorContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetCreateInstanceSupported(class System.ComponentModel.ITypeDescriptorContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCreateInstanceSupported (context As ITypeDescriptorContext) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool GetCreateInstanceSupported(System::ComponentModel::ITypeDescriptorContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member GetCreateInstanceSupported : System.ComponentModel.ITypeDescriptorContext -&gt; bool&#xA;override this.GetCreateInstanceSupported : System.ComponentModel.ITypeDescriptorContext -&gt; bool" Usage="typeConverter.GetCreateInstanceSupported context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="c32aa-314">Ein <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, der einen Formatierungskontext bereitstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c32aa-314">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c32aa-315">Gibt zurück, ob zum Ändern eines Werts für dieses Objekt ein Aufruf der <see cref="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" />-Methode erforderlich ist, um unter Verwendung des angegebenen Kontexts einen neuen Wert zu erstellen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c32aa-315">Returns whether changing a value on this object requires a call to <see cref="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" /> to create a new value, using the specified context.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c32aa-316">
            <see langword="true" />, wenn zum Ändern einer Eigenschaft für dieses Objekt die <see cref="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" />-Methode aufgerufen werden muss, um einen neuen Wert zu erstellen, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c32aa-316">
              <see langword="true" /> if changing a property on this object requires a call to <see cref="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" /> to create a new value; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c32aa-317">Bei Implementierung in dieser Klasse gibt diese Methode immer `false` zurück.</span><span class="sxs-lookup"><span data-stu-id="c32aa-317">As implemented in this class, this method always returns `false`.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="c32aa-318">
            <para>Überschreiben Sie diese Methode, wenn der Typ, die, den Sie konvertieren möchten. das Objekt, dessen Wert ändern, neu erstellen muss.  Über den <paramref name="context" />-Parameter können zusätzliche Informationen über die Umgebung extrahiert werden, aus der dieser Konverter aufgerufen wurde. Dieser Parameter kann sein <see langword="null" />, daher immer überprüft werden. Außerdem können die Eigenschaften des Kontextobjekts zurückgeben <see langword="null" />.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="c32aa-318">
              <para>Override this method if the type you want to convert must re-create the object to change its value.  Use the <paramref name="context" /> parameter to extract additional information about the environment from which this converter is invoked. This parameter can be <see langword="null" />, so always check it. Also, properties on the context object can return <see langword="null" />.</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetProperties">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="c32aa-319">Gibt eine Auflistung von Eigenschaften für den Typ Array zurück, der durch den Wertparameter angegeben ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c32aa-319">Returns a collection of properties for the type of array specified by the value parameter.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetProperties">
      <MemberSignature Language="C#" Value="public System.ComponentModel.PropertyDescriptorCollection GetProperties (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ComponentModel.PropertyDescriptorCollection GetProperties(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.GetProperties(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetProperties (value As Object) As PropertyDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ComponentModel::PropertyDescriptorCollection ^ GetProperties(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="member this.GetProperties : obj -&gt; System.ComponentModel.PropertyDescriptorCollection" Usage="typeConverter.GetProperties value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="c32aa-320">Ein <see cref="T:System.Object" />, die den Typ des Arrays angibt, für den Eigenschaften abgerufen werden sollen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c32aa-320">An <see cref="T:System.Object" /> that specifies the type of array for which to get properties.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c32aa-321">Gibt eine Auflistung von Eigenschaften für den Typ Array zurück, der durch den Wertparameter angegeben ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c32aa-321">Returns a collection of properties for the type of array specified by the value parameter.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c32aa-322">Eine <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> mit den Eigenschaften, die für diesen Datentyp verfügbar sind, oder <see langword="null" />, wenn keine Eigenschaften vorhanden sind.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c32aa-322">A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> with the properties that are exposed for this data type, or <see langword="null" /> if there are no properties.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c32aa-323">Bei Implementierung in dieser Klasse gibt diese Methode immer `null` zurück.</span><span class="sxs-lookup"><span data-stu-id="c32aa-323">As implemented in this class, this method always returns `null`.</span></span>  
  
 <span data-ttu-id="c32aa-324">Standardmäßig ein Typ keine Eigenschaften zurück.</span><span class="sxs-lookup"><span data-stu-id="c32aa-324">By default, a type does not return properties.</span></span> <span data-ttu-id="c32aa-325">Eine einfache Implementierung dieser Methode kann Aufrufen <xref:System.ComponentModel.TypeDescriptor.GetProperties%2A> für den richtigen Datentyp.</span><span class="sxs-lookup"><span data-stu-id="c32aa-325">An easy implementation of this method can call <xref:System.ComponentModel.TypeDescriptor.GetProperties%2A> for the correct data type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetProperties">
      <MemberSignature Language="C#" Value="public System.ComponentModel.PropertyDescriptorCollection GetProperties (System.ComponentModel.ITypeDescriptorContext context, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ComponentModel.PropertyDescriptorCollection GetProperties(class System.ComponentModel.ITypeDescriptorContext context, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetProperties (context As ITypeDescriptorContext, value As Object) As PropertyDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ComponentModel::PropertyDescriptorCollection ^ GetProperties(System::ComponentModel::ITypeDescriptorContext ^ context, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="member this.GetProperties : System.ComponentModel.ITypeDescriptorContext * obj -&gt; System.ComponentModel.PropertyDescriptorCollection" Usage="typeConverter.GetProperties (context, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="c32aa-326">Ein <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, der einen Formatierungskontext bereitstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c32aa-326">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="c32aa-327">Ein <see cref="T:System.Object" />, die den Typ des Arrays angibt, für den Eigenschaften abgerufen werden sollen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c32aa-327">An <see cref="T:System.Object" /> that specifies the type of array for which to get properties.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c32aa-328">Gibt unter Verwendung des angegebenen Kontexts eine Auflistung der Eigenschaften für den Typ von Array zurück, der durch den Wertparameter angegeben ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c32aa-328">Returns a collection of properties for the type of array specified by the value parameter, using the specified context.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c32aa-329">Eine <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> mit den Eigenschaften, die für diesen Datentyp verfügbar sind, oder <see langword="null" />, wenn keine Eigenschaften vorhanden sind.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c32aa-329">A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> with the properties that are exposed for this data type, or <see langword="null" /> if there are no properties.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c32aa-330">Über den `context`-Parameter können zusätzliche Informationen über die Umgebung extrahiert werden, aus der dieser Konverter aufgerufen wurde.</span><span class="sxs-lookup"><span data-stu-id="c32aa-330">Use the `context` parameter to extract additional information about the environment from which this converter is invoked.</span></span> <span data-ttu-id="c32aa-331">Dieser Parameter kann sein `null`, daher immer überprüft werden.</span><span class="sxs-lookup"><span data-stu-id="c32aa-331">This parameter can be `null`, so always check it.</span></span> <span data-ttu-id="c32aa-332">Außerdem können die Eigenschaften des Kontextobjekts `null` zurückgeben.</span><span class="sxs-lookup"><span data-stu-id="c32aa-332">Also, properties on the context object can return `null`.</span></span>  
  
 <span data-ttu-id="c32aa-333">Bei Implementierung in dieser Klasse gibt diese Methode immer `null` zurück.</span><span class="sxs-lookup"><span data-stu-id="c32aa-333">As implemented in this class, this method always returns `null`.</span></span>  
  
 <span data-ttu-id="c32aa-334">Standardmäßig ein Typ keine Eigenschaften zurück.</span><span class="sxs-lookup"><span data-stu-id="c32aa-334">By default, a type does not return properties.</span></span> <span data-ttu-id="c32aa-335">Eine einfache Implementierung dieser Methode kann Aufrufen <xref:System.ComponentModel.TypeDescriptor.GetProperties%2A> für den richtigen Datentyp.</span><span class="sxs-lookup"><span data-stu-id="c32aa-335">An easy implementation of this method can call <xref:System.ComponentModel.TypeDescriptor.GetProperties%2A> for the correct data type.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <Member MemberName="GetProperties">
      <MemberSignature Language="C#" Value="public virtual System.ComponentModel.PropertyDescriptorCollection GetProperties (System.ComponentModel.ITypeDescriptorContext context, object value, Attribute[] attributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ComponentModel.PropertyDescriptorCollection GetProperties(class System.ComponentModel.ITypeDescriptorContext context, object value, class System.Attribute[] attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetProperties (context As ITypeDescriptorContext, value As Object, attributes As Attribute()) As PropertyDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::ComponentModel::PropertyDescriptorCollection ^ GetProperties(System::ComponentModel::ITypeDescriptorContext ^ context, System::Object ^ value, cli::array &lt;Attribute ^&gt; ^ attributes);" />
      <MemberSignature Language="F#" Value="abstract member GetProperties : System.ComponentModel.ITypeDescriptorContext * obj * Attribute[] -&gt; System.ComponentModel.PropertyDescriptorCollection&#xA;override this.GetProperties : System.ComponentModel.ITypeDescriptorContext * obj * Attribute[] -&gt; System.ComponentModel.PropertyDescriptorCollection" Usage="typeConverter.GetProperties (context, value, attributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="attributes" Type="System.Attribute[]" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="c32aa-336">Ein <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, der einen Formatierungskontext bereitstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c32aa-336">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="c32aa-337">Ein <see cref="T:System.Object" />, die den Typ des Arrays angibt, für den Eigenschaften abgerufen werden sollen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c32aa-337">An <see cref="T:System.Object" /> that specifies the type of array for which to get properties.</span>
          </span>
        </param>
        <param name="attributes">
          <span data-ttu-id="c32aa-338">Ein Array vom Typ <see cref="T:System.Attribute" />, das als Filter verwendet wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c32aa-338">An array of type <see cref="T:System.Attribute" /> that is used as a filter.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c32aa-339">Gibt unter Verwendung des angegebenen Kontexts und der angegebenen Attribute eine Auflistung der Eigenschaften für den Arraytyp zurück, der durch den Wertparameter angegeben ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c32aa-339">Returns a collection of properties for the type of array specified by the value parameter, using the specified context and attributes.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c32aa-340">Eine <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> mit den Eigenschaften, die für diesen Datentyp verfügbar sind, oder <see langword="null" />, wenn keine Eigenschaften vorhanden sind.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c32aa-340">A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> with the properties that are exposed for this data type, or <see langword="null" /> if there are no properties.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c32aa-341">Bei Implementierung in dieser Klasse gibt diese Methode immer `null` zurück.</span><span class="sxs-lookup"><span data-stu-id="c32aa-341">As implemented in this class, this method always returns `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="c32aa-342">
            <para>Überschreiben Sie diese Methode, wenn der Typ, die, den Sie konvertieren möchten, Eigenschaften unterstützt.  Über den <paramref name="context" />-Parameter können zusätzliche Informationen über die Umgebung extrahiert werden, aus der dieser Konverter aufgerufen wurde. Dieser Parameter kann sein <see langword="null" />, daher immer überprüft werden. Außerdem können die Eigenschaften des Kontextobjekts zurückgeben <see langword="null" />.  Das AttributeArray wird zum Filtern des Arrays. Die Attribute haben eine Mischung aus <see cref="T:System.Type" /> und <see cref="T:System.Attribute" /> Objekte. Filterung wird definiert, indem die folgenden Regeln: – ein <see cref="T:System.Type" /> wird als Platzhalter behandelt es entspricht eine Eigenschaft mit der <see cref="T:System.Type" /> in einen Satz von Attributen.  – Wenn eine Eigenschaft kein <see cref="T:System.Attribute" /> der gleichen Klasse, die Eigenschaft nicht in das zurückgegebene Array aufgenommen wird.  – Wenn das Attribut auf eine Instanz ist <see cref="T:System.Attribute" />, die Eigenschaft muss eine genaue Übereinstimmung, oder es ist nicht im zurückgegebenen Array enthalten.  -If ein <see cref="T:System.Attribute" /> Instanz angegeben ist und es ist die Standardeigenschaft, es ist im zurückgegebenen Array enthalten, auch wenn es keine Instanz von der <see cref="T:System.Attribute" /> in der Eigenschaft.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="c32aa-342">
              <para>Override this method if the type you want to convert supports properties.  Use the <paramref name="context" /> parameter to extract additional information about the environment from which this converter is invoked. This parameter can be <see langword="null" />, so always check it. Also, properties on the context object can return <see langword="null" />.  The attributes array is used to filter the array. The attributes can have a mix of <see cref="T:System.Type" /> and <see cref="T:System.Attribute" /> objects. Filtering is defined by the following rules:  -   A <see cref="T:System.Type" /> is treated as a wildcard; it matches a property that has the <see cref="T:System.Type" /> in its set of attributes.  -   If a property does not have an <see cref="T:System.Attribute" /> of the same class, the property is not included in the returned array.  -   If the attribute is an instance of <see cref="T:System.Attribute" />, the property must be an exact match or it is not included in the returned array.  -   If an <see cref="T:System.Attribute" /> instance is specified and it is the default property, it is included in the returned array even if there is no instance of the <see cref="T:System.Attribute" /> in the property.</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
        <altmember cref="T:System.Attribute" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetPropertiesSupported">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="c32aa-343">Gibt zurück, ob dieses Objekt Eigenschaften unterstützt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c32aa-343">Returns whether this object supports properties.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetPropertiesSupported">
      <MemberSignature Language="C#" Value="public bool GetPropertiesSupported ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool GetPropertiesSupported() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.GetPropertiesSupported" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPropertiesSupported () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool GetPropertiesSupported();" />
      <MemberSignature Language="F#" Value="member this.GetPropertiesSupported : unit -&gt; bool" Usage="typeConverter.GetPropertiesSupported " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c32aa-344">Gibt zurück, ob dieses Objekt Eigenschaften unterstützt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c32aa-344">Returns whether this object supports properties.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c32aa-345">
            <see langword="true" />, wenn <see cref="M:System.ComponentModel.TypeConverter.GetProperties(System.Object)" /> aufgerufen werden muss, um die Eigenschaften dieses Objekts zu ermitteln, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c32aa-345">
              <see langword="true" /> if <see cref="M:System.ComponentModel.TypeConverter.GetProperties(System.Object)" /> should be called to find the properties of this object; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c32aa-346">Bei Implementierung in dieser Klasse gibt diese Methode immer `false` zurück.</span><span class="sxs-lookup"><span data-stu-id="c32aa-346">As implemented in this class, this method always returns `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPropertiesSupported">
      <MemberSignature Language="C#" Value="public virtual bool GetPropertiesSupported (System.ComponentModel.ITypeDescriptorContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetPropertiesSupported(class System.ComponentModel.ITypeDescriptorContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPropertiesSupported (context As ITypeDescriptorContext) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool GetPropertiesSupported(System::ComponentModel::ITypeDescriptorContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member GetPropertiesSupported : System.ComponentModel.ITypeDescriptorContext -&gt; bool&#xA;override this.GetPropertiesSupported : System.ComponentModel.ITypeDescriptorContext -&gt; bool" Usage="typeConverter.GetPropertiesSupported context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="c32aa-347">Ein <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, der einen Formatierungskontext bereitstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c32aa-347">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c32aa-348">Gibt zurück, ob dieses Objekt Eigenschaften unter Verwendung des angegebenen Kontexts unterstützt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c32aa-348">Returns whether this object supports properties, using the specified context.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c32aa-349">
            <see langword="true" />, wenn <see cref="M:System.ComponentModel.TypeConverter.GetProperties(System.Object)" /> aufgerufen werden muss, um die Eigenschaften dieses Objekts zu ermitteln, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c32aa-349">
              <see langword="true" /> if <see cref="M:System.ComponentModel.TypeConverter.GetProperties(System.Object)" /> should be called to find the properties of this object; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c32aa-350">Bei Implementierung in dieser Klasse gibt diese Methode immer `false` zurück.</span><span class="sxs-lookup"><span data-stu-id="c32aa-350">As implemented in this class, this method always returns `false`.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="c32aa-351">
            <para>Überschreiben Sie diese Methode, wenn der Typ, die, den Sie konvertieren möchten, Eigenschaften unterstützt.  Über den <paramref name="context" />-Parameter können zusätzliche Informationen über die Umgebung extrahiert werden, aus der dieser Konverter aufgerufen wurde. Dieser Parameter kann sein <see langword="null" />, daher immer überprüft werden. Außerdem können die Eigenschaften des Kontextobjekts zurückgeben <see langword="null" />.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="c32aa-351">
              <para>Override this method if the type you want to convert supports properties.  Use the <paramref name="context" /> parameter to extract additional information about the environment from which this converter is invoked. This parameter can be <see langword="null" />, so always check it. Also, properties on the context object can return <see langword="null" />.</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetStandardValues">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="c32aa-352">Gibt eine Auflistung von Standardwerten für den Datentyp zurück, für den dieser Typkonverter vorgesehen ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c32aa-352">Returns a collection of standard values for the data type this type converter is designed for.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetStandardValues">
      <MemberSignature Language="C#" Value="public System.Collections.ICollection GetStandardValues ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.ICollection GetStandardValues() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.GetStandardValues" />
      <MemberSignature Language="VB.NET" Value="Public Function GetStandardValues () As ICollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::ICollection ^ GetStandardValues();" />
      <MemberSignature Language="F#" Value="member this.GetStandardValues : unit -&gt; System.Collections.ICollection" Usage="typeConverter.GetStandardValues " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c32aa-353">Gibt eine Auflistung von Standardwerten aus dem Standardkontext für den Datentyp zurück, für den dieser Typkonverter vorgesehen ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c32aa-353">Returns a collection of standard values from the default context for the data type this type converter is designed for.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c32aa-354">Eine <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" />, die eine Standardmenge zulässiger Werte enthält, oder <see langword="null" />, wenn der Datentyp keine Standardmenge von Werten unterstützt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c32aa-354">A <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /> containing a standard set of valid values, or <see langword="null" /> if the data type does not support a standard set of values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c32aa-355">Bei Implementierung in dieser Klasse gibt diese Methode immer `null` zurück.</span><span class="sxs-lookup"><span data-stu-id="c32aa-355">As implemented in this class, this method always returns `null`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetStandardValues">
      <MemberSignature Language="C#" Value="public virtual System.ComponentModel.TypeConverter.StandardValuesCollection GetStandardValues (System.ComponentModel.ITypeDescriptorContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ComponentModel.TypeConverter/StandardValuesCollection GetStandardValues(class System.ComponentModel.ITypeDescriptorContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetStandardValues (context As ITypeDescriptorContext) As TypeConverter.StandardValuesCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::ComponentModel::TypeConverter::StandardValuesCollection ^ GetStandardValues(System::ComponentModel::ITypeDescriptorContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member GetStandardValues : System.ComponentModel.ITypeDescriptorContext -&gt; System.ComponentModel.TypeConverter.StandardValuesCollection&#xA;override this.GetStandardValues : System.ComponentModel.ITypeDescriptorContext -&gt; System.ComponentModel.TypeConverter.StandardValuesCollection" Usage="typeConverter.GetStandardValues context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.TypeConverter+StandardValuesCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="c32aa-356">Eine <see cref="T:System.ComponentModel.ITypeDescriptorContext" />-Schnittstelle, die einen Formatierungskontext bereitstellt, mit dem zusätzliche Informationen über die Umgebung extrahiert werden können, aus der dieser Konverter aufgerufen wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c32aa-356">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context that can be used to extract additional information about the environment from which this converter is invoked.</span>
          </span>
          <span data-ttu-id="c32aa-357">Dieser Parameter oder Eigenschaften dieses Parameters können gleich <see langword="null" /> sein.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c32aa-357">This parameter or properties of this parameter can be <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c32aa-358">Gibt eine Auflistung von Standardwerten für den Datentyp zurück, auf den dieser Typkonverter ausgelegt ist, wenn ein Formatkontext bereitgestellt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c32aa-358">Returns a collection of standard values for the data type this type converter is designed for when provided with a format context.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c32aa-359">Eine <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" />, die einen Standardsatz gültiger Werte enthält, oder <see langword="null" />, wenn der Datentyp keinen Standardsatz von Werten unterstützt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c32aa-359">A <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /> that holds a standard set of valid values, or <see langword="null" /> if the data type does not support a standard set of values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c32aa-360">Gemäß der Implementierung in <xref:System.ComponentModel.TypeConverter>, diese Methode gibt immer `null`.</span><span class="sxs-lookup"><span data-stu-id="c32aa-360">As implemented in <xref:System.ComponentModel.TypeConverter>, this method always returns `null`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c32aa-361">Ein Beispiel für diese Funktion finden Sie in der <xref:System.ComponentModel.TypeConverter> Klasse.</span><span class="sxs-lookup"><span data-stu-id="c32aa-361">For an example on this function, see the <xref:System.ComponentModel.TypeConverter> class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="c32aa-362">
            <para>Überschreiben Sie diese Methode, wenn der Typ, die, den Sie konvertieren möchten, Standardwerten unterstützt wird.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="c32aa-362">
              <para>Override this method if the type you want to convert supports standard values.</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetStandardValuesExclusive">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="c32aa-363">Gibt zurück, ob die von <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> zurückgegebene Auflistung von Standardwerten eine exklusive Liste darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c32aa-363">Returns whether the collection of standard values returned from <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> is an exclusive list.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetStandardValuesExclusive">
      <MemberSignature Language="C#" Value="public bool GetStandardValuesExclusive ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool GetStandardValuesExclusive() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.GetStandardValuesExclusive" />
      <MemberSignature Language="VB.NET" Value="Public Function GetStandardValuesExclusive () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool GetStandardValuesExclusive();" />
      <MemberSignature Language="F#" Value="member this.GetStandardValuesExclusive : unit -&gt; bool" Usage="typeConverter.GetStandardValuesExclusive " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c32aa-364">Gibt zurück, ob die von <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> zurückgegebene Auflistung von Standardwerten eine exklusive Liste darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c32aa-364">Returns whether the collection of standard values returned from <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> is an exclusive list.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c32aa-365">
            <see langword="true" />, wenn die von der <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" />-Methode zurückgegebene <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> eine vollständige Liste möglicher Werte darstellt, oder <see langword="false" />, wenn andere Werte möglich sind.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c32aa-365">
              <see langword="true" /> if the <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /> returned from <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> is an exhaustive list of possible values; <see langword="false" /> if other values are possible.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c32aa-366">Bei Implementierung in dieser Klasse gibt diese Methode immer `false` zurück.</span><span class="sxs-lookup"><span data-stu-id="c32aa-366">As implemented in this class, this method always returns `false`.</span></span>  
  
 <span data-ttu-id="c32aa-367">Wenn es sich um eine exklusive Liste handelt, zum Beispiel bei einem Enumerationsdatentyp, sind keine anderen Werte gültig.</span><span class="sxs-lookup"><span data-stu-id="c32aa-367">If the list is exclusive, such as in an enumeration data type, then no other values are valid.</span></span> <span data-ttu-id="c32aa-368">Wenn die Liste nicht exklusiv ist, können in der von der <xref:System.ComponentModel.TypeConverter.GetStandardValues%2A>-Methode bereitgestellten Liste neben den Standardwerten auch andere Werte gültige Werte vorhanden sein.</span><span class="sxs-lookup"><span data-stu-id="c32aa-368">If the list is not exclusive, then other valid values might exist in addition to the list of standard values that the <xref:System.ComponentModel.TypeConverter.GetStandardValues%2A> method provides.</span></span> <span data-ttu-id="c32aa-369">Wenn die Werte exklusiv sind, ist es nicht möglich, diese Werte in der von der <xref:System.ComponentModel.TypeConverter.GetStandardValues%2A>-Methode zurückgegebenen Liste zu bearbeiten.</span><span class="sxs-lookup"><span data-stu-id="c32aa-369">If the values are exclusive, the list returned by <xref:System.ComponentModel.TypeConverter.GetStandardValues%2A> should not allow these values to be edited.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetStandardValuesExclusive">
      <MemberSignature Language="C#" Value="public virtual bool GetStandardValuesExclusive (System.ComponentModel.ITypeDescriptorContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetStandardValuesExclusive(class System.ComponentModel.ITypeDescriptorContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetStandardValuesExclusive (context As ITypeDescriptorContext) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool GetStandardValuesExclusive(System::ComponentModel::ITypeDescriptorContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member GetStandardValuesExclusive : System.ComponentModel.ITypeDescriptorContext -&gt; bool&#xA;override this.GetStandardValuesExclusive : System.ComponentModel.ITypeDescriptorContext -&gt; bool" Usage="typeConverter.GetStandardValuesExclusive context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="c32aa-370">Ein <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, der einen Formatierungskontext bereitstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c32aa-370">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c32aa-371">Gibt zurück, ob die Auflistung von Standardwerten, die von der <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" />-Methode unter Verwendung des angegebenen Kontexts zurückgegeben werden, eine exklusive Liste von möglichen Werten darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c32aa-371">Returns whether the collection of standard values returned from <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> is an exclusive list of possible values, using the specified context.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c32aa-372">
            <see langword="true" />, wenn die von der <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" />-Methode zurückgegebene <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> eine vollständige Liste möglicher Werte darstellt, oder <see langword="false" />, wenn andere Werte möglich sind.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c32aa-372">
              <see langword="true" /> if the <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /> returned from <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> is an exhaustive list of possible values; <see langword="false" /> if other values are possible.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c32aa-373">Bei Implementierung in dieser Klasse gibt diese Methode immer `false` zurück.</span><span class="sxs-lookup"><span data-stu-id="c32aa-373">As implemented in this class, this method always returns `false`.</span></span>  
  
 <span data-ttu-id="c32aa-374">Wenn es sich um eine exklusive Liste handelt, zum Beispiel bei einem Enumerationsdatentyp, sind keine anderen Werte gültig.</span><span class="sxs-lookup"><span data-stu-id="c32aa-374">If the list is exclusive, such as in an enumeration data type, then no other values are valid.</span></span> <span data-ttu-id="c32aa-375">Wenn die Liste nicht exklusiv ist, können in der von der <xref:System.ComponentModel.TypeConverter.GetStandardValues%2A>-Methode bereitgestellten Liste neben den Standardwerten auch andere Werte gültige Werte vorhanden sein.</span><span class="sxs-lookup"><span data-stu-id="c32aa-375">If the list is not exclusive, then other valid values might exist in addition to the list of standard values that the <xref:System.ComponentModel.TypeConverter.GetStandardValues%2A> method provides.</span></span> <span data-ttu-id="c32aa-376">Wenn die Werte exklusiv sind, ist es nicht möglich, diese Werte in der von der <xref:System.ComponentModel.TypeConverter.GetStandardValues%2A>-Methode zurückgegebenen Liste zu bearbeiten.</span><span class="sxs-lookup"><span data-stu-id="c32aa-376">If the values are exclusive, the list returned by <xref:System.ComponentModel.TypeConverter.GetStandardValues%2A> should not allow these values to be edited.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="c32aa-377">
            <para>Überschreiben Sie diese Methode, wenn der Typ, die, den Sie konvertieren möchten, Standardwerten unterstützt wird.  Über den <paramref name="context" />-Parameter können zusätzliche Informationen über die Umgebung extrahiert werden, aus der dieser Konverter aufgerufen wurde. Dieser Parameter kann sein <see langword="null" />, daher immer überprüft werden. Außerdem können die Eigenschaften des Kontextobjekts zurückgeben <see langword="null" />.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="c32aa-377">
              <para>Override this method if the type you want to convert supports standard values.  Use the <paramref name="context" /> parameter to extract additional information about the environment from which this converter is invoked. This parameter can be <see langword="null" />, so always check it. Also, properties on the context object can return <see langword="null" />.</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetStandardValuesSupported">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="c32aa-378">Gibt zurück, ob dieses Objekt einen Standardsatz von Werten unterstützt, die aus einer Liste ausgewählt werden können.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c32aa-378">Returns whether this object supports a standard set of values that can be picked from a list.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetStandardValuesSupported">
      <MemberSignature Language="C#" Value="public bool GetStandardValuesSupported ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool GetStandardValuesSupported() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.GetStandardValuesSupported" />
      <MemberSignature Language="VB.NET" Value="Public Function GetStandardValuesSupported () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool GetStandardValuesSupported();" />
      <MemberSignature Language="F#" Value="member this.GetStandardValuesSupported : unit -&gt; bool" Usage="typeConverter.GetStandardValuesSupported " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c32aa-379">Gibt zurück, ob dieses Objekt einen Standardsatz von Werten unterstützt, die aus einer Liste ausgewählt werden können.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c32aa-379">Returns whether this object supports a standard set of values that can be picked from a list.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c32aa-380">
            <see langword="true" />, wenn die <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" />-Methode aufgerufen werden muss, um eine vom Objekt unterstützte Standardmenge von Werten zu ermitteln, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c32aa-380">
              <see langword="true" /> if <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> should be called to find a common set of values the object supports; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetStandardValuesSupported">
      <MemberSignature Language="C#" Value="public virtual bool GetStandardValuesSupported (System.ComponentModel.ITypeDescriptorContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetStandardValuesSupported(class System.ComponentModel.ITypeDescriptorContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetStandardValuesSupported (context As ITypeDescriptorContext) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool GetStandardValuesSupported(System::ComponentModel::ITypeDescriptorContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member GetStandardValuesSupported : System.ComponentModel.ITypeDescriptorContext -&gt; bool&#xA;override this.GetStandardValuesSupported : System.ComponentModel.ITypeDescriptorContext -&gt; bool" Usage="typeConverter.GetStandardValuesSupported context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="c32aa-381">Ein <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, der einen Formatierungskontext bereitstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c32aa-381">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c32aa-382">Gibt zurück, ob dieses Objekt einen Standardsatz von Werten unterstützt, die unter Verwendung des angegebenen Kontexts aus einer Liste ausgewählt werden können.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c32aa-382">Returns whether this object supports a standard set of values that can be picked from a list, using the specified context.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c32aa-383">
            <see langword="true" />, wenn die <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" />-Methode aufgerufen werden muss, um eine vom Objekt unterstützte Standardmenge von Werten zu ermitteln, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c32aa-383">
              <see langword="true" /> if <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> should be called to find a common set of values the object supports; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c32aa-384">Bei Implementierung in dieser Klasse gibt diese Methode immer `false` zurück.</span><span class="sxs-lookup"><span data-stu-id="c32aa-384">As implemented in this class, this method always returns `false`.</span></span>  
  
 <span data-ttu-id="c32aa-385">Über den `context`-Parameter können zusätzliche Informationen über die Umgebung extrahiert werden, aus der dieser Konverter aufgerufen wurde.</span><span class="sxs-lookup"><span data-stu-id="c32aa-385">Use the `context` parameter to extract additional information about the environment from which this converter is invoked.</span></span> <span data-ttu-id="c32aa-386">Dieser Parameter kann sein `null`, daher immer überprüft werden.</span><span class="sxs-lookup"><span data-stu-id="c32aa-386">This parameter can be `null`, so always check it.</span></span> <span data-ttu-id="c32aa-387">Außerdem können die Eigenschaften des Kontextobjekts `null` zurückgeben.</span><span class="sxs-lookup"><span data-stu-id="c32aa-387">Also, properties on the context object can return `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="c32aa-388">
            <para>Überschreiben Sie diese Methode, wenn der Typ, die, den Sie konvertieren möchten, Standardwerten unterstützt wird.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="c32aa-388">
              <para>Override this method if the type you want to convert supports standard values.</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IsValid">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="c32aa-389">Ruft ab, ob das angegebene Werteobjekt für diesen Typ gültig ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c32aa-389">Returns whether the given value object is valid for this type.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsValid">
      <MemberSignature Language="C#" Value="public bool IsValid (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsValid(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.IsValid(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsValid (value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsValid(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="member this.IsValid : obj -&gt; bool" Usage="typeConverter.IsValid value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="c32aa-390">Das auf Gültigkeit zu prüfende Objekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c32aa-390">The object to test for validity.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c32aa-391">Ruft ab, ob das angegebene Werteobjekt für diesen Typ gültig ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c32aa-391">Returns whether the given value object is valid for this type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c32aa-392">
            <see langword="true" />, wenn der angegebene Wert für dieses Objekt gültig ist, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c32aa-392">
              <see langword="true" /> if the specified value is valid for this object; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c32aa-393">Ab [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], <xref:System.ComponentModel.TypeConverter.IsValid%2A> Methode fängt Ausnahmen von der <xref:System.ComponentModel.TypeConverter.CanConvertFrom%2A> und <xref:System.ComponentModel.TypeConverter.ConvertFrom%2A> Methoden.</span><span class="sxs-lookup"><span data-stu-id="c32aa-393">Starting in [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], the <xref:System.ComponentModel.TypeConverter.IsValid%2A> method catches exceptions from the <xref:System.ComponentModel.TypeConverter.CanConvertFrom%2A> and <xref:System.ComponentModel.TypeConverter.ConvertFrom%2A> methods.</span></span> <span data-ttu-id="c32aa-394">Wenn der Typ des eingegebenen Wert bewirkt, dass <xref:System.ComponentModel.TypeConverter.CanConvertFrom%2A> zurückzugebenden `false`, oder wenn der Eingabewert wird <xref:System.ComponentModel.TypeConverter.ConvertFrom%2A> zum Auslösen einer Ausnahme, die <xref:System.ComponentModel.TypeConverter.IsValid%2A> Methodenrückgabe `false`.</span><span class="sxs-lookup"><span data-stu-id="c32aa-394">If the input value type causes <xref:System.ComponentModel.TypeConverter.CanConvertFrom%2A> to return `false`, or if the input value causes <xref:System.ComponentModel.TypeConverter.ConvertFrom%2A> to raise an exception, the <xref:System.ComponentModel.TypeConverter.IsValid%2A> method returns `false`.</span></span>  
  
 <span data-ttu-id="c32aa-395">Um das Legacyverhalten zu aktivieren, fügen Sie die folgenden Zeilen in der Konfigurationsdatei der Anwendung, z. B. application1.exe.config, ein.</span><span class="sxs-lookup"><span data-stu-id="c32aa-395">To enable the legacy behavior, insert the following lines into the configuration file of the application, for example, application1.exe.config.</span></span>  
  
```xml  
<configuration>  
  <appSettings>  
    <add key="UseCompatibleTypeConverterBehavior" value="true" />  
  </appSettings>  
</configuration>  
```  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="c32aa-396">
            <para>Überschreiben Sie diese Methode, wenn der Typ, die, den Sie konvertieren möchten, Standardwerte unterstützt, die überprüft werden kann.  Die <see cref="M:System.ComponentModel.TypeConverter.IsValid(System.Object)" /> Methode wird verwendet, um einen Wert innerhalb des Typs zu überprüfen, anstatt zu bestimmen, ob <paramref name="value" /> in den angegebenen Typ konvertiert werden kann. Z. B. <see cref="M:System.ComponentModel.TypeConverter.IsValid(System.Object)" /> können verwendet werden, um zu bestimmen, ob ein angegebener Wert für einen Enumerationstyp ungültig ist. Ein Beispiel finden Sie unter <see cref="T:System.ComponentModel.EnumConverter" />.  Sie können einen eigenen Handler erstellen <c>WillConvertSucceed</c> Methode durch das wrapping der <see cref="Overload:System.ComponentModel.TypeConverter.ConvertTo" /> und <see cref="Overload:System.ComponentModel.TypeConverter.ConvertFrom" /> Methoden in Blöcke.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="c32aa-396">
              <para>Override this method if the type you want to convert supports standard values that can be validated.  The <see cref="M:System.ComponentModel.TypeConverter.IsValid(System.Object)" /> method is used to validate a value within the type rather than to determine if <paramref name="value" /> can be converted to the given type. For example, <see cref="M:System.ComponentModel.TypeConverter.IsValid(System.Object)" /> can be used to determine if a given value is valid for an enumeration type. For an example, see <see cref="T:System.ComponentModel.EnumConverter" />.  You can write your own <c>WillConvertSucceed</c> method by wrapping the <see cref="Overload:System.ComponentModel.TypeConverter.ConvertTo" /> and <see cref="Overload:System.ComponentModel.TypeConverter.ConvertFrom" /> methods in exception blocks.</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.ComponentModel.EnumConverter" />
      </Docs>
    </Member>
    <Member MemberName="IsValid">
      <MemberSignature Language="C#" Value="public virtual bool IsValid (System.ComponentModel.ITypeDescriptorContext context, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsValid(class System.ComponentModel.ITypeDescriptorContext context, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsValid (context As ITypeDescriptorContext, value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsValid(System::ComponentModel::ITypeDescriptorContext ^ context, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member IsValid : System.ComponentModel.ITypeDescriptorContext * obj -&gt; bool&#xA;override this.IsValid : System.ComponentModel.ITypeDescriptorContext * obj -&gt; bool" Usage="typeConverter.IsValid (context, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="c32aa-397">Ein <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, der einen Formatierungskontext bereitstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c32aa-397">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="c32aa-398">Die auf Gültigkeit zu überprüfende <see cref="T:System.Object" />-Klasse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c32aa-398">The <see cref="T:System.Object" /> to test for validity.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c32aa-399">Gibt zurück, ob das angegebene Wertobjekt für diesen Typ und den angegebenen Kontext gültig ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c32aa-399">Returns whether the given value object is valid for this type and for the specified context.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c32aa-400">
            <see langword="true" />, wenn der angegebene Wert für dieses Objekt gültig ist, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c32aa-400">
              <see langword="true" /> if the specified value is valid for this object; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c32aa-401">Über den `context`-Parameter können zusätzliche Informationen über die Umgebung extrahiert werden, aus der dieser Konverter aufgerufen wurde.</span><span class="sxs-lookup"><span data-stu-id="c32aa-401">Use the `context` parameter to extract additional information about the environment from which this converter is invoked.</span></span> <span data-ttu-id="c32aa-402">Dieser Parameter kann sein `null`, daher immer überprüft werden.</span><span class="sxs-lookup"><span data-stu-id="c32aa-402">This parameter can be `null`, so always check it.</span></span> <span data-ttu-id="c32aa-403">Außerdem können die Eigenschaften des Kontextobjekts `null` zurückgeben.</span><span class="sxs-lookup"><span data-stu-id="c32aa-403">Also, properties on the context object can return `null`.</span></span>  
  
 <span data-ttu-id="c32aa-404">Ab [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], <xref:System.ComponentModel.TypeConverter.IsValid%2A> Methode fängt Ausnahmen von der <xref:System.ComponentModel.TypeConverter.CanConvertFrom%2A> und <xref:System.ComponentModel.TypeConverter.ConvertFrom%2A> Methoden.</span><span class="sxs-lookup"><span data-stu-id="c32aa-404">Starting in [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], the <xref:System.ComponentModel.TypeConverter.IsValid%2A> method catches exceptions from the <xref:System.ComponentModel.TypeConverter.CanConvertFrom%2A> and <xref:System.ComponentModel.TypeConverter.ConvertFrom%2A> methods.</span></span> <span data-ttu-id="c32aa-405">Wenn der Typ des eingegebenen Wert bewirkt, dass <xref:System.ComponentModel.TypeConverter.CanConvertFrom%2A> zurückzugebenden `false`, oder wenn der Eingabewert wird <xref:System.ComponentModel.TypeConverter.ConvertFrom%2A> zum Auslösen einer Ausnahme, die <xref:System.ComponentModel.TypeConverter.IsValid%2A> Methodenrückgabe `false`.</span><span class="sxs-lookup"><span data-stu-id="c32aa-405">If the input value type causes <xref:System.ComponentModel.TypeConverter.CanConvertFrom%2A> to return `false`, or if the input value causes <xref:System.ComponentModel.TypeConverter.ConvertFrom%2A> to raise an exception, the <xref:System.ComponentModel.TypeConverter.IsValid%2A> method returns `false`.</span></span>  
  
 <span data-ttu-id="c32aa-406">Um das Legacyverhalten zu aktivieren, fügen Sie die folgenden Zeilen in der Konfigurationsdatei der Anwendung, z. B. application1.exe.config, ein.</span><span class="sxs-lookup"><span data-stu-id="c32aa-406">To enable the legacy behavior, insert the following lines into the configuration file of the application, for example, application1.exe.config.</span></span>  
  
```xml  
<configuration>  
  <appSettings>  
    <add key="UseCompatibleTypeConverterBehavior" value="true" />  
  </appSettings>  
</configuration>  
```  
  
   
  
## Examples  
 <span data-ttu-id="c32aa-407">Ein Beispiel dieser Funktion finden Sie unter den <xref:System.ComponentModel.TypeConverter> Klasse.</span><span class="sxs-lookup"><span data-stu-id="c32aa-407">For an example of this function, see the <xref:System.ComponentModel.TypeConverter> class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="c32aa-408">
            <para>Überschreiben Sie diese Methode, wenn der Typ, die, den Sie konvertieren möchten, Standardwerte unterstützt, die überprüft werden kann.  Die <see cref="M:System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)" /> Methode wird verwendet, um einen Wert innerhalb des Typs zu überprüfen, anstatt zu bestimmen, ob <paramref name="value" /> in den angegebenen Typ konvertiert werden kann. Z. B. <see cref="M:System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)" /> können verwendet werden, um zu bestimmen, ob ein angegebener Wert für einen Enumerationstyp ungültig ist. Ein Beispiel finden Sie unter <see cref="T:System.ComponentModel.EnumConverter" />.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="c32aa-408">
              <para>Override this method if the type you want to convert supports standard values that can be validated.  The <see cref="M:System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)" /> method is used to validate a value within the type rather than to determine if <paramref name="value" /> can be converted to the given type. For example, <see cref="M:System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)" /> can be used to determine if a given value is valid for an enumeration type. For an example, see <see cref="T:System.ComponentModel.EnumConverter" />.</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
        <altmember cref="T:System.ComponentModel.EnumConverter" />
      </Docs>
    </Member>
    <Member MemberName="SortProperties">
      <MemberSignature Language="C#" Value="protected System.ComponentModel.PropertyDescriptorCollection SortProperties (System.ComponentModel.PropertyDescriptorCollection props, string[] names);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.ComponentModel.PropertyDescriptorCollection SortProperties(class System.ComponentModel.PropertyDescriptorCollection props, string[] names) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.SortProperties(System.ComponentModel.PropertyDescriptorCollection,System.String[])" />
      <MemberSignature Language="VB.NET" Value="Protected Function SortProperties (props As PropertyDescriptorCollection, names As String()) As PropertyDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::ComponentModel::PropertyDescriptorCollection ^ SortProperties(System::ComponentModel::PropertyDescriptorCollection ^ props, cli::array &lt;System::String ^&gt; ^ names);" />
      <MemberSignature Language="F#" Value="member this.SortProperties : System.ComponentModel.PropertyDescriptorCollection * string[] -&gt; System.ComponentModel.PropertyDescriptorCollection" Usage="typeConverter.SortProperties (props, names)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="props" Type="System.ComponentModel.PropertyDescriptorCollection" />
        <Parameter Name="names" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="props">
          <span data-ttu-id="c32aa-409">Eine <see cref="T:System.ComponentModel.PropertyDescriptorCollection" />-Klasse mit den zu sortierenden Eigenschaften.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c32aa-409">A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> that has the properties to sort.</span>
          </span>
        </param>
        <param name="names">
          <span data-ttu-id="c32aa-410">Ein Array von Namen in der Reihenfolge, in der die Eigenschaften in der Auflistung angezeigt werden sollen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c32aa-410">An array of names in the order you want the properties to appear in the collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c32aa-411">Sortiert eine Auflistung von Eigenschaften.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c32aa-411">Sorts a collection of properties.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c32aa-412">Eine <see cref="T:System.ComponentModel.PropertyDescriptorCollection" />-Klasse mit den sortierten Eigenschaften.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c32aa-412">A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> that contains the sorted properties.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c32aa-413">Alle Eigenschaften in der Auflistung, die nicht bereits in das Array der Namen sind sind alphabetisch am Ende hinzugefügt.</span><span class="sxs-lookup"><span data-stu-id="c32aa-413">All properties in the collection that are not already in the array of names are added alphabetically to the end.</span></span> <span data-ttu-id="c32aa-414">Wenn die `names` -Parameter ist ein leeres Array oder `null`, in der Auflistung alle Eigenschaften alphabetisch sortiert sind.</span><span class="sxs-lookup"><span data-stu-id="c32aa-414">If the `names` parameter is an empty array or `null`, all the properties in the collection are sorted alphabetically.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.PropertyDescriptorCollection" />
        <altmember cref="T:System.ComponentModel.TypeConverter" />
      </Docs>
    </Member>
  </Members>
</Type>