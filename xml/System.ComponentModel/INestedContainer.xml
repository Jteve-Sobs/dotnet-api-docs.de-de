<Type Name="INestedContainer" FullName="System.ComponentModel.INestedContainer">
  <Metadata><Meta Name="ms.openlocfilehash" Value="21b47774c52706ba78a00f29fa41232df1f9e8f9" /><Meta Name="ms.sourcegitcommit" Value="8ae9a18b248625c8e1851e607c00346a64849587" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="12/17/2019" /><Meta Name="ms.locfileid" Value="75146959" /></Metadata><TypeSignature Language="C#" Value="public interface INestedContainer : IDisposable, System.ComponentModel.IContainer" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract INestedContainer implements class System.ComponentModel.IContainer, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.INestedContainer" />
  <TypeSignature Language="VB.NET" Value="Public Interface INestedContainer&#xA;Implements IContainer, IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public interface class INestedContainer : IDisposable, System::ComponentModel::IContainer" />
  <TypeSignature Language="F#" Value="type INestedContainer = interface&#xA;    interface IContainer&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ComponentModel.IContainer</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="6f08e-101">Stellt Funktionalität für geschachtelte Container bereit, die logisch 0 (null) oder mehr Komponenten enthalten und von einer übergeordneten Komponente besessen werden.</span><span class="sxs-lookup"><span data-stu-id="6f08e-101">Provides functionality for nested containers, which logically contain zero or more other components and are owned by a parent component.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6f08e-102">Die <xref:System.ComponentModel.INestedContainer>-Schnittstelle fügt der <xref:System.ComponentModel.IContainer> Schnittstelle das Konzept einer besitzenden Komponente hinzu.</span><span class="sxs-lookup"><span data-stu-id="6f08e-102">The <xref:System.ComponentModel.INestedContainer> interface adds the concept of an owning component to the <xref:System.ComponentModel.IContainer> interface.</span></span> <span data-ttu-id="6f08e-103">Bei einem in einem Container enthaltenen Container handelt es sich um ein Objekt, das logisch, aber nicht notwendigerweise visuell, NULL oder mehr untergeordnete Komponenten enthält und sich im Besitz einer übergeordneten Komponente befindet.</span><span class="sxs-lookup"><span data-stu-id="6f08e-103">A nested container is an object that logically, but not necessarily visually, contains zero or more child components and is owned by some parent component.</span></span> <span data-ttu-id="6f08e-104">Bei der visuellen Kapselung ist die besitzende Komponente häufig ein anderer Container.</span><span class="sxs-lookup"><span data-stu-id="6f08e-104">For visual containment, the owning component is often another container.</span></span>  
  
 <span data-ttu-id="6f08e-105">Durch die Verwendung von untergeordneten Containern können Abschnitte eines Steuer Elements entworfen werden, ohne dass eine explizite serialisierte Member-Variable oder ein benutzerdefiniertes Serialisierungsprogramm für jedes unter Steuerelement erforderlich ist.</span><span class="sxs-lookup"><span data-stu-id="6f08e-105">Nested containers allow sections of a control to be designable, without requiring an explicit serialized member variable or a custom serializer for each subcontrol.</span></span> <span data-ttu-id="6f08e-106">Stattdessen verwaltet der Formular-Designer einen Master Container von-Komponenten.</span><span class="sxs-lookup"><span data-stu-id="6f08e-106">Instead, the form designer maintains one master container of components.</span></span> <span data-ttu-id="6f08e-107">Der Standort jeder Komponente verfügt möglicherweise über einen Container, der einen Ort zum Einfügen zusätzlicher Komponenten bereitstellt.</span><span class="sxs-lookup"><span data-stu-id="6f08e-107">Each component's site may have a nested container that provides a place to put extra components.</span></span> <span data-ttu-id="6f08e-108">Wenn eine Komponente in einem in einem Container enthaltenen Container positioniert ist, ist der empfangene Name eine Kombination aus dem angegebenen Namen und dem Namen der besitzenden Komponente.</span><span class="sxs-lookup"><span data-stu-id="6f08e-108">When a component is sited in a nested container, the name it receives is a combination of its given name and its owning component's name.</span></span> <span data-ttu-id="6f08e-109">Darüber hinaus haben Komponenten, die einem Container mit einem Container hinzugefügt werden, Vollzugriff auf die Dienste des übergeordneten Containers, und der untergeordnete Container bietet das gleiche Verhalten wie das übergeordnete Container in Bezug auf das Hinzufügen neuer Komponenten.</span><span class="sxs-lookup"><span data-stu-id="6f08e-109">Additionally, components added to a nested container have full access to the services of the parent container, and the nested container provides the same behavior of the parent with respect to adding new components.</span></span> <span data-ttu-id="6f08e-110">Der Container erstellt den Designer für jede enthaltene Komponente und aktiviert so die Unterstützung für die Entwurfszeit.</span><span class="sxs-lookup"><span data-stu-id="6f08e-110">The nested container will create the designer for each component it contains, thereby enabling design-time support.</span></span> <span data-ttu-id="6f08e-111">Da standardcodeserialisierungsinitialisierer nicht in der Liste der in einem Container genannten Container angezeigt werden, werden diese Komponenten nur serialisiert, wenn Sie durch das Durchlaufen der Komponenten im primären Container abgerufen werden können.</span><span class="sxs-lookup"><span data-stu-id="6f08e-111">Because standard code serializers do not look at nested containers, these components are only serialized if a path to them can be obtained by walking the components in the primary container.</span></span>  
  
 <span data-ttu-id="6f08e-112">Sie können sich durch die Abfrage von einem Komponenten Standort für Dienste vom Typ <xref:System.ComponentModel.INestedContainer>befinden.</span><span class="sxs-lookup"><span data-stu-id="6f08e-112">Nested containers can be found by querying a component's site for services of type <xref:System.ComponentModel.INestedContainer>.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.NestedContainer" />
    <altmember cref="T:System.ComponentModel.ContainerFilterService" />
    <altmember cref="M:System.ComponentModel.NestedContainer.GetService(System.Type)" />
  </Docs>
  <Members>
    <Member MemberName="Owner">
      <MemberSignature Language="C#" Value="public System.ComponentModel.IComponent Owner { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.IComponent Owner" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.INestedContainer.Owner" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Owner As IComponent" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ComponentModel::IComponent ^ Owner { System::ComponentModel::IComponent ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Owner : System.ComponentModel.IComponent" Usage="System.ComponentModel.INestedContainer.Owner" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.IComponent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6f08e-113">Ruft die besitzende Komponente für den geschachtelten Container ab.</span><span class="sxs-lookup"><span data-stu-id="6f08e-113">Gets the owning component for the nested container.</span></span></summary>
        <value><span data-ttu-id="6f08e-114">Die <see cref="T:System.ComponentModel.IComponent" />, die den geschachtelten Container besitzt.</span><span class="sxs-lookup"><span data-stu-id="6f08e-114">The <see cref="T:System.ComponentModel.IComponent" /> that owns the nested container.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6f08e-115">Bei der besitzenden Komponente handelt es sich um das Merkmal, das die Unterscheidung von nten Containern aus normalen Containern</span><span class="sxs-lookup"><span data-stu-id="6f08e-115">The owning component is the characteristic that differentiates nested containers from ordinary containers.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.IComponent" />
        <altmember cref="T:System.ComponentModel.IContainer" />
        <altmember cref="P:System.ComponentModel.NestedContainer.Owner" />
      </Docs>
    </Member>
  </Members>
</Type>
