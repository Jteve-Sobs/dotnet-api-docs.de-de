<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="TypeDescriptionProvider.xml" source-language="en-US" target-language="de-DE">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac578810a0d3161e71e0b4f17da0881ab026be14b8d.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">78810a0d3161e71e0b4f17da0881ab026be14b8d</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.TypeDescriptionProvider">
          <source>Provides supplemental metadata to the <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeDescriptor" /&gt;</ph>.</source>
          <target state="translated">Stellt ergänzende Metadaten für <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeDescriptor" /&gt;</ph> bereit.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.TypeDescriptionProvider">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptionProvider&gt;</ph> class dynamically extends the type information associated with a type or object by adding, modifying, or hiding characteristics such as attributes, properties, and events.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptionProvider&gt;</ph> Klasse dynamisch erweitert die Typinformationen, die einen Typ oder ein Objekt durch Hinzufügen, ändern oder Ausblenden von Eigenschaften, z. B. Attribute, Eigenschaften und Ereignisse zugeordnet.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.TypeDescriptionProvider">
          <source>There can be multiple type description provider classes that offer metadata to a single <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph>.</source>
          <target state="translated">Kann mehrere Beschreibung Anbieterklassen, die Metadaten zu einem einzelnen bieten <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.TypeDescriptionProvider">
          <source>There are two ways to associate a <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptionProvider&gt;</ph> with a <ph id="ph2">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph>:</source>
          <target state="translated">Es gibt zwei Möglichkeiten zum Zuordnen einer <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptionProvider&gt;</ph> mit einem <ph id="ph2">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph>:</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.TypeDescriptionProvider">
          <source>At design time, when the target class can be assigned the appropriate <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptionProviderAttribute&gt;</ph> tag.</source>
          <target state="translated">Zur Entwurfszeit, wenn Zielklasse kann die entsprechende zugewiesen werden <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptionProviderAttribute&gt;</ph> Tag.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.TypeDescriptionProvider">
          <source>At run time, when one of the <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.AddProvider%2A&gt;</ph> methods of the <ph id="ph2">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph> class can be called.</source>
          <target state="translated">Zur Laufzeit Wenn mindestens ein von der <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.AddProvider%2A&gt;</ph> Methoden der der <ph id="ph2">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph> Klasse aufgerufen werden kann.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.TypeDescriptionProvider">
          <source>These overloaded methods require either the target object or its class type.</source>
          <target state="translated">Diese überladenen Methoden erfordern das Zielobjekt oder sein Klassentyp.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.TypeDescriptionProvider">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptionProvider&gt;</ph> class relies on a parent object of the same type, supplied during construction.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptionProvider&gt;</ph> -Klasse stützt sich auf ein übergeordnetes Objekt des gleichen Typs, während der Erstellung angegeben.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.TypeDescriptionProvider">
          <source>This allows classes that derive from <ph id="ph1">&lt;xref:System.ComponentModel.CustomTypeDescriptor&gt;</ph> to selectively override methods.</source>
          <target state="translated">Dadurch können abgeleitete Klassen <ph id="ph1">&lt;xref:System.ComponentModel.CustomTypeDescriptor&gt;</ph> selektiv Methoden überschreiben.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.TypeDescriptionProvider">
          <source>Instances of <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptionProvider&gt;</ph> are only built upon demand, minimizing the impact of custom type information on performance.</source>
          <target state="translated">Instanzen von <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptionProvider&gt;</ph> werden nur auf Anforderung erstellt und zur Minimierung der Auswirkungen von benutzerdefinierten Typinformationen auf die Leistung.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.TypeDescriptionProvider">
          <source>This class cannot be inherited.</source>
          <target state="translated">Diese Klasse kann nicht vererbt werden.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.TypeDescriptionProvider">
          <source>Your derived type might be marked as <ph id="ph1">&lt;see langword="internal" /&gt;</ph> or <ph id="ph2">&lt;see langword="private" /&gt;</ph>, but an instance of your type can be created with the <ph id="ph3">&lt;see cref="T:System.ComponentModel.TypeDescriptor" /&gt;</ph> class.</source>
          <target state="translated">Der abgeleitete Typ kann als gekennzeichnet sein <ph id="ph1">&lt;see langword="internal" /&gt;</ph> oder <ph id="ph2">&lt;see langword="private" /&gt;</ph>, jedoch eine Instanz des Typs erstellt werden kann, mit der <ph id="ph3">&lt;see cref="T:System.ComponentModel.TypeDescriptor" /&gt;</ph> Klasse.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.TypeDescriptionProvider">
          <source>Do not write insecure code by assuming the caller is trusted.</source>
          <target state="translated">Führen Sie nicht geschrieben Sie werden, vorausgesetzt, des Aufrufers von unsicheren Code als vertrauenswürdig eingestuft wird.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.TypeDescriptionProvider">
          <source>Assume instead that callers might create instances of your type in partial trust.</source>
          <target state="translated">Nehmen Sie stattdessen, dass Aufrufer Instanzen des Typs unter teilweiser Vertrauenswürdigkeit erstellen können.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.TypeDescriptionProvider">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeDescriptionProvider" /&gt;</ph> class.</source>
          <target state="translated">Initialisiert eine neue Instanz der <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeDescriptionProvider" /&gt;</ph>-Klasse.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptionProvider.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeDescriptionProvider" /&gt;</ph> class.</source>
          <target state="translated">Initialisiert eine neue Instanz der <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeDescriptionProvider" /&gt;</ph>-Klasse.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptionProvider.#ctor">
          <source>This constructor is equivalent to calling the other <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptionProvider.%23ctor%28System.ComponentModel.TypeDescriptionProvider%29&gt;</ph> constructor with a parameter value that is <ph id="ph2">`null`</ph>.</source>
          <target state="translated">Dieser Konstruktor entspricht dem Aufrufen des anderen <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptionProvider.%23ctor%28System.ComponentModel.TypeDescriptionProvider%29&gt;</ph> Konstruktor mit einem Parameterwert, der <ph id="ph2">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptionProvider.#ctor(System.ComponentModel.TypeDescriptionProvider)">
          <source>The parent type description provider.</source>
          <target state="translated">Der übergeordnete Typbeschreibungsanbieter.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptionProvider.#ctor(System.ComponentModel.TypeDescriptionProvider)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeDescriptionProvider" /&gt;</ph> class using a parent type description provider.</source>
          <target state="translated">Initialisiert eine neue Instanz der <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeDescriptionProvider" /&gt;</ph>-Klasse unter Verwendung eines übergeordneten Typbeschreibungsanbieters.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptionProvider.#ctor(System.ComponentModel.TypeDescriptionProvider)">
          <source>If the <ph id="ph1">`parent`</ph> parameter is <ph id="ph2">`null`</ph>, all <ph id="ph3">&lt;xref:System.ComponentModel.TypeDescriptionProvider&gt;</ph> methods will return default values.</source>
          <target state="translated">Wenn die <ph id="ph1">`parent`</ph> Parameter ist <ph id="ph2">`null`</ph>, dass alle <ph id="ph3">&lt;xref:System.ComponentModel.TypeDescriptionProvider&gt;</ph> Methoden Standardwerte zurück.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptionProvider.#ctor(System.ComponentModel.TypeDescriptionProvider)">
          <source>Otherwise, all <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptionProvider&gt;</ph> methods will delegate to the methods of <ph id="ph2">`parent`</ph>.</source>
          <target state="translated">Andernfalls alle <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptionProvider&gt;</ph> Methoden delegiert an die Methoden der <ph id="ph2">`parent`</ph>.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptionProvider.#ctor(System.ComponentModel.TypeDescriptionProvider)">
          <source>The following table shows the default return values for <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptionProvider&gt;</ph> methods.</source>
          <target state="translated">Die folgende Tabelle zeigt die Standard-Rückgabewerte für <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptionProvider&gt;</ph> Methoden.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptionProvider.#ctor(System.ComponentModel.TypeDescriptionProvider)">
          <source>Method</source>
          <target state="translated">Methode</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptionProvider.#ctor(System.ComponentModel.TypeDescriptionProvider)">
          <source>Default return value</source>
          <target state="translated">Standard-Rückgabewert</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptionProvider.#ctor(System.ComponentModel.TypeDescriptionProvider)">
          <source>A newly created object through a call to the <ph id="ph1">&lt;xref:System.Activator.CreateInstance%2A&gt;</ph> method.</source>
          <target state="translated">Ein neu erstelltes Objekt durch einen Aufruf der <ph id="ph1">&lt;xref:System.Activator.CreateInstance%2A&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptionProvider.#ctor(System.ComponentModel.TypeDescriptionProvider)">
          <source>A default instance of a <ph id="ph1">&lt;xref:System.ComponentModel.CustomTypeDescriptor&gt;</ph> class.</source>
          <target state="translated">Eine Standardinstanz von einer <ph id="ph1">&lt;xref:System.ComponentModel.CustomTypeDescriptor&gt;</ph> Klasse.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptionProvider.#ctor(System.ComponentModel.TypeDescriptionProvider)">
          <source>A default instance of a <ph id="ph1">&lt;xref:System.ComponentModel.CustomTypeDescriptor&gt;</ph> class.</source>
          <target state="translated">Eine Standardinstanz von einer <ph id="ph1">&lt;xref:System.ComponentModel.CustomTypeDescriptor&gt;</ph> Klasse.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptionProvider.#ctor(System.ComponentModel.TypeDescriptionProvider)">
          <source>The <ph id="ph1">`objectType`</ph> first parameter.</source>
          <target state="translated">Die <ph id="ph1">`objectType`</ph> ersten Parameter.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptionProvider.CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])">
          <source>An optional service provider.</source>
          <target state="translated">Ein optionaler Dienstanbieter.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptionProvider.CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])">
          <source>The type of object to create.</source>
          <target state="translated">Der Typ des zu erstellenden Objekts.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptionProvider.CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])">
          <source>This parameter is never <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Dieser Parameter ist nie <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptionProvider.CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])">
          <source>An optional array of types that represent the parameter types to be passed to the object's constructor.</source>
          <target state="translated">Ein optionales Array von Typen, die die Parametertypen darstellen, die an den Konstruktor des Objekts übergeben werden sollen.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptionProvider.CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])">
          <source>This array can be <ph id="ph1">&lt;see langword="null" /&gt;</ph> or of zero length.</source>
          <target state="translated">Dieses Array kann <ph id="ph1">&lt;see langword="null" /&gt;</ph> sein oder die Länge 0 haben.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptionProvider.CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])">
          <source>An optional array of parameter values to pass to the object's constructor.</source>
          <target state="translated">Ein optionales Array von Parameterwerten, die an den Konstruktor des Objekts übergeben werden.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptionProvider.CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])">
          <source>Creates an object that can substitute for another data type.</source>
          <target state="translated">Erstellt ein Objekt, das einen anderen Datentyp ersetzen kann.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptionProvider.CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])">
          <source>The substitute <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph>.</source>
          <target state="translated">Das ersetzende <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptionProvider.CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])">
          <source>The <ph id="ph1">&lt;xref:System.IServiceProvider&gt;</ph> specified by the <ph id="ph2">`provider`</ph> parameter is passed in by the <ph id="ph3">&lt;xref:System.ComponentModel.TypeDescriptor.CreateInstance%2A?displayProperty=nameWithType&gt;</ph> method of the <ph id="ph4">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph> class.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.IServiceProvider&gt;</ph> gemäß der <ph id="ph2">`provider`</ph> Parameter durch Übergeben der <ph id="ph3">&lt;xref:System.ComponentModel.TypeDescriptor.CreateInstance%2A?displayProperty=nameWithType&gt;</ph> Methode der <ph id="ph4">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph> Klasse.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptionProvider.CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])">
          <source>If <ph id="ph1">`provider`</ph> is not <ph id="ph2">`null`</ph>, the service provider can be used by the type description provider to obtain additional context about the creation call.</source>
          <target state="translated">Wenn <ph id="ph1">`provider`</ph> nicht <ph id="ph2">`null`</ph>, der Service-Anbieter kann von den Typbeschreibungsanbieter verwendet werden, um zusätzlichen Kontext über den Erstellungsaufruf erhalten.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptionProvider.CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptionProvider.CreateInstance%2A&gt;</ph> method is <ph id="ph2">`virtual`</ph> and, by default, returns the result of the <ph id="ph3">&lt;xref:System.Activator.CreateInstance%2A?displayProperty=nameWithType&gt;</ph> method if <ph id="ph4">`provider`</ph> is <ph id="ph5">`null`</ph>.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptionProvider.CreateInstance%2A&gt;</ph> Methode ist <ph id="ph2">`virtual`</ph> und in der Standardeinstellung gibt das Ergebnis der <ph id="ph3">&lt;xref:System.Activator.CreateInstance%2A?displayProperty=nameWithType&gt;</ph> Methode Wenn <ph id="ph4">`provider`</ph> ist <ph id="ph5">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptionProvider.CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])">
          <source>If <ph id="ph1">`provider`</ph> is <ph id="ph2">`null`</ph>, this method will invoke the <ph id="ph3">&lt;xref:System.ComponentModel.TypeDescriptionProvider.CreateInstance%2A&gt;</ph> method of the parent provider.</source>
          <target state="translated">Wenn <ph id="ph1">`provider`</ph> ist <ph id="ph2">`null`</ph>, ruft diese Methode die <ph id="ph3">&lt;xref:System.ComponentModel.TypeDescriptionProvider.CreateInstance%2A&gt;</ph> Methode des übergeordneten Anbieters.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptionProvider.CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])">
          <source>If the derived class is not interested in providing a substitute instance, it should just call the base implementation.</source>
          <target state="translated">Wenn die abgeleitete Klasse nicht in eine Ersatz-Instanz bereitstellen möchte, sollte er einfach die basisimplementierung aufrufen.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptionProvider.GetCache(System.Object)">
          <source>The object for which to get the cache.</source>
          <target state="translated">Das Objekt, für das der Cache abgerufen werden soll.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptionProvider.GetCache(System.Object)">
          <source>Gets a per-object cache, accessed as an <ph id="ph1">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> of key/value pairs.</source>
          <target state="translated">Ruft einen objektbezogenen Cache ab, auf den als <ph id="ph1">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> der Schlüssel-Wert-Paare zugegriffen wird.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptionProvider.GetCache(System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> if the provided object supports caching; otherwise, <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph>, wenn das bereitgestellte Objekt das Zwischenspeichern unterstützt; andernfalls <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptionProvider.GetCache(System.Object)">
          <source>A <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph> may need to perform complex operations on collections of metadata.</source>
          <target state="translated">Ein <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph> erfordern u. u. komplexe Vorgänge für Auflistungen von Metadaten.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptionProvider.GetCache(System.Object)">
          <source>Because types are not unloaded for the life of a domain, the <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph> class will automatically cache the results of these operations based on type.</source>
          <target state="translated">Da die Typen nicht für die Lebensdauer einer Domäne, entladen werden, die <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph> Klasse werden die Ergebnisse dieser Vorgänge basierend auf Typ automatisch zwischengespeichert.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptionProvider.GetCache(System.Object)">
          <source>However, some operations use live object instances.</source>
          <target state="translated">Allerdings verwenden einige Vorgänge live Objektinstanzen.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptionProvider.GetCache(System.Object)">
          <source>These operations cannot be cached within the <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph> class because caching them would prevent the object from being garbage collected.</source>
          <target state="translated">Diese Vorgänge können nicht zwischengespeichert werden, innerhalb der <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph> Klasse, da zwischenzuspeichern das Objekt verhindern würde Garbage collection.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptionProvider.GetCache(System.Object)">
          <source>Instead, the <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph> class allows for a per-object cache, accessed as an <ph id="ph2">&lt;xref:System.Collections.IDictionary&gt;</ph> of key/value pairs, to exist on an object.</source>
          <target state="translated">Stattdessen die <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph> -Klasse ermöglicht das für einen Cache pro-Objekt zugegriffen wird, als ein <ph id="ph2">&lt;xref:System.Collections.IDictionary&gt;</ph> von Schlüssel/Wert-Paaren auf ein Objekt vorhanden ist.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptionProvider.GetCache(System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptionProvider.GetCache%2A&gt;</ph> method returns an instance of this cache.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptionProvider.GetCache%2A&gt;</ph> Methode gibt eine Instanz dieses Caches zurück.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptionProvider.GetCache(System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptionProvider.GetCache%2A&gt;</ph> method will return <ph id="ph2">`null`</ph> if there is no supported cache for an object.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptionProvider.GetCache%2A&gt;</ph> Methode zurück <ph id="ph2">`null`</ph> Wenn es keinen unterstützten Cache für ein Objekt.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptionProvider.GetCache(System.Object)">
          <source>The default <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptionProvider&gt;</ph> used by <ph id="ph2">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph> examines the object to see if it is a sited component that implements the <ph id="ph3">&lt;xref:System.ComponentModel.Design.IDictionaryService&gt;</ph> interface.</source>
          <target state="translated">Die Standardeinstellung <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptionProvider&gt;</ph> verwendeten <ph id="ph2">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph> überprüft das Objekt, um festzustellen, ob es sich um eine positionierte Komponente handelt, die implementiert die <ph id="ph3">&lt;xref:System.ComponentModel.Design.IDictionaryService&gt;</ph> Schnittstelle.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptionProvider.GetCache(System.Object)">
          <source>If the object is, it uses the dictionary service to store the object's cache.</source>
          <target state="translated">Wenn das Objekt ist, verwendet er die Wörterbuchdienst zum Speichern des Objekts Caches.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptionProvider.GetCache(System.Object)">
          <source>Otherwise, the object it returns <ph id="ph1">`null`</ph>.</source>
          <target state="translated">Zurückgegeben, andernfalls das Objekt <ph id="ph1">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptionProvider.GetCache(System.Object)">
          <source>Other type description providers may provide their own implementation here.</source>
          <target state="translated">Andere Typbeschreibungsanbieter können hier ihre eigene Implementierung bereitstellen.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptionProvider.GetCache(System.Object)">
          <source>For example, dependency objects can just attach a property of type <ph id="ph1">&lt;xref:System.Collections.IDictionary&gt;</ph>.</source>
          <target state="translated">Beispielsweise können Abhängigkeitsobjekte nur eine Eigenschaft vom Typ Anfügen <ph id="ph1">&lt;xref:System.Collections.IDictionary&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptionProvider.GetExtendedTypeDescriptor(System.Object)">
          <source>The object for which to get the extended type descriptor.</source>
          <target state="translated">Das Objekt, für das der erweiterte Typdeskriptor abgerufen wird.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptionProvider.GetExtendedTypeDescriptor(System.Object)">
          <source>Gets an extended custom type descriptor for the given object.</source>
          <target state="translated">Ruft einen erweiterten benutzerdefinierten Typdeskriptor für das gegebene Objekt ab.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptionProvider.GetExtendedTypeDescriptor(System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.ComponentModel.ICustomTypeDescriptor" /&gt;</ph> that can provide extended metadata for the object.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.ComponentModel.ICustomTypeDescriptor" /&gt;</ph>, der erweiterte Metadaten für das Objekt enthalten kann.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptionProvider.GetExtendedTypeDescriptor(System.Object)">
          <source>An extended type descriptor is a custom type descriptor that offers properties that other objects have added to this object, but that are not actually defined on the object.</source>
          <target state="translated">Ein erweiterte Typdeskriptor ist ein benutzerdefinierter Typdeskriptor, die angeboten, die Eigenschaften, die diesem Objekt sich jedoch im anderen Objekten hinzugefügt haben, nicht sind tatsächlich für das Objekt definiert.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptionProvider.GetExtendedTypeDescriptor(System.Object)">
          <source>For example, in the <ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph> component model, objects that implement the <ph id="ph2">&lt;xref:System.ComponentModel.IExtenderProvider&gt;</ph> interface can attach properties to other objects that reside in the same logical container.</source>
          <target state="translated">Beispielsweise ist in der <ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph> Komponentenmodell-Objekte implementiert, die <ph id="ph2">&lt;xref:System.ComponentModel.IExtenderProvider&gt;</ph> Schnittstelle kann Eigenschaften anfügen, auf andere Objekte, die sich in demselben logischen Container befinden.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptionProvider.GetExtendedTypeDescriptor(System.Object)">
          <source>The overloaded <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A&gt;</ph> methods do not return a type descriptor that provides these extra extended properties.</source>
          <target state="translated">Die überladenen <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A&gt;</ph> Methoden keine zurückgeben einen Typdeskriptor, die diese zusätzlichen erweiterten Eigenschaften bereitstellt.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptionProvider.GetExtendedTypeDescriptor(System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptionProvider.GetExtendedTypeDescriptor%2A&gt;</ph> method returns the set of these extended properties.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptionProvider.GetExtendedTypeDescriptor%2A&gt;</ph> Methode gibt die Menge dieser erweiterten Eigenschaften zurück.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptionProvider.GetExtendedTypeDescriptor(System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph> will automatically merge the results of these two property collections.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph> die Ergebnisse dieser beiden Eigenschaft Sammlungen werden automatisch zusammengeführt.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptionProvider.GetExtendedTypeDescriptor(System.Object)">
          <source>While the <ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph> component model supports only extended properties, <ph id="ph2">&lt;xref:System.ComponentModel.TypeDescriptionProvider.GetExtendedTypeDescriptor%2A&gt;</ph> can be used for extended attributes as well as events, if the type description provider supports it.</source>
          <target state="translated">Während der <ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph> Komponentenmodell unterstützt nur erweiterte Eigenschaften <ph id="ph2">&lt;xref:System.ComponentModel.TypeDescriptionProvider.GetExtendedTypeDescriptor%2A&gt;</ph> können für erweiterten Attribute als auch Ereignisse, verwendet werden, wenn der Typbeschreibungsanbieter unterstützt.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptionProvider.GetExtendedTypeDescriptor(System.Object)">
          <source><ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptionProvider.GetExtendedTypeDescriptor%2A&gt;</ph> is <ph id="ph2">`virtual`</ph> and, by default, returns a custom type descriptor that returns empty results if no parent provider was passed.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptionProvider.GetExtendedTypeDescriptor%2A&gt;</ph> ist <ph id="ph2">`virtual`</ph> und in der Standardeinstellung gibt einen benutzerdefinierter Typdeskriptor, die leere Ergebnisse zurückgibt, wenn kein übergeordneter Anbieter übergeben wurde.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptionProvider.GetExtendedTypeDescriptor(System.Object)">
          <source>If a parent provider was passed, this method will invoke the parent provider's <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptionProvider.GetExtendedTypeDescriptor%2A&gt;</ph> method.</source>
          <target state="translated">Wenn ein übergeordneter Anbieter übergeben wurde, ruft diese Methode des übergeordneten Anbieters <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptionProvider.GetExtendedTypeDescriptor%2A&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptionProvider.GetExtenderProviders(System.Object)">
          <source>The object to get extender providers for.</source>
          <target state="translated">Das Objekt, für das Extenderanbieter abgerufen werden sollen.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptionProvider.GetExtenderProviders(System.Object)">
          <source>Gets the extender providers for the specified object.</source>
          <target state="translated">Ruft die Extenderanbieter für das angegebene Objekt ab.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptionProvider.GetExtenderProviders(System.Object)">
          <source>An array of extender providers for <ph id="ph1">&lt;paramref name="instance" /&gt;</ph>.</source>
          <target state="translated">Ein Array von Extenderanbietern für <ph id="ph1">&lt;paramref name="instance" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptionProvider.GetExtenderProviders(System.Object)">
          <source><ph id="ph1">&lt;paramref name="instance" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="instance" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptionProvider.GetFullComponentName(System.Object)">
          <source>The specified component.</source>
          <target state="translated">Die angegebene Komponente.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptionProvider.GetFullComponentName(System.Object)">
          <source>Gets the name of the specified component, or <ph id="ph1">&lt;see langword="null" /&gt;</ph> if the component has no name.</source>
          <target state="translated">Ruft den Namen der angegebenen Komponente ab, oder <ph id="ph1">&lt;see langword="null" /&gt;</ph>, wenn der Komponente kein Name zugewiesen ist.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptionProvider.GetFullComponentName(System.Object)">
          <source>The name of the specified component.</source>
          <target state="translated">Der Name der angegebenen Komponente.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptionProvider.GetFullComponentName(System.Object)">
          <source><ph id="ph1">&lt;paramref name="component" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="component" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.TypeDescriptionProvider">
          <source>Performs normal reflection against an object.</source>
          <target state="translated">Führt normale Reflektion eines Objekts aus.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptionProvider.GetReflectionType(System.Object)">
          <source>An instance of the type (should not be <ph id="ph1">&lt;see langword="null" /&gt;</ph>).</source>
          <target state="translated">Eine Instanz des Typs (sollte nicht <ph id="ph1">&lt;see langword="null" /&gt;</ph> sein).</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptionProvider.GetReflectionType(System.Object)">
          <source>Performs normal reflection against the given object.</source>
          <target state="translated">Führt normale Reflektion eines gegebenen Objekts aus.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptionProvider.GetReflectionType(System.Object)">
          <source>The type of reflection for this <ph id="ph1">&lt;paramref name="instance" /&gt;</ph>.</source>
          <target state="translated">Der Typ der Reflexion für dieses <ph id="ph1">&lt;paramref name="instance" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptionProvider.GetReflectionType(System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A&gt;</ph> method is a lower-level version of the <ph id="ph2">&lt;xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A&gt;</ph> method.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A&gt;</ph> Methode ist eine technisch anspruchsvolle-Version von der <ph id="ph2">&lt;xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptionProvider.GetReflectionType(System.Object)">
          <source>If no custom type descriptor can be located for an object, <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A&gt;</ph> is called to perform normal reflection against the object.</source>
          <target state="translated">Wenn kein benutzerdefinierter Typdeskriptor für ein Objekt gefunden werden kann <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A&gt;</ph> wird aufgerufen, um normale Reflektion für das Objekt auszuführen.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptionProvider.GetReflectionType(System.Object)">
          <source>Use this method overload if you have called a type descriptor member that uses an instance instead of a type.</source>
          <target state="translated">Verwenden Sie diese methodenüberladung, wenn Sie einen Deskriptor Typmember aufgerufen haben, der eine Instanz anstelle eines Typs verwendet wird.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptionProvider.GetReflectionType(System.Object)">
          <source><ph id="ph1">&lt;paramref name="instance" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="instance" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptionProvider.GetReflectionType(System.Type)">
          <source>The type of object for which to retrieve the <ph id="ph1">&lt;see cref="T:System.Reflection.IReflect" /&gt;</ph>.</source>
          <target state="translated">Der Objekttyp, für den <ph id="ph1">&lt;see cref="T:System.Reflection.IReflect" /&gt;</ph> abgerufen wird.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptionProvider.GetReflectionType(System.Type)">
          <source>Performs normal reflection against a type.</source>
          <target state="translated">Führt normale Reflektion eines Typs aus.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptionProvider.GetReflectionType(System.Type)">
          <source>The type of reflection for this <ph id="ph1">&lt;paramref name="objectType" /&gt;</ph>.</source>
          <target state="translated">Der Typ der Reflexion für dieses <ph id="ph1">&lt;paramref name="objectType" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptionProvider.GetReflectionType(System.Type)">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A&gt;</ph> method is a lower-level version of the <ph id="ph2">&lt;xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A&gt;</ph> method.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A&gt;</ph> Methode ist eine technisch anspruchsvolle-Version von der <ph id="ph2">&lt;xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptionProvider.GetReflectionType(System.Type)">
          <source>If no custom type descriptor can be located for an object, <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A&gt;</ph> is called to perform normal reflection against the object.</source>
          <target state="translated">Wenn kein benutzerdefinierter Typdeskriptor für ein Objekt gefunden werden kann <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A&gt;</ph> wird aufgerufen, um normale Reflektion für das Objekt auszuführen.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptionProvider.GetReflectionType(System.Type)">
          <source>Use this method overload if you have called a type descriptor member that uses a type instead of an instance.</source>
          <target state="translated">Verwenden Sie diese methodenüberladung, wenn Sie einen Deskriptor Typmember aufgerufen haben, der anstelle einer Instanz ein Typs verwendet.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptionProvider.GetReflectionType(System.Type)">
          <source><ph id="ph1">&lt;paramref name="objectType" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="objectType" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptionProvider.GetReflectionType(System.Type,System.Object)">
          <source>The type of object for which to retrieve the <ph id="ph1">&lt;see cref="T:System.Reflection.IReflect" /&gt;</ph>.</source>
          <target state="translated">Der Objekttyp, für den <ph id="ph1">&lt;see cref="T:System.Reflection.IReflect" /&gt;</ph> abgerufen wird.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptionProvider.GetReflectionType(System.Type,System.Object)">
          <source>An instance of the type.</source>
          <target state="translated">Eine Instanz des Typs.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptionProvider.GetReflectionType(System.Type,System.Object)">
          <source>Can be <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Kann <ph id="ph1">&lt;see langword="null" /&gt;</ph> sein.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptionProvider.GetReflectionType(System.Type,System.Object)">
          <source>Performs normal reflection against the given object with the given type.</source>
          <target state="translated">Führt normale Reflektion eines gegebenen Objekts mit dem gegebenen Typ aus.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptionProvider.GetReflectionType(System.Type,System.Object)">
          <source>The type of reflection for this <ph id="ph1">&lt;paramref name="objectType" /&gt;</ph>.</source>
          <target state="translated">Der Typ der Reflexion für dieses <ph id="ph1">&lt;paramref name="objectType" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptionProvider.GetReflectionType(System.Type,System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A&gt;</ph> method is a lower-level version of the <ph id="ph2">&lt;xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A&gt;</ph> method.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A&gt;</ph> Methode ist eine technisch anspruchsvolle-Version von der <ph id="ph2">&lt;xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptionProvider.GetReflectionType(System.Type,System.Object)">
          <source>If no custom type descriptor can be located for an object, <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A&gt;</ph> is called to perform normal reflection against the object.</source>
          <target state="translated">Wenn kein benutzerdefinierter Typdeskriptor für ein Objekt gefunden werden kann <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A&gt;</ph> wird aufgerufen, um normale Reflektion für das Objekt auszuführen.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptionProvider.GetReflectionType(System.Type,System.Object)">
          <source>This method is prototyped as <ph id="ph1">&lt;see langword="virtual" /&gt;</ph>, and by default returns <ph id="ph2">&lt;paramref name="objectType" /&gt;</ph> if no parent provider was passed.</source>
          <target state="translated">Diese Methode wird als Prototyp <ph id="ph1">&lt;see langword="virtual" /&gt;</ph>, und von der Standardeinstellung gibt <ph id="ph2">&lt;paramref name="objectType" /&gt;</ph> , wenn kein übergeordneter Anbieter übergeben wurde.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptionProvider.GetReflectionType(System.Type,System.Object)">
          <source>If a parent provider was passed, this method will invoke the parent provider's <ph id="ph1">&lt;see cref="Overload:System.ComponentModel.TypeDescriptionProvider.GetReflectionType" /&gt;</ph> method.</source>
          <target state="translated">Wenn ein übergeordneter Anbieter übergeben wurde, ruft diese Methode des übergeordneten Anbieters <ph id="ph1">&lt;see cref="Overload:System.ComponentModel.TypeDescriptionProvider.GetReflectionType" /&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptionProvider.GetRuntimeType(System.Type)">
          <source>The type to convert to its runtime equivalent.</source>
          <target state="translated">Der Typ, der in seine Laufzeitentsprechung konvertiert werden soll.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptionProvider.GetRuntimeType(System.Type)">
          <source>Converts a reflection type into a runtime type.</source>
          <target state="translated">Konvertiert einen Reflektionstyp in einen Laufzeittyp.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptionProvider.GetRuntimeType(System.Type)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> that represents the runtime equivalent of <ph id="ph2">&lt;paramref name="reflectionType" /&gt;</ph>.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>, der die Laufzeitentsprechung von <ph id="ph2">&lt;paramref name="reflectionType" /&gt;</ph> darstellt.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptionProvider.GetRuntimeType(System.Type)">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptionProvider.GetRuntimeType%2A&gt;</ph> method reverses the <ph id="ph2">&lt;xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A&gt;</ph> method to convert a reflection type back into a runtime type.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptionProvider.GetRuntimeType%2A&gt;</ph> -Methode kehrt das Ergebnis der <ph id="ph2">&lt;xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A&gt;</ph> Methode zum Konvertieren eines Typs der Reflektion in einen Common Language Runtime-Typ zurück.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptionProvider.GetRuntimeType(System.Type)">
          <source>Using the <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptionProvider.GetRuntimeType%2A&gt;</ph> method is preferred over using the <ph id="ph2">&lt;xref:System.Type.UnderlyingSystemType%2A&gt;</ph> property, which was used in earlier versions to return the runtime type.</source>
          <target state="translated">Mithilfe der <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptionProvider.GetRuntimeType%2A&gt;</ph> ist die bevorzugte Methode gegenüber der <ph id="ph2">&lt;xref:System.Type.UnderlyingSystemType%2A&gt;</ph> -Eigenschaft, die in früheren Versionen verwendet wurde, um den Laufzeittyp zurückzugeben.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptionProvider.GetRuntimeType(System.Type)">
          <source><ph id="ph1">&lt;paramref name="reflectionType" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="reflectionType" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.TypeDescriptionProvider">
          <source>Gets a custom type descriptor for the given type or object.</source>
          <target state="translated">Ruft einen benutzerdefinierten Typdeskriptor für den gegebenen Typ oder das gegebene Objekt ab.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor(System.Object)">
          <source>An instance of the type.</source>
          <target state="translated">Eine Instanz des Typs.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor(System.Object)">
          <source>Can be <ph id="ph1">&lt;see langword="null" /&gt;</ph> if no instance was passed to the <ph id="ph2">&lt;see cref="T:System.ComponentModel.TypeDescriptor" /&gt;</ph>.</source>
          <target state="translated">Kann <ph id="ph1">&lt;see langword="null" /&gt;</ph> sein, wenn keine Instanz an den <ph id="ph2">&lt;see cref="T:System.ComponentModel.TypeDescriptor" /&gt;</ph> übergeben würde.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor(System.Object)">
          <source>Gets a custom type descriptor for the given object.</source>
          <target state="translated">Ruft einen benutzerdefinierten Typdeskriptor für das gegebene Objekt ab.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor(System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.ComponentModel.ICustomTypeDescriptor" /&gt;</ph> that can provide metadata for the type.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.ComponentModel.ICustomTypeDescriptor" /&gt;</ph>, der Metadaten für den Typ bereitstellen kann.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor(System.Object)">
          <source><ph id="ph1">&lt;paramref name="instance" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="instance" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor(System.Type)">
          <source>The type of object for which to retrieve the type descriptor.</source>
          <target state="translated">Der Objekttyp, für den der Typdeskriptor abgerufen wird.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor(System.Type)">
          <source>Gets a custom type descriptor for the given type.</source>
          <target state="translated">Ruft einen benutzerdefinierten Typdeskriptor für den gegebenen Typ ab.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor(System.Type)">
          <source>An <ph id="ph1">&lt;see cref="T:System.ComponentModel.ICustomTypeDescriptor" /&gt;</ph> that can provide metadata for the type.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.ComponentModel.ICustomTypeDescriptor" /&gt;</ph>, der Metadaten für den Typ bereitstellen kann.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor(System.Type,System.Object)">
          <source>The type of object for which to retrieve the type descriptor.</source>
          <target state="translated">Der Objekttyp, für den der Typdeskriptor abgerufen wird.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor(System.Type,System.Object)">
          <source>An instance of the type.</source>
          <target state="translated">Eine Instanz des Typs.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor(System.Type,System.Object)">
          <source>Can be <ph id="ph1">&lt;see langword="null" /&gt;</ph> if no instance was passed to the <ph id="ph2">&lt;see cref="T:System.ComponentModel.TypeDescriptor" /&gt;</ph>.</source>
          <target state="translated">Kann <ph id="ph1">&lt;see langword="null" /&gt;</ph> sein, wenn keine Instanz an den <ph id="ph2">&lt;see cref="T:System.ComponentModel.TypeDescriptor" /&gt;</ph> übergeben würde.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor(System.Type,System.Object)">
          <source>Gets a custom type descriptor for the given type and object.</source>
          <target state="translated">Ruft einen benutzerdefinierten Typdeskriptor für den gegebenen Typ und das gegebene Objekt ab.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor(System.Type,System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.ComponentModel.ICustomTypeDescriptor" /&gt;</ph> that can provide metadata for the type.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.ComponentModel.ICustomTypeDescriptor" /&gt;</ph>, der Metadaten für den Typ bereitstellen kann.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor(System.Type,System.Object)">
          <source>This method is prototyped as <ph id="ph1">`virtual`</ph> and, by default, returns an empty descriptor if no parent provider was passed.</source>
          <target state="translated">Diese Methode wird als Prototyp <ph id="ph1">`virtual`</ph> und gibt standardmäßig einen leeren Deskriptor zurück, wenn kein übergeordneter Anbieter übergeben wurde.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor(System.Type,System.Object)">
          <source>If a parent provider was passed, this method will invoke the parent provider's <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A&gt;</ph> method.</source>
          <target state="translated">Wenn ein übergeordneter Anbieter übergeben wurde, ruft diese Methode des übergeordneten Anbieters <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor(System.Type,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="M:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor(System.Type,System.Object)" /&gt;</ph> method should return a custom type descriptor for the object.</source>
          <target state="translated">Die <ph id="ph1">&lt;see cref="M:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor(System.Type,System.Object)" /&gt;</ph> -Methode mit einen benutzerdefinierten Typdeskriptor für das Objekt zurückgeben sollte.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor(System.Type,System.Object)">
          <source>If the method does not provide type information for the object, it should return <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Wenn die Methode keine Typinformationen für das Objekt bereitstellt, sollte es zurückgeben <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptionProvider.IsSupportedType(System.Type)">
          <source>The type to test for compatibility.</source>
          <target state="translated">Der Typ, der auf Kompatibilität überprüft werden soll.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptionProvider.IsSupportedType(System.Type)">
          <source>Gets a value that indicates whether the specified type is compatible with the type description and its chain of type description providers.</source>
          <target state="translated">Ruft einen Wert ab, der angibt, ob der angegebene Typ mit der Typbeschreibung und der Kette von Typbeschreibungsanbietern kompatibel ist.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptionProvider.IsSupportedType(System.Type)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="type" /&gt;</ph> is compatible with the type description and its chain of type description providers; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, wenn <ph id="ph2">&lt;paramref name="type" /&gt;</ph> mit der Typbeschreibung und der Kette von Typbeschreibungsanbietern kompatibel ist, andernfalls <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptionProvider.IsSupportedType(System.Type)">
          <source><ph id="ph1">&lt;paramref name="type" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="type" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>