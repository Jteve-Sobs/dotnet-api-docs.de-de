<Type Name="TypeDescriptionProvider" FullName="System.ComponentModel.TypeDescriptionProvider">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="78810a0d3161e71e0b4f17da0881ab026be14b8d" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30380154" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class TypeDescriptionProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit TypeDescriptionProvider extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.TypeDescriptionProvider" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class TypeDescriptionProvider" />
  <TypeSignature Language="C++ CLI" Value="public ref class TypeDescriptionProvider abstract" />
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="2f587-101">Stellt ergänzende Metadaten für <see cref="T:System.ComponentModel.TypeDescriptor" /> bereit.</span>
      <span class="sxs-lookup">
        <span data-stu-id="2f587-101">Provides supplemental metadata to the <see cref="T:System.ComponentModel.TypeDescriptor" />.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f587-102">Die <xref:System.ComponentModel.TypeDescriptionProvider> Klasse dynamisch erweitert die Typinformationen, die einen Typ oder ein Objekt durch Hinzufügen, ändern oder Ausblenden von Eigenschaften, z. B. Attribute, Eigenschaften und Ereignisse zugeordnet.</span><span class="sxs-lookup"><span data-stu-id="2f587-102">The <xref:System.ComponentModel.TypeDescriptionProvider> class dynamically extends the type information associated with a type or object by adding, modifying, or hiding characteristics such as attributes, properties, and events.</span></span> <span data-ttu-id="2f587-103">Kann mehrere Beschreibung Anbieterklassen, die Metadaten zu einem einzelnen bieten <xref:System.ComponentModel.TypeDescriptor>.</span><span class="sxs-lookup"><span data-stu-id="2f587-103">There can be multiple type description provider classes that offer metadata to a single <xref:System.ComponentModel.TypeDescriptor>.</span></span>  
  
 <span data-ttu-id="2f587-104">Es gibt zwei Möglichkeiten zum Zuordnen einer <xref:System.ComponentModel.TypeDescriptionProvider> mit einem <xref:System.ComponentModel.TypeDescriptor>:</span><span class="sxs-lookup"><span data-stu-id="2f587-104">There are two ways to associate a <xref:System.ComponentModel.TypeDescriptionProvider> with a <xref:System.ComponentModel.TypeDescriptor>:</span></span>  
  
-   <span data-ttu-id="2f587-105">Zur Entwurfszeit, wenn Zielklasse kann die entsprechende zugewiesen werden <xref:System.ComponentModel.TypeDescriptionProviderAttribute> Tag.</span><span class="sxs-lookup"><span data-stu-id="2f587-105">At design time, when the target class can be assigned the appropriate <xref:System.ComponentModel.TypeDescriptionProviderAttribute> tag.</span></span>  
  
-   <span data-ttu-id="2f587-106">Zur Laufzeit Wenn mindestens ein von der <xref:System.ComponentModel.TypeDescriptor.AddProvider%2A> Methoden der der <xref:System.ComponentModel.TypeDescriptor> Klasse aufgerufen werden kann.</span><span class="sxs-lookup"><span data-stu-id="2f587-106">At run time, when one of the <xref:System.ComponentModel.TypeDescriptor.AddProvider%2A> methods of the <xref:System.ComponentModel.TypeDescriptor> class can be called.</span></span> <span data-ttu-id="2f587-107">Diese überladenen Methoden erfordern das Zielobjekt oder sein Klassentyp.</span><span class="sxs-lookup"><span data-stu-id="2f587-107">These overloaded methods require either the target object or its class type.</span></span>  
  
 <span data-ttu-id="2f587-108">Die <xref:System.ComponentModel.TypeDescriptionProvider> -Klasse stützt sich auf ein übergeordnetes Objekt des gleichen Typs, während der Erstellung angegeben.</span><span class="sxs-lookup"><span data-stu-id="2f587-108">The <xref:System.ComponentModel.TypeDescriptionProvider> class relies on a parent object of the same type, supplied during construction.</span></span> <span data-ttu-id="2f587-109">Dadurch können abgeleitete Klassen <xref:System.ComponentModel.CustomTypeDescriptor> selektiv Methoden überschreiben.</span><span class="sxs-lookup"><span data-stu-id="2f587-109">This allows classes that derive from <xref:System.ComponentModel.CustomTypeDescriptor> to selectively override methods.</span></span>  
  
 <span data-ttu-id="2f587-110">Instanzen von <xref:System.ComponentModel.TypeDescriptionProvider> werden nur auf Anforderung erstellt und zur Minimierung der Auswirkungen von benutzerdefinierten Typinformationen auf die Leistung.</span><span class="sxs-lookup"><span data-stu-id="2f587-110">Instances of <xref:System.ComponentModel.TypeDescriptionProvider> are only built upon demand, minimizing the impact of custom type information on performance.</span></span>  
  
 <span data-ttu-id="2f587-111">Diese Klasse kann nicht vererbt werden.</span><span class="sxs-lookup"><span data-stu-id="2f587-111">This class cannot be inherited.</span></span>  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para>
        <span data-ttu-id="2f587-112">Der abgeleitete Typ kann als gekennzeichnet sein <see langword="internal" /> oder <see langword="private" />, jedoch eine Instanz des Typs erstellt werden kann, mit der <see cref="T:System.ComponentModel.TypeDescriptor" /> Klasse.</span>
        <span class="sxs-lookup">
          <span data-stu-id="2f587-112">Your derived type might be marked as <see langword="internal" /> or <see langword="private" />, but an instance of your type can be created with the <see cref="T:System.ComponentModel.TypeDescriptor" /> class.</span>
        </span>
        <span data-ttu-id="2f587-113">Führen Sie nicht geschrieben Sie werden, vorausgesetzt, des Aufrufers von unsicheren Code als vertrauenswürdig eingestuft wird.</span>
        <span class="sxs-lookup">
          <span data-stu-id="2f587-113">Do not write insecure code by assuming the caller is trusted.</span>
        </span>
        <span data-ttu-id="2f587-114">Nehmen Sie stattdessen, dass Aufrufer Instanzen des Typs unter teilweiser Vertrauenswürdigkeit erstellen können.</span>
        <span class="sxs-lookup">
          <span data-stu-id="2f587-114">Assume instead that callers might create instances of your type in partial trust.</span>
        </span>
      </para>
    </block>
    <altmember cref="Overload:System.ComponentModel.TypeDescriptor.AddProvider" />
    <altmember cref="T:System.ComponentModel.TypeDescriptionProviderAttribute" />
    <altmember cref="T:System.ComponentModel.ICustomTypeDescriptor" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="2f587-115">Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.TypeDescriptionProvider" />-Klasse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f587-115">Initializes a new instance of the <see cref="T:System.ComponentModel.TypeDescriptionProvider" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected TypeDescriptionProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptionProvider.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; TypeDescriptionProvider();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="2f587-116">Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.TypeDescriptionProvider" />-Klasse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f587-116">Initializes a new instance of the <see cref="T:System.ComponentModel.TypeDescriptionProvider" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f587-117">Dieser Konstruktor entspricht dem Aufrufen des anderen <xref:System.ComponentModel.TypeDescriptionProvider.%23ctor%28System.ComponentModel.TypeDescriptionProvider%29> Konstruktor mit einem Parameterwert, der `null`.</span><span class="sxs-lookup"><span data-stu-id="2f587-117">This constructor is equivalent to calling the other <xref:System.ComponentModel.TypeDescriptionProvider.%23ctor%28System.ComponentModel.TypeDescriptionProvider%29> constructor with a parameter value that is `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.TypeDescriptionProvider.#ctor(System.ComponentModel.TypeDescriptionProvider)" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected TypeDescriptionProvider (System.ComponentModel.TypeDescriptionProvider parent);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.ComponentModel.TypeDescriptionProvider parent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptionProvider.#ctor(System.ComponentModel.TypeDescriptionProvider)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (parent As TypeDescriptionProvider)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; TypeDescriptionProvider(System::ComponentModel::TypeDescriptionProvider ^ parent);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="parent" Type="System.ComponentModel.TypeDescriptionProvider" />
      </Parameters>
      <Docs>
        <param name="parent">
          <span data-ttu-id="2f587-118">Der übergeordnete Typbeschreibungsanbieter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f587-118">The parent type description provider.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2f587-119">Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.TypeDescriptionProvider" />-Klasse unter Verwendung eines übergeordneten Typbeschreibungsanbieters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f587-119">Initializes a new instance of the <see cref="T:System.ComponentModel.TypeDescriptionProvider" /> class using a parent type description provider.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f587-120">Wenn die `parent` Parameter ist `null`, dass alle <xref:System.ComponentModel.TypeDescriptionProvider> Methoden Standardwerte zurück.</span><span class="sxs-lookup"><span data-stu-id="2f587-120">If the `parent` parameter is `null`, all <xref:System.ComponentModel.TypeDescriptionProvider> methods will return default values.</span></span> <span data-ttu-id="2f587-121">Andernfalls alle <xref:System.ComponentModel.TypeDescriptionProvider> Methoden delegiert an die Methoden der `parent`.</span><span class="sxs-lookup"><span data-stu-id="2f587-121">Otherwise, all <xref:System.ComponentModel.TypeDescriptionProvider> methods will delegate to the methods of `parent`.</span></span>  
  
 <span data-ttu-id="2f587-122">Die folgende Tabelle zeigt die Standard-Rückgabewerte für <xref:System.ComponentModel.TypeDescriptionProvider> Methoden.</span><span class="sxs-lookup"><span data-stu-id="2f587-122">The following table shows the default return values for <xref:System.ComponentModel.TypeDescriptionProvider> methods.</span></span>  
  
|<span data-ttu-id="2f587-123">Methode</span><span class="sxs-lookup"><span data-stu-id="2f587-123">Method</span></span>|<span data-ttu-id="2f587-124">Standard-Rückgabewert</span><span class="sxs-lookup"><span data-stu-id="2f587-124">Default return value</span></span>|  
|------------|--------------------------|  
|<xref:System.ComponentModel.TypeDescriptionProvider.GetCache%2A>|`null`|  
|<xref:System.ComponentModel.TypeDescriptionProvider.CreateInstance%2A>|<span data-ttu-id="2f587-125">Ein neu erstelltes Objekt durch einen Aufruf der <xref:System.Activator.CreateInstance%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="2f587-125">A newly created object through a call to the <xref:System.Activator.CreateInstance%2A> method.</span></span>|  
|<xref:System.ComponentModel.TypeDescriptionProvider.GetExtendedTypeDescriptor%2A>|<span data-ttu-id="2f587-126">Eine Standardinstanz von einer <xref:System.ComponentModel.CustomTypeDescriptor> Klasse.</span><span class="sxs-lookup"><span data-stu-id="2f587-126">A default instance of a <xref:System.ComponentModel.CustomTypeDescriptor> class.</span></span>|  
|<xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A>|<span data-ttu-id="2f587-127">Eine Standardinstanz von einer <xref:System.ComponentModel.CustomTypeDescriptor> Klasse.</span><span class="sxs-lookup"><span data-stu-id="2f587-127">A default instance of a <xref:System.ComponentModel.CustomTypeDescriptor> class.</span></span>|  
|<xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A>|<span data-ttu-id="2f587-128">Die `objectType` ersten Parameter.</span><span class="sxs-lookup"><span data-stu-id="2f587-128">The `objectType` first parameter.</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.CustomTypeDescriptor" />
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public virtual object CreateInstance (IServiceProvider provider, Type objectType, Type[] argTypes, object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object CreateInstance(class System.IServiceProvider provider, class System.Type objectType, class System.Type[] argTypes, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptionProvider.CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateInstance (provider As IServiceProvider, objectType As Type, argTypes As Type(), args As Object()) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ CreateInstance(IServiceProvider ^ provider, Type ^ objectType, cli::array &lt;Type ^&gt; ^ argTypes, cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IServiceProvider" />
        <Parameter Name="objectType" Type="System.Type" />
        <Parameter Name="argTypes" Type="System.Type[]" />
        <Parameter Name="args" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="2f587-129">Ein optionaler Dienstanbieter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f587-129">An optional service provider.</span>
          </span>
        </param>
        <param name="objectType">
          <span data-ttu-id="2f587-130">Der Typ des zu erstellenden Objekts.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f587-130">The type of object to create.</span>
          </span>
          <span data-ttu-id="2f587-131">Dieser Parameter ist nie <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f587-131">This parameter is never <see langword="null" />.</span>
          </span>
        </param>
        <param name="argTypes">
          <span data-ttu-id="2f587-132">Ein optionales Array von Typen, die die Parametertypen darstellen, die an den Konstruktor des Objekts übergeben werden sollen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f587-132">An optional array of types that represent the parameter types to be passed to the object's constructor.</span>
          </span>
          <span data-ttu-id="2f587-133">Dieses Array kann <see langword="null" /> sein oder die Länge 0 haben.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f587-133">This array can be <see langword="null" /> or of zero length.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="2f587-134">Ein optionales Array von Parameterwerten, die an den Konstruktor des Objekts übergeben werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f587-134">An optional array of parameter values to pass to the object's constructor.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2f587-135">Erstellt ein Objekt, das einen anderen Datentyp ersetzen kann.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f587-135">Creates an object that can substitute for another data type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2f587-136">Das ersetzende <see cref="T:System.Object" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f587-136">The substitute <see cref="T:System.Object" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f587-137">Die <xref:System.IServiceProvider> gemäß der `provider` Parameter durch Übergeben der <xref:System.ComponentModel.TypeDescriptor.CreateInstance%2A?displayProperty=nameWithType> Methode der <xref:System.ComponentModel.TypeDescriptor> Klasse.</span><span class="sxs-lookup"><span data-stu-id="2f587-137">The <xref:System.IServiceProvider> specified by the `provider` parameter is passed in by the <xref:System.ComponentModel.TypeDescriptor.CreateInstance%2A?displayProperty=nameWithType> method of the <xref:System.ComponentModel.TypeDescriptor> class.</span></span> <span data-ttu-id="2f587-138">Wenn `provider` nicht `null`, der Service-Anbieter kann von den Typbeschreibungsanbieter verwendet werden, um zusätzlichen Kontext über den Erstellungsaufruf erhalten.</span><span class="sxs-lookup"><span data-stu-id="2f587-138">If `provider` is not `null`, the service provider can be used by the type description provider to obtain additional context about the creation call.</span></span>  
  
 <span data-ttu-id="2f587-139">Die <xref:System.ComponentModel.TypeDescriptionProvider.CreateInstance%2A> Methode ist `virtual` und in der Standardeinstellung gibt das Ergebnis der <xref:System.Activator.CreateInstance%2A?displayProperty=nameWithType> Methode Wenn `provider` ist `null`.</span><span class="sxs-lookup"><span data-stu-id="2f587-139">The <xref:System.ComponentModel.TypeDescriptionProvider.CreateInstance%2A> method is `virtual` and, by default, returns the result of the <xref:System.Activator.CreateInstance%2A?displayProperty=nameWithType> method if `provider` is `null`.</span></span> <span data-ttu-id="2f587-140">Wenn `provider` ist `null`, ruft diese Methode die <xref:System.ComponentModel.TypeDescriptionProvider.CreateInstance%2A> Methode des übergeordneten Anbieters.</span><span class="sxs-lookup"><span data-stu-id="2f587-140">If `provider` is `null`, this method will invoke the <xref:System.ComponentModel.TypeDescriptionProvider.CreateInstance%2A> method of the parent provider.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="2f587-141">Wenn die abgeleitete Klasse nicht in eine Ersatz-Instanz bereitstellen möchte, sollte er einfach die basisimplementierung aufrufen.</span>
            <span class="sxs-lookup">
              <span data-stu-id="2f587-141">If the derived class is not interested in providing a substitute instance, it should just call the base implementation.</span>
            </span>
          </para>
        </block>
        <altmember cref="M:System.ComponentModel.TypeDescriptor.CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])" />
      </Docs>
    </Member>
    <Member MemberName="GetCache">
      <MemberSignature Language="C#" Value="public virtual System.Collections.IDictionary GetCache (object instance);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IDictionary GetCache(object instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptionProvider.GetCache(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCache (instance As Object) As IDictionary" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::IDictionary ^ GetCache(System::Object ^ instance);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IDictionary</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instance">
          <span data-ttu-id="2f587-142">Das Objekt, für das der Cache abgerufen werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f587-142">The object for which to get the cache.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2f587-143">Ruft einen objektbezogenen Cache ab, auf den als <see cref="T:System.Collections.IDictionary" /> der Schlüssel-Wert-Paare zugegriffen wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f587-143">Gets a per-object cache, accessed as an <see cref="T:System.Collections.IDictionary" /> of key/value pairs.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2f587-144">Ein <see cref="T:System.Collections.IDictionary" />, wenn das bereitgestellte Objekt das Zwischenspeichern unterstützt; andernfalls <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f587-144">An <see cref="T:System.Collections.IDictionary" /> if the provided object supports caching; otherwise, <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f587-145">Ein <xref:System.ComponentModel.TypeDescriptor> erfordern u. u. komplexe Vorgänge für Auflistungen von Metadaten.</span><span class="sxs-lookup"><span data-stu-id="2f587-145">A <xref:System.ComponentModel.TypeDescriptor> may need to perform complex operations on collections of metadata.</span></span> <span data-ttu-id="2f587-146">Da die Typen nicht für die Lebensdauer einer Domäne, entladen werden, die <xref:System.ComponentModel.TypeDescriptor> Klasse werden die Ergebnisse dieser Vorgänge basierend auf Typ automatisch zwischengespeichert.</span><span class="sxs-lookup"><span data-stu-id="2f587-146">Because types are not unloaded for the life of a domain, the <xref:System.ComponentModel.TypeDescriptor> class will automatically cache the results of these operations based on type.</span></span> <span data-ttu-id="2f587-147">Allerdings verwenden einige Vorgänge live Objektinstanzen.</span><span class="sxs-lookup"><span data-stu-id="2f587-147">However, some operations use live object instances.</span></span> <span data-ttu-id="2f587-148">Diese Vorgänge können nicht zwischengespeichert werden, innerhalb der <xref:System.ComponentModel.TypeDescriptor> Klasse, da zwischenzuspeichern das Objekt verhindern würde Garbage collection.</span><span class="sxs-lookup"><span data-stu-id="2f587-148">These operations cannot be cached within the <xref:System.ComponentModel.TypeDescriptor> class because caching them would prevent the object from being garbage collected.</span></span> <span data-ttu-id="2f587-149">Stattdessen die <xref:System.ComponentModel.TypeDescriptor> -Klasse ermöglicht das für einen Cache pro-Objekt zugegriffen wird, als ein <xref:System.Collections.IDictionary> von Schlüssel/Wert-Paaren auf ein Objekt vorhanden ist.</span><span class="sxs-lookup"><span data-stu-id="2f587-149">Instead, the <xref:System.ComponentModel.TypeDescriptor> class allows for a per-object cache, accessed as an <xref:System.Collections.IDictionary> of key/value pairs, to exist on an object.</span></span> <span data-ttu-id="2f587-150">Die <xref:System.ComponentModel.TypeDescriptionProvider.GetCache%2A> Methode gibt eine Instanz dieses Caches zurück.</span><span class="sxs-lookup"><span data-stu-id="2f587-150">The <xref:System.ComponentModel.TypeDescriptionProvider.GetCache%2A> method returns an instance of this cache.</span></span> <span data-ttu-id="2f587-151">Die <xref:System.ComponentModel.TypeDescriptionProvider.GetCache%2A> Methode zurück `null` Wenn es keinen unterstützten Cache für ein Objekt.</span><span class="sxs-lookup"><span data-stu-id="2f587-151">The <xref:System.ComponentModel.TypeDescriptionProvider.GetCache%2A> method will return `null` if there is no supported cache for an object.</span></span>  
  
 <span data-ttu-id="2f587-152">Die Standardeinstellung <xref:System.ComponentModel.TypeDescriptionProvider> verwendeten <xref:System.ComponentModel.TypeDescriptor> überprüft das Objekt, um festzustellen, ob es sich um eine positionierte Komponente handelt, die implementiert die <xref:System.ComponentModel.Design.IDictionaryService> Schnittstelle.</span><span class="sxs-lookup"><span data-stu-id="2f587-152">The default <xref:System.ComponentModel.TypeDescriptionProvider> used by <xref:System.ComponentModel.TypeDescriptor> examines the object to see if it is a sited component that implements the <xref:System.ComponentModel.Design.IDictionaryService> interface.</span></span> <span data-ttu-id="2f587-153">Wenn das Objekt ist, verwendet er die Wörterbuchdienst zum Speichern des Objekts Caches.</span><span class="sxs-lookup"><span data-stu-id="2f587-153">If the object is, it uses the dictionary service to store the object's cache.</span></span> <span data-ttu-id="2f587-154">Zurückgegeben, andernfalls das Objekt `null`.</span><span class="sxs-lookup"><span data-stu-id="2f587-154">Otherwise, the object it returns `null`.</span></span> <span data-ttu-id="2f587-155">Andere Typbeschreibungsanbieter können hier ihre eigene Implementierung bereitstellen.</span><span class="sxs-lookup"><span data-stu-id="2f587-155">Other type description providers may provide their own implementation here.</span></span> <span data-ttu-id="2f587-156">Beispielsweise können Abhängigkeitsobjekte nur eine Eigenschaft vom Typ Anfügen <xref:System.Collections.IDictionary>.</span><span class="sxs-lookup"><span data-stu-id="2f587-156">For example, dependency objects can just attach a property of type <xref:System.Collections.IDictionary>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IDictionary" />
        <altmember cref="T:System.ComponentModel.Design.IDictionaryService" />
      </Docs>
    </Member>
    <Member MemberName="GetExtendedTypeDescriptor">
      <MemberSignature Language="C#" Value="public virtual System.ComponentModel.ICustomTypeDescriptor GetExtendedTypeDescriptor (object instance);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ComponentModel.ICustomTypeDescriptor GetExtendedTypeDescriptor(object instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptionProvider.GetExtendedTypeDescriptor(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetExtendedTypeDescriptor (instance As Object) As ICustomTypeDescriptor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::ComponentModel::ICustomTypeDescriptor ^ GetExtendedTypeDescriptor(System::Object ^ instance);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.ICustomTypeDescriptor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instance">
          <span data-ttu-id="2f587-157">Das Objekt, für das der erweiterte Typdeskriptor abgerufen wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f587-157">The object for which to get the extended type descriptor.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2f587-158">Ruft einen erweiterten benutzerdefinierten Typdeskriptor für das gegebene Objekt ab.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f587-158">Gets an extended custom type descriptor for the given object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2f587-159">Ein <see cref="T:System.ComponentModel.ICustomTypeDescriptor" />, der erweiterte Metadaten für das Objekt enthalten kann.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f587-159">An <see cref="T:System.ComponentModel.ICustomTypeDescriptor" /> that can provide extended metadata for the object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f587-160">Ein erweiterte Typdeskriptor ist ein benutzerdefinierter Typdeskriptor, die angeboten, die Eigenschaften, die diesem Objekt sich jedoch im anderen Objekten hinzugefügt haben, nicht sind tatsächlich für das Objekt definiert.</span><span class="sxs-lookup"><span data-stu-id="2f587-160">An extended type descriptor is a custom type descriptor that offers properties that other objects have added to this object, but that are not actually defined on the object.</span></span> <span data-ttu-id="2f587-161">Beispielsweise ist in der [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] Komponentenmodell-Objekte implementiert, die <xref:System.ComponentModel.IExtenderProvider> Schnittstelle kann Eigenschaften anfügen, auf andere Objekte, die sich in demselben logischen Container befinden.</span><span class="sxs-lookup"><span data-stu-id="2f587-161">For example, in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] component model, objects that implement the <xref:System.ComponentModel.IExtenderProvider> interface can attach properties to other objects that reside in the same logical container.</span></span> <span data-ttu-id="2f587-162">Die überladenen <xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A> Methoden keine zurückgeben einen Typdeskriptor, die diese zusätzlichen erweiterten Eigenschaften bereitstellt.</span><span class="sxs-lookup"><span data-stu-id="2f587-162">The overloaded <xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A> methods do not return a type descriptor that provides these extra extended properties.</span></span> <span data-ttu-id="2f587-163">Die <xref:System.ComponentModel.TypeDescriptionProvider.GetExtendedTypeDescriptor%2A> Methode gibt die Menge dieser erweiterten Eigenschaften zurück.</span><span class="sxs-lookup"><span data-stu-id="2f587-163">The <xref:System.ComponentModel.TypeDescriptionProvider.GetExtendedTypeDescriptor%2A> method returns the set of these extended properties.</span></span> <span data-ttu-id="2f587-164">Die <xref:System.ComponentModel.TypeDescriptor> die Ergebnisse dieser beiden Eigenschaft Sammlungen werden automatisch zusammengeführt.</span><span class="sxs-lookup"><span data-stu-id="2f587-164">The <xref:System.ComponentModel.TypeDescriptor> will automatically merge the results of these two property collections.</span></span> <span data-ttu-id="2f587-165">Während der [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] Komponentenmodell unterstützt nur erweiterte Eigenschaften <xref:System.ComponentModel.TypeDescriptionProvider.GetExtendedTypeDescriptor%2A> können für erweiterten Attribute als auch Ereignisse, verwendet werden, wenn der Typbeschreibungsanbieter unterstützt.</span><span class="sxs-lookup"><span data-stu-id="2f587-165">While the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] component model supports only extended properties, <xref:System.ComponentModel.TypeDescriptionProvider.GetExtendedTypeDescriptor%2A> can be used for extended attributes as well as events, if the type description provider supports it.</span></span>  
  
 <span data-ttu-id="2f587-166"><xref:System.ComponentModel.TypeDescriptionProvider.GetExtendedTypeDescriptor%2A> ist `virtual` und in der Standardeinstellung gibt einen benutzerdefinierter Typdeskriptor, die leere Ergebnisse zurückgibt, wenn kein übergeordneter Anbieter übergeben wurde.</span><span class="sxs-lookup"><span data-stu-id="2f587-166"><xref:System.ComponentModel.TypeDescriptionProvider.GetExtendedTypeDescriptor%2A> is `virtual` and, by default, returns a custom type descriptor that returns empty results if no parent provider was passed.</span></span> <span data-ttu-id="2f587-167">Wenn ein übergeordneter Anbieter übergeben wurde, ruft diese Methode des übergeordneten Anbieters <xref:System.ComponentModel.TypeDescriptionProvider.GetExtendedTypeDescriptor%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="2f587-167">If a parent provider was passed, this method will invoke the parent provider's <xref:System.ComponentModel.TypeDescriptionProvider.GetExtendedTypeDescriptor%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.TypeDescriptor" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor" />
      </Docs>
    </Member>
    <Member MemberName="GetExtenderProviders">
      <MemberSignature Language="C#" Value="protected internal virtual System.ComponentModel.IExtenderProvider[] GetExtenderProviders (object instance);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class System.ComponentModel.IExtenderProvider[] GetExtenderProviders(object instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptionProvider.GetExtenderProviders(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function GetExtenderProviders (instance As Object) As IExtenderProvider()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual cli::array &lt;System::ComponentModel::IExtenderProvider ^&gt; ^ GetExtenderProviders(System::Object ^ instance);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.IExtenderProvider[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instance">
          <span data-ttu-id="2f587-168">Das Objekt, für das Extenderanbieter abgerufen werden sollen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f587-168">The object to get extender providers for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2f587-169">Ruft die Extenderanbieter für das angegebene Objekt ab.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f587-169">Gets the extender providers for the specified object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2f587-170">Ein Array von Extenderanbietern für <paramref name="instance" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f587-170">An array of extender providers for <paramref name="instance" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2f587-171">
            <paramref name="instance" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f587-171">
              <paramref name="instance" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetFullComponentName">
      <MemberSignature Language="C#" Value="public virtual string GetFullComponentName (object component);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetFullComponentName(object component) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptionProvider.GetFullComponentName(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetFullComponentName (component As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetFullComponentName(System::Object ^ component);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="component">
          <span data-ttu-id="2f587-172">Die angegebene Komponente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f587-172">The specified component.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2f587-173">Ruft den Namen der angegebenen Komponente ab, oder <see langword="null" />, wenn der Komponente kein Name zugewiesen ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f587-173">Gets the name of the specified component, or <see langword="null" /> if the component has no name.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2f587-174">Der Name der angegebenen Komponente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f587-174">The name of the specified component.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2f587-175">
            <paramref name="component" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f587-175">
              <paramref name="component" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetReflectionType">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="2f587-176">Führt normale Reflektion eines Objekts aus.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f587-176">Performs normal reflection against an object.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetReflectionType">
      <MemberSignature Language="C#" Value="public Type GetReflectionType (object instance);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Type GetReflectionType(object instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptionProvider.GetReflectionType(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetReflectionType (instance As Object) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Type ^ GetReflectionType(System::Object ^ instance);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instance">
          <span data-ttu-id="2f587-177">Eine Instanz des Typs (sollte nicht <see langword="null" /> sein).</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f587-177">An instance of the type (should not be <see langword="null" />).</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2f587-178">Führt normale Reflektion eines gegebenen Objekts aus.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f587-178">Performs normal reflection against the given object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2f587-179">Der Typ der Reflexion für dieses <paramref name="instance" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f587-179">The type of reflection for this <paramref name="instance" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f587-180">Die <xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A> Methode ist eine technisch anspruchsvolle-Version von der <xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="2f587-180">The <xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A> method is a lower-level version of the <xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A> method.</span></span> <span data-ttu-id="2f587-181">Wenn kein benutzerdefinierter Typdeskriptor für ein Objekt gefunden werden kann <xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A> wird aufgerufen, um normale Reflektion für das Objekt auszuführen.</span><span class="sxs-lookup"><span data-stu-id="2f587-181">If no custom type descriptor can be located for an object, <xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A> is called to perform normal reflection against the object.</span></span>  
  
 <span data-ttu-id="2f587-182">Verwenden Sie diese methodenüberladung, wenn Sie einen Deskriptor Typmember aufgerufen haben, der eine Instanz anstelle eines Typs verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="2f587-182">Use this method overload if you have called a type descriptor member that uses an instance instead of a type.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2f587-183">
            <paramref name="instance" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f587-183">
              <paramref name="instance" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="Overload:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor" />
      </Docs>
    </Member>
    <Member MemberName="GetReflectionType">
      <MemberSignature Language="C#" Value="public Type GetReflectionType (Type objectType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Type GetReflectionType(class System.Type objectType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptionProvider.GetReflectionType(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetReflectionType (objectType As Type) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Type ^ GetReflectionType(Type ^ objectType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="objectType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="objectType">
          <span data-ttu-id="2f587-184">Der Objekttyp, für den <see cref="T:System.Reflection.IReflect" /> abgerufen wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f587-184">The type of object for which to retrieve the <see cref="T:System.Reflection.IReflect" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2f587-185">Führt normale Reflektion eines Typs aus.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f587-185">Performs normal reflection against a type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2f587-186">Der Typ der Reflexion für dieses <paramref name="objectType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f587-186">The type of reflection for this <paramref name="objectType" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f587-187">Die <xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A> Methode ist eine technisch anspruchsvolle-Version von der <xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="2f587-187">The <xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A> method is a lower-level version of the <xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A> method.</span></span> <span data-ttu-id="2f587-188">Wenn kein benutzerdefinierter Typdeskriptor für ein Objekt gefunden werden kann <xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A> wird aufgerufen, um normale Reflektion für das Objekt auszuführen.</span><span class="sxs-lookup"><span data-stu-id="2f587-188">If no custom type descriptor can be located for an object, <xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A> is called to perform normal reflection against the object.</span></span>  
  
 <span data-ttu-id="2f587-189">Verwenden Sie diese methodenüberladung, wenn Sie einen Deskriptor Typmember aufgerufen haben, der anstelle einer Instanz ein Typs verwendet.</span><span class="sxs-lookup"><span data-stu-id="2f587-189">Use this method overload if you have called a type descriptor member that uses a type instead of an instance.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2f587-190">
            <paramref name="objectType" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f587-190">
              <paramref name="objectType" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="Overload:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor" />
      </Docs>
    </Member>
    <Member MemberName="GetReflectionType">
      <MemberSignature Language="C#" Value="public virtual Type GetReflectionType (Type objectType, object instance);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type GetReflectionType(class System.Type objectType, object instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptionProvider.GetReflectionType(System.Type,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetReflectionType (objectType As Type, instance As Object) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Type ^ GetReflectionType(Type ^ objectType, System::Object ^ instance);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="objectType" Type="System.Type" />
        <Parameter Name="instance" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="objectType">
          <span data-ttu-id="2f587-191">Der Objekttyp, für den <see cref="T:System.Reflection.IReflect" /> abgerufen wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f587-191">The type of object for which to retrieve the <see cref="T:System.Reflection.IReflect" />.</span>
          </span>
        </param>
        <param name="instance">
          <span data-ttu-id="2f587-192">Eine Instanz des Typs.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f587-192">An instance of the type.</span>
          </span>
          <span data-ttu-id="2f587-193">Kann <see langword="null" /> sein.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f587-193">Can be <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2f587-194">Führt normale Reflektion eines gegebenen Objekts mit dem gegebenen Typ aus.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f587-194">Performs normal reflection against the given object with the given type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2f587-195">Der Typ der Reflexion für dieses <paramref name="objectType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f587-195">The type of reflection for this <paramref name="objectType" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f587-196">Die <xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A> Methode ist eine technisch anspruchsvolle-Version von der <xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="2f587-196">The <xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A> method is a lower-level version of the <xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A> method.</span></span> <span data-ttu-id="2f587-197">Wenn kein benutzerdefinierter Typdeskriptor für ein Objekt gefunden werden kann <xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A> wird aufgerufen, um normale Reflektion für das Objekt auszuführen.</span><span class="sxs-lookup"><span data-stu-id="2f587-197">If no custom type descriptor can be located for an object, <xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A> is called to perform normal reflection against the object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="2f587-198">Diese Methode wird als Prototyp <see langword="virtual" />, und von der Standardeinstellung gibt <paramref name="objectType" /> , wenn kein übergeordneter Anbieter übergeben wurde.</span>
            <span class="sxs-lookup">
              <span data-stu-id="2f587-198">This method is prototyped as <see langword="virtual" />, and by default returns <paramref name="objectType" /> if no parent provider was passed.</span>
            </span>
            <span data-ttu-id="2f587-199">Wenn ein übergeordneter Anbieter übergeben wurde, ruft diese Methode des übergeordneten Anbieters <see cref="Overload:System.ComponentModel.TypeDescriptionProvider.GetReflectionType" /> Methode.</span>
            <span class="sxs-lookup">
              <span data-stu-id="2f587-199">If a parent provider was passed, this method will invoke the parent provider's <see cref="Overload:System.ComponentModel.TypeDescriptionProvider.GetReflectionType" /> method.</span>
            </span>
          </para>
        </block>
        <altmember cref="Overload:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor" />
      </Docs>
    </Member>
    <Member MemberName="GetRuntimeType">
      <MemberSignature Language="C#" Value="public virtual Type GetRuntimeType (Type reflectionType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type GetRuntimeType(class System.Type reflectionType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptionProvider.GetRuntimeType(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetRuntimeType (reflectionType As Type) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Type ^ GetRuntimeType(Type ^ reflectionType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reflectionType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="reflectionType">
          <span data-ttu-id="2f587-200">Der Typ, der in seine Laufzeitentsprechung konvertiert werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f587-200">The type to convert to its runtime equivalent.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2f587-201">Konvertiert einen Reflektionstyp in einen Laufzeittyp.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f587-201">Converts a reflection type into a runtime type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2f587-202">Ein <see cref="T:System.Type" />, der die Laufzeitentsprechung von <paramref name="reflectionType" /> darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f587-202">A <see cref="T:System.Type" /> that represents the runtime equivalent of <paramref name="reflectionType" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f587-203">Die <xref:System.ComponentModel.TypeDescriptionProvider.GetRuntimeType%2A> -Methode kehrt das Ergebnis der <xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A> Methode zum Konvertieren eines Typs der Reflektion in einen Common Language Runtime-Typ zurück.</span><span class="sxs-lookup"><span data-stu-id="2f587-203">The <xref:System.ComponentModel.TypeDescriptionProvider.GetRuntimeType%2A> method reverses the <xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A> method to convert a reflection type back into a runtime type.</span></span> <span data-ttu-id="2f587-204">Mithilfe der <xref:System.ComponentModel.TypeDescriptionProvider.GetRuntimeType%2A> ist die bevorzugte Methode gegenüber der <xref:System.Type.UnderlyingSystemType%2A> -Eigenschaft, die in früheren Versionen verwendet wurde, um den Laufzeittyp zurückzugeben.</span><span class="sxs-lookup"><span data-stu-id="2f587-204">Using the <xref:System.ComponentModel.TypeDescriptionProvider.GetRuntimeType%2A> method is preferred over using the <xref:System.Type.UnderlyingSystemType%2A> property, which was used in earlier versions to return the runtime type.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2f587-205">
            <paramref name="reflectionType" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f587-205">
              <paramref name="reflectionType" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetTypeDescriptor">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="2f587-206">Ruft einen benutzerdefinierten Typdeskriptor für den gegebenen Typ oder das gegebene Objekt ab.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f587-206">Gets a custom type descriptor for the given type or object.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetTypeDescriptor">
      <MemberSignature Language="C#" Value="public System.ComponentModel.ICustomTypeDescriptor GetTypeDescriptor (object instance);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ComponentModel.ICustomTypeDescriptor GetTypeDescriptor(object instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTypeDescriptor (instance As Object) As ICustomTypeDescriptor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ComponentModel::ICustomTypeDescriptor ^ GetTypeDescriptor(System::Object ^ instance);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.ICustomTypeDescriptor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instance">
          <span data-ttu-id="2f587-207">Eine Instanz des Typs.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f587-207">An instance of the type.</span>
          </span>
          <span data-ttu-id="2f587-208">Kann <see langword="null" /> sein, wenn keine Instanz an den <see cref="T:System.ComponentModel.TypeDescriptor" /> übergeben würde.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f587-208">Can be <see langword="null" /> if no instance was passed to the <see cref="T:System.ComponentModel.TypeDescriptor" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2f587-209">Ruft einen benutzerdefinierten Typdeskriptor für das gegebene Objekt ab.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f587-209">Gets a custom type descriptor for the given object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2f587-210">Ein <see cref="T:System.ComponentModel.ICustomTypeDescriptor" />, der Metadaten für den Typ bereitstellen kann.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f587-210">An <see cref="T:System.ComponentModel.ICustomTypeDescriptor" /> that can provide metadata for the type.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2f587-211">
            <paramref name="instance" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f587-211">
              <paramref name="instance" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.ComponentModel.TypeDescriptionProvider.GetExtendedTypeDescriptor(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="GetTypeDescriptor">
      <MemberSignature Language="C#" Value="public System.ComponentModel.ICustomTypeDescriptor GetTypeDescriptor (Type objectType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ComponentModel.ICustomTypeDescriptor GetTypeDescriptor(class System.Type objectType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTypeDescriptor (objectType As Type) As ICustomTypeDescriptor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ComponentModel::ICustomTypeDescriptor ^ GetTypeDescriptor(Type ^ objectType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.ICustomTypeDescriptor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="objectType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="objectType">
          <span data-ttu-id="2f587-212">Der Objekttyp, für den der Typdeskriptor abgerufen wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f587-212">The type of object for which to retrieve the type descriptor.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2f587-213">Ruft einen benutzerdefinierten Typdeskriptor für den gegebenen Typ ab.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f587-213">Gets a custom type descriptor for the given type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2f587-214">Ein <see cref="T:System.ComponentModel.ICustomTypeDescriptor" />, der Metadaten für den Typ bereitstellen kann.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f587-214">An <see cref="T:System.ComponentModel.ICustomTypeDescriptor" /> that can provide metadata for the type.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.ComponentModel.TypeDescriptionProvider.GetExtendedTypeDescriptor(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="GetTypeDescriptor">
      <MemberSignature Language="C#" Value="public virtual System.ComponentModel.ICustomTypeDescriptor GetTypeDescriptor (Type objectType, object instance);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ComponentModel.ICustomTypeDescriptor GetTypeDescriptor(class System.Type objectType, object instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor(System.Type,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetTypeDescriptor (objectType As Type, instance As Object) As ICustomTypeDescriptor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::ComponentModel::ICustomTypeDescriptor ^ GetTypeDescriptor(Type ^ objectType, System::Object ^ instance);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.ICustomTypeDescriptor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="objectType" Type="System.Type" />
        <Parameter Name="instance" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="objectType">
          <span data-ttu-id="2f587-215">Der Objekttyp, für den der Typdeskriptor abgerufen wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f587-215">The type of object for which to retrieve the type descriptor.</span>
          </span>
        </param>
        <param name="instance">
          <span data-ttu-id="2f587-216">Eine Instanz des Typs.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f587-216">An instance of the type.</span>
          </span>
          <span data-ttu-id="2f587-217">Kann <see langword="null" /> sein, wenn keine Instanz an den <see cref="T:System.ComponentModel.TypeDescriptor" /> übergeben würde.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f587-217">Can be <see langword="null" /> if no instance was passed to the <see cref="T:System.ComponentModel.TypeDescriptor" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2f587-218">Ruft einen benutzerdefinierten Typdeskriptor für den gegebenen Typ und das gegebene Objekt ab.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f587-218">Gets a custom type descriptor for the given type and object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2f587-219">Ein <see cref="T:System.ComponentModel.ICustomTypeDescriptor" />, der Metadaten für den Typ bereitstellen kann.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f587-219">An <see cref="T:System.ComponentModel.ICustomTypeDescriptor" /> that can provide metadata for the type.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f587-220">Diese Methode wird als Prototyp `virtual` und gibt standardmäßig einen leeren Deskriptor zurück, wenn kein übergeordneter Anbieter übergeben wurde.</span><span class="sxs-lookup"><span data-stu-id="2f587-220">This method is prototyped as `virtual` and, by default, returns an empty descriptor if no parent provider was passed.</span></span> <span data-ttu-id="2f587-221">Wenn ein übergeordneter Anbieter übergeben wurde, ruft diese Methode des übergeordneten Anbieters <xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="2f587-221">If a parent provider was passed, this method will invoke the parent provider's <xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="2f587-222">Die <see cref="M:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor(System.Type,System.Object)" /> -Methode mit einen benutzerdefinierten Typdeskriptor für das Objekt zurückgeben sollte.</span>
            <span class="sxs-lookup">
              <span data-stu-id="2f587-222">The <see cref="M:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor(System.Type,System.Object)" /> method should return a custom type descriptor for the object.</span>
            </span>
            <span data-ttu-id="2f587-223">Wenn die Methode keine Typinformationen für das Objekt bereitstellt, sollte es zurückgeben <see langword="null" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="2f587-223">If the method does not provide type information for the object, it should return <see langword="null" />.</span>
            </span>
          </para>
        </block>
        <altmember cref="M:System.ComponentModel.TypeDescriptionProvider.GetExtendedTypeDescriptor(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="IsSupportedType">
      <MemberSignature Language="C#" Value="public virtual bool IsSupportedType (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsSupportedType(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptionProvider.IsSupportedType(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsSupportedType(Type ^ type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="2f587-224">Der Typ, der auf Kompatibilität überprüft werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f587-224">The type to test for compatibility.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2f587-225">Ruft einen Wert ab, der angibt, ob der angegebene Typ mit der Typbeschreibung und der Kette von Typbeschreibungsanbietern kompatibel ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f587-225">Gets a value that indicates whether the specified type is compatible with the type description and its chain of type description providers.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2f587-226">
            <see langword="true" />, wenn <paramref name="type" /> mit der Typbeschreibung und der Kette von Typbeschreibungsanbietern kompatibel ist, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f587-226">
              <see langword="true" /> if <paramref name="type" /> is compatible with the type description and its chain of type description providers; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2f587-227">
            <paramref name="type" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f587-227">
              <paramref name="type" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>