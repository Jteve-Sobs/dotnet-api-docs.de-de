<Type Name="AsyncCompletedEventHandler" FullName="System.ComponentModel.AsyncCompletedEventHandler">
  <Metadata><Meta Name="ms.openlocfilehash" Value="b76eec3282c03f4bf27e4330e68a46cdd21a6cdf" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86733943" /></Metadata><TypeSignature Language="C#" Value="public delegate void AsyncCompletedEventHandler(object sender, AsyncCompletedEventArgs e);" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed AsyncCompletedEventHandler extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.AsyncCompletedEventHandler" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Sub AsyncCompletedEventHandler(sender As Object, e As AsyncCompletedEventArgs)" />
  <TypeSignature Language="C++ CLI" Value="public delegate void AsyncCompletedEventHandler(System::Object ^ sender, AsyncCompletedEventArgs ^ e);" />
  <TypeSignature Language="F#" Value="type AsyncCompletedEventHandler = delegate of obj * AsyncCompletedEventArgs -&gt; unit" />
  <TypeSignature Language="C#" Value="public delegate void AsyncCompletedEventHandler(object? sender, AsyncCompletedEventArgs e);" FrameworkAlternate="net-5.0" />
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.EventBasedAsync</AssemblyName>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="System" FromVersion="4.0.0.0" To="System.ComponentModel.EventBasedAsync" ToVersion="0.0.0.0" FrameworkAlternate="dotnet-uwp-10.0" />
    <TypeForwarding From="netstandard" FromVersion="2.1.0.0" To="System.ComponentModel.EventBasedAsync" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="sender" Type="System.Object" />
    <Parameter Name="e" Type="System.ComponentModel.AsyncCompletedEventArgs" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="sender"><span data-ttu-id="eeb13-101">Die Quelle des Ereignisses.</span><span class="sxs-lookup"><span data-stu-id="eeb13-101">The source of the event.</span></span></param>
    <param name="e"><span data-ttu-id="eeb13-102">Ein <see cref="T:System.ComponentModel.AsyncCompletedEventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="eeb13-102">An <see cref="T:System.ComponentModel.AsyncCompletedEventArgs" /> that contains the event data.</span></span></param>
    <summary><span data-ttu-id="eeb13-103">Stellt die Methode dar, die das *MethodName* - <see langword="Completed" /> Ereignis eines asynchronen Vorgangs behandelt.</span><span class="sxs-lookup"><span data-stu-id="eeb13-103">Represents the method that will handle the *MethodName*<see langword="Completed" /> event of an asynchronous operation.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eeb13-104">Beim Erstellen eines <xref:System.ComponentModel.AsyncCompletedEventHandler>-Delegaten geben Sie die Methode für die Ereignisbehandlung an.</span><span class="sxs-lookup"><span data-stu-id="eeb13-104">When you create an <xref:System.ComponentModel.AsyncCompletedEventHandler> delegate, you identify the method that will handle the event.</span></span> <span data-ttu-id="eeb13-105">Um dem Ereignishandler das Ereignis zuzuordnen, fügen Sie dem Ereignis eine Instanz des Delegaten hinzu.</span><span class="sxs-lookup"><span data-stu-id="eeb13-105">To associate the event with your event handler, add an instance of the delegate to the event.</span></span> <span data-ttu-id="eeb13-106">Die Ereignishandlermethode wird immer dann aufgerufen, wenn das-Ereignis auftritt, wenn Sie den Delegaten nicht entfernen.</span><span class="sxs-lookup"><span data-stu-id="eeb13-106">The event-handler method is called whenever the event occurs, unless you remove the delegate.</span></span> <span data-ttu-id="eeb13-107">Weitere Informationen zu Ereignishandlerdelegaten finden Sie unter [behandeln und Auswerfen von Ereignissen](/dotnet/standard/events/).</span><span class="sxs-lookup"><span data-stu-id="eeb13-107">For more information about event-handler delegates, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
 <span data-ttu-id="eeb13-108">Für eine asynchrone Methode namens *MethodName*in Ihrer Komponente verfügen Sie über ein entsprechendes *MethodName* `Completed` -Ereignis und eine optionale *MethodName* - `CompletedEventArgs` Klasse.</span><span class="sxs-lookup"><span data-stu-id="eeb13-108">For an asynchronous method, called *MethodName*, in your component, you will have a corresponding *MethodName*`Completed` event, and an optional *MethodName*`CompletedEventArgs` class.</span></span>  
  
 <span data-ttu-id="eeb13-109">Für eine Komponente, die mehrere gleichzeitige Aufrufe der asynchronen Methoden unterstützt, kann der Client ein eindeutiges Token oder eine Task-ID angeben, um zu unterscheiden, welche asynchrone Aufgabe bestimmte Ereignisse aufhebt.</span><span class="sxs-lookup"><span data-stu-id="eeb13-109">For a component that supports multiple concurrent invocations of its asynchronous methods, the client can supply a unique token, or task ID, to distinguish which asynchronous task is raising particular events.</span></span> <span data-ttu-id="eeb13-110">Der Client <xref:System.ComponentModel.AsyncCompletedEventHandler> kann die- <xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A?displayProperty=nameWithType> Eigenschaft lesen, um zu bestimmen, welcher Task den Abschluss meldet.</span><span class="sxs-lookup"><span data-stu-id="eeb13-110">The client's <xref:System.ComponentModel.AsyncCompletedEventHandler> can read the <xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A?displayProperty=nameWithType> property to determine which task is reporting completion.</span></span> <span data-ttu-id="eeb13-111">Die-Implementierung sollte das verwenden, <xref:System.ComponentModel.AsyncOperationManager?displayProperty=nameWithType> um einen zu erstellen <xref:System.ComponentModel.AsyncOperation?displayProperty=nameWithType> , der die Task-IDs des Clients mit ausstehenden asynchronen Tasks verknüpft.</span><span class="sxs-lookup"><span data-stu-id="eeb13-111">Your implementation should use the <xref:System.ComponentModel.AsyncOperationManager?displayProperty=nameWithType> to create an <xref:System.ComponentModel.AsyncOperation?displayProperty=nameWithType> that associates the client's task IDs with pending asynchronous tasks.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eeb13-112">Ein Codebeispiel für den-Delegaten finden Sie im <xref:System.ComponentModel.AsyncCompletedEventHandler> Beispiel in der- <xref:System.ComponentModel.AsyncCompletedEventArgs?displayProperty=nameWithType> Klasse.</span><span class="sxs-lookup"><span data-stu-id="eeb13-112">For a code example of the <xref:System.ComponentModel.AsyncCompletedEventHandler> delegate, see the example in the <xref:System.ComponentModel.AsyncCompletedEventArgs?displayProperty=nameWithType> class.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.AsyncCompletedEventArgs" />
    <altmember cref="T:System.ComponentModel.AsyncOperationManager" />
    <altmember cref="T:System.ComponentModel.AsyncOperation" />
    <related type="Article" href="/dotnet/standard/asynchronous-programming-patterns/event-based-asynchronous-pattern-overview"><span data-ttu-id="eeb13-113">Asynchrones Muster für Komponenten</span><span class="sxs-lookup"><span data-stu-id="eeb13-113">Asynchronous Pattern for Components</span></span></related>
  </Docs>
</Type>
