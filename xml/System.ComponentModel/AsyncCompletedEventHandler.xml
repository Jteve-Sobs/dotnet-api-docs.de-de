<Type Name="AsyncCompletedEventHandler" FullName="System.ComponentModel.AsyncCompletedEventHandler">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="fd55b51b3b83861863968e7a57f14568a3bd4730" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="08/24/2018" />
    <Meta Name="ms.locfileid" Value="37694791" />
  </Metadata>
  <TypeSignature Language="C#" Value="public delegate void AsyncCompletedEventHandler(object sender, AsyncCompletedEventArgs e);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed AsyncCompletedEventHandler extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.AsyncCompletedEventHandler" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Sub AsyncCompletedEventHandler(sender As Object, e As AsyncCompletedEventArgs)" />
  <TypeSignature Language="C++ CLI" Value="public delegate void AsyncCompletedEventHandler(System::Object ^ sender, AsyncCompletedEventArgs ^ e);" />
  <TypeSignature Language="F#" Value="type AsyncCompletedEventHandler = delegate of obj * AsyncCompletedEventArgs -&gt; unit" />
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.EventBasedAsync</AssemblyName>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="sender" Type="System.Object" />
    <Parameter Name="e" Type="System.ComponentModel.AsyncCompletedEventArgs" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="sender">Die Quelle des Ereignisses.</param>
    <param name="e">Ein <see cref="T:System.ComponentModel.AsyncCompletedEventArgs" />, das die Ereignisdaten enthält.</param>
    <summary>Stellt die Methode dar, die das *MethodName*<see langword="Completed" />-Ereignis eines asynchronen Vorgangs behandelt.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Beim Erstellen eines <xref:System.ComponentModel.AsyncCompletedEventHandler>-Delegaten geben Sie die Methode für die Ereignisbehandlung an. Um dem Ereignishandler das Ereignis zuzuordnen, fügen Sie dem Ereignis eine Instanz des Delegaten hinzu. Die Ereignishandlermethode wird aufgerufen, wenn das Ereignis eintritt, es sei denn, Sie den Delegaten entfernen. Weitere Informationen zu den Ereignishandlerdelegaten, finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 Für die aufgerufene asynchrone Methode, *MethodName*, in Ihrer Komponente müssen ein entsprechendes *MethodName* `Completed` Ereignis und einem optionalen *MethodName* `CompletedEventArgs` Klasse.  
  
 Für eine Komponente, die mehrere gleichzeitige Aufrufe der asynchronen Methoden unterstützt, kann angeben, des Clients ein eindeutiges Token oder Aufgaben-ID, um die asynchrone Aufgabe zu unterscheiden. bestimmte Ereignisse auslöst. Des Clients <xref:System.ComponentModel.AsyncCompletedEventHandler> erhalten die <xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A?displayProperty=nameWithType> Eigenschaft, um zu bestimmen, welche Aufgabe Abschluss meldet. Sollten Ihre Implementierung verwenden, die <xref:System.ComponentModel.AsyncOperationManager?displayProperty=nameWithType> zum Erstellen einer <xref:System.ComponentModel.AsyncOperation?displayProperty=nameWithType> , die der Client die Aufgaben-IDs mit ausstehenden asynchronen Aufgaben zuordnet.  
  
   
  
## Examples  
 Ein Codebeispiel für die <xref:System.ComponentModel.AsyncCompletedEventHandler> delegieren, siehe das Beispiel in der <xref:System.ComponentModel.AsyncCompletedEventArgs?displayProperty=nameWithType> Klasse.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.AsyncCompletedEventArgs" />
    <altmember cref="T:System.ComponentModel.AsyncOperationManager" />
    <altmember cref="T:System.ComponentModel.AsyncOperation" />
  </Docs>
</Type>