<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="AsyncCompletedEventHandler.xml" source-language="en-US" target-language="de-DE">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-81070f4" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9d63614a-fd48-4a83-9dc4-ea1e401b6c1576e2ef2904fad8c0af535c0ea033bed68b166577.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">76e2ef2904fad8c0af535c0ea033bed68b166577</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4b4804968da1dfdf71c501075a5b66957b54f2e8</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/27/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7.2,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.AsyncCompletedEventHandler">
          <source>The source of the event.</source>
          <target state="translated">Die Quelle des Ereignisses.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.AsyncCompletedEventHandler">
          <source>An <ph id="ph1">&lt;see cref="T:System.ComponentModel.AsyncCompletedEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.ComponentModel.AsyncCompletedEventArgs" /&gt;</ph>, das die Ereignisdaten enthält.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.AsyncCompletedEventHandler">
          <source>Represents the method that will handle the <bpt id="p1">*</bpt>MethodName<ept id="p1">*</ept><ph id="ph1">&lt;see langword="Completed" /&gt;</ph> event of an asynchronous operation.</source>
          <target state="translated">Stellt die Methode dar, die das <bpt id="p1">*</bpt>MethodName<ept id="p1">*</ept><ph id="ph1">&lt;see langword="Completed" /&gt;</ph>-Ereignis eines asynchronen Vorgangs behandelt.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.AsyncCompletedEventHandler">
          <source>When you create an <ph id="ph1">&lt;xref:System.ComponentModel.AsyncCompletedEventHandler&gt;</ph> delegate, you identify the method that will handle the event.</source>
          <target state="translated">Beim Erstellen eines <ph id="ph1">&lt;xref:System.ComponentModel.AsyncCompletedEventHandler&gt;</ph>-Delegaten geben Sie die Methode für die Ereignisbehandlung an.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.AsyncCompletedEventHandler">
          <source>To associate the event with your event handler, add an instance of the delegate to the event.</source>
          <target state="translated">Um dem Ereignishandler das Ereignis zuzuordnen, fügen Sie dem Ereignis eine Instanz des Delegaten hinzu.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.AsyncCompletedEventHandler">
          <source>The event-handler method is called whenever the event occurs, unless you remove the delegate.</source>
          <target state="translated">Die Ereignishandlermethode ist bei Eintreten des Ereignisses aufgerufen, sofern der Delegat nicht entfernt.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.AsyncCompletedEventHandler">
          <source>For more information about event-handler delegates, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">Weitere Informationen über Delegaten für Ereignishandler finden Sie unter <bpt id="p1">[</bpt>behandeln und Auslösen von Ereignissen<ept id="p1">](~/docs/standard/events/index.md)</ept>.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.AsyncCompletedEventHandler">
          <source>For an asynchronous method, called <bpt id="p1">*</bpt>MethodName<ept id="p1">*</ept>, in your component, you will have a corresponding <bpt id="p2">*</bpt>MethodName<ept id="p2">*</ept><ph id="ph1">`Completed`</ph> event, and an optional <bpt id="p3">*</bpt>MethodName<ept id="p3">*</ept><ph id="ph2">`CompletedEventArgs`</ph> class.</source>
          <target state="translated">Für eine asynchrone Methode <bpt id="p1">*</bpt>MethodName<ept id="p1">*</ept>, in Ihrer Komponente müssen entsprechende <bpt id="p2">*</bpt>MethodName<ept id="p2">*</ept> <ph id="ph1">`Completed`</ph> Ereignis und eine optionale <bpt id="p3">*</bpt>MethodName<ept id="p3">*</ept> <ph id="ph2">`CompletedEventArgs`</ph> Klasse.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.AsyncCompletedEventHandler">
          <source>For a component that supports multiple concurrent invocations of its asynchronous methods, the client can supply a unique token, or task ID, to distinguish which asynchronous task is raising particular events.</source>
          <target state="translated">Für eine Komponente, die mehrere gleichzeitige Aufrufe der asynchronen Methoden unterstützt, der Client ein eindeutiges Token bereitstellen kann, oder Task-ID, um die asynchrone Aufgabe unterscheiden zu können bestimmte Ereignisse auslöst.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.AsyncCompletedEventHandler">
          <source>The client's <ph id="ph1">&lt;xref:System.ComponentModel.AsyncCompletedEventHandler&gt;</ph> can read the <ph id="ph2">&lt;xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A?displayProperty=nameWithType&gt;</ph> property to determine which task is reporting completion.</source>
          <target state="translated">Der Clients <ph id="ph1">&lt;xref:System.ComponentModel.AsyncCompletedEventHandler&gt;</ph> erhalten die <ph id="ph2">&lt;xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A?displayProperty=nameWithType&gt;</ph> Eigenschaft, um zu bestimmen, welche Aufgabe Abschluss meldet.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.AsyncCompletedEventHandler">
          <source>Your implementation should use the <ph id="ph1">&lt;xref:System.ComponentModel.AsyncOperationManager?displayProperty=nameWithType&gt;</ph> to create an <ph id="ph2">&lt;xref:System.ComponentModel.AsyncOperation?displayProperty=nameWithType&gt;</ph> that associates the client's task IDs with pending asynchronous tasks.</source>
          <target state="translated">Ihre Implementierung zu verwendende der <ph id="ph1">&lt;xref:System.ComponentModel.AsyncOperationManager?displayProperty=nameWithType&gt;</ph> zum Erstellen einer <ph id="ph2">&lt;xref:System.ComponentModel.AsyncOperation?displayProperty=nameWithType&gt;</ph> , die der Client Aufgaben-IDs mit ausstehenden asynchronen Aufgaben zuordnet.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.AsyncCompletedEventHandler">
          <source>For a code example of the <ph id="ph1">&lt;xref:System.ComponentModel.AsyncCompletedEventHandler&gt;</ph> delegate, see the example in the <ph id="ph2">&lt;xref:System.ComponentModel.AsyncCompletedEventArgs?displayProperty=nameWithType&gt;</ph> class.</source>
          <target state="translated">Ein Codebeispiel für die <ph id="ph1">&lt;xref:System.ComponentModel.AsyncCompletedEventHandler&gt;</ph> delegieren, siehe das Beispiel in der <ph id="ph2">&lt;xref:System.ComponentModel.AsyncCompletedEventArgs?displayProperty=nameWithType&gt;</ph> Klasse.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>