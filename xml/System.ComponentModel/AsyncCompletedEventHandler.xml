<Type Name="AsyncCompletedEventHandler" FullName="System.ComponentModel.AsyncCompletedEventHandler">
  <Metadata><Meta Name="ms.openlocfilehash" Value="2a88fe9321bd14a09edfac94c7a3c7e606eb7d19" /><Meta Name="ms.sourcegitcommit" Value="1bb00d2f4343e73ae8d58668f02297a3cf10a4c1" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="06/15/2019" /><Meta Name="ms.locfileid" Value="63898429" /></Metadata><TypeSignature Language="C#" Value="public delegate void AsyncCompletedEventHandler(object sender, AsyncCompletedEventArgs e);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed AsyncCompletedEventHandler extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.AsyncCompletedEventHandler" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Sub AsyncCompletedEventHandler(sender As Object, e As AsyncCompletedEventArgs)" />
  <TypeSignature Language="C++ CLI" Value="public delegate void AsyncCompletedEventHandler(System::Object ^ sender, AsyncCompletedEventArgs ^ e);" />
  <TypeSignature Language="F#" Value="type AsyncCompletedEventHandler = delegate of obj * AsyncCompletedEventArgs -&gt; unit" />
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.EventBasedAsync</AssemblyName>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="sender" Type="System.Object" />
    <Parameter Name="e" Type="System.ComponentModel.AsyncCompletedEventArgs" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="sender"><span data-ttu-id="7d7c2-101">Die Quelle des Ereignisses.</span><span class="sxs-lookup"><span data-stu-id="7d7c2-101">The source of the event.</span></span></param>
    <param name="e"><span data-ttu-id="7d7c2-102">Ein <see cref="T:System.ComponentModel.AsyncCompletedEventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="7d7c2-102">An <see cref="T:System.ComponentModel.AsyncCompletedEventArgs" /> that contains the event data.</span></span></param>
    <summary><span data-ttu-id="7d7c2-103">Stellt die Methode dar, die das *MethodName*<see langword="Completed" />-Ereignis eines asynchronen Vorgangs behandelt.</span><span class="sxs-lookup"><span data-stu-id="7d7c2-103">Represents the method that will handle the *MethodName*<see langword="Completed" /> event of an asynchronous operation.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7d7c2-104">Beim Erstellen eines <xref:System.ComponentModel.AsyncCompletedEventHandler>-Delegaten geben Sie die Methode für die Ereignisbehandlung an.</span><span class="sxs-lookup"><span data-stu-id="7d7c2-104">When you create an <xref:System.ComponentModel.AsyncCompletedEventHandler> delegate, you identify the method that will handle the event.</span></span> <span data-ttu-id="7d7c2-105">Um dem Ereignishandler das Ereignis zuzuordnen, fügen Sie dem Ereignis eine Instanz des Delegaten hinzu.</span><span class="sxs-lookup"><span data-stu-id="7d7c2-105">To associate the event with your event handler, add an instance of the delegate to the event.</span></span> <span data-ttu-id="7d7c2-106">Die Ereignishandlermethode wird aufgerufen, wenn das Ereignis eintritt, es sei denn, Sie den Delegaten entfernen.</span><span class="sxs-lookup"><span data-stu-id="7d7c2-106">The event-handler method is called whenever the event occurs, unless you remove the delegate.</span></span> <span data-ttu-id="7d7c2-107">Weitere Informationen zu den Ereignishandlerdelegaten, finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="7d7c2-107">For more information about event-handler delegates, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="7d7c2-108">Für die aufgerufene asynchrone Methode, *MethodName*, in Ihrer Komponente müssen ein entsprechendes *MethodName* `Completed` Ereignis und einem optionalen *MethodName* `CompletedEventArgs` Klasse.</span><span class="sxs-lookup"><span data-stu-id="7d7c2-108">For an asynchronous method, called *MethodName*, in your component, you will have a corresponding *MethodName*`Completed` event, and an optional *MethodName*`CompletedEventArgs` class.</span></span>  
  
 <span data-ttu-id="7d7c2-109">Für eine Komponente, die mehrere gleichzeitige Aufrufe der asynchronen Methoden unterstützt, kann angeben, des Clients ein eindeutiges Token oder Aufgaben-ID, um die asynchrone Aufgabe zu unterscheiden. bestimmte Ereignisse auslöst.</span><span class="sxs-lookup"><span data-stu-id="7d7c2-109">For a component that supports multiple concurrent invocations of its asynchronous methods, the client can supply a unique token, or task ID, to distinguish which asynchronous task is raising particular events.</span></span> <span data-ttu-id="7d7c2-110">Des Clients <xref:System.ComponentModel.AsyncCompletedEventHandler> erhalten die <xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A?displayProperty=nameWithType> Eigenschaft, um zu bestimmen, welche Aufgabe Abschluss meldet.</span><span class="sxs-lookup"><span data-stu-id="7d7c2-110">The client's <xref:System.ComponentModel.AsyncCompletedEventHandler> can read the <xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A?displayProperty=nameWithType> property to determine which task is reporting completion.</span></span> <span data-ttu-id="7d7c2-111">Sollten Ihre Implementierung verwenden, die <xref:System.ComponentModel.AsyncOperationManager?displayProperty=nameWithType> zum Erstellen einer <xref:System.ComponentModel.AsyncOperation?displayProperty=nameWithType> , die der Client die Aufgaben-IDs mit ausstehenden asynchronen Aufgaben zuordnet.</span><span class="sxs-lookup"><span data-stu-id="7d7c2-111">Your implementation should use the <xref:System.ComponentModel.AsyncOperationManager?displayProperty=nameWithType> to create an <xref:System.ComponentModel.AsyncOperation?displayProperty=nameWithType> that associates the client's task IDs with pending asynchronous tasks.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7d7c2-112">Ein Codebeispiel für die <xref:System.ComponentModel.AsyncCompletedEventHandler> delegieren, siehe das Beispiel in der <xref:System.ComponentModel.AsyncCompletedEventArgs?displayProperty=nameWithType> Klasse.</span><span class="sxs-lookup"><span data-stu-id="7d7c2-112">For a code example of the <xref:System.ComponentModel.AsyncCompletedEventHandler> delegate, see the example in the <xref:System.ComponentModel.AsyncCompletedEventArgs?displayProperty=nameWithType> class.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.AsyncCompletedEventArgs" />
    <altmember cref="T:System.ComponentModel.AsyncOperationManager" />
    <altmember cref="T:System.ComponentModel.AsyncOperation" />
    <related type="Article" href="https://msdn.microsoft.com/library/792aa8da-918b-458e-b154-9836b97735f3"><span data-ttu-id="7d7c2-113">Asynchrone Muster für Komponenten</span><span class="sxs-lookup"><span data-stu-id="7d7c2-113">Asynchronous Pattern for Components</span></span></related>
  </Docs>
</Type>