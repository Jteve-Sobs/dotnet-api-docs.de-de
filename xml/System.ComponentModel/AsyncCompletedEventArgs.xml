<Type Name="AsyncCompletedEventArgs" FullName="System.ComponentModel.AsyncCompletedEventArgs">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="9536ea1bbd455f045b8bf42ca811c20c2823cc54" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30369754" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class AsyncCompletedEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit AsyncCompletedEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.AsyncCompletedEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class AsyncCompletedEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class AsyncCompletedEventArgs : EventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.EventBasedAsync</AssemblyName>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Stellt Daten für das *MethodName*<see langword="Completed" />-Ereignis bereit.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bei Verwendung eine Klasse, die implementiert die [Übersicht über ereignisbasierte asynchrone Muster](~/docs/standard/asynchronous-programming-patterns/event-based-asynchronous-pattern-overview.md), geben Sie die Klasse wird eine *MethodName* `Completed` Ereignis. Wenn Sie eine Instanz des Hinzufügen der <xref:System.ComponentModel.AsyncCompletedEventHandler?displayProperty=nameWithType> delegieren an das Ereignis erhalten Sie Informationen über das Ergebnis des asynchronen Vorgängen in der <xref:System.ComponentModel.AsyncCompletedEventArgs> Parameter der entsprechenden Ereignishandler Methode.  
  
 Die Clientanwendung Ereignishandlerdelegat sehen die <xref:System.ComponentModel.AsyncCompletedEventArgs.Cancelled%2A> Eigenschaft, um zu bestimmen, ob die asynchrone Aufgabe abgebrochen wurde.  
  
 Die Clientanwendung Ereignishandlerdelegat sehen die <xref:System.ComponentModel.AsyncCompletedEventArgs.Error%2A> Eigenschaft, um zu bestimmen, ob während der Ausführung der asynchronen Aufgabe eine Ausnahme aufgetreten ist.  
  
 Wenn die Klasse mehrere asynchrone Methoden oder mehrere Aufrufe derselben asynchronen Methode unterstützt, können Sie bestimmen, welche Aufgabe ausgelöst hat die *MethodName* `Completed` Ereignis durch Überprüfung des Werts von der <xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A> Eigenschaft. Muss Ihr Code diese Token als Aufgaben-IDs bezeichnet werden, wie die zugehörigen asynchrone Aufgaben starten und Abschließen nachverfolgen.  
  
   
  
## Examples  
 Das folgende Codebeispiel veranschaulicht die Verwendung einer <xref:System.ComponentModel.AsyncOperation> zum Nachverfolgen der Lebensdauer der asynchronen Vorgänge. Dieses Codebeispiel ist Teil eines umfangreicheren Beispiels für die <xref:System.ComponentModel.AsyncOperationManager?displayProperty=nameWithType> Klasse.  
  
 [!code-csharp[System.ComponentModel.AsyncOperationManager#11](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.AsyncOperationManager/CS/primenumbercalculatormain.cs#11)]
 [!code-vb[System.ComponentModel.AsyncOperationManager#11](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.AsyncOperationManager/VB/primenumbercalculatormain.vb#11)]  
[!code-csharp[System.ComponentModel.AsyncOperationManager#12](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.AsyncOperationManager/CS/primenumbercalculatormain.cs#12)]
[!code-vb[System.ComponentModel.AsyncOperationManager#12](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.AsyncOperationManager/VB/primenumbercalculatormain.vb#12)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para>Klassen, die das ereignisbasierte asynchrone Muster folgen können Auslösen von Ereignissen an alert Clients über den Status des ausstehenden asynchronen Vorgänge. Wenn die Klasse stellt eine *MethodName* <see langword="Completed" /> -Ereignis können Sie die <see cref="T:System.ComponentModel.AsyncCompletedEventArgs" /> Clients über das Ergebnis des asynchronen Vorgänge informieren.  
  
 Möglicherweise möchten Sie um Clients mitzuteilen, Weitere Informationen über das Ergebnis eines asynchronen Vorgangs als ein <see cref="T:System.ComponentModel.AsyncCompletedEventArgs" /> verfügt. In diesem Fall können Sie leiten Sie eine eigene Klasse von der <see cref="T:System.ComponentModel.AsyncCompletedEventArgs" /> -Klasse und zusätzliche private Instanzvariablen und entsprechende schreibgeschützte öffentliche Eigenschaften bereitstellen. Rufen Sie die <see cref="M:System.ComponentModel.AsyncCompletedEventArgs.RaiseExceptionIfNecessary" /> Methode vor der Rückgabe den Wert der Eigenschaft, falls der Vorgang abgebrochen wurde oder ist ein Fehler aufgetreten.</para>
    </block>
    <altmember cref="T:System.ComponentModel.AsyncCompletedEventHandler" />
    <altmember cref="T:System.ComponentModel.AsyncOperationManager" />
    <altmember cref="T:System.ComponentModel.AsyncOperation" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.AsyncCompletedEventArgs" />-Klasse.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AsyncCompletedEventArgs ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.AsyncCompletedEventArgs.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AsyncCompletedEventArgs();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.AsyncCompletedEventArgs" />-Klasse.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AsyncCompletedEventArgs (Exception error, bool cancelled, object userState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Exception error, bool cancelled, object userState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.AsyncCompletedEventArgs.#ctor(System.Exception,System.Boolean,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (error As Exception, cancelled As Boolean, userState As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AsyncCompletedEventArgs(Exception ^ error, bool cancelled, System::Object ^ userState);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.EventBasedAsync</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="error" Type="System.Exception" />
        <Parameter Name="cancelled" Type="System.Boolean" />
        <Parameter Name="userState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="error">Ein während des asynchronen Vorgangs aufgetretener Fehler.</param>
        <param name="cancelled">Ein Wert, der angibt, ob der asynchrone Vorgang abgebrochen wurde.</param>
        <param name="userState">Das an die <see cref="M:System.ComponentModel.BackgroundWorker.RunWorkerAsync(System.Object)" />-Methode übergebene, optionale benutzerdefinierte Zustandsobjekt.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.AsyncCompletedEventArgs" />-Klasse.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Cancelled">
      <MemberSignature Language="C#" Value="public bool Cancelled { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Cancelled" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.AsyncCompletedEventArgs.Cancelled" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Cancelled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Cancelled { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.EventBasedAsync</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob ein asynchroner Vorgang abgebrochen wurde.</summary>
        <value>
          <see langword="true" />, wenn der Hintergrundvorgang abgebrochen wurde, andernfalls <see langword="false" />. Der Standardwert ist <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn die <xref:System.ComponentModel.AsyncCompletedEventArgs.Cancelled%2A> Eigenschaft `true`, der asynchrone Vorgang wurde unterbrochen.  
  
 Die Clientanwendung Ereignishandlerdelegat Prüfen der <xref:System.ComponentModel.AsyncCompletedEventArgs.Cancelled%2A> Eigenschaft vor dem Zugriff auf alle Eigenschaften in einer Klasse abgeleitet <xref:System.ComponentModel.AsyncCompletedEventArgs>ist, andernfalls löst die Eigenschaft ein <xref:System.InvalidOperationException> , wenn der asynchrone Vorgang war unterbrochen.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, die mit einer <xref:System.ComponentModel.AsyncOperation> zum Nachverfolgen der Lebensdauer der asynchronen Vorgänge. Dieses Codebeispiel ist Teil eines umfangreicheren Beispiels für die <xref:System.ComponentModel.AsyncOperationManager?displayProperty=nameWithType> Klasse.  
  
 [!code-csharp[System.ComponentModel.AsyncOperationManager#11](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.AsyncOperationManager/CS/primenumbercalculatormain.cs#11)]
 [!code-vb[System.ComponentModel.AsyncOperationManager#11](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.AsyncOperationManager/VB/primenumbercalculatormain.vb#11)]  
[!code-csharp[System.ComponentModel.AsyncOperationManager#12](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.AsyncOperationManager/CS/primenumbercalculatormain.cs#12)]
[!code-vb[System.ComponentModel.AsyncOperationManager#12](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.AsyncOperationManager/VB/primenumbercalculatormain.vb#12)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Wenn Sie schreibgeschützte Eigenschaften in einer abgeleiteten Klasse angeben, achten Sie darauf zum Aufrufen der <see cref="M:System.ComponentModel.AsyncCompletedEventArgs.RaiseExceptionIfNecessary" /> Methode. Dadurch wird verhindert, dass Clients den Zugriff auf Eigenschaften, die möglicherweise nicht aufgrund eines Fehlers in den asynchronen Vorgang gültig sind.</para>
        </block>
        <altmember cref="T:System.ComponentModel.AsyncCompletedEventHandler" />
        <altmember cref="T:System.ComponentModel.AsyncOperationManager" />
        <altmember cref="T:System.ComponentModel.AsyncOperation" />
      </Docs>
    </Member>
    <Member MemberName="Error">
      <MemberSignature Language="C#" Value="public Exception Error { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Exception Error" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.AsyncCompletedEventArgs.Error" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Error As Exception" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Exception ^ Error { Exception ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.EventBasedAsync</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, welcher Fehler während eines asynchronen Vorgangs aufgetreten ist.</summary>
        <value>Eine <see cref="T:System.Exception" />-Instanz, wenn während eines asynchronen Vorgangs ein Fehler aufgetreten ist, andernfalls <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn eine Ausnahme während einer asynchronen Operation ausgelöst wird, weist die Klasse die Ausnahme, die <xref:System.ComponentModel.AsyncCompletedEventArgs.Error%2A> Eigenschaft. Ereignishandlerdelegat die Clientanwendung sollte Überprüfen der <xref:System.ComponentModel.AsyncCompletedEventArgs.Error%2A> Eigenschaft vor dem Zugriff auf alle Eigenschaften in einer Klasse abgeleitet <xref:System.ComponentModel.AsyncCompletedEventArgs>ist, andernfalls löst die Eigenschaft eine <xref:System.Reflection.TargetInvocationException> mit seiner <xref:System.Exception.InnerException%2A> Eigenschaft Betrieb einer Ein Verweis auf <xref:System.ComponentModel.AsyncCompletedEventArgs.Error%2A>.  
  
 Der Wert, der die <xref:System.ComponentModel.AsyncCompletedEventArgs.Error%2A> Eigenschaft ist `null` , wenn der Vorgang abgebrochen wurde.  
  
   
  
## Examples  
 Das folgende Codebeispiel veranschaulicht die Verwendung einer <xref:System.ComponentModel.AsyncOperation> zum Nachverfolgen der Lebensdauer der asynchronen Vorgänge. Dieses Codebeispiel ist Teil eines umfangreicheren Beispiels für die <xref:System.ComponentModel.AsyncOperationManager?displayProperty=nameWithType> Klasse.  
  
 [!code-csharp[System.ComponentModel.AsyncOperationManager#11](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.AsyncOperationManager/CS/primenumbercalculatormain.cs#11)]
 [!code-vb[System.ComponentModel.AsyncOperationManager#11](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.AsyncOperationManager/VB/primenumbercalculatormain.vb#11)]  
[!code-csharp[System.ComponentModel.AsyncOperationManager#12](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.AsyncOperationManager/CS/primenumbercalculatormain.cs#12)]
[!code-vb[System.ComponentModel.AsyncOperationManager#12](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.AsyncOperationManager/VB/primenumbercalculatormain.vb#12)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Wenn Sie schreibgeschützte Eigenschaften in einer abgeleiteten Klasse angeben, achten Sie darauf zum Aufrufen der <see cref="M:System.ComponentModel.AsyncCompletedEventArgs.RaiseExceptionIfNecessary" /> Methode in Ihrer eigenschaftenimplementierung. Dadurch wird verhindert, dass Clients den Zugriff auf Eigenschaften, die möglicherweise nicht aufgrund eines Fehlers in den asynchronen Vorgang gültig sind.</para>
        </block>
        <altmember cref="T:System.ComponentModel.AsyncCompletedEventHandler" />
        <altmember cref="T:System.ComponentModel.AsyncOperationManager" />
        <altmember cref="T:System.ComponentModel.AsyncOperation" />
      </Docs>
    </Member>
    <Member MemberName="RaiseExceptionIfNecessary">
      <MemberSignature Language="C#" Value="protected void RaiseExceptionIfNecessary ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void RaiseExceptionIfNecessary() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.AsyncCompletedEventArgs.RaiseExceptionIfNecessary" />
      <MemberSignature Language="VB.NET" Value="Protected Sub RaiseExceptionIfNecessary ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void RaiseExceptionIfNecessary();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.EventBasedAsync</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Löst eine benutzerdefinierte Ausnahme aus, wenn bei einem asynchronen Vorgang ein Fehler aufgetreten ist.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Das folgende Codebeispiel veranschaulicht die Verwendung <xref:System.ComponentModel.AsyncCompletedEventArgs.RaiseExceptionIfNecessary%2A> Klasseneigenschaften abgeleitet.  
  
  
[!code-csharp[System.ComponentModel.AsyncOperationManager#6](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.AsyncOperationManager/CS/primenumbercalculatormain.cs#6)]
[!code-vb[System.ComponentModel.AsyncOperationManager#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.AsyncOperationManager/VB/primenumbercalculatormain.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Die <see cref="P:System.ComponentModel.AsyncCompletedEventArgs.Cancelled" />-Eigenschaft ist <see langword="true" />.</exception>
        <exception cref="T:System.Reflection.TargetInvocationException">Die <see cref="P:System.ComponentModel.AsyncCompletedEventArgs.Error" />-Eigenschaft wurde durch den asynchronen Vorgang festgelegt. Die <see cref="P:System.Exception.InnerException" />-Eigenschaft enthält einen Verweis auf <see cref="P:System.ComponentModel.AsyncCompletedEventArgs.Error" />.</exception>
        <block subset="none" type="overrides">
          <para>Wenn Sie eine eigene Klasse von abgeleitet haben die <see cref="T:System.ComponentModel.AsyncCompletedEventArgs" /> -Klasse, die schreibgeschützten Eigenschaften sollten Aufrufen der <see cref="M:System.ComponentModel.AsyncCompletedEventArgs.RaiseExceptionIfNecessary" /> Methode vor der Rückgabe den Wert der Eigenschaft. Wenn die von der Komponente asynchrone weist Worker-Code eine Ausnahme der <see cref="P:System.ComponentModel.AsyncCompletedEventArgs.Error" /> Eigenschaft oder legt ihn fest der <see cref="P:System.ComponentModel.AsyncCompletedEventArgs.Cancelled" /> Eigenschaft <see langword="true" />, die Eigenschaft wird eine Ausnahme ausgelöst, wenn ein Client versucht, dessen Wert zu lesen. Dadurch wird verhindert, dass Clients den Zugriff auf Eigenschaften, die möglicherweise nicht aufgrund eines Fehlers in den asynchronen Vorgang gültig sind.</para>
        </block>
        <altmember cref="T:System.ComponentModel.AsyncOperationManager" />
        <altmember cref="T:System.ComponentModel.AsyncOperation" />
      </Docs>
    </Member>
    <Member MemberName="UserState">
      <MemberSignature Language="C#" Value="public object UserState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object UserState" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.AsyncCompletedEventArgs.UserState" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UserState As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ UserState { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.EventBasedAsync</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den eindeutigen Bezeichner der asynchronen Aufgabe ab.</summary>
        <value>Ein Objektverweis, der die asynchrone Aufgabe eindeutig bezeichnet, andernfalls <see langword="null" />, wenn kein Wert festgelegt wurde.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn eine Klasse mehrere asynchrone Methoden oder mehrere Aufrufe einer einzelnen Methode unterstützt, können Sie bestimmen, welche Aufgabe ausgelöst hat die *MethodName* `Completed` Ereignis durch Überprüfung des Werts von der <xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A> Eigenschaft. Der Code verfolgt müssen diese Token als Aufgaben-IDs bezeichnet werden, wie die zugehörigen asynchrone Aufgaben starten und abschließen.  
  
 Der Wert dieser Eigenschaft wird während der ursprüngliche Aufruf der asynchronen Methode festgelegt, die die Aufgabe gestartet.  
  
   
  
## Examples  
 Das folgende Codebeispiel veranschaulicht die Verwendung einer <xref:System.ComponentModel.AsyncOperation> zum Nachverfolgen der Lebensdauer der asynchronen Vorgänge. Dieses Codebeispiel ist Teil eines umfangreicheren Beispiels für die <xref:System.ComponentModel.AsyncOperationManager?displayProperty=nameWithType> Klasse.  
  
 [!code-csharp[System.ComponentModel.AsyncOperationManager#11](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.AsyncOperationManager/CS/primenumbercalculatormain.cs#11)]
 [!code-vb[System.ComponentModel.AsyncOperationManager#11](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.AsyncOperationManager/VB/primenumbercalculatormain.vb#11)]  
[!code-csharp[System.ComponentModel.AsyncOperationManager#12](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.AsyncOperationManager/CS/primenumbercalculatormain.cs#12)]
[!code-vb[System.ComponentModel.AsyncOperationManager#12](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.AsyncOperationManager/VB/primenumbercalculatormain.vb#12)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.AsyncCompletedEventHandler" />
        <altmember cref="T:System.ComponentModel.AsyncOperationManager" />
        <altmember cref="T:System.ComponentModel.AsyncOperation" />
      </Docs>
    </Member>
  </Members>
</Type>