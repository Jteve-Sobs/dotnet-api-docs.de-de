<Type Name="ISynchronizeInvoke" FullName="System.ComponentModel.ISynchronizeInvoke">
  <Metadata><Meta Name="ms.openlocfilehash" Value="89029ee04645326089681c9c6cbecc31dd4ae85f" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70460086" /></Metadata><TypeSignature Language="C#" Value="public interface ISynchronizeInvoke" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ISynchronizeInvoke" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.ISynchronizeInvoke" />
  <TypeSignature Language="VB.NET" Value="Public Interface ISynchronizeInvoke" />
  <TypeSignature Language="C++ CLI" Value="public interface class ISynchronizeInvoke" />
  <TypeSignature Language="F#" Value="type ISynchronizeInvoke = interface" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.Primitives</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="24a54-101">Ermöglicht das synchrone oder asynchrone Ausführen eines Delegaten.</span><span class="sxs-lookup"><span data-stu-id="24a54-101">Provides a way to synchronously or asynchronously execute a delegate.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="24a54-102">Die <xref:System.ComponentModel.ISynchronizeInvoke> -Schnittstelle bietet synchrone und asynchrone Kommunikation zwischen Objekten über das Auftreten eines Ereignisses.</span><span class="sxs-lookup"><span data-stu-id="24a54-102">The <xref:System.ComponentModel.ISynchronizeInvoke> interface provides synchronous and asynchronous communication between objects about the occurrence of an event.</span></span> <span data-ttu-id="24a54-103">Objekte, die diese Schnittstelle implementieren, können eine Benachrichtigung erhalten, dass ein Ereignis aufgetreten ist, und Sie können auf Abfragen über das Ereignis reagieren.</span><span class="sxs-lookup"><span data-stu-id="24a54-103">Objects that implement this interface can receive notification that an event has occurred, and they can respond to queries about the event.</span></span> <span data-ttu-id="24a54-104">Auf diese Weise können Clients sicherstellen, dass eine Anforderung verarbeitet wurde, bevor Sie eine nachfolgende Anforderung übermitteln, die von der Ausführung der ersten Anforderung abhängig ist.</span><span class="sxs-lookup"><span data-stu-id="24a54-104">In this way, clients can ensure that one request has been processed before they submit a subsequent request that depends on completion of the first.</span></span>  
  
 <span data-ttu-id="24a54-105">Die <xref:System.ComponentModel.ISynchronizeInvoke> -Klasse bietet zwei Möglichkeiten, einen Prozess aufzurufen:</span><span class="sxs-lookup"><span data-stu-id="24a54-105">The <xref:System.ComponentModel.ISynchronizeInvoke> class provides two ways to invoke a process:</span></span>  
  
1.  <span data-ttu-id="24a54-106">Asynchron, mithilfe der <xref:System.ComponentModel.ISynchronizeInvoke.BeginInvoke%2A> -Methode.</span><span class="sxs-lookup"><span data-stu-id="24a54-106">Asynchronously, by using the <xref:System.ComponentModel.ISynchronizeInvoke.BeginInvoke%2A> method.</span></span> <span data-ttu-id="24a54-107"><xref:System.ComponentModel.ISynchronizeInvoke.BeginInvoke%2A>startet einen Prozess und wird dann sofort zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="24a54-107"><xref:System.ComponentModel.ISynchronizeInvoke.BeginInvoke%2A> starts a process and then returns immediately.</span></span> <span data-ttu-id="24a54-108">Verwenden <xref:System.ComponentModel.ISynchronizeInvoke.EndInvoke%2A> Sie, um zu warten, bis <xref:System.ComponentModel.ISynchronizeInvoke.BeginInvoke%2A> der von gestartete Prozess abgeschlossen ist.</span><span class="sxs-lookup"><span data-stu-id="24a54-108">Use <xref:System.ComponentModel.ISynchronizeInvoke.EndInvoke%2A> to wait until the process started by <xref:System.ComponentModel.ISynchronizeInvoke.BeginInvoke%2A> completes.</span></span>  
  
2.  <span data-ttu-id="24a54-109">Synchron, mithilfe der <xref:System.ComponentModel.ISynchronizeInvoke.Invoke%2A> -Methode.</span><span class="sxs-lookup"><span data-stu-id="24a54-109">Synchronously, by using the <xref:System.ComponentModel.ISynchronizeInvoke.Invoke%2A> method.</span></span> <span data-ttu-id="24a54-110"><xref:System.ComponentModel.ISynchronizeInvoke.Invoke%2A>startet einen Prozess, wartet, bis er abgeschlossen ist, und gibt dann zurück.</span><span class="sxs-lookup"><span data-stu-id="24a54-110"><xref:System.ComponentModel.ISynchronizeInvoke.Invoke%2A> starts a process, waits until it completes, and then returns.</span></span> <span data-ttu-id="24a54-111">Verwenden <xref:System.ComponentModel.ISynchronizeInvoke.Invoke%2A> Sie, wenn der Haupt Thread des-Steuer Elements vom aufrufenden Thread abweicht, um den Aufruf an den richtigen Thread zu Mars Hallen.</span><span class="sxs-lookup"><span data-stu-id="24a54-111">Use <xref:System.ComponentModel.ISynchronizeInvoke.Invoke%2A> when the control's main thread is different from the calling thread to marshal the call to the proper thread.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="24a54-112">Das <xref:System.Security.Permissions.HostProtectionAttribute> auf diese Klasse angewendete-Attribut <xref:System.Security.Permissions.HostProtectionAttribute.Resources%2A> besitzt den folgenden <xref:System.Security.Permissions.HostProtectionResource.Synchronization> -Eigenschafts Wert: &#124; <xref:System.Security.Permissions.HostProtectionResource.ExternalThreading>.</span><span class="sxs-lookup"><span data-stu-id="24a54-112">The <xref:System.Security.Permissions.HostProtectionAttribute> attribute applied to this class has the following <xref:System.Security.Permissions.HostProtectionAttribute.Resources%2A> property value: <xref:System.Security.Permissions.HostProtectionResource.Synchronization> &#124; <xref:System.Security.Permissions.HostProtectionResource.ExternalThreading>.</span></span> <span data-ttu-id="24a54-113">Das <xref:System.Security.Permissions.HostProtectionAttribute> hat keine Auswirkungen auf Desktopanwendungen (die normalerweise durch Doppelklicken auf ein Symbol, Eingeben eines Befehls oder einer URL in einem Browser gestartet werden).</span><span class="sxs-lookup"><span data-stu-id="24a54-113">The <xref:System.Security.Permissions.HostProtectionAttribute> does not affect desktop applications (which are typically started by double-clicking an icon, typing a command, or entering a URL in a browser).</span></span> <span data-ttu-id="24a54-114">Weitere Informationen finden Sie unter der <xref:System.Security.Permissions.HostProtectionAttribute> -Klasse oder [SQL Server-Programmier-und Host Schutz Attributen](~/docs/framework/performance/sql-server-programming-and-host-protection-attributes.md).</span><span class="sxs-lookup"><span data-stu-id="24a54-114">For more information, see the <xref:System.Security.Permissions.HostProtectionAttribute> class or [SQL Server Programming and Host Protection Attributes](~/docs/framework/performance/sql-server-programming-and-host-protection-attributes.md).</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="M:System.ComponentModel.ISynchronizeInvoke.BeginInvoke(System.Delegate,System.Object[])" />
    <altmember cref="M:System.ComponentModel.ISynchronizeInvoke.EndInvoke(System.IAsyncResult)" />
    <altmember cref="M:System.ComponentModel.ISynchronizeInvoke.Invoke(System.Delegate,System.Object[])" />
  </Docs>
  <Members>
    <Member MemberName="BeginInvoke">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginInvoke (Delegate method, object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginInvoke(class System.Delegate method, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.ISynchronizeInvoke.BeginInvoke(System.Delegate,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginInvoke (method As Delegate, args As Object()) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginInvoke(Delegate ^ method, cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="abstract member BeginInvoke : Delegate * obj[] -&gt; IAsyncResult" Usage="iSynchronizeInvoke.BeginInvoke (method, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Primitives</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="method" Type="System.Delegate" />
        <Parameter Name="args" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="method"><span data-ttu-id="24a54-115">Ein <see cref="T:System.Delegate" /> einer Methode, der über dieselbe Anzahl Parameter desselben Typs verfügt, die in <paramref name="args" /> enthalten sind.</span><span class="sxs-lookup"><span data-stu-id="24a54-115">A <see cref="T:System.Delegate" /> to a method that takes parameters of the same number and type that are contained in <paramref name="args" />.</span></span></param>
        <param name="args"><span data-ttu-id="24a54-116">Ein Array vom Typ <see cref="T:System.Object" />, das als Argument an die angegebene Methode übergeben werden soll.</span><span class="sxs-lookup"><span data-stu-id="24a54-116">An array of type <see cref="T:System.Object" /> to pass as arguments to the given method.</span></span> <span data-ttu-id="24a54-117">Dies kann <see langword="null" /> sein, wenn keine Argumente benötigt werden.</span><span class="sxs-lookup"><span data-stu-id="24a54-117">This can be <see langword="null" /> if no arguments are needed.</span></span></param>
        <summary><span data-ttu-id="24a54-118">Führt den Delegaten asynchron für den Thread aus, der dieses Objekt erstellt hat.</span><span class="sxs-lookup"><span data-stu-id="24a54-118">Asynchronously executes the delegate on the thread that created this object.</span></span></summary>
        <returns><span data-ttu-id="24a54-119">Eine <see cref="T:System.IAsyncResult" />-Schnittstelle, die die durch Aufrufen dieser Methode gestartete asynchrone Operation darstellt.</span><span class="sxs-lookup"><span data-stu-id="24a54-119">An <see cref="T:System.IAsyncResult" /> interface that represents the asynchronous operation started by calling this method.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="24a54-120">Der `method` Delegat wird auf dem Thread ausgeführt, der das-Objekt erstellt hat, und nicht <xref:System.ComponentModel.ISynchronizeInvoke.BeginInvoke%2A> auf dem Thread, in dem aufgerufen wurde.</span><span class="sxs-lookup"><span data-stu-id="24a54-120">The `method` delegate is executed on the thread that created the object, instead of the thread on which <xref:System.ComponentModel.ISynchronizeInvoke.BeginInvoke%2A> was called.</span></span>  
  
 <span data-ttu-id="24a54-121">Der Delegat wird asynchron aufgerufen, und diese Methode wird sofort zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="24a54-121">The delegate is called asynchronously, and this method returns immediately.</span></span> <span data-ttu-id="24a54-122">Sie können diese Methode von einem beliebigen Thread aus abrufen.</span><span class="sxs-lookup"><span data-stu-id="24a54-122">You can call this method from any thread.</span></span> <span data-ttu-id="24a54-123">Wenn Sie den Rückgabewert von einem Prozess benötigen, der mit dieser Methode gestartet <xref:System.ComponentModel.ISynchronizeInvoke.EndInvoke%2A> wurde, wird aufgerufen, um den Wert abzurufen.</span><span class="sxs-lookup"><span data-stu-id="24a54-123">If you need the return value from a process started with this method, call <xref:System.ComponentModel.ISynchronizeInvoke.EndInvoke%2A> to get the value.</span></span>  
  
 <span data-ttu-id="24a54-124">Wenn Sie den Delegaten synchron aufzurufen müssen, verwenden Sie <xref:System.ComponentModel.ISynchronizeInvoke.Invoke%2A> stattdessen die-Methode.</span><span class="sxs-lookup"><span data-stu-id="24a54-124">If you need to call the delegate synchronously, use the <xref:System.ComponentModel.ISynchronizeInvoke.Invoke%2A> method instead.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.ISynchronizeInvoke.EndInvoke(System.IAsyncResult)" />
      </Docs>
    </Member>
    <Member MemberName="EndInvoke">
      <MemberSignature Language="C#" Value="public object EndInvoke (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object EndInvoke(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.ISynchronizeInvoke.EndInvoke(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndInvoke (result As IAsyncResult) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ EndInvoke(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="abstract member EndInvoke : IAsyncResult -&gt; obj" Usage="iSynchronizeInvoke.EndInvoke result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Primitives</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result"><span data-ttu-id="24a54-125">Eine <see cref="T:System.IAsyncResult" />-Schnittstelle, die die durch einen Aufruf von <see cref="M:System.ComponentModel.ISynchronizeInvoke.BeginInvoke(System.Delegate,System.Object[])" /> gestartete asynchrone Operation darstellt.</span><span class="sxs-lookup"><span data-stu-id="24a54-125">An <see cref="T:System.IAsyncResult" /> interface that represents the asynchronous operation started by calling <see cref="M:System.ComponentModel.ISynchronizeInvoke.BeginInvoke(System.Delegate,System.Object[])" />.</span></span></param>
        <summary><span data-ttu-id="24a54-126">Wartet, bis der durch einen Aufruf von <see cref="M:System.ComponentModel.ISynchronizeInvoke.BeginInvoke(System.Delegate,System.Object[])" /> gestartete Prozess abgeschlossen ist, und gibt anschließend den vom Prozess generierten Wert zurück.</span><span class="sxs-lookup"><span data-stu-id="24a54-126">Waits until the process started by calling <see cref="M:System.ComponentModel.ISynchronizeInvoke.BeginInvoke(System.Delegate,System.Object[])" /> completes, and then returns the value generated by the process.</span></span></summary>
        <returns><span data-ttu-id="24a54-127">Ein <see cref="T:System.Object" />, das den durch die asynchrone Operation generierten Rückgabewert darstellt.</span><span class="sxs-lookup"><span data-stu-id="24a54-127">An <see cref="T:System.Object" /> that represents the return value generated by the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="24a54-128">Diese Methode ruft den Rückgabewert des asynchronen Vorgangs ab, der durch <xref:System.IAsyncResult> die von dieser Schnittstelle bestandene-Methode dargestellt wird.</span><span class="sxs-lookup"><span data-stu-id="24a54-128">This method gets the return value of the asynchronous operation represented by the <xref:System.IAsyncResult> passed by this interface.</span></span> <span data-ttu-id="24a54-129">Wenn der asynchrone Vorgang nicht abgeschlossen wurde, wartet diese Methode, bis das Ergebnis verfügbar ist.</span><span class="sxs-lookup"><span data-stu-id="24a54-129">If the asynchronous operation has not completed, this method will wait until the result is available.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.ISynchronizeInvoke.BeginInvoke(System.Delegate,System.Object[])" />
      </Docs>
    </Member>
    <Member MemberName="Invoke">
      <MemberSignature Language="C#" Value="public object Invoke (Delegate method, object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Invoke(class System.Delegate method, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.ISynchronizeInvoke.Invoke(System.Delegate,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Function Invoke (method As Delegate, args As Object()) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Invoke(Delegate ^ method, cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="abstract member Invoke : Delegate * obj[] -&gt; obj" Usage="iSynchronizeInvoke.Invoke (method, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Primitives</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="method" Type="System.Delegate" />
        <Parameter Name="args" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="method"><span data-ttu-id="24a54-130">Ein <see cref="T:System.Delegate" />, der eine aufzurufende Methode im Threadkontext für das Steuerelement enthält.</span><span class="sxs-lookup"><span data-stu-id="24a54-130">A <see cref="T:System.Delegate" /> that contains a method to call, in the context of the thread for the control.</span></span></param>
        <param name="args"><span data-ttu-id="24a54-131">Ein Array vom Typ <see cref="T:System.Object" />, das die an die angegebene Methode zu übergebenden Argumente darstellt.</span><span class="sxs-lookup"><span data-stu-id="24a54-131">An array of type <see cref="T:System.Object" /> that represents the arguments to pass to the given method.</span></span> <span data-ttu-id="24a54-132">Dies kann <see langword="null" /> sein, wenn keine Argumente benötigt werden.</span><span class="sxs-lookup"><span data-stu-id="24a54-132">This can be <see langword="null" /> if no arguments are needed.</span></span></param>
        <summary><span data-ttu-id="24a54-133">Führt den Delegaten synchron für den Thread aus, der dieses Objekt erstellt hat, und marshallt den Aufruf in den erstellenden Thread.</span><span class="sxs-lookup"><span data-stu-id="24a54-133">Synchronously executes the delegate on the thread that created this object and marshals the call to the creating thread.</span></span></summary>
        <returns><span data-ttu-id="24a54-134">Ein <see cref="T:System.Object" />, das den Rückgabewert des aufgerufenen Delegaten darstellt, oder <see langword="null" />, wenn der Delegat keinen Wert zurückgibt.</span><span class="sxs-lookup"><span data-stu-id="24a54-134">An <see cref="T:System.Object" /> that represents the return value from the delegate being invoked, or <see langword="null" /> if the delegate has no return value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="24a54-135">Im <xref:System.ComponentModel.ISynchronizeInvoke.BeginInvoke%2A>Gegensatz dazu wird diese Methode synchron ausgeführt, d. h., Sie wartet, bis der Prozess abgeschlossen ist, bevor Sie zurückkehrt.</span><span class="sxs-lookup"><span data-stu-id="24a54-135">Unlike <xref:System.ComponentModel.ISynchronizeInvoke.BeginInvoke%2A>, this method operates synchronously, that is, it waits until the process completes before returning.</span></span> <span data-ttu-id="24a54-136">Während des Aufrufens ausgelösten Ausnahmen werden an den Aufrufer zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="24a54-136">Exceptions raised during the call are propagated back to the caller.</span></span>  
  
 <span data-ttu-id="24a54-137">Verwenden Sie diese Methode, wenn Sie eine Methode von einem anderen Thread aufrufen, um den Aufruf an den richtigen Thread zu Mars Hallen.</span><span class="sxs-lookup"><span data-stu-id="24a54-137">Use this method when calling a method from a different thread to marshal the call to the proper thread.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InvokeRequired">
      <MemberSignature Language="C#" Value="public bool InvokeRequired { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool InvokeRequired" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.ISynchronizeInvoke.InvokeRequired" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InvokeRequired As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool InvokeRequired { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.InvokeRequired : bool" Usage="System.ComponentModel.ISynchronizeInvoke.InvokeRequired" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Primitives</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="24a54-138">Ruft einen Wert ab, der angibt, ob der Aufrufer <see cref="M:System.ComponentModel.ISynchronizeInvoke.Invoke(System.Delegate,System.Object[])" /> beim Aufruf eines Objekts aufrufen muss, das diese Schnittstelle implementiert.</span><span class="sxs-lookup"><span data-stu-id="24a54-138">Gets a value indicating whether the caller must call <see cref="M:System.ComponentModel.ISynchronizeInvoke.Invoke(System.Delegate,System.Object[])" /> when calling an object that implements this interface.</span></span></summary>
        <value><span data-ttu-id="24a54-139"><see langword="true" />, wenn der Aufrufer <see cref="M:System.ComponentModel.ISynchronizeInvoke.Invoke(System.Delegate,System.Object[])" /> aufrufen muss, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="24a54-139"><see langword="true" /> if the caller must call <see cref="M:System.ComponentModel.ISynchronizeInvoke.Invoke(System.Delegate,System.Object[])" />; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="24a54-140">Diese Eigenschaft bestimmt, ob der Aufrufer aufrufen <xref:System.ComponentModel.ISynchronizeInvoke.Invoke%2A> muss, wenn Methodenaufrufe an ein Objekt durchführen, das diese Schnittstelle implementiert.</span><span class="sxs-lookup"><span data-stu-id="24a54-140">This property determines whether the caller must call <xref:System.ComponentModel.ISynchronizeInvoke.Invoke%2A> when making method calls to an object that implements this interface.</span></span> <span data-ttu-id="24a54-141">Solche Objekte werden an einen bestimmten Thread gebunden und sind nicht Thread sicher.</span><span class="sxs-lookup"><span data-stu-id="24a54-141">Such objects are bound to a specific thread and are not thread-safe.</span></span> <span data-ttu-id="24a54-142">Wenn Sie eine Methode von einem anderen Thread aufrufen, müssen Sie die- <xref:System.ComponentModel.ISynchronizeInvoke.Invoke%2A> Methode verwenden, um den Aufruf an den richtigen Thread zu Mars Hallen.</span><span class="sxs-lookup"><span data-stu-id="24a54-142">If you are calling a method from a different thread, you must use the <xref:System.ComponentModel.ISynchronizeInvoke.Invoke%2A> method to marshal the call to the proper thread.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
