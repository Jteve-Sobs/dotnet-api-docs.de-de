<Type Name="ISynchronizeInvoke" FullName="System.ComponentModel.ISynchronizeInvoke">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="f997d894fc295ac864526f9e3b9e61341c3cc838" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36702540" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface ISynchronizeInvoke" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ISynchronizeInvoke" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.ISynchronizeInvoke" />
  <TypeSignature Language="VB.NET" Value="Public Interface ISynchronizeInvoke" />
  <TypeSignature Language="C++ CLI" Value="public interface class ISynchronizeInvoke" />
  <TypeSignature Language="F#" Value="type ISynchronizeInvoke = interface" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.Primitives</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Ermöglicht das synchrone oder asynchrone Ausführen eines Delegaten.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.ComponentModel.ISynchronizeInvoke> -Schnittstelle enthält synchrone und asynchrone Kommunikation zwischen Objekten über das Eintreten eines Ereignisses. Objekte, die diese Schnittstelle implementieren, können Benachrichtigung erhalten, die ein Ereignis aufgetreten ist, und auf Abfragen über das Ereignis reagieren. Auf diese Weise können Clients sicherstellen, dass eine Anforderung verarbeitet wurde, bevor sie eine nachfolgende Anforderung senden, die bei Abschluss des ersten abhängig ist.  
  
 Die <xref:System.ComponentModel.ISynchronizeInvoke> Klasse bietet zwei Möglichkeiten, um einen Prozess aufzurufen:  
  
1.  Asynchron ausgeführt wird, mithilfe der <xref:System.ComponentModel.ISynchronizeInvoke.BeginInvoke%2A> Methode. <xref:System.ComponentModel.ISynchronizeInvoke.BeginInvoke%2A> Startet einen Prozess aus, und klicken Sie dann sofort beendet. Verwendung <xref:System.ComponentModel.ISynchronizeInvoke.EndInvoke%2A> zu warten, bis der Prozess gestartet, indem <xref:System.ComponentModel.ISynchronizeInvoke.BeginInvoke%2A> abgeschlossen ist.  
  
2.  Synchron, mithilfe der <xref:System.ComponentModel.ISynchronizeInvoke.Invoke%2A> Methode. <xref:System.ComponentModel.ISynchronizeInvoke.Invoke%2A> Startet einen Prozess wartet, bis er abgeschlossen wurde und dann zurück. Verwendung <xref:System.ComponentModel.ISynchronizeInvoke.Invoke%2A> bei der Hauptthread des Steuerelements Thread unterscheidet sich von der aufrufende Thread den Aufruf an den richtigen Thread zu marshallen.  
  
> [!NOTE]
>  Die <xref:System.Security.Permissions.HostProtectionAttribute> auf diese Klasse angewendete Attribut verfügt über die folgenden <xref:System.Security.Permissions.HostProtectionAttribute.Resources%2A> Eigenschaftswert: <xref:System.Security.Permissions.HostProtectionResource.Synchronization> &#124; <xref:System.Security.Permissions.HostProtectionResource.ExternalThreading>. Das <xref:System.Security.Permissions.HostProtectionAttribute> hat keine Auswirkungen auf Desktopanwendungen (die normalerweise durch Doppelklicken auf ein Symbol, Eingeben eines Befehls oder einer URL in einem Browser gestartet werden). Weitere Informationen finden Sie unter der <xref:System.Security.Permissions.HostProtectionAttribute> Klasse oder [SQL Server-Programmierung und Hostschutzattribute](~/docs/framework/performance/sql-server-programming-and-host-protection-attributes.md).  
  
 ]]></format>
    </remarks>
    <altmember cref="M:System.ComponentModel.ISynchronizeInvoke.BeginInvoke(System.Delegate,System.Object[])" />
    <altmember cref="M:System.ComponentModel.ISynchronizeInvoke.EndInvoke(System.IAsyncResult)" />
    <altmember cref="M:System.ComponentModel.ISynchronizeInvoke.Invoke(System.Delegate,System.Object[])" />
  </Docs>
  <Members>
    <Member MemberName="BeginInvoke">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginInvoke (Delegate method, object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginInvoke(class System.Delegate method, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.ISynchronizeInvoke.BeginInvoke(System.Delegate,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginInvoke (method As Delegate, args As Object()) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginInvoke(Delegate ^ method, cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="abstract member BeginInvoke : Delegate * obj[] -&gt; IAsyncResult" Usage="iSynchronizeInvoke.BeginInvoke (method, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Primitives</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="method" Type="System.Delegate" />
        <Parameter Name="args" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="method">Ein <see cref="T:System.Delegate" /> einer Methode, der über dieselbe Anzahl Parameter desselben Typs verfügt, die in <c>args</c> enthalten sind.</param>
        <param name="args">Ein Array vom Typ <see cref="T:System.Object" />, das als Argument an die angegebene Methode übergeben werden soll. Dies kann <see langword="null" /> sein, wenn keine Argumente benötigt werden.</param>
        <summary>Führt den Delegaten asynchron für den Thread aus, der dieses Objekt erstellt hat.</summary>
        <returns>Eine <see cref="T:System.IAsyncResult" />-Schnittstelle, die die durch Aufrufen dieser Methode gestartete asynchrone Operation darstellt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die `method` Delegaten für den Thread, der der objekterstellung nicht auf dem Thread auf dem ausgeführt wird <xref:System.ComponentModel.ISynchronizeInvoke.BeginInvoke%2A> aufgerufen wurde.  
  
 Der Delegat wird asynchron aufgerufen, und diese Methode wird sofort zurückgegeben. Sie können diese Methode von jedem Thread aufrufen. Wenn den Rückgabewert von einem Prozess mit dieser Methode gestartet werden sollen, rufen <xref:System.ComponentModel.ISynchronizeInvoke.EndInvoke%2A> , den Wert abzurufen.  
  
 Wenn Sie den Delegaten synchron aufrufen müssen, verwenden Sie die <xref:System.ComponentModel.ISynchronizeInvoke.Invoke%2A> Methode stattdessen.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.ISynchronizeInvoke.EndInvoke(System.IAsyncResult)" />
      </Docs>
    </Member>
    <Member MemberName="EndInvoke">
      <MemberSignature Language="C#" Value="public object EndInvoke (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object EndInvoke(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.ISynchronizeInvoke.EndInvoke(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndInvoke (result As IAsyncResult) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ EndInvoke(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="abstract member EndInvoke : IAsyncResult -&gt; obj" Usage="iSynchronizeInvoke.EndInvoke result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Primitives</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">Eine <see cref="T:System.IAsyncResult" />-Schnittstelle, die die durch einen Aufruf von <see cref="M:System.ComponentModel.ISynchronizeInvoke.BeginInvoke(System.Delegate,System.Object[])" /> gestartete asynchrone Operation darstellt.</param>
        <summary>Wartet, bis der durch einen Aufruf von <see cref="M:System.ComponentModel.ISynchronizeInvoke.BeginInvoke(System.Delegate,System.Object[])" /> gestartete Prozess abgeschlossen ist, und gibt anschließend den vom Prozess generierten Wert zurück.</summary>
        <returns>Ein <see cref="T:System.Object" />, das den durch die asynchrone Operation generierten Rückgabewert darstellt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode ruft den Rückgabewert des asynchronen Vorgangs, dargestellt durch die <xref:System.IAsyncResult> von dieser Schnittstelle übergeben. Wenn der asynchrone Vorgang nicht abgeschlossen wurde, wird diese Methode warten, bis das Ergebnis verfügbar ist.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.ISynchronizeInvoke.BeginInvoke(System.Delegate,System.Object[])" />
      </Docs>
    </Member>
    <Member MemberName="Invoke">
      <MemberSignature Language="C#" Value="public object Invoke (Delegate method, object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Invoke(class System.Delegate method, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.ISynchronizeInvoke.Invoke(System.Delegate,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Function Invoke (method As Delegate, args As Object()) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Invoke(Delegate ^ method, cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="abstract member Invoke : Delegate * obj[] -&gt; obj" Usage="iSynchronizeInvoke.Invoke (method, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Primitives</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="method" Type="System.Delegate" />
        <Parameter Name="args" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="method">Ein <see cref="T:System.Delegate" />, der eine aufzurufende Methode im Threadkontext für das Steuerelement enthält.</param>
        <param name="args">Ein Array vom Typ <see cref="T:System.Object" />, das die an die angegebene Methode zu übergebenden Argumente darstellt. Dies kann <see langword="null" /> sein, wenn keine Argumente benötigt werden.</param>
        <summary>Führt den Delegaten synchron für den Thread aus, der dieses Objekt erstellt hat, und marshallt den Aufruf in den erstellenden Thread.</summary>
        <returns>Ein <see cref="T:System.Object" />, das den Rückgabewert des aufgerufenen Delegaten darstellt, oder <see langword="null" />, wenn der Delegat keinen Wert zurückgibt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Im Gegensatz zu <xref:System.ComponentModel.ISynchronizeInvoke.BeginInvoke%2A>, diese Methode erfolgt synchron, d. h. es wartet, bis alle Vorgänge vor der Rückgabe abgeschlossen. Während des Aufrufs ausgelöste Ausnahmen werden zurück an den Aufrufer weitergegeben.  
  
 Verwenden Sie diese Methode beim Aufrufen einer Methode von einem anderen Thread, um den Aufruf an den richtigen Thread zu marshallen.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InvokeRequired">
      <MemberSignature Language="C#" Value="public bool InvokeRequired { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool InvokeRequired" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.ISynchronizeInvoke.InvokeRequired" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InvokeRequired As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool InvokeRequired { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.InvokeRequired : bool" Usage="System.ComponentModel.ISynchronizeInvoke.InvokeRequired" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Primitives</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob der Aufrufer <see cref="M:System.ComponentModel.ISynchronizeInvoke.Invoke(System.Delegate,System.Object[])" /> beim Aufruf eines Objekts aufrufen muss, das diese Schnittstelle implementiert.</summary>
        <value>
          <see langword="true" />, wenn der Aufrufer <see cref="M:System.ComponentModel.ISynchronizeInvoke.Invoke(System.Delegate,System.Object[])" /> aufrufen muss, andernfalls <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Eigenschaft bestimmt, ob der Anrufer muss <xref:System.ComponentModel.ISynchronizeInvoke.Invoke%2A> Wenn Methodenaufrufe an ein Objekt, das diese Schnittstelle implementiert. Solche Objekte sind für einen bestimmten Thread gebunden, und es sind nicht threadsicher. Wenn Sie eine Methode aus einem anderen Thread aufrufen, müssen Sie verwenden die <xref:System.ComponentModel.ISynchronizeInvoke.Invoke%2A> Methode, um den Aufruf an den richtigen Thread zu marshallen.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>