<Type Name="ISynchronizeInvoke" FullName="System.ComponentModel.ISynchronizeInvoke">
  <TypeSignature Language="C#" Value="public interface ISynchronizeInvoke" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ISynchronizeInvoke" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.ISynchronizeInvoke" />
  <TypeSignature Language="VB.NET" Value="Public Interface ISynchronizeInvoke" />
  <TypeSignature Language="C++ CLI" Value="public interface class ISynchronizeInvoke" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.Primitives</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="0ea15-101">Ermöglicht das synchrone oder asynchrone Ausführen eines Delegaten.</span><span class="sxs-lookup"><span data-stu-id="0ea15-101">Provides a way to synchronously or asynchronously execute a delegate.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0ea15-102">Die <xref:System.ComponentModel.ISynchronizeInvoke> -Schnittstelle enthält synchrone und asynchrone Kommunikation zwischen Objekten über das Eintreten eines Ereignisses.</span><span class="sxs-lookup"><span data-stu-id="0ea15-102">The <xref:System.ComponentModel.ISynchronizeInvoke> interface provides synchronous and asynchronous communication between objects about the occurrence of an event.</span></span> <span data-ttu-id="0ea15-103">Objekte, die diese Schnittstelle implementieren, können Benachrichtigung erhalten, die ein Ereignis aufgetreten ist, und auf Abfragen über das Ereignis reagieren.</span><span class="sxs-lookup"><span data-stu-id="0ea15-103">Objects that implement this interface can receive notification that an event has occurred, and they can respond to queries about the event.</span></span> <span data-ttu-id="0ea15-104">Auf diese Weise können Clients sicherstellen, dass eine Anforderung verarbeitet wurde, bevor sie eine nachfolgende Anforderung senden, die bei Abschluss des ersten abhängig ist.</span><span class="sxs-lookup"><span data-stu-id="0ea15-104">In this way, clients can ensure that one request has been processed before they submit a subsequent request that depends on completion of the first.</span></span>  
  
 <span data-ttu-id="0ea15-105">Die <xref:System.ComponentModel.ISynchronizeInvoke> Klasse bietet zwei Möglichkeiten, um einen Prozess aufzurufen:</span><span class="sxs-lookup"><span data-stu-id="0ea15-105">The <xref:System.ComponentModel.ISynchronizeInvoke> class provides two ways to invoke a process:</span></span>  
  
1.  <span data-ttu-id="0ea15-106">Asynchron ausgeführt wird, mithilfe der <xref:System.ComponentModel.ISynchronizeInvoke.BeginInvoke%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="0ea15-106">Asynchronously, by using the <xref:System.ComponentModel.ISynchronizeInvoke.BeginInvoke%2A> method.</span></span> <span data-ttu-id="0ea15-107"><xref:System.ComponentModel.ISynchronizeInvoke.BeginInvoke%2A> Startet einen Prozess aus, und klicken Sie dann sofort beendet.</span><span class="sxs-lookup"><span data-stu-id="0ea15-107"><xref:System.ComponentModel.ISynchronizeInvoke.BeginInvoke%2A> starts a process and then returns immediately.</span></span> <span data-ttu-id="0ea15-108">Verwendung <xref:System.ComponentModel.ISynchronizeInvoke.EndInvoke%2A> zu warten, bis der Prozess gestartet, indem <xref:System.ComponentModel.ISynchronizeInvoke.BeginInvoke%2A> abgeschlossen ist.</span><span class="sxs-lookup"><span data-stu-id="0ea15-108">Use <xref:System.ComponentModel.ISynchronizeInvoke.EndInvoke%2A> to wait until the process started by <xref:System.ComponentModel.ISynchronizeInvoke.BeginInvoke%2A> completes.</span></span>  
  
2.  <span data-ttu-id="0ea15-109">Synchron, mithilfe der <xref:System.ComponentModel.ISynchronizeInvoke.Invoke%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="0ea15-109">Synchronously, by using the <xref:System.ComponentModel.ISynchronizeInvoke.Invoke%2A> method.</span></span> <span data-ttu-id="0ea15-110"><xref:System.ComponentModel.ISynchronizeInvoke.Invoke%2A> Startet einen Prozess wartet, bis er abgeschlossen wurde und dann zurück.</span><span class="sxs-lookup"><span data-stu-id="0ea15-110"><xref:System.ComponentModel.ISynchronizeInvoke.Invoke%2A> starts a process, waits until it completes, and then returns.</span></span> <span data-ttu-id="0ea15-111">Verwendung <xref:System.ComponentModel.ISynchronizeInvoke.Invoke%2A> bei der Hauptthread des Steuerelements Thread unterscheidet sich von der aufrufende Thread den Aufruf an den richtigen Thread zu marshallen.</span><span class="sxs-lookup"><span data-stu-id="0ea15-111">Use <xref:System.ComponentModel.ISynchronizeInvoke.Invoke%2A> when the control's main thread is different from the calling thread to marshal the call to the proper thread.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0ea15-112">Die <xref:System.Security.Permissions.HostProtectionAttribute> auf diese Klasse angewendete Attribut verfügt über die folgenden <xref:System.Security.Permissions.HostProtectionAttribute.Resources%2A> Eigenschaftswert: <xref:System.Security.Permissions.HostProtectionResource.Synchronization> &#124; <xref:System.Security.Permissions.HostProtectionResource.ExternalThreading>.</span><span class="sxs-lookup"><span data-stu-id="0ea15-112">The <xref:System.Security.Permissions.HostProtectionAttribute> attribute applied to this class has the following <xref:System.Security.Permissions.HostProtectionAttribute.Resources%2A> property value: <xref:System.Security.Permissions.HostProtectionResource.Synchronization> &#124; <xref:System.Security.Permissions.HostProtectionResource.ExternalThreading>.</span></span> <span data-ttu-id="0ea15-113">Das <xref:System.Security.Permissions.HostProtectionAttribute> hat keine Auswirkungen auf Desktopanwendungen (die normalerweise durch Doppelklicken auf ein Symbol, Eingeben eines Befehls oder einer URL in einem Browser gestartet werden).</span><span class="sxs-lookup"><span data-stu-id="0ea15-113">The <xref:System.Security.Permissions.HostProtectionAttribute> does not affect desktop applications (which are typically started by double-clicking an icon, typing a command, or entering a URL in a browser).</span></span> <span data-ttu-id="0ea15-114">Weitere Informationen finden Sie unter der <xref:System.Security.Permissions.HostProtectionAttribute> Klasse oder [SQL Server-Programmierung und Hostschutzattribute](~/docs/framework/performance/sql-server-programming-and-host-protection-attributes.md).</span><span class="sxs-lookup"><span data-stu-id="0ea15-114">For more information, see the <xref:System.Security.Permissions.HostProtectionAttribute> class or [SQL Server Programming and Host Protection Attributes](~/docs/framework/performance/sql-server-programming-and-host-protection-attributes.md).</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="M:System.ComponentModel.ISynchronizeInvoke.BeginInvoke(System.Delegate,System.Object[])" />
    <altmember cref="M:System.ComponentModel.ISynchronizeInvoke.EndInvoke(System.IAsyncResult)" />
    <altmember cref="M:System.ComponentModel.ISynchronizeInvoke.Invoke(System.Delegate,System.Object[])" />
  </Docs>
  <Members>
    <Member MemberName="BeginInvoke">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginInvoke (Delegate method, object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginInvoke(class System.Delegate method, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.ISynchronizeInvoke.BeginInvoke(System.Delegate,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginInvoke (method As Delegate, args As Object()) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginInvoke(Delegate ^ method, cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Primitives</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="method" Type="System.Delegate" />
        <Parameter Name="args" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="method"><span data-ttu-id="0ea15-115">Ein <see cref="T:System.Delegate" /> einer Methode, der über dieselbe Anzahl Parameter desselben Typs verfügt, die in <c>args</c> enthalten sind.</span><span class="sxs-lookup"><span data-stu-id="0ea15-115">A <see cref="T:System.Delegate" /> to a method that takes parameters of the same number and type that are contained in <c>args</c>.</span></span></param>
        <param name="args"><span data-ttu-id="0ea15-116">Ein Array vom Typ <see cref="T:System.Object" />, das als Argument an die angegebene Methode übergeben werden soll.</span><span class="sxs-lookup"><span data-stu-id="0ea15-116">An array of type <see cref="T:System.Object" /> to pass as arguments to the given method.</span></span> <span data-ttu-id="0ea15-117">Dies kann <see langword="null" /> sein, wenn keine Argumente benötigt werden.</span><span class="sxs-lookup"><span data-stu-id="0ea15-117">This can be <see langword="null" /> if no arguments are needed.</span></span></param>
        <summary><span data-ttu-id="0ea15-118">Führt den Delegaten asynchron für den Thread aus, der dieses Objekt erstellt hat.</span><span class="sxs-lookup"><span data-stu-id="0ea15-118">Asynchronously executes the delegate on the thread that created this object.</span></span></summary>
        <returns><span data-ttu-id="0ea15-119">Eine <see cref="T:System.IAsyncResult" />-Schnittstelle, die die durch Aufrufen dieser Methode gestartete asynchrone Operation darstellt.</span><span class="sxs-lookup"><span data-stu-id="0ea15-119">An <see cref="T:System.IAsyncResult" /> interface that represents the asynchronous operation started by calling this method.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0ea15-120">Die `method` Delegaten für den Thread, der der objekterstellung nicht auf dem Thread auf dem ausgeführt wird <xref:System.ComponentModel.ISynchronizeInvoke.BeginInvoke%2A> aufgerufen wurde.</span><span class="sxs-lookup"><span data-stu-id="0ea15-120">The `method` delegate is executed on the thread that created the object, instead of the thread on which <xref:System.ComponentModel.ISynchronizeInvoke.BeginInvoke%2A> was called.</span></span>  
  
 <span data-ttu-id="0ea15-121">Der Delegat wird asynchron aufgerufen, und diese Methode wird sofort zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="0ea15-121">The delegate is called asynchronously, and this method returns immediately.</span></span> <span data-ttu-id="0ea15-122">Sie können diese Methode von jedem Thread aufrufen.</span><span class="sxs-lookup"><span data-stu-id="0ea15-122">You can call this method from any thread.</span></span> <span data-ttu-id="0ea15-123">Wenn den Rückgabewert von einem Prozess mit dieser Methode gestartet werden sollen, rufen <xref:System.ComponentModel.ISynchronizeInvoke.EndInvoke%2A> , den Wert abzurufen.</span><span class="sxs-lookup"><span data-stu-id="0ea15-123">If you need the return value from a process started with this method, call <xref:System.ComponentModel.ISynchronizeInvoke.EndInvoke%2A> to get the value.</span></span>  
  
 <span data-ttu-id="0ea15-124">Wenn Sie den Delegaten synchron aufrufen müssen, verwenden Sie die <xref:System.ComponentModel.ISynchronizeInvoke.Invoke%2A> Methode stattdessen.</span><span class="sxs-lookup"><span data-stu-id="0ea15-124">If you need to call the delegate synchronously, use the <xref:System.ComponentModel.ISynchronizeInvoke.Invoke%2A> method instead.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.ISynchronizeInvoke.EndInvoke(System.IAsyncResult)" />
      </Docs>
    </Member>
    <Member MemberName="EndInvoke">
      <MemberSignature Language="C#" Value="public object EndInvoke (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object EndInvoke(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.ISynchronizeInvoke.EndInvoke(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndInvoke (result As IAsyncResult) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ EndInvoke(IAsyncResult ^ result);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Primitives</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result"><span data-ttu-id="0ea15-125">Eine <see cref="T:System.IAsyncResult" />-Schnittstelle, die die durch einen Aufruf von <see cref="M:System.ComponentModel.ISynchronizeInvoke.BeginInvoke(System.Delegate,System.Object[])" /> gestartete asynchrone Operation darstellt.</span><span class="sxs-lookup"><span data-stu-id="0ea15-125">An <see cref="T:System.IAsyncResult" /> interface that represents the asynchronous operation started by calling <see cref="M:System.ComponentModel.ISynchronizeInvoke.BeginInvoke(System.Delegate,System.Object[])" />.</span></span></param>
        <summary><span data-ttu-id="0ea15-126">Wartet, bis der durch einen Aufruf von <see cref="M:System.ComponentModel.ISynchronizeInvoke.BeginInvoke(System.Delegate,System.Object[])" /> gestartete Prozess abgeschlossen ist, und gibt anschließend den vom Prozess generierten Wert zurück.</span><span class="sxs-lookup"><span data-stu-id="0ea15-126">Waits until the process started by calling <see cref="M:System.ComponentModel.ISynchronizeInvoke.BeginInvoke(System.Delegate,System.Object[])" /> completes, and then returns the value generated by the process.</span></span></summary>
        <returns><span data-ttu-id="0ea15-127">Ein <see cref="T:System.Object" />, das den durch die asynchrone Operation generierten Rückgabewert darstellt.</span><span class="sxs-lookup"><span data-stu-id="0ea15-127">An <see cref="T:System.Object" /> that represents the return value generated by the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0ea15-128">Diese Methode ruft den Rückgabewert des asynchronen Vorgangs, dargestellt durch die <xref:System.IAsyncResult> von dieser Schnittstelle übergeben.</span><span class="sxs-lookup"><span data-stu-id="0ea15-128">This method gets the return value of the asynchronous operation represented by the <xref:System.IAsyncResult> passed by this interface.</span></span> <span data-ttu-id="0ea15-129">Wenn der asynchrone Vorgang nicht abgeschlossen wurde, wird diese Methode warten, bis das Ergebnis verfügbar ist.</span><span class="sxs-lookup"><span data-stu-id="0ea15-129">If the asynchronous operation has not completed, this method will wait until the result is available.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.ISynchronizeInvoke.BeginInvoke(System.Delegate,System.Object[])" />
      </Docs>
    </Member>
    <Member MemberName="Invoke">
      <MemberSignature Language="C#" Value="public object Invoke (Delegate method, object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Invoke(class System.Delegate method, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.ISynchronizeInvoke.Invoke(System.Delegate,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Function Invoke (method As Delegate, args As Object()) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Invoke(Delegate ^ method, cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Primitives</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="method" Type="System.Delegate" />
        <Parameter Name="args" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="method"><span data-ttu-id="0ea15-130">Ein <see cref="T:System.Delegate" />, der eine aufzurufende Methode im Threadkontext für das Steuerelement enthält.</span><span class="sxs-lookup"><span data-stu-id="0ea15-130">A <see cref="T:System.Delegate" /> that contains a method to call, in the context of the thread for the control.</span></span></param>
        <param name="args"><span data-ttu-id="0ea15-131">Ein Array vom Typ <see cref="T:System.Object" />, das die an die angegebene Methode zu übergebenden Argumente darstellt.</span><span class="sxs-lookup"><span data-stu-id="0ea15-131">An array of type <see cref="T:System.Object" /> that represents the arguments to pass to the given method.</span></span> <span data-ttu-id="0ea15-132">Dies kann <see langword="null" /> sein, wenn keine Argumente benötigt werden.</span><span class="sxs-lookup"><span data-stu-id="0ea15-132">This can be <see langword="null" /> if no arguments are needed.</span></span></param>
        <summary><span data-ttu-id="0ea15-133">Führt den Delegaten synchron für den Thread aus, der dieses Objekt erstellt hat, und marshallt den Aufruf in den erstellenden Thread.</span><span class="sxs-lookup"><span data-stu-id="0ea15-133">Synchronously executes the delegate on the thread that created this object and marshals the call to the creating thread.</span></span></summary>
        <returns><span data-ttu-id="0ea15-134">Ein <see cref="T:System.Object" />, das den Rückgabewert des aufgerufenen Delegaten darstellt, oder <see langword="null" />, wenn der Delegat keinen Wert zurückgibt.</span><span class="sxs-lookup"><span data-stu-id="0ea15-134">An <see cref="T:System.Object" /> that represents the return value from the delegate being invoked, or <see langword="null" /> if the delegate has no return value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0ea15-135">Im Gegensatz zu <xref:System.ComponentModel.ISynchronizeInvoke.BeginInvoke%2A>, diese Methode erfolgt synchron, d. h. es wartet, bis alle Vorgänge vor der Rückgabe abgeschlossen.</span><span class="sxs-lookup"><span data-stu-id="0ea15-135">Unlike <xref:System.ComponentModel.ISynchronizeInvoke.BeginInvoke%2A>, this method operates synchronously, that is, it waits until the process completes before returning.</span></span> <span data-ttu-id="0ea15-136">Während des Aufrufs ausgelöste Ausnahmen werden zurück an den Aufrufer weitergegeben.</span><span class="sxs-lookup"><span data-stu-id="0ea15-136">Exceptions raised during the call are propagated back to the caller.</span></span>  
  
 <span data-ttu-id="0ea15-137">Verwenden Sie diese Methode beim Aufrufen einer Methode von einem anderen Thread, um den Aufruf an den richtigen Thread zu marshallen.</span><span class="sxs-lookup"><span data-stu-id="0ea15-137">Use this method when calling a method from a different thread to marshal the call to the proper thread.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InvokeRequired">
      <MemberSignature Language="C#" Value="public bool InvokeRequired { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool InvokeRequired" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.ISynchronizeInvoke.InvokeRequired" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InvokeRequired As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool InvokeRequired { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Primitives</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0ea15-138">Ruft einen Wert ab, der angibt, ob der Aufrufer <see cref="M:System.ComponentModel.ISynchronizeInvoke.Invoke(System.Delegate,System.Object[])" /> beim Aufruf eines Objekts aufrufen muss, das diese Schnittstelle implementiert.</span><span class="sxs-lookup"><span data-stu-id="0ea15-138">Gets a value indicating whether the caller must call <see cref="M:System.ComponentModel.ISynchronizeInvoke.Invoke(System.Delegate,System.Object[])" /> when calling an object that implements this interface.</span></span></summary>
        <value>
          <span data-ttu-id="0ea15-139"><see langword="true" />, wenn der Aufrufer <see cref="M:System.ComponentModel.ISynchronizeInvoke.Invoke(System.Delegate,System.Object[])" /> aufrufen muss, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="0ea15-139"><see langword="true" /> if the caller must call <see cref="M:System.ComponentModel.ISynchronizeInvoke.Invoke(System.Delegate,System.Object[])" />; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0ea15-140">Diese Eigenschaft bestimmt, ob der Anrufer muss <xref:System.ComponentModel.ISynchronizeInvoke.Invoke%2A> Wenn Methodenaufrufe an ein Objekt, das diese Schnittstelle implementiert.</span><span class="sxs-lookup"><span data-stu-id="0ea15-140">This property determines whether the caller must call <xref:System.ComponentModel.ISynchronizeInvoke.Invoke%2A> when making method calls to an object that implements this interface.</span></span> <span data-ttu-id="0ea15-141">Solche Objekte sind für einen bestimmten Thread gebunden, und es sind nicht threadsicher.</span><span class="sxs-lookup"><span data-stu-id="0ea15-141">Such objects are bound to a specific thread and are not thread-safe.</span></span> <span data-ttu-id="0ea15-142">Wenn Sie eine Methode aus einem anderen Thread aufrufen, müssen Sie verwenden die <xref:System.ComponentModel.ISynchronizeInvoke.Invoke%2A> Methode, um den Aufruf an den richtigen Thread zu marshallen.</span><span class="sxs-lookup"><span data-stu-id="0ea15-142">If you are calling a method from a different thread, you must use the <xref:System.ComponentModel.ISynchronizeInvoke.Invoke%2A> method to marshal the call to the proper thread.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>