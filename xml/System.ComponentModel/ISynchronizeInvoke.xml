<Type Name="ISynchronizeInvoke" FullName="System.ComponentModel.ISynchronizeInvoke">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="3d9353df08936074d8502e7b3eb158fc1c8184df" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="08/24/2018" />
    <Meta Name="ms.locfileid" Value="37692243" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface ISynchronizeInvoke" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ISynchronizeInvoke" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.ISynchronizeInvoke" />
  <TypeSignature Language="VB.NET" Value="Public Interface ISynchronizeInvoke" />
  <TypeSignature Language="C++ CLI" Value="public interface class ISynchronizeInvoke" />
  <TypeSignature Language="F#" Value="type ISynchronizeInvoke = interface" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.Primitives</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="d5a94-101">Ermöglicht das synchrone oder asynchrone Ausführen eines Delegaten.</span>
      <span class="sxs-lookup">
        <span data-stu-id="d5a94-101">Provides a way to synchronously or asynchronously execute a delegate.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5a94-102">Die <xref:System.ComponentModel.ISynchronizeInvoke> -Schnittstelle enthält synchrone und asynchrone Kommunikation zwischen Objekten über das Eintreten eines Ereignisses.</span><span class="sxs-lookup"><span data-stu-id="d5a94-102">The <xref:System.ComponentModel.ISynchronizeInvoke> interface provides synchronous and asynchronous communication between objects about the occurrence of an event.</span></span> <span data-ttu-id="d5a94-103">Objekte, die diese Schnittstelle implementieren, können Benachrichtigungen empfangen, die ein Ereignis ist aufgetreten, und sie Abfragen über das Ereignis reagieren können.</span><span class="sxs-lookup"><span data-stu-id="d5a94-103">Objects that implement this interface can receive notification that an event has occurred, and they can respond to queries about the event.</span></span> <span data-ttu-id="d5a94-104">Auf diese Weise können Clients sicherstellen, dass diese eine Anforderung verarbeitet wurde, bevor sie eine nachfolgende Anforderung senden, die bei Abschluss der ersten abhängt.</span><span class="sxs-lookup"><span data-stu-id="d5a94-104">In this way, clients can ensure that one request has been processed before they submit a subsequent request that depends on completion of the first.</span></span>  
  
 <span data-ttu-id="d5a94-105">Die <xref:System.ComponentModel.ISynchronizeInvoke> Klasse bietet zwei Möglichkeiten, um einen Prozess aufzurufen:</span><span class="sxs-lookup"><span data-stu-id="d5a94-105">The <xref:System.ComponentModel.ISynchronizeInvoke> class provides two ways to invoke a process:</span></span>  
  
1.  <span data-ttu-id="d5a94-106">Asynchron, mithilfe der <xref:System.ComponentModel.ISynchronizeInvoke.BeginInvoke%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="d5a94-106">Asynchronously, by using the <xref:System.ComponentModel.ISynchronizeInvoke.BeginInvoke%2A> method.</span></span> <span data-ttu-id="d5a94-107"><xref:System.ComponentModel.ISynchronizeInvoke.BeginInvoke%2A> Startet einen Prozess aus, und klicken Sie dann sofort zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="d5a94-107"><xref:System.ComponentModel.ISynchronizeInvoke.BeginInvoke%2A> starts a process and then returns immediately.</span></span> <span data-ttu-id="d5a94-108">Verwendung <xref:System.ComponentModel.ISynchronizeInvoke.EndInvoke%2A> warten, bis der Prozess gestartet, indem <xref:System.ComponentModel.ISynchronizeInvoke.BeginInvoke%2A> abgeschlossen ist.</span><span class="sxs-lookup"><span data-stu-id="d5a94-108">Use <xref:System.ComponentModel.ISynchronizeInvoke.EndInvoke%2A> to wait until the process started by <xref:System.ComponentModel.ISynchronizeInvoke.BeginInvoke%2A> completes.</span></span>  
  
2.  <span data-ttu-id="d5a94-109">Synchron mithilfe der <xref:System.ComponentModel.ISynchronizeInvoke.Invoke%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="d5a94-109">Synchronously, by using the <xref:System.ComponentModel.ISynchronizeInvoke.Invoke%2A> method.</span></span> <span data-ttu-id="d5a94-110"><xref:System.ComponentModel.ISynchronizeInvoke.Invoke%2A> Startet einen Prozess wartet, bis der Vorgang abgeschlossen wurde und dann gibt.</span><span class="sxs-lookup"><span data-stu-id="d5a94-110"><xref:System.ComponentModel.ISynchronizeInvoke.Invoke%2A> starts a process, waits until it completes, and then returns.</span></span> <span data-ttu-id="d5a94-111">Verwendung <xref:System.ComponentModel.ISynchronizeInvoke.Invoke%2A> bei der Hauptthread des Steuerelements Thread unterscheidet sich von dem aufrufenden Thread, den Aufruf an den richtigen Thread zu marshallen.</span><span class="sxs-lookup"><span data-stu-id="d5a94-111">Use <xref:System.ComponentModel.ISynchronizeInvoke.Invoke%2A> when the control's main thread is different from the calling thread to marshal the call to the proper thread.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d5a94-112">Die <xref:System.Security.Permissions.HostProtectionAttribute> -Attribut für diese Klasse verfügt über die folgenden <xref:System.Security.Permissions.HostProtectionAttribute.Resources%2A> Eigenschaftswert: <xref:System.Security.Permissions.HostProtectionResource.Synchronization> &#124; <xref:System.Security.Permissions.HostProtectionResource.ExternalThreading>.</span><span class="sxs-lookup"><span data-stu-id="d5a94-112">The <xref:System.Security.Permissions.HostProtectionAttribute> attribute applied to this class has the following <xref:System.Security.Permissions.HostProtectionAttribute.Resources%2A> property value: <xref:System.Security.Permissions.HostProtectionResource.Synchronization> &#124; <xref:System.Security.Permissions.HostProtectionResource.ExternalThreading>.</span></span> <span data-ttu-id="d5a94-113">Das <xref:System.Security.Permissions.HostProtectionAttribute> hat keine Auswirkungen auf Desktopanwendungen (die normalerweise durch Doppelklicken auf ein Symbol, Eingeben eines Befehls oder einer URL in einem Browser gestartet werden).</span><span class="sxs-lookup"><span data-stu-id="d5a94-113">The <xref:System.Security.Permissions.HostProtectionAttribute> does not affect desktop applications (which are typically started by double-clicking an icon, typing a command, or entering a URL in a browser).</span></span> <span data-ttu-id="d5a94-114">Weitere Informationen finden Sie unter den <xref:System.Security.Permissions.HostProtectionAttribute> Klasse oder [SQL Server-Programmierung und Hostschutzattribute](~/docs/framework/performance/sql-server-programming-and-host-protection-attributes.md).</span><span class="sxs-lookup"><span data-stu-id="d5a94-114">For more information, see the <xref:System.Security.Permissions.HostProtectionAttribute> class or [SQL Server Programming and Host Protection Attributes](~/docs/framework/performance/sql-server-programming-and-host-protection-attributes.md).</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="M:System.ComponentModel.ISynchronizeInvoke.BeginInvoke(System.Delegate,System.Object[])" />
    <altmember cref="M:System.ComponentModel.ISynchronizeInvoke.EndInvoke(System.IAsyncResult)" />
    <altmember cref="M:System.ComponentModel.ISynchronizeInvoke.Invoke(System.Delegate,System.Object[])" />
  </Docs>
  <Members>
    <Member MemberName="BeginInvoke">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginInvoke (Delegate method, object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginInvoke(class System.Delegate method, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.ISynchronizeInvoke.BeginInvoke(System.Delegate,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginInvoke (method As Delegate, args As Object()) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginInvoke(Delegate ^ method, cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="abstract member BeginInvoke : Delegate * obj[] -&gt; IAsyncResult" Usage="iSynchronizeInvoke.BeginInvoke (method, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Primitives</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="method" Type="System.Delegate" />
        <Parameter Name="args" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="method">
          <span data-ttu-id="d5a94-115">Ein <see cref="T:System.Delegate" /> einer Methode, der über dieselbe Anzahl Parameter desselben Typs verfügt, die in <c>args</c> enthalten sind.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5a94-115">A <see cref="T:System.Delegate" /> to a method that takes parameters of the same number and type that are contained in <c>args</c>.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="d5a94-116">Ein Array vom Typ <see cref="T:System.Object" />, das als Argument an die angegebene Methode übergeben werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5a94-116">An array of type <see cref="T:System.Object" /> to pass as arguments to the given method.</span>
          </span>
          <span data-ttu-id="d5a94-117">Dies kann <see langword="null" /> sein, wenn keine Argumente benötigt werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5a94-117">This can be <see langword="null" /> if no arguments are needed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d5a94-118">Führt den Delegaten asynchron für den Thread aus, der dieses Objekt erstellt hat.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5a94-118">Asynchronously executes the delegate on the thread that created this object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d5a94-119">Eine <see cref="T:System.IAsyncResult" />-Schnittstelle, die die durch Aufrufen dieser Methode gestartete asynchrone Operation darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5a94-119">An <see cref="T:System.IAsyncResult" /> interface that represents the asynchronous operation started by calling this method.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5a94-120">Die `method` Delegat wird ausgeführt, auf dem Thread der objekterstellung nicht für den Thread auf dem <xref:System.ComponentModel.ISynchronizeInvoke.BeginInvoke%2A> aufgerufen wurde.</span><span class="sxs-lookup"><span data-stu-id="d5a94-120">The `method` delegate is executed on the thread that created the object, instead of the thread on which <xref:System.ComponentModel.ISynchronizeInvoke.BeginInvoke%2A> was called.</span></span>  
  
 <span data-ttu-id="d5a94-121">Der Delegat wird asynchron aufgerufen, und diese Methode wird sofort zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="d5a94-121">The delegate is called asynchronously, and this method returns immediately.</span></span> <span data-ttu-id="d5a94-122">Sie können diese Methode von jedem Thread aufrufen.</span><span class="sxs-lookup"><span data-stu-id="d5a94-122">You can call this method from any thread.</span></span> <span data-ttu-id="d5a94-123">Wenn Sie den Rückgabewert aus einem Prozess gestartet, die mit dieser Methode benötigen, rufen <xref:System.ComponentModel.ISynchronizeInvoke.EndInvoke%2A> , den Wert abzurufen.</span><span class="sxs-lookup"><span data-stu-id="d5a94-123">If you need the return value from a process started with this method, call <xref:System.ComponentModel.ISynchronizeInvoke.EndInvoke%2A> to get the value.</span></span>  
  
 <span data-ttu-id="d5a94-124">Wenn Sie den Delegaten synchron aufrufen müssen, verwenden Sie die <xref:System.ComponentModel.ISynchronizeInvoke.Invoke%2A> Methode stattdessen.</span><span class="sxs-lookup"><span data-stu-id="d5a94-124">If you need to call the delegate synchronously, use the <xref:System.ComponentModel.ISynchronizeInvoke.Invoke%2A> method instead.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.ISynchronizeInvoke.EndInvoke(System.IAsyncResult)" />
      </Docs>
    </Member>
    <Member MemberName="EndInvoke">
      <MemberSignature Language="C#" Value="public object EndInvoke (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object EndInvoke(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.ISynchronizeInvoke.EndInvoke(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndInvoke (result As IAsyncResult) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ EndInvoke(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="abstract member EndInvoke : IAsyncResult -&gt; obj" Usage="iSynchronizeInvoke.EndInvoke result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Primitives</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">
          <span data-ttu-id="d5a94-125">Eine <see cref="T:System.IAsyncResult" />-Schnittstelle, die die durch einen Aufruf von <see cref="M:System.ComponentModel.ISynchronizeInvoke.BeginInvoke(System.Delegate,System.Object[])" /> gestartete asynchrone Operation darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5a94-125">An <see cref="T:System.IAsyncResult" /> interface that represents the asynchronous operation started by calling <see cref="M:System.ComponentModel.ISynchronizeInvoke.BeginInvoke(System.Delegate,System.Object[])" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d5a94-126">Wartet, bis der durch einen Aufruf von <see cref="M:System.ComponentModel.ISynchronizeInvoke.BeginInvoke(System.Delegate,System.Object[])" /> gestartete Prozess abgeschlossen ist, und gibt anschließend den vom Prozess generierten Wert zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5a94-126">Waits until the process started by calling <see cref="M:System.ComponentModel.ISynchronizeInvoke.BeginInvoke(System.Delegate,System.Object[])" /> completes, and then returns the value generated by the process.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d5a94-127">Ein <see cref="T:System.Object" />, das den durch die asynchrone Operation generierten Rückgabewert darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5a94-127">An <see cref="T:System.Object" /> that represents the return value generated by the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5a94-128">Diese Methode ruft den Rückgabewert des asynchronen Vorgangs dargestellt durch die <xref:System.IAsyncResult> von dieser Schnittstelle übergeben.</span><span class="sxs-lookup"><span data-stu-id="d5a94-128">This method gets the return value of the asynchronous operation represented by the <xref:System.IAsyncResult> passed by this interface.</span></span> <span data-ttu-id="d5a94-129">Wenn der asynchrone Vorgang nicht abgeschlossen wurde, wird diese Methode warten, bis das Ergebnis verfügbar ist.</span><span class="sxs-lookup"><span data-stu-id="d5a94-129">If the asynchronous operation has not completed, this method will wait until the result is available.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.ISynchronizeInvoke.BeginInvoke(System.Delegate,System.Object[])" />
      </Docs>
    </Member>
    <Member MemberName="Invoke">
      <MemberSignature Language="C#" Value="public object Invoke (Delegate method, object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Invoke(class System.Delegate method, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.ISynchronizeInvoke.Invoke(System.Delegate,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Function Invoke (method As Delegate, args As Object()) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Invoke(Delegate ^ method, cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="abstract member Invoke : Delegate * obj[] -&gt; obj" Usage="iSynchronizeInvoke.Invoke (method, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Primitives</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="method" Type="System.Delegate" />
        <Parameter Name="args" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="method">
          <span data-ttu-id="d5a94-130">Ein <see cref="T:System.Delegate" />, der eine aufzurufende Methode im Threadkontext für das Steuerelement enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5a94-130">A <see cref="T:System.Delegate" /> that contains a method to call, in the context of the thread for the control.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="d5a94-131">Ein Array vom Typ <see cref="T:System.Object" />, das die an die angegebene Methode zu übergebenden Argumente darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5a94-131">An array of type <see cref="T:System.Object" /> that represents the arguments to pass to the given method.</span>
          </span>
          <span data-ttu-id="d5a94-132">Dies kann <see langword="null" /> sein, wenn keine Argumente benötigt werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5a94-132">This can be <see langword="null" /> if no arguments are needed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d5a94-133">Führt den Delegaten synchron für den Thread aus, der dieses Objekt erstellt hat, und marshallt den Aufruf in den erstellenden Thread.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5a94-133">Synchronously executes the delegate on the thread that created this object and marshals the call to the creating thread.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d5a94-134">Ein <see cref="T:System.Object" />, das den Rückgabewert des aufgerufenen Delegaten darstellt, oder <see langword="null" />, wenn der Delegat keinen Wert zurückgibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5a94-134">An <see cref="T:System.Object" /> that represents the return value from the delegate being invoked, or <see langword="null" /> if the delegate has no return value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5a94-135">Im Gegensatz zu <xref:System.ComponentModel.ISynchronizeInvoke.BeginInvoke%2A>, diese Methode wird synchron ausgeführt, d. h. es wartet, bis der Prozess vor der Rückgabe abgeschlossen ist.</span><span class="sxs-lookup"><span data-stu-id="d5a94-135">Unlike <xref:System.ComponentModel.ISynchronizeInvoke.BeginInvoke%2A>, this method operates synchronously, that is, it waits until the process completes before returning.</span></span> <span data-ttu-id="d5a94-136">Während des Aufrufs ausgelöste Ausnahmen werden an den Aufrufer weitergegeben.</span><span class="sxs-lookup"><span data-stu-id="d5a94-136">Exceptions raised during the call are propagated back to the caller.</span></span>  
  
 <span data-ttu-id="d5a94-137">Verwenden Sie diese Methode beim Aufrufen einer Methode von einem anderen Thread, um den Aufruf an den richtigen Thread zu marshallen.</span><span class="sxs-lookup"><span data-stu-id="d5a94-137">Use this method when calling a method from a different thread to marshal the call to the proper thread.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InvokeRequired">
      <MemberSignature Language="C#" Value="public bool InvokeRequired { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool InvokeRequired" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.ISynchronizeInvoke.InvokeRequired" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InvokeRequired As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool InvokeRequired { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.InvokeRequired : bool" Usage="System.ComponentModel.ISynchronizeInvoke.InvokeRequired" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Primitives</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d5a94-138">Ruft einen Wert ab, der angibt, ob der Aufrufer <see cref="M:System.ComponentModel.ISynchronizeInvoke.Invoke(System.Delegate,System.Object[])" /> beim Aufruf eines Objekts aufrufen muss, das diese Schnittstelle implementiert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5a94-138">Gets a value indicating whether the caller must call <see cref="M:System.ComponentModel.ISynchronizeInvoke.Invoke(System.Delegate,System.Object[])" /> when calling an object that implements this interface.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d5a94-139">
            <see langword="true" />, wenn der Aufrufer <see cref="M:System.ComponentModel.ISynchronizeInvoke.Invoke(System.Delegate,System.Object[])" /> aufrufen muss, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5a94-139">
              <see langword="true" /> if the caller must call <see cref="M:System.ComponentModel.ISynchronizeInvoke.Invoke(System.Delegate,System.Object[])" />; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5a94-140">Diese Eigenschaft bestimmt, ob der Aufrufer aufrufen muss <xref:System.ComponentModel.ISynchronizeInvoke.Invoke%2A> Wenn Methodenaufrufe an ein Objekt, das diese Schnittstelle implementiert.</span><span class="sxs-lookup"><span data-stu-id="d5a94-140">This property determines whether the caller must call <xref:System.ComponentModel.ISynchronizeInvoke.Invoke%2A> when making method calls to an object that implements this interface.</span></span> <span data-ttu-id="d5a94-141">Solche Objekte sind für einen bestimmten Thread gebunden, und es sind nicht threadsicher.</span><span class="sxs-lookup"><span data-stu-id="d5a94-141">Such objects are bound to a specific thread and are not thread-safe.</span></span> <span data-ttu-id="d5a94-142">Wenn Sie eine Methode von einem anderen Thread aufrufen, müssen Sie verwenden die <xref:System.ComponentModel.ISynchronizeInvoke.Invoke%2A> Methode, um den Aufruf an den richtigen Thread gemarshallt werden soll.</span><span class="sxs-lookup"><span data-stu-id="d5a94-142">If you are calling a method from a different thread, you must use the <xref:System.ComponentModel.ISynchronizeInvoke.Invoke%2A> method to marshal the call to the proper thread.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>