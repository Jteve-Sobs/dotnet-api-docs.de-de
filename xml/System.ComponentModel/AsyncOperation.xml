<Type Name="AsyncOperation" FullName="System.ComponentModel.AsyncOperation">
  <Metadata><Meta Name="ms.openlocfilehash" Value="910a7bfeee1e93c687fc95aeb1e5cd8b49ab6725" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69348240" /></Metadata><TypeSignature Language="C#" Value="public sealed class AsyncOperation" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit AsyncOperation extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.AsyncOperation" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class AsyncOperation" />
  <TypeSignature Language="C++ CLI" Value="public ref class AsyncOperation sealed" />
  <TypeSignature Language="F#" Value="type AsyncOperation = class" />
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.EventBasedAsync</AssemblyName>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="7c5ba-101">Verfolgt die Lebensdauer eines asynchronen Vorgangs.</span><span class="sxs-lookup"><span data-stu-id="7c5ba-101">Tracks the lifetime of an asynchronous operation.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7c5ba-102">Wenn Sie eine Klasse gemäß der [Übersicht über das ereignisbasierte asynchrone Muster](~/docs/standard/asynchronous-programming-patterns/event-based-asynchronous-pattern-overview.md)implementieren, müssen Sie möglicherweise die Lebensdauer der einzelnen asynchronen Vorgänge, die für eine Instanz der Klasse aufgerufen werden, nachverfolgen.</span><span class="sxs-lookup"><span data-stu-id="7c5ba-102">When you implement a class according to the [Event-based Asynchronous Pattern Overview](~/docs/standard/asynchronous-programming-patterns/event-based-asynchronous-pattern-overview.md), you may need to track the lifetime of each asynchronous operation invoked on an instance of your class.</span></span> <span data-ttu-id="7c5ba-103">Die <xref:System.ComponentModel.AsyncOperation> -Klasse stellt Methoden bereit, um den Fortschritt einer asynchronen Aufgabe zu verfolgen und zu melden.</span><span class="sxs-lookup"><span data-stu-id="7c5ba-103">The <xref:System.ComponentModel.AsyncOperation> class provides ways to track and report the progress of an asynchronous task.</span></span>  
  
 <span data-ttu-id="7c5ba-104">In der folgenden Liste sind die Verwendungsmöglichkeiten <xref:System.ComponentModel.AsyncOperation> eines Objekts aufgeführt:</span><span class="sxs-lookup"><span data-stu-id="7c5ba-104">The following list identifies ways to use an <xref:System.ComponentModel.AsyncOperation> object:</span></span>  
  
-   <span data-ttu-id="7c5ba-105">Um Status-und Zwischenergebnisse an den Client zu melden <xref:System.ComponentModel.AsyncOperation.Post%2A> , wenden Sie sich an den asynchronen Workercode.</span><span class="sxs-lookup"><span data-stu-id="7c5ba-105">To report progress and interim results to the client, call <xref:System.ComponentModel.AsyncOperation.Post%2A> from your asynchronous worker code.</span></span>  
  
-   <span data-ttu-id="7c5ba-106">Um anzugeben, dass eine asynchrone Aufgabe abgeschlossen wurde, oder um eine ausstehende asynchrone Aufgabe abzubrechen <xref:System.ComponentModel.AsyncOperation.PostOperationCompleted%2A>, rufen Sie auf.</span><span class="sxs-lookup"><span data-stu-id="7c5ba-106">To indicate that an asynchronous task has completed, or to cancel a pending asynchronous task, call <xref:System.ComponentModel.AsyncOperation.PostOperationCompleted%2A>.</span></span>  
  
 <span data-ttu-id="7c5ba-107">Die Klasse sollte ein <xref:System.ComponentModel.AsyncOperation> Objekt für jede asynchrone Aufgabe abrufen, indem aufgerufen <xref:System.ComponentModel.AsyncOperationManager.CreateOperation%2A?displayProperty=nameWithType> wird, wenn die einzelnen Aufgaben gestartet werden.</span><span class="sxs-lookup"><span data-stu-id="7c5ba-107">Your class should get an <xref:System.ComponentModel.AsyncOperation> object for each asynchronous task by calling <xref:System.ComponentModel.AsyncOperationManager.CreateOperation%2A?displayProperty=nameWithType> when each task starts.</span></span> <span data-ttu-id="7c5ba-108">Um dem Client die Unterscheidung einzelner asynchroner Aufgaben zu <xref:System.ComponentModel.AsyncOperationManager.CreateOperation%2A?displayProperty=nameWithType> ermöglichen, nimmt einen Parameter für ein eindeutiges vom <xref:System.ComponentModel.AsyncOperation.UserSuppliedState%2A> Client bereitgestelltes Token an, das zur-Eigenschaft wird.</span><span class="sxs-lookup"><span data-stu-id="7c5ba-108">To allow the client to distinguish separate asynchronous tasks, <xref:System.ComponentModel.AsyncOperationManager.CreateOperation%2A?displayProperty=nameWithType> takes a parameter for a unique client-provided token, which becomes the <xref:System.ComponentModel.AsyncOperation.UserSuppliedState%2A> property.</span></span> <span data-ttu-id="7c5ba-109">Sie kann dann vom Client Code verwendet werden, um die asynchrone Aufgabe zu identifizieren, die Status-oder Beendigungs Ereignisse aufhebt.</span><span class="sxs-lookup"><span data-stu-id="7c5ba-109">It can then be used by client code to identify the particular asynchronous task that is raising progress or completion events.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7c5ba-110">Im folgenden Codebeispiel wird die Verwendung <xref:System.ComponentModel.AsyncOperation> eines-Objekts zum Nachverfolgen der Lebensdauer von asynchronen Vorgängen veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="7c5ba-110">The following code example demonstrates using an <xref:System.ComponentModel.AsyncOperation> object to track the lifetime of asynchronous operations.</span></span> <span data-ttu-id="7c5ba-111">Dieses Codebeispiel ist Teil eines größeren Beispiels, das für die <xref:System.ComponentModel.AsyncOperationManager?displayProperty=nameWithType> -Klasse bereitgestellt wird.</span><span class="sxs-lookup"><span data-stu-id="7c5ba-111">This code example is part of a larger example provided for the <xref:System.ComponentModel.AsyncOperationManager?displayProperty=nameWithType> class.</span></span>  
  
 <span data-ttu-id="7c5ba-112">Eine vollständige Code Auflistung finden [Sie unter Gewusst wie: Übersicht über ereignisbasierte asynchrone Muster](https://msdn.microsoft.com/library/3c1aa4d4-da87-4a03-b812-3d167b8c57cf).</span><span class="sxs-lookup"><span data-stu-id="7c5ba-112">For a full code listing, see [How to: Implement a Component That Supports the Event-based Asynchronous Pattern](https://msdn.microsoft.com/library/3c1aa4d4-da87-4a03-b812-3d167b8c57cf).</span></span> <span data-ttu-id="7c5ba-113">Eine vollständige Code Auflistung eines Client Formulars finden [Sie unter Gewusst wie: Implementieren eines Clients des ereignisbasierten asynchronen Musters](~/docs/standard/asynchronous-programming-patterns/how-to-implement-a-client-of-the-event-based-asynchronous-pattern.md).</span><span class="sxs-lookup"><span data-stu-id="7c5ba-113">For a full code listing of a client form, see [How to: Implement a Client of the Event-based Asynchronous Pattern](~/docs/standard/asynchronous-programming-patterns/how-to-implement-a-client-of-the-event-based-asynchronous-pattern.md).</span></span>  
  
 [!code-csharp[System.ComponentModel.AsyncOperationManager#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.AsyncOperationManager/CS/primenumbercalculatormain.cs#3)]
 [!code-vb[System.ComponentModel.AsyncOperationManager#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.AsyncOperationManager/VB/primenumbercalculatormain.vb#3)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para><span data-ttu-id="7c5ba-114">Implementierer müssen sicher <see cref="M:System.ComponentModel.AsyncOperation.PostOperationCompleted(System.Threading.SendOrPostCallback,System.Object)" /> stellen <see cref="M:System.ComponentModel.AsyncOperation.Post(System.Threading.SendOrPostCallback,System.Object)" /> , dass die Aufrufe und asynchron ausgeführt werden, damit Klassen Bibliotheks Anbieter sich nicht auf potenzielle Stapel Überläufe beziehen müssen, wenn Sie ein asynchrones Verhalten in einer bestimmten Anwendung annehmen. das Modell, das synchron ist.</span><span class="sxs-lookup"><span data-stu-id="7c5ba-114">Implementers must ensure the <see cref="M:System.ComponentModel.AsyncOperation.PostOperationCompleted(System.Threading.SendOrPostCallback,System.Object)" /> and <see cref="M:System.ComponentModel.AsyncOperation.Post(System.Threading.SendOrPostCallback,System.Object)" /> invocations are asynchronous, so that class library providers do not need to concern themselves with potential stack overflows if they assume asynchronous behavior in a particular application model that happens to be synchronous.</span></span>  
  
<span data-ttu-id="7c5ba-115">Weitere Informationen zum Implementieren von asynchronen Klassen finden Sie unter [Implementieren des ereignisbasierten asynchronen Musters](~/docs/standard/asynchronous-programming-patterns/implementing-the-event-based-asynchronous-pattern.md).</span><span class="sxs-lookup"><span data-stu-id="7c5ba-115">For more information about implementing asynchronous classes, see [Implementing the Event-based Asynchronous Pattern](~/docs/standard/asynchronous-programming-patterns/implementing-the-event-based-asynchronous-pattern.md).</span></span></para></block>
    <altmember cref="T:System.ComponentModel.AsyncOperationManager" />
    <related type="Article" href="https://msdn.microsoft.com/library/e51988e7-7f4b-4646-a06d-1416cee8d557"><span data-ttu-id="7c5ba-116">Empfohlene Vorgehensweise für das verwaltete Threading</span><span class="sxs-lookup"><span data-stu-id="7c5ba-116">Managed Threading Best Practices</span></span></related>
    <related type="Article" href="https://msdn.microsoft.com/library/3c1aa4d4-da87-4a03-b812-3d167b8c57cf"><span data-ttu-id="7c5ba-117">Vorgehensweise: Implementieren einer Komponente, die das ereignisbasierte asynchrone Muster unterstützt</span><span class="sxs-lookup"><span data-stu-id="7c5ba-117">How to: Implement a Component that Supports the Event-based Asynchronous Pattern</span></span></related>
  </Docs>
  <Members>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~AsyncOperation ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.AsyncOperation.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!AsyncOperation ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="asyncOperation.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.EventBasedAsync</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7c5ba-118">Beendet den asynchronen Vorgang.</span><span class="sxs-lookup"><span data-stu-id="7c5ba-118">Finalizes the asynchronous operation.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OperationCompleted">
      <MemberSignature Language="C#" Value="public void OperationCompleted ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void OperationCompleted() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.AsyncOperation.OperationCompleted" />
      <MemberSignature Language="VB.NET" Value="Public Sub OperationCompleted ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void OperationCompleted();" />
      <MemberSignature Language="F#" Value="member this.OperationCompleted : unit -&gt; unit" Usage="asyncOperation.OperationCompleted " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.EventBasedAsync</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7c5ba-119">Beendet die Lebensdauer eines asynchronen Vorgangs.</span><span class="sxs-lookup"><span data-stu-id="7c5ba-119">Ends the lifetime of an asynchronous operation.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7c5ba-120">Ruft die <xref:System.ComponentModel.AsyncOperation.OperationCompleted%2A> -Methode auf, um die Lebensdauer eines asynchronen Vorgangs zu beenden.</span><span class="sxs-lookup"><span data-stu-id="7c5ba-120">Call the <xref:System.ComponentModel.AsyncOperation.OperationCompleted%2A> method to end the lifetime of an asynchronous operation.</span></span> <span data-ttu-id="7c5ba-121">Nachdem diese Methode für eine bestimmte Aufgabe aufgerufen wurde, wird von Aufrufen der <xref:System.ComponentModel.AsyncOperation> entsprechenden-Methode eine Ausnahme ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="7c5ba-121">After this method is called for a particular task, calls to its corresponding <xref:System.ComponentModel.AsyncOperation> will raise an exception.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="7c5ba-122"><see cref="M:System.ComponentModel.AsyncOperation.OperationCompleted" /> wurde vorher für diese Aufgabe aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="7c5ba-122"><see cref="M:System.ComponentModel.AsyncOperation.OperationCompleted" /> has been called previously for this task.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Post">
      <MemberSignature Language="C#" Value="public void Post (System.Threading.SendOrPostCallback d, object arg);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Post(class System.Threading.SendOrPostCallback d, object arg) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.AsyncOperation.Post(System.Threading.SendOrPostCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Post (d As SendOrPostCallback, arg As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Post(System::Threading::SendOrPostCallback ^ d, System::Object ^ arg);" />
      <MemberSignature Language="F#" Value="member this.Post : System.Threading.SendOrPostCallback * obj -&gt; unit" Usage="asyncOperation.Post (d, arg)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.EventBasedAsync</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Threading.SendOrPostCallback" />
        <Parameter Name="arg" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="7c5ba-123">Ein <see cref="T:System.Threading.SendOrPostCallback" />-Objekt, das den am Ende des Vorgangs aufzurufenden Delegaten umschließt.</span><span class="sxs-lookup"><span data-stu-id="7c5ba-123">A <see cref="T:System.Threading.SendOrPostCallback" /> object that wraps the delegate to be called when the operation ends.</span></span></param>
        <param name="arg"><span data-ttu-id="7c5ba-124">Ein Argument für den Delegaten, der im <paramref name="d" />-Parameter enthalten ist.</span><span class="sxs-lookup"><span data-stu-id="7c5ba-124">An argument for the delegate contained in the <paramref name="d" /> parameter.</span></span></param>
        <summary><span data-ttu-id="7c5ba-125">Ruft einen Delegaten auf dem Thread oder Kontext auf, der für das Anwendungsmodell geeignet ist.</span><span class="sxs-lookup"><span data-stu-id="7c5ba-125">Invokes a delegate on the thread or context appropriate for the application model.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7c5ba-126">Die <xref:System.ComponentModel.AsyncOperation.Post%2A> -Methode ruft den `arg` vom-Parameter angegebenen Delegaten auf, ohne dass die Lebensdauer des asynchronen Vorgangs beendet wird.</span><span class="sxs-lookup"><span data-stu-id="7c5ba-126">The <xref:System.ComponentModel.AsyncOperation.Post%2A> method invokes the delegate specified by the `arg` parameter without ending the lifetime of the asynchronous operation.</span></span>  
  
 <span data-ttu-id="7c5ba-127">Sie können die <xref:System.ComponentModel.AsyncOperation.Post%2A> -Methode so oft wie gewünscht aufzurufen, <xref:System.ComponentModel.AsyncOperation.PostOperationCompleted%2A>während die Lebensdauer des asynchronen Vorgangs nicht durch einen-Befehl beendet wurde.</span><span class="sxs-lookup"><span data-stu-id="7c5ba-127">You can call the <xref:System.ComponentModel.AsyncOperation.Post%2A> method as often as you like while the lifetime of the asynchronous operation has not been ended by a call to <xref:System.ComponentModel.AsyncOperation.PostOperationCompleted%2A>.</span></span> <span data-ttu-id="7c5ba-128">Sie können die-Methode verwenden, um den Fortschritt oder Zwischenergebnisse an Clients zu melden.</span><span class="sxs-lookup"><span data-stu-id="7c5ba-128">You can use the method to report progress or interim results back to clients.</span></span>  
  
 <span data-ttu-id="7c5ba-129">Der `d` -Parameter umschließt den Delegaten, den Sie aufrufen möchten, wenn Sie ein Update über den Status der asynchronen Aufgabe bereitstellen möchten.</span><span class="sxs-lookup"><span data-stu-id="7c5ba-129">The `d` parameter wraps the delegate you want called when you want to post an update about the status of the asynchronous task.</span></span> <span data-ttu-id="7c5ba-130">Das <xref:System.ComponentModel.AsyncOperation> -Objekt stellt sicher, dass der Delegat für den Thread oder Kontext aufgerufen wird, der für das Anwendungsmodell geeignet ist.</span><span class="sxs-lookup"><span data-stu-id="7c5ba-130">The <xref:System.ComponentModel.AsyncOperation> object will ensure that your delegate is invoked on the thread or context appropriate for the application model.</span></span> <span data-ttu-id="7c5ba-131">Die-Methode kann optional ein Ereignis mit einer Statusänderung, einem Status Update oder neu verfügbaren inkrementellen Ergebnissen von Clients benachrichtigen.</span><span class="sxs-lookup"><span data-stu-id="7c5ba-131">Your method can optionally raise an event that notifies clients of a status change, progress update, or newly available incremental results.</span></span>  
  
 <span data-ttu-id="7c5ba-132">Der `arg` -Parameter sollte verwendet werden, um den Zustand an den Delegaten `d` zu übergeben, der vom-Parameter umschließt</span><span class="sxs-lookup"><span data-stu-id="7c5ba-132">The `arg` parameter should be used to pass state to the delegate wrapped by the `d` parameter.</span></span> <span data-ttu-id="7c5ba-133">Möglicherweise handelt es sich um einen <xref:System.ComponentModel.AsyncOperation>Verweis auf einen, oder es <xref:System.ComponentModel.ProgressChangedEventArgs?displayProperty=nameWithType> handelt sich um ein-Objekt.</span><span class="sxs-lookup"><span data-stu-id="7c5ba-133">It might be a reference to an <xref:System.ComponentModel.AsyncOperation>, or it might be a <xref:System.ComponentModel.ProgressChangedEventArgs?displayProperty=nameWithType> object.</span></span> <span data-ttu-id="7c5ba-134">Es kann wünschenswert sein, eine eigene Klasse von <xref:System.ComponentModel.ProgressChangedEventArgs?displayProperty=nameWithType> abzuleiten, um zusätzlichen Zustands Speicher bereitzustellen.</span><span class="sxs-lookup"><span data-stu-id="7c5ba-134">It may be desirable to derive your own class from <xref:System.ComponentModel.ProgressChangedEventArgs?displayProperty=nameWithType> to provide additional state storage.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7c5ba-135">Im folgenden Codebeispiel wird die Verwendung <xref:System.ComponentModel.AsyncOperation.Post%2A> der-Methode zum Melden des Fortschritts und der inkrementellen Ergebnisse eines asynchronen Vorgangs veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="7c5ba-135">The following code example demonstrates using the <xref:System.ComponentModel.AsyncOperation.Post%2A> method for reporting progress and incremental results of an asynchronous operation.</span></span> <span data-ttu-id="7c5ba-136">Dieses Codebeispiel ist Teil eines größeren Beispiels, das für die <xref:System.ComponentModel.AsyncOperationManager?displayProperty=nameWithType> -Klasse bereitgestellt wird.</span><span class="sxs-lookup"><span data-stu-id="7c5ba-136">This code example is part of a larger example provided for the <xref:System.ComponentModel.AsyncOperationManager?displayProperty=nameWithType> class.</span></span>  
  
  
[!code-csharp[System.ComponentModel.AsyncOperationManager#5](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.AsyncOperationManager/CS/primenumbercalculatormain.cs#5)]
[!code-vb[System.ComponentModel.AsyncOperationManager#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.AsyncOperationManager/VB/primenumbercalculatormain.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="7c5ba-137">Die <see cref="M:System.ComponentModel.AsyncOperation.PostOperationCompleted(System.Threading.SendOrPostCallback,System.Object)" />-Methode wurde zuvor für diese Aufgabe aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="7c5ba-137">The <see cref="M:System.ComponentModel.AsyncOperation.PostOperationCompleted(System.Threading.SendOrPostCallback,System.Object)" /> method has been called previously for this task.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="7c5ba-138"><paramref name="d" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="7c5ba-138"><paramref name="d" /> is <see langword="null" />.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="7c5ba-139">Vererber müssen den <see cref="M:System.ComponentModel.AsyncOperation.Post(System.Threading.SendOrPostCallback,System.Object)" /> Aufruf asynchron machen, damit Klassen Bibliotheks Anbieter sich nicht auf potenzielle Stapel Überläufe beziehen müssen, wenn Sie asynchron annehmen, aber ein bestimmtes Anwendungsmodell synchron ist.</span><span class="sxs-lookup"><span data-stu-id="7c5ba-139">Inheritors must make the <see cref="M:System.ComponentModel.AsyncOperation.Post(System.Threading.SendOrPostCallback,System.Object)" /> invocation asynchronous, so that class library providers do not need to concern themselves with potential stack overflows if they assume asynchrony but a particular application model happens to be synchronous.</span></span>  
  
 <block subset="none" type="note"><para>  
 <span data-ttu-id="7c5ba-140">Konsolenanwendungen führen keine Synchronisierung von <see cref="M:System.ComponentModel.AsyncOperation.Post(System.Threading.SendOrPostCallback,System.Object)" />-Aufrufen durch.</span><span class="sxs-lookup"><span data-stu-id="7c5ba-140">Console applications do not synchronize the execution of <see cref="M:System.ComponentModel.AsyncOperation.Post(System.Threading.SendOrPostCallback,System.Object)" /> calls.</span></span> <span data-ttu-id="7c5ba-141">Das kann dazu führen, dass <see langword="ProgressChanged" />-Ereignisse nicht in der richtigen Reihenfolge ausgelöst werden.</span><span class="sxs-lookup"><span data-stu-id="7c5ba-141">This can cause <see langword="ProgressChanged" /> events to be raised out of order.</span></span> <span data-ttu-id="7c5ba-142">Wenn Sie eine serialisierte Ausführung von <see cref="M:System.ComponentModel.AsyncOperation.Post(System.Threading.SendOrPostCallback,System.Object)" />-Aufrufen wünschen, implementieren und installieren Sie eine <see cref="T:System.Threading.SynchronizationContext" />-Klasse.</span><span class="sxs-lookup"><span data-stu-id="7c5ba-142">If you wish to have serialized execution of <see cref="M:System.ComponentModel.AsyncOperation.Post(System.Threading.SendOrPostCallback,System.Object)" /> calls, implement and install a <see cref="T:System.Threading.SynchronizationContext" /> class.</span></span>  
  
</para></block>  
  
 <span data-ttu-id="7c5ba-143">Weitere Informationen zum Implementieren von asynchronen Klassen finden Sie unter [Implementieren des ereignisbasierten asynchronen Musters](~/docs/standard/asynchronous-programming-patterns/implementing-the-event-based-asynchronous-pattern.md).</span><span class="sxs-lookup"><span data-stu-id="7c5ba-143">For more information about implementing asynchronous classes, see [Implementing the Event-based Asynchronous Pattern](~/docs/standard/asynchronous-programming-patterns/implementing-the-event-based-asynchronous-pattern.md).</span></span></para></block>
        <altmember cref="T:System.ComponentModel.AsyncOperationManager" />
        <related type="Article" href="https://msdn.microsoft.com/library/e51988e7-7f4b-4646-a06d-1416cee8d557"><span data-ttu-id="7c5ba-144">Empfohlene Vorgehensweise für das verwaltete Threading</span><span class="sxs-lookup"><span data-stu-id="7c5ba-144">Managed Threading Best Practices</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/3c1aa4d4-da87-4a03-b812-3d167b8c57cf"><span data-ttu-id="7c5ba-145">Vorgehensweise: Implementieren einer Komponente, die das ereignisbasierte asynchrone Muster unterstützt</span><span class="sxs-lookup"><span data-stu-id="7c5ba-145">How to: Implement a Component that Supports the Event-based Asynchronous Pattern</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="PostOperationCompleted">
      <MemberSignature Language="C#" Value="public void PostOperationCompleted (System.Threading.SendOrPostCallback d, object arg);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void PostOperationCompleted(class System.Threading.SendOrPostCallback d, object arg) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.AsyncOperation.PostOperationCompleted(System.Threading.SendOrPostCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PostOperationCompleted (d As SendOrPostCallback, arg As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PostOperationCompleted(System::Threading::SendOrPostCallback ^ d, System::Object ^ arg);" />
      <MemberSignature Language="F#" Value="member this.PostOperationCompleted : System.Threading.SendOrPostCallback * obj -&gt; unit" Usage="asyncOperation.PostOperationCompleted (d, arg)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.EventBasedAsync</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Threading.SendOrPostCallback" />
        <Parameter Name="arg" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="7c5ba-146">Ein <see cref="T:System.Threading.SendOrPostCallback" />-Objekt, das den am Ende des Vorgangs aufzurufenden Delegaten umschließt.</span><span class="sxs-lookup"><span data-stu-id="7c5ba-146">A <see cref="T:System.Threading.SendOrPostCallback" /> object that wraps the delegate to be called when the operation ends.</span></span></param>
        <param name="arg"><span data-ttu-id="7c5ba-147">Ein Argument für den Delegaten, der im <paramref name="d" />-Parameter enthalten ist.</span><span class="sxs-lookup"><span data-stu-id="7c5ba-147">An argument for the delegate contained in the <paramref name="d" /> parameter.</span></span></param>
        <summary><span data-ttu-id="7c5ba-148">Beendet die Lebensdauer eines asynchronen Vorgangs.</span><span class="sxs-lookup"><span data-stu-id="7c5ba-148">Ends the lifetime of an asynchronous operation.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7c5ba-149">Ruft die <xref:System.ComponentModel.AsyncOperation.PostOperationCompleted%2A> -Methode auf, um die Lebensdauer eines asynchronen Vorgangs zu beenden.</span><span class="sxs-lookup"><span data-stu-id="7c5ba-149">Call the <xref:System.ComponentModel.AsyncOperation.PostOperationCompleted%2A> method to end the lifetime of an asynchronous operation.</span></span> <span data-ttu-id="7c5ba-150">Nachdem diese Methode für eine bestimmte Aufgabe aufgerufen wurde, wird von Aufrufen des <xref:System.ComponentModel.AsyncOperation> entsprechenden Objekts eine Ausnahme ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="7c5ba-150">After this method is called for a particular task, calls to its corresponding <xref:System.ComponentModel.AsyncOperation> object will raise an exception.</span></span>  
  
 <span data-ttu-id="7c5ba-151">Der `d` -Parameter umschließt den Delegaten, der von der-Klasse aufgerufen werden soll, wenn die Lebensdauer der Aufgabe aufgrund von Abschluss, Abbruch oder Fehler der Aufgabe beendet wird.</span><span class="sxs-lookup"><span data-stu-id="7c5ba-151">The `d` parameter wraps the delegate you want your class to call when the task's lifetime ends due to completion, cancellation, or failure of the task.</span></span> <span data-ttu-id="7c5ba-152">Das <xref:System.ComponentModel.AsyncOperation> -Objekt stellt sicher, dass der Delegat für den Thread oder Kontext aufgerufen wird, der für das Anwendungsmodell geeignet ist.</span><span class="sxs-lookup"><span data-stu-id="7c5ba-152">The <xref:System.ComponentModel.AsyncOperation> object will ensure that your delegate is invoked on the thread or context appropriate for the application model.</span></span> <span data-ttu-id="7c5ba-153">Der Delegat kann optional ein Ereignis, das Clients benachrichtigt, dass die Lebensdauer der asynchronen Aufgabe beendet wurde.</span><span class="sxs-lookup"><span data-stu-id="7c5ba-153">Your delegate can optionally raise an event that notifies clients that the asynchronous task's lifetime has ended.</span></span>  
  
 <span data-ttu-id="7c5ba-154">Der `arg` -Parameter wird verwendet, um Zustandsinformationen an den `d`Abschluss Delegaten zu übergeben.</span><span class="sxs-lookup"><span data-stu-id="7c5ba-154">The `arg` parameter is used to pass state information to the completion delegate `d`.</span></span> <span data-ttu-id="7c5ba-155">Sie können ein <xref:System.ComponentModel.AsyncOperation> Objekt oder ein <xref:System.ComponentModel.AsyncCompletedEventArgs?displayProperty=nameWithType> Objekt als Parameterwert verwenden.</span><span class="sxs-lookup"><span data-stu-id="7c5ba-155">You can use an <xref:System.ComponentModel.AsyncOperation> object, or an <xref:System.ComponentModel.AsyncCompletedEventArgs?displayProperty=nameWithType> object as the parameter value.</span></span> <span data-ttu-id="7c5ba-156">Wenn Sie zusätzlichen Zustands Speicher bereitstellen möchten, können Sie alternativ eine Instanz einer Klasse verwenden, die Sie von der <xref:System.ComponentModel.AsyncCompletedEventArgs?displayProperty=nameWithType> -Klasse ableiten.</span><span class="sxs-lookup"><span data-stu-id="7c5ba-156">Alternatively, if you want to provide additional state storage, you can use an instance of a class you derive from the <xref:System.ComponentModel.AsyncCompletedEventArgs?displayProperty=nameWithType> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7c5ba-157">Im folgenden Codebeispiel wird die Verwendung <xref:System.ComponentModel.AsyncOperation.PostOperationCompleted%2A> der-Methode zum Beenden der Lebensdauer eines asynchronen Vorgangs veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="7c5ba-157">The following code example demonstrates using the <xref:System.ComponentModel.AsyncOperation.PostOperationCompleted%2A> method to end the lifetime of an asynchronous operation.</span></span> <span data-ttu-id="7c5ba-158">Dieses Codebeispiel ist Teil eines größeren Beispiels, das für die <xref:System.ComponentModel.AsyncOperationManager?displayProperty=nameWithType> -Klasse bereitgestellt wird.</span><span class="sxs-lookup"><span data-stu-id="7c5ba-158">This code example is part of a larger example provided for the <xref:System.ComponentModel.AsyncOperationManager?displayProperty=nameWithType> class.</span></span>  
  
  
[!code-csharp[System.ComponentModel.AsyncOperationManager#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.AsyncOperationManager/CS/primenumbercalculatormain.cs#4)]
[!code-vb[System.ComponentModel.AsyncOperationManager#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.AsyncOperationManager/VB/primenumbercalculatormain.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="7c5ba-159"><see cref="M:System.ComponentModel.AsyncOperation.OperationCompleted" /> wurde vorher für diese Aufgabe aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="7c5ba-159"><see cref="M:System.ComponentModel.AsyncOperation.OperationCompleted" /> has been called previously for this task.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="7c5ba-160"><paramref name="d" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="7c5ba-160"><paramref name="d" /> is <see langword="null" />.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="7c5ba-161">Vererber müssen den <see cref="M:System.ComponentModel.AsyncOperation.PostOperationCompleted(System.Threading.SendOrPostCallback,System.Object)" /> Aufruf asynchron machen, damit Klassen Bibliotheks Anbieter sich nicht auf potenzielle Stapel Überläufe beziehen müssen, wenn Sie asynchron annehmen, aber ein bestimmtes Anwendungsmodell synchron ist.</span><span class="sxs-lookup"><span data-stu-id="7c5ba-161">Inheritors must make the <see cref="M:System.ComponentModel.AsyncOperation.PostOperationCompleted(System.Threading.SendOrPostCallback,System.Object)" /> invocation asynchronous, so that class library providers do not need to concern themselves with potential stack overflows if they assume asynchrony but a particular application model happens to be synchronous.</span></span> <span data-ttu-id="7c5ba-162">Die Methode sollte als "Ende der Lebensdauer" interpretiert werden, was bedeutet, dass die Implementierung für das Anwendungsmodell geeignet ist.</span><span class="sxs-lookup"><span data-stu-id="7c5ba-162">The method should be interpreted as an "ending the lifetime" call, meaning the implementation needs to do what is appropriate for the application model.</span></span> <span data-ttu-id="7c5ba-163">Beispielsweise Dekrement ASP.net die Anzahl der ausstehenden asynchronen Vorgänge.</span><span class="sxs-lookup"><span data-stu-id="7c5ba-163">For instance, ASP.NET will decrement its count of outstanding asynchronous operations.</span></span> <span data-ttu-id="7c5ba-164">Dadurch sollte auch der Vorgang in einen Zustand versetzt werden, in dem alle nachfolgenden Aufrufe an den Vorgang fehlschlagen, da er nun abgeschlossen ist.</span><span class="sxs-lookup"><span data-stu-id="7c5ba-164">This also should put the operation into a state such that any subsequent calls into it will fail, since it has now completed.</span></span>  
  
<span data-ttu-id="7c5ba-165">Weitere Informationen zum Implementieren von asynchronen Klassen finden Sie unter [Implementieren des ereignisbasierten asynchronen Musters](~/docs/standard/asynchronous-programming-patterns/implementing-the-event-based-asynchronous-pattern.md).</span><span class="sxs-lookup"><span data-stu-id="7c5ba-165">For more information about implementing asynchronous classes, see [Implementing the Event-based Asynchronous Pattern](~/docs/standard/asynchronous-programming-patterns/implementing-the-event-based-asynchronous-pattern.md).</span></span></para></block>
        <altmember cref="T:System.ComponentModel.AsyncOperationManager" />
        <related type="Article" href="https://msdn.microsoft.com/library/e51988e7-7f4b-4646-a06d-1416cee8d557"><span data-ttu-id="7c5ba-166">Empfohlene Vorgehensweise für das verwaltete Threading</span><span class="sxs-lookup"><span data-stu-id="7c5ba-166">Managed Threading Best Practices</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/3c1aa4d4-da87-4a03-b812-3d167b8c57cf"><span data-ttu-id="7c5ba-167">Vorgehensweise: Implementieren einer Komponente, die das ereignisbasierte asynchrone Muster unterstützt</span><span class="sxs-lookup"><span data-stu-id="7c5ba-167">How to: Implement a Component that Supports the Event-based Asynchronous Pattern</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="SynchronizationContext">
      <MemberSignature Language="C#" Value="public System.Threading.SynchronizationContext SynchronizationContext { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Threading.SynchronizationContext SynchronizationContext" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.AsyncOperation.SynchronizationContext" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SynchronizationContext As SynchronizationContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Threading::SynchronizationContext ^ SynchronizationContext { System::Threading::SynchronizationContext ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SynchronizationContext : System.Threading.SynchronizationContext" Usage="System.ComponentModel.AsyncOperation.SynchronizationContext" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.EventBasedAsync</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.SynchronizationContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7c5ba-168">Ruft das <see cref="T:System.Threading.SynchronizationContext" />-Objekt ab, das an den Konstruktor übergeben wurde.</span><span class="sxs-lookup"><span data-stu-id="7c5ba-168">Gets the <see cref="T:System.Threading.SynchronizationContext" /> object that was passed to the constructor.</span></span></summary>
        <value><span data-ttu-id="7c5ba-169">Das <see cref="T:System.Threading.SynchronizationContext" />-Objekt, das an den Konstruktor übergeben wurde.</span><span class="sxs-lookup"><span data-stu-id="7c5ba-169">The <see cref="T:System.Threading.SynchronizationContext" /> object that was passed to the constructor.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UserSuppliedState">
      <MemberSignature Language="C#" Value="public object UserSuppliedState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object UserSuppliedState" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.AsyncOperation.UserSuppliedState" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UserSuppliedState As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ UserSuppliedState { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UserSuppliedState : obj" Usage="System.ComponentModel.AsyncOperation.UserSuppliedState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.EventBasedAsync</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7c5ba-170">Ruft ein Objekt ab, das für die eindeutige Identifikation eines asynchronen Vorgangs verwendet wird, und legt dieses fest.</span><span class="sxs-lookup"><span data-stu-id="7c5ba-170">Gets or sets an object used to uniquely identify an asynchronous operation.</span></span></summary>
        <value><span data-ttu-id="7c5ba-171">Das Zustandsobjekt, das an den asynchronen Methodenaufruf übergeben wurde.</span><span class="sxs-lookup"><span data-stu-id="7c5ba-171">The state object passed to the asynchronous method invocation.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7c5ba-172">Wenn die Klasse mehrere asynchrone Methoden oder mehrere Aufrufe einer einzelnen asynchronen Methode unterstützt, benötigen Clients eine Möglichkeit, um zu bestimmen, welche asynchrone Aufgabe Ereignisse aufhebt.</span><span class="sxs-lookup"><span data-stu-id="7c5ba-172">If your class supports multiple asynchronous methods or multiple invocations of a single asynchronous method, clients will need a way to determine which asynchronous task is raising events.</span></span> <span data-ttu-id="7c5ba-173">Ihre `MethodNameAsync` Methode sollte einen Parameter vom Typ <xref:System.Object> annehmen, der als Aufgaben-ID fungiert.</span><span class="sxs-lookup"><span data-stu-id="7c5ba-173">Your `MethodNameAsync` method should take a parameter of type <xref:System.Object> that will act as a task ID.</span></span> <span data-ttu-id="7c5ba-174">Diese Task-ID wird verwendet, wenn Sie die <xref:System.ComponentModel.AsyncOperationManager.CreateOperation%2A?displayProperty=nameWithType>Methode, aufrufen. Dadurch wird die Task-ID des Clients einem bestimmten Aufruf des asynchronen Vorgangs zugeordnet.</span><span class="sxs-lookup"><span data-stu-id="7c5ba-174">You will use this task ID when you call the <xref:System.ComponentModel.AsyncOperationManager.CreateOperation%2A?displayProperty=nameWithType>, method and this will associate the client's task ID with a particular invocation of your asynchronous operation.</span></span> <span data-ttu-id="7c5ba-175">Diese Task-ID wird der-Implementierung über die <xref:System.ComponentModel.AsyncOperation.UserSuppliedState%2A> -Eigenschaft zur Verfügung gestellt.</span><span class="sxs-lookup"><span data-stu-id="7c5ba-175">This task ID is made available to your implementation through the <xref:System.ComponentModel.AsyncOperation.UserSuppliedState%2A> property.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="7c5ba-176">Der Client Code muss darauf achten, einen eindeutigen Wert für die <xref:System.ComponentModel.AsyncOperation.UserSuppliedState%2A> -Eigenschaft bereitzustellen.</span><span class="sxs-lookup"><span data-stu-id="7c5ba-176">Client code must be careful to provide a unique value for the <xref:System.ComponentModel.AsyncOperation.UserSuppliedState%2A> property.</span></span> <span data-ttu-id="7c5ba-177">Nicht eindeutige Aufgaben-IDs können dazu führen, dass Ihre Implementierung den Fortschritt und andere Ereignisse falsch meldet.</span><span class="sxs-lookup"><span data-stu-id="7c5ba-177">Non-unique task IDs may cause your implementation to report progress and other events incorrectly.</span></span> <span data-ttu-id="7c5ba-178">Der Code sollte eine nicht eindeutige Aufgaben-ID überprüfen und eine <xref:System.ArgumentException> , wenn eine solche festgestellt wird.</span><span class="sxs-lookup"><span data-stu-id="7c5ba-178">Your code should check for a non-unique task ID and raise an <xref:System.ArgumentException> if one is detected.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7c5ba-179">Im folgenden Codebeispiel wird die <xref:System.ComponentModel.AsyncOperation.UserSuppliedState%2A> Verwendung von zum Nachverfolgen der Lebensdauer von asynchronen Vorgängen veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="7c5ba-179">The following code example demonstrates using <xref:System.ComponentModel.AsyncOperation.UserSuppliedState%2A> to track the lifetime of asynchronous operations.</span></span> <span data-ttu-id="7c5ba-180">Dieses Codebeispiel ist Teil eines größeren Beispiels, das für die <xref:System.ComponentModel.AsyncOperationManager?displayProperty=nameWithType> -Klasse bereitgestellt wird.</span><span class="sxs-lookup"><span data-stu-id="7c5ba-180">This code example is part of a larger example provided for the <xref:System.ComponentModel.AsyncOperationManager?displayProperty=nameWithType> class.</span></span>  
  
  
[!code-csharp[System.ComponentModel.AsyncOperationManager#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.AsyncOperationManager/CS/primenumbercalculatormain.cs#4)]
[!code-vb[System.ComponentModel.AsyncOperationManager#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.AsyncOperationManager/VB/primenumbercalculatormain.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.AsyncOperationManager" />
        <related type="Article" href="https://msdn.microsoft.com/library/e51988e7-7f4b-4646-a06d-1416cee8d557"><span data-ttu-id="7c5ba-181">Empfohlene Vorgehensweise für das verwaltete Threading</span><span class="sxs-lookup"><span data-stu-id="7c5ba-181">Managed Threading Best Practices</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/792aa8da-918b-458e-b154-9836b97735f3"><span data-ttu-id="7c5ba-182">Übersicht über ereignisbasierte asynchrone Muster</span><span class="sxs-lookup"><span data-stu-id="7c5ba-182">Event-based Asynchronous Pattern Overview</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>
