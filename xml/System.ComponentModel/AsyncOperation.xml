<Type Name="AsyncOperation" FullName="System.ComponentModel.AsyncOperation">
  <TypeSignature Language="C#" Value="public sealed class AsyncOperation" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit AsyncOperation extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.AsyncOperation" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class AsyncOperation" />
  <TypeSignature Language="C++ CLI" Value="public ref class AsyncOperation sealed" />
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.EventBasedAsync</AssemblyName>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="a5de7-101">Verfolgt die Lebensdauer eines asynchronen Vorgangs.</span><span class="sxs-lookup"><span data-stu-id="a5de7-101">Tracks the lifetime of an asynchronous operation.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a5de7-102">Bei der Implementierung einer Klasse gemäß der [Übersicht über ereignisbasierte asynchrone Muster](~/docs/standard/asynchronous-programming-patterns/event-based-asynchronous-pattern-overview.md), müssen Sie möglicherweise die Lebensdauer der einzelnen asynchronen Vorgänge, die in einer Instanz der Klasse aufgerufen nachzuverfolgen.</span><span class="sxs-lookup"><span data-stu-id="a5de7-102">When you implement a class according to the [Event-based Asynchronous Pattern Overview](~/docs/standard/asynchronous-programming-patterns/event-based-asynchronous-pattern-overview.md), you may need to track the lifetime of each asynchronous operation invoked on an instance of your class.</span></span> <span data-ttu-id="a5de7-103">Die <xref:System.ComponentModel.AsyncOperation> -Klasse bietet Methoden zum Nachverfolgen und melden den Fortschritt einer asynchronen Aufgabe.</span><span class="sxs-lookup"><span data-stu-id="a5de7-103">The <xref:System.ComponentModel.AsyncOperation> class provides ways to track and report the progress of an asynchronous task.</span></span>  
  
 <span data-ttu-id="a5de7-104">Die folgende Liste enthält Verfahren zum Verwenden einer <xref:System.ComponentModel.AsyncOperation> Objekt:</span><span class="sxs-lookup"><span data-stu-id="a5de7-104">The following list identifies ways to use an <xref:System.ComponentModel.AsyncOperation> object:</span></span>  
  
-   <span data-ttu-id="a5de7-105">Aufrufen, um Fortschritt und die vorläufigen Ergebnisse an den Client zu melden, <xref:System.ComponentModel.AsyncOperation.Post%2A> vom asynchronen Worker-Code.</span><span class="sxs-lookup"><span data-stu-id="a5de7-105">To report progress and interim results to the client, call <xref:System.ComponentModel.AsyncOperation.Post%2A> from your asynchronous worker code.</span></span>  
  
-   <span data-ttu-id="a5de7-106">Aufrufen, um anzugeben, dass eine asynchrone Aufgabe abgeschlossen wurde, oder eine ausstehende asynchrone Aufgabe abbrechen, <xref:System.ComponentModel.AsyncOperation.PostOperationCompleted%2A>.</span><span class="sxs-lookup"><span data-stu-id="a5de7-106">To indicate that an asynchronous task has completed, or to cancel a pending asynchronous task, call <xref:System.ComponentModel.AsyncOperation.PostOperationCompleted%2A>.</span></span>  
  
 <span data-ttu-id="a5de7-107">Sollten Ihre Klasse Abrufen einer <xref:System.ComponentModel.AsyncOperation> Objekt für jede asynchrone Aufgabe durch Aufrufen <xref:System.ComponentModel.AsyncOperationManager.CreateOperation%2A?displayProperty=nameWithType> Wenn jede Aufgabe gestartet wird.</span><span class="sxs-lookup"><span data-stu-id="a5de7-107">Your class should get an <xref:System.ComponentModel.AsyncOperation> object for each asynchronous task by calling <xref:System.ComponentModel.AsyncOperationManager.CreateOperation%2A?displayProperty=nameWithType> when each task starts.</span></span> <span data-ttu-id="a5de7-108">Damit der Client unterschiedliche asynchrone Aufgaben unterscheiden kann <xref:System.ComponentModel.AsyncOperationManager.CreateOperation%2A?displayProperty=nameWithType> nimmt einen Parameter für ein eindeutiges Client bereitgestellte Token wird der <xref:System.ComponentModel.AsyncOperation.UserSuppliedState%2A> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="a5de7-108">To allow the client to distinguish separate asynchronous tasks, <xref:System.ComponentModel.AsyncOperationManager.CreateOperation%2A?displayProperty=nameWithType> takes a parameter for a unique client-provided token, which becomes the <xref:System.ComponentModel.AsyncOperation.UserSuppliedState%2A> property.</span></span> <span data-ttu-id="a5de7-109">Dann kann von Clientcode verwendet werden, die asynchrone Aufgabe zu identifizieren, die nach dem Auslösen von Ereignissen für ausgeführt oder abgeschlossen ist.</span><span class="sxs-lookup"><span data-stu-id="a5de7-109">It can then be used by client code to identify the particular asynchronous task that is raising progress or completion events.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a5de7-110">Das folgende Codebeispiel veranschaulicht die Verwendung einer <xref:System.ComponentModel.AsyncOperation> Objekt, das die Lebensdauer der asynchronen Vorgänge nachzuverfolgen.</span><span class="sxs-lookup"><span data-stu-id="a5de7-110">The following code example demonstrates using an <xref:System.ComponentModel.AsyncOperation> object to track the lifetime of asynchronous operations.</span></span> <span data-ttu-id="a5de7-111">Dieses Codebeispiel ist Teil eines umfangreicheren Beispiels für die <xref:System.ComponentModel.AsyncOperationManager?displayProperty=nameWithType> Klasse.</span><span class="sxs-lookup"><span data-stu-id="a5de7-111">This code example is part of a larger example provided for the <xref:System.ComponentModel.AsyncOperationManager?displayProperty=nameWithType> class.</span></span>  
  
 <span data-ttu-id="a5de7-112">Eine vollständige Codebeispiel finden Sie unter [wie: implementieren eine Komponente, die das ereignisbasierte asynchrone Muster unterstützt](http://msdn.microsoft.com/library/3c1aa4d4-da87-4a03-b812-3d167b8c57cf).</span><span class="sxs-lookup"><span data-stu-id="a5de7-112">For a full code listing, see [How to: Implement a Component That Supports the Event-based Asynchronous Pattern](http://msdn.microsoft.com/library/3c1aa4d4-da87-4a03-b812-3d167b8c57cf).</span></span> <span data-ttu-id="a5de7-113">Eine vollständige Codeliste eines Formulars Client finden Sie unter [Vorgehensweise: Implementieren eines Clients des ereignisbasierten asynchronen Musters](~/docs/standard/asynchronous-programming-patterns/how-to-implement-a-client-of-the-event-based-asynchronous-pattern.md).</span><span class="sxs-lookup"><span data-stu-id="a5de7-113">For a full code listing of a client form, see [How to: Implement a Client of the Event-based Asynchronous Pattern](~/docs/standard/asynchronous-programming-patterns/how-to-implement-a-client-of-the-event-based-asynchronous-pattern.md).</span></span>  
  
 [!code-csharp[System.ComponentModel.AsyncOperationManager#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.AsyncOperationManager/CS/primenumbercalculatormain.cs#3)]
 [!code-vb[System.ComponentModel.AsyncOperationManager#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.AsyncOperationManager/VB/primenumbercalculatormain.vb#3)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para><span data-ttu-id="a5de7-114">Implementierer müssen sicherstellen der <see cref="M:System.ComponentModel.AsyncOperation.PostOperationCompleted(System.Threading.SendOrPostCallback,System.Object)" /> und <see cref="M:System.ComponentModel.AsyncOperation.Post(System.Threading.SendOrPostCallback,System.Object)" /> asynchron aufgerufen werden, sodass Klasse Bibliothek Anbieter nicht benötigen, sich mit möglichen Stapelüberläufen Wenn diese asynchrones Verhalten in einer bestimmten Anwendung voraussetzen Modell, die zufällig zur synchron sein.</span><span class="sxs-lookup"><span data-stu-id="a5de7-114">Implementers must ensure the <see cref="M:System.ComponentModel.AsyncOperation.PostOperationCompleted(System.Threading.SendOrPostCallback,System.Object)" /> and <see cref="M:System.ComponentModel.AsyncOperation.Post(System.Threading.SendOrPostCallback,System.Object)" /> invocations are asynchronous, so that class library providers do not need to concern themselves with potential stack overflows if they assume asynchronous behavior in a particular application model that happens to be synchronous.</span></span>  
  
 <span data-ttu-id="a5de7-115">Weitere Informationen zu asynchrone Klassen implementieren, finden Sie unter [das ereignisbasierte asynchrone Muster implementieren](~/docs/standard/asynchronous-programming-patterns/implementing-the-event-based-asynchronous-pattern.md).</span><span class="sxs-lookup"><span data-stu-id="a5de7-115">For more information about implementing asynchronous classes, see [Implementing the Event-based Asynchronous Pattern](~/docs/standard/asynchronous-programming-patterns/implementing-the-event-based-asynchronous-pattern.md).</span></span></para>
    </block>
    <altmember cref="T:System.ComponentModel.AsyncOperationManager" />
  </Docs>
  <Members>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~AsyncOperation ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.AsyncOperation.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!AsyncOperation ()" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.EventBasedAsync</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a5de7-116">Beendet den asynchronen Vorgang.</span><span class="sxs-lookup"><span data-stu-id="a5de7-116">Finalizes the asynchronous operation.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OperationCompleted">
      <MemberSignature Language="C#" Value="public void OperationCompleted ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void OperationCompleted() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.AsyncOperation.OperationCompleted" />
      <MemberSignature Language="VB.NET" Value="Public Sub OperationCompleted ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void OperationCompleted();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.EventBasedAsync</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a5de7-117">Beendet die Lebensdauer eines asynchronen Vorgangs.</span><span class="sxs-lookup"><span data-stu-id="a5de7-117">Ends the lifetime of an asynchronous operation.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a5de7-118">Rufen Sie die <xref:System.ComponentModel.AsyncOperation.OperationCompleted%2A> Methode, um die Lebensdauer eines asynchronen Vorgangs zu beenden.</span><span class="sxs-lookup"><span data-stu-id="a5de7-118">Call the <xref:System.ComponentModel.AsyncOperation.OperationCompleted%2A> method to end the lifetime of an asynchronous operation.</span></span> <span data-ttu-id="a5de7-119">Nach dem Aufruf von dieser Methode für einen bestimmten Vorgang aufruft, zum entsprechenden <xref:System.ComponentModel.AsyncOperation> wird eine Ausnahme ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="a5de7-119">After this method is called for a particular task, calls to its corresponding <xref:System.ComponentModel.AsyncOperation> will raise an exception.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="a5de7-120"><see cref="M:System.ComponentModel.AsyncOperation.OperationCompleted" /> wurde vorher für diese Aufgabe aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="a5de7-120"><see cref="M:System.ComponentModel.AsyncOperation.OperationCompleted" /> has been called previously for this task.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Post">
      <MemberSignature Language="C#" Value="public void Post (System.Threading.SendOrPostCallback d, object arg);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Post(class System.Threading.SendOrPostCallback d, object arg) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.AsyncOperation.Post(System.Threading.SendOrPostCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Post (d As SendOrPostCallback, arg As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Post(System::Threading::SendOrPostCallback ^ d, System::Object ^ arg);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.EventBasedAsync</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Threading.SendOrPostCallback" />
        <Parameter Name="arg" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="a5de7-121">Ein <see cref="T:System.Threading.SendOrPostCallback" />-Objekt, das den am Ende des Vorgangs aufzurufenden Delegaten umschließt.</span><span class="sxs-lookup"><span data-stu-id="a5de7-121">A <see cref="T:System.Threading.SendOrPostCallback" /> object that wraps the delegate to be called when the operation ends.</span></span></param>
        <param name="arg"><span data-ttu-id="a5de7-122">Ein Argument für den Delegaten, der im <c>d</c>-Parameter enthalten ist.</span><span class="sxs-lookup"><span data-stu-id="a5de7-122">An argument for the delegate contained in the <c>d</c> parameter.</span></span></param>
        <summary><span data-ttu-id="a5de7-123">Ruft einen Delegaten auf dem Thread oder Kontext auf, der für das Anwendungsmodell geeignet ist.</span><span class="sxs-lookup"><span data-stu-id="a5de7-123">Invokes a delegate on the thread or context appropriate for the application model.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a5de7-124">Die <xref:System.ComponentModel.AsyncOperation.Post%2A> Methode ruft der Delegat, der gemäß der `arg` Parameter ohne endet die Lebensdauer eines asynchronen Vorgangs.</span><span class="sxs-lookup"><span data-stu-id="a5de7-124">The <xref:System.ComponentModel.AsyncOperation.Post%2A> method invokes the delegate specified by the `arg` parameter without ending the lifetime of the asynchronous operation.</span></span>  
  
 <span data-ttu-id="a5de7-125">Sie erreichen die <xref:System.ComponentModel.AsyncOperation.Post%2A> Methode so oft wie gewünscht während die Lebensdauer eines asynchronen Vorgangs nicht durch einen Aufruf beendet wurde <xref:System.ComponentModel.AsyncOperation.PostOperationCompleted%2A>.</span><span class="sxs-lookup"><span data-stu-id="a5de7-125">You can call the <xref:System.ComponentModel.AsyncOperation.Post%2A> method as often as you like while the lifetime of the asynchronous operation has not been ended by a call to <xref:System.ComponentModel.AsyncOperation.PostOperationCompleted%2A>.</span></span> <span data-ttu-id="a5de7-126">Sie können die Methode verwenden, läuft oder Zwischenergebnisse zurück an Clients zu melden.</span><span class="sxs-lookup"><span data-stu-id="a5de7-126">You can use the method to report progress or interim results back to clients.</span></span>  
  
 <span data-ttu-id="a5de7-127">Die `d` Parameter dient als Wrapper für den Delegaten aufgerufen werden soll, wenn Sie ein Update über den Status der asynchronen Aufgabe bereitstellen möchten.</span><span class="sxs-lookup"><span data-stu-id="a5de7-127">The `d` parameter wraps the delegate you want called when you want to post an update about the status of the asynchronous task.</span></span> <span data-ttu-id="a5de7-128">Die <xref:System.ComponentModel.AsyncOperation> Objekt wird sichergestellt, dass der Delegat, auf dem Thread oder Kontext für das Anwendungsmodell geeignet aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="a5de7-128">The <xref:System.ComponentModel.AsyncOperation> object will ensure that your delegate is invoked on the thread or context appropriate for the application model.</span></span> <span data-ttu-id="a5de7-129">Die Methode kann optional ein Ereignis auszulösen, die eine Änderung des, StatusUpdate oder neu verfügbare inkrementelle Ergebnisse Clients benachrichtigt werden.</span><span class="sxs-lookup"><span data-stu-id="a5de7-129">Your method can optionally raise an event that notifies clients of a status change, progress update, or newly available incremental results.</span></span>  
  
 <span data-ttu-id="a5de7-130">Die `arg` Parameter sollte verwendet werden, Zustand an den Delegaten umschlossen übergeben der `d` Parameter.</span><span class="sxs-lookup"><span data-stu-id="a5de7-130">The `arg` parameter should be used to pass state to the delegate wrapped by the `d` parameter.</span></span> <span data-ttu-id="a5de7-131">Es handelt sich möglicherweise um einen Verweis auf ein <xref:System.ComponentModel.AsyncOperation>, oder es ist ein <xref:System.ComponentModel.ProgressChangedEventArgs?displayProperty=nameWithType> Objekt.</span><span class="sxs-lookup"><span data-stu-id="a5de7-131">It might be a reference to an <xref:System.ComponentModel.AsyncOperation>, or it might be a <xref:System.ComponentModel.ProgressChangedEventArgs?displayProperty=nameWithType> object.</span></span> <span data-ttu-id="a5de7-132">Es kann wünschenswert sein, leiten Sie eine eigene Klasse von <xref:System.ComponentModel.ProgressChangedEventArgs?displayProperty=nameWithType> um zusätzlichen Status Speicher bereitzustellen.</span><span class="sxs-lookup"><span data-stu-id="a5de7-132">It may be desirable to derive your own class from <xref:System.ComponentModel.ProgressChangedEventArgs?displayProperty=nameWithType> to provide additional state storage.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a5de7-133">Das folgende Codebeispiel veranschaulicht die Verwendung der <xref:System.ComponentModel.AsyncOperation.Post%2A> Methode für die Berichterstattung und inkrementelle Ergebnisse eines asynchronen Vorgangs.</span><span class="sxs-lookup"><span data-stu-id="a5de7-133">The following code example demonstrates using the <xref:System.ComponentModel.AsyncOperation.Post%2A> method for reporting progress and incremental results of an asynchronous operation.</span></span> <span data-ttu-id="a5de7-134">Dieses Codebeispiel ist Teil eines umfangreicheren Beispiels für die <xref:System.ComponentModel.AsyncOperationManager?displayProperty=nameWithType> Klasse.</span><span class="sxs-lookup"><span data-stu-id="a5de7-134">This code example is part of a larger example provided for the <xref:System.ComponentModel.AsyncOperationManager?displayProperty=nameWithType> class.</span></span>  
  
  
[!code-csharp[System.ComponentModel.AsyncOperationManager#5](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.AsyncOperationManager/CS/primenumbercalculatormain.cs#5)]
[!code-vb[System.ComponentModel.AsyncOperationManager#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.AsyncOperationManager/VB/primenumbercalculatormain.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="a5de7-135">Die <see cref="M:System.ComponentModel.AsyncOperation.PostOperationCompleted(System.Threading.SendOrPostCallback,System.Object)" />-Methode wurde zuvor für diese Aufgabe aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="a5de7-135">The <see cref="M:System.ComponentModel.AsyncOperation.PostOperationCompleted(System.Threading.SendOrPostCallback,System.Object)" /> method has been called previously for this task.</span></span></exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a5de7-136"><paramref name="d" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a5de7-136"><paramref name="d" /> is <see langword="null" />.</span></span></exception>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="a5de7-137">Muss die <see cref="M:System.ComponentModel.AsyncOperation.Post(System.Threading.SendOrPostCallback,System.Object)" /> Aufruf asynchron, sodass Klasse Bibliothek Anbieter nicht benötigen, selbst mit möglichen Domänenspezifischer überläuft, wenn Asynchronie wird davon ausgegangen, aber ein bestimmtes Anwendungsmodell synchron sein.</span><span class="sxs-lookup"><span data-stu-id="a5de7-137">Inheritors must make the <see cref="M:System.ComponentModel.AsyncOperation.Post(System.Threading.SendOrPostCallback,System.Object)" /> invocation asynchronous, so that class library providers do not need to concern themselves with potential stack overflows if they assume asynchrony but a particular application model happens to be synchronous.</span></span>  
  
 <block subset="none" type="note"><para>  
 <span data-ttu-id="a5de7-138">Konsolenanwendungen führen keine Synchronisierung von <see cref="M:System.ComponentModel.AsyncOperation.Post(System.Threading.SendOrPostCallback,System.Object)" />-Aufrufen durch.</span><span class="sxs-lookup"><span data-stu-id="a5de7-138">Console applications do not synchronize the execution of <see cref="M:System.ComponentModel.AsyncOperation.Post(System.Threading.SendOrPostCallback,System.Object)" /> calls.</span></span> <span data-ttu-id="a5de7-139">Das kann dazu führen, dass <see langword="ProgressChanged" />-Ereignisse nicht in der richtigen Reihenfolge ausgelöst werden.</span><span class="sxs-lookup"><span data-stu-id="a5de7-139">This can cause <see langword="ProgressChanged" /> events to be raised out of order.</span></span> <span data-ttu-id="a5de7-140">Wenn Sie eine serialisierte Ausführung von <see cref="M:System.ComponentModel.AsyncOperation.Post(System.Threading.SendOrPostCallback,System.Object)" />-Aufrufen wünschen, implementieren und installieren Sie eine <see cref="T:System.Threading.SynchronizationContext" />-Klasse.</span><span class="sxs-lookup"><span data-stu-id="a5de7-140">If you wish to have serialized execution of <see cref="M:System.ComponentModel.AsyncOperation.Post(System.Threading.SendOrPostCallback,System.Object)" /> calls, implement and install a <see cref="T:System.Threading.SynchronizationContext" /> class.</span></span>  
  
</para></block>  
  
 <span data-ttu-id="a5de7-141">Weitere Informationen zu asynchrone Klassen implementieren, finden Sie unter [das ereignisbasierte asynchrone Muster implementieren](~/docs/standard/asynchronous-programming-patterns/implementing-the-event-based-asynchronous-pattern.md).</span><span class="sxs-lookup"><span data-stu-id="a5de7-141">For more information about implementing asynchronous classes, see [Implementing the Event-based Asynchronous Pattern](~/docs/standard/asynchronous-programming-patterns/implementing-the-event-based-asynchronous-pattern.md).</span></span></para>
        </block>
        <altmember cref="T:System.ComponentModel.AsyncOperationManager" />
      </Docs>
    </Member>
    <Member MemberName="PostOperationCompleted">
      <MemberSignature Language="C#" Value="public void PostOperationCompleted (System.Threading.SendOrPostCallback d, object arg);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void PostOperationCompleted(class System.Threading.SendOrPostCallback d, object arg) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.AsyncOperation.PostOperationCompleted(System.Threading.SendOrPostCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PostOperationCompleted (d As SendOrPostCallback, arg As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PostOperationCompleted(System::Threading::SendOrPostCallback ^ d, System::Object ^ arg);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.EventBasedAsync</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Threading.SendOrPostCallback" />
        <Parameter Name="arg" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="a5de7-142">Ein <see cref="T:System.Threading.SendOrPostCallback" />-Objekt, das den am Ende des Vorgangs aufzurufenden Delegaten umschließt.</span><span class="sxs-lookup"><span data-stu-id="a5de7-142">A <see cref="T:System.Threading.SendOrPostCallback" /> object that wraps the delegate to be called when the operation ends.</span></span></param>
        <param name="arg"><span data-ttu-id="a5de7-143">Ein Argument für den Delegaten, der im <c>d</c>-Parameter enthalten ist.</span><span class="sxs-lookup"><span data-stu-id="a5de7-143">An argument for the delegate contained in the <c>d</c> parameter.</span></span></param>
        <summary><span data-ttu-id="a5de7-144">Beendet die Lebensdauer eines asynchronen Vorgangs.</span><span class="sxs-lookup"><span data-stu-id="a5de7-144">Ends the lifetime of an asynchronous operation.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a5de7-145">Rufen Sie die <xref:System.ComponentModel.AsyncOperation.PostOperationCompleted%2A> Methode, um die Lebensdauer eines asynchronen Vorgangs zu beenden.</span><span class="sxs-lookup"><span data-stu-id="a5de7-145">Call the <xref:System.ComponentModel.AsyncOperation.PostOperationCompleted%2A> method to end the lifetime of an asynchronous operation.</span></span> <span data-ttu-id="a5de7-146">Nach dem Aufruf von dieser Methode für einen bestimmten Vorgang aufruft, zum entsprechenden <xref:System.ComponentModel.AsyncOperation> Objekt wird eine Ausnahme ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="a5de7-146">After this method is called for a particular task, calls to its corresponding <xref:System.ComponentModel.AsyncOperation> object will raise an exception.</span></span>  
  
 <span data-ttu-id="a5de7-147">Die `d` Parameter dient als Wrapper für den Delegaten Ihrer Klasse aufrufen, wenn die Lebensdauer der Aufgabe nach Abschluss, Abbruch oder Fehler des Tasks beendet werden soll.</span><span class="sxs-lookup"><span data-stu-id="a5de7-147">The `d` parameter wraps the delegate you want your class to call when the task's lifetime ends due to completion, cancellation, or failure of the task.</span></span> <span data-ttu-id="a5de7-148">Die <xref:System.ComponentModel.AsyncOperation> Objekt wird sichergestellt, dass der Delegat, auf dem Thread oder Kontext für das Anwendungsmodell geeignet aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="a5de7-148">The <xref:System.ComponentModel.AsyncOperation> object will ensure that your delegate is invoked on the thread or context appropriate for the application model.</span></span> <span data-ttu-id="a5de7-149">Der Delegat kann optional ein Ereignis auszulösen, das Clients benachrichtigt werden, die Lebensdauer der asynchronen Aufgabe beendet ist.</span><span class="sxs-lookup"><span data-stu-id="a5de7-149">Your delegate can optionally raise an event that notifies clients that the asynchronous task's lifetime has ended.</span></span>  
  
 <span data-ttu-id="a5de7-150">Die `arg` Parameter wird verwendet, um Statusinformationen an den Delegaten Abschluss übergeben `d`.</span><span class="sxs-lookup"><span data-stu-id="a5de7-150">The `arg` parameter is used to pass state information to the completion delegate `d`.</span></span> <span data-ttu-id="a5de7-151">Können Sie eine <xref:System.ComponentModel.AsyncOperation> -Objekt, oder ein <xref:System.ComponentModel.AsyncCompletedEventArgs?displayProperty=nameWithType> Objekt als Wert des Parameters.</span><span class="sxs-lookup"><span data-stu-id="a5de7-151">You can use an <xref:System.ComponentModel.AsyncOperation> object, or an <xref:System.ComponentModel.AsyncCompletedEventArgs?displayProperty=nameWithType> object as the parameter value.</span></span> <span data-ttu-id="a5de7-152">Auch wenn Sie zusätzliche Zustandsspeicher bereitstellen möchten, können Sie eine Instanz einer Klasse, von ableiten, der <xref:System.ComponentModel.AsyncCompletedEventArgs?displayProperty=nameWithType> Klasse.</span><span class="sxs-lookup"><span data-stu-id="a5de7-152">Alternatively, if you want to provide additional state storage, you can use an instance of a class you derive from the <xref:System.ComponentModel.AsyncCompletedEventArgs?displayProperty=nameWithType> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a5de7-153">Das folgende Codebeispiel veranschaulicht die Verwendung der <xref:System.ComponentModel.AsyncOperation.PostOperationCompleted%2A> Methode, um die Lebensdauer eines asynchronen Vorgangs zu beenden.</span><span class="sxs-lookup"><span data-stu-id="a5de7-153">The following code example demonstrates using the <xref:System.ComponentModel.AsyncOperation.PostOperationCompleted%2A> method to end the lifetime of an asynchronous operation.</span></span> <span data-ttu-id="a5de7-154">Dieses Codebeispiel ist Teil eines umfangreicheren Beispiels für die <xref:System.ComponentModel.AsyncOperationManager?displayProperty=nameWithType> Klasse.</span><span class="sxs-lookup"><span data-stu-id="a5de7-154">This code example is part of a larger example provided for the <xref:System.ComponentModel.AsyncOperationManager?displayProperty=nameWithType> class.</span></span>  
  
  
[!code-csharp[System.ComponentModel.AsyncOperationManager#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.AsyncOperationManager/CS/primenumbercalculatormain.cs#4)]
[!code-vb[System.ComponentModel.AsyncOperationManager#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.AsyncOperationManager/VB/primenumbercalculatormain.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="a5de7-155"><see cref="M:System.ComponentModel.AsyncOperation.OperationCompleted" /> wurde vorher für diese Aufgabe aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="a5de7-155"><see cref="M:System.ComponentModel.AsyncOperation.OperationCompleted" /> has been called previously for this task.</span></span></exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a5de7-156"><paramref name="d" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a5de7-156"><paramref name="d" /> is <see langword="null" />.</span></span></exception>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="a5de7-157">Muss die <see cref="M:System.ComponentModel.AsyncOperation.PostOperationCompleted(System.Threading.SendOrPostCallback,System.Object)" /> Aufruf asynchron, sodass Klasse Bibliothek Anbieter nicht benötigen, selbst mit möglichen Domänenspezifischer überläuft, wenn Asynchronie wird davon ausgegangen, aber ein bestimmtes Anwendungsmodell synchron sein.</span><span class="sxs-lookup"><span data-stu-id="a5de7-157">Inheritors must make the <see cref="M:System.ComponentModel.AsyncOperation.PostOperationCompleted(System.Threading.SendOrPostCallback,System.Object)" /> invocation asynchronous, so that class library providers do not need to concern themselves with potential stack overflows if they assume asynchrony but a particular application model happens to be synchronous.</span></span> <span data-ttu-id="a5de7-158">Die Methode sollte interpretiert werden, als ein Aufruf von "endet die Lebensdauer", was bedeutet, dass die Implementierung muss führen, was für das Anwendungsmodell geeignet ist.</span><span class="sxs-lookup"><span data-stu-id="a5de7-158">The method should be interpreted as an "ending the lifetime" call, meaning the implementation needs to do what is appropriate for the application model.</span></span> <span data-ttu-id="a5de7-159">ASP.NET wird z. B. die Anzahl der ausstehenden asynchronen Vorgänge verringert werden.</span><span class="sxs-lookup"><span data-stu-id="a5de7-159">For instance, ASP.NET will decrement its count of outstanding asynchronous operations.</span></span> <span data-ttu-id="a5de7-160">Dies sollte auch den Vorgang in einen Zustand versetzen, so, dass alle nachfolgenden Aufrufe fehl, da er jetzt abgeschlossen wurde.</span><span class="sxs-lookup"><span data-stu-id="a5de7-160">This also should put the operation into a state such that any subsequent calls into it will fail, since it has now completed.</span></span>  
  
 <span data-ttu-id="a5de7-161">Weitere Informationen zu asynchrone Klassen implementieren, finden Sie unter [das ereignisbasierte asynchrone Muster implementieren](~/docs/standard/asynchronous-programming-patterns/implementing-the-event-based-asynchronous-pattern.md).</span><span class="sxs-lookup"><span data-stu-id="a5de7-161">For more information about implementing asynchronous classes, see [Implementing the Event-based Asynchronous Pattern](~/docs/standard/asynchronous-programming-patterns/implementing-the-event-based-asynchronous-pattern.md).</span></span></para>
        </block>
        <altmember cref="T:System.ComponentModel.AsyncOperationManager" />
      </Docs>
    </Member>
    <Member MemberName="SynchronizationContext">
      <MemberSignature Language="C#" Value="public System.Threading.SynchronizationContext SynchronizationContext { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Threading.SynchronizationContext SynchronizationContext" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.AsyncOperation.SynchronizationContext" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SynchronizationContext As SynchronizationContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Threading::SynchronizationContext ^ SynchronizationContext { System::Threading::SynchronizationContext ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.EventBasedAsync</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.SynchronizationContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a5de7-162">Ruft das <see cref="T:System.Threading.SynchronizationContext" />-Objekt ab, das an den Konstruktor übergeben wurde.</span><span class="sxs-lookup"><span data-stu-id="a5de7-162">Gets the <see cref="T:System.Threading.SynchronizationContext" /> object that was passed to the constructor.</span></span></summary>
        <value><span data-ttu-id="a5de7-163">Das <see cref="T:System.Threading.SynchronizationContext" />-Objekt, das an den Konstruktor übergeben wurde.</span><span class="sxs-lookup"><span data-stu-id="a5de7-163">The <see cref="T:System.Threading.SynchronizationContext" /> object that was passed to the constructor.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UserSuppliedState">
      <MemberSignature Language="C#" Value="public object UserSuppliedState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object UserSuppliedState" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.AsyncOperation.UserSuppliedState" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UserSuppliedState As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ UserSuppliedState { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.EventBasedAsync</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a5de7-164">Ruft ein Objekt ab, das für die eindeutige Identifikation eines asynchronen Vorgangs verwendet wird, oder legt dieses fest.</span><span class="sxs-lookup"><span data-stu-id="a5de7-164">Gets or sets an object used to uniquely identify an asynchronous operation.</span></span></summary>
        <value><span data-ttu-id="a5de7-165">Das Zustandsobjekt, das an den asynchronen Methodenaufruf übergeben wurde.</span><span class="sxs-lookup"><span data-stu-id="a5de7-165">The state object passed to the asynchronous method invocation.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a5de7-166">Wenn Ihre Klasse mehrere asynchrone Methoden oder mehrere Aufrufe einer asynchronen Methode unterstützt, benötigen Clients zu bestimmen, welche asynchrone Aufgabe Auslösen von Ereignissen ist.</span><span class="sxs-lookup"><span data-stu-id="a5de7-166">If your class supports multiple asynchronous methods or multiple invocations of a single asynchronous method, clients will need a way to determine which asynchronous task is raising events.</span></span> <span data-ttu-id="a5de7-167">Ihre `MethodNameAsync` Methode abwartet, einen Parameter vom Typ <xref:System.Object> fungiert, die als einer Aufgaben-ID.</span><span class="sxs-lookup"><span data-stu-id="a5de7-167">Your `MethodNameAsync` method should take a parameter of type <xref:System.Object> that will act as a task ID.</span></span> <span data-ttu-id="a5de7-168">Verwenden Sie diesen Task-ID beim Aufrufen der <xref:System.ComponentModel.AsyncOperationManager.CreateOperation%2A?displayProperty=nameWithType>, Methode und dies später zuordnen Task-ID des Clients einen bestimmten Aufruf des asynchronen Vorgangs.</span><span class="sxs-lookup"><span data-stu-id="a5de7-168">You will use this task ID when you call the <xref:System.ComponentModel.AsyncOperationManager.CreateOperation%2A?displayProperty=nameWithType>, method and this will associate the client's task ID with a particular invocation of your asynchronous operation.</span></span> <span data-ttu-id="a5de7-169">Diese Aufgabe, die ID der Implementierung bis zur Verfügung gestellt wird die <xref:System.ComponentModel.AsyncOperation.UserSuppliedState%2A> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="a5de7-169">This task ID is made available to your implementation through the <xref:System.ComponentModel.AsyncOperation.UserSuppliedState%2A> property.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="a5de7-170">Clientcode achten, geben Sie einen eindeutigen Wert für die <xref:System.ComponentModel.AsyncOperation.UserSuppliedState%2A> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="a5de7-170">Client code must be careful to provide a unique value for the <xref:System.ComponentModel.AsyncOperation.UserSuppliedState%2A> property.</span></span> <span data-ttu-id="a5de7-171">Nicht eindeutige Aufgaben-IDs kann dazu führen, dass Ihre Implementierung fälschlicherweise Berichte zu Fortschritt und andere Ereignisse erstellt.</span><span class="sxs-lookup"><span data-stu-id="a5de7-171">Non-unique task IDs may cause your implementation to report progress and other events incorrectly.</span></span> <span data-ttu-id="a5de7-172">Der Code sollte für eine nicht eindeutige Aufgaben-ID überprüfen und Heraufstufen einer <xref:System.ArgumentException> eine erkannt wird.</span><span class="sxs-lookup"><span data-stu-id="a5de7-172">Your code should check for a non-unique task ID and raise an <xref:System.ArgumentException> if one is detected.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a5de7-173">Das folgende Codebeispiel veranschaulicht die Verwendung <xref:System.ComponentModel.AsyncOperation.UserSuppliedState%2A> zum Nachverfolgen der Lebensdauer der asynchronen Vorgänge.</span><span class="sxs-lookup"><span data-stu-id="a5de7-173">The following code example demonstrates using <xref:System.ComponentModel.AsyncOperation.UserSuppliedState%2A> to track the lifetime of asynchronous operations.</span></span> <span data-ttu-id="a5de7-174">Dieses Codebeispiel ist Teil eines umfangreicheren Beispiels für die <xref:System.ComponentModel.AsyncOperationManager?displayProperty=nameWithType> Klasse.</span><span class="sxs-lookup"><span data-stu-id="a5de7-174">This code example is part of a larger example provided for the <xref:System.ComponentModel.AsyncOperationManager?displayProperty=nameWithType> class.</span></span>  
  
  
[!code-csharp[System.ComponentModel.AsyncOperationManager#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.AsyncOperationManager/CS/primenumbercalculatormain.cs#4)]
[!code-vb[System.ComponentModel.AsyncOperationManager#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.AsyncOperationManager/VB/primenumbercalculatormain.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.AsyncOperationManager" />
      </Docs>
    </Member>
  </Members>
</Type>