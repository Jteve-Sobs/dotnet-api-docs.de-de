<Type Name="ComponentConverter" FullName="System.ComponentModel.ComponentConverter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="0de0ef09c58293d2f9f037bc597a78b3bed69415" />
    <Meta Name="ms.sourcegitcommit" Value="cbcba80f998e27b87425ad54726bdb684fb3a932" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="09/04/2018" />
    <Meta Name="ms.locfileid" Value="43591896" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ComponentConverter : System.ComponentModel.ReferenceConverter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ComponentConverter extends System.ComponentModel.ReferenceConverter" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.ComponentConverter" />
  <TypeSignature Language="VB.NET" Value="Public Class ComponentConverter&#xA;Inherits ReferenceConverter" />
  <TypeSignature Language="C++ CLI" Value="public ref class ComponentConverter : System::ComponentModel::ReferenceConverter" />
  <TypeSignature Language="F#" Value="type ComponentConverter = class&#xA;    inherit ReferenceConverter" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.ReferenceConverter</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Stellt einen Typkonverter für das Konvertieren von Komponenten in andere und aus anderen Darstellungen bereit.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Klasse implementiert <xref:System.ComponentModel.TypeConverter.GetPropertiesSupported%2A> und <xref:System.ComponentModel.ComponentConverter.GetProperties%2A> durch die Eigenschaften durch Rückgabe der <xref:System.ComponentModel.TypeDescriptor.GetProperties%2A> -Methode der <xref:System.ComponentModel.TypeDescriptor>.  
  
 Weitere Informationen zu Typkonvertern, finden Sie unter den <xref:System.ComponentModel.TypeConverter> Basisklasse und [Vorgehensweise: Implementieren eines Typkonverters](https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2013/ayybcxe5(v=vs.120)).  
  
> [!NOTE]
>  Erstellen Sie nie eine Instanz von <xref:System.ComponentModel.ComponentConverter>. Rufen Sie stattdessen die <xref:System.ComponentModel.TypeDescriptor.GetConverter%2A> -Methode der <xref:System.ComponentModel.TypeDescriptor>. Weitere Informationen finden Sie in die Beispielen in den <xref:System.ComponentModel.TypeConverter> Basisklasse.  
  
 Dieser Konverter konvertiert ein Objekt, das implementiert <xref:System.ComponentModel.IComponent> und ihre Eigenschaften im Eigenschaftenfenster angezeigt.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ComponentConverter (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.ComponentConverter.#ctor(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ComponentConverter(Type ^ type);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.ComponentConverter : Type -&gt; System.ComponentModel.ComponentConverter" Usage="new System.ComponentModel.ComponentConverter type" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">Ein <see cref="T:System.Type" />, der den Typ darstellt, der diesem Komponentenkonverter zugeordnet werden soll.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.ComponentConverter" />-Klasse.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetProperties">
      <MemberSignature Language="C#" Value="public override System.ComponentModel.PropertyDescriptorCollection GetProperties (System.ComponentModel.ITypeDescriptorContext context, object value, Attribute[] attributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.ComponentModel.PropertyDescriptorCollection GetProperties(class System.ComponentModel.ITypeDescriptorContext context, object value, class System.Attribute[] attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.ComponentConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetProperties (context As ITypeDescriptorContext, value As Object, attributes As Attribute()) As PropertyDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::ComponentModel::PropertyDescriptorCollection ^ GetProperties(System::ComponentModel::ITypeDescriptorContext ^ context, System::Object ^ value, cli::array &lt;Attribute ^&gt; ^ attributes);" />
      <MemberSignature Language="F#" Value="override this.GetProperties : System.ComponentModel.ITypeDescriptorContext * obj * Attribute[] -&gt; System.ComponentModel.PropertyDescriptorCollection" Usage="componentConverter.GetProperties (context, value, attributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="attributes" Type="System.Attribute[]" />
      </Parameters>
      <Docs>
        <param name="context">Ein <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, der einen Formatierungskontext bereitstellt.</param>
        <param name="value">Ein <see cref="T:System.Object" />, das den Typ von Komponente angibt, für das die Eigenschaften abgerufen werden sollen.</param>
        <param name="attributes">Ein Array vom Typ <see cref="T:System.Attribute" />, das als Filter verwendet wird.</param>
        <summary>Ruft eine Auflistung von Eigenschaften für den durch den Wertparameter angegebenen Typ von Komponente ab.</summary>
        <returns>Eine <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> mit den Eigenschaften, die für die Komponente verfügbar sind, oder <see langword="null" />, wenn keine Eigenschaften vorhanden sind.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Mithilfe des `context`-Parameters können zusätzliche Informationen über die Umgebung extrahiert werden, aus der dieser Konverter aufgerufen wurde. Dieser Parameter kann `null` sein und muss daher immer überprüft werden. Außerdem können die Eigenschaften des Kontextobjekts `null` zurückgeben.  
  
 Die `attributes` Array zum Filtern des Arrays verwendet werden. Die `attributes` haben eine Mischung aus <xref:System.Type> und <xref:System.Attribute> Objekte. Filterung wird definiert durch die folgenden Regeln:  
  
-   Ein <xref:System.Type> Objekt als Platzhalterzeichen behandelt werden; er entspricht einer Eigenschaft, die die <xref:System.Type> in einen Satz von Attributen.  
  
-   Wenn eine Eigenschaft kein <xref:System.Attribute> der gleichen Klasse, wird die Eigenschaft nicht in das zurückgegebene Array aufgenommen werden.  
  
-   Wenn das Attribut einer Instanz von <xref:System.Attribute>, die Eigenschaft muss eine genaue Übereinstimmung oder wird nicht in das zurückgegebene Array aufgenommen.  
  
-   Wenn eine <xref:System.Attribute> Instanz angegeben ist und es ist die Standardeigenschaft, es wird im zurückgegebenen Array enthalten sein, auch wenn es keine Instanz von der <xref:System.Attribute> in der Eigenschaft.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPropertiesSupported">
      <MemberSignature Language="C#" Value="public override bool GetPropertiesSupported (System.ComponentModel.ITypeDescriptorContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool GetPropertiesSupported(class System.ComponentModel.ITypeDescriptorContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.ComponentConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetPropertiesSupported (context As ITypeDescriptorContext) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool GetPropertiesSupported(System::ComponentModel::ITypeDescriptorContext ^ context);" />
      <MemberSignature Language="F#" Value="override this.GetPropertiesSupported : System.ComponentModel.ITypeDescriptorContext -&gt; bool" Usage="componentConverter.GetPropertiesSupported context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
      </Parameters>
      <Docs>
        <param name="context">Ein <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, der einen Formatierungskontext bereitstellt.</param>
        <summary>Ruft einen Wert ab, der angibt, ob dieses Objekt Eigenschaften unter Verwendung des angegebenen Kontexts unterstützt.</summary>
        <returns>
          <see langword="true" />, da <see cref="M:System.ComponentModel.TypeConverter.GetProperties(System.Object)" /> aufgerufen werden muss, um die Eigenschaften dieses Objekts zu ermitteln. Diese Methode gibt nie <see langword="false" /> zurück.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Mithilfe des `context`-Parameters können zusätzliche Informationen über die Umgebung extrahiert werden, aus der dieser Konverter aufgerufen wurde. Dieser Parameter kann `null` sein und muss daher immer überprüft werden. Außerdem können die Eigenschaften des Kontextobjekts `null` zurückgeben.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>