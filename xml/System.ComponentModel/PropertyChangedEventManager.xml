<Type Name="PropertyChangedEventManager" FullName="System.ComponentModel.PropertyChangedEventManager">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="b8a15a4a812146e0c01fceb2d69a7dae5cef4b53" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="08/24/2018" />
    <Meta Name="ms.locfileid" Value="37690942" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class PropertyChangedEventManager : System.Windows.WeakEventManager" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit PropertyChangedEventManager extends System.Windows.WeakEventManager" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.PropertyChangedEventManager" />
  <TypeSignature Language="VB.NET" Value="Public Class PropertyChangedEventManager&#xA;Inherits WeakEventManager" />
  <TypeSignature Language="C++ CLI" Value="public ref class PropertyChangedEventManager : System::Windows::WeakEventManager" />
  <TypeSignature Language="F#" Value="type PropertyChangedEventManager = class&#xA;    inherit WeakEventManager" />
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.WeakEventManager</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="fe01d-101">Stellt eine <see cref="T:System.Windows.WeakEventManager" />-Implementierung bereit, damit Sie mit dem Muster für "schwache Ereignislistener" Listener für das <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" />-Ereignis anfügen können.</span>
      <span class="sxs-lookup">
        <span data-stu-id="fe01d-101">Provides a <see cref="T:System.Windows.WeakEventManager" /> implementation so that you can use the "weak event listener" pattern to attach listeners for the <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" /> event.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe01d-102">Um den Listener in diesem Muster werden können, müssen die Listenerobjekte implementieren <xref:System.Windows.IWeakEventListener>.</span><span class="sxs-lookup"><span data-stu-id="fe01d-102">In order to be listeners in this pattern, your listener objects must implement <xref:System.Windows.IWeakEventListener>.</span></span> <span data-ttu-id="fe01d-103">Sie müssen sich nicht um implementieren <xref:System.Windows.IWeakEventListener> auf die Klasse, die die Quelle der Ereignisse ist.</span><span class="sxs-lookup"><span data-stu-id="fe01d-103">You do not need to implement <xref:System.Windows.IWeakEventListener> on the class that is the source of the events.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.IWeakEventListener" />
  </Docs>
  <Members>
    <Member MemberName="AddHandler">
      <MemberSignature Language="C#" Value="public static void AddHandler (System.ComponentModel.INotifyPropertyChanged source, EventHandler&lt;System.ComponentModel.PropertyChangedEventArgs&gt; handler, string propertyName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddHandler(class System.ComponentModel.INotifyPropertyChanged source, class System.EventHandler`1&lt;class System.ComponentModel.PropertyChangedEventArgs&gt; handler, string propertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.PropertyChangedEventManager.AddHandler(System.ComponentModel.INotifyPropertyChanged,System.EventHandler{System.ComponentModel.PropertyChangedEventArgs},System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddHandler (source As INotifyPropertyChanged, handler As EventHandler(Of PropertyChangedEventArgs), propertyName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddHandler(System::ComponentModel::INotifyPropertyChanged ^ source, EventHandler&lt;System::ComponentModel::PropertyChangedEventArgs ^&gt; ^ handler, System::String ^ propertyName);" />
      <MemberSignature Language="F#" Value="static member AddHandler : System.ComponentModel.INotifyPropertyChanged * EventHandler&lt;System.ComponentModel.PropertyChangedEventArgs&gt; * string -&gt; unit" Usage="System.ComponentModel.PropertyChangedEventManager.AddHandler (source, handler, propertyName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.ComponentModel.INotifyPropertyChanged" />
        <Parameter Name="handler" Type="System.EventHandler&lt;System.ComponentModel.PropertyChangedEventArgs&gt;" />
        <Parameter Name="propertyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="fe01d-104">Das Quellobjekt, das das <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" />-Ereignis auslöst.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe01d-104">The source object that the raises the <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" /> event.</span>
          </span>
        </param>
        <param name="handler">
          <span data-ttu-id="fe01d-105">Der Delegat. der das <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" />-Ereignis behandelt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe01d-105">The delegate that handles the <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" /> event.</span>
          </span>
        </param>
        <param name="propertyName">
          <span data-ttu-id="fe01d-106">Der Name der für <c>source</c> vorhandenen Eigenschaft, die auf Änderungen überwacht werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe01d-106">The name of the property that exists on <c>source</c> upon which to listen for changes.</span>
          </span>
          <span data-ttu-id="fe01d-107">Legen Sie diese auf <see cref="F:System.String.Empty" /> fest, um eine "beliebige Eigenschaft" anzugeben.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe01d-107">Set to <see cref="F:System.String.Empty" /> to indicate "any property".</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fe01d-108">Fügt den angegebenen Ereignishandler hinzu, der aufgerufen wird, wenn die angegebene Quelle das <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" />-Ereignis für die angegebene Eigenschaft auslöst.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe01d-108">Adds the specified event handler, which is called when specified source raises the <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" /> event for the specified property.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe01d-109">Mit dieser Methode können Sie den Ereignishandler anzugeben, verwenden zum abonnieren möchten, die <xref:System.ComponentModel.INotifyPropertyChanged.PropertyChanged> Ereignis...</span><span class="sxs-lookup"><span data-stu-id="fe01d-109">Use this method to specify the event handler you want to use to subscribe to the <xref:System.ComponentModel.INotifyPropertyChanged.PropertyChanged> event..</span></span>  <span data-ttu-id="fe01d-110">Wenn Sie diese Methode verwenden, Ihre kommunikationslistener-Objekt muss nicht zum Implementieren der <xref:System.Windows.IWeakEventListener> Schnittstelle.</span><span class="sxs-lookup"><span data-stu-id="fe01d-110">When you use this method, your listener object does not need to implement the <xref:System.Windows.IWeakEventListener> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="fe01d-111">
            <paramref name="handler" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe01d-111">
              <paramref name="handler" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="fe01d-112">Mehr als eine Methode wird dem <paramref name="handler" /> zugeordnet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe01d-112">More than one method is associated with <paramref name="handler" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="AddListener">
      <MemberSignature Language="C#" Value="public static void AddListener (System.ComponentModel.INotifyPropertyChanged source, System.Windows.IWeakEventListener listener, string propertyName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddListener(class System.ComponentModel.INotifyPropertyChanged source, class System.Windows.IWeakEventListener listener, string propertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.PropertyChangedEventManager.AddListener(System.ComponentModel.INotifyPropertyChanged,System.Windows.IWeakEventListener,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddListener (source As INotifyPropertyChanged, listener As IWeakEventListener, propertyName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddListener(System::ComponentModel::INotifyPropertyChanged ^ source, System::Windows::IWeakEventListener ^ listener, System::String ^ propertyName);" />
      <MemberSignature Language="F#" Value="static member AddListener : System.ComponentModel.INotifyPropertyChanged * System.Windows.IWeakEventListener * string -&gt; unit" Usage="System.ComponentModel.PropertyChangedEventManager.AddListener (source, listener, propertyName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.ComponentModel.INotifyPropertyChanged" />
        <Parameter Name="listener" Type="System.Windows.IWeakEventListener" />
        <Parameter Name="propertyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="fe01d-113">Das Objekt mit dem Ereignis.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe01d-113">The object with the event.</span>
          </span>
        </param>
        <param name="listener">
          <span data-ttu-id="fe01d-114">Das Objekt, das als Listener hinzugefügt werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe01d-114">The object to add as a listener.</span>
          </span>
        </param>
        <param name="propertyName">
          <span data-ttu-id="fe01d-115">Der Name der für <c>source</c> vorhandenen Eigenschaft, die auf Änderungen überwacht werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe01d-115">The name of the property that exists on <c>source</c> upon which to listen for changes.</span>
          </span>
          <span data-ttu-id="fe01d-116">Legen Sie diese auf <see cref="F:System.String.Empty" /> fest, um eine "beliebige Eigenschaft" anzugeben.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe01d-116">Set to <see cref="F:System.String.Empty" /> to indicate "any property".</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fe01d-117">Fügt den angegebenen Listener der Liste von Listenern in der angegebenen Quelle hinzu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe01d-117">Adds the specified listener to the list of listeners on the specified source.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.IWeakEventListener" />
      </Docs>
    </Member>
    <Member MemberName="NewListenerList">
      <MemberSignature Language="C#" Value="protected override System.Windows.WeakEventManager.ListenerList NewListenerList ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.WeakEventManager/ListenerList NewListenerList() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.PropertyChangedEventManager.NewListenerList" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function NewListenerList () As WeakEventManager.ListenerList" />
      <MemberSignature Language="F#" Value="override this.NewListenerList : unit -&gt; System.Windows.WeakEventManager.ListenerList" Usage="propertyChangedEventManager.NewListenerList " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.WeakEventManager+ListenerList</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="fe01d-118">Gibt ein neues Objekt zurück, mit dem Listener zu dem <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" />-Ereignis hinzugefügt werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe01d-118">Returns a new object to contain listeners to the <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" /> event.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fe01d-119">Ein neues Objekt, mit dem Listener zum <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" />-Ereignis hinzugefügt werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe01d-119">A new object to contain listeners to the <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" /> event.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Purge">
      <MemberSignature Language="C#" Value="protected override bool Purge (object source, object data, bool purgeAll);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool Purge(object source, object data, bool purgeAll) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.PropertyChangedEventManager.Purge(System.Object,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function Purge (source As Object, data As Object, purgeAll As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool Purge(System::Object ^ source, System::Object ^ data, bool purgeAll);" />
      <MemberSignature Language="F#" Value="override this.Purge : obj * obj * bool -&gt; bool" Usage="propertyChangedEventManager.Purge (source, data, purgeAll)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Object" />
        <Parameter Name="data" Type="System.Object" />
        <Parameter Name="purgeAll" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="fe01d-120">Quellobjekt, aus dem alle Listener entfernt werden sollen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe01d-120">Source object to remove all listeners from.</span>
          </span>
        </param>
        <param name="data">
          <span data-ttu-id="fe01d-121">Die zu bereinigenden Daten.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe01d-121">The data to purge.</span>
          </span>
          <span data-ttu-id="fe01d-122">Erwartet wird ein <see cref="T:System.Collections.Specialized.HybridDictionary" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe01d-122">This is expected to be a <see cref="T:System.Collections.Specialized.HybridDictionary" />.</span>
          </span>
        </param>
        <param name="purgeAll">
          <span data-ttu-id="fe01d-123">Legen Sie dies auf <see langword="true" />, um das Überwachen zu beenden und alle Daten vollständig zu entfernen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe01d-123">Set to <see langword="true" /> to stop listening and to completely remove all data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fe01d-124">Entfernt nicht mehr aktive Listener aus den Daten für die bereitgestellte Quelle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe01d-124">Removes listeners that are no longer active from the data for the provided source.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fe01d-125">
            <see langword="true" />, wenn einige Einträge entfernt wurden, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe01d-125">
              <see langword="true" /> if some entries were removed; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.IWeakEventListener" />
      </Docs>
    </Member>
    <Member MemberName="RemoveHandler">
      <MemberSignature Language="C#" Value="public static void RemoveHandler (System.ComponentModel.INotifyPropertyChanged source, EventHandler&lt;System.ComponentModel.PropertyChangedEventArgs&gt; handler, string propertyName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveHandler(class System.ComponentModel.INotifyPropertyChanged source, class System.EventHandler`1&lt;class System.ComponentModel.PropertyChangedEventArgs&gt; handler, string propertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.PropertyChangedEventManager.RemoveHandler(System.ComponentModel.INotifyPropertyChanged,System.EventHandler{System.ComponentModel.PropertyChangedEventArgs},System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveHandler (source As INotifyPropertyChanged, handler As EventHandler(Of PropertyChangedEventArgs), propertyName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveHandler(System::ComponentModel::INotifyPropertyChanged ^ source, EventHandler&lt;System::ComponentModel::PropertyChangedEventArgs ^&gt; ^ handler, System::String ^ propertyName);" />
      <MemberSignature Language="F#" Value="static member RemoveHandler : System.ComponentModel.INotifyPropertyChanged * EventHandler&lt;System.ComponentModel.PropertyChangedEventArgs&gt; * string -&gt; unit" Usage="System.ComponentModel.PropertyChangedEventManager.RemoveHandler (source, handler, propertyName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.ComponentModel.INotifyPropertyChanged" />
        <Parameter Name="handler" Type="System.EventHandler&lt;System.ComponentModel.PropertyChangedEventArgs&gt;" />
        <Parameter Name="propertyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="fe01d-126">Das Quellobjekt, das das <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" />-Ereignis auslöst.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe01d-126">The source object that the raises the <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" /> event.</span>
          </span>
        </param>
        <param name="handler">
          <span data-ttu-id="fe01d-127">Der Delegat. der das <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" />-Ereignis behandelt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe01d-127">The delegate that handles the <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" /> event.</span>
          </span>
        </param>
        <param name="propertyName">
          <span data-ttu-id="fe01d-128">Der Name der für <c>source</c> vorhandenen Eigenschaft, die nicht mehr auf Änderungen überwacht werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe01d-128">The name of the property that exists on <c>source</c> upon which to stop listening for changes.</span>
          </span>
          <span data-ttu-id="fe01d-129">Legen Sie diese auf <see cref="F:System.String.Empty" /> fest, um eine "beliebige Eigenschaft" anzugeben.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe01d-129">Set to <see cref="F:System.String.Empty" /> to indicate "any property".</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fe01d-130">Entfernt den angegebenen Ereignishandler aus der angegebenen Quelle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe01d-130">Removes the specified event handler from the specified source.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="fe01d-131">
            <paramref name="handler" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe01d-131">
              <paramref name="handler" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="fe01d-132">Mehr als eine Methode wird dem <paramref name="handler" /> zugeordnet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe01d-132">More than one method is associated with <paramref name="handler" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveListener">
      <MemberSignature Language="C#" Value="public static void RemoveListener (System.ComponentModel.INotifyPropertyChanged source, System.Windows.IWeakEventListener listener, string propertyName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveListener(class System.ComponentModel.INotifyPropertyChanged source, class System.Windows.IWeakEventListener listener, string propertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.PropertyChangedEventManager.RemoveListener(System.ComponentModel.INotifyPropertyChanged,System.Windows.IWeakEventListener,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveListener (source As INotifyPropertyChanged, listener As IWeakEventListener, propertyName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveListener(System::ComponentModel::INotifyPropertyChanged ^ source, System::Windows::IWeakEventListener ^ listener, System::String ^ propertyName);" />
      <MemberSignature Language="F#" Value="static member RemoveListener : System.ComponentModel.INotifyPropertyChanged * System.Windows.IWeakEventListener * string -&gt; unit" Usage="System.ComponentModel.PropertyChangedEventManager.RemoveListener (source, listener, propertyName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.ComponentModel.INotifyPropertyChanged" />
        <Parameter Name="listener" Type="System.Windows.IWeakEventListener" />
        <Parameter Name="propertyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="fe01d-133">Das Objekt, aus dem der Listener entfernt werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe01d-133">The object to remove the listener from.</span>
          </span>
        </param>
        <param name="listener">
          <span data-ttu-id="fe01d-134">Der zu entfernende Listener.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe01d-134">The listener to remove.</span>
          </span>
        </param>
        <param name="propertyName">
          <span data-ttu-id="fe01d-135">Der Name der für <c>source</c> vorhandenen Eigenschaft, die nicht mehr auf Änderungen überwacht werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe01d-135">The name of the property that exists on <c>source</c> upon which to stop listening for changes.</span>
          </span>
          <span data-ttu-id="fe01d-136">Legen Sie diese auf <see cref="F:System.String.Empty" /> fest, um eine "beliebige Eigenschaft" anzugeben.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe01d-136">Set to <see cref="F:System.String.Empty" /> to indicate "any property".</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fe01d-137">Entfernt den angegebenen Listener aus der Liste der Listener in der bereitgestellten Quelle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe01d-137">Removes the specified listener from the list of listeners on the provided source.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.IWeakEventListener" />
      </Docs>
    </Member>
    <Member MemberName="StartListening">
      <MemberSignature Language="C#" Value="protected override void StartListening (object source);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void StartListening(object source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.PropertyChangedEventManager.StartListening(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub StartListening (source As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void StartListening(System::Object ^ source);" />
      <MemberSignature Language="F#" Value="override this.StartListening : obj -&gt; unit" Usage="propertyChangedEventManager.StartListening source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="fe01d-138">Das Objekt, für das die Überwachung von <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" /> gestartet werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe01d-138">The object on which to start listening for <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fe01d-139">Beginnt die Überwachung des <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" />-Ereignisses für die bereitgestellte Quelle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe01d-139">Begins listening for the <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" /> event on the provided source.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe01d-140">Dies ist die Eigenschaft nicht angegeben. nach der Ereignismanager gestartet wurde, müssen alle Eigenschaften auf dem Quellcomputer <xref:System.ComponentModel.INotifyPropertyChanged.PropertyChanged> Benachrichtigung aktiviert.</span><span class="sxs-lookup"><span data-stu-id="fe01d-140">This does not specify a property; once the event manager is started, all properties on the source will have <xref:System.ComponentModel.INotifyPropertyChanged.PropertyChanged> notification enabled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.IWeakEventListener" />
      </Docs>
    </Member>
    <Member MemberName="StopListening">
      <MemberSignature Language="C#" Value="protected override void StopListening (object source);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void StopListening(object source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.PropertyChangedEventManager.StopListening(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub StopListening (source As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void StopListening(System::Object ^ source);" />
      <MemberSignature Language="F#" Value="override this.StopListening : obj -&gt; unit" Usage="propertyChangedEventManager.StopListening source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="fe01d-141">Das Quellobjekt, für das die Überwachung von <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" /> beendet werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe01d-141">The source object on which to stop listening for <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fe01d-142">Beendet die Überwachung des <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" />-Ereignisses für die bereitgestellte Quelle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe01d-142">Stops listening for the <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" /> event on the provided source.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.IWeakEventListener" />
      </Docs>
    </Member>
  </Members>
</Type>