<Type Name="RouteUrlExpressionBuilder" FullName="System.Web.Compilation.RouteUrlExpressionBuilder">
  <Metadata><Meta Name="ms.openlocfilehash" Value="67d69d9e152c7a495eb52747100687a4831a903c" /><Meta Name="ms.sourcegitcommit" Value="0084afad1b3b1cb2c8ad2c142ae3597d08bad4a7" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="10/31/2019" /><Meta Name="ms.locfileid" Value="73380434" /></Metadata><TypeSignature Language="C#" Value="public class RouteUrlExpressionBuilder : System.Web.Compilation.ExpressionBuilder" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit RouteUrlExpressionBuilder extends System.Web.Compilation.ExpressionBuilder" />
  <TypeSignature Language="DocId" Value="T:System.Web.Compilation.RouteUrlExpressionBuilder" />
  <TypeSignature Language="VB.NET" Value="Public Class RouteUrlExpressionBuilder&#xA;Inherits ExpressionBuilder" />
  <TypeSignature Language="C++ CLI" Value="public ref class RouteUrlExpressionBuilder : System::Web::Compilation::ExpressionBuilder" />
  <TypeSignature Language="F#" Value="type RouteUrlExpressionBuilder = class&#xA;    inherit ExpressionBuilder" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.Compilation.ExpressionBuilder</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Web.Compilation.ExpressionEditor("System.Web.UI.Design.RouteUrlExpressionEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.Compilation.ExpressionPrefix("Routes")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Erstellt eine URL, die angegebenen URL-Parameterwerten entspricht.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.Compilation.RouteUrlExpressionBuilder>-Klasse ermöglicht das Festlegen der-Eigenschaft eines Server Steuer Elements auf die URL einer Route durch Bereitstellen einer Liste von URL-Parameterwerten.  
  
   
  
## Examples  
 Im folgenden Beispiel wird gezeigt, wie Markup erstellt wird, das einen Hyperlink mit einer URL generiert, die für eine Route formatiert ist. Die Route wird definiert, indem `http://www.contoso.com/search/{searchterm}` als URL-Muster verwendet wird.  
  
```  
<asp:HyperLink ID="HyperLink1" runat="server"  
               NavigateUrl="<%$ RouteUrl:searchterm=Bicycles %>">  
  Search for Bicycles  
</asp:HyperLink>  
```  
  
 Die für diesen Hyperlink generierte URL wird `http://www.contoso.com/search/Bicycles`.  
  
 Wenn die für den `RouteUrl` Ausdruck angegebenen URL-Parameter nicht ausreichen, um eine Route eindeutig zu identifizieren, müssen Sie den Routennamen einschließen. Wenn eine Webanwendung beispielsweise über zwei Routen mit `searchterm` als einzigen URL-Parameter verfügt, müssten die Routen mithilfe von Routennamen definiert werden, und das Hyperlink-Markup ähnelt dem folgenden Beispiel:  
  
```  
<asp:HyperLink ID="HyperLink1" runat="server"  
               NavigateUrl="<%$ RouteUrl:searchterm=Bicycles,  
               routename=BasicSearchRoute %>">  
  Search for Bicycles  
</asp:HyperLink>  
```  
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://msdn.microsoft.com/library/892441af-8f1d-483e-ab5f-b82c23576f5a">ASP.NET-Routing</related>
    <related type="Article" href="https://msdn.microsoft.com/library/dc88e6ba-470c-4b20-b644-35874cfd781d">Gewusst wie: Zugreifen auf URL-Parameter auf einer gerouteten Seite</related>
    <related type="Article" href="https://msdn.microsoft.com/library/9ae6373a-853a-4d6e-8639-8c173dacb59f">Übersicht über ASP.net-Ausdrücke</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RouteUrlExpressionBuilder ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.RouteUrlExpressionBuilder.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RouteUrlExpressionBuilder();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Compilation.RouteUrlExpressionBuilder" />-Klasse.</summary>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/892441af-8f1d-483e-ab5f-b82c23576f5a">ASP.NET-Routing</related>
        <related type="Article" href="https://msdn.microsoft.com/library/dc88e6ba-470c-4b20-b644-35874cfd781d">Gewusst wie: Zugreifen auf URL-Parameter auf einer gerouteten Seite</related>
        <related type="Article" href="https://msdn.microsoft.com/library/9ae6373a-853a-4d6e-8639-8c173dacb59f">Übersicht über ASP.net-Ausdrücke</related>
      </Docs>
    </Member>
    <Member MemberName="EvaluateExpression">
      <MemberSignature Language="C#" Value="public override object EvaluateExpression (object target, System.Web.UI.BoundPropertyEntry entry, object parsedData, System.Web.Compilation.ExpressionBuilderContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object EvaluateExpression(object target, class System.Web.UI.BoundPropertyEntry entry, object parsedData, class System.Web.Compilation.ExpressionBuilderContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.RouteUrlExpressionBuilder.EvaluateExpression(System.Object,System.Web.UI.BoundPropertyEntry,System.Object,System.Web.Compilation.ExpressionBuilderContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function EvaluateExpression (target As Object, entry As BoundPropertyEntry, parsedData As Object, context As ExpressionBuilderContext) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ EvaluateExpression(System::Object ^ target, System::Web::UI::BoundPropertyEntry ^ entry, System::Object ^ parsedData, System::Web::Compilation::ExpressionBuilderContext ^ context);" />
      <MemberSignature Language="F#" Value="override this.EvaluateExpression : obj * System.Web.UI.BoundPropertyEntry * obj * System.Web.Compilation.ExpressionBuilderContext -&gt; obj" Usage="routeUrlExpressionBuilder.EvaluateExpression (target, entry, parsedData, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Object" />
        <Parameter Name="entry" Type="System.Web.UI.BoundPropertyEntry" />
        <Parameter Name="parsedData" Type="System.Object" />
        <Parameter Name="context" Type="System.Web.Compilation.ExpressionBuilderContext" />
      </Parameters>
      <Docs>
        <param name="target">Wird in dieser Implementierung nicht verwendet.</param>
        <param name="entry">Die Eigenschaft, an die der Ausdruck gebunden ist.</param>
        <param name="parsedData">Wird in dieser Implementierung nicht verwendet.</param>
        <param name="context">Eigenschaften für das Steuerelement oder die Seite.</param>
        <summary>Erstellt eine URL, die angegebenen URL-Parameterwerten und dem Routen-URL-Format entspricht.</summary>
        <returns>Die URL, die den angegebenen URL-Parameterwerten und der ausgewählten Route entspricht. Die Route wird durch einen Vergleich von URL-Routenmustern mit der angegebenen Liste von Parametern ausgewählt. Falls einer angegebenen Liste von Parametern mehrere Routen entsprechen, kann auch ein Routenname angegeben werden, um die auszuwählende Route festzulegen.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ASP.NET ruft diese Methode auf, wenn ein Ausdruck der folgenden Form im Markup gefunden wird:  
  
 `<%$ RouteUrl: urlparameter=value %>`  
  
 Diese Methode generiert die entsprechende URL für die angegebenen Routen Schlüsselwerte für das aktuelle <xref:System.Web.Routing.Route>-Objekt. Diese Methode überschreibt die <xref:System.Web.Compilation.ExpressionBuilder.EvaluateExpression%2A>-Methode. Er ruft aus dem `entry`-Parameter einen Verweis auf das Steuerelement ab, an das der Ausdruck gebunden ist, ruft aus dem `context`-Parameter den auszuwertenden Ausdruck ab und ruft die <xref:System.Web.Compilation.RouteUrlExpressionBuilder.GetRouteUrl%2A>-Methode auf, um die URL zu generieren.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.CompilationMode" />
        <related type="Article" href="https://msdn.microsoft.com/library/892441af-8f1d-483e-ab5f-b82c23576f5a">ASP.NET-Routing</related>
        <related type="Article" href="https://msdn.microsoft.com/library/dc88e6ba-470c-4b20-b644-35874cfd781d">Gewusst wie: Zugreifen auf URL-Parameter auf einer gerouteten Seite</related>
        <related type="Article" href="https://msdn.microsoft.com/library/9ae6373a-853a-4d6e-8639-8c173dacb59f">Übersicht über ASP.net-Ausdrücke</related>
      </Docs>
    </Member>
    <Member MemberName="GetCodeExpression">
      <MemberSignature Language="C#" Value="public override System.CodeDom.CodeExpression GetCodeExpression (System.Web.UI.BoundPropertyEntry entry, object parsedData, System.Web.Compilation.ExpressionBuilderContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.CodeDom.CodeExpression GetCodeExpression(class System.Web.UI.BoundPropertyEntry entry, object parsedData, class System.Web.Compilation.ExpressionBuilderContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.RouteUrlExpressionBuilder.GetCodeExpression(System.Web.UI.BoundPropertyEntry,System.Object,System.Web.Compilation.ExpressionBuilderContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetCodeExpression (entry As BoundPropertyEntry, parsedData As Object, context As ExpressionBuilderContext) As CodeExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::CodeDom::CodeExpression ^ GetCodeExpression(System::Web::UI::BoundPropertyEntry ^ entry, System::Object ^ parsedData, System::Web::Compilation::ExpressionBuilderContext ^ context);" />
      <MemberSignature Language="F#" Value="override this.GetCodeExpression : System.Web.UI.BoundPropertyEntry * obj * System.Web.Compilation.ExpressionBuilderContext -&gt; System.CodeDom.CodeExpression" Usage="routeUrlExpressionBuilder.GetCodeExpression (entry, parsedData, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entry" Type="System.Web.UI.BoundPropertyEntry" />
        <Parameter Name="parsedData" Type="System.Object" />
        <Parameter Name="context" Type="System.Web.Compilation.ExpressionBuilderContext" />
      </Parameters>
      <Docs>
        <param name="entry">Die Eigenschaft, an die der Ausdruck gebunden ist.</param>
        <param name="parsedData">Das Objekt, das analysierte Daten darstellt, wie sie von <see cref="M:System.Web.Compilation.RouteUrlExpressionBuilder.TryParseRouteExpression(System.String,System.Web.Routing.RouteValueDictionary,System.String@)" /> zurückgegeben werden.</param>
        <param name="context">Eigenschaften für das Steuerelement oder die Seite.</param>
        <summary>Gibt einen Codeausdruck zurück, der verwendet wird, um die Eigenschaftenzuweisung in der generierten Seitenklasse auszuführen.</summary>
        <returns>Eine <see cref="T:System.CodeDom.CodeExpression" />-Instanz, die in der Eigenschaftenzuweisung verwendet wird.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode wird aufgerufen, wenn CodeDom für eine Seite oder ein Steuerelement erstellt wird. Das <xref:System.CodeDom.CodeExpression> Objekt, das zurückgegeben wird, stellt den Code Ausdruck dar, der der Eigenschaften Zuweisung in der generierten Seiten Klasse hinzugefügt wird.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/892441af-8f1d-483e-ab5f-b82c23576f5a">ASP.NET-Routing</related>
        <related type="Article" href="https://msdn.microsoft.com/library/dc88e6ba-470c-4b20-b644-35874cfd781d">Gewusst wie: Zugreifen auf URL-Parameter auf einer gerouteten Seite</related>
        <related type="Article" href="https://msdn.microsoft.com/library/9ae6373a-853a-4d6e-8639-8c173dacb59f">Übersicht über ASP.net-Ausdrücke</related>
      </Docs>
    </Member>
    <Member MemberName="GetRouteUrl">
      <MemberSignature Language="C#" Value="public static string GetRouteUrl (System.Web.UI.Control control, string expression);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetRouteUrl(class System.Web.UI.Control control, string expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.RouteUrlExpressionBuilder.GetRouteUrl(System.Web.UI.Control,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetRouteUrl(System::Web::UI::Control ^ control, System::String ^ expression);" />
      <MemberSignature Language="F#" Value="static member GetRouteUrl : System.Web.UI.Control * string -&gt; string" Usage="System.Web.Compilation.RouteUrlExpressionBuilder.GetRouteUrl (control, expression)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" />
        <Parameter Name="expression" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="control">Das Steuerelement, an das der Ausdruck gebunden ist.</param>
        <param name="expression">Der Ausdruck, wie im Markup angegeben.</param>
        <summary>Erstellt eine URL, die angegebenen Routenschlüsseln für ein Routen-URL-Format entspricht.</summary>
        <returns>Die URL, die dem Routen-URL-Format des aktuellen <see cref="T:System.Web.Routing.Route" />-Objekts entspricht.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode generiert den entsprechenden Wert für die URL, indem Sie die <xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A>-Methode des <xref:System.Web.Routing.RouteCollection>-Objekts aufrufen. Das <xref:System.Web.Routing.RequestContext>-Objekt wird aus dem `control`-Parameter abgerufen, und der Routen Name und die Routen Parameter werden aus dem `expression`-Parameter analysiert.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Der <paramref name="control" />-Parameter ist <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Die Methode kann den Ausdruck nicht analysieren, der in Markup angegeben wurde. Weitere Informationen finden Sie unter <see cref="M:System.Web.Compilation.RouteUrlExpressionBuilder.TryParseRouteExpression(System.String,System.Web.Routing.RouteValueDictionary,System.String@)" />.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/892441af-8f1d-483e-ab5f-b82c23576f5a">ASP.NET-Routing</related>
        <related type="Article" href="https://msdn.microsoft.com/library/dc88e6ba-470c-4b20-b644-35874cfd781d">Gewusst wie: Zugreifen auf URL-Parameter auf einer gerouteten Seite</related>
        <related type="Article" href="https://msdn.microsoft.com/library/9ae6373a-853a-4d6e-8639-8c173dacb59f">Übersicht über ASP.net-Ausdrücke</related>
      </Docs>
    </Member>
    <Member MemberName="SupportsEvaluate">
      <MemberSignature Language="C#" Value="public override bool SupportsEvaluate { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsEvaluate" />
      <MemberSignature Language="DocId" Value="P:System.Web.Compilation.RouteUrlExpressionBuilder.SupportsEvaluate" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property SupportsEvaluate As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsEvaluate { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.SupportsEvaluate : bool" Usage="System.Web.Compilation.RouteUrlExpressionBuilder.SupportsEvaluate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob ein Ausdruck in einer nicht kompilierten Seite ausgewertet werden kann.</summary>
        <value>Immer <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.Compilation.RouteUrlExpressionBuilder.SupportsEvaluate%2A>-Eigenschaft gibt an, ob die <xref:System.Web.Compilation.RouteUrlExpressionBuilder.EvaluateExpression%2A>-Methode in der-Klasse implementiert wurde, und kann einen Wert für den Ausdruck in einer nicht kompilierten Seite zurückgeben. Die <xref:System.Web.Compilation.RouteUrlExpressionBuilder>-Klasse kann einen Ausdruck in einer nicht kompilierten Seite auswerten. Daher gibt die <xref:System.Web.Compilation.RouteUrlExpressionBuilder.SupportsEvaluate%2A>-Eigenschaft immer `true`zurück.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/892441af-8f1d-483e-ab5f-b82c23576f5a">ASP.NET-Routing</related>
        <related type="Article" href="https://msdn.microsoft.com/library/dc88e6ba-470c-4b20-b644-35874cfd781d">Gewusst wie: Zugreifen auf URL-Parameter auf einer gerouteten Seite</related>
        <related type="Article" href="https://msdn.microsoft.com/library/9ae6373a-853a-4d6e-8639-8c173dacb59f">Übersicht über ASP.net-Ausdrücke</related>
      </Docs>
    </Member>
    <Member MemberName="TryParseRouteExpression">
      <MemberSignature Language="C#" Value="public static bool TryParseRouteExpression (string expression, System.Web.Routing.RouteValueDictionary routeValues, out string routeName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParseRouteExpression(string expression, class System.Web.Routing.RouteValueDictionary routeValues, [out] string&amp; routeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.RouteUrlExpressionBuilder.TryParseRouteExpression(System.String,System.Web.Routing.RouteValueDictionary,System.String@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParseRouteExpression (expression As String, routeValues As RouteValueDictionary, ByRef routeName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParseRouteExpression(System::String ^ expression, System::Web::Routing::RouteValueDictionary ^ routeValues, [Runtime::InteropServices::Out] System::String ^ % routeName);" />
      <MemberSignature Language="F#" Value="static member TryParseRouteExpression : string * System.Web.Routing.RouteValueDictionary * string -&gt; bool" Usage="System.Web.Compilation.RouteUrlExpressionBuilder.TryParseRouteExpression (expression, routeValues, routeName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.String" />
        <Parameter Name="routeValues" Type="System.Web.Routing.RouteValueDictionary" />
        <Parameter Name="routeName" Type="System.String" RefType="out" />
      </Parameters>
      <Docs>
        <param name="expression">Der Ausdruck, wie im Markup angegeben.</param>
        <param name="routeValues">Die Auflistung von Routenschlüsseln und deren zugeordnete Werte.</param>
        <param name="routeName">Die Rückgabe dieser Methode enthält eine Zeichenfolge, die den Namen der Route darstellt, wenn <paramref name="expression" /> einen Routenschlüssel mit dem Namen <c>RouteName</c> enthält. Dieser Parameter wird nicht initialisiert übergeben.</param>
        <summary>Wertet einen Ausdruck in einer Auflistung von Routenschlüsseln und Werten und optional in einen Routennamen aus.</summary>
        <returns><see langword="true" />, wenn der Analysevorgang erfolgreich war, andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.Compilation.RouteUrlExpressionBuilder.TryParseRouteExpression%2A>-Methode entfernt führende und nachfolgende Leerzeichen aus dem Ausdruck und teilt Sie dann mithilfe von Kommas als Trennzeichen in Schlüssel/Wert-Paare auf. Wenn der Routen Schlüssel mit dem Namen `RouteName` gefunden wird, wird dieser Wert im `routeName` Parameter und nicht in `routeValues`zurückgegeben. Andernfalls wird `null` für `routeName`zurückgegeben. Führende und nachfolgende Leerzeichen werden auch aus einzelnen Schlüsseln und Werten entfernt.  
  
 Die <xref:System.Web.Compilation.RouteUrlExpressionBuilder.TryParseRouteExpression%2A>-Methode gibt `false` zurück, wenn der Ausdruck nicht aus mindestens einem Schlüssel-Wert-Paar besteht, das im Format *Schlüssel*`=`*Wert*liegt, und das Kommas zum Trennen mehrerer Paare verwendet.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/892441af-8f1d-483e-ab5f-b82c23576f5a">ASP.NET-Routing</related>
        <related type="Article" href="https://msdn.microsoft.com/library/dc88e6ba-470c-4b20-b644-35874cfd781d">Gewusst wie: Zugreifen auf URL-Parameter auf einer gerouteten Seite</related>
        <related type="Article" href="https://msdn.microsoft.com/library/9ae6373a-853a-4d6e-8639-8c173dacb59f">Übersicht über ASP.net-Ausdrücke</related>
      </Docs>
    </Member>
  </Members>
</Type>
