<Type Name="ClientBuildManagerParameter" FullName="System.Web.Compilation.ClientBuildManagerParameter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="06945cb4d38c7601f64dbbb9f74498967153c396" />
    <Meta Name="ms.sourcegitcommit" Value="c0c07dbd19cd7017243f9ac36915755f79bc8da6" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="11/27/2018" />
    <Meta Name="ms.locfileid" Value="52357287" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ClientBuildManagerParameter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit ClientBuildManagerParameter extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.Compilation.ClientBuildManagerParameter" />
  <TypeSignature Language="VB.NET" Value="Public Class ClientBuildManagerParameter" />
  <TypeSignature Language="C++ CLI" Value="public ref class ClientBuildManagerParameter" />
  <TypeSignature Language="F#" Value="type ClientBuildManagerParameter = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Enthält Werte, die während der Vorkompilierung an den ASP.NET-Compiler übergeben wurden.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ASP.NET Web Pages und Codedateien können vorkompiliert werden, um eine schnellere Antwort für Benutzer vereinfachen, und für die Bereitstellung der Website zu ermöglichen, ohne den Quellcode bereitstellen. Weitere Informationen zum Vorkompilieren einer ASP.NET-Website finden Sie unter [ASP.NET Web Site Project Precompilation Overview](https://msdn.microsoft.com/library/a88e56f9-b232-47c5-92e0-f9674ed15e5a).  
  
 Die <xref:System.Web.Compilation.ClientBuildManagerParameter> -Klasse speichert Werte, die während der Vorkompilierung verwendet werden. Die <xref:System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags%2A> Eigenschaft bestimmt, wie die Assembly erstellt wird. Sie können beispielsweise festlegen <xref:System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags%2A> zu <xref:System.Web.Compilation.PrecompilationFlags.Clean> zu kompilieren zuvor kompilierten Komponenten werden soll, oder legen Sie ihn auf <xref:System.Web.Compilation.PrecompilationFlags.OverwriteTarget> um die resultierende Assembly Überschreiben von Komponenten in das Zielverzeichnis zu ermöglichen. Die <xref:System.Web.Compilation.PrecompilationFlags> Enumerator hat eine <xref:System.FlagsAttribute> -Attribut, das eine bitweise Kombination der Memberwerte zulässt. Die <xref:System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags%2A> Eigenschaft darf mehr als einen Wert aus der <xref:System.Web.Compilation.PrecompilationFlags> Enumeration um eine Kombination von Vorkompilierungsverhalten anzugeben.  
  
 Entweder die <xref:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyContainer%2A> Eigenschaft oder das <xref:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyFile%2A> Eigenschaft ist ein Wert zum Erstellen einer Assembly mit starkem Namen zugewiesen. Beide Werte müssen nicht festgelegt werden, um eine Assembly mit starkem Namen zu erstellen.  
  
 Ein <xref:System.Web.Compilation.ClientBuildManagerParameter> Objekt wird zum Übergeben der <xref:System.Web.Compilation.ClientBuildManager> -Objekt über die <xref:System.Web.Compilation.ClientBuildManager.%23ctor%2A> Konstruktor.  
  
   
  
## Examples  
 Im folgenden Codebeispiel ist Teil des ein Codebeispiel finden Sie in der <xref:System.Web.Compilation.ClientBuildManager> Übersicht über die Klasse. Im Beispiel eine <xref:System.Web.Compilation.ClientBuildManagerParameter> Objekt erstellt wird und seine Werte werden festgelegt. Die resultierende Assembly hat einen starken Namen basierend auf eine Datei mit dem angegebenen Schlüssel und wird entsprechend der angegebenen Vorkompilieren <xref:System.Web.Compilation.PrecompilationFlags> Werte.  
  
 [!code-csharp[System.Web.Compilation.ClientBuildManager#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Compilation.ClientBuildManager/CS/source.cs#2)]
 [!code-vb[System.Web.Compilation.ClientBuildManager#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Compilation.ClientBuildManager/VB/source.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.Compilation.ClientBuildManager" />
    <altmember cref="T:System.Web.Compilation.PrecompilationFlags" />
    <related type="Article" href="https://msdn.microsoft.com/library/a88e56f9-b232-47c5-92e0-f9674ed15e5a">ASP.NET Web Sitevorkompilierung</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ClientBuildManagerParameter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.ClientBuildManagerParameter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ClientBuildManagerParameter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Compilation.ClientBuildManagerParameter" />-Klasse.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieser Konstruktor initialisiert keine Eigenschaftswerte. Diese Werte müssen festgelegt werden, über die <xref:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyContainer%2A>, <xref:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyFile%2A>, und <xref:System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags%2A> Eigenschaften auf, nachdem das Objekt erstellt wurde.  
  
   
  
## Examples  
 Im folgenden Codebeispiel ist Teil des ein Codebeispiel finden Sie in der <xref:System.Web.Compilation.ClientBuildManager> Übersicht über die Klasse. Im Beispiel eine <xref:System.Web.Compilation.ClientBuildManagerParameter> Objekt erstellt wird und seine Werte werden festgelegt. Die resultierende Assembly hat einen starken Namen basierend auf eine Datei mit dem angegebenen Schlüssel und wird entsprechend der angegebenen Vorkompilieren <xref:System.Web.Compilation.PrecompilationFlags> Werte.  
  
 [!code-csharp[System.Web.Compilation.ClientBuildManager#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Compilation.ClientBuildManager/CS/source.cs#2)]
 [!code-vb[System.Web.Compilation.ClientBuildManager#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Compilation.ClientBuildManager/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExcludedVirtualPaths">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.List&lt;string&gt; ExcludedVirtualPaths { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.List`1&lt;string&gt; ExcludedVirtualPaths" />
      <MemberSignature Language="DocId" Value="P:System.Web.Compilation.ClientBuildManagerParameter.ExcludedVirtualPaths" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ExcludedVirtualPaths As List(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::List&lt;System::String ^&gt; ^ ExcludedVirtualPaths { System::Collections::Generic::List&lt;System::String ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ExcludedVirtualPaths : System.Collections.Generic.List&lt;string&gt;" Usage="System.Web.Compilation.ClientBuildManagerParameter.ExcludedVirtualPaths" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.List&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ausgeschlossene virtuelle Pfade ab oder legt diese fest.</summary>
        <value>Ausgeschlossene virtuelle Pfade an.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PrecompilationFlags">
      <MemberSignature Language="C#" Value="public System.Web.Compilation.PrecompilationFlags PrecompilationFlags { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.Compilation.PrecompilationFlags PrecompilationFlags" />
      <MemberSignature Language="DocId" Value="P:System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags" />
      <MemberSignature Language="VB.NET" Value="Public Property PrecompilationFlags As PrecompilationFlags" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::Compilation::PrecompilationFlags PrecompilationFlags { System::Web::Compilation::PrecompilationFlags get(); void set(System::Web::Compilation::PrecompilationFlags value); };" />
      <MemberSignature Language="F#" Value="member this.PrecompilationFlags : System.Web.Compilation.PrecompilationFlags with get, set" Usage="System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.Compilation.PrecompilationFlags</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Flags ab, die das Vorkompilierungsverhalten bestimmen, oder legt diese fest.</summary>
        <value>Die <see cref="T:System.Web.Compilation.PrecompilationFlags" /> für ein Clientbuild.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags%2A> Eigenschaft bestimmt, wie die Assembly erstellt wird. Sie können beispielsweise festlegen <xref:System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags%2A> zu <xref:System.Web.Compilation.PrecompilationFlags.Clean> zu kompilieren zuvor kompilierten Komponenten werden soll, oder legen Sie ihn auf <xref:System.Web.Compilation.PrecompilationFlags.OverwriteTarget> um die resultierende Assembly Überschreiben von Komponenten in das Zielverzeichnis zu ermöglichen. Die <xref:System.Web.Compilation.PrecompilationFlags> Enumerator hat eine <xref:System.FlagsAttribute> -Attribut, das eine bitweise Kombination der Memberwerte zulässt. Die <xref:System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags%2A> Eigenschaft darf mehr als einen Wert aus der <xref:System.Web.Compilation.PrecompilationFlags> Enumeration um eine Kombination von Vorkompilierungsverhalten anzugeben.  
  
   
  
## Examples  
 Im folgenden Codebeispiel ist Teil des ein Codebeispiel finden Sie in der <xref:System.Web.Compilation.ClientBuildManager> Übersicht über die Klasse. Im Beispiel eine <xref:System.Web.Compilation.ClientBuildManagerParameter> Objekt erstellt wird und seine Werte werden festgelegt. Die resultierende Assembly hat einen starken Namen basierend auf eine Datei mit dem angegebenen Schlüssel und wird entsprechend der angegebenen Vorkompilieren <xref:System.Web.Compilation.PrecompilationFlags> Werte.  
  
 [!code-csharp[System.Web.Compilation.ClientBuildManager#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Compilation.ClientBuildManager/CS/source.cs#2)]
 [!code-vb[System.Web.Compilation.ClientBuildManager#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Compilation.ClientBuildManager/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Compilation.ClientBuildManager" />
        <altmember cref="T:System.Web.Compilation.PrecompilationFlags" />
        <related type="Article" href="https://msdn.microsoft.com/library/a88e56f9-b232-47c5-92e0-f9674ed15e5a">ASP.NET Web Sitevorkompilierung</related>
      </Docs>
    </Member>
    <Member MemberName="StrongNameKeyContainer">
      <MemberSignature Language="C#" Value="public string StrongNameKeyContainer { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string StrongNameKeyContainer" />
      <MemberSignature Language="DocId" Value="P:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyContainer" />
      <MemberSignature Language="VB.NET" Value="Public Property StrongNameKeyContainer As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ StrongNameKeyContainer { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.StrongNameKeyContainer : string with get, set" Usage="System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyContainer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den während der Kompilierung verwendeten Schlüsselcontainer ab oder legt diesen fest.</summary>
        <value>Ein <see cref="T:System.String" /> des Werts für den Schlüsselcontainer.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Entweder die <xref:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyContainer%2A> Eigenschaft oder das <xref:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyFile%2A> Eigenschaft ist ein Wert zum Erstellen einer Assembly mit starkem Namen zugewiesen. Beide Werte müssen nicht festgelegt werden, um eine Assembly mit starkem Namen zu erstellen.  
  
   
  
## Examples  
 Im folgenden Codebeispiel ähnelt das Codebeispiel finden Sie in der <xref:System.Web.Compilation.ClientBuildManager> Übersicht über die Klasse, mit dem Unterschied, dass die resultierende Assembly einen starken Namen basierend auf dem angegebenen Schlüsselcontainer hat. Es wird entsprechend der angegebenen Vorkompilieren <xref:System.Web.Compilation.PrecompilationFlags> Werte.  
  
 [!code-csharp[System.Web.Compilation.ClientBuildManager_2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Compilation.ClientBuildManager_2/CS/source.cs#1)]
 [!code-vb[System.Web.Compilation.ClientBuildManager_2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Compilation.ClientBuildManager_2/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Compilation.ClientBuildManager" />
        <altmember cref="T:System.Web.Compilation.PrecompilationFlags" />
        <related type="Article" href="https://msdn.microsoft.com/library/a88e56f9-b232-47c5-92e0-f9674ed15e5a">ASP.NET Web Sitevorkompilierung</related>
        <related type="Article" href="https://msdn.microsoft.com/library/f3022b39-f17f-48c1-b067-025eab0ce8bc">Importieren und Exportieren von geschützten Konfiguration RSA-Schlüsselcontainer</related>
      </Docs>
    </Member>
    <Member MemberName="StrongNameKeyFile">
      <MemberSignature Language="C#" Value="public string StrongNameKeyFile { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string StrongNameKeyFile" />
      <MemberSignature Language="DocId" Value="P:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyFile" />
      <MemberSignature Language="VB.NET" Value="Public Property StrongNameKeyFile As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ StrongNameKeyFile { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.StrongNameKeyFile : string with get, set" Usage="System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyFile" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die während der Kompilierung verwendete Schlüsseldatei ab oder legt diese fest.</summary>
        <value>Ein <see cref="T:System.String" /> des Werts für die Schlüsseldatei.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Entweder die <xref:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyContainer%2A> Eigenschaft oder das <xref:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyFile%2A> Eigenschaft ist ein Wert zum Erstellen einer Assembly mit starkem Namen zugewiesen. Beide Werte müssen nicht festgelegt werden, um eine Assembly mit starkem Namen zu erstellen.  
  
   
  
## Examples  
 Im folgenden Codebeispiel ist Teil des ein Codebeispiel finden Sie in der <xref:System.Web.Compilation.ClientBuildManager> Übersicht über die Klasse. Im Beispiel eine <xref:System.Web.Compilation.ClientBuildManagerParameter> Objekt erstellt wird und seine Werte werden festgelegt. Die resultierende Assembly hat einen starken Namen basierend auf eine Datei mit dem angegebenen Schlüssel und wird entsprechend der angegebenen Vorkompilieren <xref:System.Web.Compilation.PrecompilationFlags> Werte.  
  
 [!code-csharp[System.Web.Compilation.ClientBuildManager#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Compilation.ClientBuildManager/CS/source.cs#2)]
 [!code-vb[System.Web.Compilation.ClientBuildManager#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Compilation.ClientBuildManager/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Compilation.ClientBuildManager" />
        <altmember cref="T:System.Web.Compilation.PrecompilationFlags" />
        <related type="Article" href="https://msdn.microsoft.com/library/a88e56f9-b232-47c5-92e0-f9674ed15e5a">ASP.NET Web Sitevorkompilierung</related>
        <related type="Article" href="https://msdn.microsoft.com/library/ffbf6d9e-4a88-4a8a-9645-4ce0ee1ee5f9">Erstellen und Verwenden von Assemblys mit starkem Namen</related>
      </Docs>
    </Member>
  </Members>
</Type>