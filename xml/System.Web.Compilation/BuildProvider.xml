<Type Name="BuildProvider" FullName="System.Web.Compilation.BuildProvider">
  <Metadata><Meta Name="ms.openlocfilehash" Value="668c5e9b7f23c5df7df6c74748352d9749118947" /><Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="11/17/2018" /><Meta Name="ms.locfileid" Value="51901824" /></Metadata><TypeSignature Language="C#" Value="public abstract class BuildProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit BuildProvider extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.Compilation.BuildProvider" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class BuildProvider" />
  <TypeSignature Language="C++ CLI" Value="public ref class BuildProvider abstract" />
  <TypeSignature Language="F#" Value="type BuildProvider = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Definiert Eigenschaften und Methoden zum Generieren von Quellcode in der ASP.NET-Buildumgebung. Diese Klasse ist abstrakt.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wird für die ASP.NET-Buildumgebung <xref:System.Web.Compilation.BuildProvider> Objekte zum Generieren von Quellcode für andere Dateitypen innerhalb einer Anwendung. Von abgeleiteten Klassen <xref:System.Web.Compilation.BuildProvider> vorwiegend Quellcode für Dateien, Webseiten, Ressourcen und andere benutzerdefinierte Elemente bereitzustellen.  
  
 Normalerweise erstellen Sie keine Instanz von der <xref:System.Web.Compilation.BuildProvider> -Klasse direkt. Stattdessen, implementieren Sie eine abgeleitete Klasse <xref:System.Web.Compilation.BuildProvider>, und konfigurieren Sie die <xref:System.Web.Compilation.BuildProvider> Implementierung für die Verwendung in der ASP.NET-BUILDUMGEBUNG Umgebung erstellen.  
  
 Instanzen der <xref:System.Web.Compilation.BuildProvider> Klasse verwendet werden, mit <xref:System.Web.Compilation.AssemblyBuilder> Objekte, um eine oder mehrere Dateien in einer kompilierten Assembly zu erstellen. Ein <xref:System.Web.Compilation.BuildProvider> Instanz generiert den Quellcode in der entsprechenden Sprache für einzelne Dateien und die <xref:System.Web.Compilation.AssemblyBuilder> Objekt kombiniert den Quellcode von jedem <xref:System.Web.Compilation.BuildProvider> Instanz in eine einzelne Assembly.  
  
 Die ASP.NET-Buildumgebung verwendet Instanzen der <xref:System.Web.Compilation.BuildProvider> Klasse, um Dateien innerhalb einer Anwendung zu erstellen. Die <xref:System.Web.Compilation.BuildProvider.VirtualPath%2A> Eigenschaft der <xref:System.Web.Compilation.BuildProvider> -Ereignisklasse zeigt an, den Pfad der Datei, die erstellt werden. Die Dateierweiterung der einzelnen Dateien in einer Anwendung wird einem entsprechenden Buildanbieter zugeordnet. Der ASP.NET-Buildumgebung initialisiert einen <xref:System.Web.Compilation.BuildProvider> -Instanz für jede Datei auf der Dateierweiterung Grundlage und verwendet die <xref:System.Web.Compilation.BuildProvider> Methoden zum Generieren von Quellcode für die Datei. Übergibt die ASP.NET-Buildumgebung ein <xref:System.Web.Compilation.AssemblyBuilder> -Objekt auf Grundlage der bevorzugte Compilersprache und den Kontext der Datei, die die <xref:System.Web.Compilation.BuildProvider> Methoden beim Erstellen einer Assembly aus einem oder mehreren Dateien, damit die <xref:System.Web.Compilation.BuildProvider> Instanz kann Ihre Kenntnisse beisteuern. der Quellcode für die jeweilige Datei für die gesamte Assembly.  
  
 Um benutzerdefinierte Aktionen für einen Dateityp innerhalb einer ASP.NET-Anwendung zu definieren, leiten Sie eine Klasse von <xref:System.Web.Compilation.BuildProvider>, Implementieren von Membern in der abgeleiteten Klasse für den Dateityp erstellen und konfigurieren Sie den Buildanbieter für die entsprechende Dateierweiterung in der Konfigurationsdatei der Anwendung.  
  
 Der gibt an, die Dateierweiterung für unterstützte Dateien, und gibt an, ob der Buildanbieter Code-Dateien, Web-Dateien, Ressourcendateien oder alle Dateien unterstützt. Verwenden der `type` Attribut, um den vollqualifizierten Typnamen der Buildanbieterimplementierung anzugeben. Verwenden der <xref:System.Web.Compilation.BuildProviderAppliesToAttribute> Klasse, um anzugeben, ob der Buildanbieter, Dateien im Verzeichnis "App_Code", auf Dateien in einem Verzeichnis für Webinhalte, für globale oder lokale Ressourcen oder für alle Dateien angewendet. Verwenden der `extension` Attribut an die Dateierweiterung, die mit dem Sie Dateien, die die <xref:System.Web.Compilation.BuildProvider> -Klasse unterstützt. Verwenden der <xref:System.Web.Configuration.BuildProviderCollection> Klasse, um untersuchen Anbieter in einer Konfigurationsdatei zu erstellen. Weitere Informationen zum Konfigurieren eines Buildanbieters finden Sie unter [BuildProviders-Element für die Kompilierung ((ASP.NET Einstellungsschema)](https://msdn.microsoft.com/library/40fa889d-5412-487a-b6a9-21eb011c2384).  
  
 Um einen Buildanbieter implementieren, der Quellcode für einen benutzerdefinierten Dateityp generiert, leiten Sie eine Klasse von <xref:System.Web.Compilation.BuildProvider>, und überschreiben die <xref:System.Web.Compilation.BuildProvider.GenerateCode%2A> Methode zum Generieren von Quellcode für den unterstützten Dateityp. Der generierte Quellcode wird hinzugefügt, um die <xref:System.Web.Compilation.AssemblyBuilder> Objekt in Form eines CodeDOM-Diagramms oder als Inhalt, der eine physischen Quellcodedatei darstellt. Überschreiben, wenn der Buildanbieter, eine bestimmte Programmiersprache erfordert, die <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A> zurückzugebende Eigenschaft eine <xref:System.Web.Compilation.CompilerType> -Objekt für die unterstützte Programmiersprache. Wenn der Buildanbieter keine spezifische Programmiersprache erforderlich ist, überschreiben Sie nicht die <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A> Eigenschaft; verwenden Sie stattdessen die Implementierung der Basisklasse, die angibt, dass der Buildanbieter alle .NET Framework-Sprache, z. B. Visual Basic oder c# verwenden kann.  
  
 Um einen Buildanbieter implementieren, der Quellcode für Webinhalte generiert, leiten Sie eine Klasse von <xref:System.Web.Compilation.BuildProvider> und überschreiben die <xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A> -Methode zur Rückgabe der <xref:System.Type> für die Klasse, die vom <xref:System.Web.Compilation.BuildProvider>. Überschreiben der <xref:System.Web.Compilation.BuildProvider.GenerateCode%2A> Methode zum Generieren von Quellcode für den Typ, der von der unterstützten Datei bereitgestellt.  
  
> [!NOTE]
>  Hinzufügen einer benutzerdefinierten <xref:System.Web.Compilation.BuildProvider> Klasse, um die Datei "Web.config" funktioniert in einer ASP.NET-Website funktioniert jedoch nicht in einem ASP.NET Web Application-Projekt. In ein Webanwendungsprojekt, die vom generierten Code der <xref:System.Web.Compilation.BuildProvider> Klasse kann nicht in der Anwendung enthalten sein. Weitere Informationen finden Sie unter [ASP.NET Web Application Project Precompilation Overview](https://msdn.microsoft.com/library/b940abbd-178d-4570-b441-52914fa7b887).  
  
   
  
## Examples  
 Das folgende Codebeispiel veranschaulicht eine einfache Buildanbieterimplementierung erben von der abstrakten <xref:System.Web.Compilation.BuildProvider> Basisklasse. Der Buildanbieter überschreibt die <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A>, <xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A>, und <xref:System.Web.Compilation.BuildProvider.GenerateCode%2A> Member der Basisklasse. Das Beispiel umfasst nicht die Implementierung der `SampleClassGenerator` Klasse. Weitere Informationen finden Sie unter den <xref:System.CodeDom.CodeCompileUnit> Übersicht über die Klasse.  
  
 [!code-csharp[System.Web.Compilation.SampleBuildProvider_2#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Compilation.SampleBuildProvider_2/CS/Class1.cs#2)]
 [!code-vb[System.Web.Compilation.SampleBuildProvider_2#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Compilation.SampleBuildProvider_2/VB/Class1.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.Compilation.CompilerType" />
    <altmember cref="T:System.Web.Compilation.ClientBuildManager" />
    <altmember cref="T:System.Web.Compilation.AssemblyBuilder" />
    <altmember cref="T:System.Web.Configuration.BuildProvider" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected BuildProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.BuildProvider.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; BuildProvider();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Compilation.BuildProvider" />-Klasse.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Da die <xref:System.Web.Compilation.BuildProvider> Klasse ist abstrakt, können Sie keine Instanz von erstellen <xref:System.Web.Compilation.BuildProvider> direkt mithilfe des Konstruktors.  
  
 Bei der Ableitung von der <xref:System.Web.Compilation.BuildProvider> Klasse, überschreiben Sie den Konstruktor, um die angepasste Initialisierung von Aktionen für die Buildanbieterimplementierung zu implementieren.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CodeCompilerType">
      <MemberSignature Language="C#" Value="public virtual System.Web.Compilation.CompilerType CodeCompilerType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.Compilation.CompilerType CodeCompilerType" />
      <MemberSignature Language="DocId" Value="P:System.Web.Compilation.BuildProvider.CodeCompilerType" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CodeCompilerType As CompilerType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::Compilation::CompilerType ^ CodeCompilerType { System::Web::Compilation::CompilerType ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CodeCompilerType : System.Web.Compilation.CompilerType" Usage="System.Web.Compilation.BuildProvider.CodeCompilerType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Compilation.CompilerType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Stellt den Compilertyp dar, der vom Buildanbieter zum Generieren von Quellcode für einen benutzerdefinierten Dateityp verwendet wird.</summary>
        <value>Ein schreibgeschütztes <see cref="T:System.Web.Compilation.CompilerType" />-Objekt, das den Codegenerator, den Codecompiler sowie Compilereinstellungen darstellt, die zum Erstellen von Quellcode für den virtuellen Pfad verwendet werden. Die Basisklasse gibt <see langword="null" /> zurück.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A> Eigenschaft, um die Einstellungen bereitzustellen, für das Kompilieren von Quellcode für eine Implementierung der <xref:System.Web.Compilation.BuildProvider>. Die <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A> Eigenschaft `null` Wenn Buildanbieter zum Generieren und Kompilieren von Quellcode eine bestimmten Codesprache nicht erforderlich ist.  
  
 Zum Festlegen des Werts für eine <xref:System.Web.Compilation.CompilerType> Objekt in einer Implementierung eines Build-Anbieter verwenden die <xref:System.Web.Compilation.BuildProvider.GetDefaultCompilerType%2A> oder <xref:System.Web.Compilation.BuildProvider.GetDefaultCompilerTypeForLanguage%2A> Methode.  
  
 Die <xref:System.Web.Compilation.CompilerType.CodeDomProviderType%2A> Eigenschaft gibt an, die <xref:System.CodeDom.Compiler.CodeDomProvider> -Implementierung, die zum Generieren und Kompilieren von Quellcode für ein Buildanbieter verwendet wird. Die <xref:System.Web.Compilation.CompilerType.CompilerParameters%2A> Eigenschaft definiert die Einstellungen, die verwendet werden, um den Quellcode in eine Assembly zu kompilieren.  
  
   
  
## Examples  
 Das folgende Codebeispiel veranschaulicht eine einfache Buildanbieterimplementierung erben von der abstrakten <xref:System.Web.Compilation.BuildProvider> Basisklasse. Der Buildanbieter überschreibt die <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A>, <xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A>, und <xref:System.Web.Compilation.BuildProvider.GenerateCode%2A> Member der Basisklasse.  
  
 [!code-csharp[System.Web.Compilation.SampleBuildProvider_2#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Compilation.SampleBuildProvider_2/CS/Class1.cs#2)]
 [!code-vb[System.Web.Compilation.SampleBuildProvider_2#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Compilation.SampleBuildProvider_2/VB/Class1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Compilation.CompilerType" />
      </Docs>
    </Member>
    <Member MemberName="GenerateCode">
      <MemberSignature Language="C#" Value="public virtual void GenerateCode (System.Web.Compilation.AssemblyBuilder assemblyBuilder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GenerateCode(class System.Web.Compilation.AssemblyBuilder assemblyBuilder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.BuildProvider.GenerateCode(System.Web.Compilation.AssemblyBuilder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void GenerateCode(System::Web::Compilation::AssemblyBuilder ^ assemblyBuilder);" />
      <MemberSignature Language="F#" Value="abstract member GenerateCode : System.Web.Compilation.AssemblyBuilder -&gt; unit&#xA;override this.GenerateCode : System.Web.Compilation.AssemblyBuilder -&gt; unit" Usage="buildProvider.GenerateCode assemblyBuilder" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyBuilder" Type="System.Web.Compilation.AssemblyBuilder" />
      </Parameters>
      <Docs>
        <param name="assemblyBuilder">Der Assembly-Generator, der auf den vom Buildanbieter generierten Quellcode verweist.</param>
        <summary>Generiert Quellcode für den virtuellen Pfad des Buildanbieters und fügt den Quellcode einem bestimmten Assembly-Generator hinzu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Um einen Buildanbieter implementieren, der Quellcode für einen benutzerdefinierten Dateityp generiert, leiten Sie eine Klasse von der <xref:System.Web.Compilation.BuildProvider> Klasse, und überschreiben die <xref:System.Web.Compilation.BuildProvider.GenerateCode%2A> Methode zum Generieren von Quellcode für den unterstützten Dateityp.  
  
 In der Regel eines Buildanbieters <xref:System.Web.Compilation.BuildProvider.GenerateCode%2A> Implementierung liest die <xref:System.Web.Compilation.BuildProvider.VirtualPath%2A> Eigenschaft, wird der Inhalt analysiert und fügt Sie den generierte Quellcode in den angegebenen <xref:System.Web.Compilation.AssemblyBuilder> Objekt. Sie können Quellcode mitwirken, auf die Assembly in Form von einer <xref:System.IO.TextWriter> Objekt oder ein CodeDOM-Diagramm. Hinzufügen von Quellcode für die Assembly über eine <xref:System.IO.TextWriter> -Objekts die <xref:System.Web.Compilation.AssemblyBuilder.CreateCodeFile%2A> Methode. Verwenden Sie zum Hinzufügen von Quellcode in ein CodeDOM-Diagramm auf die Assembly der <xref:System.Web.Compilation.AssemblyBuilder.AddCodeCompileUnit%2A> Methode.  
  
 Wenn der Buildanbieter Quellcode in einer bestimmten Programmiersprache generiert, müssen Sie Sie überschreiben die <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A> zurückzugebende Eigenschaft eine <xref:System.Web.Compilation.CompilerType> -Objekt für die unterstützte Programmiersprache.  
  
   
  
## Examples  
 Das folgende Codebeispiel veranschaulicht eine einfache Buildanbieterimplementierung erben von der abstrakten <xref:System.Web.Compilation.BuildProvider> Basisklasse. Der Buildanbieter überschreibt die <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A>, <xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A>, und <xref:System.Web.Compilation.BuildProvider.GenerateCode%2A> Member der Basisklasse.  
  
 [!code-csharp[System.Web.Compilation.SampleBuildProvider_2#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Compilation.SampleBuildProvider_2/CS/Class1.cs#2)]
 [!code-vb[System.Web.Compilation.SampleBuildProvider_2#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Compilation.SampleBuildProvider_2/VB/Class1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Web.Compilation.BuildProvider.OpenReader" />
        <altmember cref="Overload:System.Web.Compilation.BuildProvider.OpenStream" />
        <altmember cref="T:System.Web.Compilation.AssemblyBuilder" />
        <related type="Article" href="https://msdn.microsoft.com/library/d077a3e8-bd81-4bdf-b6a3-323857ea30fb">Generieren und Kompilieren von dynamischem Quellcode</related>
      </Docs>
    </Member>
    <Member MemberName="GetCodeCompileUnit">
      <MemberSignature Language="C#" Value="protected internal virtual System.CodeDom.CodeCompileUnit GetCodeCompileUnit (out System.Collections.IDictionary linePragmasTable);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class System.CodeDom.CodeCompileUnit GetCodeCompileUnit([out] class System.Collections.IDictionary&amp; linePragmasTable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.BuildProvider.GetCodeCompileUnit(System.Collections.IDictionary@)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function GetCodeCompileUnit (ByRef linePragmasTable As IDictionary) As CodeCompileUnit" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual System::CodeDom::CodeCompileUnit ^ GetCodeCompileUnit([Runtime::InteropServices::Out] System::Collections::IDictionary ^ % linePragmasTable);" />
      <MemberSignature Language="F#" Value="abstract member GetCodeCompileUnit :  -&gt; System.CodeDom.CodeCompileUnit&#xA;override this.GetCodeCompileUnit :  -&gt; System.CodeDom.CodeCompileUnit" Usage="buildProvider.GetCodeCompileUnit linePragmasTable" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeCompileUnit</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="linePragmasTable" Type="System.Collections.IDictionary" RefType="out" />
      </Parameters>
      <Docs>
        <param name="linePragmasTable">Enthält beim Beenden dieser Methode ein Wörterbuch mit allen zugeordneten Zeilennummern und Zeilenpragmas im Quellcode. Dieser Parameter wird nicht initialisiert übergeben.</param>
        <summary>Stellt den Container für das generierte CodeDOM-Diagramm dar.</summary>
        <returns>Der Container für das von der <see cref="T:System.Web.Compilation.BuildProvider" />-Instanz generierte CodeDOM-Diagramm.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode kann verwendet werden, über die <xref:System.Web.Compilation.ClientBuildManager> -Klasse für die syntaxhervorhebung und Designer in Visual Studio unterstützt.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCustomString">
      <MemberSignature Language="C#" Value="public virtual string GetCustomString (System.CodeDom.Compiler.CompilerResults results);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetCustomString(class System.CodeDom.Compiler.CompilerResults results) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.BuildProvider.GetCustomString(System.CodeDom.Compiler.CompilerResults)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCustomString (results As CompilerResults) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetCustomString(System::CodeDom::Compiler::CompilerResults ^ results);" />
      <MemberSignature Language="F#" Value="abstract member GetCustomString : System.CodeDom.Compiler.CompilerResults -&gt; string&#xA;override this.GetCustomString : System.CodeDom.Compiler.CompilerResults -&gt; string" Usage="buildProvider.GetCustomString results" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="results" Type="System.CodeDom.Compiler.CompilerResults" />
      </Parameters>
      <Docs>
        <param name="results">Die Kompilierung erfolgt für den virtuellen Pfad des Buildanbieters.</param>
        <summary>Generiert eine Zeichenfolge, die in der kompilierten Assembly beibehalten werden muss.</summary>
        <returns>Eine Zeichenfolge, die in der Buildumgebung beibehalten werden muss, oder <see langword="null" />, wenn die Instanz des <see cref="T:System.Web.Compilation.BuildProvider" /> nicht <see cref="M:System.Web.Compilation.BuildProvider.GetCustomString(System.CodeDom.Compiler.CompilerResults)" /> implementiert.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.Compilation.BuildManager.GetCompiledCustomString%2A> -Methode der ein <xref:System.Web.Compilation.BuildManager> Objekt erstellt eine Instanz des Buildanbieters für einen virtuellen Eingabepfad und ruft die <xref:System.Web.Compilation.BuildProvider.GetCustomString%2A> Methode für die <xref:System.Web.Compilation.BuildProvider> Objekt.  
  
 Die Basis <xref:System.Web.Compilation.BuildProvider> -Klasse gibt `null` für die <xref:System.Web.Compilation.BuildProvider.GetCustomString%2A> -Methode, gibt an, dass <xref:System.Web.Compilation.BuildProvider.GetCustomString%2A> ist nicht implementiert.  
  
 Bestimmte Implementierungen der Build-Anbieter implementieren <xref:System.Web.Compilation.BuildProvider.GetCustomString%2A> anstelle von der <xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A> Methode. Ein <xref:System.Web.Compilation.BuildProvider> Objekt in der Regel verwendet <xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A> zurückzugebenden eine <xref:System.Type> Objekt für einen virtuellen Pfad. Allerdings die <xref:System.Web.Compilation.BuildProvider.GetCustomString%2A> Methode kann verwendet werden, um anzugeben, dass eine <xref:System.Web.Compilation.BuildProvider> Objekt kann mehrere Typen aus einem virtuellen Pfad zu generieren.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.CodeDom.Compiler.CompilerResults" />
        <altmember cref="M:System.Web.Compilation.BuildManager.GetCompiledCustomString(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetDefaultCompilerType">
      <MemberSignature Language="C#" Value="protected System.Web.Compilation.CompilerType GetDefaultCompilerType ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.Web.Compilation.CompilerType GetDefaultCompilerType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.BuildProvider.GetDefaultCompilerType" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetDefaultCompilerType () As CompilerType" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::Web::Compilation::CompilerType ^ GetDefaultCompilerType();" />
      <MemberSignature Language="F#" Value="member this.GetDefaultCompilerType : unit -&gt; System.Web.Compilation.CompilerType" Usage="buildProvider.GetDefaultCompilerType " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Compilation.CompilerType</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt die Compilereinstellungen für die Standardsprache in der Anwendung zurück.</summary>
        <returns>Ein <see cref="T:System.Web.Compilation.CompilerType" />-Objekt, das die Compilereinstellungen für die Standardsprache in der Anwendung darstellt. Die Basisklasse gibt den Standardcompiler auf der Grundlage der Konfigurationsdatei der Anwendung zurück.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Web.Compilation.BuildProvider.GetDefaultCompilerType%2A> Methode, um den Standardtyp für Compiler für einen Buildanbieter zu untersuchen. Verwenden der <xref:System.Web.Compilation.BuildProvider.GetDefaultCompilerTypeForLanguage%2A> Methode, um den Compilertyp, in dem ein Buildanbieter für einen bestimmten Sprachnamen konfiguriert zu untersuchen.  
  
 Die Basis <xref:System.Web.Compilation.BuildProvider> Klasse bestimmt den standardmäßigen Compiler Typ mithilfe der `defaultLanguage` -Attributwert im Abschnitt der Konfigurationsdatei der Anwendung. Ist keine Einstellung für die Standardsprache im Kompilierungsabschnitt, der Compilertyp standardmäßig festgelegt ist mit der <xref:Microsoft.VisualBasic.VBCodeProvider> Sprachanbieter.  
  
 Bei der Ableitung von der <xref:System.Web.Compilation.BuildProvider> -Klasse, können Sie <xref:System.Web.Compilation.BuildProvider.GetDefaultCompilerType%2A> Festlegen der <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A> Eigenschaft innerhalb der Implementierung.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Compilation.CompilerType" />
        <altmember cref="M:System.Web.Compilation.BuildProvider.GetDefaultCompilerTypeForLanguage(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetDefaultCompilerTypeForLanguage">
      <MemberSignature Language="C#" Value="protected System.Web.Compilation.CompilerType GetDefaultCompilerTypeForLanguage (string language);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.Web.Compilation.CompilerType GetDefaultCompilerTypeForLanguage(string language) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.BuildProvider.GetDefaultCompilerTypeForLanguage(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetDefaultCompilerTypeForLanguage (language As String) As CompilerType" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::Web::Compilation::CompilerType ^ GetDefaultCompilerTypeForLanguage(System::String ^ language);" />
      <MemberSignature Language="F#" Value="member this.GetDefaultCompilerTypeForLanguage : string -&gt; System.Web.Compilation.CompilerType" Usage="buildProvider.GetDefaultCompilerTypeForLanguage language" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Compilation.CompilerType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="language" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="language">Der Name einer Codesprache.</param>
        <summary>Gibt die Compilereinstellungen für den Buildanbieter auf der Grundlage der angegebenen Sprache zurück.</summary>
        <returns>Ein <see cref="T:System.Web.Compilation.CompilerType" />-Objekt, das die Compilereinstellungen für den Buildanbieter auf der Grundlage der angegebenen Sprache darstellt. Die Basisklasse gibt die Standardcompilereinstellungen für die Sprache auf der Basis der Konfigurationsdatei der Anwendung zurück.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Web.Compilation.BuildProvider.GetDefaultCompilerTypeForLanguage%2A> Methode, um den Compilertyp, die in den Buildanbieter für einen bestimmten Sprachnamen konfiguriert zu untersuchen. Verwenden der <xref:System.Web.Compilation.BuildProvider.GetDefaultCompilerType%2A> Methode, um den Standardtyp für Compiler für einen Buildanbieter zu untersuchen.  
  
 Die Basis <xref:System.Web.Compilation.BuildProvider> Klasse bestimmt den standardmäßigen Compiler Typ mithilfe der <xref:System.Web.Configuration.Compiler> Elemente in der <xref:System.Web.Configuration.CompilationSection.Compilers%2A> Eigenschaft der <xref:System.Web.Configuration.CompilationSection> Objekt für die Konfigurationsdatei an. Dies ist gleichbedeutend mit untersuchen die Elemente und die Elemente in die Abschnitte der Konfigurationsdatei. Z. B. für die `language` Wert VB, gibt die Methode der Basisklasse eine <xref:System.Web.Compilation.CompilerType> Objekt, das die konfigurierten Einstellungen für eine Instanz von entspricht <xref:Microsoft.VisualBasic.VBCodeProvider?displayProperty=nameWithType>.  
  
 Beim Ableiten von der <xref:System.Web.Compilation.BuildProvider> -Klasse, können Sie <xref:System.Web.Compilation.BuildProvider.GetDefaultCompilerTypeForLanguage%2A> Festlegen der <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A> Eigenschaftswert für die Sprache, die von der Implementierung unterstützt werden.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="language" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.Web.HttpException">Der <paramref name="language" />-Parameter stimmt nicht mit einem konfigurierten Compiler für den Buildanbieter überein.</exception>
        <altmember cref="T:System.Web.Compilation.CompilerType" />
        <altmember cref="M:System.Web.Compilation.BuildProvider.GetDefaultCompilerType" />
        <altmember cref="P:System.Web.Configuration.CompilationSection.Compilers" />
        <altmember cref="T:System.Web.Configuration.Compiler" />
      </Docs>
    </Member>
    <Member MemberName="GetGeneratedType">
      <MemberSignature Language="C#" Value="public virtual Type GetGeneratedType (System.CodeDom.Compiler.CompilerResults results);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type GetGeneratedType(class System.CodeDom.Compiler.CompilerResults results) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.BuildProvider.GetGeneratedType(System.CodeDom.Compiler.CompilerResults)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetGeneratedType (results As CompilerResults) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Type ^ GetGeneratedType(System::CodeDom::Compiler::CompilerResults ^ results);" />
      <MemberSignature Language="F#" Value="abstract member GetGeneratedType : System.CodeDom.Compiler.CompilerResults -&gt; Type&#xA;override this.GetGeneratedType : System.CodeDom.Compiler.CompilerResults -&gt; Type" Usage="buildProvider.GetGeneratedType results" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="results" Type="System.CodeDom.Compiler.CompilerResults" />
      </Parameters>
      <Docs>
        <param name="results">Die Kompilierung erfolgt für den virtuellen Pfad des Buildanbieters.</param>
        <summary>Gibt einen vom Buildanbieter generierten Typ vom virtuellen Pfad zurück.</summary>
        <returns>Der Typ, der vom Buildanbieter für den virtuellen Pfad generiert wird. Die Basisklasse gibt <see langword="null" /> zurück.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Um einen Buildanbieter implementieren, der Quellcode für Webinhalte, z. B. aspx-Dateien generiert, leiten Sie eine Klasse von der <xref:System.Web.Compilation.BuildProvider> Klasse, und überschreiben die <xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A> Methode, um den vom Buildanbieter generierten Typ zurückzugeben.  
  
 Das ASP.NET-Buildsystem Dateien für jeden Buildanbieter kompiliert und generiert eine <xref:System.CodeDom.Compiler.CompilerResults> -Objekt, das an die <xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A> Methode. In der Regel eines Buildanbieters <xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A> Implementierung verwendet die <xref:System.Reflection.Assembly.GetType%2A> Methode für die <xref:System.CodeDom.Compiler.CompilerResults.CompiledAssembly%2A> -Eigenschaft der Eingabe `results` Objekts, das den bereitgestellten Typ zurückgegeben.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.CodeDom.Compiler.CompilerResults" />
      </Docs>
    </Member>
    <Member MemberName="GetResultFlags">
      <MemberSignature Language="C#" Value="public virtual System.Web.Compilation.BuildProviderResultFlags GetResultFlags (System.CodeDom.Compiler.CompilerResults results);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Web.Compilation.BuildProviderResultFlags GetResultFlags(class System.CodeDom.Compiler.CompilerResults results) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.BuildProvider.GetResultFlags(System.CodeDom.Compiler.CompilerResults)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetResultFlags (results As CompilerResults) As BuildProviderResultFlags" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Web::Compilation::BuildProviderResultFlags GetResultFlags(System::CodeDom::Compiler::CompilerResults ^ results);" />
      <MemberSignature Language="F#" Value="abstract member GetResultFlags : System.CodeDom.Compiler.CompilerResults -&gt; System.Web.Compilation.BuildProviderResultFlags&#xA;override this.GetResultFlags : System.CodeDom.Compiler.CompilerResults -&gt; System.Web.Compilation.BuildProviderResultFlags" Usage="buildProvider.GetResultFlags results" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Compilation.BuildProviderResultFlags</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="results" Type="System.CodeDom.Compiler.CompilerResults" />
      </Parameters>
      <Docs>
        <param name="results">Die Kompilierung erfolgt für den virtuellen Pfad des Buildanbieters.</param>
        <summary>Gibt einen Wert zurück, der Aktionen angibt, die erforderlich sind, wenn ein virtueller Pfad erstellt wird.</summary>
        <returns>Ein <see cref="T:System.Web.Compilation.BuildProviderResultFlags" />-Wert, der Aktionen angibt, die nach der Erstellung eines virtuellen Pfads in der ASP.NET-Buildumgebung erforderlich sind.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.Compilation.BuildProvider.GetResultFlags%2A> Methode wird von der ASP.NET-Buildumgebung verwendet, wenn Instanzen des verwenden die <xref:System.Web.Compilation.BuildProvider> Klasse zum Erstellen von Dateien, und laden die kompilierten Assemblys.  
  
 Die Basis <xref:System.Web.Compilation.BuildProvider> Klasse die Methode gibt die <xref:System.Web.Compilation.BuildProviderResultFlags.Default> Feldwert, der angibt, dass keine besondere Aktion erforderlich ist, wenn der virtuelle Pfad erstellt wird.  
  
 Bei der Ableitung von der <xref:System.Web.Compilation.BuildProvider> -Klasse, die Sie implementieren die <xref:System.Web.Compilation.BuildProvider.GetResultFlags%2A> Methode, um einen anderen zurückzugeben <xref:System.Web.Compilation.BuildProviderResultFlags> Wert für Ihren benutzerdefinierten Dateityp oder den virtuellen Pfad. Z. B. wenn eine Neuerstellung des virtuellen Pfads muss die enthaltende <xref:System.AppDomain> Objekt neu geladen werden können Sie zurückkehren, die <xref:System.Web.Compilation.BuildProviderResultFlags.ShutdownAppDomainOnChange> Enumerationswert aus Ihrem <xref:System.Web.Compilation.BuildProvider.GetResultFlags%2A> Methode.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.CodeDom.Compiler.CompilerResults" />
        <altmember cref="T:System.Web.Compilation.BuildProviderResultFlags" />
      </Docs>
    </Member>
    <MemberGroup MemberName="OpenReader">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Öffnet einen Textreader zum Lesen aus einem virtuellen Pfad.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="OpenReader">
      <MemberSignature Language="C#" Value="protected System.IO.TextReader OpenReader ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.IO.TextReader OpenReader() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.BuildProvider.OpenReader" />
      <MemberSignature Language="VB.NET" Value="Protected Function OpenReader () As TextReader" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::IO::TextReader ^ OpenReader();" />
      <MemberSignature Language="F#" Value="member this.OpenReader : unit -&gt; System.IO.TextReader" Usage="buildProvider.OpenReader " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.TextReader</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Öffnet einen Textreader zum Lesen aus dem virtuellen Pfad des aktuellen Buildanbieterobjekts.</summary>
        <returns>Ein geöffnetes <see cref="T:System.IO.TextReader" />-Objekt, mit dem der Inhalt der <see cref="P:System.Web.Compilation.BuildProvider.VirtualPath" />-Eigenschaft gelesen werden kann.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.IO.TextReader.Read%2A> Methode für das zurückgegebene <xref:System.IO.TextReader> Objekt, das Lesen des Inhalts der <xref:System.Web.Compilation.BuildProvider.VirtualPath%2A> -Eigenschaft für eine <xref:System.Web.Compilation.BuildProvider> Objekt.  
  
 Nach dem Aufruf der <xref:System.Web.Compilation.BuildProvider.OpenReader%2A> -Methode müssen Sie verwenden die <xref:System.IO.TextReader.Close%2A> Methode zum Schließen der <xref:System.IO.TextReader> Objekt aus, und geben Sie zugeordneten Systemressourcen frei.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextReader" />
        <altmember cref="P:System.Web.Compilation.BuildProvider.VirtualPath" />
      </Docs>
    </Member>
    <Member MemberName="OpenReader">
      <MemberSignature Language="C#" Value="protected System.IO.TextReader OpenReader (string virtualPath);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.IO.TextReader OpenReader(string virtualPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.BuildProvider.OpenReader(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Function OpenReader (virtualPath As String) As TextReader" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::IO::TextReader ^ OpenReader(System::String ^ virtualPath);" />
      <MemberSignature Language="F#" Value="member this.OpenReader : string -&gt; System.IO.TextReader" Usage="buildProvider.OpenReader virtualPath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.TextReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="virtualPath">Der virtuelle Pfad, aus dem gelesen wird.</param>
        <summary>Öffnet einen Textreader zum Lesen aus einem bestimmten virtuellen Pfad.</summary>
        <returns>Ein geöffnetes <see cref="T:System.IO.TextReader" />-Objekt, mit dem der Inhalt des angegebenen virtuellen Pfads gelesen werden kann.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.IO.TextReader.Read%2A> Methode für das zurückgegebene <xref:System.IO.TextReader> Objekt zum Lesen des Inhalts des virtuellen Pfads.  
  
 Nach dem Aufruf der <xref:System.Web.Compilation.BuildProvider.OpenReader%2A> -Methode müssen Sie verwenden die <xref:System.IO.TextReader.Close%2A> Methode zum Schließen der <xref:System.IO.TextReader> Objekt aus, und geben Sie zugeordneten Systemressourcen frei.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextReader" />
      </Docs>
    </Member>
    <MemberGroup MemberName="OpenStream">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Öffnet einen Stream zum Lesen aus einem virtuellen Pfad.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="OpenStream">
      <MemberSignature Language="C#" Value="protected System.IO.Stream OpenStream ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.IO.Stream OpenStream() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.BuildProvider.OpenStream" />
      <MemberSignature Language="VB.NET" Value="Protected Function OpenStream () As Stream" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::IO::Stream ^ OpenStream();" />
      <MemberSignature Language="F#" Value="member this.OpenStream : unit -&gt; System.IO.Stream" Usage="buildProvider.OpenStream " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Öffnet einen Stream zum Lesen des virtuellen Pfads des aktuellen Buildanbieterobjekts.</summary>
        <returns>Ein geöffnetes <see cref="T:System.IO.Stream" />-Objekt, mit dem der Inhalt der <see cref="P:System.Web.Compilation.BuildProvider.VirtualPath" />-Eigenschaft gelesen werden kann.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.IO.Stream.Read%2A> Methode für das zurückgegebene <xref:System.IO.Stream> Objekt, das Lesen des Inhalts der virtuelle Pfad für die <xref:System.Web.Compilation.BuildProvider> Objekt.  
  
 Nach dem Aufruf der <xref:System.Web.Compilation.BuildProvider.OpenStream%2A> -Methode müssen Sie verwenden die <xref:System.IO.Stream.Close%2A> Methode zum Schließen der <xref:System.IO.Stream> Objekt aus, und geben Sie zugeordneten Systemressourcen frei.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.Stream" />
        <altmember cref="P:System.Web.Compilation.BuildProvider.VirtualPath" />
      </Docs>
    </Member>
    <Member MemberName="OpenStream">
      <MemberSignature Language="C#" Value="protected System.IO.Stream OpenStream (string virtualPath);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.IO.Stream OpenStream(string virtualPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.BuildProvider.OpenStream(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Function OpenStream (virtualPath As String) As Stream" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::IO::Stream ^ OpenStream(System::String ^ virtualPath);" />
      <MemberSignature Language="F#" Value="member this.OpenStream : string -&gt; System.IO.Stream" Usage="buildProvider.OpenStream virtualPath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="virtualPath">Der virtuelle Pfad, aus dem gelesen wird.</param>
        <summary>Öffnet einen Stream zum Lesen aus einem angegebenen virtuellen Pfad.</summary>
        <returns>Ein geöffnetes <see cref="T:System.IO.Stream" />-Objekt, mit dem der Inhalt des angegebenen virtuellen Pfads gelesen werden kann.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.IO.Stream.Read%2A> Methode für das zurückgegebene <xref:System.IO.Stream> Objekt zum Lesen des Inhalts des virtuellen Pfads.  
  
 Nach dem Aufruf der <xref:System.Web.Compilation.BuildProvider.OpenStream%2A> -Methode müssen Sie verwenden die <xref:System.IO.Stream.Close%2A> Methode zum Schließen der <xref:System.IO.Stream> Objekt aus, und geben Sie zugeordneten Systemressourcen frei.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.Stream" />
      </Docs>
    </Member>
    <Member MemberName="ProcessCompileErrors">
      <MemberSignature Language="C#" Value="public virtual void ProcessCompileErrors (System.CodeDom.Compiler.CompilerResults results);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ProcessCompileErrors(class System.CodeDom.Compiler.CompilerResults results) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.BuildProvider.ProcessCompileErrors(System.CodeDom.Compiler.CompilerResults)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ProcessCompileErrors (results As CompilerResults)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ProcessCompileErrors(System::CodeDom::Compiler::CompilerResults ^ results);" />
      <MemberSignature Language="F#" Value="abstract member ProcessCompileErrors : System.CodeDom.Compiler.CompilerResults -&gt; unit&#xA;override this.ProcessCompileErrors : System.CodeDom.Compiler.CompilerResults -&gt; unit" Usage="buildProvider.ProcessCompileErrors results" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="results" Type="System.CodeDom.Compiler.CompilerResults" />
      </Parameters>
      <Docs>
        <param name="results">Compilerergebnisse.</param>
        <summary>Beim Überschreiben in einer abgeleiteten Klasse können Sie Compilerfehlermeldungen überprüfen, damit Sie sie ändern können, um weitere Informationen bereitzustellen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sie überschreiben diese Methode normalerweise, damit Sie Compilerfehler ändern können, bevor sie angezeigt werden, um den Fehlertext, die dem Benutzer weitere nützliche vornehmen zu können. Dies ist nützlich in Szenarien, in denen Sie wissen, den Kontext von bestimmten Fehlern und können Sie die Informationen, die dem Benutzer Informationen zur Problembehebung bereitstellen. Die ursprüngliche Fehlermeldung des Compilers bezieht sich in der Regel auf ein bestimmtes Sprachkonstrukt und kann nicht, die tatsächliche Ursache oder die Lösung offensichtlich für dem Benutzer.  
  
 Sie können die Fehler zugreifen, indem Sie mit der <xref:System.CodeDom.Compiler.CompilerResults> -Objekt, das an die Methode übergeben wird.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReferencedAssemblies">
      <MemberSignature Language="C#" Value="protected System.Collections.ICollection ReferencedAssemblies { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ICollection ReferencedAssemblies" />
      <MemberSignature Language="DocId" Value="P:System.Web.Compilation.BuildProvider.ReferencedAssemblies" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property ReferencedAssemblies As ICollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Collections::ICollection ^ ReferencedAssemblies { System::Collections::ICollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ReferencedAssemblies : System.Collections.ICollection" Usage="System.Web.Compilation.BuildProvider.ReferencedAssemblies" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Stellt die Assemblys dar, die mit dem vom Buildanbieter generierten Quellcode kompiliert werden müssen.</summary>
        <value>Eine schreibgeschützte Auflistung von Assemblys, auf die mit dem vom Buildanbieter generierten Quellcode verwiesen werden kann.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der ASP.NET-Buildumgebung initialisiert der Auflistung von Assemblys, die vom Buildanbieter zu Referenzzwecken verfügbar sind. Die vom ein Buildanbieter generierte Quellcode kann öffentliche Typen in referenzierten Assemblys verwenden. Die Auflistung der referenzierten Assembly besteht aus anderen Assemblys, die in der ASP.NET-Anwendung erstellt wurden, und Assemblys, die in das Element in der Konfigurationsdatei aufgeführt.  
  
 Wenn der Buildanbieter Quellcode, die Verweise auf zusätzliche Assemblys enthält generiert, fügt der Buildanbieter die zusätzlichen Assemblys mit der <xref:System.Web.Compilation.AssemblyBuilder.AddAssemblyReference%2A> Methode. Die ASP.NET-Buildumgebung aufgelöst wird, dass externe Typen während Assemblykompilierung verwenden beide die referenzierten Assemblys hinzugefügt, indem der Anbieter und der standardauflistung von Assemblys, die als Referenz verfügbar erstellen.  
  
 Die <xref:System.Web.Compilation.BuildProvider.ReferencedAssemblies%2A> Auflistung enthält keine Assemblys, die für den Verweis, von anderen Buildanbietern über hinzugefügt werden die <xref:System.Web.Compilation.AssemblyBuilder.AddAssemblyReference%2A> Methode.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.Compilation.AssemblyBuilder.AddAssemblyReference(System.Reflection.Assembly)" />
        <altmember cref="P:System.Web.Compilation.BuildProvider.VirtualPathDependencies" />
      </Docs>
    </Member>
    <Member MemberName="RegisterBuildProvider">
      <MemberSignature Language="C#" Value="public static void RegisterBuildProvider (string extension, Type providerType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RegisterBuildProvider(string extension, class System.Type providerType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.BuildProvider.RegisterBuildProvider(System.String,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RegisterBuildProvider (extension As String, providerType As Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RegisterBuildProvider(System::String ^ extension, Type ^ providerType);" />
      <MemberSignature Language="F#" Value="static member RegisterBuildProvider : string * Type -&gt; unit" Usage="System.Web.Compilation.BuildProvider.RegisterBuildProvider (extension, providerType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="extension" Type="System.String" />
        <Parameter Name="providerType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="extension">Die Dateinamenerweiterung, für das der Buildanbieter gilt.</param>
        <param name="providerType">Die Buildanbieterklasse.</param>
        <summary>Registriert einen Buildanbieter.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sie können diese Methode verwenden, zum Registrieren von Buildanbietern, anstatt sie in der Datei "Web.config" definieren. Weitere Informationen zu der Buildanbieter, finden Sie unter den <xref:System.Web.Compilation.BuildProvider> Klasse und [BuildProviders-Element für die Kompilierung ((ASP.NET Einstellungsschema)](https://msdn.microsoft.com/library/40fa889d-5412-487a-b6a9-21eb011c2384).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="VirtualPath">
      <MemberSignature Language="C#" Value="protected internal string VirtualPath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string VirtualPath" />
      <MemberSignature Language="DocId" Value="P:System.Web.Compilation.BuildProvider.VirtualPath" />
      <MemberSignature Language="VB.NET" Value="Protected Friend ReadOnly Property VirtualPath As String" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; property System::String ^ VirtualPath { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.VirtualPath : string" Usage="System.Web.Compilation.BuildProvider.VirtualPath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Stellt die von dieser Buildanbieterimplementierung zu erstellende Datei dar.</summary>
        <value>Eine schreibgeschützte Zeichenfolge, die den virtuellen Pfad einer von diesem Buildanbieter zu kompilierenden Datei angibt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der virtuelle Pfad von einem <xref:System.Web.Compilation.BuildProvider> Objekt ist der Pfad zur Datei, die vom Buildanbieter kompiliert wird. Z. B., wenn Sie eine benutzerdefinierte konfiguriert haben <xref:System.Web.Compilation.BuildProvider> Klasse, um alle Dateien auf der Website mit der benutzerdefinierten Erweiterung der .abc zu erstellen, wenn Ihre Website WebSite1 heißt und die Website Datei example.abc enthält, die <xref:System.Web.Compilation.BuildProvider.VirtualPath%2A> Eigenschaft enthält den Wert `/WebSite1/Example.abc`.  
  
 Die Dateierweiterung der einzelnen Dateien in der Anwendung bestimmt den Dateityp und den entsprechenden Buildanbieter für den Dateityp an. Der ASP.NET-Buildumgebung initialisiert einen <xref:System.Web.Compilation.BuildProvider> Objekt für jede Datei auf den Dateityp basierend, und verwendet die <xref:System.Web.Compilation.BuildProvider> Methoden zum Generieren von Quellcode für jede Datei.  
  
 Weitere Informationen zum Konfigurieren eines Buildanbieters finden Sie unter [BuildProviders-Element für die Kompilierung ((ASP.NET Einstellungsschema)](https://msdn.microsoft.com/library/40fa889d-5412-487a-b6a9-21eb011c2384).  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Hosting.VirtualFile" />
        <altmember cref="P:System.Web.Hosting.VirtualFileBase.VirtualPath" />
      </Docs>
    </Member>
    <Member MemberName="VirtualPathDependencies">
      <MemberSignature Language="C#" Value="public virtual System.Collections.ICollection VirtualPathDependencies { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ICollection VirtualPathDependencies" />
      <MemberSignature Language="DocId" Value="P:System.Web.Compilation.BuildProvider.VirtualPathDependencies" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property VirtualPathDependencies As ICollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::ICollection ^ VirtualPathDependencies { System::Collections::ICollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.VirtualPathDependencies : System.Collections.ICollection" Usage="System.Web.Compilation.BuildProvider.VirtualPathDependencies" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Stellt eine Auflistung von virtuellen Pfaden dar, die erstellt werden muss, bevor der Buildanbieter Code generiert.</summary>
        <value>Eine schreibgeschützte Auflistung von Zeichenfolgen, die die virtuellen Pfade darstellen, von denen diese Instanz des Buildanbieters abhängig ist.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.Compilation.BuildProvider.VirtualPathDependencies%2A> Eigenschaft ist eine Sammlung der virtuellen Pfade, die vor dem kompiliert werden muss, die <xref:System.Web.Compilation.BuildProvider> Instanz generiert. Die Assemblys über die virtuellen Pfade in <xref:System.Web.Compilation.BuildProvider.VirtualPathDependencies%2A> werden hinzugefügt, als Verweise zur Kompilierung für die <xref:System.Web.Compilation.BuildProvider> Instanz.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Hosting.VirtualFile" />
        <altmember cref="P:System.Web.Hosting.VirtualFileBase.VirtualPath" />
      </Docs>
    </Member>
  </Members>
</Type>