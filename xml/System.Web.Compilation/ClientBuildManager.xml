<Type Name="ClientBuildManager" FullName="System.Web.Compilation.ClientBuildManager">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="1aa91df37890b4be6a6dfb2418c7839e6aa062c2" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36405546" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class ClientBuildManager : MarshalByRefObject, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ClientBuildManager extends System.MarshalByRefObject implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Web.Compilation.ClientBuildManager" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ClientBuildManager&#xA;Inherits MarshalByRefObject&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class ClientBuildManager sealed : MarshalByRefObject, IDisposable" />
  <TypeSignature Language="F#" Value="type ClientBuildManager = class&#xA;    inherit MarshalByRefObject&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.MarshalByRefObject</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="e296e-101">Stellt Kompilierungsdienste für die ASP.NET-Anwendungen bereit.</span>
      <span class="sxs-lookup">
        <span data-stu-id="e296e-101">Provides compilation services for ASP.NET applications.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e296e-102">Die <xref:System.Web.Compilation.ClientBuildManager> Klasse bietet Methoden und Eigenschaften zum Kompilieren von ASP.NET-Webanwendungen und zum Abrufen von generierten Assemblys oder Quellcode generiert.</span><span class="sxs-lookup"><span data-stu-id="e296e-102">The <xref:System.Web.Compilation.ClientBuildManager> class offers methods and properties for compiling ASP.NET Web applications, and retrieving the generated assemblies or generated source code.</span></span> <span data-ttu-id="e296e-103">Instanzen der Klasse werden in der Domäne des Clients Anwendung und ermöglichen den Zugriff auf das ASP.NET-Buildsystem außerhalb von Microsoft Internet Information Services (IIS).</span><span class="sxs-lookup"><span data-stu-id="e296e-103">Instances of the class are established in the client's application domain and provide access to the ASP.NET build system outside of Microsoft Internet Information Services (IIS).</span></span> <span data-ttu-id="e296e-104">Die Klasse kann verwendet werden, um benutzerdefinierte Tools zum Kompilieren von Webanwendungen zu entwickeln.</span><span class="sxs-lookup"><span data-stu-id="e296e-104">The class can be used to develop customized tools for compiling Web applications.</span></span>  
  
 <span data-ttu-id="e296e-105">Das Befehlszeilentool `aspnet_compiler` verwendet die <xref:System.Web.Compilation.ClientBuildManager> Klasse.</span><span class="sxs-lookup"><span data-stu-id="e296e-105">The command-line tool `aspnet_compiler` uses the <xref:System.Web.Compilation.ClientBuildManager> class.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.Compilation.BuildManager" />
    <altmember cref="T:System.Web.Compilation.BuildProvider" />
    <altmember cref="T:System.Web.Compilation.AssemblyBuilder" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="e296e-106">Initialisiert eine neue Instanz der <see cref="T:System.Web.Compilation.ClientBuildManager" />-Klasse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e296e-106">Initializes a new instance of the <see cref="T:System.Web.Compilation.ClientBuildManager" /> class.</span>
          </span>
        </summary>
        <altmember cref="T:System.Web.Compilation.BuildManager" />
        <altmember cref="T:System.Web.Compilation.BuildProvider" />
        <altmember cref="T:System.Web.Compilation.AssemblyBuilder" />
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ClientBuildManager (string appVirtualDir, string appPhysicalSourceDir);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string appVirtualDir, string appPhysicalSourceDir) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.ClientBuildManager.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (appVirtualDir As String, appPhysicalSourceDir As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ClientBuildManager(System::String ^ appVirtualDir, System::String ^ appPhysicalSourceDir);" />
      <MemberSignature Language="F#" Value="new System.Web.Compilation.ClientBuildManager : string * string -&gt; System.Web.Compilation.ClientBuildManager" Usage="new System.Web.Compilation.ClientBuildManager (appVirtualDir, appPhysicalSourceDir)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="appVirtualDir" Type="System.String" />
        <Parameter Name="appPhysicalSourceDir" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="appVirtualDir">
          <span data-ttu-id="e296e-107">Der virtuelle Pfad zum Anwendungsstamm.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e296e-107">The virtual path to the application root.</span>
          </span>
        </param>
        <param name="appPhysicalSourceDir">
          <span data-ttu-id="e296e-108">Der physische Pfad zum Anwendungsstamm.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e296e-108">The physical path to the application root.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e296e-109">Initialisiert eine neue Instanz der <see cref="T:System.Web.Compilation.ClientBuildManager" />-Klasse ohne angegebenes Zielverzeichnis oder Vorkompilierungsflags.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e296e-109">Initializes a new instance of the <see cref="T:System.Web.Compilation.ClientBuildManager" /> class without a specified target directory or precompilation flags.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.Compilation.BuildManager" />
        <altmember cref="T:System.Web.Compilation.BuildProvider" />
        <altmember cref="T:System.Web.Compilation.AssemblyBuilder" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ClientBuildManager (string appVirtualDir, string appPhysicalSourceDir, string appPhysicalTargetDir);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string appVirtualDir, string appPhysicalSourceDir, string appPhysicalTargetDir) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.ClientBuildManager.#ctor(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (appVirtualDir As String, appPhysicalSourceDir As String, appPhysicalTargetDir As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ClientBuildManager(System::String ^ appVirtualDir, System::String ^ appPhysicalSourceDir, System::String ^ appPhysicalTargetDir);" />
      <MemberSignature Language="F#" Value="new System.Web.Compilation.ClientBuildManager : string * string * string -&gt; System.Web.Compilation.ClientBuildManager" Usage="new System.Web.Compilation.ClientBuildManager (appVirtualDir, appPhysicalSourceDir, appPhysicalTargetDir)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="appVirtualDir" Type="System.String" />
        <Parameter Name="appPhysicalSourceDir" Type="System.String" />
        <Parameter Name="appPhysicalTargetDir" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="appVirtualDir">
          <span data-ttu-id="e296e-110">Der virtuelle Pfad zum Anwendungsstamm.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e296e-110">The virtual path to the application root.</span>
          </span>
        </param>
        <param name="appPhysicalSourceDir">
          <span data-ttu-id="e296e-111">Der physische Pfad zum Anwendungsstamm.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e296e-111">The physical path to the application root.</span>
          </span>
        </param>
        <param name="appPhysicalTargetDir">
          <span data-ttu-id="e296e-112">Das Zielverzeichnis für die Vorkompilierung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e296e-112">The target directory for precompilation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e296e-113">Initialisiert eine neue Instanz der <see cref="T:System.Web.Compilation.ClientBuildManager" />-Klasse mit dem angegebenen Zielverzeichnis.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e296e-113">Initializes a new instance of the <see cref="T:System.Web.Compilation.ClientBuildManager" /> class with the specified target directory.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e296e-114">Diese Form des Konstruktors wird in der Regel für die Vorkompilierung verwendet, wie ein Vorkompilierung Zielverzeichnis angegeben.</span><span class="sxs-lookup"><span data-stu-id="e296e-114">This form of the constructor is typically used with precompilation, as it specifies a precompilation target directory.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Compilation.BuildManager" />
        <altmember cref="T:System.Web.Compilation.BuildProvider" />
        <altmember cref="T:System.Web.Compilation.AssemblyBuilder" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ClientBuildManager (string appVirtualDir, string appPhysicalSourceDir, string appPhysicalTargetDir, System.Web.Compilation.ClientBuildManagerParameter parameter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string appVirtualDir, string appPhysicalSourceDir, string appPhysicalTargetDir, class System.Web.Compilation.ClientBuildManagerParameter parameter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.ClientBuildManager.#ctor(System.String,System.String,System.String,System.Web.Compilation.ClientBuildManagerParameter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (appVirtualDir As String, appPhysicalSourceDir As String, appPhysicalTargetDir As String, parameter As ClientBuildManagerParameter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ClientBuildManager(System::String ^ appVirtualDir, System::String ^ appPhysicalSourceDir, System::String ^ appPhysicalTargetDir, System::Web::Compilation::ClientBuildManagerParameter ^ parameter);" />
      <MemberSignature Language="F#" Value="new System.Web.Compilation.ClientBuildManager : string * string * string * System.Web.Compilation.ClientBuildManagerParameter -&gt; System.Web.Compilation.ClientBuildManager" Usage="new System.Web.Compilation.ClientBuildManager (appVirtualDir, appPhysicalSourceDir, appPhysicalTargetDir, parameter)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="appVirtualDir" Type="System.String" />
        <Parameter Name="appPhysicalSourceDir" Type="System.String" />
        <Parameter Name="appPhysicalTargetDir" Type="System.String" />
        <Parameter Name="parameter" Type="System.Web.Compilation.ClientBuildManagerParameter" />
      </Parameters>
      <Docs>
        <param name="appVirtualDir">
          <span data-ttu-id="e296e-115">Der virtuelle Pfad zum Anwendungsstamm.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e296e-115">The virtual path to the application root.</span>
          </span>
        </param>
        <param name="appPhysicalSourceDir">
          <span data-ttu-id="e296e-116">Der physische Pfad zum Anwendungsstamm.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e296e-116">The physical path to the application root.</span>
          </span>
        </param>
        <param name="appPhysicalTargetDir">
          <span data-ttu-id="e296e-117">Das Zielverzeichnis für die Vorkompilierung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e296e-117">The target directory for precompilation.</span>
          </span>
        </param>
        <param name="parameter">
          <span data-ttu-id="e296e-118">Werte, durch die das Vorkompilierungsverhalten bestimmt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e296e-118">Values that determine the precompilation behavior.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e296e-119">Initialisiert eine neue Instanz der <see cref="T:System.Web.Compilation.ClientBuildManager" />-Klasse mit dem angegebenen Zielverzeichnis und Kompilierungsparameter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e296e-119">Initializes a new instance of the <see cref="T:System.Web.Compilation.ClientBuildManager" /> class with the specified target directory and compilation parameter.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e296e-120">Diese Form des Konstruktors wird in der Regel für die Vorkompilierung verwendet, wie es gibt eine Vorkompilierung Ziel Verzeichnis und die Vorkompilierung Flags.</span><span class="sxs-lookup"><span data-stu-id="e296e-120">This form of the constructor is typically used with precompilation, as it specifies a precompilation target directory and precompilation flags.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Compilation.BuildManager" />
        <altmember cref="T:System.Web.Compilation.BuildProvider" />
        <altmember cref="T:System.Web.Compilation.AssemblyBuilder" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ClientBuildManager (string appVirtualDir, string appPhysicalSourceDir, string appPhysicalTargetDir, System.Web.Compilation.ClientBuildManagerParameter parameter, System.ComponentModel.TypeDescriptionProvider typeDescriptionProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string appVirtualDir, string appPhysicalSourceDir, string appPhysicalTargetDir, class System.Web.Compilation.ClientBuildManagerParameter parameter, class System.ComponentModel.TypeDescriptionProvider typeDescriptionProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.ClientBuildManager.#ctor(System.String,System.String,System.String,System.Web.Compilation.ClientBuildManagerParameter,System.ComponentModel.TypeDescriptionProvider)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ClientBuildManager(System::String ^ appVirtualDir, System::String ^ appPhysicalSourceDir, System::String ^ appPhysicalTargetDir, System::Web::Compilation::ClientBuildManagerParameter ^ parameter, System::ComponentModel::TypeDescriptionProvider ^ typeDescriptionProvider);" />
      <MemberSignature Language="F#" Value="new System.Web.Compilation.ClientBuildManager : string * string * string * System.Web.Compilation.ClientBuildManagerParameter * System.ComponentModel.TypeDescriptionProvider -&gt; System.Web.Compilation.ClientBuildManager" Usage="new System.Web.Compilation.ClientBuildManager (appVirtualDir, appPhysicalSourceDir, appPhysicalTargetDir, parameter, typeDescriptionProvider)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="appVirtualDir" Type="System.String" />
        <Parameter Name="appPhysicalSourceDir" Type="System.String" />
        <Parameter Name="appPhysicalTargetDir" Type="System.String" />
        <Parameter Name="parameter" Type="System.Web.Compilation.ClientBuildManagerParameter" />
        <Parameter Name="typeDescriptionProvider" Type="System.ComponentModel.TypeDescriptionProvider" />
      </Parameters>
      <Docs>
        <param name="appVirtualDir">
          <span data-ttu-id="e296e-121">Der virtuelle Pfad des Anwendungsstamms.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e296e-121">The virtual path of the application root.</span>
          </span>
        </param>
        <param name="appPhysicalSourceDir">
          <span data-ttu-id="e296e-122">Der physische Pfad des Anwendungsstamms.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e296e-122">The physical path of the application root.</span>
          </span>
        </param>
        <param name="appPhysicalTargetDir">
          <span data-ttu-id="e296e-123">Das Zielverzeichnis für die Vorkompilierung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e296e-123">The target directory for precompilation.</span>
          </span>
        </param>
        <param name="parameter">
          <span data-ttu-id="e296e-124">Werte, durch die das Vorkompilierungsverhalten bestimmt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e296e-124">Values that determine the precompilation behavior.</span>
          </span>
        </param>
        <param name="typeDescriptionProvider">
          <span data-ttu-id="e296e-125">Der zu verwendende Typbeschreibungsanbieter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e296e-125">The type-description provider to use.</span>
          </span>
          <span data-ttu-id="e296e-126">Mit diesem Parameter wird hauptsächlich die Infrastruktur zur Festlegung von Zielversionen in Visual Studio unterstützt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e296e-126">This parameter is primarily used to support the multi-targeting infrastructure in Visual Studio.</span>
          </span>
          <span data-ttu-id="e296e-127">Damit werden Metadaten zu Typen abgerufen, die auf bestimmte Versionen von .NET Framework gefiltert werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e296e-127">It is used to retrieve metadata about types that is filtered for specific versions of the .NET Framework.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e296e-128">Initialisiert eine neue Instanz der <see cref="T:System.Web.Compilation.ClientBuildManager" />-Klasse mit dem angegebenen virtuellen Verzeichnis, Quellverzeichnis, Zielverzeichnis, Kompilierungsparameter und Typbeschreibungsanbieter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e296e-128">Initializes a new instance of the <see cref="T:System.Web.Compilation.ClientBuildManager" /> class by using the specified virtual directory, source directory, target directory, compilation parameter, and type-description provider.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AppDomainShutdown">
      <MemberSignature Language="C#" Value="public event System.Web.Compilation.BuildManagerHostUnloadEventHandler AppDomainShutdown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.Compilation.BuildManagerHostUnloadEventHandler AppDomainShutdown" />
      <MemberSignature Language="DocId" Value="E:System.Web.Compilation.ClientBuildManager.AppDomainShutdown" />
      <MemberSignature Language="VB.NET" Value="Public Event AppDomainShutdown As BuildManagerHostUnloadEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::Compilation::BuildManagerHostUnloadEventHandler ^ AppDomainShutdown;" />
      <MemberSignature Language="F#" Value="member this.AppDomainShutdown : System.Web.Compilation.BuildManagerHostUnloadEventHandler " Usage="member this.AppDomainShutdown : System.Web.Compilation.BuildManagerHostUnloadEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Compilation.BuildManagerHostUnloadEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e296e-129">Tritt ein, wenn eine Anwendungsdomäne geschlossen wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e296e-129">Occurs when an application domain is shut down.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.Compilation.BuildManager" />
        <altmember cref="T:System.Web.Compilation.BuildProvider" />
        <altmember cref="T:System.Web.Compilation.AssemblyBuilder" />
      </Docs>
    </Member>
    <Member MemberName="AppDomainStarted">
      <MemberSignature Language="C#" Value="public event EventHandler AppDomainStarted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler AppDomainStarted" />
      <MemberSignature Language="DocId" Value="E:System.Web.Compilation.ClientBuildManager.AppDomainStarted" />
      <MemberSignature Language="VB.NET" Value="Public Event AppDomainStarted As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ AppDomainStarted;" />
      <MemberSignature Language="F#" Value="member this.AppDomainStarted : EventHandler " Usage="member this.AppDomainStarted : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e296e-130">Tritt ein, wenn eine Anwendungsdomäne gestartet wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e296e-130">Occurs when an application domain is started.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.Compilation.BuildManager" />
        <altmember cref="T:System.Web.Compilation.BuildProvider" />
        <altmember cref="T:System.Web.Compilation.AssemblyBuilder" />
      </Docs>
    </Member>
    <Member MemberName="AppDomainUnloaded">
      <MemberSignature Language="C#" Value="public event System.Web.Compilation.BuildManagerHostUnloadEventHandler AppDomainUnloaded;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.Compilation.BuildManagerHostUnloadEventHandler AppDomainUnloaded" />
      <MemberSignature Language="DocId" Value="E:System.Web.Compilation.ClientBuildManager.AppDomainUnloaded" />
      <MemberSignature Language="VB.NET" Value="Public Event AppDomainUnloaded As BuildManagerHostUnloadEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::Compilation::BuildManagerHostUnloadEventHandler ^ AppDomainUnloaded;" />
      <MemberSignature Language="F#" Value="member this.AppDomainUnloaded : System.Web.Compilation.BuildManagerHostUnloadEventHandler " Usage="member this.AppDomainUnloaded : System.Web.Compilation.BuildManagerHostUnloadEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Compilation.BuildManagerHostUnloadEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e296e-131">Tritt ein, wenn eine Anwendungsdomäne entladen wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e296e-131">Occurs when an application domain is unloaded.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.Compilation.BuildManager" />
        <altmember cref="T:System.Web.Compilation.BuildProvider" />
        <altmember cref="T:System.Web.Compilation.AssemblyBuilder" />
      </Docs>
    </Member>
    <Member MemberName="CodeGenDir">
      <MemberSignature Language="C#" Value="public string CodeGenDir { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CodeGenDir" />
      <MemberSignature Language="DocId" Value="P:System.Web.Compilation.ClientBuildManager.CodeGenDir" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CodeGenDir As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CodeGenDir { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CodeGenDir : string" Usage="System.Web.Compilation.ClientBuildManager.CodeGenDir" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e296e-132">Ruft den physischen Pfad zum für die Codegenerierung verwendeten Verzeichnis ab.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e296e-132">Gets the physical path to the directory used for code generation.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e296e-133">Ein <see cref="T:System.String" />, der den für die Codegenerierung verwendeten Verzeichnispfad enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e296e-133">A <see cref="T:System.String" /> containing the directory path used for code generation.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e296e-134">Das Verzeichnis für die codegenerierung ist in der Regel in das temporäre Verzeichnis für ASP.NET.</span><span class="sxs-lookup"><span data-stu-id="e296e-134">The directory for code generation is typically in the temporary ASP.NET files directory.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Compilation.BuildManager" />
        <altmember cref="T:System.Web.Compilation.BuildProvider" />
        <altmember cref="T:System.Web.Compilation.AssemblyBuilder" />
      </Docs>
    </Member>
    <Member MemberName="CompileApplicationDependencies">
      <MemberSignature Language="C#" Value="public void CompileApplicationDependencies ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CompileApplicationDependencies() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.ClientBuildManager.CompileApplicationDependencies" />
      <MemberSignature Language="VB.NET" Value="Public Sub CompileApplicationDependencies ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CompileApplicationDependencies();" />
      <MemberSignature Language="F#" Value="member this.CompileApplicationDependencies : unit -&gt; unit" Usage="clientBuildManager.CompileApplicationDependencies " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e296e-135">Kompiliert anwendungsabhängige Dateien, z. B. Dateien im Verzeichnis App_Code, die Datei Global.asax, Ressourcendateien und Webverweise.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e296e-135">Compiles application-dependent files, such as files in the App_Code directory, the Global.asax file, resource files, and Web references.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e296e-136">Die <xref:System.Web.Compilation.ClientBuildManager.CompileApplicationDependencies%2A> Methode wird sichergestellt, dass Ressourcen, Verweise, Dateien im Verzeichnis App_Code, Browser-Dateien im Verzeichnis App_Browsers und die Datei "Global.asax" kompiliert werden.</span><span class="sxs-lookup"><span data-stu-id="e296e-136">The <xref:System.Web.Compilation.ClientBuildManager.CompileApplicationDependencies%2A> method ensures that resources, Web references, files in the App_Code directory, .browser files in the App_Browsers directory, and the Global.asax file are compiled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Compilation.BuildManager" />
        <altmember cref="T:System.Web.Compilation.BuildProvider" />
        <altmember cref="T:System.Web.Compilation.AssemblyBuilder" />
      </Docs>
    </Member>
    <MemberGroup MemberName="CompileFile">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="e296e-137">Kompiliert die durch den virtuellen Pfad dargestellte Datei.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e296e-137">Compiles the file represented by the virtual path.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CompileFile">
      <MemberSignature Language="C#" Value="public void CompileFile (string virtualPath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CompileFile(string virtualPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.ClientBuildManager.CompileFile(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CompileFile (virtualPath As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CompileFile(System::String ^ virtualPath);" />
      <MemberSignature Language="F#" Value="member this.CompileFile : string -&gt; unit" Usage="clientBuildManager.CompileFile virtualPath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="virtualPath">
          <span data-ttu-id="e296e-138">Der Pfad zu der zu kompilierenden Datei.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e296e-138">The path to the file to be compiled.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e296e-139">Kompiliert die durch den virtuellen Pfad dargestellte Datei.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e296e-139">Compiles the file represented by the virtual path.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.Compilation.BuildManager" />
        <altmember cref="T:System.Web.Compilation.BuildProvider" />
        <altmember cref="T:System.Web.Compilation.AssemblyBuilder" />
      </Docs>
    </Member>
    <Member MemberName="CompileFile">
      <MemberSignature Language="C#" Value="public void CompileFile (string virtualPath, System.Web.Compilation.ClientBuildManagerCallback callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CompileFile(string virtualPath, class System.Web.Compilation.ClientBuildManagerCallback callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.ClientBuildManager.CompileFile(System.String,System.Web.Compilation.ClientBuildManagerCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CompileFile (virtualPath As String, callback As ClientBuildManagerCallback)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CompileFile(System::String ^ virtualPath, System::Web::Compilation::ClientBuildManagerCallback ^ callback);" />
      <MemberSignature Language="F#" Value="member this.CompileFile : string * System.Web.Compilation.ClientBuildManagerCallback -&gt; unit" Usage="clientBuildManager.CompileFile (virtualPath, callback)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
        <Parameter Name="callback" Type="System.Web.Compilation.ClientBuildManagerCallback" />
      </Parameters>
      <Docs>
        <param name="virtualPath">
          <span data-ttu-id="e296e-140">Der Pfad zu der zu kompilierenden Datei.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e296e-140">The path to the file to be compiled.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="e296e-141">Das Objekt zum Empfangen von Statusinformationen der Kompilierung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e296e-141">The object to receive status information from compilation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e296e-142">Kompiliert die durch den virtuellen Pfad dargestellte Datei und stellt eine Rückrufklasse zum Empfangen von Statusinformationen über den Build bereit.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e296e-142">Compiles the file represented by the virtual path and provides a callback class to receive status information about the build.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e296e-143">
            <paramref name="virtualPath" /> ist NULL.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e296e-143">
              <paramref name="virtualPath" /> is null.</span>
          </span>
        </exception>
        <altmember cref="T:System.Web.Compilation.BuildManager" />
        <altmember cref="T:System.Web.Compilation.BuildProvider" />
        <altmember cref="T:System.Web.Compilation.AssemblyBuilder" />
      </Docs>
    </Member>
    <Member MemberName="CreateObject">
      <MemberSignature Language="C#" Value="public System.Web.Hosting.IRegisteredObject CreateObject (Type type, bool failIfExists);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.Hosting.IRegisteredObject CreateObject(class System.Type type, bool failIfExists) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.ClientBuildManager.CreateObject(System.Type,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::Hosting::IRegisteredObject ^ CreateObject(Type ^ type, bool failIfExists);" />
      <MemberSignature Language="F#" Value="member this.CreateObject : Type * bool -&gt; System.Web.Hosting.IRegisteredObject" Usage="clientBuildManager.CreateObject (type, failIfExists)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Hosting.IRegisteredObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="failIfExists" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="e296e-144">Der Typ des zu erstellenden Objekts.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e296e-144">The type of object to be created.</span>
          </span>
        </param>
        <param name="failIfExists">
          <span data-ttu-id="e296e-145">
            <see langword="true" />, wenn eine Ausnahme ausgelöst werden soll, wenn das Objekt bereits in der Anwendungsdomäne der ASP.NET-Laufzeit erstellt wurde, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e296e-145">
              <see langword="true" /> to throw an exception if the object has already been created in the application domain of the ASP.NET runtime; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e296e-146">Erstellt ein Objekt in der Anwendungsdomäne der ASP.NET-Laufzeit.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e296e-146">Creates an object in the application domain of the ASP.NET runtime.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e296e-147">Ein Objekt in der Anwendungsdomäne der ASP.NET-Laufzeit.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e296e-147">An object in the application domain of the ASP.NET runtime.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e296e-148">
            <paramref name="type" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e296e-148">
              <paramref name="type" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="e296e-149">Das Objekt ist bereits in der Anwendungsdomäne vorhanden, und <paramref name="failIfExists" /> ist <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e296e-149">The object already exists in the application domain and <paramref name="failIfExists" /> is <see langword="true" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Web.Compilation.BuildProvider" />
        <altmember cref="T:System.Web.Compilation.AssemblyBuilder" />
      </Docs>
    </Member>
    <Member MemberName="GenerateCode">
      <MemberSignature Language="C#" Value="public string GenerateCode (string virtualPath, string virtualFileString, out System.Collections.IDictionary linePragmasTable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GenerateCode(string virtualPath, string virtualFileString, [out] class System.Collections.IDictionary&amp; linePragmasTable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.ClientBuildManager.GenerateCode(System.String,System.String,System.Collections.IDictionary@)" />
      <MemberSignature Language="VB.NET" Value="Public Function GenerateCode (virtualPath As String, virtualFileString As String, ByRef linePragmasTable As IDictionary) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GenerateCode(System::String ^ virtualPath, System::String ^ virtualFileString, [Runtime::InteropServices::Out] System::Collections::IDictionary ^ % linePragmasTable);" />
      <MemberSignature Language="F#" Value="member this.GenerateCode : string * string *  -&gt; string" Usage="clientBuildManager.GenerateCode (virtualPath, virtualFileString, linePragmasTable)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
        <Parameter Name="virtualFileString" Type="System.String" />
        <Parameter Name="linePragmasTable" Type="System.Collections.IDictionary&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="virtualPath">
          <span data-ttu-id="e296e-150">Der virtuelle Pfad zur Datei.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e296e-150">The virtual path to the file.</span>
          </span>
        </param>
        <param name="virtualFileString">
          <span data-ttu-id="e296e-151">Der Inhalt der Datei.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e296e-151">The contents of the file.</span>
          </span>
        </param>
        <param name="linePragmasTable">
          <span data-ttu-id="e296e-152">Diese Methode gibt ein Wörterbuch mit Zeilenpragmas zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e296e-152">When this method returns, contains a dictionary of line pragmas.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e296e-153">Generiert Code aus dem Inhalt einer Datei.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e296e-153">Generates code from the contents of a file.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e296e-154">Ein <see cref="T:System.String" />, der den generierten Code enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e296e-154">A <see cref="T:System.String" /> containing the generated code.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e296e-155">
            <paramref name="virtualPath" /> ist NULL.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e296e-155">
              <paramref name="virtualPath" /> is null.</span>
          </span>
        </exception>
        <altmember cref="T:System.Web.Compilation.BuildManager" />
        <altmember cref="T:System.Web.Compilation.BuildProvider" />
        <altmember cref="T:System.Web.Compilation.AssemblyBuilder" />
        <altmember cref="T:System.Web.Compilation.LinePragmaCodeInfo" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GenerateCodeCompileUnit">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="e296e-156">Gibt die CodeDOM-Struktur, den Compilertyp und die Compilerparameter für eine durch einen virtuellen Pfad dargestellte Datei zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e296e-156">Returns the codeDOM tree, compiler type, and compiler parameters for a file represented by a virtual path.</span>
          </span>
        </summary>
        <altmember cref="T:System.Web.Compilation.BuildManager" />
        <altmember cref="T:System.Web.Compilation.BuildProvider" />
        <altmember cref="T:System.Web.Compilation.AssemblyBuilder" />
      </Docs>
    </MemberGroup>
    <Member MemberName="GenerateCodeCompileUnit">
      <MemberSignature Language="C#" Value="public System.CodeDom.CodeCompileUnit GenerateCodeCompileUnit (string virtualPath, out Type codeDomProviderType, out System.CodeDom.Compiler.CompilerParameters compilerParameters, out System.Collections.IDictionary linePragmasTable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.CodeDom.CodeCompileUnit GenerateCodeCompileUnit(string virtualPath, [out] class System.Type&amp; codeDomProviderType, [out] class System.CodeDom.Compiler.CompilerParameters&amp; compilerParameters, [out] class System.Collections.IDictionary&amp; linePragmasTable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.ClientBuildManager.GenerateCodeCompileUnit(System.String,System.Type@,System.CodeDom.Compiler.CompilerParameters@,System.Collections.IDictionary@)" />
      <MemberSignature Language="VB.NET" Value="Public Function GenerateCodeCompileUnit (virtualPath As String, ByRef codeDomProviderType As Type, ByRef compilerParameters As CompilerParameters, ByRef linePragmasTable As IDictionary) As CodeCompileUnit" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::CodeDom::CodeCompileUnit ^ GenerateCodeCompileUnit(System::String ^ virtualPath, [Runtime::InteropServices::Out] Type ^ % codeDomProviderType, [Runtime::InteropServices::Out] System::CodeDom::Compiler::CompilerParameters ^ % compilerParameters, [Runtime::InteropServices::Out] System::Collections::IDictionary ^ % linePragmasTable);" />
      <MemberSignature Language="F#" Value="member this.GenerateCodeCompileUnit : string *  *  *  -&gt; System.CodeDom.CodeCompileUnit" Usage="clientBuildManager.GenerateCodeCompileUnit (virtualPath, codeDomProviderType, compilerParameters, linePragmasTable)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeCompileUnit</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
        <Parameter Name="codeDomProviderType" Type="System.Type&amp;" RefType="out" />
        <Parameter Name="compilerParameters" Type="System.CodeDom.Compiler.CompilerParameters&amp;" RefType="out" />
        <Parameter Name="linePragmasTable" Type="System.Collections.IDictionary&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="virtualPath">
          <span data-ttu-id="e296e-157">Der virtuelle Pfad zur Datei.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e296e-157">The virtual path to the file.</span>
          </span>
        </param>
        <param name="codeDomProviderType">
          <span data-ttu-id="e296e-158">Diese Methode gibt den für die Codegenerierung und die Kompilierung verwendeten CodeDOM-Anbietertyp zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e296e-158">When this method returns, contains the codeDOM provider type used for code generation and compilation.</span>
          </span>
        </param>
        <param name="compilerParameters">
          <span data-ttu-id="e296e-159">Diese Methode gibt Eigenschaften zurück, die definieren, wie die Datei kompiliert wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e296e-159">When this method returns, contains the properties that define how the file will be compiled.</span>
          </span>
        </param>
        <param name="linePragmasTable">
          <span data-ttu-id="e296e-160">Diese Methode gibt ein Wörterbuch mit Zeilenpragmas zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e296e-160">When this method returns, contains a dictionary of line pragmas.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e296e-161">Gibt die CodeDOM-Struktur, den Compilertyp und die Compilerparameter für eine durch einen virtuellen Pfad dargestellte Datei zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e296e-161">Returns the codeDOM tree, compiler type, and compiler parameters for a file represented by a virtual path.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e296e-162">Eine <see cref="T:System.CodeDom.CodeCompileUnit" /> für die angegebene Datei.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e296e-162">A <see cref="T:System.CodeDom.CodeCompileUnit" /> for the given file.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e296e-163">Die <xref:System.Web.Compilation.ClientBuildManager.GenerateCodeCompileUnit%2A> Methode ruft Informationen zum Kompilieren einer Datei ab.</span><span class="sxs-lookup"><span data-stu-id="e296e-163">The <xref:System.Web.Compilation.ClientBuildManager.GenerateCodeCompileUnit%2A> method retrieves information needed to compile a file.</span></span> <span data-ttu-id="e296e-164">Zusätzlich zu einer <xref:System.CodeDom.CodeCompileUnit> Objekt als Rückgabewert, es gibt drei `out` Parameter.</span><span class="sxs-lookup"><span data-stu-id="e296e-164">In addition to a <xref:System.CodeDom.CodeCompileUnit> object as a return value, it returns three `out` parameters.</span></span> <span data-ttu-id="e296e-165">Die `codeDomProviderType` Parameter gibt den Anbietertyp zum Generieren und Kompilieren die Datei.</span><span class="sxs-lookup"><span data-stu-id="e296e-165">The `codeDomProviderType` parameter returns the provider type for generating and compiling the file.</span></span> <span data-ttu-id="e296e-166">Die `compilerParameters` Parameter enthält Eigenschaften, die Kompilierungsverhalten zu bestimmen.</span><span class="sxs-lookup"><span data-stu-id="e296e-166">The `compilerParameters` parameter contains properties that determine compilation behavior.</span></span> <span data-ttu-id="e296e-167">Die `linePragmasTable` Parameter enthält ein Wörterbuch mit Zeilenpragmas.</span><span class="sxs-lookup"><span data-stu-id="e296e-167">The `linePragmasTable` parameter contains a dictionary of line pragmas.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Compilation.BuildManager" />
        <altmember cref="T:System.Web.Compilation.BuildProvider" />
        <altmember cref="T:System.Web.Compilation.AssemblyBuilder" />
        <altmember cref="T:System.Web.Compilation.LinePragmaCodeInfo" />
      </Docs>
    </Member>
    <Member MemberName="GenerateCodeCompileUnit">
      <MemberSignature Language="C#" Value="public System.CodeDom.CodeCompileUnit GenerateCodeCompileUnit (string virtualPath, string virtualFileString, out Type codeDomProviderType, out System.CodeDom.Compiler.CompilerParameters compilerParameters, out System.Collections.IDictionary linePragmasTable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.CodeDom.CodeCompileUnit GenerateCodeCompileUnit(string virtualPath, string virtualFileString, [out] class System.Type&amp; codeDomProviderType, [out] class System.CodeDom.Compiler.CompilerParameters&amp; compilerParameters, [out] class System.Collections.IDictionary&amp; linePragmasTable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.ClientBuildManager.GenerateCodeCompileUnit(System.String,System.String,System.Type@,System.CodeDom.Compiler.CompilerParameters@,System.Collections.IDictionary@)" />
      <MemberSignature Language="VB.NET" Value="Public Function GenerateCodeCompileUnit (virtualPath As String, virtualFileString As String, ByRef codeDomProviderType As Type, ByRef compilerParameters As CompilerParameters, ByRef linePragmasTable As IDictionary) As CodeCompileUnit" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::CodeDom::CodeCompileUnit ^ GenerateCodeCompileUnit(System::String ^ virtualPath, System::String ^ virtualFileString, [Runtime::InteropServices::Out] Type ^ % codeDomProviderType, [Runtime::InteropServices::Out] System::CodeDom::Compiler::CompilerParameters ^ % compilerParameters, [Runtime::InteropServices::Out] System::Collections::IDictionary ^ % linePragmasTable);" />
      <MemberSignature Language="F#" Value="member this.GenerateCodeCompileUnit : string * string *  *  *  -&gt; System.CodeDom.CodeCompileUnit" Usage="clientBuildManager.GenerateCodeCompileUnit (virtualPath, virtualFileString, codeDomProviderType, compilerParameters, linePragmasTable)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeCompileUnit</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
        <Parameter Name="virtualFileString" Type="System.String" />
        <Parameter Name="codeDomProviderType" Type="System.Type&amp;" RefType="out" />
        <Parameter Name="compilerParameters" Type="System.CodeDom.Compiler.CompilerParameters&amp;" RefType="out" />
        <Parameter Name="linePragmasTable" Type="System.Collections.IDictionary&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="virtualPath">
          <span data-ttu-id="e296e-168">Der virtuelle Pfad zur Datei.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e296e-168">The virtual path to the file.</span>
          </span>
        </param>
        <param name="virtualFileString">
          <span data-ttu-id="e296e-169">Der Inhalt der durch den <c>virtualPath</c>-Parameter dargestellten Datei.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e296e-169">The contents of the file represented by the <c>virtualPath</c> parameter.</span>
          </span>
        </param>
        <param name="codeDomProviderType">
          <span data-ttu-id="e296e-170">Diese Methode gibt den für die Codegenerierung und die Kompilierung verwendeten CodeDOM-Anbietertyp zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e296e-170">When this method returns, contains the codeDOM provider type used for code generation and compilation.</span>
          </span>
        </param>
        <param name="compilerParameters">
          <span data-ttu-id="e296e-171">Diese Methode gibt die Eigenschaften zurück, die definieren, wie die durch den <c>virtualPath</c>-Parameter dargestellte Datei kompiliert wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e296e-171">When this method returns, contains the properties that define how the file represented by the <c>virtualPath</c> parameter will be compiled.</span>
          </span>
        </param>
        <param name="linePragmasTable">
          <span data-ttu-id="e296e-172">Diese Methode gibt ein Wörterbuch mit Zeilenpragmas zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e296e-172">When this method returns, contains a dictionary of line pragmas.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e296e-173">Gibt den Inhalt, die CodeDOM-Struktur, den Compilertyp und die Compilerparameter für eine durch einen virtuellen Pfad dargestellte Datei zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e296e-173">Returns the contents, codeDOM tree, compiler type, and compiler parameters for a file represented by a virtual path.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e296e-174">Eine <see cref="T:System.CodeDom.CodeCompileUnit" /> für die angegebene Datei.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e296e-174">A <see cref="T:System.CodeDom.CodeCompileUnit" /> for the given file.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e296e-175">Die <xref:System.Web.Compilation.ClientBuildManager.GenerateCodeCompileUnit%2A> Methode ruft Informationen zum Kompilieren einer Datei ab.</span><span class="sxs-lookup"><span data-stu-id="e296e-175">The <xref:System.Web.Compilation.ClientBuildManager.GenerateCodeCompileUnit%2A> method retrieves information needed to compile a file.</span></span> <span data-ttu-id="e296e-176">Zusätzlich zu einer <xref:System.CodeDom.CodeCompileUnit> Objekt als Rückgabewert, es gibt drei `out` Parameter.</span><span class="sxs-lookup"><span data-stu-id="e296e-176">In addition to a <xref:System.CodeDom.CodeCompileUnit> object as a return value, it returns three `out` parameters.</span></span> <span data-ttu-id="e296e-177">Die `codeDomProviderType` Parameter gibt den Anbietertyp zum Generieren und Kompilieren die Datei.</span><span class="sxs-lookup"><span data-stu-id="e296e-177">The `codeDomProviderType` parameter returns the provider type for generating and compiling the file.</span></span> <span data-ttu-id="e296e-178">Die `compilerParameters` Parameter enthält Eigenschaften, die Kompilierungsverhalten zu bestimmen.</span><span class="sxs-lookup"><span data-stu-id="e296e-178">The `compilerParameters` parameter contains properties that determine compilation behavior.</span></span> <span data-ttu-id="e296e-179">Die `linePragmasTable` Parameter enthält ein Wörterbuch mit Zeilenpragmas.</span><span class="sxs-lookup"><span data-stu-id="e296e-179">The `linePragmasTable` parameter contains a dictionary of line pragmas.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e296e-180">
            <paramref name="virtualPath" /> ist NULL.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e296e-180">
              <paramref name="virtualPath" /> is null.</span>
          </span>
        </exception>
        <altmember cref="T:System.Web.Compilation.BuildManager" />
        <altmember cref="T:System.Web.Compilation.BuildProvider" />
        <altmember cref="T:System.Web.Compilation.AssemblyBuilder" />
        <altmember cref="T:System.Web.Compilation.LinePragmaCodeInfo" />
      </Docs>
    </Member>
    <Member MemberName="GetAppDomainShutdownDirectories">
      <MemberSignature Language="C#" Value="public string[] GetAppDomainShutdownDirectories ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string[] GetAppDomainShutdownDirectories() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.ClientBuildManager.GetAppDomainShutdownDirectories" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAppDomainShutdownDirectories () As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::String ^&gt; ^ GetAppDomainShutdownDirectories();" />
      <MemberSignature Language="F#" Value="member this.GetAppDomainShutdownDirectories : unit -&gt; string[]" Usage="clientBuildManager.GetAppDomainShutdownDirectories " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e296e-181">Ruft die Verzeichnisse mit Dateien ab, die bei einer Änderung zum Schließen der Anwendungsdomäne führen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e296e-181">Gets the directories with files that, when changed, cause the application domain to shut down.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e296e-182">Ein <see cref="T:System.String" />-Array, das die Verzeichnisnamen der obersten Ebene enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e296e-182">A <see cref="T:System.String" /> array containing the top-level directory names.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e296e-183">Änderungen an Dateien in bestimmten übergeordneten Verzeichnissen dazu führen, dass die Anwendungsdomäne beendet wird.</span><span class="sxs-lookup"><span data-stu-id="e296e-183">Changes to files in specific top-level directories cause the application domain to shut down.</span></span> <span data-ttu-id="e296e-184">Dateien in der "bin", App_Code Global_Resources, Webverweise und App_Browsers Verzeichnisse werden überwacht, um die Änderungen zu erkennen.</span><span class="sxs-lookup"><span data-stu-id="e296e-184">Files within the Bin, App_Code, Global_Resources, Web References, and App_Browsers directories are monitored to detect any changes.</span></span> <span data-ttu-id="e296e-185">Wenn Änderungen erkannt werden, wird die Anwendungsdomäne heruntergefahren.</span><span class="sxs-lookup"><span data-stu-id="e296e-185">When changes are detected, the application domain is shut down.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Compilation.BuildProvider" />
        <altmember cref="T:System.Web.Compilation.AssemblyBuilder" />
      </Docs>
    </Member>
    <Member MemberName="GetBrowserDefinitions">
      <MemberSignature Language="C#" Value="public System.Collections.IDictionary GetBrowserDefinitions ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.IDictionary GetBrowserDefinitions() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.ClientBuildManager.GetBrowserDefinitions" />
      <MemberSignature Language="VB.NET" Value="Public Function GetBrowserDefinitions () As IDictionary" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::IDictionary ^ GetBrowserDefinitions();" />
      <MemberSignature Language="F#" Value="member this.GetBrowserDefinitions : unit -&gt; System.Collections.IDictionary" Usage="clientBuildManager.GetBrowserDefinitions " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IDictionary</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e296e-186">Ruft eine Auflistung der Browserelemente ab.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e296e-186">Gets a collection of browser elements.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e296e-187">Ein <see cref="T:System.Collections.IDictionary" />, das Browserelemente enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e296e-187">An <see cref="T:System.Collections.IDictionary" /> containing browser elements.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e296e-188">Die <xref:System.Collections.IDictionary> Objekt enthält die Browsernamen für den Schlüssel und <xref:System.Web.UI.Triplet> Objekte für die Werte.</span><span class="sxs-lookup"><span data-stu-id="e296e-188">The <xref:System.Collections.IDictionary> object contains browser names for the keys and <xref:System.Web.UI.Triplet> objects for the values.</span></span> <span data-ttu-id="e296e-189">Die <xref:System.Web.UI.Triplet> Objekte jeweils den Namen des übergeordneten Browserelements, eine Beschreibung und die Tiefe des Browserelements in der Struktur enthalten.</span><span class="sxs-lookup"><span data-stu-id="e296e-189">The <xref:System.Web.UI.Triplet> objects each contain the name of the parent browser element, a description, and the depth of the browser element in the tree.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Configuration.BrowserCapabilitiesFactory" />
        <altmember cref="T:System.Web.Compilation.BuildProvider" />
        <altmember cref="T:System.Web.Compilation.AssemblyBuilder" />
      </Docs>
    </Member>
    <Member MemberName="GetCodeDirectoryInformation">
      <MemberSignature Language="C#" Value="public void GetCodeDirectoryInformation (string virtualCodeDir, out Type codeDomProviderType, out System.CodeDom.Compiler.CompilerParameters compilerParameters, out string generatedFilesDir);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void GetCodeDirectoryInformation(string virtualCodeDir, [out] class System.Type&amp; codeDomProviderType, [out] class System.CodeDom.Compiler.CompilerParameters&amp; compilerParameters, [out] string&amp; generatedFilesDir) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.ClientBuildManager.GetCodeDirectoryInformation(System.String,System.Type@,System.CodeDom.Compiler.CompilerParameters@,System.String@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetCodeDirectoryInformation (virtualCodeDir As String, ByRef codeDomProviderType As Type, ByRef compilerParameters As CompilerParameters, ByRef generatedFilesDir As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GetCodeDirectoryInformation(System::String ^ virtualCodeDir, [Runtime::InteropServices::Out] Type ^ % codeDomProviderType, [Runtime::InteropServices::Out] System::CodeDom::Compiler::CompilerParameters ^ % compilerParameters, [Runtime::InteropServices::Out] System::String ^ % generatedFilesDir);" />
      <MemberSignature Language="F#" Value="member this.GetCodeDirectoryInformation : string *  *  *  -&gt; unit" Usage="clientBuildManager.GetCodeDirectoryInformation (virtualCodeDir, codeDomProviderType, compilerParameters, generatedFilesDir)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualCodeDir" Type="System.String" />
        <Parameter Name="codeDomProviderType" Type="System.Type&amp;" RefType="out" />
        <Parameter Name="compilerParameters" Type="System.CodeDom.Compiler.CompilerParameters&amp;" RefType="out" />
        <Parameter Name="generatedFilesDir" Type="System.String&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="virtualCodeDir">
          <span data-ttu-id="e296e-190">Das Verzeichnis, zu dem Informationen abgerufen werden sollen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e296e-190">The directory about which to retrieve information.</span>
          </span>
        </param>
        <param name="codeDomProviderType">
          <span data-ttu-id="e296e-191">Diese Methode gibt den für die Codegenerierung und die Kompilierung verwendeten Anbietertyp zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e296e-191">When this method returns, contains the provider type used for code generation and compilation.</span>
          </span>
        </param>
        <param name="compilerParameters">
          <span data-ttu-id="e296e-192">Diese Methode gibt Eigenschaften zurück, die definieren, wie die Datei kompiliert wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e296e-192">When this method returns, contains the properties that define how the file will be compiled.</span>
          </span>
        </param>
        <param name="generatedFilesDir">
          <span data-ttu-id="e296e-193">Diese Methode gibt das Verzeichnis für aus Nicht-Codedateien generierte Dateien zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e296e-193">When this method returns, contains the directory for files generated from non-code files.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e296e-194">Ruft Informationen über den Compilertyp, Compilerparameter und das Verzeichnis ab, in dem aus Nicht-Codedateien (z. B. WSDL-Dateien) generierte Codedateien gespeichert werden sollen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e296e-194">Gets information about the compiler type, compiler parameters, and the directory in which to store code files generated from non-code files such as .wsdl files.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e296e-195">Die <xref:System.Web.Compilation.ClientBuildManager.GetCodeDirectoryInformation%2A> -Methode ruft Informationen zum Erstellen eines Codeverzeichnisses ab.</span><span class="sxs-lookup"><span data-stu-id="e296e-195">The <xref:System.Web.Compilation.ClientBuildManager.GetCodeDirectoryInformation%2A> method retrieves information needed to build a code directory.</span></span> <span data-ttu-id="e296e-196">Es gibt diese Informationen durch drei `out` Parameter.</span><span class="sxs-lookup"><span data-stu-id="e296e-196">It returns this information through three `out` parameters.</span></span> <span data-ttu-id="e296e-197">Die `codeDomProviderType` Parameter gibt den Anbietertyp zum Generieren und Kompilieren die Dateien im Codeverzeichnis zurück.</span><span class="sxs-lookup"><span data-stu-id="e296e-197">The `codeDomProviderType` parameter returns the provider type for generating and compiling the files in the code directory.</span></span> <span data-ttu-id="e296e-198">Die `compilerParameters` Parameter enthält Eigenschaften, die Kompilierungsverhalten zu bestimmen.</span><span class="sxs-lookup"><span data-stu-id="e296e-198">The `compilerParameters` parameter contains properties that determine compilation behavior.</span></span> <span data-ttu-id="e296e-199">Die `generatedFilesDir` Parameter speichert den Pfad zum Verzeichnis mit der alle von Dateien im Codeverzeichnis z. B. WSDL-Dateien ohne Code generierten Codedateien.</span><span class="sxs-lookup"><span data-stu-id="e296e-199">The `generatedFilesDir` parameter stores the directory path containing all the code files generated from non-code files in the code directory, such as .wsdl files.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e296e-200">
            <paramref name="virtualCodeDir" /> ist NULL.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e296e-200">
              <paramref name="virtualCodeDir" /> is null.</span>
          </span>
        </exception>
        <altmember cref="T:System.Web.Compilation.BuildManager" />
        <altmember cref="T:System.Web.Compilation.BuildProvider" />
        <altmember cref="T:System.Web.Compilation.AssemblyBuilder" />
      </Docs>
    </Member>
    <Member MemberName="GetCompiledType">
      <MemberSignature Language="C#" Value="public Type GetCompiledType (string virtualPath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Type GetCompiledType(string virtualPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.ClientBuildManager.GetCompiledType(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCompiledType (virtualPath As String) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Type ^ GetCompiledType(System::String ^ virtualPath);" />
      <MemberSignature Language="F#" Value="member this.GetCompiledType : string -&gt; Type" Usage="clientBuildManager.GetCompiledType virtualPath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="virtualPath">
          <span data-ttu-id="e296e-201">Der virtuelle Pfad der zu kompilierenden Datei.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e296e-201">The virtual path of the file to compile.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e296e-202">Kompiliert die durch den virtuellen Pfad dargestellte Datei und gibt ihren kompilierten Typ zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e296e-202">Compiles the file represented by the virtual path and returns its compiled type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e296e-203">Der <see cref="T:System.Type" /> der kompilierten Datei.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e296e-203">The <see cref="T:System.Type" /> of the compiled file.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e296e-204">
            <paramref name="virtualPath" /> ist NULL.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e296e-204">
              <paramref name="virtualPath" /> is null.</span>
          </span>
        </exception>
        <altmember cref="T:System.Web.Compilation.BuildManager" />
        <altmember cref="T:System.Web.Compilation.BuildProvider" />
        <altmember cref="T:System.Web.Compilation.AssemblyBuilder" />
      </Docs>
    </Member>
    <Member MemberName="GetCompilerParameters">
      <MemberSignature Language="C#" Value="public void GetCompilerParameters (string virtualPath, out Type codeDomProviderType, out System.CodeDom.Compiler.CompilerParameters compilerParameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void GetCompilerParameters(string virtualPath, [out] class System.Type&amp; codeDomProviderType, [out] class System.CodeDom.Compiler.CompilerParameters&amp; compilerParameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.ClientBuildManager.GetCompilerParameters(System.String,System.Type@,System.CodeDom.Compiler.CompilerParameters@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetCompilerParameters (virtualPath As String, ByRef codeDomProviderType As Type, ByRef compilerParameters As CompilerParameters)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GetCompilerParameters(System::String ^ virtualPath, [Runtime::InteropServices::Out] Type ^ % codeDomProviderType, [Runtime::InteropServices::Out] System::CodeDom::Compiler::CompilerParameters ^ % compilerParameters);" />
      <MemberSignature Language="F#" Value="member this.GetCompilerParameters : string *  *  -&gt; unit" Usage="clientBuildManager.GetCompilerParameters (virtualPath, codeDomProviderType, compilerParameters)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
        <Parameter Name="codeDomProviderType" Type="System.Type&amp;" RefType="out" />
        <Parameter Name="compilerParameters" Type="System.CodeDom.Compiler.CompilerParameters&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="virtualPath">
          <span data-ttu-id="e296e-205">Der virtuelle Pfad zur Datei.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e296e-205">The virtual path to the file.</span>
          </span>
        </param>
        <param name="codeDomProviderType">
          <span data-ttu-id="e296e-206">Diese Methode gibt den für die Codegenerierung und die Kompilierung verwendeten Anbietertyp zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e296e-206">When this method returns, contains the provider type used for code generation and compilation.</span>
          </span>
        </param>
        <param name="compilerParameters">
          <span data-ttu-id="e296e-207">Diese Methode gibt Eigenschaften zurück, die definieren, wie die Datei kompiliert wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e296e-207">When this method returns, contains the properties that define how the file will be compiled.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e296e-208">Gibt den Compilertyp und die Parameter zurück, die verwendet werden, um eine durch einen virtuellen Pfad dargestellte Datei zu erstellen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e296e-208">Returns the compiler type and parameters that are used to build a file represented by a virtual path.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e296e-209">
            <paramref name="virtualPath" /> ist NULL.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e296e-209">
              <paramref name="virtualPath" /> is null.</span>
          </span>
        </exception>
        <altmember cref="P:System.Web.Compilation.CompilerType.CompilerParameters" />
        <altmember cref="T:System.Web.Compilation.BuildProvider" />
        <altmember cref="T:System.Web.Compilation.AssemblyBuilder" />
      </Docs>
    </Member>
    <Member MemberName="GetGeneratedFileVirtualPath">
      <MemberSignature Language="C#" Value="public string GetGeneratedFileVirtualPath (string filePath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetGeneratedFileVirtualPath(string filePath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.ClientBuildManager.GetGeneratedFileVirtualPath(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetGeneratedFileVirtualPath (filePath As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetGeneratedFileVirtualPath(System::String ^ filePath);" />
      <MemberSignature Language="F#" Value="member this.GetGeneratedFileVirtualPath : string -&gt; string" Usage="clientBuildManager.GetGeneratedFileVirtualPath filePath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filePath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="filePath">
          <span data-ttu-id="e296e-210">Der vollständige physische Pfad zu einer generierten Datei.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e296e-210">The full physical path to a generated file.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e296e-211">Gibt den virtuellen Pfad einer generierten Datei zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e296e-211">Returns the virtual path of a generated file.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e296e-212">Ein <see cref="T:System.String" />, der den virtuellen Pfad für <paramref name="filePath" /> enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e296e-212">A <see cref="T:System.String" /> containing the virtual path for <paramref name="filePath" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e296e-213">
            <paramref name="filePath" /> ist NULL.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e296e-213">
              <paramref name="filePath" /> is null.</span>
          </span>
        </exception>
        <altmember cref="T:System.Web.Compilation.BuildManager" />
        <altmember cref="T:System.Web.Compilation.BuildProvider" />
        <altmember cref="T:System.Web.Compilation.AssemblyBuilder" />
      </Docs>
    </Member>
    <Member MemberName="GetGeneratedSourceFile">
      <MemberSignature Language="C#" Value="public string GetGeneratedSourceFile (string virtualPath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetGeneratedSourceFile(string virtualPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.ClientBuildManager.GetGeneratedSourceFile(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetGeneratedSourceFile (virtualPath As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetGeneratedSourceFile(System::String ^ virtualPath);" />
      <MemberSignature Language="F#" Value="member this.GetGeneratedSourceFile : string -&gt; string" Usage="clientBuildManager.GetGeneratedSourceFile virtualPath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="virtualPath">
          <span data-ttu-id="e296e-214">Der virtuelle Pfad der abzurufenden Datei.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e296e-214">The virtual path of the file to retrieve.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e296e-215">Ruft den physischen Pfad zur generierten Datei für einen virtuellen Pfad ab.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e296e-215">Gets the physical path to the generated file for a virtual path.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e296e-216">Ein <see cref="T:System.String" />, der den physischen Pfad zur generierten Datei enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e296e-216">A <see cref="T:System.String" /> that contains the physical path to the generated file.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e296e-217">
            <paramref name="virtualPath" /> ist NULL.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e296e-217">
              <paramref name="virtualPath" /> is null.</span>
          </span>
        </exception>
        <altmember cref="T:System.Web.Compilation.BuildProvider" />
        <altmember cref="T:System.Web.Compilation.AssemblyBuilder" />
      </Docs>
    </Member>
    <Member MemberName="GetTopLevelAssemblyReferences">
      <MemberSignature Language="C#" Value="public string[] GetTopLevelAssemblyReferences (string virtualPath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string[] GetTopLevelAssemblyReferences(string virtualPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.ClientBuildManager.GetTopLevelAssemblyReferences(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTopLevelAssemblyReferences (virtualPath As String) As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::String ^&gt; ^ GetTopLevelAssemblyReferences(System::String ^ virtualPath);" />
      <MemberSignature Language="F#" Value="member this.GetTopLevelAssemblyReferences : string -&gt; string[]" Usage="clientBuildManager.GetTopLevelAssemblyReferences virtualPath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="virtualPath">
          <span data-ttu-id="e296e-218">Der Konfigurationsname und der Pfad.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e296e-218">The configuration name and path.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e296e-219">Gibt ein Array der im Bin-Verzeichnis und im <see langword="&lt;assembly&gt;" />-Abschnitt der Webkonfigurationsdatei definierten Assemblys zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e296e-219">Returns an array of the assemblies defined in the Bin directory and the <see langword="&lt;assembly&gt;" /> section of the Web configuration file.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e296e-220">Ein <see cref="T:System.String" />-Array, das Pfade zu CodeBases im Bin-Verzeichnis und im <see langword="&lt;assembly&gt;" />-Abschnitt der Webkonfigurationsdatei enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e296e-220">A <see cref="T:System.String" /> array containing paths to code bases in the Bin directory and the <see langword="&lt;assembly&gt;" /> section of the Web configuration file.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e296e-221">
            <paramref name="virtualPath" /> ist NULL.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e296e-221">
              <paramref name="virtualPath" /> is null.</span>
          </span>
        </exception>
        <altmember cref="T:System.Web.Compilation.BuildProvider" />
        <altmember cref="T:System.Web.Compilation.AssemblyBuilder" />
      </Docs>
    </Member>
    <Member MemberName="GetVirtualCodeDirectories">
      <MemberSignature Language="C#" Value="public string[] GetVirtualCodeDirectories ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string[] GetVirtualCodeDirectories() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.ClientBuildManager.GetVirtualCodeDirectories" />
      <MemberSignature Language="VB.NET" Value="Public Function GetVirtualCodeDirectories () As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::String ^&gt; ^ GetVirtualCodeDirectories();" />
      <MemberSignature Language="F#" Value="member this.GetVirtualCodeDirectories : unit -&gt; string[]" Usage="clientBuildManager.GetVirtualCodeDirectories " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e296e-222">Gibt die virtuellen Pfade zum Verzeichnis App_Code und seinen Unterverzeichnissen in einer ASP.NET-Anwendung zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e296e-222">Returns the virtual paths to the App_Code directory and its subdirectories in an ASP.NET application.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e296e-223">Ein <see cref="T:System.String" />-Array, das alle virtuellen Pfade zu Codeverzeichnissen in einer Anwendung enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e296e-223">A <see cref="T:System.String" /> array containing all the virtual paths to code directories in an application.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.Compilation.BuildManager" />
        <altmember cref="T:System.Web.Compilation.BuildProvider" />
        <altmember cref="T:System.Web.Compilation.AssemblyBuilder" />
      </Docs>
    </Member>
    <Member MemberName="InitializeLifetimeService">
      <MemberSignature Language="C#" Value="public override object InitializeLifetimeService ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object InitializeLifetimeService() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.ClientBuildManager.InitializeLifetimeService" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function InitializeLifetimeService () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ InitializeLifetimeService();" />
      <MemberSignature Language="F#" Value="override this.InitializeLifetimeService : unit -&gt; obj" Usage="clientBuildManager.InitializeLifetimeService " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e296e-224">Führt zu einer unendlichen Lebensdauer der Anwendungsdomäne, indem das Erstellen eines Lease verhindert wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e296e-224">Gives the application domain an infinite lifetime by preventing a lease from being created.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e296e-225">Immer <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e296e-225">Always <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e296e-226">Diese Methode überschreibt die <xref:System.MarshalByRefObject.InitializeLifetimeService%2A> Methode in der Basisklasse.</span><span class="sxs-lookup"><span data-stu-id="e296e-226">This method overrides the <xref:System.MarshalByRefObject.InitializeLifetimeService%2A> method in its base class.</span></span> <span data-ttu-id="e296e-227">Wird immer zurückgegeben `null` und verhindert dadurch, dass eine Lease erstellt werden, die die Anwendungsdomäne Lebensdauer einschränkt.</span><span class="sxs-lookup"><span data-stu-id="e296e-227">It always returns `null` and thereby prevents a lease from being created that would limit the application domain's lifetime.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Compilation.BuildManager" />
        <altmember cref="T:System.Web.Compilation.BuildProvider" />
        <altmember cref="T:System.Web.Compilation.AssemblyBuilder" />
      </Docs>
    </Member>
    <Member MemberName="IsCodeAssembly">
      <MemberSignature Language="C#" Value="public bool IsCodeAssembly (string assemblyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsCodeAssembly(string assemblyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.ClientBuildManager.IsCodeAssembly(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsCodeAssembly (assemblyName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsCodeAssembly(System::String ^ assemblyName);" />
      <MemberSignature Language="F#" Value="member this.IsCodeAssembly : string -&gt; bool" Usage="clientBuildManager.IsCodeAssembly assemblyName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="assemblyName">
          <span data-ttu-id="e296e-228">Der Name der Assembly, die als Codeassembly identifiziert werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e296e-228">The name of the assembly to be identified as a code assembly.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e296e-229">Gibt an, ob eine Assembly eine Codeassembly ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e296e-229">Indicates whether an assembly is a code assembly.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e296e-230">
            <see langword="true" />, wenn der <paramref name="assemblyName" />-Parameter zu einer der generierten Codeassemblys passt, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e296e-230">
              <see langword="true" /> if the <paramref name="assemblyName" /> parameter matches one of the generated code assemblies; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e296e-231">
            <paramref name="assemblyName" /> ist NULL.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e296e-231">
              <paramref name="assemblyName" /> is null.</span>
          </span>
        </exception>
        <altmember cref="T:System.Web.Compilation.BuildProvider" />
        <altmember cref="T:System.Web.Compilation.AssemblyBuilder" />
      </Docs>
    </Member>
    <Member MemberName="IsHostCreated">
      <MemberSignature Language="C#" Value="public bool IsHostCreated { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsHostCreated" />
      <MemberSignature Language="DocId" Value="P:System.Web.Compilation.ClientBuildManager.IsHostCreated" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsHostCreated As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsHostCreated { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsHostCreated : bool" Usage="System.Web.Compilation.ClientBuildManager.IsHostCreated" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e296e-232">Ruft einen Wert ab, der angibt, ob eine Anwendungsdomäne zum Kompilieren von ASP.NET-Webanwendungen erstellt wurde.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e296e-232">Gets a value that indicates whether an application domain for compiling ASP.NET Web applications has been created.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e296e-233">
            <see langword="true" />, wenn die Anwendungsdomäne zum Kompilieren von ASP.NET-Webanwendungen erstellt wurde, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e296e-233">
              <see langword="true" /> if the application domain for compiling ASP.NET Web applications has been created; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.Compilation.BuildManager" />
        <altmember cref="T:System.Web.Compilation.BuildProvider" />
        <altmember cref="T:System.Web.Compilation.AssemblyBuilder" />
      </Docs>
    </Member>
    <MemberGroup MemberName="PrecompileApplication">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="e296e-234">Führt die Vorkompilierung einer ASP.NET-Anwendung aus.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e296e-234">Precompiles an ASP.NET application.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e296e-235">ASP.NET unterstützt drei Formen der Vorkompilierung.</span><span class="sxs-lookup"><span data-stu-id="e296e-235">ASP.NET supports three forms of precompilation.</span></span> <span data-ttu-id="e296e-236">Eine Form ermöglicht die direkte Vorkompilierung einer ASP.NET-Anwendung.</span><span class="sxs-lookup"><span data-stu-id="e296e-236">One form allows for the in-place precompilation of an ASP.NET application.</span></span> <span data-ttu-id="e296e-237">In diesem Formular ist der Standort bis hin zur Produktion bereitgestellt und dann vorkompiliert, die erübrigt sich die Website dynamisch zu kompilieren, wenn er zunächst von einem Benutzer besucht wurde.</span><span class="sxs-lookup"><span data-stu-id="e296e-237">In this form, the site is deployed to production and then precompiled, which eliminates the need to dynamically compile the site when it is first visited by a user.</span></span> <span data-ttu-id="e296e-238">Der erste Benutzer der Website treten nicht die Verzögerung, normalerweise an einem Standort, der dynamisch kompiliert wird.</span><span class="sxs-lookup"><span data-stu-id="e296e-238">The first user of the site will not experience the delay normally encountered on a site that is dynamically compiled.</span></span>  
  
 <span data-ttu-id="e296e-239">Die beiden anderen Formen der Vorkompilierung werden für die Bereitstellung verwendet.</span><span class="sxs-lookup"><span data-stu-id="e296e-239">The two other forms of precompilation are used for deployment.</span></span> <span data-ttu-id="e296e-240">In einer der Formen, ein Layout des Standorts wird generiert, die auf einem Produktionscomputer bereitgestellt werden kann.</span><span class="sxs-lookup"><span data-stu-id="e296e-240">In either form, a layout of the site is generated that can be deployed to a production computer.</span></span> <span data-ttu-id="e296e-241">Eines dieser Formulare enthält die Markupseiten, also auf die kompilierte Site gewisse aktualisieren ausgeführt werden kann.</span><span class="sxs-lookup"><span data-stu-id="e296e-241">One of these forms includes the markup pages so some amount of updating can be performed on the compiled site.</span></span> <span data-ttu-id="e296e-242">Die andere Art enthält nicht die Markupseiten und kann deshalb nicht aktualisiert werden, ohne erneute Kompilierung Ausgangsstandort.</span><span class="sxs-lookup"><span data-stu-id="e296e-242">The other form does not contain the markup pages and therefore cannot be updated without recompiling the original site.</span></span> <span data-ttu-id="e296e-243">In der zielumgebung in eine dieser beiden Formen der Vorkompilierung ist kein Quellcode bereitgestellt.</span><span class="sxs-lookup"><span data-stu-id="e296e-243">No source code is deployed to the target environment in either of these forms of precompilation.</span></span>  
  
 <span data-ttu-id="e296e-244">Die Anwendung zum Vorkompilieren wird definiert, über die <xref:System.Web.Compilation.ClientBuildManager> Konstruktor.</span><span class="sxs-lookup"><span data-stu-id="e296e-244">The application to precompile is defined through the <xref:System.Web.Compilation.ClientBuildManager> constructor.</span></span> <span data-ttu-id="e296e-245">Die <xref:System.Web.Compilation.ClientBuildManagerParameter> Objekt von der <xref:System.Web.Compilation.ClientBuildManager.%23ctor%2A> Konstruktor definiert, welche der drei Formen der Vorkompilierung durchgeführt.</span><span class="sxs-lookup"><span data-stu-id="e296e-245">The <xref:System.Web.Compilation.ClientBuildManagerParameter> object of the <xref:System.Web.Compilation.ClientBuildManager.%23ctor%2A> constructor defines which of the three forms of precompilation to perform.</span></span>  
  
 <span data-ttu-id="e296e-246">Ein Entwickler kann Vorkompilieren eine Website mit dem `aspnet_compiler` Befehlszeilentool oder durch Aufrufen der <xref:System.Web.Compilation.ClientBuildManager.PrecompileApplication%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="e296e-246">A developer can precompile a Web site with the `aspnet_compiler` command-line tool or by calling the <xref:System.Web.Compilation.ClientBuildManager.PrecompileApplication%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Web.Compilation.ClientBuildManager.#ctor" />
      </Docs>
    </MemberGroup>
    <Member MemberName="PrecompileApplication">
      <MemberSignature Language="C#" Value="public void PrecompileApplication ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void PrecompileApplication() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.ClientBuildManager.PrecompileApplication" />
      <MemberSignature Language="VB.NET" Value="Public Sub PrecompileApplication ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PrecompileApplication();" />
      <MemberSignature Language="F#" Value="member this.PrecompileApplication : unit -&gt; unit" Usage="clientBuildManager.PrecompileApplication " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e296e-247">Führt die Vorkompilierung einer ASP.NET-Anwendung aus.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e296e-247">Precompiles an ASP.NET application.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e296e-248">ASP.NET unterstützt drei Formen der Vorkompilierung.</span><span class="sxs-lookup"><span data-stu-id="e296e-248">ASP.NET supports three forms of precompilation.</span></span> <span data-ttu-id="e296e-249">Eine Form ermöglicht die direkte Vorkompilierung einer ASP.NET-Anwendung.</span><span class="sxs-lookup"><span data-stu-id="e296e-249">One form allows for the in-place precompilation of an ASP.NET application.</span></span> <span data-ttu-id="e296e-250">In diesem Formular ist der Standort bis hin zur Produktion bereitgestellt und dann vorkompiliert, die erübrigt sich die Website dynamisch zu kompilieren, wenn er zunächst von einem Benutzer besucht wurde.</span><span class="sxs-lookup"><span data-stu-id="e296e-250">In this form, the site is deployed to production and then precompiled, which eliminates the need to dynamically compile the site when it is first visited by a user.</span></span> <span data-ttu-id="e296e-251">Der erste Benutzer der Website treten nicht die Verzögerung, normalerweise an einem Standort, der dynamisch kompiliert wird.</span><span class="sxs-lookup"><span data-stu-id="e296e-251">The first user of the site will not experience the delay normally encountered on a site that is dynamically compiled.</span></span>  
  
 <span data-ttu-id="e296e-252">Die beiden anderen Formen der Vorkompilierung werden für die Bereitstellung verwendet.</span><span class="sxs-lookup"><span data-stu-id="e296e-252">The two other forms of precompilation are used for deployment.</span></span> <span data-ttu-id="e296e-253">In einer der Formen, ein Layout des Standorts wird generiert, die auf einem Produktionscomputer bereitgestellt werden kann.</span><span class="sxs-lookup"><span data-stu-id="e296e-253">In either form, a layout of the site is generated that can be deployed to a production computer.</span></span> <span data-ttu-id="e296e-254">Eines dieser Formulare enthält die Markupseiten, also auf die kompilierte Site gewisse aktualisieren ausgeführt werden kann.</span><span class="sxs-lookup"><span data-stu-id="e296e-254">One of these forms includes the markup pages so some amount of updating can be performed on the compiled site.</span></span> <span data-ttu-id="e296e-255">Die andere Art enthält nicht die Markupseiten und kann deshalb nicht aktualisiert werden, ohne erneute Kompilierung Ausgangsstandort.</span><span class="sxs-lookup"><span data-stu-id="e296e-255">The other form does not contain the markup pages and therefore cannot be updated without recompiling the original site.</span></span> <span data-ttu-id="e296e-256">In der zielumgebung in eine dieser beiden Formen der Vorkompilierung ist kein Quellcode bereitgestellt.</span><span class="sxs-lookup"><span data-stu-id="e296e-256">No source code is deployed to the target environment in either of these forms of precompilation.</span></span>  
  
 <span data-ttu-id="e296e-257">Die Anwendung zum Vorkompilieren wird definiert, über die <xref:System.Web.Compilation.ClientBuildManager> Konstruktor.</span><span class="sxs-lookup"><span data-stu-id="e296e-257">The application to precompile is defined through the <xref:System.Web.Compilation.ClientBuildManager> constructor.</span></span> <span data-ttu-id="e296e-258">Die <xref:System.Web.Compilation.ClientBuildManagerParameter> Objekt von der <xref:System.Web.Compilation.ClientBuildManager.%23ctor%2A> Konstruktor definiert, welche der drei Formen der Vorkompilierung durchgeführt.</span><span class="sxs-lookup"><span data-stu-id="e296e-258">The <xref:System.Web.Compilation.ClientBuildManagerParameter> object of the <xref:System.Web.Compilation.ClientBuildManager.%23ctor%2A> constructor defines which of the three forms of precompilation to perform.</span></span>  
  
 <span data-ttu-id="e296e-259">Ein Entwickler kann Vorkompilieren eine Website mit dem `aspnet_compiler` Befehlszeilentool oder durch Aufrufen der <xref:System.Web.Compilation.ClientBuildManager.PrecompileApplication%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="e296e-259">A developer can precompile a Web site with the `aspnet_compiler` command-line tool or by calling the <xref:System.Web.Compilation.ClientBuildManager.PrecompileApplication%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Web.Compilation.ClientBuildManager.#ctor" />
      </Docs>
    </Member>
    <Member MemberName="PrecompileApplication">
      <MemberSignature Language="C#" Value="public void PrecompileApplication (System.Web.Compilation.ClientBuildManagerCallback callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void PrecompileApplication(class System.Web.Compilation.ClientBuildManagerCallback callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.ClientBuildManager.PrecompileApplication(System.Web.Compilation.ClientBuildManagerCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PrecompileApplication (callback As ClientBuildManagerCallback)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PrecompileApplication(System::Web::Compilation::ClientBuildManagerCallback ^ callback);" />
      <MemberSignature Language="F#" Value="member this.PrecompileApplication : System.Web.Compilation.ClientBuildManagerCallback -&gt; unit" Usage="clientBuildManager.PrecompileApplication callback" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.Web.Compilation.ClientBuildManagerCallback" />
      </Parameters>
      <Docs>
        <param name="callback">
          <span data-ttu-id="e296e-260">Ein <see cref="T:System.Web.Compilation.ClientBuildManagerCallback" />, der die Methode enthält, die beim Erstellen eines Berichts über das Ergebnis der Kompilierung aufgerufen werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e296e-260">A <see cref="T:System.Web.Compilation.ClientBuildManagerCallback" /> containing the method to call when reporting the result of compilation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e296e-261">Kompiliert eine ASP.NET-Anwendung vor und stellt eine Rückrufmethode bereit, um Statusinformationen über den Build zu empfangen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e296e-261">Precompiles an ASP.NET application and provides a callback method to receive status information about the build.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e296e-262">ASP.NET unterstützt drei Formen der Vorkompilierung.</span><span class="sxs-lookup"><span data-stu-id="e296e-262">ASP.NET supports three forms of precompilation.</span></span> <span data-ttu-id="e296e-263">Eine Form ermöglicht die direkte Vorkompilierung einer ASP.NET-Anwendung.</span><span class="sxs-lookup"><span data-stu-id="e296e-263">One form allows for the in-place precompilation of an ASP.NET application.</span></span> <span data-ttu-id="e296e-264">In diesem Formular ist der Standort bis hin zur Produktion bereitgestellt und dann vorkompiliert, die erübrigt sich die Website dynamisch zu kompilieren, wenn er zunächst von einem Benutzer besucht wurde.</span><span class="sxs-lookup"><span data-stu-id="e296e-264">In this form, the site is deployed to production and then precompiled, which eliminates the need to dynamically compile the site when it is first visited by a user.</span></span> <span data-ttu-id="e296e-265">Der erste Benutzer der Website treten nicht die Verzögerung, normalerweise an einem Standort, der dynamisch kompiliert wird.</span><span class="sxs-lookup"><span data-stu-id="e296e-265">The first user of the site will not experience the delay normally encountered on a site that is dynamically compiled.</span></span> <span data-ttu-id="e296e-266">Die `callback` Parameter enthält die Methode, die aufgerufen wird, wenn das Ergebnis der Kompilierung reporting.</span><span class="sxs-lookup"><span data-stu-id="e296e-266">The `callback` parameter contains the method to call when reporting the result of compilation.</span></span>  
  
 <span data-ttu-id="e296e-267">Die beiden anderen Formen der Vorkompilierung werden für die Bereitstellung verwendet.</span><span class="sxs-lookup"><span data-stu-id="e296e-267">The two other forms of precompilation are used for deployment.</span></span> <span data-ttu-id="e296e-268">In einer der Formen, ein Layout des Standorts wird generiert, die auf einem Produktionscomputer bereitgestellt werden kann.</span><span class="sxs-lookup"><span data-stu-id="e296e-268">In either form, a layout of the site is generated that can be deployed to a production computer.</span></span> <span data-ttu-id="e296e-269">Eines dieser Formulare enthält die Markupseiten, also auf die kompilierte Site gewisse aktualisieren ausgeführt werden kann.</span><span class="sxs-lookup"><span data-stu-id="e296e-269">One of these forms includes the markup pages so some amount of updating can be performed on the compiled site.</span></span> <span data-ttu-id="e296e-270">Die andere Art enthält nicht die Markupseiten und kann deshalb nicht aktualisiert werden, ohne erneute Kompilierung Ausgangsstandort.</span><span class="sxs-lookup"><span data-stu-id="e296e-270">The other form does not contain the markup pages and therefore cannot be updated without recompiling the original site.</span></span> <span data-ttu-id="e296e-271">In der zielumgebung in eine dieser beiden Formen der Vorkompilierung ist kein Quellcode bereitgestellt.</span><span class="sxs-lookup"><span data-stu-id="e296e-271">No source code is deployed to the target environment in either of these forms of precompilation.</span></span>  
  
 <span data-ttu-id="e296e-272">Die Anwendung zum Vorkompilieren wird definiert, über die <xref:System.Web.Compilation.ClientBuildManager> Konstruktor.</span><span class="sxs-lookup"><span data-stu-id="e296e-272">The application to precompile is defined through the <xref:System.Web.Compilation.ClientBuildManager> constructor.</span></span> <span data-ttu-id="e296e-273">Die <xref:System.Web.Compilation.ClientBuildManagerParameter> Objekt von der <xref:System.Web.Compilation.ClientBuildManager.%23ctor%2A> Konstruktor definiert, welche der drei Formen der Vorkompilierung durchgeführt.</span><span class="sxs-lookup"><span data-stu-id="e296e-273">The <xref:System.Web.Compilation.ClientBuildManagerParameter> object of the <xref:System.Web.Compilation.ClientBuildManager.%23ctor%2A> constructor defines which of the three forms of precompilation to perform.</span></span>  
  
 <span data-ttu-id="e296e-274">Ein Entwickler kann Vorkompilieren eine Website mit dem `aspnet_compiler` Befehlszeilentool oder durch Aufrufen der <xref:System.Web.Compilation.ClientBuildManager.PrecompileApplication%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="e296e-274">A developer can precompile a Web site with the `aspnet_compiler` command-line tool or by calling the <xref:System.Web.Compilation.ClientBuildManager.PrecompileApplication%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Web.Compilation.ClientBuildManager.#ctor" />
        <altmember cref="T:System.Web.Compilation.ClientBuildManagerCallback" />
      </Docs>
    </Member>
    <Member MemberName="PrecompileApplication">
      <MemberSignature Language="C#" Value="public void PrecompileApplication (System.Web.Compilation.ClientBuildManagerCallback callback, bool forceCleanBuild);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void PrecompileApplication(class System.Web.Compilation.ClientBuildManagerCallback callback, bool forceCleanBuild) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.ClientBuildManager.PrecompileApplication(System.Web.Compilation.ClientBuildManagerCallback,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PrecompileApplication (callback As ClientBuildManagerCallback, forceCleanBuild As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PrecompileApplication(System::Web::Compilation::ClientBuildManagerCallback ^ callback, bool forceCleanBuild);" />
      <MemberSignature Language="F#" Value="member this.PrecompileApplication : System.Web.Compilation.ClientBuildManagerCallback * bool -&gt; unit" Usage="clientBuildManager.PrecompileApplication (callback, forceCleanBuild)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.Web.Compilation.ClientBuildManagerCallback" />
        <Parameter Name="forceCleanBuild" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="callback">
          <span data-ttu-id="e296e-275">Ein <see cref="T:System.Web.Compilation.ClientBuildManagerCallback" />, der die Methode enthält, die beim Erstellen eines Berichts über das Ergebnis der Kompilierung aufgerufen werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e296e-275">A <see cref="T:System.Web.Compilation.ClientBuildManagerCallback" /> containing the method to call when reporting the result of compilation.</span>
          </span>
        </param>
        <param name="forceCleanBuild">
          <span data-ttu-id="e296e-276">
            <see langword="true" />, um eine saubere Builderstellung durchzuführen, bei der zunächst sämtliche Objekte und Zwischendateien gelöscht werden, <see langword="false" />, um nur die geänderten Dateien neu zu erstellen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e296e-276">
              <see langword="true" /> to perform a clean build, which will first delete all object and intermediate files; <see langword="false" /> to rebuild only those files that have changed.</span>
          </span>
          <span data-ttu-id="e296e-277">Legen Sie diesen Parameter auf true fest, wenn die Möglichkeit besteht, dass eine Abhängigkeit von der Buildumgebung nicht erfasst wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e296e-277">Set to true if there is a chance that a dependency might not be picked up by the build environment.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e296e-278">Führt die Vorkompilierung einer ASP.NET-Anwendung aus, stellt eine Rückrufmethode bereit, um Statusinformationen über den Build zu empfangen und gibt an, ob ein sauberer Build erstellt werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e296e-278">Precompiles an ASP.NET application, provides a callback method to receive status information about the build, and indicates whether to create a clean build.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e296e-279">ASP.NET unterstützt drei Formen der Vorkompilierung.</span><span class="sxs-lookup"><span data-stu-id="e296e-279">ASP.NET supports three forms of precompilation.</span></span> <span data-ttu-id="e296e-280">Eine Form ermöglicht die direkte Vorkompilierung einer ASP.NET-Anwendung.</span><span class="sxs-lookup"><span data-stu-id="e296e-280">One form allows for the in-place precompilation of an ASP.NET application.</span></span> <span data-ttu-id="e296e-281">In diesem Formular ist der Standort bis hin zur Produktion bereitgestellt und dann vorkompiliert, die erübrigt sich die Website dynamisch zu kompilieren, wenn er zunächst von einem Benutzer besucht wurde.</span><span class="sxs-lookup"><span data-stu-id="e296e-281">In this form, the site is deployed to production and then precompiled, which eliminates the need to dynamically compile the site when it is first visited by a user.</span></span> <span data-ttu-id="e296e-282">Der erste Benutzer der Website treten nicht die Verzögerung, normalerweise an einem Standort, der dynamisch kompiliert wird.</span><span class="sxs-lookup"><span data-stu-id="e296e-282">The first user of the site will not experience the delay normally encountered on a site that is dynamically compiled.</span></span> <span data-ttu-id="e296e-283">Die `callback` Parameter enthält die Methode, die aufgerufen wird, wenn das Ergebnis der Kompilierung reporting.</span><span class="sxs-lookup"><span data-stu-id="e296e-283">The `callback` parameter contains the method to call when reporting the result of compilation.</span></span>  
  
 <span data-ttu-id="e296e-284">Die beiden anderen Formen der Vorkompilierung werden für die Bereitstellung verwendet.</span><span class="sxs-lookup"><span data-stu-id="e296e-284">The two other forms of precompilation are used for deployment.</span></span> <span data-ttu-id="e296e-285">In einer der Formen, ein Layout des Standorts wird generiert, die auf einem Produktionscomputer bereitgestellt werden kann.</span><span class="sxs-lookup"><span data-stu-id="e296e-285">In either form, a layout of the site is generated that can be deployed to a production computer.</span></span> <span data-ttu-id="e296e-286">Eines dieser Formulare enthält die Markupseiten, also auf die kompilierte Site gewisse aktualisieren ausgeführt werden kann.</span><span class="sxs-lookup"><span data-stu-id="e296e-286">One of these forms includes the markup pages so some amount of updating can be performed on the compiled site.</span></span> <span data-ttu-id="e296e-287">Die andere Art enthält nicht die Markupseiten und kann deshalb nicht aktualisiert werden, ohne erneute Kompilierung Ausgangsstandort.</span><span class="sxs-lookup"><span data-stu-id="e296e-287">The other form does not contain the markup pages and therefore cannot be updated without recompiling the original site.</span></span> <span data-ttu-id="e296e-288">In der zielumgebung in eine dieser beiden Formen der Vorkompilierung ist kein Quellcode bereitgestellt.</span><span class="sxs-lookup"><span data-stu-id="e296e-288">No source code is deployed to the target environment in either of these forms of precompilation.</span></span>  
  
 <span data-ttu-id="e296e-289">Die Anwendung zum Vorkompilieren wird definiert, über die <xref:System.Web.Compilation.ClientBuildManager> Konstruktor.</span><span class="sxs-lookup"><span data-stu-id="e296e-289">The application to precompile is defined through the <xref:System.Web.Compilation.ClientBuildManager> constructor.</span></span> <span data-ttu-id="e296e-290">Die <xref:System.Web.Compilation.ClientBuildManagerParameter> Objekt von der <xref:System.Web.Compilation.ClientBuildManager.%23ctor%2A> Konstruktor definiert, welche der drei Formen der Vorkompilierung durchgeführt.</span><span class="sxs-lookup"><span data-stu-id="e296e-290">The <xref:System.Web.Compilation.ClientBuildManagerParameter> object of the <xref:System.Web.Compilation.ClientBuildManager.%23ctor%2A> constructor defines which of the three forms of precompilation to perform.</span></span>  
  
 <span data-ttu-id="e296e-291">Ein Entwickler kann Vorkompilieren eine Website mit dem `aspnet_compiler` Befehlszeilentool oder durch Aufrufen der <xref:System.Web.Compilation.ClientBuildManager.PrecompileApplication%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="e296e-291">A developer can precompile a Web site with the `aspnet_compiler` command-line tool or by calling the <xref:System.Web.Compilation.ClientBuildManager.PrecompileApplication%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Compilation.BuildManager" />
        <altmember cref="T:System.Web.Compilation.BuildProvider" />
        <altmember cref="T:System.Web.Compilation.AssemblyBuilder" />
        <altmember cref="Overload:System.Web.Compilation.ClientBuildManager.#ctor" />
        <altmember cref="T:System.Web.Compilation.ClientBuildManagerCallback" />
      </Docs>
    </Member>
    <Member MemberName="System.IDisposable.Dispose">
      <MemberSignature Language="C#" Value="void IDisposable.Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.IDisposable.Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.ClientBuildManager.System#IDisposable#Dispose" />
      <MemberSignature Language="VB.NET" Value="Sub Dispose () Implements IDisposable.Dispose" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.IDisposable.Dispose() = IDisposable::Dispose;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e296e-292">Beendet die aktuelle ASP.NET-Anwendung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e296e-292">Terminates the current ASP.NET application.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.Compilation.BuildManager" />
        <altmember cref="T:System.Web.Compilation.BuildProvider" />
        <altmember cref="T:System.Web.Compilation.AssemblyBuilder" />
      </Docs>
    </Member>
    <Member MemberName="Unload">
      <MemberSignature Language="C#" Value="public bool Unload ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Unload() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.ClientBuildManager.Unload" />
      <MemberSignature Language="VB.NET" Value="Public Function Unload () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Unload();" />
      <MemberSignature Language="F#" Value="member this.Unload : unit -&gt; bool" Usage="clientBuildManager.Unload " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e296e-293">Entlädt die Anwendungsdomäne zum Kompilieren von ASP.NET-Webanwendungen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e296e-293">Unloads the application domain for compiling ASP.NET Web applications.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e296e-294">
            <see langword="true" />, wenn die Anwendungsdomäne entladen wird, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e296e-294">
              <see langword="true" /> if the application domain is unloaded; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.Compilation.BuildManager" />
        <altmember cref="T:System.Web.Compilation.BuildProvider" />
        <altmember cref="T:System.Web.Compilation.AssemblyBuilder" />
      </Docs>
    </Member>
  </Members>
</Type>