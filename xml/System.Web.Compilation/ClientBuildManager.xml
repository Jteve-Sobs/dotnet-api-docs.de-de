<Type Name="ClientBuildManager" FullName="System.Web.Compilation.ClientBuildManager">
  <Metadata><Meta Name="ms.openlocfilehash" Value="f17a133b279ad1bf9d6d0abd74d12a7c970a069b" /><Meta Name="ms.sourcegitcommit" Value="0084afad1b3b1cb2c8ad2c142ae3597d08bad4a7" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="10/31/2019" /><Meta Name="ms.locfileid" Value="73395551" /></Metadata><TypeSignature Language="C#" Value="public sealed class ClientBuildManager : MarshalByRefObject, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ClientBuildManager extends System.MarshalByRefObject implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Web.Compilation.ClientBuildManager" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ClientBuildManager&#xA;Inherits MarshalByRefObject&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class ClientBuildManager sealed : MarshalByRefObject, IDisposable" />
  <TypeSignature Language="F#" Value="type ClientBuildManager = class&#xA;    inherit MarshalByRefObject&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.MarshalByRefObject</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Stellt Kompilierungsdienste für die ASP.NET-Anwendungen bereit.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.Compilation.ClientBuildManager>-Klasse bietet Methoden und Eigenschaften zum Kompilieren von ASP.NET-Webanwendungen und zum Abrufen der generierten Assemblys oder des generierten Quellcodes. Instanzen der-Klasse werden in der Anwendungsdomäne des Clients eingerichtet und ermöglichen den Zugriff auf das ASP.NET-Buildsystem außerhalb von Microsoft Internetinformationsdienste (IIS). Die-Klasse kann verwendet werden, um angepasste Tools zum Kompilieren von Webanwendungen zu entwickeln.  
  
 Das Befehlszeilen Tool `aspnet_compiler` verwendet die <xref:System.Web.Compilation.ClientBuildManager>-Klasse.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.Compilation.BuildManager" />
    <altmember cref="T:System.Web.Compilation.BuildProvider" />
    <altmember cref="T:System.Web.Compilation.AssemblyBuilder" />
    <related type="Article" href="https://msdn.microsoft.com/library/a88e56f9-b232-47c5-92e0-f9674ed15e5a">ASP.NET-Vorkompilierung der Website</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Compilation.ClientBuildManager" />-Klasse.</summary>
        <altmember cref="T:System.Web.Compilation.BuildManager" />
        <altmember cref="T:System.Web.Compilation.BuildProvider" />
        <altmember cref="T:System.Web.Compilation.AssemblyBuilder" />
        <related type="Article" href="https://msdn.microsoft.com/library/a88e56f9-b232-47c5-92e0-f9674ed15e5a">ASP.NET-Vorkompilierung der Website</related>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ClientBuildManager (string appVirtualDir, string appPhysicalSourceDir);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string appVirtualDir, string appPhysicalSourceDir) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.ClientBuildManager.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (appVirtualDir As String, appPhysicalSourceDir As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ClientBuildManager(System::String ^ appVirtualDir, System::String ^ appPhysicalSourceDir);" />
      <MemberSignature Language="F#" Value="new System.Web.Compilation.ClientBuildManager : string * string -&gt; System.Web.Compilation.ClientBuildManager" Usage="new System.Web.Compilation.ClientBuildManager (appVirtualDir, appPhysicalSourceDir)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="appVirtualDir" Type="System.String" />
        <Parameter Name="appPhysicalSourceDir" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="appVirtualDir">Der virtuelle Pfad zum Anwendungsstamm.</param>
        <param name="appPhysicalSourceDir">Der physische Pfad zum Anwendungsstamm.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Compilation.ClientBuildManager" />-Klasse ohne angegebenes Zielverzeichnis oder Vorkompilierungsflags.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.Compilation.BuildManager" />
        <altmember cref="T:System.Web.Compilation.BuildProvider" />
        <altmember cref="T:System.Web.Compilation.AssemblyBuilder" />
        <related type="Article" href="https://msdn.microsoft.com/library/a88e56f9-b232-47c5-92e0-f9674ed15e5a">ASP.NET-Vorkompilierung der Website</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ClientBuildManager (string appVirtualDir, string appPhysicalSourceDir, string appPhysicalTargetDir);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string appVirtualDir, string appPhysicalSourceDir, string appPhysicalTargetDir) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.ClientBuildManager.#ctor(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (appVirtualDir As String, appPhysicalSourceDir As String, appPhysicalTargetDir As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ClientBuildManager(System::String ^ appVirtualDir, System::String ^ appPhysicalSourceDir, System::String ^ appPhysicalTargetDir);" />
      <MemberSignature Language="F#" Value="new System.Web.Compilation.ClientBuildManager : string * string * string -&gt; System.Web.Compilation.ClientBuildManager" Usage="new System.Web.Compilation.ClientBuildManager (appVirtualDir, appPhysicalSourceDir, appPhysicalTargetDir)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="appVirtualDir" Type="System.String" />
        <Parameter Name="appPhysicalSourceDir" Type="System.String" />
        <Parameter Name="appPhysicalTargetDir" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="appVirtualDir">Der virtuelle Pfad zum Anwendungsstamm.</param>
        <param name="appPhysicalSourceDir">Der physische Pfad zum Anwendungsstamm.</param>
        <param name="appPhysicalTargetDir">Das Zielverzeichnis für die Vorkompilierung.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Compilation.ClientBuildManager" />-Klasse mit dem angegebenen Zielverzeichnis.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Form des Konstruktors wird in der Regel mit der Vorkompilierung verwendet, da Sie ein Zielverzeichnis für die Vorkompilierung angibt.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Compilation.BuildManager" />
        <altmember cref="T:System.Web.Compilation.BuildProvider" />
        <altmember cref="T:System.Web.Compilation.AssemblyBuilder" />
        <related type="Article" href="https://msdn.microsoft.com/library/a88e56f9-b232-47c5-92e0-f9674ed15e5a">ASP.NET-Vorkompilierung der Website</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ClientBuildManager (string appVirtualDir, string appPhysicalSourceDir, string appPhysicalTargetDir, System.Web.Compilation.ClientBuildManagerParameter parameter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string appVirtualDir, string appPhysicalSourceDir, string appPhysicalTargetDir, class System.Web.Compilation.ClientBuildManagerParameter parameter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.ClientBuildManager.#ctor(System.String,System.String,System.String,System.Web.Compilation.ClientBuildManagerParameter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (appVirtualDir As String, appPhysicalSourceDir As String, appPhysicalTargetDir As String, parameter As ClientBuildManagerParameter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ClientBuildManager(System::String ^ appVirtualDir, System::String ^ appPhysicalSourceDir, System::String ^ appPhysicalTargetDir, System::Web::Compilation::ClientBuildManagerParameter ^ parameter);" />
      <MemberSignature Language="F#" Value="new System.Web.Compilation.ClientBuildManager : string * string * string * System.Web.Compilation.ClientBuildManagerParameter -&gt; System.Web.Compilation.ClientBuildManager" Usage="new System.Web.Compilation.ClientBuildManager (appVirtualDir, appPhysicalSourceDir, appPhysicalTargetDir, parameter)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="appVirtualDir" Type="System.String" />
        <Parameter Name="appPhysicalSourceDir" Type="System.String" />
        <Parameter Name="appPhysicalTargetDir" Type="System.String" />
        <Parameter Name="parameter" Type="System.Web.Compilation.ClientBuildManagerParameter" />
      </Parameters>
      <Docs>
        <param name="appVirtualDir">Der virtuelle Pfad zum Anwendungsstamm.</param>
        <param name="appPhysicalSourceDir">Der physische Pfad zum Anwendungsstamm.</param>
        <param name="appPhysicalTargetDir">Das Zielverzeichnis für die Vorkompilierung.</param>
        <param name="parameter">Werte, durch die das Vorkompilierungsverhalten bestimmt wird.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Compilation.ClientBuildManager" />-Klasse mit dem angegebenen Zielverzeichnis und Kompilierungsparameter.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Form des Konstruktors wird in der Regel mit der Vorkompilierung verwendet, da Sie ein Zielverzeichnis für die Vorkompilierung und vorkompilierungs Flags angibt.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Compilation.BuildManager" />
        <altmember cref="T:System.Web.Compilation.BuildProvider" />
        <altmember cref="T:System.Web.Compilation.AssemblyBuilder" />
        <related type="Article" href="https://msdn.microsoft.com/library/a88e56f9-b232-47c5-92e0-f9674ed15e5a">ASP.NET-Vorkompilierung der Website</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ClientBuildManager (string appVirtualDir, string appPhysicalSourceDir, string appPhysicalTargetDir, System.Web.Compilation.ClientBuildManagerParameter parameter, System.ComponentModel.TypeDescriptionProvider typeDescriptionProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string appVirtualDir, string appPhysicalSourceDir, string appPhysicalTargetDir, class System.Web.Compilation.ClientBuildManagerParameter parameter, class System.ComponentModel.TypeDescriptionProvider typeDescriptionProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.ClientBuildManager.#ctor(System.String,System.String,System.String,System.Web.Compilation.ClientBuildManagerParameter,System.ComponentModel.TypeDescriptionProvider)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ClientBuildManager(System::String ^ appVirtualDir, System::String ^ appPhysicalSourceDir, System::String ^ appPhysicalTargetDir, System::Web::Compilation::ClientBuildManagerParameter ^ parameter, System::ComponentModel::TypeDescriptionProvider ^ typeDescriptionProvider);" />
      <MemberSignature Language="F#" Value="new System.Web.Compilation.ClientBuildManager : string * string * string * System.Web.Compilation.ClientBuildManagerParameter * System.ComponentModel.TypeDescriptionProvider -&gt; System.Web.Compilation.ClientBuildManager" Usage="new System.Web.Compilation.ClientBuildManager (appVirtualDir, appPhysicalSourceDir, appPhysicalTargetDir, parameter, typeDescriptionProvider)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="appVirtualDir" Type="System.String" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="appPhysicalSourceDir" Type="System.String" Index="1" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="appPhysicalTargetDir" Type="System.String" Index="2" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="parameter" Type="System.Web.Compilation.ClientBuildManagerParameter" Index="3" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="typeDescriptionProvider" Type="System.ComponentModel.TypeDescriptionProvider" Index="4" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="appVirtualDir">Der virtuelle Pfad des Anwendungsstamms.</param>
        <param name="appPhysicalSourceDir">Der physische Pfad des Anwendungsstamms.</param>
        <param name="appPhysicalTargetDir">Das Zielverzeichnis für die Vorkompilierung.</param>
        <param name="parameter">Werte, durch die das Vorkompilierungsverhalten bestimmt wird.</param>
        <param name="typeDescriptionProvider">Der zu verwendende Typbeschreibungsanbieter. Mit diesem Parameter wird hauptsächlich die Infrastruktur zur Festlegung von Zielversionen in Visual Studio unterstützt. Damit werden Metadaten zu Typen abgerufen, die auf bestimmte Versionen von .NET Framework gefiltert werden.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Compilation.ClientBuildManager" />-Klasse mit dem angegebenen virtuellen Verzeichnis, Quellverzeichnis, Zielverzeichnis, Kompilierungsparameter und Typbeschreibungsanbieter.</summary>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/8b8145a9-62f6-4fc4-8a83-47b0487cbe76">.NET Framework Ziel für Webprojekte</related>
      </Docs>
    </Member>
    <Member MemberName="AppDomainShutdown">
      <MemberSignature Language="C#" Value="public event System.Web.Compilation.BuildManagerHostUnloadEventHandler AppDomainShutdown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.Compilation.BuildManagerHostUnloadEventHandler AppDomainShutdown" />
      <MemberSignature Language="DocId" Value="E:System.Web.Compilation.ClientBuildManager.AppDomainShutdown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event AppDomainShutdown As BuildManagerHostUnloadEventHandler " FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::Compilation::BuildManagerHostUnloadEventHandler ^ AppDomainShutdown;" />
      <MemberSignature Language="F#" Value="member this.AppDomainShutdown : System.Web.Compilation.BuildManagerHostUnloadEventHandler " Usage="member this.AppDomainShutdown : System.Web.Compilation.BuildManagerHostUnloadEventHandler " />
      <MemberSignature Language="VB.NET" Value="Public Event AppDomainShutdown As BuildManagerHostUnloadEventHandler " FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Compilation.BuildManagerHostUnloadEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, wenn eine Anwendungsdomäne geschlossen wird.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.Compilation.BuildManager" />
        <altmember cref="T:System.Web.Compilation.BuildProvider" />
        <altmember cref="T:System.Web.Compilation.AssemblyBuilder" />
        <related type="Article" href="https://msdn.microsoft.com/library/a88e56f9-b232-47c5-92e0-f9674ed15e5a">ASP.NET-Vorkompilierung der Website</related>
      </Docs>
    </Member>
    <Member MemberName="AppDomainStarted">
      <MemberSignature Language="C#" Value="public event EventHandler AppDomainStarted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler AppDomainStarted" />
      <MemberSignature Language="DocId" Value="E:System.Web.Compilation.ClientBuildManager.AppDomainStarted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event AppDomainStarted As EventHandler " FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ AppDomainStarted;" />
      <MemberSignature Language="F#" Value="member this.AppDomainStarted : EventHandler " Usage="member this.AppDomainStarted : System.EventHandler " />
      <MemberSignature Language="VB.NET" Value="Public Event AppDomainStarted As EventHandler " FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, wenn eine Anwendungsdomäne gestartet wird.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.Compilation.BuildManager" />
        <altmember cref="T:System.Web.Compilation.BuildProvider" />
        <altmember cref="T:System.Web.Compilation.AssemblyBuilder" />
        <related type="Article" href="https://msdn.microsoft.com/library/a88e56f9-b232-47c5-92e0-f9674ed15e5a">ASP.NET-Vorkompilierung der Website</related>
      </Docs>
    </Member>
    <Member MemberName="AppDomainUnloaded">
      <MemberSignature Language="C#" Value="public event System.Web.Compilation.BuildManagerHostUnloadEventHandler AppDomainUnloaded;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.Compilation.BuildManagerHostUnloadEventHandler AppDomainUnloaded" />
      <MemberSignature Language="DocId" Value="E:System.Web.Compilation.ClientBuildManager.AppDomainUnloaded" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event AppDomainUnloaded As BuildManagerHostUnloadEventHandler " FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::Compilation::BuildManagerHostUnloadEventHandler ^ AppDomainUnloaded;" />
      <MemberSignature Language="F#" Value="member this.AppDomainUnloaded : System.Web.Compilation.BuildManagerHostUnloadEventHandler " Usage="member this.AppDomainUnloaded : System.Web.Compilation.BuildManagerHostUnloadEventHandler " />
      <MemberSignature Language="VB.NET" Value="Public Event AppDomainUnloaded As BuildManagerHostUnloadEventHandler " FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Compilation.BuildManagerHostUnloadEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, wenn eine Anwendungsdomäne entladen wird.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.Compilation.BuildManager" />
        <altmember cref="T:System.Web.Compilation.BuildProvider" />
        <altmember cref="T:System.Web.Compilation.AssemblyBuilder" />
        <related type="Article" href="https://msdn.microsoft.com/library/a88e56f9-b232-47c5-92e0-f9674ed15e5a">ASP.NET-Vorkompilierung der Website</related>
      </Docs>
    </Member>
    <Member MemberName="CodeGenDir">
      <MemberSignature Language="C#" Value="public string CodeGenDir { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CodeGenDir" />
      <MemberSignature Language="DocId" Value="P:System.Web.Compilation.ClientBuildManager.CodeGenDir" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CodeGenDir As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CodeGenDir { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CodeGenDir : string" Usage="System.Web.Compilation.ClientBuildManager.CodeGenDir" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den physischen Pfad zum für die Codegenerierung verwendeten Verzeichnis ab.</summary>
        <value>Ein <see cref="T:System.String" />, der den für die Codegenerierung verwendeten Verzeichnispfad enthält.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Das Verzeichnis für die Codegenerierung befindet sich in der Regel im temporären ASP.net files-Verzeichnis.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Compilation.BuildManager" />
        <altmember cref="T:System.Web.Compilation.BuildProvider" />
        <altmember cref="T:System.Web.Compilation.AssemblyBuilder" />
        <related type="Article" href="https://msdn.microsoft.com/library/a88e56f9-b232-47c5-92e0-f9674ed15e5a">ASP.NET-Vorkompilierung der Website</related>
      </Docs>
    </Member>
    <Member MemberName="CompileApplicationDependencies">
      <MemberSignature Language="C#" Value="public void CompileApplicationDependencies ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CompileApplicationDependencies() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.ClientBuildManager.CompileApplicationDependencies" />
      <MemberSignature Language="VB.NET" Value="Public Sub CompileApplicationDependencies ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CompileApplicationDependencies();" />
      <MemberSignature Language="F#" Value="member this.CompileApplicationDependencies : unit -&gt; unit" Usage="clientBuildManager.CompileApplicationDependencies " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Kompiliert anwendungsabhängige Dateien, z. B. Dateien im Verzeichnis App_Code, die Datei Global.asax, Ressourcendateien und Webverweise.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.Compilation.ClientBuildManager.CompileApplicationDependencies%2A>-Methode stellt sicher, dass Ressourcen, Webverweise, Dateien im Verzeichnis App_Code, Browser Dateien im Verzeichnis App_Browsers und die Datei Global. asax kompiliert werden.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Compilation.BuildManager" />
        <altmember cref="T:System.Web.Compilation.BuildProvider" />
        <altmember cref="T:System.Web.Compilation.AssemblyBuilder" />
        <related type="Article" href="https://msdn.microsoft.com/library/a88e56f9-b232-47c5-92e0-f9674ed15e5a">ASP.NET-Vorkompilierung der Website</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="CompileFile">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Kompiliert die durch den virtuellen Pfad dargestellte Datei.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CompileFile">
      <MemberSignature Language="C#" Value="public void CompileFile (string virtualPath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CompileFile(string virtualPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.ClientBuildManager.CompileFile(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CompileFile (virtualPath As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CompileFile(System::String ^ virtualPath);" />
      <MemberSignature Language="F#" Value="member this.CompileFile : string -&gt; unit" Usage="clientBuildManager.CompileFile virtualPath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="virtualPath">Der Pfad zu der zu kompilierenden Datei.</param>
        <summary>Kompiliert die durch den virtuellen Pfad dargestellte Datei.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.Compilation.BuildManager" />
        <altmember cref="T:System.Web.Compilation.BuildProvider" />
        <altmember cref="T:System.Web.Compilation.AssemblyBuilder" />
        <related type="Article" href="https://msdn.microsoft.com/library/a88e56f9-b232-47c5-92e0-f9674ed15e5a">ASP.NET-Vorkompilierung der Website</related>
      </Docs>
    </Member>
    <Member MemberName="CompileFile">
      <MemberSignature Language="C#" Value="public void CompileFile (string virtualPath, System.Web.Compilation.ClientBuildManagerCallback callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CompileFile(string virtualPath, class System.Web.Compilation.ClientBuildManagerCallback callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.ClientBuildManager.CompileFile(System.String,System.Web.Compilation.ClientBuildManagerCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CompileFile (virtualPath As String, callback As ClientBuildManagerCallback)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CompileFile(System::String ^ virtualPath, System::Web::Compilation::ClientBuildManagerCallback ^ callback);" />
      <MemberSignature Language="F#" Value="member this.CompileFile : string * System.Web.Compilation.ClientBuildManagerCallback -&gt; unit" Usage="clientBuildManager.CompileFile (virtualPath, callback)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
        <Parameter Name="callback" Type="System.Web.Compilation.ClientBuildManagerCallback" />
      </Parameters>
      <Docs>
        <param name="virtualPath">Der Pfad zu der zu kompilierenden Datei.</param>
        <param name="callback">Das Objekt zum Empfangen von Statusinformationen der Kompilierung.</param>
        <summary>Kompiliert die durch den virtuellen Pfad dargestellte Datei und stellt eine Rückrufklasse zum Empfangen von Statusinformationen über den Build bereit.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="virtualPath" /> ist NULL.</exception>
        <altmember cref="T:System.Web.Compilation.BuildManager" />
        <altmember cref="T:System.Web.Compilation.BuildProvider" />
        <altmember cref="T:System.Web.Compilation.AssemblyBuilder" />
        <related type="Article" href="https://msdn.microsoft.com/library/a88e56f9-b232-47c5-92e0-f9674ed15e5a">ASP.NET-Vorkompilierung der Website</related>
      </Docs>
    </Member>
    <Member MemberName="CreateObject">
      <MemberSignature Language="C#" Value="public System.Web.Hosting.IRegisteredObject CreateObject (Type type, bool failIfExists);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.Hosting.IRegisteredObject CreateObject(class System.Type type, bool failIfExists) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.ClientBuildManager.CreateObject(System.Type,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::Hosting::IRegisteredObject ^ CreateObject(Type ^ type, bool failIfExists);" />
      <MemberSignature Language="F#" Value="member this.CreateObject : Type * bool -&gt; System.Web.Hosting.IRegisteredObject" Usage="clientBuildManager.CreateObject (type, failIfExists)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Hosting.IRegisteredObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="failIfExists" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="type">Der Typ des zu erstellenden Objekts.</param>
        <param name="failIfExists"><see langword="true" />, wenn eine Ausnahme ausgelöst werden soll, wenn das Objekt bereits in der Anwendungsdomäne der ASP.NET-Laufzeit erstellt wurde, andernfalls <see langword="false" />.</param>
        <summary>Erstellt ein Objekt in der Anwendungsdomäne der ASP.NET-Laufzeit.</summary>
        <returns>Ein Objekt in der Anwendungsdomäne der ASP.NET-Laufzeit.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="type" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Das Objekt ist bereits in der Anwendungsdomäne vorhanden, und <paramref name="failIfExists" /> ist <see langword="true" />.</exception>
        <altmember cref="T:System.Web.Compilation.BuildProvider" />
        <altmember cref="T:System.Web.Compilation.AssemblyBuilder" />
        <related type="Article" href="https://msdn.microsoft.com/library/a88e56f9-b232-47c5-92e0-f9674ed15e5a">ASP.NET-Vorkompilierung der Website</related>
      </Docs>
    </Member>
    <Member MemberName="GenerateCode">
      <MemberSignature Language="C#" Value="public string GenerateCode (string virtualPath, string virtualFileString, out System.Collections.IDictionary linePragmasTable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GenerateCode(string virtualPath, string virtualFileString, [out] class System.Collections.IDictionary&amp; linePragmasTable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.ClientBuildManager.GenerateCode(System.String,System.String,System.Collections.IDictionary@)" />
      <MemberSignature Language="VB.NET" Value="Public Function GenerateCode (virtualPath As String, virtualFileString As String, ByRef linePragmasTable As IDictionary) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GenerateCode(System::String ^ virtualPath, System::String ^ virtualFileString, [Runtime::InteropServices::Out] System::Collections::IDictionary ^ % linePragmasTable);" />
      <MemberSignature Language="F#" Value="member this.GenerateCode : string * string * IDictionary -&gt; string" Usage="clientBuildManager.GenerateCode (virtualPath, virtualFileString, linePragmasTable)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
        <Parameter Name="virtualFileString" Type="System.String" />
        <Parameter Name="linePragmasTable" Type="System.Collections.IDictionary" RefType="out" />
      </Parameters>
      <Docs>
        <param name="virtualPath">Der virtuelle Pfad zur Datei.</param>
        <param name="virtualFileString">Der Inhalt der Datei.</param>
        <param name="linePragmasTable">Diese Methode gibt ein Wörterbuch mit Zeilenpragmas zurück.</param>
        <summary>Generiert Code aus dem Inhalt einer Datei.</summary>
        <returns>Ein <see cref="T:System.String" />, der den generierten Code enthält.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="virtualPath" /> ist NULL.</exception>
        <altmember cref="T:System.Web.Compilation.BuildManager" />
        <altmember cref="T:System.Web.Compilation.BuildProvider" />
        <altmember cref="T:System.Web.Compilation.AssemblyBuilder" />
        <altmember cref="T:System.Web.Compilation.LinePragmaCodeInfo" />
        <related type="Article" href="https://msdn.microsoft.com/library/a88e56f9-b232-47c5-92e0-f9674ed15e5a">ASP.NET-Vorkompilierung der Website</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="GenerateCodeCompileUnit">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Gibt die CodeDOM-Struktur, den Compilertyp und die Compilerparameter für eine durch einen virtuellen Pfad dargestellte Datei zurück.</summary>
        <altmember cref="T:System.Web.Compilation.BuildManager" />
        <altmember cref="T:System.Web.Compilation.BuildProvider" />
        <altmember cref="T:System.Web.Compilation.AssemblyBuilder" />
        <related type="Article" href="https://msdn.microsoft.com/library/a88e56f9-b232-47c5-92e0-f9674ed15e5a">ASP.NET-Vorkompilierung der Website</related>
      </Docs>
    </MemberGroup>
    <Member MemberName="GenerateCodeCompileUnit">
      <MemberSignature Language="C#" Value="public System.CodeDom.CodeCompileUnit GenerateCodeCompileUnit (string virtualPath, out Type codeDomProviderType, out System.CodeDom.Compiler.CompilerParameters compilerParameters, out System.Collections.IDictionary linePragmasTable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.CodeDom.CodeCompileUnit GenerateCodeCompileUnit(string virtualPath, [out] class System.Type&amp; codeDomProviderType, [out] class System.CodeDom.Compiler.CompilerParameters&amp; compilerParameters, [out] class System.Collections.IDictionary&amp; linePragmasTable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.ClientBuildManager.GenerateCodeCompileUnit(System.String,System.Type@,System.CodeDom.Compiler.CompilerParameters@,System.Collections.IDictionary@)" />
      <MemberSignature Language="VB.NET" Value="Public Function GenerateCodeCompileUnit (virtualPath As String, ByRef codeDomProviderType As Type, ByRef compilerParameters As CompilerParameters, ByRef linePragmasTable As IDictionary) As CodeCompileUnit" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::CodeDom::CodeCompileUnit ^ GenerateCodeCompileUnit(System::String ^ virtualPath, [Runtime::InteropServices::Out] Type ^ % codeDomProviderType, [Runtime::InteropServices::Out] System::CodeDom::Compiler::CompilerParameters ^ % compilerParameters, [Runtime::InteropServices::Out] System::Collections::IDictionary ^ % linePragmasTable);" />
      <MemberSignature Language="F#" Value="member this.GenerateCodeCompileUnit : string * Type * CompilerParameters * IDictionary -&gt; System.CodeDom.CodeCompileUnit" Usage="clientBuildManager.GenerateCodeCompileUnit (virtualPath, codeDomProviderType, compilerParameters, linePragmasTable)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeCompileUnit</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
        <Parameter Name="codeDomProviderType" Type="System.Type" RefType="out" />
        <Parameter Name="compilerParameters" Type="System.CodeDom.Compiler.CompilerParameters" RefType="out" />
        <Parameter Name="linePragmasTable" Type="System.Collections.IDictionary" RefType="out" />
      </Parameters>
      <Docs>
        <param name="virtualPath">Der virtuelle Pfad zur Datei.</param>
        <param name="codeDomProviderType">Diese Methode gibt den für die Codegenerierung und die Kompilierung verwendeten CodeDOM-Anbietertyp zurück.</param>
        <param name="compilerParameters">Diese Methode gibt Eigenschaften zurück, die definieren, wie die Datei kompiliert wird.</param>
        <param name="linePragmasTable">Diese Methode gibt ein Wörterbuch mit Zeilenpragmas zurück.</param>
        <summary>Gibt die CodeDOM-Struktur, den Compilertyp und die Compilerparameter für eine durch einen virtuellen Pfad dargestellte Datei zurück.</summary>
        <returns>Eine <see cref="T:System.CodeDom.CodeCompileUnit" /> für die angegebene Datei.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.Compilation.ClientBuildManager.GenerateCodeCompileUnit%2A>-Methode ruft Informationen ab, die zum Kompilieren einer Datei benötigt werden. Zusätzlich zu einem <xref:System.CodeDom.CodeCompileUnit> Objekt als Rückgabewert werden drei `out` Parameter zurückgegeben. Der `codeDomProviderType`-Parameter gibt den Anbietertyp zum Erstellen und Kompilieren der Datei zurück. Der `compilerParameters`-Parameter enthält Eigenschaften, die das Kompilierungs Verhalten bestimmen. Der `linePragmasTable`-Parameter enthält ein Wörterbuch mit Zeilenpragmas.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Compilation.BuildManager" />
        <altmember cref="T:System.Web.Compilation.BuildProvider" />
        <altmember cref="T:System.Web.Compilation.AssemblyBuilder" />
        <altmember cref="T:System.Web.Compilation.LinePragmaCodeInfo" />
        <related type="Article" href="https://msdn.microsoft.com/library/a88e56f9-b232-47c5-92e0-f9674ed15e5a">ASP.NET-Vorkompilierung der Website</related>
      </Docs>
    </Member>
    <Member MemberName="GenerateCodeCompileUnit">
      <MemberSignature Language="C#" Value="public System.CodeDom.CodeCompileUnit GenerateCodeCompileUnit (string virtualPath, string virtualFileString, out Type codeDomProviderType, out System.CodeDom.Compiler.CompilerParameters compilerParameters, out System.Collections.IDictionary linePragmasTable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.CodeDom.CodeCompileUnit GenerateCodeCompileUnit(string virtualPath, string virtualFileString, [out] class System.Type&amp; codeDomProviderType, [out] class System.CodeDom.Compiler.CompilerParameters&amp; compilerParameters, [out] class System.Collections.IDictionary&amp; linePragmasTable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.ClientBuildManager.GenerateCodeCompileUnit(System.String,System.String,System.Type@,System.CodeDom.Compiler.CompilerParameters@,System.Collections.IDictionary@)" />
      <MemberSignature Language="VB.NET" Value="Public Function GenerateCodeCompileUnit (virtualPath As String, virtualFileString As String, ByRef codeDomProviderType As Type, ByRef compilerParameters As CompilerParameters, ByRef linePragmasTable As IDictionary) As CodeCompileUnit" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::CodeDom::CodeCompileUnit ^ GenerateCodeCompileUnit(System::String ^ virtualPath, System::String ^ virtualFileString, [Runtime::InteropServices::Out] Type ^ % codeDomProviderType, [Runtime::InteropServices::Out] System::CodeDom::Compiler::CompilerParameters ^ % compilerParameters, [Runtime::InteropServices::Out] System::Collections::IDictionary ^ % linePragmasTable);" />
      <MemberSignature Language="F#" Value="member this.GenerateCodeCompileUnit : string * string * Type * CompilerParameters * IDictionary -&gt; System.CodeDom.CodeCompileUnit" Usage="clientBuildManager.GenerateCodeCompileUnit (virtualPath, virtualFileString, codeDomProviderType, compilerParameters, linePragmasTable)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeCompileUnit</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
        <Parameter Name="virtualFileString" Type="System.String" />
        <Parameter Name="codeDomProviderType" Type="System.Type" RefType="out" />
        <Parameter Name="compilerParameters" Type="System.CodeDom.Compiler.CompilerParameters" RefType="out" />
        <Parameter Name="linePragmasTable" Type="System.Collections.IDictionary" RefType="out" />
      </Parameters>
      <Docs>
        <param name="virtualPath">Der virtuelle Pfad zur Datei.</param>
        <param name="virtualFileString">Der Inhalt der durch den <paramref name="virtualPath" />-Parameter dargestellten Datei.</param>
        <param name="codeDomProviderType">Diese Methode gibt den für die Codegenerierung und die Kompilierung verwendeten CodeDOM-Anbietertyp zurück.</param>
        <param name="compilerParameters">Diese Methode gibt die Eigenschaften zurück, die definieren, wie die durch den <paramref name="virtualPath" />-Parameter dargestellte Datei kompiliert wird.</param>
        <param name="linePragmasTable">Diese Methode gibt ein Wörterbuch mit Zeilenpragmas zurück.</param>
        <summary>Gibt den Inhalt, die CodeDOM-Struktur, den Compilertyp und die Compilerparameter für eine durch einen virtuellen Pfad dargestellte Datei zurück.</summary>
        <returns>Eine <see cref="T:System.CodeDom.CodeCompileUnit" /> für die angegebene Datei.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.Compilation.ClientBuildManager.GenerateCodeCompileUnit%2A>-Methode ruft Informationen ab, die zum Kompilieren einer Datei benötigt werden. Zusätzlich zu einem <xref:System.CodeDom.CodeCompileUnit> Objekt als Rückgabewert werden drei `out` Parameter zurückgegeben. Der `codeDomProviderType`-Parameter gibt den Anbietertyp zum Erstellen und Kompilieren der Datei zurück. Der `compilerParameters`-Parameter enthält Eigenschaften, die das Kompilierungs Verhalten bestimmen. Der `linePragmasTable`-Parameter enthält ein Wörterbuch mit Zeilenpragmas.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="virtualPath" /> ist NULL.</exception>
        <altmember cref="T:System.Web.Compilation.BuildManager" />
        <altmember cref="T:System.Web.Compilation.BuildProvider" />
        <altmember cref="T:System.Web.Compilation.AssemblyBuilder" />
        <altmember cref="T:System.Web.Compilation.LinePragmaCodeInfo" />
        <related type="Article" href="https://msdn.microsoft.com/library/a88e56f9-b232-47c5-92e0-f9674ed15e5a">ASP.NET-Vorkompilierung der Website</related>
      </Docs>
    </Member>
    <Member MemberName="GetAppDomainShutdownDirectories">
      <MemberSignature Language="C#" Value="public string[] GetAppDomainShutdownDirectories ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string[] GetAppDomainShutdownDirectories() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.ClientBuildManager.GetAppDomainShutdownDirectories" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAppDomainShutdownDirectories () As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::String ^&gt; ^ GetAppDomainShutdownDirectories();" />
      <MemberSignature Language="F#" Value="member this.GetAppDomainShutdownDirectories : unit -&gt; string[]" Usage="clientBuildManager.GetAppDomainShutdownDirectories " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ruft die Verzeichnisse mit Dateien ab, die bei einer Änderung zum Schließen der Anwendungsdomäne führen.</summary>
        <returns>Ein <see cref="T:System.String" />-Array, das die Verzeichnisnamen der obersten Ebene enthält.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Änderungen an Dateien in bestimmten Verzeichnissen der obersten Ebene bewirken, dass die Anwendungsdomäne heruntergefahren wird. Dateien in den Verzeichnissen bin, App_Code, Global_Resources, Web References und App_Browsers werden überwacht, um Änderungen zu erkennen. Wenn Änderungen erkannt werden, wird die Anwendungsdomäne heruntergefahren.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Compilation.BuildProvider" />
        <altmember cref="T:System.Web.Compilation.AssemblyBuilder" />
        <related type="Article" href="https://msdn.microsoft.com/library/a88e56f9-b232-47c5-92e0-f9674ed15e5a">ASP.NET-Vorkompilierung der Website</related>
      </Docs>
    </Member>
    <Member MemberName="GetBrowserDefinitions">
      <MemberSignature Language="C#" Value="public System.Collections.IDictionary GetBrowserDefinitions ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.IDictionary GetBrowserDefinitions() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.ClientBuildManager.GetBrowserDefinitions" />
      <MemberSignature Language="VB.NET" Value="Public Function GetBrowserDefinitions () As IDictionary" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::IDictionary ^ GetBrowserDefinitions();" />
      <MemberSignature Language="F#" Value="member this.GetBrowserDefinitions : unit -&gt; System.Collections.IDictionary" Usage="clientBuildManager.GetBrowserDefinitions " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IDictionary</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ruft eine Auflistung der Browserelemente ab.</summary>
        <returns>Ein <see cref="T:System.Collections.IDictionary" />, das Browserelemente enthält.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Das <xref:System.Collections.IDictionary>-Objekt enthält Browser Namen für die Schlüssel und <xref:System.Web.UI.Triplet> Objekte für die Werte. Die <xref:System.Web.UI.Triplet>-Objekte enthalten jeweils den Namen des übergeordneten Browser Elements, eine Beschreibung und die Tiefe des Browser-Elements in der Struktur.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Configuration.BrowserCapabilitiesFactory" />
        <altmember cref="T:System.Web.Compilation.BuildProvider" />
        <altmember cref="T:System.Web.Compilation.AssemblyBuilder" />
        <related type="Article" href="https://msdn.microsoft.com/library/a88e56f9-b232-47c5-92e0-f9674ed15e5a">ASP.NET-Vorkompilierung der Website</related>
      </Docs>
    </Member>
    <Member MemberName="GetCodeDirectoryInformation">
      <MemberSignature Language="C#" Value="public void GetCodeDirectoryInformation (string virtualCodeDir, out Type codeDomProviderType, out System.CodeDom.Compiler.CompilerParameters compilerParameters, out string generatedFilesDir);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void GetCodeDirectoryInformation(string virtualCodeDir, [out] class System.Type&amp; codeDomProviderType, [out] class System.CodeDom.Compiler.CompilerParameters&amp; compilerParameters, [out] string&amp; generatedFilesDir) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.ClientBuildManager.GetCodeDirectoryInformation(System.String,System.Type@,System.CodeDom.Compiler.CompilerParameters@,System.String@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetCodeDirectoryInformation (virtualCodeDir As String, ByRef codeDomProviderType As Type, ByRef compilerParameters As CompilerParameters, ByRef generatedFilesDir As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GetCodeDirectoryInformation(System::String ^ virtualCodeDir, [Runtime::InteropServices::Out] Type ^ % codeDomProviderType, [Runtime::InteropServices::Out] System::CodeDom::Compiler::CompilerParameters ^ % compilerParameters, [Runtime::InteropServices::Out] System::String ^ % generatedFilesDir);" />
      <MemberSignature Language="F#" Value="member this.GetCodeDirectoryInformation : string * Type * CompilerParameters * string -&gt; unit" Usage="clientBuildManager.GetCodeDirectoryInformation (virtualCodeDir, codeDomProviderType, compilerParameters, generatedFilesDir)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualCodeDir" Type="System.String" />
        <Parameter Name="codeDomProviderType" Type="System.Type" RefType="out" />
        <Parameter Name="compilerParameters" Type="System.CodeDom.Compiler.CompilerParameters" RefType="out" />
        <Parameter Name="generatedFilesDir" Type="System.String" RefType="out" />
      </Parameters>
      <Docs>
        <param name="virtualCodeDir">Das Verzeichnis, zu dem Informationen abgerufen werden sollen.</param>
        <param name="codeDomProviderType">Diese Methode gibt den für die Codegenerierung und die Kompilierung verwendeten Anbietertyp zurück.</param>
        <param name="compilerParameters">Diese Methode gibt Eigenschaften zurück, die definieren, wie die Datei kompiliert wird.</param>
        <param name="generatedFilesDir">Diese Methode gibt das Verzeichnis für aus Nicht-Codedateien generierte Dateien zurück.</param>
        <summary>Ruft Informationen über den Compilertyp, Compilerparameter und das Verzeichnis ab, in dem aus Nicht-Codedateien (z. B. WSDL-Dateien) generierte Codedateien gespeichert werden sollen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.Compilation.ClientBuildManager.GetCodeDirectoryInformation%2A>-Methode ruft die Informationen ab, die zum Erstellen eines Code Verzeichnisses benötigt werden. Diese Informationen werden über drei `out` Parameter zurückgegeben. Der `codeDomProviderType`-Parameter gibt den Anbietertyp für das Erstellen und Kompilieren der Dateien im Code Verzeichnis zurück. Der `compilerParameters`-Parameter enthält Eigenschaften, die das Kompilierungs Verhalten bestimmen. Der `generatedFilesDir`-Parameter speichert den Verzeichnispfad, der alle Code Dateien enthält, die von nicht-Code Dateien im Code Verzeichnis generiert werden, z. b. WSDL-Dateien.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="virtualCodeDir" /> ist NULL.</exception>
        <altmember cref="T:System.Web.Compilation.BuildManager" />
        <altmember cref="T:System.Web.Compilation.BuildProvider" />
        <altmember cref="T:System.Web.Compilation.AssemblyBuilder" />
        <related type="Article" href="https://msdn.microsoft.com/library/a88e56f9-b232-47c5-92e0-f9674ed15e5a">ASP.NET-Vorkompilierung der Website</related>
      </Docs>
    </Member>
    <Member MemberName="GetCompiledType">
      <MemberSignature Language="C#" Value="public Type GetCompiledType (string virtualPath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Type GetCompiledType(string virtualPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.ClientBuildManager.GetCompiledType(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCompiledType (virtualPath As String) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Type ^ GetCompiledType(System::String ^ virtualPath);" />
      <MemberSignature Language="F#" Value="member this.GetCompiledType : string -&gt; Type" Usage="clientBuildManager.GetCompiledType virtualPath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="virtualPath">Der virtuelle Pfad der zu kompilierenden Datei.</param>
        <summary>Kompiliert die durch den virtuellen Pfad dargestellte Datei und gibt ihren kompilierten Typ zurück.</summary>
        <returns>Der <see cref="T:System.Type" /> der kompilierten Datei.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="virtualPath" /> ist NULL.</exception>
        <altmember cref="T:System.Web.Compilation.BuildManager" />
        <altmember cref="T:System.Web.Compilation.BuildProvider" />
        <altmember cref="T:System.Web.Compilation.AssemblyBuilder" />
        <related type="Article" href="https://msdn.microsoft.com/library/a88e56f9-b232-47c5-92e0-f9674ed15e5a">ASP.NET-Vorkompilierung der Website</related>
      </Docs>
    </Member>
    <Member MemberName="GetCompilerParameters">
      <MemberSignature Language="C#" Value="public void GetCompilerParameters (string virtualPath, out Type codeDomProviderType, out System.CodeDom.Compiler.CompilerParameters compilerParameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void GetCompilerParameters(string virtualPath, [out] class System.Type&amp; codeDomProviderType, [out] class System.CodeDom.Compiler.CompilerParameters&amp; compilerParameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.ClientBuildManager.GetCompilerParameters(System.String,System.Type@,System.CodeDom.Compiler.CompilerParameters@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetCompilerParameters (virtualPath As String, ByRef codeDomProviderType As Type, ByRef compilerParameters As CompilerParameters)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GetCompilerParameters(System::String ^ virtualPath, [Runtime::InteropServices::Out] Type ^ % codeDomProviderType, [Runtime::InteropServices::Out] System::CodeDom::Compiler::CompilerParameters ^ % compilerParameters);" />
      <MemberSignature Language="F#" Value="member this.GetCompilerParameters : string * Type * CompilerParameters -&gt; unit" Usage="clientBuildManager.GetCompilerParameters (virtualPath, codeDomProviderType, compilerParameters)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
        <Parameter Name="codeDomProviderType" Type="System.Type" RefType="out" />
        <Parameter Name="compilerParameters" Type="System.CodeDom.Compiler.CompilerParameters" RefType="out" />
      </Parameters>
      <Docs>
        <param name="virtualPath">Der virtuelle Pfad zur Datei.</param>
        <param name="codeDomProviderType">Diese Methode gibt den für die Codegenerierung und die Kompilierung verwendeten Anbietertyp zurück.</param>
        <param name="compilerParameters">Diese Methode gibt Eigenschaften zurück, die definieren, wie die Datei kompiliert wird.</param>
        <summary>Gibt den Compilertyp und die Parameter zurück, die verwendet werden, um eine durch einen virtuellen Pfad dargestellte Datei zu erstellen.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="virtualPath" /> ist NULL.</exception>
        <altmember cref="P:System.Web.Compilation.CompilerType.CompilerParameters" />
        <altmember cref="T:System.Web.Compilation.BuildProvider" />
        <altmember cref="T:System.Web.Compilation.AssemblyBuilder" />
        <related type="Article" href="https://msdn.microsoft.com/library/a88e56f9-b232-47c5-92e0-f9674ed15e5a">ASP.NET-Vorkompilierung der Website</related>
      </Docs>
    </Member>
    <Member MemberName="GetGeneratedFileVirtualPath">
      <MemberSignature Language="C#" Value="public string GetGeneratedFileVirtualPath (string filePath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetGeneratedFileVirtualPath(string filePath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.ClientBuildManager.GetGeneratedFileVirtualPath(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetGeneratedFileVirtualPath (filePath As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetGeneratedFileVirtualPath(System::String ^ filePath);" />
      <MemberSignature Language="F#" Value="member this.GetGeneratedFileVirtualPath : string -&gt; string" Usage="clientBuildManager.GetGeneratedFileVirtualPath filePath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filePath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="filePath">Der vollständige physische Pfad zu einer generierten Datei.</param>
        <summary>Gibt den virtuellen Pfad einer generierten Datei zurück.</summary>
        <returns>Ein <see cref="T:System.String" />, der den virtuellen Pfad für <paramref name="filePath" /> enthält.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="filePath" /> ist NULL.</exception>
        <altmember cref="T:System.Web.Compilation.BuildManager" />
        <altmember cref="T:System.Web.Compilation.BuildProvider" />
        <altmember cref="T:System.Web.Compilation.AssemblyBuilder" />
        <related type="Article" href="https://msdn.microsoft.com/library/a88e56f9-b232-47c5-92e0-f9674ed15e5a">ASP.NET-Vorkompilierung der Website</related>
      </Docs>
    </Member>
    <Member MemberName="GetGeneratedSourceFile">
      <MemberSignature Language="C#" Value="public string GetGeneratedSourceFile (string virtualPath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetGeneratedSourceFile(string virtualPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.ClientBuildManager.GetGeneratedSourceFile(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetGeneratedSourceFile (virtualPath As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetGeneratedSourceFile(System::String ^ virtualPath);" />
      <MemberSignature Language="F#" Value="member this.GetGeneratedSourceFile : string -&gt; string" Usage="clientBuildManager.GetGeneratedSourceFile virtualPath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="virtualPath">Der virtuelle Pfad der abzurufenden Datei.</param>
        <summary>Ruft den physischen Pfad zur generierten Datei für einen virtuellen Pfad ab.</summary>
        <returns>Ein <see cref="T:System.String" />, der den physischen Pfad zur generierten Datei enthält.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="virtualPath" /> ist NULL.</exception>
        <altmember cref="T:System.Web.Compilation.BuildProvider" />
        <altmember cref="T:System.Web.Compilation.AssemblyBuilder" />
        <related type="Article" href="https://msdn.microsoft.com/library/a88e56f9-b232-47c5-92e0-f9674ed15e5a">ASP.NET-Vorkompilierung der Website</related>
      </Docs>
    </Member>
    <Member MemberName="GetTopLevelAssemblyReferences">
      <MemberSignature Language="C#" Value="public string[] GetTopLevelAssemblyReferences (string virtualPath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string[] GetTopLevelAssemblyReferences(string virtualPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.ClientBuildManager.GetTopLevelAssemblyReferences(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTopLevelAssemblyReferences (virtualPath As String) As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::String ^&gt; ^ GetTopLevelAssemblyReferences(System::String ^ virtualPath);" />
      <MemberSignature Language="F#" Value="member this.GetTopLevelAssemblyReferences : string -&gt; string[]" Usage="clientBuildManager.GetTopLevelAssemblyReferences virtualPath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="virtualPath">Der Konfigurationsname und der Pfad.</param>
        <summary>Gibt ein Array der im Bin-Verzeichnis und im <see langword="&lt;assembly&gt;" />-Abschnitt der Webkonfigurationsdatei definierten Assemblys zurück.</summary>
        <returns>Ein <see cref="T:System.String" />-Array, das Pfade zu CodeBases im Bin-Verzeichnis und im <see langword="&lt;assembly&gt;" />-Abschnitt der Webkonfigurationsdatei enthält.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="virtualPath" /> ist NULL.</exception>
        <altmember cref="T:System.Web.Compilation.BuildProvider" />
        <altmember cref="T:System.Web.Compilation.AssemblyBuilder" />
        <related type="Article" href="https://msdn.microsoft.com/library/a88e56f9-b232-47c5-92e0-f9674ed15e5a">ASP.NET-Vorkompilierung der Website</related>
      </Docs>
    </Member>
    <Member MemberName="GetVirtualCodeDirectories">
      <MemberSignature Language="C#" Value="public string[] GetVirtualCodeDirectories ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string[] GetVirtualCodeDirectories() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.ClientBuildManager.GetVirtualCodeDirectories" />
      <MemberSignature Language="VB.NET" Value="Public Function GetVirtualCodeDirectories () As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::String ^&gt; ^ GetVirtualCodeDirectories();" />
      <MemberSignature Language="F#" Value="member this.GetVirtualCodeDirectories : unit -&gt; string[]" Usage="clientBuildManager.GetVirtualCodeDirectories " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt die virtuellen Pfade zum Verzeichnis App_Code und seinen Unterverzeichnissen in einer ASP.NET-Anwendung zurück.</summary>
        <returns>Ein <see cref="T:System.String" />-Array, das alle virtuellen Pfade zu Codeverzeichnissen in einer Anwendung enthält.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.Compilation.BuildManager" />
        <altmember cref="T:System.Web.Compilation.BuildProvider" />
        <altmember cref="T:System.Web.Compilation.AssemblyBuilder" />
        <related type="Article" href="https://msdn.microsoft.com/library/a88e56f9-b232-47c5-92e0-f9674ed15e5a">ASP.NET-Vorkompilierung der Website</related>
      </Docs>
    </Member>
    <Member MemberName="InitializeLifetimeService">
      <MemberSignature Language="C#" Value="public override object InitializeLifetimeService ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object InitializeLifetimeService() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.ClientBuildManager.InitializeLifetimeService" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function InitializeLifetimeService () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ InitializeLifetimeService();" />
      <MemberSignature Language="F#" Value="override this.InitializeLifetimeService : unit -&gt; obj" Usage="clientBuildManager.InitializeLifetimeService " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Führt zu einer unendlichen Lebensdauer der Anwendungsdomäne, indem das Erstellen eines Lease verhindert wird.</summary>
        <returns>Immer <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode überschreibt die <xref:System.MarshalByRefObject.InitializeLifetimeService%2A>-Methode in ihrer Basisklasse. Es wird immer `null` zurückgegeben. Dadurch wird verhindert, dass eine Lease erstellt wird, die die Lebensdauer der Anwendungsdomäne einschränkt.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Compilation.BuildManager" />
        <altmember cref="T:System.Web.Compilation.BuildProvider" />
        <altmember cref="T:System.Web.Compilation.AssemblyBuilder" />
        <related type="Article" href="https://msdn.microsoft.com/library/a88e56f9-b232-47c5-92e0-f9674ed15e5a">ASP.NET-Vorkompilierung der Website</related>
      </Docs>
    </Member>
    <Member MemberName="IsCodeAssembly">
      <MemberSignature Language="C#" Value="public bool IsCodeAssembly (string assemblyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsCodeAssembly(string assemblyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.ClientBuildManager.IsCodeAssembly(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsCodeAssembly (assemblyName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsCodeAssembly(System::String ^ assemblyName);" />
      <MemberSignature Language="F#" Value="member this.IsCodeAssembly : string -&gt; bool" Usage="clientBuildManager.IsCodeAssembly assemblyName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="assemblyName">Der Name der Assembly, die als Codeassembly identifiziert werden soll.</param>
        <summary>Gibt an, ob eine Assembly eine Codeassembly ist.</summary>
        <returns><see langword="true" />, wenn der <paramref name="assemblyName" />-Parameter zu einer der generierten Codeassemblys passt, andernfalls <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="assemblyName" /> ist NULL.</exception>
        <altmember cref="T:System.Web.Compilation.BuildProvider" />
        <altmember cref="T:System.Web.Compilation.AssemblyBuilder" />
        <related type="Article" href="https://msdn.microsoft.com/library/a88e56f9-b232-47c5-92e0-f9674ed15e5a">ASP.NET-Vorkompilierung der Website</related>
      </Docs>
    </Member>
    <Member MemberName="IsHostCreated">
      <MemberSignature Language="C#" Value="public bool IsHostCreated { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsHostCreated" />
      <MemberSignature Language="DocId" Value="P:System.Web.Compilation.ClientBuildManager.IsHostCreated" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsHostCreated As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsHostCreated { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsHostCreated : bool" Usage="System.Web.Compilation.ClientBuildManager.IsHostCreated" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob eine Anwendungsdomäne zum Kompilieren von ASP.NET-Webanwendungen erstellt wurde.</summary>
        <value><see langword="true" />, wenn die Anwendungsdomäne zum Kompilieren von ASP.NET-Webanwendungen erstellt wurde, andernfalls <see langword="false" />.</value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.Compilation.BuildManager" />
        <altmember cref="T:System.Web.Compilation.BuildProvider" />
        <altmember cref="T:System.Web.Compilation.AssemblyBuilder" />
        <related type="Article" href="https://msdn.microsoft.com/library/a88e56f9-b232-47c5-92e0-f9674ed15e5a">ASP.NET-Vorkompilierung der Website</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="PrecompileApplication">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Führt die Vorkompilierung einer ASP.NET-Anwendung aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ASP.NET unterstützt drei Arten der Vorkompilierung. Ein Formular ermöglicht die direkte Vorkompilierung einer ASP.NET-Anwendung. In diesem Formular wird die Site in der Produktionsumgebung bereitgestellt und dann vorkompiliert, sodass die Site beim ersten Besuch durch einen Benutzer nicht dynamisch kompiliert werden muss. Der erste Benutzer der Site findet nicht die Verzögerung, die normalerweise auf einer dynamisch kompilierten Site auftritt.  
  
 Die beiden anderen Formen der Vorkompilierung werden für die Bereitstellung verwendet. In beiden Formen wird ein Layout der Site generiert, das auf einem Produktions Computer bereitgestellt werden kann. Eines dieser Formulare umfasst die Markup Seiten, sodass auf der kompilierten Website eine gewisse Aktualisierung durchgeführt werden kann. Das andere Formular enthält nicht die Markup Seiten und kann daher nicht aktualisiert werden, ohne dass die ursprüngliche Site neu kompiliert werden muss. In einer dieser Formen der Vorkompilierung wird kein Quellcode für die Zielumgebung bereitgestellt.  
  
 Die Anwendung, die vorkompiliert werden soll, wird durch den <xref:System.Web.Compilation.ClientBuildManager>-Konstruktor definiert. Das <xref:System.Web.Compilation.ClientBuildManagerParameter>-Objekt des <xref:System.Web.Compilation.ClientBuildManager.%23ctor%2A> Konstruktors definiert, welche der drei Formen der Vorkompilierung durchgeführt werden soll.  
  
 Ein Entwickler kann eine Website mit dem `aspnet_compiler` Befehlszeilen Tool oder durch Aufrufen der <xref:System.Web.Compilation.ClientBuildManager.PrecompileApplication%2A>-Methode vorkompilieren.  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Web.Compilation.ClientBuildManager.#ctor" />
        <related type="Article" href="https://msdn.microsoft.com/library/a88e56f9-b232-47c5-92e0-f9674ed15e5a">ASP.NET-Vorkompilierung der Website</related>
      </Docs>
    </MemberGroup>
    <Member MemberName="PrecompileApplication">
      <MemberSignature Language="C#" Value="public void PrecompileApplication ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void PrecompileApplication() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.ClientBuildManager.PrecompileApplication" />
      <MemberSignature Language="VB.NET" Value="Public Sub PrecompileApplication ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PrecompileApplication();" />
      <MemberSignature Language="F#" Value="member this.PrecompileApplication : unit -&gt; unit" Usage="clientBuildManager.PrecompileApplication " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Führt die Vorkompilierung einer ASP.NET-Anwendung aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ASP.NET unterstützt drei Arten der Vorkompilierung. Ein Formular ermöglicht die direkte Vorkompilierung einer ASP.NET-Anwendung. In diesem Formular wird die Site in der Produktionsumgebung bereitgestellt und dann vorkompiliert, sodass die Site beim ersten Besuch durch einen Benutzer nicht dynamisch kompiliert werden muss. Der erste Benutzer der Site findet nicht die Verzögerung, die normalerweise auf einer dynamisch kompilierten Site auftritt.  
  
 Die beiden anderen Formen der Vorkompilierung werden für die Bereitstellung verwendet. In beiden Formen wird ein Layout der Site generiert, das auf einem Produktions Computer bereitgestellt werden kann. Eines dieser Formulare umfasst die Markup Seiten, sodass auf der kompilierten Website eine gewisse Aktualisierung durchgeführt werden kann. Das andere Formular enthält nicht die Markup Seiten und kann daher nicht aktualisiert werden, ohne dass die ursprüngliche Site neu kompiliert werden muss. In einer dieser Formen der Vorkompilierung wird kein Quellcode für die Zielumgebung bereitgestellt.  
  
 Die Anwendung, die vorkompiliert werden soll, wird durch den <xref:System.Web.Compilation.ClientBuildManager>-Konstruktor definiert. Das <xref:System.Web.Compilation.ClientBuildManagerParameter>-Objekt des <xref:System.Web.Compilation.ClientBuildManager.%23ctor%2A> Konstruktors definiert, welche der drei Formen der Vorkompilierung durchgeführt werden soll.  
  
 Ein Entwickler kann eine Website mit dem `aspnet_compiler` Befehlszeilen Tool oder durch Aufrufen der <xref:System.Web.Compilation.ClientBuildManager.PrecompileApplication%2A>-Methode vorkompilieren.  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Web.Compilation.ClientBuildManager.#ctor" />
        <related type="Article" href="https://msdn.microsoft.com/library/a88e56f9-b232-47c5-92e0-f9674ed15e5a">ASP.NET-Vorkompilierung der Website</related>
      </Docs>
    </Member>
    <Member MemberName="PrecompileApplication">
      <MemberSignature Language="C#" Value="public void PrecompileApplication (System.Web.Compilation.ClientBuildManagerCallback callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void PrecompileApplication(class System.Web.Compilation.ClientBuildManagerCallback callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.ClientBuildManager.PrecompileApplication(System.Web.Compilation.ClientBuildManagerCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PrecompileApplication (callback As ClientBuildManagerCallback)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PrecompileApplication(System::Web::Compilation::ClientBuildManagerCallback ^ callback);" />
      <MemberSignature Language="F#" Value="member this.PrecompileApplication : System.Web.Compilation.ClientBuildManagerCallback -&gt; unit" Usage="clientBuildManager.PrecompileApplication callback" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.Web.Compilation.ClientBuildManagerCallback" />
      </Parameters>
      <Docs>
        <param name="callback">Ein <see cref="T:System.Web.Compilation.ClientBuildManagerCallback" />, der die Methode enthält, die beim Erstellen eines Berichts über das Ergebnis der Kompilierung aufgerufen werden soll.</param>
        <summary>Kompiliert eine ASP.NET-Anwendung vor und stellt eine Rückrufmethode bereit, um Statusinformationen über den Build zu empfangen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ASP.NET unterstützt drei Arten der Vorkompilierung. Ein Formular ermöglicht die direkte Vorkompilierung einer ASP.NET-Anwendung. In diesem Formular wird die Site in der Produktionsumgebung bereitgestellt und dann vorkompiliert, sodass die Site beim ersten Besuch durch einen Benutzer nicht dynamisch kompiliert werden muss. Der erste Benutzer der Site findet nicht die Verzögerung, die normalerweise auf einer dynamisch kompilierten Site auftritt. Der `callback`-Parameter enthält die Methode, die aufgerufen werden soll, wenn das Ergebnis der Kompilierung gemeldet wird.  
  
 Die beiden anderen Formen der Vorkompilierung werden für die Bereitstellung verwendet. In beiden Formen wird ein Layout der Site generiert, das auf einem Produktions Computer bereitgestellt werden kann. Eines dieser Formulare umfasst die Markup Seiten, sodass auf der kompilierten Website eine gewisse Aktualisierung durchgeführt werden kann. Das andere Formular enthält nicht die Markup Seiten und kann daher nicht aktualisiert werden, ohne dass die ursprüngliche Site neu kompiliert werden muss. In einer dieser Formen der Vorkompilierung wird kein Quellcode für die Zielumgebung bereitgestellt.  
  
 Die Anwendung, die vorkompiliert werden soll, wird durch den <xref:System.Web.Compilation.ClientBuildManager>-Konstruktor definiert. Das <xref:System.Web.Compilation.ClientBuildManagerParameter>-Objekt des <xref:System.Web.Compilation.ClientBuildManager.%23ctor%2A> Konstruktors definiert, welche der drei Formen der Vorkompilierung durchgeführt werden soll.  
  
 Ein Entwickler kann eine Website mit dem `aspnet_compiler` Befehlszeilen Tool oder durch Aufrufen der <xref:System.Web.Compilation.ClientBuildManager.PrecompileApplication%2A>-Methode vorkompilieren.  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Web.Compilation.ClientBuildManager.#ctor" />
        <altmember cref="T:System.Web.Compilation.ClientBuildManagerCallback" />
        <related type="Article" href="https://msdn.microsoft.com/library/a88e56f9-b232-47c5-92e0-f9674ed15e5a">ASP.NET-Vorkompilierung der Website</related>
      </Docs>
    </Member>
    <Member MemberName="PrecompileApplication">
      <MemberSignature Language="C#" Value="public void PrecompileApplication (System.Web.Compilation.ClientBuildManagerCallback callback, bool forceCleanBuild);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void PrecompileApplication(class System.Web.Compilation.ClientBuildManagerCallback callback, bool forceCleanBuild) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.ClientBuildManager.PrecompileApplication(System.Web.Compilation.ClientBuildManagerCallback,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PrecompileApplication (callback As ClientBuildManagerCallback, forceCleanBuild As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PrecompileApplication(System::Web::Compilation::ClientBuildManagerCallback ^ callback, bool forceCleanBuild);" />
      <MemberSignature Language="F#" Value="member this.PrecompileApplication : System.Web.Compilation.ClientBuildManagerCallback * bool -&gt; unit" Usage="clientBuildManager.PrecompileApplication (callback, forceCleanBuild)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.Web.Compilation.ClientBuildManagerCallback" />
        <Parameter Name="forceCleanBuild" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="callback">Ein <see cref="T:System.Web.Compilation.ClientBuildManagerCallback" />, der die Methode enthält, die beim Erstellen eines Berichts über das Ergebnis der Kompilierung aufgerufen werden soll.</param>
        <param name="forceCleanBuild"><see langword="true" />, um eine saubere Builderstellung durchzuführen, bei der zunächst sämtliche Objekte und Zwischendateien gelöscht werden, <see langword="false" />, um nur die geänderten Dateien neu zu erstellen. Legen Sie diesen Parameter auf true fest, wenn die Möglichkeit besteht, dass eine Abhängigkeit von der Buildumgebung nicht erfasst wird.</param>
        <summary>Führt die Vorkompilierung einer ASP.NET-Anwendung aus, stellt eine Rückrufmethode bereit, um Statusinformationen über den Build zu empfangen und gibt an, ob ein sauberer Build erstellt werden soll.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ASP.NET unterstützt drei Arten der Vorkompilierung. Ein Formular ermöglicht die direkte Vorkompilierung einer ASP.NET-Anwendung. In diesem Formular wird die Site in der Produktionsumgebung bereitgestellt und dann vorkompiliert, sodass die Site beim ersten Besuch durch einen Benutzer nicht dynamisch kompiliert werden muss. Der erste Benutzer der Site findet nicht die Verzögerung, die normalerweise auf einer dynamisch kompilierten Site auftritt. Der `callback`-Parameter enthält die Methode, die aufgerufen werden soll, wenn das Ergebnis der Kompilierung gemeldet wird.  
  
 Die beiden anderen Formen der Vorkompilierung werden für die Bereitstellung verwendet. In beiden Formen wird ein Layout der Site generiert, das auf einem Produktions Computer bereitgestellt werden kann. Eines dieser Formulare umfasst die Markup Seiten, sodass auf der kompilierten Website eine gewisse Aktualisierung durchgeführt werden kann. Das andere Formular enthält nicht die Markup Seiten und kann daher nicht aktualisiert werden, ohne dass die ursprüngliche Site neu kompiliert werden muss. In einer dieser Formen der Vorkompilierung wird kein Quellcode für die Zielumgebung bereitgestellt.  
  
 Die Anwendung, die vorkompiliert werden soll, wird durch den <xref:System.Web.Compilation.ClientBuildManager>-Konstruktor definiert. Das <xref:System.Web.Compilation.ClientBuildManagerParameter>-Objekt des <xref:System.Web.Compilation.ClientBuildManager.%23ctor%2A> Konstruktors definiert, welche der drei Formen der Vorkompilierung durchgeführt werden soll.  
  
 Ein Entwickler kann eine Website mit dem `aspnet_compiler` Befehlszeilen Tool oder durch Aufrufen der <xref:System.Web.Compilation.ClientBuildManager.PrecompileApplication%2A>-Methode vorkompilieren.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Compilation.BuildManager" />
        <altmember cref="T:System.Web.Compilation.BuildProvider" />
        <altmember cref="T:System.Web.Compilation.AssemblyBuilder" />
        <altmember cref="Overload:System.Web.Compilation.ClientBuildManager.#ctor" />
        <altmember cref="T:System.Web.Compilation.ClientBuildManagerCallback" />
        <related type="Article" href="https://msdn.microsoft.com/library/a88e56f9-b232-47c5-92e0-f9674ed15e5a">ASP.NET-Vorkompilierung der Website</related>
      </Docs>
    </Member>
    <Member MemberName="System.IDisposable.Dispose">
      <MemberSignature Language="C#" Value="void IDisposable.Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.IDisposable.Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.ClientBuildManager.System#IDisposable#Dispose" />
      <MemberSignature Language="VB.NET" Value="Sub Dispose () Implements IDisposable.Dispose" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.IDisposable.Dispose() = IDisposable::Dispose;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Beendet die aktuelle ASP.NET-Anwendung.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.Compilation.BuildManager" />
        <altmember cref="T:System.Web.Compilation.BuildProvider" />
        <altmember cref="T:System.Web.Compilation.AssemblyBuilder" />
        <related type="Article" href="https://msdn.microsoft.com/library/a88e56f9-b232-47c5-92e0-f9674ed15e5a">ASP.NET-Vorkompilierung der Website</related>
      </Docs>
    </Member>
    <Member MemberName="Unload">
      <MemberSignature Language="C#" Value="public bool Unload ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Unload() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.ClientBuildManager.Unload" />
      <MemberSignature Language="VB.NET" Value="Public Function Unload () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Unload();" />
      <MemberSignature Language="F#" Value="member this.Unload : unit -&gt; bool" Usage="clientBuildManager.Unload " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Entlädt die Anwendungsdomäne zum Kompilieren von ASP.NET-Webanwendungen.</summary>
        <returns><see langword="true" />, wenn die Anwendungsdomäne entladen wird, andernfalls <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.Compilation.BuildManager" />
        <altmember cref="T:System.Web.Compilation.BuildProvider" />
        <altmember cref="T:System.Web.Compilation.AssemblyBuilder" />
        <related type="Article" href="https://msdn.microsoft.com/library/a88e56f9-b232-47c5-92e0-f9674ed15e5a">ASP.NET-Vorkompilierung der Website</related>
      </Docs>
    </Member>
  </Members>
</Type>
