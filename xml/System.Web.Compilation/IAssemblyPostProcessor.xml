<Type Name="IAssemblyPostProcessor" FullName="System.Web.Compilation.IAssemblyPostProcessor">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="ffd3a317707e04d0b4ea7c0827b8fd6ce46fff3f" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30532134" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IAssemblyPostProcessor : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IAssemblyPostProcessor implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Web.Compilation.IAssemblyPostProcessor" />
  <TypeSignature Language="VB.NET" Value="Public Interface IAssemblyPostProcessor&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public interface class IAssemblyPostProcessor : IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="1b310-101">Definiert die Methode, die eine Klasse implementiert, um eine Assembly zu verarbeiten, nachdem diese erstellt wurde.</span>
      <span class="sxs-lookup">
        <span data-stu-id="1b310-101">Defines the method a class implements to process an assembly after the assembly has been built.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1b310-102">Eine Klasse implementieren diese Schnittstelle kann eine Assembly zugreifen, nachdem es kompiliert wurde.</span><span class="sxs-lookup"><span data-stu-id="1b310-102">A class implementing this interface can access an assembly after it has been compiled.</span></span> <span data-ttu-id="1b310-103">Die <xref:System.Web.Compilation.AssemblyBuilder> Klasse Assemblys kompiliert und anschließend überprüft, ob ein <xref:System.Web.Compilation.IAssemblyPostProcessor> Schnittstelle wurde in der Webkonfigurationsdatei registriert.</span><span class="sxs-lookup"><span data-stu-id="1b310-103">The <xref:System.Web.Compilation.AssemblyBuilder> class compiles assemblies and then checks to see whether an <xref:System.Web.Compilation.IAssemblyPostProcessor> interface has been registered in the Web configuration file.</span></span> <span data-ttu-id="1b310-104">Wenn dies der Fall ist, die <xref:System.Web.Compilation.AssemblyBuilder> -Instanz Aufrufe der <xref:System.Web.Compilation.IAssemblyPostProcessor.PostProcessAssembly%2A> Methode für die <xref:System.Web.Compilation.IAssemblyPostProcessor> Schnittstelle zum Ausführen aller Aktionen nach der Kompilierung und vor dem Laden der Assemblys.</span><span class="sxs-lookup"><span data-stu-id="1b310-104">If so, the <xref:System.Web.Compilation.AssemblyBuilder> instance calls the <xref:System.Web.Compilation.IAssemblyPostProcessor.PostProcessAssembly%2A> method for the <xref:System.Web.Compilation.IAssemblyPostProcessor> interface to perform any action after the compilation and before loading the assembly.</span></span> <span data-ttu-id="1b310-105">Beispielsweise konnte ein Profiler-Tools diese Schnittstelle zum Einrichten von Tests in der Assembly implementieren.</span><span class="sxs-lookup"><span data-stu-id="1b310-105">For example, a profiler tool could implement this interface to establish probes in the assembly.</span></span>  
  
 <span data-ttu-id="1b310-106">Wenn ein <xref:System.Web.Compilation.IAssemblyPostProcessor> Schnittstelle registriert ist, werden die ASP.NET-Anwendung und ihre Assemblys immer im Debugmodus kompiliert werden.</span><span class="sxs-lookup"><span data-stu-id="1b310-106">When an <xref:System.Web.Compilation.IAssemblyPostProcessor> interface is registered, the ASP.NET application and its assemblies will always be compiled in debug mode.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1b310-107">Im folgenden Codebeispiel wird veranschaulicht, wie eine Implementierung der Erstellung der <xref:System.Web.Compilation.IAssemblyPostProcessor> Schnittstelle, und registrieren Sie ihn in der Datei "Web.config" einer Webanwendung.</span><span class="sxs-lookup"><span data-stu-id="1b310-107">The following code example demonstrates how to create an implementation of the <xref:System.Web.Compilation.IAssemblyPostProcessor> interface, and register it in the Web.config file of a Web application.</span></span>  
  
 <span data-ttu-id="1b310-108">Der erste Teil des Codebeispiels erstellt eine Klasse namens `Samples.Process.postProcessTest` , implementiert die <xref:System.Web.Compilation.IAssemblyPostProcessor> Schnittstelle.</span><span class="sxs-lookup"><span data-stu-id="1b310-108">The first part of the code example creates a class named `Samples.Process.postProcessTest` that implements the <xref:System.Web.Compilation.IAssemblyPostProcessor> interface.</span></span> <span data-ttu-id="1b310-109">Diese Klasse führt die einfache Aktion Schreiben einer Datei bei der <xref:System.Web.Compilation.IAssemblyPostProcessor.PostProcessAssembly%2A> -Methode aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="1b310-109">This class performs the simple action of writing a file when the <xref:System.Web.Compilation.IAssemblyPostProcessor.PostProcessAssembly%2A> method is called.</span></span>  
  
 [!code-csharp[System.Web.Compilation.IAssemblyPostProcessor#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Compilation.IAssemblyPostProcessor/CS/postProcessTest.cs#1)]
 [!code-vb[System.Web.Compilation.IAssemblyPostProcessor#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Compilation.IAssemblyPostProcessor/VB/postProcessTest.vb#1)]  
  
 <span data-ttu-id="1b310-110">Kompilieren Sie die Klasse in eine DLL-Datei mit dem Befehl `csc /target:library postProcessTest.cs`.</span><span class="sxs-lookup"><span data-stu-id="1b310-110">Compile the class into a .dll file with the command `csc /target:library postProcessTest.cs`.</span></span> <span data-ttu-id="1b310-111">Der Ordner "Bin" der ASP.NET-Anwendung die resultierende DLL-Datei hinzu, und registrieren Sie die DLL-Datei in der Datei "Web.config", wie im folgenden Code gezeigt.</span><span class="sxs-lookup"><span data-stu-id="1b310-111">Add the resulting .dll file to the Bin folder of an ASP.NET application and register the .dll in the Web.config file, as shown in the following code.</span></span>  
  
```  
<compilation debug="true" assemblyPostProcessorType="Samples.Process.postProcessTest" />  
```  
  
 <span data-ttu-id="1b310-112">Wenn ein Benutzer die Website besucht, wird die Web-Anwendung dynamisch kompiliert wird, und die Datei wird MyTest.txt in C:\compile geschrieben.</span><span class="sxs-lookup"><span data-stu-id="1b310-112">When a user visits the Web site, the Web application is dynamically compiled and the file MyTest.txt will be written to C:\compile.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="PostProcessAssembly">
      <MemberSignature Language="C#" Value="public void PostProcessAssembly (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PostProcessAssembly(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.IAssemblyPostProcessor.PostProcessAssembly(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PostProcessAssembly (path As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PostProcessAssembly(System::String ^ path);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">
          <span data-ttu-id="1b310-113">Der Pfad der Assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1b310-113">The path to the assembly.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1b310-114">Wird aufgerufen, bevor die Assembly geladen wird, um der implementierenden Klasse das Ändern der Assembly zu ermöglichen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1b310-114">Called before the assembly is loaded to allow the implementing class to modify the assembly.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1b310-115">Die <xref:System.Web.Compilation.AssemblyBuilder> Klasse ruft diese Methode auf, nachdem die Assembly kompiliert wurde.</span><span class="sxs-lookup"><span data-stu-id="1b310-115">The <xref:System.Web.Compilation.AssemblyBuilder> class calls this method after the assembly has been compiled.</span></span> <span data-ttu-id="1b310-116">Bei dieser Methode sollte alle Aktionen, die ausgeführt werden, vor dem Laden der Assemblys enthalten sein.</span><span class="sxs-lookup"><span data-stu-id="1b310-116">Any actions to be taken before loading the assembly should be included in this method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1b310-117">Im folgenden Codebeispiel wird veranschaulicht, wie eine Implementierung der Erstellung der <xref:System.Web.Compilation.IAssemblyPostProcessor> Schnittstelle, und registrieren Sie ihn in der Datei "Web.config" einer Webanwendung.</span><span class="sxs-lookup"><span data-stu-id="1b310-117">The following code example demonstrates how to create an implementation of the <xref:System.Web.Compilation.IAssemblyPostProcessor> interface, and register it in the Web.config file of a Web application.</span></span>  
  
 <span data-ttu-id="1b310-118">Der erste Teil des Codebeispiels erstellt eine Klasse namens `Samples.Process.postProcessTest` , implementiert die <xref:System.Web.Compilation.IAssemblyPostProcessor> Schnittstelle.</span><span class="sxs-lookup"><span data-stu-id="1b310-118">The first part of the code example creates a class named `Samples.Process.postProcessTest` that implements the <xref:System.Web.Compilation.IAssemblyPostProcessor> interface.</span></span> <span data-ttu-id="1b310-119">Diese Klasse führt die einfache Aktion Schreiben einer Datei bei der <xref:System.Web.Compilation.IAssemblyPostProcessor.PostProcessAssembly%2A> -Methode aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="1b310-119">This class performs the simple action of writing a file when the <xref:System.Web.Compilation.IAssemblyPostProcessor.PostProcessAssembly%2A> method is called.</span></span>  
  
 [!code-csharp[System.Web.Compilation.IAssemblyPostProcessor#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Compilation.IAssemblyPostProcessor/CS/postProcessTest.cs#1)]
 [!code-vb[System.Web.Compilation.IAssemblyPostProcessor#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Compilation.IAssemblyPostProcessor/VB/postProcessTest.vb#1)]  
  
 <span data-ttu-id="1b310-120">Kompilieren Sie die Klasse in eine DLL-Datei mit dem Befehl `csc /target:library postProcessTest.cs`.</span><span class="sxs-lookup"><span data-stu-id="1b310-120">Compile the class into a .dll file with the command `csc /target:library postProcessTest.cs`.</span></span> <span data-ttu-id="1b310-121">Der Ordner "Bin" der ASP.NET-Anwendung die resultierende DLL-Datei hinzu, und registrieren Sie die DLL-Datei in der Datei "Web.config", wie im folgenden Code gezeigt.</span><span class="sxs-lookup"><span data-stu-id="1b310-121">Add the resulting .dll file to the Bin folder of an ASP.NET application and register the .dll in the Web.config file, as shown in the following code.</span></span>  
  
```  
<compilation debug="true" assemblyPostProcessorType="Samples.Process.postProcessTest" />  
```  
  
 <span data-ttu-id="1b310-122">Wenn ein Benutzer die Website besucht, wird die Web-Anwendung dynamisch kompiliert wird, und die Datei wird MyTest.txt in C:\compile geschrieben.</span><span class="sxs-lookup"><span data-stu-id="1b310-122">When a user visits the Web site, the Web application is dynamically compiled and the file MyTest.txt will be written to C:\compile.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>