<Type Name="IAssemblyPostProcessor" FullName="System.Web.Compilation.IAssemblyPostProcessor">
  <Metadata><Meta Name="ms.openlocfilehash" Value="7f3ce5813903e751fff1b66168f7c9c44ae5525c" /><Meta Name="ms.sourcegitcommit" Value="397961a0164281b579f68064c3bb66c071f374d9" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="07/14/2020" /><Meta Name="ms.locfileid" Value="69096983" /></Metadata><TypeSignature Language="C#" Value="public interface IAssemblyPostProcessor : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IAssemblyPostProcessor implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Web.Compilation.IAssemblyPostProcessor" />
  <TypeSignature Language="VB.NET" Value="Public Interface IAssemblyPostProcessor&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public interface class IAssemblyPostProcessor : IDisposable" />
  <TypeSignature Language="F#" Value="type IAssemblyPostProcessor = interface&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="9bfcb-101">Definiert die Methode, die eine Klasse implementiert, um eine Assembly zu verarbeiten, nachdem diese erstellt wurde.</span><span class="sxs-lookup"><span data-stu-id="9bfcb-101">Defines the method a class implements to process an assembly after the assembly has been built.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9bfcb-102">Eine Klasse, die diese Schnittstelle implementiert, kann nach der Kompilierung auf eine Assembly zugreifen.</span><span class="sxs-lookup"><span data-stu-id="9bfcb-102">A class implementing this interface can access an assembly after it has been compiled.</span></span> <span data-ttu-id="9bfcb-103">Die <xref:System.Web.Compilation.AssemblyBuilder> -Klasse kompiliert Assemblys und überprüft dann, ob eine <xref:System.Web.Compilation.IAssemblyPostProcessor> Schnittstelle in der Webkonfigurationsdatei registriert wurde.</span><span class="sxs-lookup"><span data-stu-id="9bfcb-103">The <xref:System.Web.Compilation.AssemblyBuilder> class compiles assemblies and then checks to see whether an <xref:System.Web.Compilation.IAssemblyPostProcessor> interface has been registered in the Web configuration file.</span></span> <span data-ttu-id="9bfcb-104">Wenn dies der Fall ist, ruft die- <xref:System.Web.Compilation.AssemblyBuilder> Instanz die <xref:System.Web.Compilation.IAssemblyPostProcessor.PostProcessAssembly%2A> -Methode für die <xref:System.Web.Compilation.IAssemblyPostProcessor> -Schnittstelle auf, um nach der Kompilierung und vor dem Laden der Assembly Aktionen auszuführen</span><span class="sxs-lookup"><span data-stu-id="9bfcb-104">If so, the <xref:System.Web.Compilation.AssemblyBuilder> instance calls the <xref:System.Web.Compilation.IAssemblyPostProcessor.PostProcessAssembly%2A> method for the <xref:System.Web.Compilation.IAssemblyPostProcessor> interface to perform any action after the compilation and before loading the assembly.</span></span> <span data-ttu-id="9bfcb-105">Ein Profiler-Tool könnte diese Schnittstelle beispielsweise implementieren, um Tests in der Assembly herzustellen.</span><span class="sxs-lookup"><span data-stu-id="9bfcb-105">For example, a profiler tool could implement this interface to establish probes in the assembly.</span></span>  
  
 <span data-ttu-id="9bfcb-106">Wenn eine <xref:System.Web.Compilation.IAssemblyPostProcessor> Schnittstelle registriert wird, werden die ASP.NET-Anwendung und die zugehörigen Assemblys immer im Debugmodus kompiliert.</span><span class="sxs-lookup"><span data-stu-id="9bfcb-106">When an <xref:System.Web.Compilation.IAssemblyPostProcessor> interface is registered, the ASP.NET application and its assemblies will always be compiled in debug mode.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9bfcb-107">Im folgenden Codebeispiel wird veranschaulicht, wie eine Implementierung der <xref:System.Web.Compilation.IAssemblyPostProcessor> -Schnittstelle erstellt und in der Web.config-Datei einer Webanwendung registriert wird.</span><span class="sxs-lookup"><span data-stu-id="9bfcb-107">The following code example demonstrates how to create an implementation of the <xref:System.Web.Compilation.IAssemblyPostProcessor> interface, and register it in the Web.config file of a Web application.</span></span>  
  
 <span data-ttu-id="9bfcb-108">Der erste Teil des Code Beispiels erstellt eine Klasse mit `Samples.Process.postProcessTest` dem Namen, die die- <xref:System.Web.Compilation.IAssemblyPostProcessor> Schnittstelle implementiert.</span><span class="sxs-lookup"><span data-stu-id="9bfcb-108">The first part of the code example creates a class named `Samples.Process.postProcessTest` that implements the <xref:System.Web.Compilation.IAssemblyPostProcessor> interface.</span></span> <span data-ttu-id="9bfcb-109">Diese Klasse führt die einfache Aktion zum Schreiben einer Datei aus, wenn die- <xref:System.Web.Compilation.IAssemblyPostProcessor.PostProcessAssembly%2A> Methode aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="9bfcb-109">This class performs the simple action of writing a file when the <xref:System.Web.Compilation.IAssemblyPostProcessor.PostProcessAssembly%2A> method is called.</span></span>  
  
 [!code-csharp[System.Web.Compilation.IAssemblyPostProcessor#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Compilation.IAssemblyPostProcessor/CS/postProcessTest.cs#1)]
 [!code-vb[System.Web.Compilation.IAssemblyPostProcessor#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Compilation.IAssemblyPostProcessor/VB/postProcessTest.vb#1)]  
  
 <span data-ttu-id="9bfcb-110">Kompilieren Sie die Klasse mit dem Befehl in eine DLL- `csc /target:library postProcessTest.cs` Datei.</span><span class="sxs-lookup"><span data-stu-id="9bfcb-110">Compile the class into a .dll file with the command `csc /target:library postProcessTest.cs`.</span></span> <span data-ttu-id="9bfcb-111">Fügen Sie die resultierende DLL-Datei dem Ordner "bin" einer ASP.NET-Anwendung hinzu, und registrieren Sie die DLL-Datei in der Web.config-Datei, wie im folgenden Code gezeigt.</span><span class="sxs-lookup"><span data-stu-id="9bfcb-111">Add the resulting .dll file to the Bin folder of an ASP.NET application and register the .dll in the Web.config file, as shown in the following code.</span></span>  
  
```  
<compilation debug="true" assemblyPostProcessorType="Samples.Process.postProcessTest" />  
```  
  
 <span data-ttu-id="9bfcb-112">Wenn ein Benutzer die Website besucht, wird die Webanwendung dynamisch kompiliert, und die Datei MyTest.txt wird in c:\compilegeschrieben.</span><span class="sxs-lookup"><span data-stu-id="9bfcb-112">When a user visits the Web site, the Web application is dynamically compiled and the file MyTest.txt will be written to C:\compile.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="PostProcessAssembly">
      <MemberSignature Language="C#" Value="public void PostProcessAssembly (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PostProcessAssembly(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.IAssemblyPostProcessor.PostProcessAssembly(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PostProcessAssembly (path As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PostProcessAssembly(System::String ^ path);" />
      <MemberSignature Language="F#" Value="abstract member PostProcessAssembly : string -&gt; unit" Usage="iAssemblyPostProcessor.PostProcessAssembly path" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="9bfcb-113">Der Pfad der Assembly.</span><span class="sxs-lookup"><span data-stu-id="9bfcb-113">The path to the assembly.</span></span></param>
        <summary><span data-ttu-id="9bfcb-114">Wird aufgerufen, bevor die Assembly geladen wird, um der implementierenden Klasse das Ändern der Assembly zu ermöglichen.</span><span class="sxs-lookup"><span data-stu-id="9bfcb-114">Called before the assembly is loaded to allow the implementing class to modify the assembly.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9bfcb-115">Die- <xref:System.Web.Compilation.AssemblyBuilder> Klasse ruft diese Methode auf, nachdem die Assembly kompiliert wurde.</span><span class="sxs-lookup"><span data-stu-id="9bfcb-115">The <xref:System.Web.Compilation.AssemblyBuilder> class calls this method after the assembly has been compiled.</span></span> <span data-ttu-id="9bfcb-116">Alle Aktionen, die vor dem Laden der Assembly durchgeführt werden sollen, sollten in diese Methode eingeschlossen werden.</span><span class="sxs-lookup"><span data-stu-id="9bfcb-116">Any actions to be taken before loading the assembly should be included in this method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9bfcb-117">Im folgenden Codebeispiel wird veranschaulicht, wie eine Implementierung der <xref:System.Web.Compilation.IAssemblyPostProcessor> -Schnittstelle erstellt und in der Web.config-Datei einer Webanwendung registriert wird.</span><span class="sxs-lookup"><span data-stu-id="9bfcb-117">The following code example demonstrates how to create an implementation of the <xref:System.Web.Compilation.IAssemblyPostProcessor> interface, and register it in the Web.config file of a Web application.</span></span>  
  
 <span data-ttu-id="9bfcb-118">Der erste Teil des Code Beispiels erstellt eine Klasse mit `Samples.Process.postProcessTest` dem Namen, die die- <xref:System.Web.Compilation.IAssemblyPostProcessor> Schnittstelle implementiert.</span><span class="sxs-lookup"><span data-stu-id="9bfcb-118">The first part of the code example creates a class named `Samples.Process.postProcessTest` that implements the <xref:System.Web.Compilation.IAssemblyPostProcessor> interface.</span></span> <span data-ttu-id="9bfcb-119">Diese Klasse führt die einfache Aktion zum Schreiben einer Datei aus, wenn die- <xref:System.Web.Compilation.IAssemblyPostProcessor.PostProcessAssembly%2A> Methode aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="9bfcb-119">This class performs the simple action of writing a file when the <xref:System.Web.Compilation.IAssemblyPostProcessor.PostProcessAssembly%2A> method is called.</span></span>  
  
 [!code-csharp[System.Web.Compilation.IAssemblyPostProcessor#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Compilation.IAssemblyPostProcessor/CS/postProcessTest.cs#1)]
 [!code-vb[System.Web.Compilation.IAssemblyPostProcessor#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Compilation.IAssemblyPostProcessor/VB/postProcessTest.vb#1)]  
  
 <span data-ttu-id="9bfcb-120">Kompilieren Sie die Klasse mit dem Befehl in eine DLL- `csc /target:library postProcessTest.cs` Datei.</span><span class="sxs-lookup"><span data-stu-id="9bfcb-120">Compile the class into a .dll file with the command `csc /target:library postProcessTest.cs`.</span></span> <span data-ttu-id="9bfcb-121">Fügen Sie die resultierende DLL-Datei dem Ordner "bin" einer ASP.NET-Anwendung hinzu, und registrieren Sie die DLL-Datei in der Web.config-Datei, wie im folgenden Code gezeigt.</span><span class="sxs-lookup"><span data-stu-id="9bfcb-121">Add the resulting .dll file to the Bin folder of an ASP.NET application and register the .dll in the Web.config file, as shown in the following code.</span></span>  
  
```  
<compilation debug="true" assemblyPostProcessorType="Samples.Process.postProcessTest" />  
```  
  
 <span data-ttu-id="9bfcb-122">Wenn ein Benutzer die Website besucht, wird die Webanwendung dynamisch kompiliert, und die Datei MyTest.txt wird in c:\compilegeschrieben.</span><span class="sxs-lookup"><span data-stu-id="9bfcb-122">When a user visits the Web site, the Web application is dynamically compiled and the file MyTest.txt will be written to C:\compile.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
