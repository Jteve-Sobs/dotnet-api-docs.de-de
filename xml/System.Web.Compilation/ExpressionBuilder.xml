<Type Name="ExpressionBuilder" FullName="System.Web.Compilation.ExpressionBuilder">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="2fdfaba358c803078ed8f887cd2d70b7a32d185d" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30529394" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class ExpressionBuilder" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ExpressionBuilder extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.Compilation.ExpressionBuilder" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ExpressionBuilder" />
  <TypeSignature Language="C++ CLI" Value="public ref class ExpressionBuilder abstract" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="50a10-101">Wertet während der Seitenanalyse Ausdrücke aus.</span>
      <span class="sxs-lookup">
        <span data-stu-id="50a10-101">Evaluates expressions during page parsing.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="50a10-102">Die <xref:System.Web.Compilation.ExpressionBuilder> Klasse ist die Basisklasse für Ausdrucks-Generatoren, z. B. die <xref:System.Web.Compilation.AppSettingsExpressionBuilder> Klasse bereit, die Codeausdrücke während der Seitenanalyse zu erstellen.</span><span class="sxs-lookup"><span data-stu-id="50a10-102">The <xref:System.Web.Compilation.ExpressionBuilder> class is the base class for expression builders, such as the <xref:System.Web.Compilation.AppSettingsExpressionBuilder> class, that create code expressions during page parsing.</span></span>  
  
 <span data-ttu-id="50a10-103">Ausdrucks-Generatoren deklarative Ausdrücke zu analysieren und erstellen Sie Code zum Abrufen von Werten, die an eine Steuerelementeigenschaft gebunden.</span><span class="sxs-lookup"><span data-stu-id="50a10-103">Expression builders parse declarative expressions and create code to retrieve values bound to a control property.</span></span> <span data-ttu-id="50a10-104">In Szenarien ohne Kompilierung wertet ein Ausdrucks-Generator, der einen kein-kompiliert-Feature unterstützt den Ausdruck zur Laufzeit.</span><span class="sxs-lookup"><span data-stu-id="50a10-104">In no-compile scenarios, an expression builder that supports a no-compile feature evaluates the expression during run time.</span></span>  
  
 <span data-ttu-id="50a10-105">Wenn der Parser einen Ausdruck, der mit der Zeichenfolge als Trennzeichen ist trifft `<%$ %>`, einen Ausdrucks-Generator für den Ausdruck basierend auf dem Präfix in der Zeichenfolge erstellt.</span><span class="sxs-lookup"><span data-stu-id="50a10-105">When the page parser encounters an expression that is delimited with the string `<%$ %>`, it creates an expression builder for the expression based on the prefix in the string.</span></span> <span data-ttu-id="50a10-106">Das Präfix ist der Teil der Zeichenfolge, die links neben dem Doppelpunkt (:) ist.</span><span class="sxs-lookup"><span data-stu-id="50a10-106">The prefix is the portion of the string that is to the left of the colon (:).</span></span> <span data-ttu-id="50a10-107">Beispielsweise, wenn der Parser erkennt die Zeichenfolge `<%$ ConnectionStrings:MessageDB %>`, erstellt er eine <xref:System.Web.Compilation.ConnectionStringsExpressionBuilder> Objekt.</span><span class="sxs-lookup"><span data-stu-id="50a10-107">For example, when the parser encounters the string `<%$ ConnectionStrings:MessageDB %>`, it creates a <xref:System.Web.Compilation.ConnectionStringsExpressionBuilder> object.</span></span> <span data-ttu-id="50a10-108">Präfixe sind in der Datei "Web.config" im Ausdrucks-Generatoren zugeordnet der <xref:System.Web.Configuration.CompilationSection.ExpressionBuilders%2A> Abschnitt.</span><span class="sxs-lookup"><span data-stu-id="50a10-108">Prefixes are associated with expression builders in the Web.config file in the <xref:System.Web.Configuration.CompilationSection.ExpressionBuilders%2A> section.</span></span>  
  
 <span data-ttu-id="50a10-109">Rechts neben der deklarativen Ausdruck wird zur Auswertung an den Ausdrucks-Generator übergeben.</span><span class="sxs-lookup"><span data-stu-id="50a10-109">The right side of the declarative expression is passed to the expression builder for evaluation.</span></span> <span data-ttu-id="50a10-110">Überschreiben Sie die <xref:System.Web.Compilation.ExpressionBuilder.GetCodeExpression%2A> Methode, um Code zu generieren, die mit der Seite kompiliert werden.</span><span class="sxs-lookup"><span data-stu-id="50a10-110">Override the <xref:System.Web.Compilation.ExpressionBuilder.GetCodeExpression%2A> method to generate code that will be compiled with the page.</span></span>  
  
 <span data-ttu-id="50a10-111">Wenn die benutzerdefinierten Ausdrucks-Generator auf Seiten aktiv sein, die nicht kompiliert werden sollen, müssen Sie auch überschreiben die <xref:System.Web.Compilation.ExpressionBuilder.EvaluateExpression%2A> Methode, um ein Objekt zurückzugeben, die die Ergebnisse des Ausdrucks darstellt.</span><span class="sxs-lookup"><span data-stu-id="50a10-111">If you want the custom expression builder to be active on pages that are not compiled, you must also override the <xref:System.Web.Compilation.ExpressionBuilder.EvaluateExpression%2A> method to return an object that represents the results of the expression.</span></span> <span data-ttu-id="50a10-112">Sie müssen auch überschreiben die <xref:System.Web.Compilation.ExpressionBuilder.SupportsEvaluate%2A> Eigenschaft, um anzugeben, dass der benutzerdefinierte Ausdrucks-Generator Seiten ohne Kompilierung unterstützt.</span><span class="sxs-lookup"><span data-stu-id="50a10-112">You also must override the <xref:System.Web.Compilation.ExpressionBuilder.SupportsEvaluate%2A> property to indicate that the custom expression builder does support no-compile pages.</span></span>  
  
 <span data-ttu-id="50a10-113">Sie können eine Reihe von Eigenschaften und Methoden zur Auswahl und die Auswertung eines Ausdrucks, das zur Entwurfszeit eine Steuerelementeigenschaft zugeordnet ist, durch die Implementierung eines Ausdrucks-Editors definieren.</span><span class="sxs-lookup"><span data-stu-id="50a10-113">You can define a set of properties and methods for selecting and evaluating an expression that is associated with a control property at design time by implementing an expression editor.</span></span> <span data-ttu-id="50a10-114">Der Editor ist auf den Ausdrucks-Generator über Metadaten auf Klassenebene markiert.</span><span class="sxs-lookup"><span data-stu-id="50a10-114">The editor is marked on the expression builder through class-level metadata.</span></span> <span data-ttu-id="50a10-115">Weitere Informationen finden Sie unter <xref:System.Web.UI.Design.ExpressionEditor>.</span><span class="sxs-lookup"><span data-stu-id="50a10-115">For more information, see <xref:System.Web.UI.Design.ExpressionEditor>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="50a10-116">Die folgenden Codebeispiele veranschaulichen, wie einen benutzerdefinierter Ausdrucks-Generator zu erstellen, indem Sie die Implementierung der <xref:System.Web.Compilation.ExpressionBuilder> abstrakte Klasse.</span><span class="sxs-lookup"><span data-stu-id="50a10-116">The following code examples demonstrate how to build a custom expression builder by implementing the <xref:System.Web.Compilation.ExpressionBuilder> abstract class.</span></span> <span data-ttu-id="50a10-117">Diese Implementierung der <xref:System.Web.Compilation.ExpressionBuilder> gibt eine ausgewertete-Anweisung, die auf den Ausdruck übergeben wird.</span><span class="sxs-lookup"><span data-stu-id="50a10-117">This implementation of <xref:System.Web.Compilation.ExpressionBuilder> returns an evaluated statement that is passed to the expression.</span></span> <span data-ttu-id="50a10-118">Um dieses Beispiel auszuführen, müssen Sie zuerst den benutzerdefinierten Ausdrucks-Generator in der Datei "Web.config" registrieren.</span><span class="sxs-lookup"><span data-stu-id="50a10-118">To run this example, you must first register the custom expression builder in the Web.config file.</span></span> <span data-ttu-id="50a10-119">Im ersten Codebeispiel wird veranschaulicht, wie benutzerdefinierte Ausdrucks-Generator in der Datei "Web.config" registriert.</span><span class="sxs-lookup"><span data-stu-id="50a10-119">The first code example demonstrates how to register the custom expression builder in the Web.config file.</span></span>  
  
```  
<configuration>  
    <system.web>  
       <compilation>  
          <expressionBuilders>  
              <add expressionPrefix="MyCustomExpression"  
               type="MyCustomExpressionBuilder"/>  
          </expressionBuilders>  
       </compilation>  
    </system.web>  
</configuration>  
```  
  
 <span data-ttu-id="50a10-120">Im zweiten Codebeispiel wird veranschaulicht, wie der Ausdruck in einer ASPX-Datei verweisen.</span><span class="sxs-lookup"><span data-stu-id="50a10-120">The second code example demonstrates how to reference the expression in an .aspx file.</span></span>  
  
```  
<asp:Label ID="Label1" runat="server"   
Text="<%$ MyCustomExpression:Hello, world! %>" />  
```  
  
 <span data-ttu-id="50a10-121">Im dritten Codebeispiel wird veranschaulicht, wie einen benutzerdefinierter Ausdrucks-Generator zu entwickeln, durch Ableiten von <xref:System.Web.Compilation.ExpressionBuilder>.</span><span class="sxs-lookup"><span data-stu-id="50a10-121">The third code example demonstrates how to develop a customized expression builder by deriving from <xref:System.Web.Compilation.ExpressionBuilder>.</span></span> <span data-ttu-id="50a10-122">Um dieses Codebeispiel ausführen zu können, müssen Sie die Klasse im Ordner "App_Code" platzieren.</span><span class="sxs-lookup"><span data-stu-id="50a10-122">To run this code example, you must place the class in the App_Code folder.</span></span>  
  
 [!code-csharp[System.Web.Compilation.ExpressionBuilder#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Compilation.ExpressionBuilder/CS/MyExpressionBuilder.cs#1)] 
 [!code-vb[System.Web.Compilation.ExpressionBuilder#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Compilation.ExpressionBuilder/VB/MyExpressionBuilder.vb#1)]   
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para>
        <span data-ttu-id="50a10-123">Beim Erben von der <see cref="T:System.Web.Compilation.ExpressionBuilder" /> -Klasse, die Sie überschreiben müssen die <see cref="M:System.Web.Compilation.ExpressionBuilder.GetCodeExpression(System.Web.UI.BoundPropertyEntry,System.Object,System.Web.Compilation.ExpressionBuilderContext)" /> Methode.</span>
        <span class="sxs-lookup">
          <span data-stu-id="50a10-123">When you inherit from the <see cref="T:System.Web.Compilation.ExpressionBuilder" /> class, you must override the <see cref="M:System.Web.Compilation.ExpressionBuilder.GetCodeExpression(System.Web.UI.BoundPropertyEntry,System.Object,System.Web.Compilation.ExpressionBuilderContext)" /> method.</span>
        </span>
      </para>
    </block>
    <altmember cref="T:System.Web.Compilation.ExpressionBuilderContext" />
    <altmember cref="T:System.Web.Configuration.ExpressionBuilder" />
    <altmember cref="T:System.Web.Configuration.ExpressionBuilderCollection" />
    <altmember cref="T:System.Web.Compilation.AppSettingsExpressionBuilder" />
    <altmember cref="T:System.Web.Compilation.ConnectionStringsExpressionBuilder" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ExpressionBuilder ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.ExpressionBuilder.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ExpressionBuilder();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="50a10-124">Initialisiert eine neue Instanz der <see cref="T:System.Web.Compilation.ExpressionBuilder" />-Klasse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="50a10-124">Initializes a new instance of the <see cref="T:System.Web.Compilation.ExpressionBuilder" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="50a10-125">Da die <xref:System.Web.Compilation.ExpressionBuilder> Klasse ist abstrakt, können Sie eine Instanz von erstellen <xref:System.Web.Compilation.ExpressionBuilder> direkt mithilfe der <xref:System.Web.Compilation.ExpressionBuilder.%23ctor%2A> Konstruktor.</span><span class="sxs-lookup"><span data-stu-id="50a10-125">Because the <xref:System.Web.Compilation.ExpressionBuilder> class is abstract, you cannot create an instance of <xref:System.Web.Compilation.ExpressionBuilder> directly by using the <xref:System.Web.Compilation.ExpressionBuilder.%23ctor%2A> constructor.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="50a10-126">Beim Ableiten von der <see cref="T:System.Web.Compilation.ExpressionBuilder" /> -Klasse außer Kraft, indem die <see cref="M:System.Web.Compilation.ExpressionBuilder.#ctor" /> Konstruktor, um die angepasste Initialisierung von Aktionen für die Implementierung des Ausdrucks-Generator zu implementieren.</span>
            <span class="sxs-lookup">
              <span data-stu-id="50a10-126">When deriving from the <see cref="T:System.Web.Compilation.ExpressionBuilder" /> class, override the <see cref="M:System.Web.Compilation.ExpressionBuilder.#ctor" /> constructor to implement custom initialization actions for your expression builder implementation.</span>
            </span>
          </para>
        </block>
        <altmember cref="T:System.Web.Compilation.ExpressionBuilderContext" />
        <altmember cref="T:System.Web.Configuration.ExpressionBuilder" />
        <altmember cref="T:System.Web.Configuration.ExpressionBuilderCollection" />
        <altmember cref="T:System.Web.Compilation.AppSettingsExpressionBuilder" />
        <altmember cref="T:System.Web.Compilation.ConnectionStringsExpressionBuilder" />
      </Docs>
    </Member>
    <Member MemberName="EvaluateExpression">
      <MemberSignature Language="C#" Value="public virtual object EvaluateExpression (object target, System.Web.UI.BoundPropertyEntry entry, object parsedData, System.Web.Compilation.ExpressionBuilderContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object EvaluateExpression(object target, class System.Web.UI.BoundPropertyEntry entry, object parsedData, class System.Web.Compilation.ExpressionBuilderContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.ExpressionBuilder.EvaluateExpression(System.Object,System.Web.UI.BoundPropertyEntry,System.Object,System.Web.Compilation.ExpressionBuilderContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function EvaluateExpression (target As Object, entry As BoundPropertyEntry, parsedData As Object, context As ExpressionBuilderContext) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ EvaluateExpression(System::Object ^ target, System::Web::UI::BoundPropertyEntry ^ entry, System::Object ^ parsedData, System::Web::Compilation::ExpressionBuilderContext ^ context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Object" />
        <Parameter Name="entry" Type="System.Web.UI.BoundPropertyEntry" />
        <Parameter Name="parsedData" Type="System.Object" />
        <Parameter Name="context" Type="System.Web.Compilation.ExpressionBuilderContext" />
      </Parameters>
      <Docs>
        <param name="target">
          <span data-ttu-id="50a10-127">Das Objekt, das den Ausdruck enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="50a10-127">The object containing the expression.</span>
          </span>
        </param>
        <param name="entry">
          <span data-ttu-id="50a10-128">Das Objekt, das Informationen über die Eigenschaft enthält, an die durch den Ausdruck gebunden wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="50a10-128">The object that represents information about the property bound to by the expression.</span>
          </span>
        </param>
        <param name="parsedData">
          <span data-ttu-id="50a10-129">Das Objekt, das analysierte Daten enthält, wie sie von <see cref="M:System.Web.Compilation.ExpressionBuilder.ParseExpression(System.String,System.Type,System.Web.Compilation.ExpressionBuilderContext)" /> zurückgegeben werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="50a10-129">The object containing parsed data as returned by <see cref="M:System.Web.Compilation.ExpressionBuilder.ParseExpression(System.String,System.Type,System.Web.Compilation.ExpressionBuilderContext)" />.</span>
          </span>
        </param>
        <param name="context">
          <span data-ttu-id="50a10-130">Kontextinformationen für die Auswertung des Ausdrucks.</span>
          <span class="sxs-lookup">
            <span data-stu-id="50a10-130">Contextual information for the evaluation of the expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="50a10-131">Gibt nach dem Überschreiben in einer abgeleiteten Klasse ein Objekt zurück, das einen ausgewerteten Ausdruck darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="50a10-131">When overridden in a derived class, returns an object that represents an evaluated expression.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="50a10-132">Ein Objekt, das den ausgewerteten Ausdruck darstellt, andernfalls <see langword="null" />, wenn der Erbe <see cref="M:System.Web.Compilation.ExpressionBuilder.EvaluateExpression(System.Object,System.Web.UI.BoundPropertyEntry,System.Object,System.Web.Compilation.ExpressionBuilderContext)" /> nicht implementiert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="50a10-132">An object that represents the evaluated expression; otherwise, <see langword="null" /> if the inheritor does not implement <see cref="M:System.Web.Compilation.ExpressionBuilder.EvaluateExpression(System.Object,System.Web.UI.BoundPropertyEntry,System.Object,System.Web.Compilation.ExpressionBuilderContext)" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="50a10-133">Gegebenenfalls Ihre <xref:System.Web.Compilation.ExpressionBuilder> Objekt, das auf einer Seite aktiv sein, die die Funktion keine Kompilierung unterstützt Sie außer Kraft setzen können die <xref:System.Web.Compilation.ExpressionBuilder.EvaluateExpression%2A> Methode und die <xref:System.Web.Compilation.ExpressionBuilder.SupportsEvaluate%2A> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="50a10-133">If you want your <xref:System.Web.Compilation.ExpressionBuilder> object to be active on a page that supports the no-compile feature, you can override the <xref:System.Web.Compilation.ExpressionBuilder.EvaluateExpression%2A> method and the <xref:System.Web.Compilation.ExpressionBuilder.SupportsEvaluate%2A> property.</span></span> <span data-ttu-id="50a10-134">Die <xref:System.Web.Compilation.ExpressionBuilder.EvaluateExpression%2A> Methode sollte die Auswertung des aktuellen Ausdrucks zurückgeben.</span><span class="sxs-lookup"><span data-stu-id="50a10-134">The <xref:System.Web.Compilation.ExpressionBuilder.EvaluateExpression%2A> method should return the evaluation of the current expression.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="50a10-135">Im folgenden Codebeispiel wird veranschaulicht, wie mithilfe der überschriebenen <xref:System.Web.Compilation.ExpressionBuilder.EvaluateExpression%2A> Methode zum Zurückgeben eines ausgewerteten Ausdrucks.</span><span class="sxs-lookup"><span data-stu-id="50a10-135">The following code example demonstrates how to use the overridden <xref:System.Web.Compilation.ExpressionBuilder.EvaluateExpression%2A> method to return an evaluated expression.</span></span>  
  
 [!code-csharp[System.Web.Compilation.ExpressionBuilder#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Compilation.ExpressionBuilder/CS/MyExpressionBuilder.cs#3)]    
 [!code-vb[System.Web.Compilation.ExpressionBuilder#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Compilation.ExpressionBuilder/VB/MyExpressionBuilder.vb#3)]   
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="50a10-136">Wenn Sie überschreiben die <see cref="M:System.Web.Compilation.ExpressionBuilder.EvaluateExpression(System.Object,System.Web.UI.BoundPropertyEntry,System.Object,System.Web.Compilation.ExpressionBuilderContext)" /> -Methode, müssen Sie auch überschreiben die <see cref="P:System.Web.Compilation.ExpressionBuilder.SupportsEvaluate" /> Eigenschaft.</span>
            <span class="sxs-lookup">
              <span data-stu-id="50a10-136">If you override the <see cref="M:System.Web.Compilation.ExpressionBuilder.EvaluateExpression(System.Object,System.Web.UI.BoundPropertyEntry,System.Object,System.Web.Compilation.ExpressionBuilderContext)" /> method, you must also override the <see cref="P:System.Web.Compilation.ExpressionBuilder.SupportsEvaluate" /> property.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="GetCodeExpression">
      <MemberSignature Language="C#" Value="public abstract System.CodeDom.CodeExpression GetCodeExpression (System.Web.UI.BoundPropertyEntry entry, object parsedData, System.Web.Compilation.ExpressionBuilderContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.CodeDom.CodeExpression GetCodeExpression(class System.Web.UI.BoundPropertyEntry entry, object parsedData, class System.Web.Compilation.ExpressionBuilderContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.ExpressionBuilder.GetCodeExpression(System.Web.UI.BoundPropertyEntry,System.Object,System.Web.Compilation.ExpressionBuilderContext)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetCodeExpression (entry As BoundPropertyEntry, parsedData As Object, context As ExpressionBuilderContext) As CodeExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::CodeDom::CodeExpression ^ GetCodeExpression(System::Web::UI::BoundPropertyEntry ^ entry, System::Object ^ parsedData, System::Web::Compilation::ExpressionBuilderContext ^ context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entry" Type="System.Web.UI.BoundPropertyEntry" />
        <Parameter Name="parsedData" Type="System.Object" />
        <Parameter Name="context" Type="System.Web.Compilation.ExpressionBuilderContext" />
      </Parameters>
      <Docs>
        <param name="entry">
          <span data-ttu-id="50a10-137">Das Objekt, das Informationen über die Eigenschaft enthält, an die durch den Ausdruck gebunden wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="50a10-137">The object that represents information about the property bound to by the expression.</span>
          </span>
        </param>
        <param name="parsedData">
          <span data-ttu-id="50a10-138">Das Objekt, das analysierte Daten enthält, wie sie von <see cref="M:System.Web.Compilation.ExpressionBuilder.ParseExpression(System.String,System.Type,System.Web.Compilation.ExpressionBuilderContext)" /> zurückgegeben werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="50a10-138">The object containing parsed data as returned by <see cref="M:System.Web.Compilation.ExpressionBuilder.ParseExpression(System.String,System.Type,System.Web.Compilation.ExpressionBuilderContext)" />.</span>
          </span>
        </param>
        <param name="context">
          <span data-ttu-id="50a10-139">Kontextinformationen für die Auswertung des Ausdrucks.</span>
          <span class="sxs-lookup">
            <span data-stu-id="50a10-139">Contextual information for the evaluation of the expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="50a10-140">Gibt nach dem Überschreiben in einer abgeleiteten Klasse Code zurück, mit dem während der Seitenausführung der ausgewertete Ausdruck abgerufen wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="50a10-140">When overridden in a derived class, returns code that is used during page execution to obtain the evaluated expression.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="50a10-141">Eine <see cref="T:System.CodeDom.CodeExpression" />, die zur Eigenschaftenzuweisung verwendet wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="50a10-141">A <see cref="T:System.CodeDom.CodeExpression" /> that is used for property assignment.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="50a10-142">Klassen, die von erben die <xref:System.Web.Compilation.ExpressionBuilder> Klasse implementieren muss die <xref:System.Web.Compilation.ExpressionBuilder.GetCodeExpression%2A> abstrakte Methode.</span><span class="sxs-lookup"><span data-stu-id="50a10-142">Classes that inherit from the <xref:System.Web.Compilation.ExpressionBuilder> class must implement the <xref:System.Web.Compilation.ExpressionBuilder.GetCodeExpression%2A> abstract method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="50a10-143">Im folgenden Codebeispiel wird veranschaulicht, wie zum Zurückgeben einer <xref:System.CodeDom.CodeExpression> Objekt durch Überschreiben der <xref:System.Web.Compilation.ExpressionBuilder.GetCodeExpression%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="50a10-143">The following code example demonstrates how to return a <xref:System.CodeDom.CodeExpression> object by overriding the <xref:System.Web.Compilation.ExpressionBuilder.GetCodeExpression%2A> method.</span></span>  
  
 [!code-csharp[System.Web.Compilation.ExpressionBuilder#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Compilation.ExpressionBuilder/CS/MyExpressionBuilder.cs#4)] 
 [!code-vb[System.Web.Compilation.ExpressionBuilder#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Compilation.ExpressionBuilder/VB/MyExpressionBuilder.vb#4)]   
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="50a10-144">Wenn Sie einen benutzerdefinierten Ausdrucks-Generator implementieren, müssen Sie die richtige Typumwandlung für die Steuerelementeigenschaft ausführen und Zurückgeben der Umwandlungsvorgang in die <see cref="T:System.CodeDom.CodeExpression" /> Objekt.</span>
            <span class="sxs-lookup">
              <span data-stu-id="50a10-144">If you implement a custom expression builder, you must perform the proper type casting for the control property and return the cast operation in the <see cref="T:System.CodeDom.CodeExpression" /> object.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="ParseExpression">
      <MemberSignature Language="C#" Value="public virtual object ParseExpression (string expression, Type propertyType, System.Web.Compilation.ExpressionBuilderContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ParseExpression(string expression, class System.Type propertyType, class System.Web.Compilation.ExpressionBuilderContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.ExpressionBuilder.ParseExpression(System.String,System.Type,System.Web.Compilation.ExpressionBuilderContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ParseExpression (expression As String, propertyType As Type, context As ExpressionBuilderContext) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ ParseExpression(System::String ^ expression, Type ^ propertyType, System::Web::Compilation::ExpressionBuilderContext ^ context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.String" />
        <Parameter Name="propertyType" Type="System.Type" />
        <Parameter Name="context" Type="System.Web.Compilation.ExpressionBuilderContext" />
      </Parameters>
      <Docs>
        <param name="expression">
          <span data-ttu-id="50a10-145">Der Wert des deklarativen Ausdrucks.</span>
          <span class="sxs-lookup">
            <span data-stu-id="50a10-145">The value of the declarative expression.</span>
          </span>
        </param>
        <param name="propertyType">
          <span data-ttu-id="50a10-146">Der Typ der Eigenschaft, an die durch den Ausdruck gebunden wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="50a10-146">The type of the property bound to by the expression.</span>
          </span>
        </param>
        <param name="context">
          <span data-ttu-id="50a10-147">Kontextinformationen für die Auswertung des Ausdrucks.</span>
          <span class="sxs-lookup">
            <span data-stu-id="50a10-147">Contextual information for the evaluation of the expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="50a10-148">Gibt nach dem Überschreiben in einer abgeleiteten Klasse ein Objekt zurück, das den analysierten Ausdruck darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="50a10-148">When overridden in a derived class, returns an object that represents the parsed expression.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="50a10-149">Ein <see cref="T:System.Object" />, das die analysierte Darstellung des Ausdrucks enthält, andernfalls <see langword="null" />, wenn <see cref="M:System.Web.Compilation.ExpressionBuilder.ParseExpression(System.String,System.Type,System.Web.Compilation.ExpressionBuilderContext)" /> nicht implementiert wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="50a10-149">An <see cref="T:System.Object" /> containing the parsed representation of the expression; otherwise, <see langword="null" /> if <see cref="M:System.Web.Compilation.ExpressionBuilder.ParseExpression(System.String,System.Type,System.Web.Compilation.ExpressionBuilderContext)" /> is not implemented.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="50a10-150">Ruft beim Überschreiben in einer abgeleiteten Klasse wird diese Methode analysiert den Ausdruck und gibt ihn als ein Objekt, das als verwendet werden kann die `parsedData` Parameter in einem <xref:System.Web.Compilation.ExpressionBuilder.GetCodeExpression%2A> oder <xref:System.Web.Compilation.ExpressionBuilder.EvaluateExpression%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="50a10-150">When overridden in a derived class, this method parses the expression and returns it as an object that can be used as the `parsedData` parameter in a <xref:System.Web.Compilation.ExpressionBuilder.GetCodeExpression%2A> or <xref:System.Web.Compilation.ExpressionBuilder.EvaluateExpression%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsEvaluate">
      <MemberSignature Language="C#" Value="public virtual bool SupportsEvaluate { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsEvaluate" />
      <MemberSignature Language="DocId" Value="P:System.Web.Compilation.ExpressionBuilder.SupportsEvaluate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsEvaluate As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsEvaluate { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="50a10-151">Gibt nach dem Überschreiben in einer abgeleiteten Klasse einen Wert zurück, der angibt, ob das aktuelle <see cref="T:System.Web.Compilation.ExpressionBuilder" />-Objekt nicht kompilierte Seiten unterstützt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="50a10-151">When overridden in a derived class, returns a value indicating whether the current <see cref="T:System.Web.Compilation.ExpressionBuilder" /> object supports no-compile pages.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="50a10-152">
            <see langword="true" />, wenn <see cref="T:System.Web.Compilation.ExpressionBuilder" /> Ausdrucksauswertung unterstützt, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="50a10-152">
              <see langword="true" /> if the <see cref="T:System.Web.Compilation.ExpressionBuilder" /> supports expression evaluation; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="50a10-153">Der Standardwert für die <xref:System.Web.Compilation.ExpressionBuilder.SupportsEvaluate%2A> Eigenschaft ist `false`.</span><span class="sxs-lookup"><span data-stu-id="50a10-153">The default value for the <xref:System.Web.Compilation.ExpressionBuilder.SupportsEvaluate%2A> property is `false`.</span></span> <span data-ttu-id="50a10-154">Um Seiten ohne Kompilierung zu unterstützen, müssen Sie beide überschreiben die <xref:System.Web.Compilation.ExpressionBuilder.EvaluateExpression%2A> Methode und die <xref:System.Web.Compilation.ExpressionBuilder.SupportsEvaluate%2A> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="50a10-154">To support no-compile pages, you must override both the <xref:System.Web.Compilation.ExpressionBuilder.EvaluateExpression%2A> method and the <xref:System.Web.Compilation.ExpressionBuilder.SupportsEvaluate%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="50a10-155">Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.Compilation.ExpressionBuilder.SupportsEvaluate%2A> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="50a10-155">The following code example demonstrates how to use the <xref:System.Web.Compilation.ExpressionBuilder.SupportsEvaluate%2A> property.</span></span>  
  
 [!code-csharp[System.Web.Compilation.ExpressionBuilder#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Compilation.ExpressionBuilder/CS/MyExpressionBuilder.cs#2)] 
 [!code-vb[System.Web.Compilation.ExpressionBuilder#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Compilation.ExpressionBuilder/VB/MyExpressionBuilder.vb#2)]   
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>