<Type Name="ExpressionBuilder" FullName="System.Web.Compilation.ExpressionBuilder">
  <Metadata><Meta Name="ms.openlocfilehash" Value="332cbf6b4568bf60fdd93d394105669b93613ebb" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86847516" /></Metadata><TypeSignature Language="C#" Value="public abstract class ExpressionBuilder" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ExpressionBuilder extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.Compilation.ExpressionBuilder" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ExpressionBuilder" />
  <TypeSignature Language="C++ CLI" Value="public ref class ExpressionBuilder abstract" />
  <TypeSignature Language="F#" Value="type ExpressionBuilder = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="8eb02-101">Wertet während der Seitenanalyse Ausdrücke aus.</span><span class="sxs-lookup"><span data-stu-id="8eb02-101">Evaluates expressions during page parsing.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8eb02-102">Die- <xref:System.Web.Compilation.ExpressionBuilder> Klasse ist die Basisklasse für Ausdrucks-Generatoren, wie z. b. die- <xref:System.Web.Compilation.AppSettingsExpressionBuilder> Klasse, die während der Seiten Verarbeitung Code Ausdrücke erstellen.</span><span class="sxs-lookup"><span data-stu-id="8eb02-102">The <xref:System.Web.Compilation.ExpressionBuilder> class is the base class for expression builders, such as the <xref:System.Web.Compilation.AppSettingsExpressionBuilder> class, that create code expressions during page parsing.</span></span>  
  
 <span data-ttu-id="8eb02-103">Ausdrucks-Generatoren analysieren deklarative Ausdrücke und erstellen Code zum Abrufen von Werten, die an eine Steuerelement Eigenschaft gebunden sind.</span><span class="sxs-lookup"><span data-stu-id="8eb02-103">Expression builders parse declarative expressions and create code to retrieve values bound to a control property.</span></span> <span data-ttu-id="8eb02-104">In Szenarien ohne Kompilierung wertet ein Ausdrucks-Generator, der eine Funktion ohne Kompilierung unterstützt, den Ausdruck zur Laufzeit aus.</span><span class="sxs-lookup"><span data-stu-id="8eb02-104">In no-compile scenarios, an expression builder that supports a no-compile feature evaluates the expression during run time.</span></span>  
  
 <span data-ttu-id="8eb02-105">Wenn der Seiten Parser auf einen Ausdruck stößt, der durch die Zeichenfolge getrennt ist `<%$ %>` , erstellt er basierend auf dem Präfix in der Zeichenfolge einen Ausdrucks-Generator für den Ausdruck.</span><span class="sxs-lookup"><span data-stu-id="8eb02-105">When the page parser encounters an expression that is delimited with the string `<%$ %>`, it creates an expression builder for the expression based on the prefix in the string.</span></span> <span data-ttu-id="8eb02-106">Das Präfix ist der Teil der Zeichenfolge links neben dem Doppelpunkt (:).</span><span class="sxs-lookup"><span data-stu-id="8eb02-106">The prefix is the portion of the string that is to the left of the colon (:).</span></span> <span data-ttu-id="8eb02-107">Wenn der Parser beispielsweise auf die Zeichenfolge trifft `<%$ ConnectionStrings:MessageDB %>` , wird ein- <xref:System.Web.Compilation.ConnectionStringsExpressionBuilder> Objekt erstellt.</span><span class="sxs-lookup"><span data-stu-id="8eb02-107">For example, when the parser encounters the string `<%$ ConnectionStrings:MessageDB %>`, it creates a <xref:System.Web.Compilation.ConnectionStringsExpressionBuilder> object.</span></span> <span data-ttu-id="8eb02-108">Präfixe werden Ausdrucks-Generatoren in der Web.config-Datei im <xref:System.Web.Configuration.CompilationSection.ExpressionBuilders%2A> Abschnitt zugeordnet.</span><span class="sxs-lookup"><span data-stu-id="8eb02-108">Prefixes are associated with expression builders in the Web.config file in the <xref:System.Web.Configuration.CompilationSection.ExpressionBuilders%2A> section.</span></span>  
  
 <span data-ttu-id="8eb02-109">Die Rechte Seite des deklarativen Ausdrucks wird zur Auswertung an den Ausdrucks-Generator übermittelt.</span><span class="sxs-lookup"><span data-stu-id="8eb02-109">The right side of the declarative expression is passed to the expression builder for evaluation.</span></span> <span data-ttu-id="8eb02-110">Überschreiben <xref:System.Web.Compilation.ExpressionBuilder.GetCodeExpression%2A> Sie die-Methode, um Code zu generieren, der mit der Seite kompiliert wird.</span><span class="sxs-lookup"><span data-stu-id="8eb02-110">Override the <xref:System.Web.Compilation.ExpressionBuilder.GetCodeExpression%2A> method to generate code that will be compiled with the page.</span></span>  
  
 <span data-ttu-id="8eb02-111">Wenn Sie möchten, dass der benutzerdefinierte Ausdrucks-Generator auf nicht kompilierten Seiten aktiv ist, müssen Sie auch die- <xref:System.Web.Compilation.ExpressionBuilder.EvaluateExpression%2A> Methode überschreiben, um ein Objekt zurückzugeben, das die Ergebnisse des Ausdrucks darstellt.</span><span class="sxs-lookup"><span data-stu-id="8eb02-111">If you want the custom expression builder to be active on pages that are not compiled, you must also override the <xref:System.Web.Compilation.ExpressionBuilder.EvaluateExpression%2A> method to return an object that represents the results of the expression.</span></span> <span data-ttu-id="8eb02-112">Außerdem müssen Sie die- <xref:System.Web.Compilation.ExpressionBuilder.SupportsEvaluate%2A> Eigenschaft überschreiben, um anzugeben, dass der benutzerdefinierte Ausdrucks-Generator keine Kompilierungs Seiten unterstützt.</span><span class="sxs-lookup"><span data-stu-id="8eb02-112">You also must override the <xref:System.Web.Compilation.ExpressionBuilder.SupportsEvaluate%2A> property to indicate that the custom expression builder does support no-compile pages.</span></span>  
  
 <span data-ttu-id="8eb02-113">Sie können einen Satz von Eigenschaften und Methoden zum auswählen und Auswerten eines Ausdrucks definieren, der zur Entwurfszeit einer Steuerelement Eigenschaft zugeordnet ist, indem Sie einen Ausdrucks-Editor implementieren.</span><span class="sxs-lookup"><span data-stu-id="8eb02-113">You can define a set of properties and methods for selecting and evaluating an expression that is associated with a control property at design time by implementing an expression editor.</span></span> <span data-ttu-id="8eb02-114">Der Editor wird im Ausdrucks-Generator durch Metadaten auf Klassenebene gekennzeichnet.</span><span class="sxs-lookup"><span data-stu-id="8eb02-114">The editor is marked on the expression builder through class-level metadata.</span></span> <span data-ttu-id="8eb02-115">Weitere Informationen finden Sie unter <xref:System.Web.UI.Design.ExpressionEditor>.</span><span class="sxs-lookup"><span data-stu-id="8eb02-115">For more information, see <xref:System.Web.UI.Design.ExpressionEditor>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8eb02-116">Die folgenden Codebeispiele veranschaulichen, wie Sie einen benutzerdefinierten Ausdrucks-Generator erstellen, indem Sie die <xref:System.Web.Compilation.ExpressionBuilder> abstrakte-Klasse implementieren.</span><span class="sxs-lookup"><span data-stu-id="8eb02-116">The following code examples demonstrate how to build a custom expression builder by implementing the <xref:System.Web.Compilation.ExpressionBuilder> abstract class.</span></span> <span data-ttu-id="8eb02-117">Diese Implementierung von <xref:System.Web.Compilation.ExpressionBuilder> gibt eine ausgewertete Anweisung zurück, die an den-Ausdruck übermittelt wird.</span><span class="sxs-lookup"><span data-stu-id="8eb02-117">This implementation of <xref:System.Web.Compilation.ExpressionBuilder> returns an evaluated statement that is passed to the expression.</span></span> <span data-ttu-id="8eb02-118">Um dieses Beispiel ausführen zu können, müssen Sie zuerst den benutzerdefinierten Ausdrucks-Generator in der Web.config-Datei registrieren.</span><span class="sxs-lookup"><span data-stu-id="8eb02-118">To run this example, you must first register the custom expression builder in the Web.config file.</span></span> <span data-ttu-id="8eb02-119">Im ersten Codebeispiel wird veranschaulicht, wie der benutzerdefinierte Ausdrucks-Generator in der Web.config-Datei registriert wird.</span><span class="sxs-lookup"><span data-stu-id="8eb02-119">The first code example demonstrates how to register the custom expression builder in the Web.config file.</span></span>  
  
```  
<configuration>  
    <system.web>  
       <compilation>  
          <expressionBuilders>  
              <add expressionPrefix="MyCustomExpression"  
               type="MyCustomExpressionBuilder"/>  
          </expressionBuilders>  
       </compilation>  
    </system.web>  
</configuration>  
```  
  
 <span data-ttu-id="8eb02-120">Im zweiten Codebeispiel wird veranschaulicht, wie auf den Ausdruck in einer ASPX-Datei verwiesen wird.</span><span class="sxs-lookup"><span data-stu-id="8eb02-120">The second code example demonstrates how to reference the expression in an .aspx file.</span></span>  
  
```  
<asp:Label ID="Label1" runat="server"   
Text="<%$ MyCustomExpression:Hello, world! %>" />  
```  
  
 <span data-ttu-id="8eb02-121">Im dritten Codebeispiel wird veranschaulicht, wie ein angepasster Ausdrucks-Generator entwickelt wird, indem von abgeleitet wird <xref:System.Web.Compilation.ExpressionBuilder> .</span><span class="sxs-lookup"><span data-stu-id="8eb02-121">The third code example demonstrates how to develop a customized expression builder by deriving from <xref:System.Web.Compilation.ExpressionBuilder>.</span></span> <span data-ttu-id="8eb02-122">Zum Ausführen dieses Code Beispiels müssen Sie die-Klasse im Ordner App_Code platzieren.</span><span class="sxs-lookup"><span data-stu-id="8eb02-122">To run this code example, you must place the class in the App_Code folder.</span></span>  
  
 [!code-csharp[System.Web.Compilation.ExpressionBuilder#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Compilation.ExpressionBuilder/CS/MyExpressionBuilder.cs#1)] 
 [!code-vb[System.Web.Compilation.ExpressionBuilder#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Compilation.ExpressionBuilder/VB/MyExpressionBuilder.vb#1)]   
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para><span data-ttu-id="8eb02-123">Wenn Sie von der- <see cref="T:System.Web.Compilation.ExpressionBuilder" /> Klasse erben, müssen Sie die-Methode überschreiben <see cref="M:System.Web.Compilation.ExpressionBuilder.GetCodeExpression(System.Web.UI.BoundPropertyEntry,System.Object,System.Web.Compilation.ExpressionBuilderContext)" /> .</span><span class="sxs-lookup"><span data-stu-id="8eb02-123">When you inherit from the <see cref="T:System.Web.Compilation.ExpressionBuilder" /> class, you must override the <see cref="M:System.Web.Compilation.ExpressionBuilder.GetCodeExpression(System.Web.UI.BoundPropertyEntry,System.Object,System.Web.Compilation.ExpressionBuilderContext)" /> method.</span></span></para></block>
    <altmember cref="T:System.Web.Compilation.ExpressionBuilderContext" />
    <altmember cref="T:System.Web.Configuration.ExpressionBuilder" />
    <altmember cref="T:System.Web.Configuration.ExpressionBuilderCollection" />
    <altmember cref="T:System.Web.Compilation.AppSettingsExpressionBuilder" />
    <altmember cref="T:System.Web.Compilation.ConnectionStringsExpressionBuilder" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ExpressionBuilder ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.ExpressionBuilder.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ExpressionBuilder();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8eb02-124">Initialisiert eine neue Instanz der <see cref="T:System.Web.Compilation.ExpressionBuilder" />-Klasse.</span><span class="sxs-lookup"><span data-stu-id="8eb02-124">Initializes a new instance of the <see cref="T:System.Web.Compilation.ExpressionBuilder" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8eb02-125">Da die- <xref:System.Web.Compilation.ExpressionBuilder> Klasse abstrakt ist, können Sie eine Instanz von nicht <xref:System.Web.Compilation.ExpressionBuilder> direkt mit dem- <xref:System.Web.Compilation.ExpressionBuilder.%23ctor%2A> Konstruktor erstellen.</span><span class="sxs-lookup"><span data-stu-id="8eb02-125">Because the <xref:System.Web.Compilation.ExpressionBuilder> class is abstract, you cannot create an instance of <xref:System.Web.Compilation.ExpressionBuilder> directly by using the <xref:System.Web.Compilation.ExpressionBuilder.%23ctor%2A> constructor.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="8eb02-126">Überschreiben Sie beim Ableiten von der- <see cref="T:System.Web.Compilation.ExpressionBuilder" /> Klasse den- <see cref="M:System.Web.Compilation.ExpressionBuilder.#ctor" /> Konstruktor, um benutzerdefinierte Initialisierungs Aktionen für die Ausdrucks-Generator-Implementierung zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="8eb02-126">When deriving from the <see cref="T:System.Web.Compilation.ExpressionBuilder" /> class, override the <see cref="M:System.Web.Compilation.ExpressionBuilder.#ctor" /> constructor to implement custom initialization actions for your expression builder implementation.</span></span></para></block>
        <altmember cref="T:System.Web.Compilation.ExpressionBuilderContext" />
        <altmember cref="T:System.Web.Configuration.ExpressionBuilder" />
        <altmember cref="T:System.Web.Configuration.ExpressionBuilderCollection" />
        <altmember cref="T:System.Web.Compilation.AppSettingsExpressionBuilder" />
        <altmember cref="T:System.Web.Compilation.ConnectionStringsExpressionBuilder" />
      </Docs>
    </Member>
    <Member MemberName="EvaluateExpression">
      <MemberSignature Language="C#" Value="public virtual object EvaluateExpression (object target, System.Web.UI.BoundPropertyEntry entry, object parsedData, System.Web.Compilation.ExpressionBuilderContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object EvaluateExpression(object target, class System.Web.UI.BoundPropertyEntry entry, object parsedData, class System.Web.Compilation.ExpressionBuilderContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.ExpressionBuilder.EvaluateExpression(System.Object,System.Web.UI.BoundPropertyEntry,System.Object,System.Web.Compilation.ExpressionBuilderContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function EvaluateExpression (target As Object, entry As BoundPropertyEntry, parsedData As Object, context As ExpressionBuilderContext) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ EvaluateExpression(System::Object ^ target, System::Web::UI::BoundPropertyEntry ^ entry, System::Object ^ parsedData, System::Web::Compilation::ExpressionBuilderContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member EvaluateExpression : obj * System.Web.UI.BoundPropertyEntry * obj * System.Web.Compilation.ExpressionBuilderContext -&gt; obj&#xA;override this.EvaluateExpression : obj * System.Web.UI.BoundPropertyEntry * obj * System.Web.Compilation.ExpressionBuilderContext -&gt; obj" Usage="expressionBuilder.EvaluateExpression (target, entry, parsedData, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Object" />
        <Parameter Name="entry" Type="System.Web.UI.BoundPropertyEntry" />
        <Parameter Name="parsedData" Type="System.Object" />
        <Parameter Name="context" Type="System.Web.Compilation.ExpressionBuilderContext" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="8eb02-127">Das Objekt, das den Ausdruck enthält.</span><span class="sxs-lookup"><span data-stu-id="8eb02-127">The object containing the expression.</span></span></param>
        <param name="entry"><span data-ttu-id="8eb02-128">Das Objekt, das Informationen über die Eigenschaft enthält, an die durch den Ausdruck gebunden wird.</span><span class="sxs-lookup"><span data-stu-id="8eb02-128">The object that represents information about the property bound to by the expression.</span></span></param>
        <param name="parsedData"><span data-ttu-id="8eb02-129">Das Objekt, das analysierte Daten enthält, wie sie von <see cref="M:System.Web.Compilation.ExpressionBuilder.ParseExpression(System.String,System.Type,System.Web.Compilation.ExpressionBuilderContext)" /> zurückgegeben werden.</span><span class="sxs-lookup"><span data-stu-id="8eb02-129">The object containing parsed data as returned by <see cref="M:System.Web.Compilation.ExpressionBuilder.ParseExpression(System.String,System.Type,System.Web.Compilation.ExpressionBuilderContext)" />.</span></span></param>
        <param name="context"><span data-ttu-id="8eb02-130">Kontextinformationen für die Auswertung des Ausdrucks.</span><span class="sxs-lookup"><span data-stu-id="8eb02-130">Contextual information for the evaluation of the expression.</span></span></param>
        <summary><span data-ttu-id="8eb02-131">Gibt nach dem Überschreiben in einer abgeleiteten Klasse ein Objekt zurück, das einen ausgewerteten Ausdruck darstellt.</span><span class="sxs-lookup"><span data-stu-id="8eb02-131">When overridden in a derived class, returns an object that represents an evaluated expression.</span></span></summary>
        <returns><span data-ttu-id="8eb02-132">Ein Objekt, das den ausgewerteten Ausdruck darstellt, andernfalls <see langword="null" />, wenn der Erbe <see cref="M:System.Web.Compilation.ExpressionBuilder.EvaluateExpression(System.Object,System.Web.UI.BoundPropertyEntry,System.Object,System.Web.Compilation.ExpressionBuilderContext)" /> nicht implementiert.</span><span class="sxs-lookup"><span data-stu-id="8eb02-132">An object that represents the evaluated expression; otherwise, <see langword="null" /> if the inheritor does not implement <see cref="M:System.Web.Compilation.ExpressionBuilder.EvaluateExpression(System.Object,System.Web.UI.BoundPropertyEntry,System.Object,System.Web.Compilation.ExpressionBuilderContext)" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8eb02-133">Wenn Sie möchten, <xref:System.Web.Compilation.ExpressionBuilder> dass das Objekt auf einer Seite aktiv ist, die das Feature "keine Kompilierung" unterstützt, können Sie die <xref:System.Web.Compilation.ExpressionBuilder.EvaluateExpression%2A> -Methode und die-Eigenschaft überschreiben <xref:System.Web.Compilation.ExpressionBuilder.SupportsEvaluate%2A> .</span><span class="sxs-lookup"><span data-stu-id="8eb02-133">If you want your <xref:System.Web.Compilation.ExpressionBuilder> object to be active on a page that supports the no-compile feature, you can override the <xref:System.Web.Compilation.ExpressionBuilder.EvaluateExpression%2A> method and the <xref:System.Web.Compilation.ExpressionBuilder.SupportsEvaluate%2A> property.</span></span> <span data-ttu-id="8eb02-134">Die- <xref:System.Web.Compilation.ExpressionBuilder.EvaluateExpression%2A> Methode sollte die Auswertung des aktuellen Ausdrucks zurückgeben.</span><span class="sxs-lookup"><span data-stu-id="8eb02-134">The <xref:System.Web.Compilation.ExpressionBuilder.EvaluateExpression%2A> method should return the evaluation of the current expression.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8eb02-135">Im folgenden Codebeispiel wird veranschaulicht, wie die überschriebene- <xref:System.Web.Compilation.ExpressionBuilder.EvaluateExpression%2A> Methode zum Zurückgeben eines ausgewerteten Ausdrucks verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="8eb02-135">The following code example demonstrates how to use the overridden <xref:System.Web.Compilation.ExpressionBuilder.EvaluateExpression%2A> method to return an evaluated expression.</span></span>  
  
 [!code-csharp[System.Web.Compilation.ExpressionBuilder#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Compilation.ExpressionBuilder/CS/MyExpressionBuilder.cs#3)]    
 [!code-vb[System.Web.Compilation.ExpressionBuilder#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Compilation.ExpressionBuilder/VB/MyExpressionBuilder.vb#3)]   
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="8eb02-136">Wenn Sie die- <see cref="M:System.Web.Compilation.ExpressionBuilder.EvaluateExpression(System.Object,System.Web.UI.BoundPropertyEntry,System.Object,System.Web.Compilation.ExpressionBuilderContext)" /> Methode überschreiben, müssen Sie auch die-Eigenschaft überschreiben <see cref="P:System.Web.Compilation.ExpressionBuilder.SupportsEvaluate" /> .</span><span class="sxs-lookup"><span data-stu-id="8eb02-136">If you override the <see cref="M:System.Web.Compilation.ExpressionBuilder.EvaluateExpression(System.Object,System.Web.UI.BoundPropertyEntry,System.Object,System.Web.Compilation.ExpressionBuilderContext)" /> method, you must also override the <see cref="P:System.Web.Compilation.ExpressionBuilder.SupportsEvaluate" /> property.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="GetCodeExpression">
      <MemberSignature Language="C#" Value="public abstract System.CodeDom.CodeExpression GetCodeExpression (System.Web.UI.BoundPropertyEntry entry, object parsedData, System.Web.Compilation.ExpressionBuilderContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.CodeDom.CodeExpression GetCodeExpression(class System.Web.UI.BoundPropertyEntry entry, object parsedData, class System.Web.Compilation.ExpressionBuilderContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.ExpressionBuilder.GetCodeExpression(System.Web.UI.BoundPropertyEntry,System.Object,System.Web.Compilation.ExpressionBuilderContext)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetCodeExpression (entry As BoundPropertyEntry, parsedData As Object, context As ExpressionBuilderContext) As CodeExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::CodeDom::CodeExpression ^ GetCodeExpression(System::Web::UI::BoundPropertyEntry ^ entry, System::Object ^ parsedData, System::Web::Compilation::ExpressionBuilderContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member GetCodeExpression : System.Web.UI.BoundPropertyEntry * obj * System.Web.Compilation.ExpressionBuilderContext -&gt; System.CodeDom.CodeExpression" Usage="expressionBuilder.GetCodeExpression (entry, parsedData, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entry" Type="System.Web.UI.BoundPropertyEntry" />
        <Parameter Name="parsedData" Type="System.Object" />
        <Parameter Name="context" Type="System.Web.Compilation.ExpressionBuilderContext" />
      </Parameters>
      <Docs>
        <param name="entry"><span data-ttu-id="8eb02-137">Das Objekt, das Informationen über die Eigenschaft enthält, an die durch den Ausdruck gebunden wird.</span><span class="sxs-lookup"><span data-stu-id="8eb02-137">The object that represents information about the property bound to by the expression.</span></span></param>
        <param name="parsedData"><span data-ttu-id="8eb02-138">Das Objekt, das analysierte Daten enthält, wie sie von <see cref="M:System.Web.Compilation.ExpressionBuilder.ParseExpression(System.String,System.Type,System.Web.Compilation.ExpressionBuilderContext)" /> zurückgegeben werden.</span><span class="sxs-lookup"><span data-stu-id="8eb02-138">The object containing parsed data as returned by <see cref="M:System.Web.Compilation.ExpressionBuilder.ParseExpression(System.String,System.Type,System.Web.Compilation.ExpressionBuilderContext)" />.</span></span></param>
        <param name="context"><span data-ttu-id="8eb02-139">Kontextinformationen für die Auswertung des Ausdrucks.</span><span class="sxs-lookup"><span data-stu-id="8eb02-139">Contextual information for the evaluation of the expression.</span></span></param>
        <summary><span data-ttu-id="8eb02-140">Gibt nach dem Überschreiben in einer abgeleiteten Klasse Code zurück, mit dem während der Seitenausführung der ausgewertete Ausdruck abgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="8eb02-140">When overridden in a derived class, returns code that is used during page execution to obtain the evaluated expression.</span></span></summary>
        <returns><span data-ttu-id="8eb02-141">Eine <see cref="T:System.CodeDom.CodeExpression" />, die zur Eigenschaftenzuweisung verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="8eb02-141">A <see cref="T:System.CodeDom.CodeExpression" /> that is used for property assignment.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8eb02-142">Klassen, die von der-Klasse erben, <xref:System.Web.Compilation.ExpressionBuilder> müssen die <xref:System.Web.Compilation.ExpressionBuilder.GetCodeExpression%2A> abstrakte-Methode implementieren.</span><span class="sxs-lookup"><span data-stu-id="8eb02-142">Classes that inherit from the <xref:System.Web.Compilation.ExpressionBuilder> class must implement the <xref:System.Web.Compilation.ExpressionBuilder.GetCodeExpression%2A> abstract method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8eb02-143">Im folgenden Codebeispiel wird veranschaulicht, wie ein- <xref:System.CodeDom.CodeExpression> Objekt durch Überschreiben der-Methode zurückgegeben wird <xref:System.Web.Compilation.ExpressionBuilder.GetCodeExpression%2A> .</span><span class="sxs-lookup"><span data-stu-id="8eb02-143">The following code example demonstrates how to return a <xref:System.CodeDom.CodeExpression> object by overriding the <xref:System.Web.Compilation.ExpressionBuilder.GetCodeExpression%2A> method.</span></span>  
  
 [!code-csharp[System.Web.Compilation.ExpressionBuilder#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Compilation.ExpressionBuilder/CS/MyExpressionBuilder.cs#4)] 
 [!code-vb[System.Web.Compilation.ExpressionBuilder#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Compilation.ExpressionBuilder/VB/MyExpressionBuilder.vb#4)]   
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="8eb02-144">Wenn Sie einen benutzerdefinierten Ausdrucks-Generator implementieren, müssen Sie die richtige Typumwandlung für die Steuerelement Eigenschaft ausführen und den Umwandlungs Vorgang im-Objekt zurückgeben <see cref="T:System.CodeDom.CodeExpression" /> .</span><span class="sxs-lookup"><span data-stu-id="8eb02-144">If you implement a custom expression builder, you must perform the proper type casting for the control property and return the cast operation in the <see cref="T:System.CodeDom.CodeExpression" /> object.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="ParseExpression">
      <MemberSignature Language="C#" Value="public virtual object ParseExpression (string expression, Type propertyType, System.Web.Compilation.ExpressionBuilderContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ParseExpression(string expression, class System.Type propertyType, class System.Web.Compilation.ExpressionBuilderContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.ExpressionBuilder.ParseExpression(System.String,System.Type,System.Web.Compilation.ExpressionBuilderContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ParseExpression (expression As String, propertyType As Type, context As ExpressionBuilderContext) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ ParseExpression(System::String ^ expression, Type ^ propertyType, System::Web::Compilation::ExpressionBuilderContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member ParseExpression : string * Type * System.Web.Compilation.ExpressionBuilderContext -&gt; obj&#xA;override this.ParseExpression : string * Type * System.Web.Compilation.ExpressionBuilderContext -&gt; obj" Usage="expressionBuilder.ParseExpression (expression, propertyType, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.String" />
        <Parameter Name="propertyType" Type="System.Type" />
        <Parameter Name="context" Type="System.Web.Compilation.ExpressionBuilderContext" />
      </Parameters>
      <Docs>
        <param name="expression"><span data-ttu-id="8eb02-145">Der Wert des deklarativen Ausdrucks.</span><span class="sxs-lookup"><span data-stu-id="8eb02-145">The value of the declarative expression.</span></span></param>
        <param name="propertyType"><span data-ttu-id="8eb02-146">Der Typ der Eigenschaft, an die durch den Ausdruck gebunden wird.</span><span class="sxs-lookup"><span data-stu-id="8eb02-146">The type of the property bound to by the expression.</span></span></param>
        <param name="context"><span data-ttu-id="8eb02-147">Kontextinformationen für die Auswertung des Ausdrucks.</span><span class="sxs-lookup"><span data-stu-id="8eb02-147">Contextual information for the evaluation of the expression.</span></span></param>
        <summary><span data-ttu-id="8eb02-148">Gibt nach dem Überschreiben in einer abgeleiteten Klasse ein Objekt zurück, das den analysierten Ausdruck darstellt.</span><span class="sxs-lookup"><span data-stu-id="8eb02-148">When overridden in a derived class, returns an object that represents the parsed expression.</span></span></summary>
        <returns><span data-ttu-id="8eb02-149">Ein <see cref="T:System.Object" />, das die analysierte Darstellung des Ausdrucks enthält, andernfalls <see langword="null" />, wenn <see cref="M:System.Web.Compilation.ExpressionBuilder.ParseExpression(System.String,System.Type,System.Web.Compilation.ExpressionBuilderContext)" /> nicht implementiert wird.</span><span class="sxs-lookup"><span data-stu-id="8eb02-149">An <see cref="T:System.Object" /> containing the parsed representation of the expression; otherwise, <see langword="null" /> if <see cref="M:System.Web.Compilation.ExpressionBuilder.ParseExpression(System.String,System.Type,System.Web.Compilation.ExpressionBuilderContext)" /> is not implemented.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8eb02-150">Wenn diese Methode in einer abgeleiteten Klasse überschrieben wird, analysiert Sie den Ausdruck und gibt ihn als ein Objekt zurück, das als- `parsedData` Parameter in einer-oder-Methode verwendet werden kann <xref:System.Web.Compilation.ExpressionBuilder.GetCodeExpression%2A> <xref:System.Web.Compilation.ExpressionBuilder.EvaluateExpression%2A> .</span><span class="sxs-lookup"><span data-stu-id="8eb02-150">When overridden in a derived class, this method parses the expression and returns it as an object that can be used as the `parsedData` parameter in a <xref:System.Web.Compilation.ExpressionBuilder.GetCodeExpression%2A> or <xref:System.Web.Compilation.ExpressionBuilder.EvaluateExpression%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsEvaluate">
      <MemberSignature Language="C#" Value="public virtual bool SupportsEvaluate { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsEvaluate" />
      <MemberSignature Language="DocId" Value="P:System.Web.Compilation.ExpressionBuilder.SupportsEvaluate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsEvaluate As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsEvaluate { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.SupportsEvaluate : bool" Usage="System.Web.Compilation.ExpressionBuilder.SupportsEvaluate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8eb02-151">Gibt nach dem Überschreiben in einer abgeleiteten Klasse einen Wert zurück, der angibt, ob das aktuelle <see cref="T:System.Web.Compilation.ExpressionBuilder" />-Objekt nicht kompilierte Seiten unterstützt.</span><span class="sxs-lookup"><span data-stu-id="8eb02-151">When overridden in a derived class, returns a value indicating whether the current <see cref="T:System.Web.Compilation.ExpressionBuilder" /> object supports no-compile pages.</span></span></summary>
        <value><span data-ttu-id="8eb02-152"><see langword="true" />, wenn <see cref="T:System.Web.Compilation.ExpressionBuilder" /> Ausdrucksauswertung unterstützt, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="8eb02-152"><see langword="true" /> if the <see cref="T:System.Web.Compilation.ExpressionBuilder" /> supports expression evaluation; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8eb02-153">Der Standardwert für die- <xref:System.Web.Compilation.ExpressionBuilder.SupportsEvaluate%2A> Eigenschaft ist `false` .</span><span class="sxs-lookup"><span data-stu-id="8eb02-153">The default value for the <xref:System.Web.Compilation.ExpressionBuilder.SupportsEvaluate%2A> property is `false`.</span></span> <span data-ttu-id="8eb02-154">Um nicht kompilierte Seiten zu unterstützen, müssen Sie sowohl die- <xref:System.Web.Compilation.ExpressionBuilder.EvaluateExpression%2A> Methode als auch die-Eigenschaft überschreiben <xref:System.Web.Compilation.ExpressionBuilder.SupportsEvaluate%2A> .</span><span class="sxs-lookup"><span data-stu-id="8eb02-154">To support no-compile pages, you must override both the <xref:System.Web.Compilation.ExpressionBuilder.EvaluateExpression%2A> method and the <xref:System.Web.Compilation.ExpressionBuilder.SupportsEvaluate%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8eb02-155">Im folgenden Codebeispiel wird die Verwendung der- <xref:System.Web.Compilation.ExpressionBuilder.SupportsEvaluate%2A> Eigenschaft veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="8eb02-155">The following code example demonstrates how to use the <xref:System.Web.Compilation.ExpressionBuilder.SupportsEvaluate%2A> property.</span></span>  
  
 [!code-csharp[System.Web.Compilation.ExpressionBuilder#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Compilation.ExpressionBuilder/CS/MyExpressionBuilder.cs#2)] 
 [!code-vb[System.Web.Compilation.ExpressionBuilder#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Compilation.ExpressionBuilder/VB/MyExpressionBuilder.vb#2)]   
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
