<Type Name="ExpressionPrefixAttribute" FullName="System.Web.Compilation.ExpressionPrefixAttribute">
  <Metadata><Meta Name="ms.openlocfilehash" Value="4c5835d9a42030f5246c3641fc7833e7d96e7ce0" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70474836" /></Metadata><TypeSignature Language="C#" Value="public sealed class ExpressionPrefixAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ExpressionPrefixAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Web.Compilation.ExpressionPrefixAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ExpressionPrefixAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class ExpressionPrefixAttribute sealed : Attribute" />
  <TypeSignature Language="F#" Value="type ExpressionPrefixAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Class, AllowMultiple=false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Gibt das für den Ausdrucks-Generator zu verwendende Präfixattribut an. Diese Klasse kann nicht vererbt werden.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.Compilation.ExpressionPrefixAttribute> -Klasse wird zur Entwurfszeit mit Ausdrücken verwendet, die nicht in der Konfigurationsdatei definiert sind. Verwenden Sie <xref:System.Web.Compilation.ExpressionPrefixAttribute.ExpressionPrefix%2A> die-Eigenschaft, um den Namen des Präfix, das dem <xref:System.Web.Compilation.ExpressionPrefixAttribute> -Objekt zugeordnet ist, zu erhalten. Ein Ausdrucks-Generator sucht nach Anweisungen in der folgenden Form:  
  
 `<%$ [expressionPrefix]:[expressionValue] %>`  
  
 Anschließend generiert der Ausdrucks-Generator, basierend auf dem Präfix des Ausdrucks, Code für die Eigenschaften Zuweisung. Der `expressionPrefix` -Parameter verweist auf einen konfigurierten Ausdrucks-Generator, der in der Konfigurationsdatei oder durch <xref:System.Web.Compilation.ExpressionPrefixAttribute> ein-Objekt definiert ist.  
  
   
  
## Examples  
 Die folgenden Codebeispiele veranschaulichen die Verwendung der <xref:System.Web.Compilation.ExpressionPrefixAttribute> -Klasse. Das-Attribut wird auf einen benutzerdefinierten Ausdrucks-Generator angewendet <xref:System.Web.Compilation.ExpressionBuilder> , der die abstrakte-Klasse implementiert. Diese Implementierung von <xref:System.Web.Compilation.ExpressionBuilder> gibt eine ausgewertete Anweisung zurück, die an den-Ausdruck übermittelt wird. Um dieses Beispiel ausführen zu können, müssen Sie zuerst den benutzerdefinierten Ausdrucks-Generator in der Datei "Web. config" registrieren. Im ersten Codebeispiel wird veranschaulicht, wie der benutzerdefinierte Ausdrucks-Generator in der Datei "Web. config" registriert wird.  
  
```  
<configuration>  
    <system.web>  
       <compilation>  
          <expressionBuilders>  
              <add expressionPrefix="MyCustomExpression"  
               type="MyCustomExpressionBuilder"/>  
          </expressionBuilders>  
       </compilation>  
    </system.web>  
</configuration>  
```  
  
 Im zweiten Codebeispiel wird veranschaulicht, wie auf den Ausdruck in einer ASPX-Datei verwiesen wird.  
  
```  
<asp:Label ID="Label1" runat="server"   
Text="<%$ MyCustomExpression:Hello, world! %>" />  
```  
  
 Im dritten Codebeispiel wird veranschaulicht, wie ein angepasster Ausdrucks-Generator <xref:System.Web.Compilation.ExpressionBuilder>entwickelt wird, indem von abgeleitet wird. Zum Ausführen dieses Code Beispiels müssen Sie die-Klasse im Ordner "App_Code" platzieren.  
  
 [!code-csharp[System.Web.Compilation.ExpressionBuilder#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Compilation.ExpressionBuilder/CS/MyExpressionBuilder.cs#1)] 
 [!code-vb[System.Web.Compilation.ExpressionBuilder#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Compilation.ExpressionBuilder/VB/MyExpressionBuilder.vb#1)]   
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.Design.ExpressionEditor" />
    <altmember cref="T:System.Web.UI.Design.ExpressionEditorSheet" />
    <altmember cref="T:System.Web.UI.Design.AppSettingsExpressionEditor" />
    <altmember cref="T:System.Web.Compilation.ExpressionBuilder" />
    <altmember cref="P:System.Web.Configuration.ExpressionBuilder.ExpressionPrefix" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ExpressionPrefixAttribute (string expressionPrefix);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string expressionPrefix) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.ExpressionPrefixAttribute.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (expressionPrefix As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ExpressionPrefixAttribute(System::String ^ expressionPrefix);" />
      <MemberSignature Language="F#" Value="new System.Web.Compilation.ExpressionPrefixAttribute : string -&gt; System.Web.Compilation.ExpressionPrefixAttribute" Usage="new System.Web.Compilation.ExpressionPrefixAttribute expressionPrefix" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="expressionPrefix" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="expressionPrefix">Das Präfix des aktuellen <see cref="T:System.Web.Compilation.ExpressionBuilder" />.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Compilation.ExpressionPrefixAttribute" />-Klasse.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie <xref:System.Web.Compilation.ExpressionPrefixAttribute.%23ctor%2A> den-Konstruktor, um mithilfe eines Präfix Bezeichners eine Instanz <xref:System.Web.Compilation.ExpressionPrefixAttribute> der-Klasse zu initialisieren. Der <xref:System.Web.Compilation.ExpressionPrefixAttribute.%23ctor%2A> ist der Parameter lose Konstruktor für die <xref:System.Web.Compilation.ExpressionPrefixAttribute> -Klasse.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="expressionPrefix" /> ist NULL oder eine leere Zeichenfolge ("").</exception>
        <altmember cref="T:System.Web.UI.Design.ExpressionEditor" />
        <altmember cref="T:System.Web.UI.Design.ExpressionEditorSheet" />
        <altmember cref="T:System.Web.UI.Design.AppSettingsExpressionEditor" />
        <altmember cref="T:System.Web.Compilation.ExpressionBuilder" />
        <altmember cref="P:System.Web.Configuration.ExpressionBuilder.ExpressionPrefix" />
      </Docs>
    </Member>
    <Member MemberName="ExpressionPrefix">
      <MemberSignature Language="C#" Value="public string ExpressionPrefix { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ExpressionPrefix" />
      <MemberSignature Language="DocId" Value="P:System.Web.Compilation.ExpressionPrefixAttribute.ExpressionPrefix" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ExpressionPrefix As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ExpressionPrefix { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ExpressionPrefix : string" Usage="System.Web.Compilation.ExpressionPrefixAttribute.ExpressionPrefix" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Präfixwert für das aktuelle <see cref="T:System.Web.Compilation.ExpressionBuilder" />-Objekt ab.</summary>
        <value>Das Ausdruckspräfix für den konfigurierten <see cref="T:System.Web.Compilation.ExpressionBuilder" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie <xref:System.Web.Compilation.ExpressionPrefixAttribute.ExpressionPrefix%2A> die-Eigenschaft, um den Namen des Präfixes abzurufen, das einem angegebenen Attribut zugeordnet ist.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.Design.ExpressionEditor" />
        <altmember cref="T:System.Web.UI.Design.ExpressionEditorSheet" />
        <altmember cref="T:System.Web.UI.Design.AppSettingsExpressionEditor" />
        <altmember cref="T:System.Web.Compilation.ExpressionBuilder" />
        <altmember cref="P:System.Web.Configuration.ExpressionBuilder.ExpressionPrefix" />
      </Docs>
    </Member>
  </Members>
</Type>
