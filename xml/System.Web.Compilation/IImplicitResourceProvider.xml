<Type Name="IImplicitResourceProvider" FullName="System.Web.Compilation.IImplicitResourceProvider">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="26e7cfd3d914503692e6400dd6e8bcc6f2987915" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36405146" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IImplicitResourceProvider" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IImplicitResourceProvider" />
  <TypeSignature Language="DocId" Value="T:System.Web.Compilation.IImplicitResourceProvider" />
  <TypeSignature Language="VB.NET" Value="Public Interface IImplicitResourceProvider" />
  <TypeSignature Language="C++ CLI" Value="public interface class IImplicitResourceProvider" />
  <TypeSignature Language="F#" Value="type IImplicitResourceProvider = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Definiert Methoden, die von einer Klasse implementiert werden, damit diese als impliziter Ressourcenanbieter fungieren kann.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ressourcen können innerhalb einer Seite explizit oder implizit deklariert werden. Implizite Ressourcen ermöglichen es den Entwickler, die eine Auflistung von Ressourcenwerten an ein Steuerelement in einer Anweisung statt einzeln Zuweisen von jedem Wert zuweisen. Wenn der Parser trifft eine implizite Ressource in Form von `meta:resourcekey="WelcomeLabel"`, weist er alle Werte mit den `WelcomeLabel` Ressourcenschlüsselpräfix auf die entsprechenden Werte im Steuerelement. Angenommen, eine Ressourcendatei Werte für definiert `WelcomeLabel.Text` und `WelcomeLabel.ToolTip`, diese Werte zugewiesen werden eine `Label` -Steuerelement mit einen impliziten Verweis auf `WelcomeLabel`.  
  
 Die <xref:System.Web.Compilation.IImplicitResourceProvider> Schnittstelle definiert die Methoden, die ein Ressourcenanbieter implementiert, um implizite Ressourcen zuzugreifen. Sie erhalten einen bestimmten Wert mithilfe der <xref:System.Web.Compilation.IImplicitResourceProvider.GetObject%2A> Methode.  
  
 Wenn Sie einen benutzerdefinierten Ressourcenanbieter erstellen, müssen Sie keine implizite Ressource Lokalisierung angepasste unterstützen. Implizite Lokalisierung funktioniert mit dem Ressourcenanbieter.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.Compilation.ResourceExpressionBuilder" />
    <altmember cref="T:System.Web.Compilation.ImplicitResourceKey" />
    <altmember cref="T:System.Web.UI.Design.ResourceExpressionEditor" />
  </Docs>
  <Members>
    <Member MemberName="GetImplicitResourceKeys">
      <MemberSignature Language="C#" Value="public System.Collections.ICollection GetImplicitResourceKeys (string keyPrefix);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.ICollection GetImplicitResourceKeys(string keyPrefix) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.IImplicitResourceProvider.GetImplicitResourceKeys(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetImplicitResourceKeys (keyPrefix As String) As ICollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::ICollection ^ GetImplicitResourceKeys(System::String ^ keyPrefix);" />
      <MemberSignature Language="F#" Value="abstract member GetImplicitResourceKeys : string -&gt; System.Collections.ICollection" Usage="iImplicitResourceProvider.GetImplicitResourceKeys keyPrefix" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyPrefix" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="keyPrefix">Das Präfix der aufzulistenden impliziten Ressourcenschlüssel.</param>
        <summary>Ruft eine Auflistung impliziter Ressourcenschlüssel wie vom Präfix angegeben ab.</summary>
        <returns>Eine <see cref="T:System.Collections.ICollection" /> impliziter Ressourcenschlüssel.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bei der Implementierung gibt die Methode eine Auflistung von impliziten Ressourcenschlüssel für ein bestimmtes Präfix zurück. Beispielsweise `WelcomeLabel` ist als das Präfix im Ausdruck angegeben `meta:resourcekey="WelcomeLabel"`. Alle Eigenschaften in einer lokalen Ressourcendatei mit `WelcomeLabel` als ein Präfix mit dieser Methode zurückgegeben werden soll.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Compilation.ResourceExpressionBuilder" />
        <altmember cref="T:System.Web.Compilation.ImplicitResourceKey" />
        <altmember cref="T:System.Web.UI.Design.ResourceExpressionEditor" />
      </Docs>
    </Member>
    <Member MemberName="GetObject">
      <MemberSignature Language="C#" Value="public object GetObject (System.Web.Compilation.ImplicitResourceKey key, System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetObject(class System.Web.Compilation.ImplicitResourceKey key, class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.IImplicitResourceProvider.GetObject(System.Web.Compilation.ImplicitResourceKey,System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetObject (key As ImplicitResourceKey, culture As CultureInfo) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetObject(System::Web::Compilation::ImplicitResourceKey ^ key, System::Globalization::CultureInfo ^ culture);" />
      <MemberSignature Language="F#" Value="abstract member GetObject : System.Web.Compilation.ImplicitResourceKey * System.Globalization.CultureInfo -&gt; obj" Usage="iImplicitResourceProvider.GetObject (key, culture)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Web.Compilation.ImplicitResourceKey" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="key">Der Ressourcenschlüssel, der das Präfix, den Filter und die Eigenschaft enthält.</param>
        <param name="culture">Die <see cref="T:System.Globalization.CultureInfo" />, die die Kultur darstellt, für die die Ressource lokalisiert wird.</param>
        <summary>Ruft ein Objekt ab, das den Wert des angegebenen Ressourcenschlüssels darstellt.</summary>
        <returns>Ein <see cref="T:System.Object" />, das den lokalisierten Wert eines impliziten Ressourcenschlüssels darstellt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bei der Implementierung gibt die Methode das Objekt für den Wert von der impliziten Ressourcenschlüssel dargestellt.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Compilation.ResourceExpressionBuilder" />
        <altmember cref="T:System.Web.Compilation.ImplicitResourceKey" />
        <altmember cref="T:System.Web.UI.Design.ResourceExpressionEditor" />
      </Docs>
    </Member>
  </Members>
</Type>