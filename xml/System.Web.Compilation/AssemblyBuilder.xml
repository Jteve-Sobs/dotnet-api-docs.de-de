<Type Name="AssemblyBuilder" FullName="System.Web.Compilation.AssemblyBuilder">
  <Metadata><Meta Name="ms.openlocfilehash" Value="495c1fc89aa2cf54e97f90adb14adb9b5973520a" /><Meta Name="ms.sourcegitcommit" Value="1b924db57b3a1cf768d98c21f9b988d6966a0f2b" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="03/06/2020" /><Meta Name="ms.locfileid" Value="78778826" /></Metadata><TypeSignature Language="C#" Value="public class AssemblyBuilder" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit AssemblyBuilder extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.Compilation.AssemblyBuilder" />
  <TypeSignature Language="VB.NET" Value="Public Class AssemblyBuilder" />
  <TypeSignature Language="C++ CLI" Value="public ref class AssemblyBuilder" />
  <TypeSignature Language="F#" Value="type AssemblyBuilder = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Stellt einen Container zum Erstellen einer Assembly aus einem oder mehreren virtuellen Pfaden in einem ASP.NET-Projekt bereit.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Instanzen der <xref:System.Web.Compilation.AssemblyBuilder>-Klasse werden zusammen mit <xref:System.Web.Compilation.BuildProvider>-Klassen Methoden verwendet, um eine oder mehrere Dateien in einer kompilierten Assembly zu erstellen.  
  
 Die <xref:System.Web.Compilation.BuildProvider>-Klasse definiert Buildfunktionen für einzelne Dateien, und die <xref:System.Web.Compilation.AssemblyBuilder>-Klasse kombiniert den von jeder <xref:System.Web.Compilation.BuildProvider> Instanz beigetragenen Quellcode in eine einzelne Assembly. Die ASP.NET-Buildumgebung übergibt ein <xref:System.Web.Compilation.AssemblyBuilder>-Objekt an die <xref:System.Web.Compilation.BuildProvider> Methoden, wenn eine Assembly aus einer oder mehreren Dateien erstellt wird, damit jede <xref:System.Web.Compilation.BuildProvider> Instanz Quellcode für Ihre Datei zur gesamten Assembly beitragen kann.  
  
 Die ASP.NET-Buildumgebung bestimmt die Sprache und den Compiler, die von Dateien innerhalb des Projekts benötigt werden, basierend auf der <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A?displayProperty=nameWithType>-Eigenschaft. Die Buildumgebung gruppiert Dateien basierend auf Ihren Compilereinstellungen und erstellt eine Assembly aus Dateien, die denselben Compiler benötigen.  
  
 Die <xref:System.Web.Compilation.AssemblyBuilder.CodeDomProvider%2A>-Eigenschaft gibt die <xref:System.CodeDom.Compiler.CodeDomProvider> Implementierung an, die die ASP.NET-Buildumgebung verwendet, um eine Assembly aus dem von jeder <xref:System.Web.Compilation.BuildProvider>-Implementierung beigetragenen Quellcode zu kompilieren.  
  
 Ein <xref:System.Web.Compilation.BuildProvider>-Objekt trägt Quellcode in Form eines CodeDOM-Diagramms mit der <xref:System.Web.Compilation.AssemblyBuilder.AddCodeCompileUnit%2A>-Methode bei. Ein <xref:System.Web.Compilation.BuildProvider>-Objekt trägt in einer physischen Datei gespeicherten Quellcode mit der <xref:System.Web.Compilation.AssemblyBuilder.CreateCodeFile%2A>-Methode bei.  
  
 Nachdem jedes <xref:System.Web.Compilation.BuildProvider> Objekt Quellcode mithilfe der entsprechenden <xref:System.Web.Compilation.AssemblyBuilder> Methoden beisteuert, verwendet die ASP.NET-Buildumgebung die <xref:System.Web.Compilation.AssemblyBuilder>-Klasse, um den gesammelten Quellcode in eine Assembly zu kompilieren.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird eine einfache Implementierung des Buildanbieters veranschaulicht, die von der abstrakten <xref:System.Web.Compilation.BuildProvider> Basisklasse erbt. Der Buildanbieter überschreibt die <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A>, <xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A>und <xref:System.Web.Compilation.BuildProvider.GenerateCode%2A> Member der Basisklasse.  
  
 In der Implementierung der <xref:System.Web.Compilation.BuildProvider.GenerateCode%2A> Methode fügt der Build-Anbieter den generierten Code für die Assemblykompilierung mit der <xref:System.Web.Compilation.AssemblyBuilder.CreateCodeFile%2A>-Methode hinzu. Das Beispiel enthält nicht die Implementierung der `SampleClassGenerator`-Klasse. Weitere Informationen finden Sie unter <xref:System.CodeDom.CodeCompileUnit>.  
  
 [!code-csharp[System.Web.Compilation_SampleBuildProvider#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Compilation_SampleBuildProvider/CS/samplebuildprovider.cs#2)]
 [!code-vb[System.Web.Compilation_SampleBuildProvider#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Compilation_SampleBuildProvider/VB/samplebuildprovider.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.Compilation.BuildProvider" />
    <altmember cref="T:System.Web.Compilation.BuildManager" />
    <altmember cref="T:System.Web.Compilation.ClientBuildManager" />
  </Docs>
  <Members>
    <Member MemberName="AddAssemblyReference">
      <MemberSignature Language="C#" Value="public void AddAssemblyReference (System.Reflection.Assembly a);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddAssemblyReference(class System.Reflection.Assembly a) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.AssemblyBuilder.AddAssemblyReference(System.Reflection.Assembly)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddAssemblyReference (a As Assembly)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddAssemblyReference(System::Reflection::Assembly ^ a);" />
      <MemberSignature Language="F#" Value="member this.AddAssemblyReference : System.Reflection.Assembly -&gt; unit" Usage="assemblyBuilder.AddAssemblyReference a" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Reflection.Assembly" />
      </Parameters>
      <Docs>
        <param name="a">Eine Assembly, auf die in einer in der Assemblykompilierung enthaltenen Codekompilierungseinheit oder Quelldatei verwiesen wird.</param>
        <summary>Fügt eine Assembly hinzu, auf die für eine Datei generierter Quellcode verweist.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Eine <xref:System.Web.Compilation.BuildProvider>-Implementierung verwendet die <xref:System.Web.Compilation.AssemblyBuilder.AddAssemblyReference%2A>-Methode beim Erzeugen von Quellcode, der auf Typen in der Eingabeassembly verweist.  
  
 Die ASP.NET-Buildumgebung initialisiert die Standard Auflistung von Assemblys, die für den Verweis über den Buildanbieter in der <xref:System.Web.Compilation.BuildProvider.ReferencedAssemblies%2A?displayProperty=nameWithType>-Eigenschaft verfügbar sind Wenn der Buildanbieter Quellcode generiert, der auf zusätzliche Assemblys verweist, fügt der Buildanbieter die zusätzlichen Assemblys mit der <xref:System.Web.Compilation.AssemblyBuilder.AddAssemblyReference%2A>-Methode hinzu. Die ASP.NET-Buildumgebung löst externe Typen während der Assemblykompilierung mithilfe der referenzierten Assemblys auf, die von Buildanbietern und der Standard Auflistung der für den Verweis  
  
 In der Regel fügt ein <xref:System.Web.Compilation.BuildProvider>-Objekt dem <xref:System.Web.Compilation.AssemblyBuilder>-Objekt in der <xref:System.Web.Compilation.BuildProvider.GenerateCode%2A>-Methode Quellcode hinzu. Wenn ein Buildanbieter Quellcode generiert, der einen externen Typ verwendet, fügt der Buildanbieter die Assembly des Typs mithilfe der <xref:System.Web.Compilation.AssemblyBuilder.AddAssemblyReference%2A?displayProperty=nameWithType>-Methode hinzu.  
  
 Verwenden Sie die <xref:System.Web.Compilation.AssemblyBuilder.AddAssemblyReference%2A>-Methode, um eine referenzierte Assembly hinzuzufügen, die im von einer <xref:System.Web.Compilation.BuildProvider> Instanz für einen bestimmten Dateityp generierten Quellcode erforderlich ist. Verwenden Sie das- [Assemblyelement für das Kompilierungs Konfigurationselement (ASP.NET Settings Schema)](https://msdn.microsoft.com/library/3811c448-af1c-498d-be2b-6ed2634c51e9) , um eine Assembly für den Verweis auf mehrere Dateitypen in einem Projekt zu konfigurieren.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.Compilation.BuildProvider.ReferencedAssemblies" />
      </Docs>
    </Member>
    <Member MemberName="AddCodeCompileUnit">
      <MemberSignature Language="C#" Value="public void AddCodeCompileUnit (System.Web.Compilation.BuildProvider buildProvider, System.CodeDom.CodeCompileUnit compileUnit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddCodeCompileUnit(class System.Web.Compilation.BuildProvider buildProvider, class System.CodeDom.CodeCompileUnit compileUnit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.AssemblyBuilder.AddCodeCompileUnit(System.Web.Compilation.BuildProvider,System.CodeDom.CodeCompileUnit)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddCodeCompileUnit (buildProvider As BuildProvider, compileUnit As CodeCompileUnit)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddCodeCompileUnit(System::Web::Compilation::BuildProvider ^ buildProvider, System::CodeDom::CodeCompileUnit ^ compileUnit);" />
      <MemberSignature Language="F#" Value="member this.AddCodeCompileUnit : System.Web.Compilation.BuildProvider * System.CodeDom.CodeCompileUnit -&gt; unit" Usage="assemblyBuilder.AddCodeCompileUnit (buildProvider, compileUnit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buildProvider" Type="System.Web.Compilation.BuildProvider" />
        <Parameter Name="compileUnit" Type="System.CodeDom.CodeCompileUnit" />
      </Parameters>
      <Docs>
        <param name="buildProvider">Der Buildanbieter, der die <paramref name="compileUnit" />-Eigenschaft generiert.</param>
        <param name="compileUnit">Die Codekompilierungseinheit, die in die Assemblykompilierung einzubeziehen ist.</param>
        <summary>Fügt der Assembly Quellcode in Form eines CodeDOM-Diagramms hinzu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Eine <xref:System.Web.Compilation.BuildProvider> Implementierung ruft beim Erzeugen eines CodeDOM-Diagramms für einen virtuellen Pfad die <xref:System.Web.Compilation.AssemblyBuilder.AddCodeCompileUnit%2A>-Methode auf. Der mit <xref:System.Web.Compilation.AssemblyBuilder.AddCodeCompileUnit%2A> hinzugefügte Quellcode ist in der Assemblykompilierung enthalten.  
  
 In der Regel liest die <xref:System.Web.Compilation.BuildProvider.GenerateCode%2A> Methoden Implementierung eines Buildanbieters die <xref:System.Web.Compilation.BuildProvider.VirtualPath%2A>-Eigenschaft, analysiert den Inhalt und fügt dann den generierten Quellcode dem angegebenen <xref:System.Web.Compilation.AssemblyBuilder>-Objekt hinzu. Der Buildanbieter verwendet die <xref:System.Web.Compilation.AssemblyBuilder.AddCodeCompileUnit%2A>-Methode, um der Assembly Quellcode als CodeDOM-Diagramm hinzuzufügen. Alternativ kann der Buildanbieter die <xref:System.Web.Compilation.AssemblyBuilder.CreateCodeFile%2A>-Methode verwenden, um der Assembly Quellcode als physische Datei hinzuzufügen.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Compilation.BuildProvider" />
        <altmember cref="M:System.Web.Compilation.AssemblyBuilder.CreateCodeFile(System.Web.Compilation.BuildProvider)" />
        <altmember cref="Overload:System.Web.Compilation.BuildProvider.OpenReader" />
        <altmember cref="Overload:System.Web.Compilation.BuildProvider.OpenStream" />
      </Docs>
    </Member>
    <Member MemberName="CodeDomProvider">
      <MemberSignature Language="C#" Value="public System.CodeDom.Compiler.CodeDomProvider CodeDomProvider { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.CodeDom.Compiler.CodeDomProvider CodeDomProvider" />
      <MemberSignature Language="DocId" Value="P:System.Web.Compilation.AssemblyBuilder.CodeDomProvider" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CodeDomProvider As CodeDomProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::CodeDom::Compiler::CodeDomProvider ^ CodeDomProvider { System::CodeDom::Compiler::CodeDomProvider ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CodeDomProvider : System.CodeDom.Compiler.CodeDomProvider" Usage="System.Web.Compilation.AssemblyBuilder.CodeDomProvider" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.CodeDom.Compiler.CodeDomProvider</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Compiler auf, der zum Erstellen von Quellcode in einer Assembly verwendet wird.</summary>
        <value>Eine schreibgeschützte <see cref="T:System.CodeDom.Compiler.CodeDomProvider" />-Implementierung, mit der der von den einzelnen Buildanbietern beigetragene Quellcode in einer Assembly kompiliert wird.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.Compilation.AssemblyBuilder.CodeDomProvider%2A>-Eigenschaft gibt die <xref:System.CodeDom.Compiler.CodeDomProvider?displayProperty=nameWithType> Implementierung an, die die ASP.NET-Buildumgebung verwendet, um eine Assembly aus dem von jeder <xref:System.Web.Compilation.BuildProvider>-Implementierung beigetragenen Quellcode zu kompilieren.  
  
 Die ASP.NET-Buildumgebung bestimmt die Sprache und den Compiler, die von Dateien innerhalb des Projekts benötigt werden, basierend auf der <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A?displayProperty=nameWithType>-Eigenschaft. Die Buildumgebung gruppiert Dateien basierend auf Ihren Compilereinstellungen und erstellt eine Assembly aus Dateien, die denselben Compiler benötigen.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.CodeDom.Compiler.CodeDomProvider" />
        <altmember cref="P:System.Web.Compilation.BuildProvider.CodeCompilerType" />
        <altmember cref="T:System.Web.Compilation.CompilerType" />
        <altmember cref="T:Microsoft.VisualBasic.VBCodeProvider" />
        <altmember cref="T:Microsoft.CSharp.CSharpCodeProvider" />
      </Docs>
    </Member>
    <Member MemberName="CreateCodeFile">
      <MemberSignature Language="C#" Value="public System.IO.TextWriter CreateCodeFile (System.Web.Compilation.BuildProvider buildProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.TextWriter CreateCodeFile(class System.Web.Compilation.BuildProvider buildProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.AssemblyBuilder.CreateCodeFile(System.Web.Compilation.BuildProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateCodeFile (buildProvider As BuildProvider) As TextWriter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::TextWriter ^ CreateCodeFile(System::Web::Compilation::BuildProvider ^ buildProvider);" />
      <MemberSignature Language="F#" Value="member this.CreateCodeFile : System.Web.Compilation.BuildProvider -&gt; System.IO.TextWriter" Usage="assemblyBuilder.CreateCodeFile buildProvider" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.TextWriter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buildProvider" Type="System.Web.Compilation.BuildProvider" />
      </Parameters>
      <Docs>
        <param name="buildProvider">Der Buildanbieter, der die Codequelldatei generiert.</param>
        <summary>Ermöglicht es einem Buildanbieter, eine temporäre Quelldatei zu erstellen und die Quelldatei in die Assemblykompilierung einzubeziehen.</summary>
        <returns>Ein geöffnetes <see cref="T:System.IO.TextWriter" />-Objekt, mit dem Quellcode in eine temporäre Datei geschrieben werden kann.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Eine <xref:System.Web.Compilation.BuildProvider>-Implementierung ruft die <xref:System.Web.Compilation.AssemblyBuilder.CreateCodeFile%2A>-Methode auf, wenn eine Quelldatei für einen virtuellen Pfad erzeugt wird. Der mit <xref:System.Web.Compilation.AssemblyBuilder.CreateCodeFile%2A> hinzugefügte Quellcode ist in der Assemblykompilierung enthalten.  
  
 In der Regel liest ein Buildanbieter-<xref:System.Web.Compilation.BuildProvider.GenerateCode%2A> Methoden Implementierung die <xref:System.Web.Compilation.BuildProvider.VirtualPath%2A>-Eigenschaft, analysiert den Inhalt und fügt dann den generierten Quellcode dem angegebenen <xref:System.Web.Compilation.AssemblyBuilder>-Objekt hinzu. Der Buildanbieter verwendet die <xref:System.Web.Compilation.AssemblyBuilder.CreateCodeFile%2A>-Methode, um der Assembly Quellcode als physische Datei hinzuzufügen. Alternativ kann der Buildanbieter die <xref:System.Web.Compilation.AssemblyBuilder.AddCodeCompileUnit%2A>-Methode verwenden, um der Assembly Quellcode als CodeDOM-Diagramm hinzuzufügen.  
  
 Nach dem Aufrufen von <xref:System.Web.Compilation.AssemblyBuilder.CreateCodeFile%2A>schreibt der Buildanbieter den Inhalt der Quelldatei mithilfe des zurückgegebenen <xref:System.IO.TextWriter> Objekts. Nach dem Schreiben der Quelldatei muss das <xref:System.Web.Compilation.BuildProvider> Objekt die <xref:System.IO.TextWriter.Close%2A>-Methode verwenden, um das <xref:System.IO.TextWriter>-Objekt zu schließen und zugeordnete Systemressourcen freizugeben.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird eine einfache Implementierung des Buildanbieters veranschaulicht, die von der abstrakten <xref:System.Web.Compilation.BuildProvider> Basisklasse erbt. Der Buildanbieter überschreibt die <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A>, <xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A>und <xref:System.Web.Compilation.BuildProvider.GenerateCode%2A> Member der Basisklasse.  
  
 In der Implementierung der <xref:System.Web.Compilation.BuildProvider.GenerateCode%2A> Methode fügt der Build-Anbieter den generierten Code für die Assemblykompilierung mit der <xref:System.Web.Compilation.AssemblyBuilder.CreateCodeFile%2A>-Methode hinzu. Das Beispiel enthält nicht die Implementierung der `SampleClassGenerator`-Klasse. Weitere Informationen finden Sie unter <xref:System.CodeDom.CodeCompileUnit>.  
  
 [!code-csharp[System.Web.Compilation_SampleBuildProvider#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Compilation_SampleBuildProvider/CS/samplebuildprovider.cs#2)]
 [!code-vb[System.Web.Compilation_SampleBuildProvider#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Compilation_SampleBuildProvider/VB/samplebuildprovider.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Compilation.BuildProvider" />
        <altmember cref="Overload:System.Web.Compilation.BuildProvider.OpenReader" />
        <altmember cref="Overload:System.Web.Compilation.BuildProvider.OpenStream" />
        <altmember cref="M:System.Web.Compilation.AssemblyBuilder.AddCodeCompileUnit(System.Web.Compilation.BuildProvider,System.CodeDom.CodeCompileUnit)" />
      </Docs>
    </Member>
    <Member MemberName="CreateEmbeddedResource">
      <MemberSignature Language="C#" Value="public System.IO.Stream CreateEmbeddedResource (System.Web.Compilation.BuildProvider buildProvider, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Stream CreateEmbeddedResource(class System.Web.Compilation.BuildProvider buildProvider, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.AssemblyBuilder.CreateEmbeddedResource(System.Web.Compilation.BuildProvider,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateEmbeddedResource (buildProvider As BuildProvider, name As String) As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Stream ^ CreateEmbeddedResource(System::Web::Compilation::BuildProvider ^ buildProvider, System::String ^ name);" />
      <MemberSignature Language="F#" Value="member this.CreateEmbeddedResource : System.Web.Compilation.BuildProvider * string -&gt; System.IO.Stream" Usage="assemblyBuilder.CreateEmbeddedResource (buildProvider, name)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buildProvider" Type="System.Web.Compilation.BuildProvider" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="buildProvider">Der Buildanbieter, der die Ressource generiert.</param>
        <param name="name">Der Name der zu erstellenden Ressourcendatei.</param>
        <summary>Ermöglicht es einem Buildanbieter, eine Ressourcendatei zu erstellen und in die Assemblykompilierung einzubeziehen.</summary>
        <returns>Ein geöffnetes <see cref="T:System.IO.Stream" />-Objekt, mit dem in die Assemblykompilierung einbezogene Ressourcen geschrieben werden können.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Nach dem Aufrufen der <xref:System.Web.Compilation.AssemblyBuilder.CreateEmbeddedResource%2A>-Methode schreibt ein <xref:System.Web.Compilation.BuildProvider>-Objekt den Inhalt der Ressourcen Datei mit dem zurückgegebenen <xref:System.IO.Stream>-Objekt. Der Buildanbieter kann z. b. die Ressourcen mithilfe eines <xref:System.Resources.ResourceWriter> Objekts schreiben. Nachdem Sie die Ressourcen Datei geschrieben haben, muss der Buildanbieter die <xref:System.IO.Stream.Close%2A>-Methode verwenden, um das <xref:System.IO.Stream> Objekt zu schließen und zugeordnete Systemressourcen freizugeben.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="name" /> ist kein gültiger Dateiname.</exception>
        <altmember cref="T:System.Web.Compilation.BuildProvider" />
        <altmember cref="T:System.Resources.ResourceWriter" />
      </Docs>
    </Member>
    <Member MemberName="GenerateTypeFactory">
      <MemberSignature Language="C#" Value="public void GenerateTypeFactory (string typeName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void GenerateTypeFactory(string typeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.AssemblyBuilder.GenerateTypeFactory(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GenerateTypeFactory (typeName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GenerateTypeFactory(System::String ^ typeName);" />
      <MemberSignature Language="F#" Value="member this.GenerateTypeFactory : string -&gt; unit" Usage="assemblyBuilder.GenerateTypeFactory typeName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="typeName">Der Name des zu generierenden Typs.</param>
        <summary>Fügt eine schnelle Objektfactoryvorlage für einen Typ in die kompilierte Assembly ein.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Eine <xref:System.Web.Compilation.BuildProvider>-Implementierung ruft die <xref:System.Web.Compilation.AssemblyBuilder.GenerateTypeFactory%2A>-Methode auf, um die Leistung für häufige Aufstellungen von Typinstanzen zu optimieren.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Compilation.BuildProvider" />
        <altmember cref="M:System.Web.Compilation.BuildProvider.GetGeneratedType(System.CodeDom.Compiler.CompilerResults)" />
      </Docs>
    </Member>
    <Member MemberName="GetTempFilePhysicalPath">
      <MemberSignature Language="C#" Value="public string GetTempFilePhysicalPath (string extension);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetTempFilePhysicalPath(string extension) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.AssemblyBuilder.GetTempFilePhysicalPath(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTempFilePhysicalPath (extension As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetTempFilePhysicalPath(System::String ^ extension);" />
      <MemberSignature Language="F#" Value="member this.GetTempFilePhysicalPath : string -&gt; string" Usage="assemblyBuilder.GetTempFilePhysicalPath extension" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="extension" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="extension">Die Dateierweiterung für die temporäre Datei.</param>
        <summary>Generiert einen Pfad für eine temporäre Datei.</summary>
        <returns>Ein Pfad zu einer temporären Datei mit der angegebenen Dateierweiterung.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Eine <xref:System.Web.Compilation.BuildProvider>-Implementierung ruft die <xref:System.Web.Compilation.AssemblyBuilder.GetTempFilePhysicalPath%2A>-Methode auf, um einen temporären Dateipfad zu erhalten, der nach der Kompilierung der Assembly automatisch gelöscht wird.  
  
 Die <xref:System.Web.Compilation.AssemblyBuilder.GetTempFilePhysicalPath%2A>-Methode generiert einen eindeutigen temporären Dateipfad, erstellt die Datei jedoch nicht.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Compilation.BuildProvider" />
        <altmember cref="T:System.CodeDom.Compiler.TempFileCollection" />
        <altmember cref="P:System.CodeDom.Compiler.CompilerParameters.TempFiles" />
        <altmember cref="P:System.Web.Compilation.CompilerType.CompilerParameters" />
      </Docs>
    </Member>
  </Members>
</Type>
