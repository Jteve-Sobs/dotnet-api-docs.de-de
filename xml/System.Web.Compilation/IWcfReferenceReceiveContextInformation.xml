<Type Name="IWcfReferenceReceiveContextInformation" FullName="System.Web.Compilation.IWcfReferenceReceiveContextInformation">
  <Metadata><Meta Name="ms.openlocfilehash" Value="30ee7c797b89007a29824a441a9d6164b90789f0" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69142108" /></Metadata><TypeSignature Language="C#" Value="public interface IWcfReferenceReceiveContextInformation" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IWcfReferenceReceiveContextInformation" />
  <TypeSignature Language="DocId" Value="T:System.Web.Compilation.IWcfReferenceReceiveContextInformation" />
  <TypeSignature Language="VB.NET" Value="Public Interface IWcfReferenceReceiveContextInformation" />
  <TypeSignature Language="C++ CLI" Value="public interface class IWcfReferenceReceiveContextInformation" />
  <TypeSignature Language="F#" Value="type IWcfReferenceReceiveContextInformation = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Extensions</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Definiert die zu implementierende Schnittstelle, um zusätzliche Kontextinformationen zu erhalten.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Schnittstelle ermöglicht es dem WSDL-importermechanismus, zusätzliche Kontextinformationen für eine bessere Proxy Generierung und eine bessere Entwickler Oberfläche in Visual Studio zu erhalten. Wenn das WSDL-Import Programm <xref:System.Web.Compilation.IWcfReferenceReceiveContextInformation> die-Schnitt `ReceiveImportContextInformation` Stelle implementiert, wird die-Methode vom WCF-Proxy Generator aufgerufen <xref:System.ServiceModel.Description.IWsdlImportExtension> , <xref:System.ServiceModel.Description.IPolicyImportExtension> bevor alle Methoden von und aufgerufen werden.  
  
 Die zusätzlichen Kontextinformationen beziehen sich auf die Parameter, die `ReceiveImportContextInformation` an die-Methode weitergegeben werden. Zu den Parametern gehören der Inhalt aller Erweiterungs Dateien und ein Verweis auf ein Objekt, das <xref:System.IServiceProvider> die-Schnittstelle implementiert. Alle an die-Methode weiter gegebenen Erweiterungs Dateien sind für das Import Programm spezifisch und werden zum Speichern zusätzlicher Informationen verwendet, die Sie benötigen. Das heißt, dass Visual Studio den Inhalt dieser Dateien nicht steuert und Sie nicht direkt verwendet.  
  
> [!NOTE]
>  Import Programme verweisen auf einen WCF-Erweiterbarkeits Mechanismus. Dieser Mechanismus ermöglicht es Ihnen, die Art und Weise anzupassen, wie Proxycode aus Metadatendateien (WSDL/XSD) generiert wird, die den Dienst beschreiben. Weitere Informationen finden Sie unter [Importieren von benutzerdefinierten Metadaten für eine WCF-Erweiterung](https://go.microsoft.com/fwlink/?LinkId=92310) auf MSDN.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="ReceiveImportContextInformation">
      <MemberSignature Language="C#" Value="public void ReceiveImportContextInformation (System.Collections.Generic.IDictionary&lt;string,byte[]&gt; serviceReferenceExtensionFileContents, IServiceProvider serviceProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReceiveImportContextInformation(class System.Collections.Generic.IDictionary`2&lt;string, unsigned int8[]&gt; serviceReferenceExtensionFileContents, class System.IServiceProvider serviceProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.IWcfReferenceReceiveContextInformation.ReceiveImportContextInformation(System.Collections.Generic.IDictionary{System.String,System.Byte[]},System.IServiceProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ReceiveImportContextInformation (serviceReferenceExtensionFileContents As IDictionary(Of String, Byte()), serviceProvider As IServiceProvider)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ReceiveImportContextInformation(System::Collections::Generic::IDictionary&lt;System::String ^, cli::array &lt;System::Byte&gt; ^&gt; ^ serviceReferenceExtensionFileContents, IServiceProvider ^ serviceProvider);" />
      <MemberSignature Language="F#" Value="abstract member ReceiveImportContextInformation : System.Collections.Generic.IDictionary&lt;string, byte[]&gt; * IServiceProvider -&gt; unit" Usage="iWcfReferenceReceiveContextInformation.ReceiveImportContextInformation (serviceReferenceExtensionFileContents, serviceProvider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceReferenceExtensionFileContents" Type="System.Collections.Generic.IDictionary&lt;System.String,System.Byte[]&gt;" />
        <Parameter Name="serviceProvider" Type="System.IServiceProvider" />
      </Parameters>
      <Docs>
        <param name="serviceReferenceExtensionFileContents">Stellt den Inhalt aller Erweiterungsdateien bereit, die der SVCMAP-Datei eines WCF-Dienstverweises zugeordnet sind.</param>
        <param name="serviceProvider">Ein Verweis auf einen Visual Studio-Dienstanbieter, von dem zusätzliche Informationen angefordert werden.</param>
        <summary>Ruft zusätzliche Kontextinformationen ab.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der `serviceReferenceExtensionFileContents` -Parameter stellt den Inhalt aller Erweiterungs Dateien bereit, die der svcmap-Datei eines WCF-Dienst Verweises zugeordnet sind, z. b. Reference. config oder benutzerdefinierte Erweiterungs Dateien, die über die Erweiterbarkeit hinzugefügt wurden.  
  
> [!NOTE]
>  Jede Schnittstelle, die vom Dienstanbieter empfangen wird, die für Visual Studio spezifisch ist, steht bei der Ausführung im Kontext eines ASP.net-Buildanbieters nicht für eine Import Erweiterung zur Verfügung. Dies ist der Fall, wenn ein WCF-Dienst Verweis in einem ASP.net-Projekt kompiliert wird.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
