<Type Name="IActivationObject" FullName="Microsoft.JScript.IActivationObject">
  <TypeSignature Language="C#" Value="public interface IActivationObject" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IActivationObject" />
  <TypeSignature Language="DocId" Value="T:Microsoft.JScript.IActivationObject" />
  <TypeSignature Language="VB.NET" Value="Public Interface IActivationObject" />
  <TypeSignature Language="C++ CLI" Value="public interface class IActivationObject" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.JScript</AssemblyName>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="48896-101">Definiert Methoden für die Bereichsauflösung.</span><span class="sxs-lookup"><span data-stu-id="48896-101">Defines methods for resolving scope.</span></span> <span data-ttu-id="48896-102">Diese Schnittstelle wird von allen Objekten implementiert, die Teil einer Bereichshierarchie sind.</span><span class="sxs-lookup"><span data-stu-id="48896-102">This interface is implemented by all objects that take part in a scope hierarchy.</span></span></summary>
    <remarks>To be added.</remarks>
    <forInternalUseOnly />
    <altmember cref="T:Microsoft.JScript.ActivationObject" />
    <altmember cref="T:Microsoft.JScript.ScriptObject" />
    <altmember cref="T:Microsoft.JScript.GlobalScope" />
    <altmember cref="T:System.Reflection.FieldInfo" />
  </Docs>
  <Members>
    <Member MemberName="GetDefaultThisObject">
      <MemberSignature Language="C#" Value="public object GetDefaultThisObject ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetDefaultThisObject() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.IActivationObject.GetDefaultThisObject" />
      <MemberSignature Language="VB.NET" Value="Public Function GetDefaultThisObject () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetDefaultThisObject();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="48896-103">Ruft bei Implementierung in einer Klasse den aktuellen Standardbereich ab.</span><span class="sxs-lookup"><span data-stu-id="48896-103">When implemented in a class, gets the current default scope.</span></span> <span data-ttu-id="48896-104">Das enthaltene Objekt eines <see langword="with" />-Anweisungsbereichs oder der globale Gültigkeitsbereich.</span><span class="sxs-lookup"><span data-stu-id="48896-104">Either the contained object of a <see langword="with" /> statement scope, or the global scope.</span></span></summary>
        <returns><span data-ttu-id="48896-105">Der aktuelle Standardbereich.</span><span class="sxs-lookup"><span data-stu-id="48896-105">The current default scope.</span></span></returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.ActivationObject" />
        <altmember cref="T:Microsoft.JScript.ScriptObject" />
        <altmember cref="T:Microsoft.JScript.GlobalScope" />
        <altmember cref="T:System.Reflection.FieldInfo" />
      </Docs>
    </Member>
    <Member MemberName="GetField">
      <MemberSignature Language="C#" Value="public System.Reflection.FieldInfo GetField (string name, int lexLevel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.FieldInfo GetField(string name, int32 lexLevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.IActivationObject.GetField(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetField (name As String, lexLevel As Integer) As FieldInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::FieldInfo ^ GetField(System::String ^ name, int lexLevel);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.FieldInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="lexLevel" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="48896-106">Der Name des zu suchenden Felds.</span><span class="sxs-lookup"><span data-stu-id="48896-106">The name of the field to search for.</span></span></param>
        <param name="lexLevel"><span data-ttu-id="48896-107">Die zu durchsuchende lexikalische Ebene.</span><span class="sxs-lookup"><span data-stu-id="48896-107">The lexical level to search.</span></span></param>
        <summary><span data-ttu-id="48896-108">Gibt bei Implementierung in einer Klasse ein Feld mit dem angegebenen Namen ab, indem die Bereichshierarchie durchsucht wird.</span><span class="sxs-lookup"><span data-stu-id="48896-108">When implemented in a class, returns a field that has the specified name by searching the scope hierarchy.</span></span> <span data-ttu-id="48896-109">Diese Methode durchsucht nur den von der lexikalischen Ebene angegebenen Bereich.</span><span class="sxs-lookup"><span data-stu-id="48896-109">This method searches only the scope that is specified by the lexical level.</span></span></summary>
        <returns><span data-ttu-id="48896-110">Ein <see cref="T:System.Reflection.FieldInfo" />-Objekt mit dem angegebenen Namen.</span><span class="sxs-lookup"><span data-stu-id="48896-110">A <see cref="T:System.Reflection.FieldInfo" /> object that has the specified name.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="48896-111">Diese Methode gilt für Felder, die zum Zeitpunkt der Kompilierung nicht aufgelöst werden können.</span><span class="sxs-lookup"><span data-stu-id="48896-111">This method applies to fields that cannot be resolved at compile time.</span></span> <span data-ttu-id="48896-112">Dies geschieht, wenn ein `eval` Ausdruck bezieht sich auf ein Feld im äußeren Gültigkeitsbereich.</span><span class="sxs-lookup"><span data-stu-id="48896-112">This happens when an `eval` expression refers to a field in the outer scope.</span></span> <span data-ttu-id="48896-113">Da die `eval` Ausdruck kann ein lokales Feld mit dem gleichen Namen zu deklarieren, das Feld darf nicht auf das Feld im äußeren Bereich früh gebunden.</span><span class="sxs-lookup"><span data-stu-id="48896-113">Because the `eval` expression can declare a local field with the same name, the field cannot be early bound to the outer scope field.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.ActivationObject" />
        <altmember cref="T:Microsoft.JScript.ScriptObject" />
        <altmember cref="T:Microsoft.JScript.GlobalScope" />
      </Docs>
    </Member>
    <Member MemberName="GetGlobalScope">
      <MemberSignature Language="C#" Value="public Microsoft.JScript.GlobalScope GetGlobalScope ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.JScript.GlobalScope GetGlobalScope() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.IActivationObject.GetGlobalScope" />
      <MemberSignature Language="VB.NET" Value="Public Function GetGlobalScope () As GlobalScope" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::JScript::GlobalScope ^ GetGlobalScope();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.JScript.GlobalScope</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="48896-114">Ruft bei Implementierung in einer Klasse den globalen Bereich ab, indem die Bereichshierarchie durchsucht wird, bis ein Bereich mit statischen Variablen gefunden wird, z. B. ein Modulbereich.</span><span class="sxs-lookup"><span data-stu-id="48896-114">When implemented in a class, gets the global scope by searching the scope hierarchy until it finds a scope that includes static variables, for example, a module scope.</span></span></summary>
        <returns><span data-ttu-id="48896-115">Der globale Bereich.</span><span class="sxs-lookup"><span data-stu-id="48896-115">The global scope.</span></span></returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.ActivationObject" />
        <altmember cref="T:Microsoft.JScript.ScriptObject" />
        <altmember cref="T:System.Reflection.FieldInfo" />
      </Docs>
    </Member>
    <Member MemberName="GetLocalField">
      <MemberSignature Language="C#" Value="public System.Reflection.FieldInfo GetLocalField (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.FieldInfo GetLocalField(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.IActivationObject.GetLocalField(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetLocalField (name As String) As FieldInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::FieldInfo ^ GetLocalField(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.FieldInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="48896-116">Der Name des Felds.</span><span class="sxs-lookup"><span data-stu-id="48896-116">The name of the field.</span></span></param>
        <summary><span data-ttu-id="48896-117">Ruft bei Implementierung in einer Klasse die lokale Deklaration eines Felds mit dem angegebenen Namen ab.</span><span class="sxs-lookup"><span data-stu-id="48896-117">When implemented in a class, gets the local declaration of a field that has the specified name.</span></span> <span data-ttu-id="48896-118">Dies wird zur Kompilierzeit für die Fehlerüberprüfung verwendet.</span><span class="sxs-lookup"><span data-stu-id="48896-118">This is used at compile time for error checking.</span></span></summary>
        <returns><span data-ttu-id="48896-119">Die lokale Deklaration des Felds.</span><span class="sxs-lookup"><span data-stu-id="48896-119">The local declaration of the field.</span></span></returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.ActivationObject" />
        <altmember cref="T:Microsoft.JScript.ScriptObject" />
        <altmember cref="T:Microsoft.JScript.GlobalScope" />
      </Docs>
    </Member>
    <Member MemberName="GetMemberValue">
      <MemberSignature Language="C#" Value="public object GetMemberValue (string name, int lexlevel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetMemberValue(string name, int32 lexlevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.IActivationObject.GetMemberValue(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMemberValue (name As String, lexlevel As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetMemberValue(System::String ^ name, int lexlevel);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="lexlevel" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="48896-120">Der Name des zu suchenden Members.</span><span class="sxs-lookup"><span data-stu-id="48896-120">The name of the member to search for.</span></span></param>
        <param name="lexlevel"><span data-ttu-id="48896-121">Die zu durchsuchende lexikalische Ebene.</span><span class="sxs-lookup"><span data-stu-id="48896-121">The lexical level to search.</span></span></param>
        <summary><span data-ttu-id="48896-122">Ruft bei Implementierung in einer Klasse den Wert des angegebenen Members ab, indem die Bereichshierarchie durchsucht wird.</span><span class="sxs-lookup"><span data-stu-id="48896-122">When implemented in a class, gets the value of the specified member by searching the scope hierarchy.</span></span> <span data-ttu-id="48896-123">Diese Methode durchsucht nur den von der lexikalischen Ebene angegebenen Bereich.</span><span class="sxs-lookup"><span data-stu-id="48896-123">This method searches only the scope that is specified by the lexical level.</span></span></summary>
        <returns><span data-ttu-id="48896-124">Der Wert des <paramref name="name" /> für den Member.</span><span class="sxs-lookup"><span data-stu-id="48896-124">The value of the member <paramref name="name" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="48896-125">Diese Methode gilt für Elemente, die zum Zeitpunkt der Kompilierung nicht aufgelöst werden können.</span><span class="sxs-lookup"><span data-stu-id="48896-125">This method applies to members that cannot be resolved at compile time.</span></span> <span data-ttu-id="48896-126">Dies tritt auf, wenn ein `eval` Ausdruck bezieht sich auf ein Element im äußeren Gültigkeitsbereich.</span><span class="sxs-lookup"><span data-stu-id="48896-126">This occurs when an `eval` expression refers to a member in the outer scope.</span></span> <span data-ttu-id="48896-127">Da die `eval` Ausdruck kann einen lokalen Member mit demselben Namen zu deklarieren, das Element nicht an den Member im äußeren Bereich früh gebunden werden.</span><span class="sxs-lookup"><span data-stu-id="48896-127">Because the `eval` expression can declare a local member with the same name, the member cannot be early bound to the outer scope member.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.ActivationObject" />
        <altmember cref="T:Microsoft.JScript.ScriptObject" />
        <altmember cref="T:Microsoft.JScript.GlobalScope" />
        <altmember cref="T:System.Reflection.FieldInfo" />
      </Docs>
    </Member>
  </Members>
</Type>