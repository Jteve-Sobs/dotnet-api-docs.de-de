<Type Name="MathObject" FullName="Microsoft.JScript.MathObject">
  <TypeSignature Language="C#" Value="public class MathObject : Microsoft.JScript.JSObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MathObject extends Microsoft.JScript.JSObject" />
  <TypeSignature Language="DocId" Value="T:Microsoft.JScript.MathObject" />
  <TypeSignature Language="VB.NET" Value="Public Class MathObject&#xA;Inherits JSObject" />
  <TypeSignature Language="C++ CLI" Value="public ref class MathObject : Microsoft::JScript::JSObject" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.JScript</AssemblyName>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.JScript.JSObject</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="4ebf4-101">Stellt Konstanten und statische Methoden für trigonometrische Funktionen, logarithmische Funktionen und andere gebräuchliche mathematische Funktionen bereit.</span><span class="sxs-lookup"><span data-stu-id="4ebf4-101">Provides constants and static methods for trigonometric functions, logarithmic functions, and other common mathematical functions.</span></span> <span data-ttu-id="4ebf4-102">Diese Klasse gehört zur integrierten Objektmodellkategorie.</span><span class="sxs-lookup"><span data-stu-id="4ebf4-102">This class belongs to the built-in object model category.</span></span></summary>
    <remarks>To be added.</remarks>
    <forInternalUseOnly />
  </Docs>
  <Members>
    <Member MemberName="abs">
      <MemberSignature Language="C#" Value="public static double abs (double d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 abs(float64 d) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.MathObject.abs(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function abs (d As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double abs(double d);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.JScript.JSFunction(Microsoft.JScript.JSFunctionAttributeEnum.None, Microsoft.JScript.JSBuiltin.Math_abs)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="4ebf4-103">Die Zahl, deren Absolutbetrag berechnet werden soll.</span><span class="sxs-lookup"><span data-stu-id="4ebf4-103">The number to calculate the absolute value of.</span></span></param>
        <summary><span data-ttu-id="4ebf4-104">Berechnet den Absolutbetrag der angegebenen Zahl.</span><span class="sxs-lookup"><span data-stu-id="4ebf4-104">Calculates the absolute value of the specified number.</span></span></summary>
        <returns><span data-ttu-id="4ebf4-105">Der Absolutbetrag von <paramref name="d" />.</span><span class="sxs-lookup"><span data-stu-id="4ebf4-105">The absolute value of <paramref name="d" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="acos">
      <MemberSignature Language="C#" Value="public static double acos (double x);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 acos(float64 x) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.MathObject.acos(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function acos (x As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double acos(double x);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.JScript.JSFunction(Microsoft.JScript.JSFunctionAttributeEnum.None, Microsoft.JScript.JSBuiltin.Math_acos)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="4ebf4-106">Die Zahl, deren Arkuskosinus berechnet werden soll.</span><span class="sxs-lookup"><span data-stu-id="4ebf4-106">The number to calculate the inverse cosine of.</span></span></param>
        <summary><span data-ttu-id="4ebf4-107">Berechnet den Arkuskosinus der angegebenen Zahl.</span><span class="sxs-lookup"><span data-stu-id="4ebf4-107">Calculates the inverse cosine of the specified number.</span></span></summary>
        <returns><span data-ttu-id="4ebf4-108">Der Arkuskosinus von <paramref name="x" />, im Bogenmaß gemessen.</span><span class="sxs-lookup"><span data-stu-id="4ebf4-108">The inverse cosine of <paramref name="x" />, measured in radians.</span></span></returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="M:System.Math.Acos(System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="asin">
      <MemberSignature Language="C#" Value="public static double asin (double x);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 asin(float64 x) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.MathObject.asin(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function asin (x As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double asin(double x);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.JScript.JSFunction(Microsoft.JScript.JSFunctionAttributeEnum.None, Microsoft.JScript.JSBuiltin.Math_asin)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="4ebf4-109">Die Zahl, deren Arkussinus berechnet werden soll.</span><span class="sxs-lookup"><span data-stu-id="4ebf4-109">The number to calculate the inverse sine of.</span></span></param>
        <summary><span data-ttu-id="4ebf4-110">Berechnet den Arkussinus der angegebenen Zahl.</span><span class="sxs-lookup"><span data-stu-id="4ebf4-110">Calculates the inverse sine of the specified number.</span></span></summary>
        <returns><span data-ttu-id="4ebf4-111">Der Arkussinus von <paramref name="x" />, im Bogenmaß gemessen.</span><span class="sxs-lookup"><span data-stu-id="4ebf4-111">The inverse sine of <paramref name="x" />, measured in radians.</span></span></returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="M:System.Math.Asin(System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="atan">
      <MemberSignature Language="C#" Value="public static double atan (double x);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 atan(float64 x) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.MathObject.atan(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function atan (x As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double atan(double x);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.JScript.JSFunction(Microsoft.JScript.JSFunctionAttributeEnum.None, Microsoft.JScript.JSBuiltin.Math_atan)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="4ebf4-112">Die Zahl, deren Arkustangens berechnet werden soll.</span><span class="sxs-lookup"><span data-stu-id="4ebf4-112">The number to calculate the inverse tangent of.</span></span></param>
        <summary><span data-ttu-id="4ebf4-113">Berechnet den Arkustangens der angegebenen Zahl.</span><span class="sxs-lookup"><span data-stu-id="4ebf4-113">Calculates the inverse tangent of the specified number.</span></span></summary>
        <returns><span data-ttu-id="4ebf4-114">Der Arkustangens von <paramref name="x" />, im Bogenmaß gemessen.</span><span class="sxs-lookup"><span data-stu-id="4ebf4-114">The inverse tangent of <paramref name="x" />, measured in radians.</span></span></returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="M:System.Math.Atan(System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="atan2">
      <MemberSignature Language="C#" Value="public static double atan2 (double dy, double dx);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 atan2(float64 dy, float64 dx) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.MathObject.atan2(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function atan2 (dy As Double, dx As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double atan2(double dy, double dx);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.JScript.JSFunction(Microsoft.JScript.JSFunctionAttributeEnum.None, Microsoft.JScript.JSBuiltin.Math_atan2)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dy" Type="System.Double" />
        <Parameter Name="dx" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="dy"><span data-ttu-id="4ebf4-115">Der Zähler des Quotienten, dessen Arkustangens berechnet werden soll.</span><span class="sxs-lookup"><span data-stu-id="4ebf4-115">The numerator of the quotient to calculate the inverse tangent of.</span></span></param>
        <param name="dx"><span data-ttu-id="4ebf4-116">Der Nenner des Quotienten, dessen Arkustangens berechnet werden soll.</span><span class="sxs-lookup"><span data-stu-id="4ebf4-116">The denominator of the quotient to calculate the inverse tangent of.</span></span></param>
        <summary><span data-ttu-id="4ebf4-117">Berechnet den Arkustangens für den Quotienten der angegebenen Zahlen.</span><span class="sxs-lookup"><span data-stu-id="4ebf4-117">Calculates the inverse tangent of the quotient of the specified numbers.</span></span></summary>
        <returns><span data-ttu-id="4ebf4-118">Der Arkustangens von <paramref name="dy" />/<paramref name="dx" />, im Bogenmaß gemessen.</span><span class="sxs-lookup"><span data-stu-id="4ebf4-118">The inverse tangent of <paramref name="dy" />/<paramref name="dx" />, measured in radians.</span></span></returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="M:System.Math.Atan2(System.Double,System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="ceil">
      <MemberSignature Language="C#" Value="public static double ceil (double x);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 ceil(float64 x) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.MathObject.ceil(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ceil (x As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double ceil(double x);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.JScript.JSFunction(Microsoft.JScript.JSFunctionAttributeEnum.None, Microsoft.JScript.JSBuiltin.Math_ceil)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="4ebf4-119">Die Zahl, deren Höchstwert berechnet werden soll.</span><span class="sxs-lookup"><span data-stu-id="4ebf4-119">The number to calculate the ceiling of.</span></span></param>
        <summary><span data-ttu-id="4ebf4-120">Berechnet den Höchstwert der angegebenen Zahl, der die kleinste ganze Zahl ist, die größer oder gleich der angegebenen Zahl ist.</span><span class="sxs-lookup"><span data-stu-id="4ebf4-120">Calculates the ceiling of the specified number, which is the smallest integer that is greater than or equal to the specified number.</span></span></summary>
        <returns><span data-ttu-id="4ebf4-121">Der Höchstwert von <paramref name="x" />.</span><span class="sxs-lookup"><span data-stu-id="4ebf4-121">The ceiling of <paramref name="x" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="M:System.Math.Ceiling(System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="cos">
      <MemberSignature Language="C#" Value="public static double cos (double x);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 cos(float64 x) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.MathObject.cos(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function cos (x As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double cos(double x);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.JScript.JSFunction(Microsoft.JScript.JSFunctionAttributeEnum.None, Microsoft.JScript.JSBuiltin.Math_cos)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="4ebf4-122">Ein im Bogenmaß angegebener Winkel.</span><span class="sxs-lookup"><span data-stu-id="4ebf4-122">An angle, measured in radians.</span></span></param>
        <summary><span data-ttu-id="4ebf4-123">Berechnet den Kosinus des angegebenen Winkels.</span><span class="sxs-lookup"><span data-stu-id="4ebf4-123">Calculates the cosine of the specified angle.</span></span></summary>
        <returns><span data-ttu-id="4ebf4-124">Der Kosinus von <paramref name="x" />.</span><span class="sxs-lookup"><span data-stu-id="4ebf4-124">The cosine of <paramref name="x" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="M:System.Math.Cos(System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="E">
      <MemberSignature Language="C#" Value="public const double E = 2.71828182845905;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal float64 E = (2.71828182845905)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.JScript.MathObject.E" />
      <MemberSignature Language="VB.NET" Value="Public Const E As Double  = 2.71828182845905" />
      <MemberSignature Language="C++ CLI" Value="public: double E = 2.71828182845905;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <MemberValue>2.71828182845905</MemberValue>
      <Docs>
        <summary><span data-ttu-id="4ebf4-125">Speichert einen Wert, der die Eulersche Konstante, d.h. die Basis des natürlichen Logarithmus, durch die Konstante „e“ darstellt.</span><span class="sxs-lookup"><span data-stu-id="4ebf4-125">Stores a value that represents Euler's constant, which is the base of the natural logarithm, specified by the constant e.</span></span></summary>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="exp">
      <MemberSignature Language="C#" Value="public static double exp (double x);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 exp(float64 x) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.MathObject.exp(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function exp (x As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double exp(double x);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.JScript.JSFunction(Microsoft.JScript.JSFunctionAttributeEnum.None, Microsoft.JScript.JSBuiltin.Math_exp)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="4ebf4-126">Der Exponent für die Potenzierung von <c>e</c>.</span><span class="sxs-lookup"><span data-stu-id="4ebf4-126">The power to raise <c>e</c> to.</span></span></param>
        <summary><span data-ttu-id="4ebf4-127">Berechnet die angegebene Potenz der Zahl „e“, wobei „e“ die Eulersche Konstante und Basis des natürlichen Logarithmus darstellt.</span><span class="sxs-lookup"><span data-stu-id="4ebf4-127">Calculates the number e to the raised specified power, where e is Euler's constant, the base of the natural logarithm.</span></span></summary>
        <returns><span data-ttu-id="4ebf4-128">Die Zahl „e“ hoch <paramref name="x" />.</span><span class="sxs-lookup"><span data-stu-id="4ebf4-128">The number e raised to the <paramref name="x" /> power.</span></span></returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="M:System.Math.Exp(System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="floor">
      <MemberSignature Language="C#" Value="public static double floor (double x);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 floor(float64 x) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.MathObject.floor(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function floor (x As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double floor(double x);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.JScript.JSFunction(Microsoft.JScript.JSFunctionAttributeEnum.None, Microsoft.JScript.JSBuiltin.Math_floor)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="4ebf4-129">Die Zahl, deren niedrigster Wert berechnet werden soll.</span><span class="sxs-lookup"><span data-stu-id="4ebf4-129">The number to calculate the floor of.</span></span></param>
        <summary><span data-ttu-id="4ebf4-130">Berechnet den niedrigsten Wert der angegebenen Zahl, der die größte ganze Zahl ist, die kleiner oder gleich der angegebenen Zahl ist.</span><span class="sxs-lookup"><span data-stu-id="4ebf4-130">Calculates the floor of the specified number, which is the largest integer that is less than or equal to the specified number.</span></span></summary>
        <returns><span data-ttu-id="4ebf4-131">Der niedrigste Wert von <paramref name="x" />.</span><span class="sxs-lookup"><span data-stu-id="4ebf4-131">The floor of <paramref name="x" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="M:System.Math.Floor(System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="LN10">
      <MemberSignature Language="C#" Value="public const double LN10 = 2.30258509299405;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal float64 LN10 = (2.30258509299405)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.JScript.MathObject.LN10" />
      <MemberSignature Language="VB.NET" Value="Public Const LN10 As Double  = 2.30258509299405" />
      <MemberSignature Language="C++ CLI" Value="public: double LN10 = 2.30258509299405;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <MemberValue>2.30258509299405</MemberValue>
      <Docs>
        <summary><span data-ttu-id="4ebf4-132">Speichert einen Wert, der den Logarithmus zur Basis e von 10 darstellt, d.h. den natürlichen Logarithmus von 10.</span><span class="sxs-lookup"><span data-stu-id="4ebf4-132">Stores a value that represents the logarithm base e of 10, the natural logarithm of 10.</span></span></summary>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="LN2">
      <MemberSignature Language="C#" Value="public const double LN2 = 0.693147180559945;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal float64 LN2 = (0.693147180559945)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.JScript.MathObject.LN2" />
      <MemberSignature Language="VB.NET" Value="Public Const LN2 As Double  = 0.693147180559945" />
      <MemberSignature Language="C++ CLI" Value="public: double LN2 = 0.693147180559945;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <MemberValue>0.693147180559945</MemberValue>
      <Docs>
        <summary><span data-ttu-id="4ebf4-133">Speichert einen Wert, der den Logarithmus zur Basis e von 2 darstellt, d.h. den natürlichen Logarithmus von 2.</span><span class="sxs-lookup"><span data-stu-id="4ebf4-133">Stores a value that represents the logarithm base e of 2, the natural logarithm of 2.</span></span></summary>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="log">
      <MemberSignature Language="C#" Value="public static double log (double x);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 log(float64 x) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.MathObject.log(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function log (x As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double log(double x);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.JScript.JSFunction(Microsoft.JScript.JSFunctionAttributeEnum.None, Microsoft.JScript.JSBuiltin.Math_log)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="4ebf4-134">Die Zahl, deren natürlicher Logarithmus berechnet werden soll.</span><span class="sxs-lookup"><span data-stu-id="4ebf4-134">The number to calculate the natural logarithm of.</span></span></param>
        <summary><span data-ttu-id="4ebf4-135">Berechnet den Logarithmus zur Basis e der angegebenen Zahl, d.h. den natürlichen Logarithmus der angegebenen Zahl.</span><span class="sxs-lookup"><span data-stu-id="4ebf4-135">Calculates the logarithm base e of the specified number, which is the natural logarithm of the specified number.</span></span></summary>
        <returns><span data-ttu-id="4ebf4-136">Der natürliche Logarithmus von <paramref name="x" />.</span><span class="sxs-lookup"><span data-stu-id="4ebf4-136">The natural logarithm of <paramref name="x" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="M:System.Math.Log(System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="LOG10E">
      <MemberSignature Language="C#" Value="public const double LOG10E = 0.434294481903252;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal float64 LOG10E = (0.434294481903252)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.JScript.MathObject.LOG10E" />
      <MemberSignature Language="VB.NET" Value="Public Const LOG10E As Double  = 0.434294481903252" />
      <MemberSignature Language="C++ CLI" Value="public: double LOG10E = 0.434294481903252;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <MemberValue>0.434294481903252</MemberValue>
      <Docs>
        <summary><span data-ttu-id="4ebf4-137">Speichert einen Wert, der den Logarithmus zur Basis 10 von e darstellt, d.h. den dekadischen Logarithmus von e.</span><span class="sxs-lookup"><span data-stu-id="4ebf4-137">Stores a value that represents the logarithm base 10 of e, the common logarithm of e.</span></span></summary>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="LOG2E">
      <MemberSignature Language="C#" Value="public const double LOG2E = 1.44269504088896;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal float64 LOG2E = (1.44269504088896)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.JScript.MathObject.LOG2E" />
      <MemberSignature Language="VB.NET" Value="Public Const LOG2E As Double  = 1.44269504088896" />
      <MemberSignature Language="C++ CLI" Value="public: double LOG2E = 1.44269504088896;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <MemberValue>1.44269504088896</MemberValue>
      <Docs>
        <summary><span data-ttu-id="4ebf4-138">Speichert einen Wert, der den Logarithmus zur Basis 2 von e darstellt, d.h. den binären Logarithmus von e.</span><span class="sxs-lookup"><span data-stu-id="4ebf4-138">Stores a value that represents the logarithm base 2 of e, the binary logarithm of e.</span></span></summary>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="max">
      <MemberSignature Language="C#" Value="public static double max (object x, object y, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 max(object x, object y, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.MathObject.max(System.Object,System.Object,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function max (x As Object, y As Object, ParamArray args As Object()) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double max(System::Object ^ x, System::Object ^ y, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.JScript.JSFunction(Microsoft.JScript.JSFunctionAttributeEnum.HasVarArgs, Microsoft.JScript.JSBuiltin.Math_max)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Object" />
        <Parameter Name="y" Type="System.Object" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="4ebf4-139">Die erste zu vergleichende Zahl.</span><span class="sxs-lookup"><span data-stu-id="4ebf4-139">The first number to compare.</span></span></param>
        <param name="y"><span data-ttu-id="4ebf4-140">Die zweite zu vergleichende Zahl.</span><span class="sxs-lookup"><span data-stu-id="4ebf4-140">The second number to compare.</span></span></param>
        <param name="args"><span data-ttu-id="4ebf4-141">Weitere Zahlen, die verglichen werden sollen.</span><span class="sxs-lookup"><span data-stu-id="4ebf4-141">Additional numbers to compare.</span></span></param>
        <summary><span data-ttu-id="4ebf4-142">Gibt die größte von zwei oder mehr angegebenen Zahlen zurück.</span><span class="sxs-lookup"><span data-stu-id="4ebf4-142">Returns the largest of two or more specified numbers.</span></span></summary>
        <returns><span data-ttu-id="4ebf4-143">Der größte Wert von <paramref name="x" />, <paramref name="y" /> und den in <paramref name="args" /> enthaltenen Zahlen.</span><span class="sxs-lookup"><span data-stu-id="4ebf4-143">The largest of <paramref name="x" />, <paramref name="y" />, and the numbers that are contained in <paramref name="args" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="min">
      <MemberSignature Language="C#" Value="public static double min (object x, object y, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 min(object x, object y, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.MathObject.min(System.Object,System.Object,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function min (x As Object, y As Object, ParamArray args As Object()) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double min(System::Object ^ x, System::Object ^ y, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.JScript.JSFunction(Microsoft.JScript.JSFunctionAttributeEnum.HasVarArgs, Microsoft.JScript.JSBuiltin.Math_min)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Object" />
        <Parameter Name="y" Type="System.Object" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="4ebf4-144">Die erste zu vergleichende Zahl.</span><span class="sxs-lookup"><span data-stu-id="4ebf4-144">The first number to compare.</span></span></param>
        <param name="y"><span data-ttu-id="4ebf4-145">Die zweite zu vergleichende Zahl.</span><span class="sxs-lookup"><span data-stu-id="4ebf4-145">The second number to compare.</span></span></param>
        <param name="args"><span data-ttu-id="4ebf4-146">Weitere Zahlen, die verglichen werden sollen.</span><span class="sxs-lookup"><span data-stu-id="4ebf4-146">Additional numbers to compare.</span></span></param>
        <summary><span data-ttu-id="4ebf4-147">Gibt die kleinste von zwei oder mehr angegebenen Zahlen zurück.</span><span class="sxs-lookup"><span data-stu-id="4ebf4-147">Returns the smallest of two or more specified numbers.</span></span></summary>
        <returns><span data-ttu-id="4ebf4-148">Der kleinste Wert von <paramref name="x" />, <paramref name="y" /> und den in <paramref name="args" /> enthaltenen Zahlen.</span><span class="sxs-lookup"><span data-stu-id="4ebf4-148">The smallest of <paramref name="x" />, <paramref name="y" />, and the numbers that are contained in <paramref name="args" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="PI">
      <MemberSignature Language="C#" Value="public const double PI = 3.14159265358979;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal float64 PI = (3.14159265358979)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.JScript.MathObject.PI" />
      <MemberSignature Language="VB.NET" Value="Public Const PI As Double  = 3.14159265358979" />
      <MemberSignature Language="C++ CLI" Value="public: double PI = 3.14159265358979;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <MemberValue>3.14159265358979</MemberValue>
      <Docs>
        <summary><span data-ttu-id="4ebf4-149">Speichert einen Wert, der das Verhältnis eines Kreisumfangs zum Kreisdurchmesser durch die Konstante π darstellt.</span><span class="sxs-lookup"><span data-stu-id="4ebf4-149">Stores a value that represents the ratio of the circumference of a circle to its diameter, specified by the constant π.</span></span></summary>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="pow">
      <MemberSignature Language="C#" Value="public static double pow (double dx, double dy);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 pow(float64 dx, float64 dy) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.MathObject.pow(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function pow (dx As Double, dy As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double pow(double dx, double dy);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.JScript.JSFunction(Microsoft.JScript.JSFunctionAttributeEnum.None, Microsoft.JScript.JSBuiltin.Math_pow)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dx" Type="System.Double" />
        <Parameter Name="dy" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="dx"><span data-ttu-id="4ebf4-150">Die Zahl, deren <c>dy</c>-Potenz berechnet werden soll.</span><span class="sxs-lookup"><span data-stu-id="4ebf4-150">The number to raise to the <c>dy</c> power.</span></span></param>
        <param name="dy"><span data-ttu-id="4ebf4-151">Der Exponent für die Potenzierung von <c>dx</c>.</span><span class="sxs-lookup"><span data-stu-id="4ebf4-151">The power to raise <c>dx</c> to.</span></span></param>
        <summary><span data-ttu-id="4ebf4-152">Berechnet die angegebene Potenz der angegebenen Zahl.</span><span class="sxs-lookup"><span data-stu-id="4ebf4-152">Calculates the specified number raised to the specified power.</span></span></summary>
        <returns><span data-ttu-id="4ebf4-153">Die Zahl <paramref name="dx" /> zur <paramref name="dy" />. Potenz.</span><span class="sxs-lookup"><span data-stu-id="4ebf4-153">The number <paramref name="dx" /> raised to the <paramref name="dy" /> power.</span></span></returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="random">
      <MemberSignature Language="C#" Value="public static double random ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 random() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.MathObject.random" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function random () As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double random();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.JScript.JSFunction(Microsoft.JScript.JSFunctionAttributeEnum.None, Microsoft.JScript.JSBuiltin.Math_random)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4ebf4-154">Generiert eine Zufallszahl zwischen 0 und 1.</span><span class="sxs-lookup"><span data-stu-id="4ebf4-154">Generates a random number between 0 and 1.</span></span> <span data-ttu-id="4ebf4-155">Diese Methode generiert keine kryptografisch sichere Zufallszahl.</span><span class="sxs-lookup"><span data-stu-id="4ebf4-155">This method does not generate a cryptographically secure random number.</span></span></summary>
        <returns><span data-ttu-id="4ebf4-156">Eine Zahl, die größer oder gleich 0 und kleiner als 1 ist.</span><span class="sxs-lookup"><span data-stu-id="4ebf4-156">A number that is greater than or equal to 0, and less than 1.</span></span></returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:System.Random" />
      </Docs>
    </Member>
    <Member MemberName="round">
      <MemberSignature Language="C#" Value="public static double round (double d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 round(float64 d) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.MathObject.round(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function round (d As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double round(double d);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.JScript.JSFunction(Microsoft.JScript.JSFunctionAttributeEnum.None, Microsoft.JScript.JSBuiltin.Math_round)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="4ebf4-157">Die zu rundende Zahl.</span><span class="sxs-lookup"><span data-stu-id="4ebf4-157">The number to round.</span></span></param>
        <summary><span data-ttu-id="4ebf4-158">Rundet die angegebene Zahl auf die nächste ganze Zahl auf oder ab.</span><span class="sxs-lookup"><span data-stu-id="4ebf4-158">Rounds the specified number down or up to the nearest integer.</span></span></summary>
        <returns><span data-ttu-id="4ebf4-159">Wenn der Abstand von <paramref name="d" /> zur nächstgrößeren ganzen Zahl größer als 0,5 ist, wird <paramref name="d" /> abgerundet.</span><span class="sxs-lookup"><span data-stu-id="4ebf4-159">If the fractional part of <paramref name="d" /> is less than halfway to the next integer, <paramref name="d" /> rounded down.</span></span> <span data-ttu-id="4ebf4-160">Wenn der Abstand von <paramref name="d" /> zur nächstgrößeren ganzen Zahl kleiner oder gleich 0,5 ist, wird <paramref name="d" /> aufgerundet.</span><span class="sxs-lookup"><span data-stu-id="4ebf4-160">If the fractional part of <paramref name="d" /> is halfway or more to the next integer, <paramref name="d" /> rounded up.</span></span></returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="sin">
      <MemberSignature Language="C#" Value="public static double sin (double x);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 sin(float64 x) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.MathObject.sin(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function sin (x As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double sin(double x);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.JScript.JSFunction(Microsoft.JScript.JSFunctionAttributeEnum.None, Microsoft.JScript.JSBuiltin.Math_sin)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="4ebf4-161">Ein im Bogenmaß angegebener Winkel.</span><span class="sxs-lookup"><span data-stu-id="4ebf4-161">An angle, measured in radians.</span></span></param>
        <summary><span data-ttu-id="4ebf4-162">Berechnet den Sinus des angegebenen Winkels.</span><span class="sxs-lookup"><span data-stu-id="4ebf4-162">Calculates the sine of the specified angle.</span></span></summary>
        <returns><span data-ttu-id="4ebf4-163">Der Sinus von <paramref name="x" />.</span><span class="sxs-lookup"><span data-stu-id="4ebf4-163">The sine of <paramref name="x" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="M:System.Math.Sin(System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="sqrt">
      <MemberSignature Language="C#" Value="public static double sqrt (double x);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 sqrt(float64 x) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.MathObject.sqrt(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function sqrt (x As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double sqrt(double x);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.JScript.JSFunction(Microsoft.JScript.JSFunctionAttributeEnum.None, Microsoft.JScript.JSBuiltin.Math_sqrt)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="4ebf4-164">Die Zahl, deren Quadratwurzel berechnet werden soll.</span><span class="sxs-lookup"><span data-stu-id="4ebf4-164">The number to calculate the square root of.</span></span></param>
        <summary><span data-ttu-id="4ebf4-165">Berechnet die Quadratwurzel der angegebenen Zahl.</span><span class="sxs-lookup"><span data-stu-id="4ebf4-165">Calculates the square root of the specified number.</span></span></summary>
        <returns><span data-ttu-id="4ebf4-166">Die Quadratwurzel von <paramref name="x" />.</span><span class="sxs-lookup"><span data-stu-id="4ebf4-166">The square root of <paramref name="x" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="M:System.Math.Sqrt(System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="SQRT1_2">
      <MemberSignature Language="C#" Value="public const double SQRT1_2 = 0.707106781186548;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal float64 SQRT1_2 = (0.707106781186548)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.JScript.MathObject.SQRT1_2" />
      <MemberSignature Language="VB.NET" Value="Public Const SQRT1_2 As Double  = 0.707106781186548" />
      <MemberSignature Language="C++ CLI" Value="public: double SQRT1_2 = 0.707106781186548;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <MemberValue>0.707106781186548</MemberValue>
      <Docs>
        <summary><span data-ttu-id="4ebf4-167">Speichert einen Wert, der die folgenden, einander entsprechenden Werte darstellt: (√2)/2, √(½) und 1/(√2).</span><span class="sxs-lookup"><span data-stu-id="4ebf4-167">Stores a value that represents the following equivalent values: (√2)/2, √(½), and 1/(√2).</span></span></summary>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="SQRT2">
      <MemberSignature Language="C#" Value="public const double SQRT2 = 1.4142135623731;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal float64 SQRT2 = (1.4142135623731)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.JScript.MathObject.SQRT2" />
      <MemberSignature Language="VB.NET" Value="Public Const SQRT2 As Double  = 1.4142135623731" />
      <MemberSignature Language="C++ CLI" Value="public: double SQRT2 = 1.4142135623731;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <MemberValue>1.4142135623731</MemberValue>
      <Docs>
        <summary><span data-ttu-id="4ebf4-168">Speichert einen Wert, der √2 darstellt.</span><span class="sxs-lookup"><span data-stu-id="4ebf4-168">Stores a value that represents √2.</span></span></summary>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="tan">
      <MemberSignature Language="C#" Value="public static double tan (double x);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 tan(float64 x) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.MathObject.tan(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function tan (x As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double tan(double x);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.JScript.JSFunction(Microsoft.JScript.JSFunctionAttributeEnum.None, Microsoft.JScript.JSBuiltin.Math_tan)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="4ebf4-169">Ein im Bogenmaß angegebener Winkel.</span><span class="sxs-lookup"><span data-stu-id="4ebf4-169">An angle, measured in radians.</span></span></param>
        <summary><span data-ttu-id="4ebf4-170">Berechnet den Tangens des angegebenen Winkels.</span><span class="sxs-lookup"><span data-stu-id="4ebf4-170">Calculates the tangent of the specified angle.</span></span></summary>
        <returns><span data-ttu-id="4ebf4-171">Der Tangens von <paramref name="x" />.</span><span class="sxs-lookup"><span data-stu-id="4ebf4-171">The tangent of <paramref name="x" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="M:System.Math.Tan(System.Double)" />
      </Docs>
    </Member>
  </Members>
</Type>