<Type Name="DebugConvert" FullName="Microsoft.JScript.DebugConvert">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="289ef8bbfa2f06f7ba738f8ec13fa5735e4f7a8a" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37720021" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class DebugConvert : Microsoft.JScript.IDebugConvert, Microsoft.JScript.IDebugConvert2" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DebugConvert extends System.Object implements class Microsoft.JScript.IDebugConvert, class Microsoft.JScript.IDebugConvert2" />
  <TypeSignature Language="DocId" Value="T:Microsoft.JScript.DebugConvert" />
  <TypeSignature Language="VB.NET" Value="Public Class DebugConvert&#xA;Implements IDebugConvert, IDebugConvert2" />
  <TypeSignature Language="C++ CLI" Value="public ref class DebugConvert : Microsoft::JScript::IDebugConvert, Microsoft::JScript::IDebugConvert2" />
  <TypeSignature Language="F#" Value="type DebugConvert = class&#xA;    interface IDebugConvert&#xA;    interface IDebugConvert2" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.JScript</AssemblyName>
    <AssemblyVersion>7.0.5000.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.JScript.IDebugConvert</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.JScript.IDebugConvert2</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("432D76CE-8C9E-4eed-ADDD-91737F27A8CB")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="f14f0-101">Konvertiert Daten aus einem Typ in einen anderen.</span>
      <span class="sxs-lookup">
        <span data-stu-id="f14f0-101">Converts data from one type to another.</span>
      </span>
      <span data-ttu-id="f14f0-102">Schließt Methoden ein, die Werte in <see cref="T:System.String" />-Objekte konvertieren, damit sie vom Debugger angezeigt werden können.</span>
      <span class="sxs-lookup">
        <span data-stu-id="f14f0-102">Includes methods that convert values to <see cref="T:System.String" /> objects so that they can be displayed by the debugger.</span>
      </span>
    </summary>
    <remarks>To be added.</remarks>
    <forInternalUseOnly />
    <altmember cref="T:Microsoft.JScript.Convert" />
    <altmember cref="T:System.Convert" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DebugConvert ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.DebugConvert.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DebugConvert();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f14f0-103">Initialisiert eine neue Instanz der <see cref="T:Microsoft.JScript.DebugConvert" />-Klasse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f14f0-103">Initializes a new instance of the <see cref="T:Microsoft.JScript.DebugConvert" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.Convert" />
        <altmember cref="T:System.Convert" />
      </Docs>
    </Member>
    <Member MemberName="BooleanToString">
      <MemberSignature Language="C#" Value="public string BooleanToString (bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string BooleanToString(bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.DebugConvert.BooleanToString(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function BooleanToString (value As Boolean) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ BooleanToString(bool value);" />
      <MemberSignature Language="F#" Value="abstract member BooleanToString : bool -&gt; string&#xA;override this.BooleanToString : bool -&gt; string" Usage="debugConvert.BooleanToString value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.JScript.IDebugConvert.BooleanToString(System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="f14f0-104">Der zu konvertierende Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f14f0-104">The value to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f14f0-105">Konvertiert den angegebenen <see cref="T:System.Boolean" />-Wert in einen <see cref="T:System.String" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f14f0-105">Converts the specified <see cref="T:System.Boolean" /> value to a <see cref="T:System.String" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f14f0-106">Das Zeichenfolgenliteral "true" oder das Zeichenfolgenliteral "false".</span>
          <span class="sxs-lookup">
            <span data-stu-id="f14f0-106">The literal string "true" or the literal string "false".</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.Convert" />
        <altmember cref="T:System.Convert" />
      </Docs>
    </Member>
    <Member MemberName="ByteToString">
      <MemberSignature Language="C#" Value="public string ByteToString (byte value, int radix);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ByteToString(unsigned int8 value, int32 radix) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.DebugConvert.ByteToString(System.Byte,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function ByteToString (value As Byte, radix As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ ByteToString(System::Byte value, int radix);" />
      <MemberSignature Language="F#" Value="abstract member ByteToString : byte * int -&gt; string&#xA;override this.ByteToString : byte * int -&gt; string" Usage="debugConvert.ByteToString (value, radix)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.JScript.IDebugConvert.ByteToString(System.Byte,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte" />
        <Parameter Name="radix" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="f14f0-107">Der zu konvertierende Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f14f0-107">The value to convert.</span>
          </span>
        </param>
        <param name="radix">
          <span data-ttu-id="f14f0-108">Die Basis des Rückgabewerts.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f14f0-108">The base of the return value.</span>
          </span>
          <span data-ttu-id="f14f0-109">Die Basis muss 2, 8, 10 oder 16 sein.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f14f0-109">The base must be 2, 8, 10, or 16.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f14f0-110">Konvertiert den angegebenen <see cref="T:System.Byte" />-Wert in einen <see cref="T:System.String" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f14f0-110">Converts the specified <see cref="T:System.Byte" /> value to a <see cref="T:System.String" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f14f0-111">Die Zeichenfolgendarstellung von <paramref name="value" /> zur Basis <paramref name="radix" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f14f0-111">The string representation of <paramref name="value" /> in base <paramref name="radix" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.Convert" />
        <altmember cref="T:System.Convert" />
      </Docs>
    </Member>
    <Member MemberName="DecimalToString">
      <MemberSignature Language="C#" Value="public string DecimalToString (decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string DecimalToString(valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.DebugConvert.DecimalToString(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Function DecimalToString (value As Decimal) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ DecimalToString(System::Decimal value);" />
      <MemberSignature Language="F#" Value="abstract member DecimalToString : decimal -&gt; string&#xA;override this.DecimalToString : decimal -&gt; string" Usage="debugConvert.DecimalToString value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.JScript.IDebugConvert2.DecimalToString(System.Decimal)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="f14f0-112">Der zu konvertierende Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f14f0-112">The value to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f14f0-113">Konvertiert den angegebenen <see cref="T:System.Decimal" />-Wert in einen <see cref="T:System.String" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f14f0-113">Converts the specified <see cref="T:System.Decimal" /> value to a <see cref="T:System.String" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f14f0-114">Eine Zeichenfolgendarstellung von <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f14f0-114">The string representation of <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.Convert" />
        <altmember cref="T:System.Convert" />
      </Docs>
    </Member>
    <Member MemberName="DoubleToDateString">
      <MemberSignature Language="C#" Value="public string DoubleToDateString (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string DoubleToDateString(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.DebugConvert.DoubleToDateString(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function DoubleToDateString (value As Double) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ DoubleToDateString(double value);" />
      <MemberSignature Language="F#" Value="abstract member DoubleToDateString : double -&gt; string&#xA;override this.DoubleToDateString : double -&gt; string" Usage="debugConvert.DoubleToDateString value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.JScript.IDebugConvert.DoubleToDateString(System.Double)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="f14f0-115">Der zu konvertierende Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f14f0-115">The value to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f14f0-116">Erstellt eine Zeichenfolgendarstellung des angegebenen <see cref="T:System.Double" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f14f0-116">Creates a string representation of the specified <see cref="T:System.Double" />.</span>
          </span>
          <span data-ttu-id="f14f0-117">Die Zeichenfolgendarstellung enthält den Wochentag, den Monat, das Datum, die Uhrzeit, die Zeitzone sowie das Jahr.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f14f0-117">The string representation contains the day of the week, the month, the date, the time, the time zone, and the year.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f14f0-118">Eine Zeichenfolgendarstellung von <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f14f0-118">The string representation of <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.Convert" />
        <altmember cref="T:System.Convert" />
        <altmember cref="T:Microsoft.JScript.DatePrototype" />
      </Docs>
    </Member>
    <Member MemberName="DoubleToString">
      <MemberSignature Language="C#" Value="public string DoubleToString (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string DoubleToString(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.DebugConvert.DoubleToString(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function DoubleToString (value As Double) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ DoubleToString(double value);" />
      <MemberSignature Language="F#" Value="abstract member DoubleToString : double -&gt; string&#xA;override this.DoubleToString : double -&gt; string" Usage="debugConvert.DoubleToString value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.JScript.IDebugConvert.DoubleToString(System.Double)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="f14f0-119">Der zu konvertierende Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f14f0-119">The value to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f14f0-120">Konvertiert den angegebenen <see cref="T:System.Double" />-Wert in einen <see cref="T:System.String" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f14f0-120">Converts the specified <see cref="T:System.Double" /> value to a <see cref="T:System.String" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f14f0-121">Eine Zeichenfolgendarstellung von <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f14f0-121">The string representation of <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.Convert" />
        <altmember cref="T:System.Convert" />
      </Docs>
    </Member>
    <Member MemberName="GetErrorMessageForHR">
      <MemberSignature Language="C#" Value="public string GetErrorMessageForHR (int hr, Microsoft.JScript.Vsa.IJSVsaEngine engine);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetErrorMessageForHR(int32 hr, class Microsoft.JScript.Vsa.IJSVsaEngine engine) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.DebugConvert.GetErrorMessageForHR(System.Int32,Microsoft.JScript.Vsa.IJSVsaEngine)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetErrorMessageForHR (hr As Integer, engine As IJSVsaEngine) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetErrorMessageForHR(int hr, Microsoft::JScript::Vsa::IJSVsaEngine ^ engine);" />
      <MemberSignature Language="F#" Value="abstract member GetErrorMessageForHR : int * Microsoft.JScript.Vsa.IJSVsaEngine -&gt; string&#xA;override this.GetErrorMessageForHR : int * Microsoft.JScript.Vsa.IJSVsaEngine -&gt; string" Usage="debugConvert.GetErrorMessageForHR (hr, engine)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.JScript.IDebugConvert.GetErrorMessageForHR(System.Int32,Microsoft.JScript.Vsa.IJSVsaEngine)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hr" Type="System.Int32" />
        <Parameter Name="engine" Type="Microsoft.JScript.Vsa.IJSVsaEngine" />
      </Parameters>
      <Docs>
        <param name="hr">
          <span data-ttu-id="f14f0-122">Der HRESULT-Fehlercode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f14f0-122">The HRESULT error code.</span>
          </span>
        </param>
        <param name="engine">
          <span data-ttu-id="f14f0-123">Ein Verweis auf die Skript-Engine.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f14f0-123">A reference to the scripting engine.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f14f0-124">Ruft eine Fehlermeldung ab, die anhand des angegebenen <see cref="P:System.Exception.HResult" /> und der <see cref="T:System.Globalization.CultureInfo" /> der angegebenen <see cref="T:Microsoft.JScript.Vsa.IJSVsaEngine" /> erstellt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f14f0-124">Gets an error message that is created from the specified <see cref="P:System.Exception.HResult" /> and the <see cref="T:System.Globalization.CultureInfo" /> of the specified <see cref="T:Microsoft.JScript.Vsa.IJSVsaEngine" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f14f0-125">Eine lokalisierte Zeichenfolge, die Informationen zum Fehler enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f14f0-125">A localized string that contains information about the error.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.Convert" />
        <altmember cref="T:System.Convert" />
      </Docs>
    </Member>
    <Member MemberName="GetErrorMessageForHR">
      <MemberSignature Language="C#" Value="public string GetErrorMessageForHR (int hr, Microsoft.Vsa.IVsaEngine engine);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetErrorMessageForHR(int32 hr, class Microsoft.Vsa.IVsaEngine engine) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.DebugConvert.GetErrorMessageForHR(System.Int32,Microsoft.Vsa.IVsaEngine)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetErrorMessageForHR (hr As Integer, engine As IVsaEngine) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetErrorMessageForHR(int hr, Microsoft::Vsa::IVsaEngine ^ engine);" />
      <MemberSignature Language="F#" Value="abstract member GetErrorMessageForHR : int * Microsoft.Vsa.IVsaEngine -&gt; string&#xA;override this.GetErrorMessageForHR : int * Microsoft.Vsa.IVsaEngine -&gt; string" Usage="debugConvert.GetErrorMessageForHR (hr, engine)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.JScript.IDebugConvert.GetErrorMessageForHR(System.Int32,Microsoft.Vsa.IVsaEngine)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hr" Type="System.Int32" />
        <Parameter Name="engine" Type="Microsoft.Vsa.IVsaEngine" />
      </Parameters>
      <Docs>
        <param name="hr">To be added.</param>
        <param name="engine">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetManagedCharObject">
      <MemberSignature Language="C#" Value="public object GetManagedCharObject (ushort i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetManagedCharObject(unsigned int16 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.DebugConvert.GetManagedCharObject(System.UInt16)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetManagedCharObject (i As UShort) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ GetManagedCharObject(System::UInt16 i);" />
      <MemberSignature Language="F#" Value="abstract member GetManagedCharObject : uint16 -&gt; obj&#xA;override this.GetManagedCharObject : uint16 -&gt; obj" Usage="debugConvert.GetManagedCharObject i" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.JScript.IDebugConvert.GetManagedCharObject(System.UInt16)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.UInt16" />
      </Parameters>
      <Docs>
        <param name="i">
          <span data-ttu-id="f14f0-126">Der zu konvertierende Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f14f0-126">The value to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f14f0-127">Erstellt ein verwaltetes Objekt, das über den angegebenen primitiven <see cref="T:System.Char" />-Wert verfügt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f14f0-127">Creates a managed object that has the specified primitive <see cref="T:System.Char" /> value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f14f0-128">
            <paramref name="i" />, in ein <see cref="T:System.Char" /> und dann in ein <see cref="T:System.Object" /> konvertiert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f14f0-128">
              <paramref name="i" /> converted to a <see cref="T:System.Char" /> and then an <see cref="T:System.Object" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.Convert" />
        <altmember cref="T:System.Convert" />
      </Docs>
    </Member>
    <Member MemberName="GetManagedInt64Object">
      <MemberSignature Language="C#" Value="public object GetManagedInt64Object (long i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetManagedInt64Object(int64 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.DebugConvert.GetManagedInt64Object(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetManagedInt64Object (i As Long) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ GetManagedInt64Object(long i);" />
      <MemberSignature Language="F#" Value="abstract member GetManagedInt64Object : int64 -&gt; obj&#xA;override this.GetManagedInt64Object : int64 -&gt; obj" Usage="debugConvert.GetManagedInt64Object i" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.JScript.IDebugConvert.GetManagedInt64Object(System.Int64)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="i">
          <span data-ttu-id="f14f0-129">Der zu konvertierende Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f14f0-129">The value to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f14f0-130">Erstellt ein verwaltetes Objekt, das über den angegebenen primitiven <see cref="T:System.Int64" />-Wert verfügt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f14f0-130">Creates a managed object that has the specified primitive <see cref="T:System.Int64" /> value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f14f0-131">
            <paramref name="i" />, konvertiert in ein <see cref="T:System.Object" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f14f0-131">
              <paramref name="i" /> converted to an <see cref="T:System.Object" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.Convert" />
        <altmember cref="T:System.Convert" />
      </Docs>
    </Member>
    <Member MemberName="GetManagedObject">
      <MemberSignature Language="C#" Value="public object GetManagedObject (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetManagedObject(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.DebugConvert.GetManagedObject(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetManagedObject (value As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ GetManagedObject(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member GetManagedObject : obj -&gt; obj&#xA;override this.GetManagedObject : obj -&gt; obj" Usage="debugConvert.GetManagedObject value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.JScript.IDebugConvert.GetManagedObject(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="f14f0-132">Der zu konvertierende Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f14f0-132">The value to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f14f0-133">Erstellt ein verwaltetes Objekt, das über den angegebenen primitiven Wert verfügt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f14f0-133">Creates a managed object that has the specified primitive value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f14f0-134">
            <paramref name="value" />, konvertiert in ein verwaltetes <see cref="T:System.Object" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f14f0-134">
              <paramref name="value" /> converted to a managed <see cref="T:System.Object" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.Convert" />
        <altmember cref="T:System.Convert" />
      </Docs>
    </Member>
    <Member MemberName="GetManagedUInt64Object">
      <MemberSignature Language="C#" Value="public object GetManagedUInt64Object (ulong i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetManagedUInt64Object(unsigned int64 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.DebugConvert.GetManagedUInt64Object(System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetManagedUInt64Object (i As ULong) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ GetManagedUInt64Object(System::UInt64 i);" />
      <MemberSignature Language="F#" Value="abstract member GetManagedUInt64Object : uint64 -&gt; obj&#xA;override this.GetManagedUInt64Object : uint64 -&gt; obj" Usage="debugConvert.GetManagedUInt64Object i" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.JScript.IDebugConvert.GetManagedUInt64Object(System.UInt64)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="i">
          <span data-ttu-id="f14f0-135">Der zu konvertierende Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f14f0-135">The value to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f14f0-136">Erstellt ein verwaltetes Objekt, das über den angegebenen primitiven <see cref="T:System.UInt64" />-Wert verfügt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f14f0-136">Creates a managed object that has the specified primitive <see cref="T:System.UInt64" /> value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f14f0-137">
            <paramref name="i" />, konvertiert in ein <see cref="T:System.Object" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f14f0-137">
              <paramref name="i" /> converted to an <see cref="T:System.Object" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.Convert" />
        <altmember cref="T:System.Convert" />
      </Docs>
    </Member>
    <Member MemberName="Int16ToString">
      <MemberSignature Language="C#" Value="public string Int16ToString (short value, int radix);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string Int16ToString(int16 value, int32 radix) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.DebugConvert.Int16ToString(System.Int16,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Int16ToString (value As Short, radix As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ Int16ToString(short value, int radix);" />
      <MemberSignature Language="F#" Value="abstract member Int16ToString : int16 * int -&gt; string&#xA;override this.Int16ToString : int16 * int -&gt; string" Usage="debugConvert.Int16ToString (value, radix)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.JScript.IDebugConvert.Int16ToString(System.Int16,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int16" />
        <Parameter Name="radix" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="f14f0-138">Der zu konvertierende Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f14f0-138">The value to convert.</span>
          </span>
        </param>
        <param name="radix">
          <span data-ttu-id="f14f0-139">Die Basis des Rückgabewerts.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f14f0-139">The base of the return value.</span>
          </span>
          <span data-ttu-id="f14f0-140">Die Basis muss 2, 8, 10 oder 16 sein.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f14f0-140">The base must be 2, 8, 10, or 16.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f14f0-141">Konvertiert den angegebenen <see cref="T:System.Int16" />-Wert in einen <see cref="T:System.String" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f14f0-141">Converts the specified <see cref="T:System.Int16" /> value to a <see cref="T:System.String" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f14f0-142">Die Zeichenfolgendarstellung von <paramref name="value" /> zur Basis <paramref name="radix" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f14f0-142">The string representation of <paramref name="value" /> in base <paramref name="radix" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.Convert" />
        <altmember cref="T:System.Convert" />
      </Docs>
    </Member>
    <Member MemberName="Int32ToString">
      <MemberSignature Language="C#" Value="public string Int32ToString (int value, int radix);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string Int32ToString(int32 value, int32 radix) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.DebugConvert.Int32ToString(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Int32ToString (value As Integer, radix As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ Int32ToString(int value, int radix);" />
      <MemberSignature Language="F#" Value="abstract member Int32ToString : int * int -&gt; string&#xA;override this.Int32ToString : int * int -&gt; string" Usage="debugConvert.Int32ToString (value, radix)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.JScript.IDebugConvert.Int32ToString(System.Int32,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
        <Parameter Name="radix" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="f14f0-143">Der zu konvertierende Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f14f0-143">The value to convert.</span>
          </span>
        </param>
        <param name="radix">
          <span data-ttu-id="f14f0-144">Die Basis des Rückgabewerts.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f14f0-144">The base of the return value.</span>
          </span>
          <span data-ttu-id="f14f0-145">Die Basis muss 2, 8, 10 oder 16 sein.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f14f0-145">The base must be 2, 8, 10, or 16.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f14f0-146">Konvertiert den angegebenen <see cref="T:System.Int32" />-Wert in einen <see cref="T:System.String" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f14f0-146">Converts the specified <see cref="T:System.Int32" /> value to a <see cref="T:System.String" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f14f0-147">Die Zeichenfolgendarstellung von <paramref name="value" /> zur Basis <paramref name="radix" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f14f0-147">The string representation of <paramref name="value" /> in base <paramref name="radix" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.Convert" />
        <altmember cref="T:System.Convert" />
      </Docs>
    </Member>
    <Member MemberName="Int64ToString">
      <MemberSignature Language="C#" Value="public string Int64ToString (long value, int radix);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string Int64ToString(int64 value, int32 radix) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.DebugConvert.Int64ToString(System.Int64,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Int64ToString (value As Long, radix As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ Int64ToString(long value, int radix);" />
      <MemberSignature Language="F#" Value="abstract member Int64ToString : int64 * int -&gt; string&#xA;override this.Int64ToString : int64 * int -&gt; string" Usage="debugConvert.Int64ToString (value, radix)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.JScript.IDebugConvert.Int64ToString(System.Int64,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
        <Parameter Name="radix" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="f14f0-148">Der zu konvertierende Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f14f0-148">The value to convert.</span>
          </span>
        </param>
        <param name="radix">
          <span data-ttu-id="f14f0-149">Die Basis des Rückgabewerts.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f14f0-149">The base of the return value.</span>
          </span>
          <span data-ttu-id="f14f0-150">Die Basis muss 2, 8, 10 oder 16 sein.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f14f0-150">The base must be 2, 8, 10, or 16.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f14f0-151">Konvertiert den angegebenen <see cref="T:System.Int64" />-Wert in einen <see cref="T:System.String" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f14f0-151">Converts the specified <see cref="T:System.Int64" /> value to a <see cref="T:System.String" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f14f0-152">Die Zeichenfolgendarstellung von <paramref name="value" /> zur Basis <paramref name="radix" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f14f0-152">The string representation of <paramref name="value" /> in base <paramref name="radix" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.Convert" />
        <altmember cref="T:System.Convert" />
      </Docs>
    </Member>
    <Member MemberName="RegexpToString">
      <MemberSignature Language="C#" Value="public string RegexpToString (string source, bool ignoreCase, bool global, bool multiline);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string RegexpToString(string source, bool ignoreCase, bool global, bool multiline) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.DebugConvert.RegexpToString(System.String,System.Boolean,System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function RegexpToString (source As String, ignoreCase As Boolean, global As Boolean, multiline As Boolean) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ RegexpToString(System::String ^ source, bool ignoreCase, bool global, bool multiline);" />
      <MemberSignature Language="F#" Value="abstract member RegexpToString : string * bool * bool * bool -&gt; string&#xA;override this.RegexpToString : string * bool * bool * bool -&gt; string" Usage="debugConvert.RegexpToString (source, ignoreCase, global, multiline)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.JScript.IDebugConvert.RegexpToString(System.String,System.Boolean,System.Boolean,System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="ignoreCase" Type="System.Boolean" />
        <Parameter Name="global" Type="System.Boolean" />
        <Parameter Name="multiline" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="f14f0-153">Das Muster eines regulären Ausdrucks, mit dem Übereinstimmungen gefunden werden sollen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f14f0-153">The regular expression pattern to match.</span>
          </span>
        </param>
        <param name="ignoreCase">
          <span data-ttu-id="f14f0-154">
            <see langword="true" />, wenn bei Übereinstimmungen die Groß-/Kleinschreibung nicht berücksichtigt werden soll, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f14f0-154">
              <see langword="true" /> to use case-insensitive matching; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <param name="global">
          <span data-ttu-id="f14f0-155">
            <see langword="true" />, um eine globale Übereinstimmung zu verwenden, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f14f0-155">
              <see langword="true" /> to use a global match; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <param name="multiline">
          <span data-ttu-id="f14f0-156">
            <see langword="true" />, um eine mehrzeilige Übereinstimmung zu verwenden, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f14f0-156">
              <see langword="true" /> to use a multiline match; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f14f0-157">Konvertiert die Informationen zum angegebenen regulären Ausdruck in einen <see cref="T:System.String" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f14f0-157">Converts the specified regular expression information to a <see cref="T:System.String" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f14f0-158">Die Zeichenfolgendarstellung der Informationen zum regulären Ausdruck.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f14f0-158">The string representation of the regular expression information.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.Convert" />
        <altmember cref="T:System.Convert" />
        <altmember cref="T:Microsoft.JScript.RegExpConstructor" />
      </Docs>
    </Member>
    <Member MemberName="SByteToString">
      <MemberSignature Language="C#" Value="public string SByteToString (sbyte value, int radix);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string SByteToString(int8 value, int32 radix) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.DebugConvert.SByteToString(System.SByte,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function SByteToString (value As SByte, radix As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ SByteToString(System::SByte value, int radix);" />
      <MemberSignature Language="F#" Value="abstract member SByteToString : sbyte * int -&gt; string&#xA;override this.SByteToString : sbyte * int -&gt; string" Usage="debugConvert.SByteToString (value, radix)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.JScript.IDebugConvert.SByteToString(System.SByte,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.SByte" />
        <Parameter Name="radix" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="f14f0-159">Der zu konvertierende Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f14f0-159">The value to convert.</span>
          </span>
        </param>
        <param name="radix">
          <span data-ttu-id="f14f0-160">Die Basis des Rückgabewerts.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f14f0-160">The base of the return value.</span>
          </span>
          <span data-ttu-id="f14f0-161">Die Basis muss 2, 8, 10 oder 16 sein.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f14f0-161">The base must be 2, 8, 10, or 16.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f14f0-162">Konvertiert den angegebenen <see cref="T:System.SByte" />-Wert in einen <see cref="T:System.String" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f14f0-162">Converts the specified <see cref="T:System.SByte" /> value to a <see cref="T:System.String" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f14f0-163">Die Zeichenfolgendarstellung von <paramref name="value" /> zur Basis <paramref name="radix" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f14f0-163">The string representation of <paramref name="value" /> in base <paramref name="radix" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.Convert" />
        <altmember cref="T:System.Convert" />
      </Docs>
    </Member>
    <Member MemberName="SingleToString">
      <MemberSignature Language="C#" Value="public string SingleToString (float value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string SingleToString(float32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.DebugConvert.SingleToString(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Function SingleToString (value As Single) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ SingleToString(float value);" />
      <MemberSignature Language="F#" Value="abstract member SingleToString : single -&gt; string&#xA;override this.SingleToString : single -&gt; string" Usage="debugConvert.SingleToString value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.JScript.IDebugConvert.SingleToString(System.Single)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="f14f0-164">Der zu konvertierende Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f14f0-164">The value to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f14f0-165">Konvertiert den angegebenen <see cref="T:System.Single" />-Wert in einen <see cref="T:System.String" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f14f0-165">Converts the specified <see cref="T:System.Single" /> value to a <see cref="T:System.String" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f14f0-166">Eine Zeichenfolgendarstellung von <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f14f0-166">The string representation of <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.Convert" />
        <altmember cref="T:System.Convert" />
      </Docs>
    </Member>
    <Member MemberName="StringToPrintable">
      <MemberSignature Language="C#" Value="public string StringToPrintable (string source);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string StringToPrintable(string source) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.DebugConvert.StringToPrintable(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function StringToPrintable (source As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ StringToPrintable(System::String ^ source);" />
      <MemberSignature Language="F#" Value="abstract member StringToPrintable : string -&gt; string&#xA;override this.StringToPrintable : string -&gt; string" Usage="debugConvert.StringToPrintable source" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.JScript.IDebugConvert.StringToPrintable(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="f14f0-167">Der zu konvertierende Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f14f0-167">The value to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f14f0-168">Konvertiert den angegebenen <see cref="T:System.String" /> in einen <see cref="T:System.String" />, der Escapezeichen für nicht druckbare Zeichen enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f14f0-168">Converts the specified <see cref="T:System.String" /> to a <see cref="T:System.String" /> that contains escape characters for non-printable characters.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f14f0-169">Die Zeichenfolgendarstellung von <paramref name="source" /> mit Escapezeichen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f14f0-169">The string representation of <paramref name="source" /> that contains escape characters.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.Convert" />
        <altmember cref="T:System.Convert" />
      </Docs>
    </Member>
    <Member MemberName="ToPrimitive">
      <MemberSignature Language="C#" Value="public object ToPrimitive (object value, TypeCode typeCode, bool truncationPermitted);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ToPrimitive(object value, valuetype System.TypeCode typeCode, bool truncationPermitted) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.DebugConvert.ToPrimitive(System.Object,System.TypeCode,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ ToPrimitive(System::Object ^ value, TypeCode typeCode, bool truncationPermitted);" />
      <MemberSignature Language="F#" Value="abstract member ToPrimitive : obj * TypeCode * bool -&gt; obj&#xA;override this.ToPrimitive : obj * TypeCode * bool -&gt; obj" Usage="debugConvert.ToPrimitive (value, typeCode, truncationPermitted)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.JScript.IDebugConvert.ToPrimitive(System.Object,System.TypeCode,System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="typeCode" Type="System.TypeCode" />
        <Parameter Name="truncationPermitted" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="f14f0-170">Der Wert, der in einen neuen Typ konvertiert werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f14f0-170">The value to convert to a new type.</span>
          </span>
        </param>
        <param name="typeCode">
          <span data-ttu-id="f14f0-171">Der Typ, in den <c>value</c> konvertiert werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f14f0-171">The type to convert <c>value</c> to.</span>
          </span>
        </param>
        <param name="truncationPermitted">
          <span data-ttu-id="f14f0-172">
            <see langword="true" />, wenn Datenverlust zulässig sein soll, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f14f0-172">
              <see langword="true" /> to allow data loss; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f14f0-173">Konvertiert den angegebenen Wert in den angegebenen <see cref="T:System.TypeCode" />, wobei optional Datenverlust zulässig ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f14f0-173">Converts the specified value to the specified <see cref="T:System.TypeCode" />, optionally allowing data loss.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f14f0-174">
            <paramref name="value" />, konvertiert in den <paramref name="typeCode" />-Typ.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f14f0-174">
              <paramref name="value" /> converted to the <paramref name="typeCode" /> type.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.Convert" />
        <altmember cref="T:System.Convert" />
      </Docs>
    </Member>
    <Member MemberName="UInt16ToString">
      <MemberSignature Language="C#" Value="public string UInt16ToString (ushort value, int radix);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string UInt16ToString(unsigned int16 value, int32 radix) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.DebugConvert.UInt16ToString(System.UInt16,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function UInt16ToString (value As UShort, radix As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ UInt16ToString(System::UInt16 value, int radix);" />
      <MemberSignature Language="F#" Value="abstract member UInt16ToString : uint16 * int -&gt; string&#xA;override this.UInt16ToString : uint16 * int -&gt; string" Usage="debugConvert.UInt16ToString (value, radix)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.JScript.IDebugConvert.UInt16ToString(System.UInt16,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt16" />
        <Parameter Name="radix" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="f14f0-175">Der zu konvertierende Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f14f0-175">The value to convert.</span>
          </span>
        </param>
        <param name="radix">
          <span data-ttu-id="f14f0-176">Die Basis des Rückgabewerts.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f14f0-176">The base of the return value.</span>
          </span>
          <span data-ttu-id="f14f0-177">Die Basis muss 2, 8, 10 oder 16 sein.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f14f0-177">The base must be 2, 8, 10, or 16.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f14f0-178">Konvertiert den angegebenen <see cref="T:System.UInt16" />-Wert in einen <see cref="T:System.String" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f14f0-178">Converts the specified <see cref="T:System.UInt16" /> value to a <see cref="T:System.String" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f14f0-179">Die Zeichenfolgendarstellung von <paramref name="value" /> zur Basis <paramref name="radix" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f14f0-179">The string representation of <paramref name="value" /> in base <paramref name="radix" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.Convert" />
        <altmember cref="T:System.Convert" />
      </Docs>
    </Member>
    <Member MemberName="UInt32ToString">
      <MemberSignature Language="C#" Value="public string UInt32ToString (uint value, int radix);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string UInt32ToString(unsigned int32 value, int32 radix) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.DebugConvert.UInt32ToString(System.UInt32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function UInt32ToString (value As UInteger, radix As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ UInt32ToString(System::UInt32 value, int radix);" />
      <MemberSignature Language="F#" Value="abstract member UInt32ToString : uint32 * int -&gt; string&#xA;override this.UInt32ToString : uint32 * int -&gt; string" Usage="debugConvert.UInt32ToString (value, radix)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.JScript.IDebugConvert.UInt32ToString(System.UInt32,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt32" />
        <Parameter Name="radix" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="f14f0-180">Der zu konvertierende Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f14f0-180">The value to convert.</span>
          </span>
        </param>
        <param name="radix">
          <span data-ttu-id="f14f0-181">Die Basis des Rückgabewerts.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f14f0-181">The base of the return value.</span>
          </span>
          <span data-ttu-id="f14f0-182">Die Basis muss 2, 8, 10 oder 16 sein.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f14f0-182">The base must be 2, 8, 10, or 16.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f14f0-183">Konvertiert den angegebenen <see cref="T:System.UInt32" />-Wert in einen <see cref="T:System.String" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f14f0-183">Converts the specified <see cref="T:System.UInt32" /> value to a <see cref="T:System.String" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f14f0-184">Die Zeichenfolgendarstellung von <paramref name="value" /> zur Basis <paramref name="radix" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f14f0-184">The string representation of <paramref name="value" /> in base <paramref name="radix" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.Convert" />
        <altmember cref="T:System.Convert" />
      </Docs>
    </Member>
    <Member MemberName="UInt64ToString">
      <MemberSignature Language="C#" Value="public string UInt64ToString (ulong value, int radix);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string UInt64ToString(unsigned int64 value, int32 radix) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.DebugConvert.UInt64ToString(System.UInt64,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function UInt64ToString (value As ULong, radix As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ UInt64ToString(System::UInt64 value, int radix);" />
      <MemberSignature Language="F#" Value="abstract member UInt64ToString : uint64 * int -&gt; string&#xA;override this.UInt64ToString : uint64 * int -&gt; string" Usage="debugConvert.UInt64ToString (value, radix)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.JScript.IDebugConvert.UInt64ToString(System.UInt64,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt64" />
        <Parameter Name="radix" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="f14f0-185">Der zu konvertierende Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f14f0-185">The value to convert.</span>
          </span>
        </param>
        <param name="radix">
          <span data-ttu-id="f14f0-186">Die Basis des Rückgabewerts.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f14f0-186">The base of the return value.</span>
          </span>
          <span data-ttu-id="f14f0-187">Die Basis muss 2, 8, 10 oder 16 sein.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f14f0-187">The base must be 2, 8, 10, or 16.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f14f0-188">Konvertiert den angegebenen <see cref="T:System.UInt64" />-Wert in einen <see cref="T:System.String" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f14f0-188">Converts the specified <see cref="T:System.UInt64" /> value to a <see cref="T:System.String" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f14f0-189">Die Zeichenfolgendarstellung von <paramref name="value" /> zur Basis <paramref name="radix" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f14f0-189">The string representation of <paramref name="value" /> in base <paramref name="radix" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.Convert" />
        <altmember cref="T:System.Convert" />
      </Docs>
    </Member>
  </Members>
</Type>