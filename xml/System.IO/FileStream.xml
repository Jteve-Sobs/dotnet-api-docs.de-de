<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="FileStream.xml" source-language="en-US" target-language="de-DE">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac52dd6be9b9c6d689c0fad77d5c674da06aa287de6.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2dd6be9b9c6d689c0fad77d5c674da06aa287de6</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.3,netstandard-1.4,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.IO.FileStream">
          <source>Provides a <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph> for a file, supporting both synchronous and asynchronous read and write operations.</source>
          <target state="translated">Stellt einen <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph> für eine Datei bereit, wobei synchrone und asynchrone Lese- und Schreibvorgänge unterstützt werden.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.FileStream">
          <source>Use the <ph id="ph1">&lt;xref:System.IO.FileStream&gt;</ph> class to read from, write to, open, and close files on a file system, and to manipulate other file-related operating system handles, including pipes, standard input, and standard output.</source>
          <target state="translated">Verwenden der <ph id="ph1">&lt;xref:System.IO.FileStream&gt;</ph> Klasse aus lesen, schreiben zu öffnen und Schließen von Dateien in einem Dateisystem, und um andere dateibezogene Betriebssystemhandles, z. B. Pipes, Standardeingabe und Standardausgabe zu bearbeiten.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.FileStream">
          <source>You can use the <ph id="ph1">&lt;xref:System.IO.FileStream.Read%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.IO.FileStream.Write%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.IO.Stream.CopyTo%2A&gt;</ph>, and <ph id="ph4">&lt;xref:System.IO.FileStream.Flush%2A&gt;</ph> methods to perform synchronous operations, or the <ph id="ph5">&lt;xref:System.IO.FileStream.ReadAsync%2A&gt;</ph>, <ph id="ph6">&lt;xref:System.IO.FileStream.WriteAsync%2A&gt;</ph>, <ph id="ph7">&lt;xref:System.IO.Stream.CopyToAsync%2A&gt;</ph>, and <ph id="ph8">&lt;xref:System.IO.FileStream.FlushAsync%2A&gt;</ph> methods to perform asynchronous operations.</source>
          <target state="translated">Können Sie die <ph id="ph1">&lt;xref:System.IO.FileStream.Read%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.IO.FileStream.Write%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.IO.Stream.CopyTo%2A&gt;</ph>, und <ph id="ph4">&lt;xref:System.IO.FileStream.Flush%2A&gt;</ph> Methoden zum synchrone Vorgängen ausführen oder die <ph id="ph5">&lt;xref:System.IO.FileStream.ReadAsync%2A&gt;</ph>, <ph id="ph6">&lt;xref:System.IO.FileStream.WriteAsync%2A&gt;</ph>, <ph id="ph7">&lt;xref:System.IO.Stream.CopyToAsync%2A&gt;</ph>, und <ph id="ph8">&lt;xref:System.IO.FileStream.FlushAsync%2A&gt;</ph> Methoden zum asynchronen Ausführen DDL-Vorgänge.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.FileStream">
          <source>Use the asynchronous methods to perform resource-intensive file operations without blocking the main thread.</source>
          <target state="translated">Verwenden Sie die asynchronen Methoden ressourcenintensiven Dateivorgänge ausführen, ohne den Hauptthread zu blockieren.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.FileStream">
          <source>This performance consideration is particularly important in a <ph id="ph1">[!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)]</ph> app or <ph id="ph2">[!INCLUDE[desktop_appname](~/includes/desktop-appname-md.md)]</ph> app where a time-consuming stream operation can block the UI thread and make your app appear as if it is not working.</source>
          <target state="translated">Diese Überlegungen zur Leistung sind insbesondere in einer <ph id="ph1">[!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)]</ph>-App oder <ph id="ph2">[!INCLUDE[desktop_appname](~/includes/desktop-appname-md.md)]</ph>-App wichtig, bei der ein zeitaufwendiger Streamvorgang den UI-Thread blockieren kann und es dann den Anschein hat, dass Ihre App nicht funktioniert.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.FileStream">
          <source><ph id="ph1">&lt;xref:System.IO.FileStream&gt;</ph> buffers input and output for better performance.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.FileStream&gt;</ph> puffert Eingabe und Ausgabe für eine bessere Leistung.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.FileStream">
          <source>This type implements the <ph id="ph1">&lt;xref:System.IDisposable&gt;</ph> interface.</source>
          <target state="translated">Dieser Typ implementiert die <ph id="ph1">&lt;xref:System.IDisposable&gt;</ph> Schnittstelle.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.FileStream">
          <source>When you have finished using the type, you should dispose of it either directly or indirectly.</source>
          <target state="translated">Wenn Sie mithilfe des Typs abgeschlossen haben, sollten Sie es entweder direkt oder indirekt freigeben.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.FileStream">
          <source>To dispose of the type directly, call its <ph id="ph1">&lt;xref:System.IDisposable.Dispose%2A&gt;</ph> method in a <ph id="ph2">`try`</ph><ph id="ph3">/</ph><ph id="ph4">`catch`</ph> block.</source>
          <target state="translated">Aufrufen, um den Typ direkt zu verwerfen, dessen <ph id="ph1">&lt;xref:System.IDisposable.Dispose%2A&gt;</ph> Methode in einer <ph id="ph2">`try`</ph> <ph id="ph3">/</ph> <ph id="ph4">`catch`</ph> Block.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.FileStream">
          <source>To dispose of it indirectly, use a language construct such as <ph id="ph1">`using`</ph> (in C#) or <ph id="ph2">`Using`</ph> (in Visual Basic).</source>
          <target state="translated">Um es indirekt freizugeben, verwenden Sie ein Sprachkonstrukt z. B. <ph id="ph1">`using`</ph> (in c#) oder <ph id="ph2">`Using`</ph> (in Visual Basic).</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.FileStream">
          <source>For more information, see the "Using an Object that Implements IDisposable" section in the <ph id="ph1">&lt;xref:System.IDisposable&gt;</ph> interface topic.</source>
          <target state="translated">Weitere Informationen finden Sie im Abschnitt "Verwenden eines Objekts, implementiert IDisposable" in der <ph id="ph1">&lt;xref:System.IDisposable&gt;</ph> Thema zur Schnittstelle.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.FileStream">
          <source>The <ph id="ph1">&lt;xref:System.IO.FileStream.IsAsync%2A&gt;</ph> property detects whether the file handle was opened asynchronously.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.IO.FileStream.IsAsync%2A&gt;</ph> Eigenschaft erkennt, ob die Dateihandle asynchron geöffnet wurde.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.FileStream">
          <source>You specify this value when you create an instance of the <ph id="ph1">&lt;xref:System.IO.FileStream&gt;</ph> class using a constructor that has an <ph id="ph2">`isAsync`</ph>, <ph id="ph3">`useAsync`</ph>, or <ph id="ph4">`options`</ph> parameter.</source>
          <target state="translated">Bei der Erstellung einer Instanz von, geben Sie diesen Wert der <ph id="ph1">&lt;xref:System.IO.FileStream&gt;</ph> -Klasse mit einem Konstruktor, verfügt ein <ph id="ph2">`isAsync`</ph>, <ph id="ph3">`useAsync`</ph>, oder <ph id="ph4">`options`</ph> Parameter.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.FileStream">
          <source>When the property is <ph id="ph1">`true`</ph>, the stream utilizes overlapped I/O to perform file operations asynchronously.</source>
          <target state="translated">Wenn die Eigenschaft den Wert <ph id="ph1">`true`</ph>, der Datenstrom nutzt überlappender e/a, um die Dateivorgänge asynchron ausführen.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.FileStream">
          <source>However, the <ph id="ph1">&lt;xref:System.IO.FileStream.IsAsync%2A&gt;</ph> property does not have to be <ph id="ph2">`true`</ph> to call the <ph id="ph3">&lt;xref:System.IO.FileStream.ReadAsync%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.IO.FileStream.WriteAsync%2A&gt;</ph>, or <ph id="ph5">&lt;xref:System.IO.Stream.CopyToAsync%2A&gt;</ph> method.</source>
          <target state="translated">Allerdings die <ph id="ph1">&lt;xref:System.IO.FileStream.IsAsync%2A&gt;</ph> Eigenschaft hat keine werden <ph id="ph2">`true`</ph> zum Aufrufen der <ph id="ph3">&lt;xref:System.IO.FileStream.ReadAsync%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.IO.FileStream.WriteAsync%2A&gt;</ph>, oder <ph id="ph5">&lt;xref:System.IO.Stream.CopyToAsync%2A&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.FileStream">
          <source>When the <ph id="ph1">&lt;xref:System.IO.FileStream.IsAsync%2A&gt;</ph> property is <ph id="ph2">`false`</ph> and you call the asynchronous read and write operations, the UI thread is still not blocked, but the actual I/O operation is performed synchronously.</source>
          <target state="translated">Wenn die <ph id="ph1">&lt;xref:System.IO.FileStream.IsAsync%2A&gt;</ph> Eigenschaft ist <ph id="ph2">`false`</ph> und rufen Sie den asynchronen Lesevorgang und Schreibvorgänge, die UI-Thread wird weiterhin nicht blockiert, aber der tatsächliche e/a-Vorgang wird synchron ausgeführt.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.FileStream">
          <source>The <ph id="ph1">&lt;xref:System.IO.FileStream.Seek%2A&gt;</ph> method supports random access to files.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.IO.FileStream.Seek%2A&gt;</ph> Methode unterstützt den zufälligen Zugriff auf Dateien.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.FileStream">
          <source><ph id="ph1">&lt;xref:System.IO.FileStream.Seek%2A&gt;</ph> allows the read/write position to be moved to any position within the file.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.FileStream.Seek%2A&gt;</ph> ermöglicht den Lese-/Schreibposition an einer beliebigen Position innerhalb der Datei verschoben werden soll.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.FileStream">
          <source>This is done with byte offset reference point parameters.</source>
          <target state="translated">Dies erfolgt mit Byte-Offset Verweis Point-Parameter.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.FileStream">
          <source>The byte offset is relative to the seek reference point, which can be the beginning, the current position, or the end of the underlying file, as represented by the three members of the <ph id="ph1">&lt;xref:System.IO.SeekOrigin&gt;</ph> enumeration.</source>
          <target state="translated">Das Byte-Offset ist relativ zu den Bezugspunkt, der den Anfang, die aktuelle Position oder das Ende der zugrunde liegenden Datei, sein kann, dargestellt durch die drei Elemente von der <ph id="ph1">&lt;xref:System.IO.SeekOrigin&gt;</ph> Enumeration.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.FileStream">
          <source>Disk files always support random access.</source>
          <target state="translated">Datenträgerdateien unterstützen immer den wahlfreien Zugriff.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.FileStream">
          <source>At the time of construction, the <ph id="ph1">&lt;xref:System.IO.FileStream.CanSeek%2A&gt;</ph> property value is set to <ph id="ph2">`true`</ph> or <ph id="ph3">`false`</ph> depending on the underlying file type.If the underlying file type is FILE_TYPE_DISK, as defined in winbase.h, the <ph id="ph4">&lt;xref:System.IO.FileStream.CanSeek%2A&gt;</ph> property value is <ph id="ph5">`true`</ph>.</source>
          <target state="translated">Zum Zeitpunkt der Erstellung der <ph id="ph1">&lt;xref:System.IO.FileStream.CanSeek%2A&gt;</ph> Eigenschaftswert festgelegt ist, um <ph id="ph2">`true`</ph> oder <ph id="ph3">`false`</ph> abhängig von der zugrunde liegende Dateityp. Wenn der zugrunde liegenden Dateityp FILE_TYPE_DISK ist gemäß Definition in winbase.h der <ph id="ph4">&lt;xref:System.IO.FileStream.CanSeek%2A&gt;</ph> Eigenschaftswert ist <ph id="ph5">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.FileStream">
          <source>Otherwise, the <ph id="ph1">&lt;xref:System.IO.FileStream.CanSeek%2A&gt;</ph> property value is <ph id="ph2">`false`</ph>.</source>
          <target state="translated">Andernfalls die <ph id="ph1">&lt;xref:System.IO.FileStream.CanSeek%2A&gt;</ph> Eigenschaftswert ist <ph id="ph2">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.FileStream">
          <source>If a process terminates with part of a file locked or closes a file that has outstanding locks, the behavior is undefined.</source>
          <target state="translated">Wenn ein Prozess mit Teil der Datei gesperrt beendet oder schließt eine Datei mit ausstehenden sperren, ist das Verhalten nicht definiert.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.FileStream">
          <source>For directory operations and other file operations, see the <ph id="ph1">&lt;xref:System.IO.File&gt;</ph>, <ph id="ph2">&lt;xref:System.IO.Directory&gt;</ph>, and <ph id="ph3">&lt;xref:System.IO.Path&gt;</ph> classes.</source>
          <target state="translated">Verzeichnisvorgänge und andere Dateivorgänge finden Sie in der <ph id="ph1">&lt;xref:System.IO.File&gt;</ph>, <ph id="ph2">&lt;xref:System.IO.Directory&gt;</ph>, und <ph id="ph3">&lt;xref:System.IO.Path&gt;</ph> Klassen.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.FileStream">
          <source>The <ph id="ph1">&lt;xref:System.IO.File&gt;</ph> class is a utility class that has static methods primarily for the creation of <ph id="ph2">&lt;xref:System.IO.FileStream&gt;</ph> objects based on file paths.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.IO.File&gt;</ph> Klasse ist eine Hilfsprogrammklasse, die in erster Linie für die Erstellung der statische Methoden <ph id="ph2">&lt;xref:System.IO.FileStream&gt;</ph> Objekte auf der Grundlage von Dateipfaden.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.FileStream">
          <source>The <ph id="ph1">&lt;xref:System.IO.MemoryStream&gt;</ph> class creates a stream from a byte array and is similar to the <ph id="ph2">&lt;xref:System.IO.FileStream&gt;</ph> class.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.IO.MemoryStream&gt;</ph> Klasse erstellt einen Datenstrom aus einem Bytearray und ähnelt der <ph id="ph2">&lt;xref:System.IO.FileStream&gt;</ph> Klasse.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.FileStream">
          <source>For a list of common file and directory operations, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</source>
          <target state="translated">Eine Liste der allgemeinen Datei- und Verzeichnisvorgänge, finden Sie unter <bpt id="p1">[</bpt>allgemeine e/a-Aufgaben<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.FileStream">
          <source>Detection of Stream Position Changes</source>
          <target state="translated">Erkennung von Stream Position Änderungen</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.FileStream">
          <source>When a <ph id="ph1">&lt;xref:System.IO.FileStream&gt;</ph> object does not have an exclusive hold on its handle, another thread could access the file handle concurrently and change the position of the operating system's file pointer that is associated with the file handle.</source>
          <target state="translated">Wenn ein <ph id="ph1">&lt;xref:System.IO.FileStream&gt;</ph> Objekt hat keinen exklusiven auf das Handle, das einem anderen Thread konnte das Dateihandle gleichzeitig zugreifen und Ändern der Position des Betriebssystems Dateizeiger, das das Dateihandle zugeordnet ist.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.FileStream">
          <source>In this case, the cached position in the <ph id="ph1">&lt;xref:System.IO.FileStream&gt;</ph> object and the cached data in the buffer could be compromised.</source>
          <target state="translated">In diesem Fall wird die zwischengespeicherte Position in der <ph id="ph1">&lt;xref:System.IO.FileStream&gt;</ph> -Objekt und die zwischengespeicherten Daten in den Puffer gefährdet werden.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.FileStream">
          <source>The <ph id="ph1">&lt;xref:System.IO.FileStream&gt;</ph> object routinely performs checks on methods that access the cached buffer to ensure that the operating system's handle position is the same as the cached position used by the <ph id="ph2">&lt;xref:System.IO.FileStream&gt;</ph> object.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.IO.FileStream&gt;</ph> Objekt auf Methoden, die Zugriff auf den zwischengespeicherten Puffer, um sicherzustellen, dass das Betriebssystem Handle Position identisch mit die zwischengespeicherte Position verwendeten routinemäßig überprüft die <ph id="ph2">&lt;xref:System.IO.FileStream&gt;</ph> Objekt.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.FileStream">
          <source>If an unexpected change in the handle position is detected in a call to the <ph id="ph1">&lt;xref:System.IO.FileStream.Read%2A&gt;</ph> method, the .NET Framework discards the contents of the buffer and reads the stream from the file again.</source>
          <target state="translated">Wenn unerwartete Änderungen in die Position des Handles, in einem Aufruf erkannt wird der <ph id="ph1">&lt;xref:System.IO.FileStream.Read%2A&gt;</ph> -Methode, die .NET Framework verwirft den Inhalt des Puffers und der Stream erneut aus der Datei gelesen.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.FileStream">
          <source>This can affect performance, depending on the size of the file and any other processes that could affect the position of the file stream.</source>
          <target state="translated">Dies kann die Leistung zu erzielen, abhängig von der Größe der Datei und alle anderen Prozesse, die Auswirkungen auf die Position des Dateidatenstroms beeinträchtigen.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.FileStream">
          <source>If an unexpected change in the handle position is detected in a call to the <ph id="ph1">&lt;xref:System.IO.FileStream.Write%2A&gt;</ph> method, the contents of the buffer are discarded and an <ph id="ph2">&lt;xref:System.IO.IOException&gt;</ph> exception is thrown.</source>
          <target state="translated">Wenn in einem Aufruf unerwartete Änderungen in die Position des Handles erkannt wird die <ph id="ph1">&lt;xref:System.IO.FileStream.Write%2A&gt;</ph> -Methode, den Inhalt des Puffers werden verworfen und ein <ph id="ph2">&lt;xref:System.IO.IOException&gt;</ph> Ausnahme wird ausgelöst.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.FileStream">
          <source>A <ph id="ph1">&lt;xref:System.IO.FileStream&gt;</ph> object will not have an exclusive hold on its handle when either the <ph id="ph2">&lt;xref:System.IO.FileStream.SafeFileHandle%2A&gt;</ph> property is accessed to expose the handle or the <ph id="ph3">&lt;xref:System.IO.FileStream&gt;</ph> object is given the <ph id="ph4">&lt;xref:System.IO.FileStream.SafeFileHandle%2A&gt;</ph> property in its constructor.</source>
          <target state="translated">Ein <ph id="ph1">&lt;xref:System.IO.FileStream&gt;</ph> Objekt hat keinen exklusiven auf das Handle Wenn entweder die <ph id="ph2">&lt;xref:System.IO.FileStream.SafeFileHandle%2A&gt;</ph> Eigenschaft zugegriffen wird, um das Handle verfügbar zu machen oder die <ph id="ph3">&lt;xref:System.IO.FileStream&gt;</ph> Objekt erhält die <ph id="ph4">&lt;xref:System.IO.FileStream.SafeFileHandle%2A&gt;</ph> Eigenschaft in seinem Konstruktor.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.FileStream">
          <source>The following example demonstrates some of the <ph id="ph1">&lt;xref:System.IO.FileStream&gt;</ph> constructors.</source>
          <target state="translated">Das folgende Beispiel veranschaulicht einige der <ph id="ph1">&lt;xref:System.IO.FileStream&gt;</ph> Konstruktoren.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.FileStream">
          <source>The following example shows how to write to a file asynchronously.</source>
          <target state="translated">Im folgende Beispiel wird gezeigt, wie asynchron in eine Datei geschrieben wird.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.FileStream">
          <source>This code runs in a WPF app that has a TextBlock named UserInput and a button hooked up to a Click event handler that is named Button_Click.</source>
          <target state="translated">Dieser Code wird in einer WPF-app, die einen TextBlock mit dem Namen UserInput und eine Schaltfläche, um einen Click-Ereignishandler mit dem Namen Button_Click eingebunden wurde ausgeführt.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.FileStream">
          <source>The file path needs to be changed to a file than exits on the computer.</source>
          <target state="translated">Der Dateipfad muss geändert werden, in eine Datei als auf dem Computer beendet wird.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="T:System.IO.FileStream">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.IO.FileStream" /&gt;</ph> class.</source>
          <target state="translated">Initialisiert eine neue Instanz der <ph id="ph1">&lt;see cref="T:System.IO.FileStream" /&gt;</ph>-Klasse.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.#ctor(Microsoft.Win32.SafeHandles.SafeFileHandle,System.IO.FileAccess)">
          <source>A file handle for the file that the current <ph id="ph1">&lt;see langword="FileStream" /&gt;</ph> object will encapsulate.</source>
          <target state="translated">Ein Dateihandle für die Datei, die vom aktuellen <ph id="ph1">&lt;see langword="FileStream" /&gt;</ph>-Objekt gekapselt wird.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.#ctor(Microsoft.Win32.SafeHandles.SafeFileHandle,System.IO.FileAccess)">
          <source>A constant that sets the <ph id="ph1">&lt;see cref="P:System.IO.FileStream.CanRead" /&gt;</ph> and <ph id="ph2">&lt;see cref="P:System.IO.FileStream.CanWrite" /&gt;</ph> properties of the <ph id="ph3">&lt;see langword="FileStream" /&gt;</ph> object.</source>
          <target state="translated">Eine Konstante, die die <ph id="ph1">&lt;see cref="P:System.IO.FileStream.CanRead" /&gt;</ph>-Eigenschaft und die <ph id="ph2">&lt;see cref="P:System.IO.FileStream.CanWrite" /&gt;</ph>-Eigenschaft des <ph id="ph3">&lt;see langword="FileStream" /&gt;</ph>-Objekts festlegt.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.#ctor(Microsoft.Win32.SafeHandles.SafeFileHandle,System.IO.FileAccess)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.IO.FileStream" /&gt;</ph> class for the specified file handle, with the specified read/write permission.</source>
          <target state="translated">Initialisiert eine neue Instanz der <ph id="ph1">&lt;see cref="T:System.IO.FileStream" /&gt;</ph>-Klasse für das angegebene Dateihandle und mit der angegebenen Lese- und Schreibberechtigung.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.#ctor(Microsoft.Win32.SafeHandles.SafeFileHandle,System.IO.FileAccess)">
          <source>When <ph id="ph1">&lt;xref:System.IO.Stream.Close%2A&gt;</ph> is called, the handle is also closed and the file's handle count is decremented.</source>
          <target state="translated">Wenn <ph id="ph1">&lt;xref:System.IO.Stream.Close%2A&gt;</ph> wird aufgerufen, wird auch das Handle geschlossen und die Handleanzahl für die Datei wird wieder um eins erniedrigt.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.#ctor(Microsoft.Win32.SafeHandles.SafeFileHandle,System.IO.FileAccess)">
          <source><ph id="ph1">`FileStream`</ph> assumes that it has exclusive control over the handle.</source>
          <target state="translated"><ph id="ph1">`FileStream`</ph> wird davon ausgegangen, dass sie die exklusive Kontrolle über das Handle besitzt.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.#ctor(Microsoft.Win32.SafeHandles.SafeFileHandle,System.IO.FileAccess)">
          <source>Reading, writing, or seeking while a <ph id="ph1">`FileStream`</ph> is also holding a handle could result in data corruption.</source>
          <target state="translated">Lesen, schreiben oder beim Suchen einer <ph id="ph1">`FileStream`</ph> enthalten auch ein Handle zu beschädigten Daten führen.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.#ctor(Microsoft.Win32.SafeHandles.SafeFileHandle,System.IO.FileAccess)">
          <source>For data safety, call <ph id="ph1">&lt;xref:System.IO.FileStream.Flush%2A&gt;</ph> before using the handle, and avoid calling any methods other than <ph id="ph2">`Close`</ph> after you are done using the handle.</source>
          <target state="translated">Rufen Sie Daten aus Sicherheitsgründen <ph id="ph1">&lt;xref:System.IO.FileStream.Flush%2A&gt;</ph> vor Verwendung des Handles, und vermeiden Sie durch Aufrufen von Methoden außer <ph id="ph2">`Close`</ph> Sie abschließend mit dem Handle.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.#ctor(Microsoft.Win32.SafeHandles.SafeFileHandle,System.IO.FileAccess)">
          <source>When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable, and could cause an exception to be thrown.</source>
          <target state="translated">Wenn Sie einen Satz von Zeichen mit einer bestimmten kultureinstellung kompilieren und dieser dieselben Zeichen mit einer anderen kultureinstellung abrufen, der Zeichen können nicht interpretiert werden und können dazu führen, dass eine Ausnahme ausgelöst werden.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.#ctor(Microsoft.Win32.SafeHandles.SafeFileHandle,System.IO.FileAccess)">
          <source><ph id="ph1">`FileShare.Read`</ph> is the default for those <ph id="ph2">&lt;xref:System.IO.FileStream&gt;</ph> constructors without a <ph id="ph3">`FileShare`</ph> parameter.</source>
          <target state="translated"><ph id="ph1">`FileShare.Read`</ph> ist der Standardwert für diese <ph id="ph2">&lt;xref:System.IO.FileStream&gt;</ph> Konstruktoren ohne eine <ph id="ph3">`FileShare`</ph> Parameter.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.#ctor(Microsoft.Win32.SafeHandles.SafeFileHandle,System.IO.FileAccess)">
          <source>For a list of common file and directory operations, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</source>
          <target state="translated">Eine Liste der allgemeinen Datei- und Verzeichnisvorgänge, finden Sie unter <bpt id="p1">[</bpt>allgemeine e/a-Aufgaben<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.#ctor(Microsoft.Win32.SafeHandles.SafeFileHandle,System.IO.FileAccess)">
          <source><ph id="ph1">&lt;paramref name="access" /&gt;</ph> is not a field of <ph id="ph2">&lt;see cref="T:System.IO.FileAccess" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="access" /&gt;</ph> ist kein Feld von <ph id="ph2">&lt;see cref="T:System.IO.FileAccess" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.#ctor(Microsoft.Win32.SafeHandles.SafeFileHandle,System.IO.FileAccess)">
          <source>The caller does not have the required permission.</source>
          <target state="translated">Der Aufrufer verfügt nicht über die erforderliche Berechtigung.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.#ctor(Microsoft.Win32.SafeHandles.SafeFileHandle,System.IO.FileAccess)">
          <source>An I/O error, such as a disk error, occurred.</source>
          <target state="translated">Es ist ein E/A-Fehler (z. B. ein Datenträgerfehler) aufgetreten.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.#ctor(Microsoft.Win32.SafeHandles.SafeFileHandle,System.IO.FileAccess)">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.#ctor(Microsoft.Win32.SafeHandles.SafeFileHandle,System.IO.FileAccess)">
          <source>The stream has been closed.</source>
          <target state="translated">Der Stream wurde geschlossen.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.#ctor(Microsoft.Win32.SafeHandles.SafeFileHandle,System.IO.FileAccess)">
          <source>The <ph id="ph1">&lt;paramref name="access" /&gt;</ph> requested is not permitted by the operating system for the specified file handle, such as when <ph id="ph2">&lt;paramref name="access" /&gt;</ph> is <ph id="ph3">&lt;see langword="Write" /&gt;</ph> or <ph id="ph4">&lt;see langword="ReadWrite" /&gt;</ph> and the file handle is set for read-only access.</source>
          <target state="translated">Der angeforderte <ph id="ph1">&lt;paramref name="access" /&gt;</ph> für das angegebene Dateihandle wird durch das Betriebssystem nicht zugelassen. Dies ist z. B. der Fall, wenn <ph id="ph3">&lt;see langword="Write" /&gt;</ph> oder <ph id="ph4">&lt;see langword="ReadWrite" /&gt;</ph> für <ph id="ph2">&lt;paramref name="access" /&gt;</ph> festgelegt sind und das Dateihandle auf schreibgeschützten Zugriff festgelegt ist.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.#ctor(Microsoft.Win32.SafeHandles.SafeFileHandle,System.IO.FileAccess)">
          <source>for reading, writing, and appending to files.</source>
          <target state="translated">zum Lesen, schreiben und Anfügen von Dateien.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.#ctor(Microsoft.Win32.SafeHandles.SafeFileHandle,System.IO.FileAccess)">
          <source>Associated enumerations: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /&gt;</ph>, <ph id="ph2">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /&gt;</ph>, and <ph id="ph3">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Append" /&gt;</ph>.</source>
          <target state="translated">Zugeordnete Enumerationen: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /&gt;</ph>, <ph id="ph2">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /&gt;</ph>, und <ph id="ph3">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Append" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.#ctor(System.IntPtr,System.IO.FileAccess)">
          <source>A file handle for the file that the current <ph id="ph1">&lt;see langword="FileStream" /&gt;</ph> object will encapsulate.</source>
          <target state="translated">Ein Dateihandle für die Datei, die vom aktuellen <ph id="ph1">&lt;see langword="FileStream" /&gt;</ph>-Objekt gekapselt wird.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.#ctor(System.IntPtr,System.IO.FileAccess)">
          <source>A constant that sets the <ph id="ph1">&lt;see cref="P:System.IO.FileStream.CanRead" /&gt;</ph> and <ph id="ph2">&lt;see cref="P:System.IO.FileStream.CanWrite" /&gt;</ph> properties of the <ph id="ph3">&lt;see langword="FileStream" /&gt;</ph> object.</source>
          <target state="translated">Eine Konstante, die die <ph id="ph1">&lt;see cref="P:System.IO.FileStream.CanRead" /&gt;</ph>-Eigenschaft und die <ph id="ph2">&lt;see cref="P:System.IO.FileStream.CanWrite" /&gt;</ph>-Eigenschaft des <ph id="ph3">&lt;see langword="FileStream" /&gt;</ph>-Objekts festlegt.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.#ctor(System.IntPtr,System.IO.FileAccess)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.IO.FileStream" /&gt;</ph> class for the specified file handle, with the specified read/write permission.</source>
          <target state="translated">Initialisiert eine neue Instanz der <ph id="ph1">&lt;see cref="T:System.IO.FileStream" /&gt;</ph>-Klasse für das angegebene Dateihandle und mit der angegebenen Lese- und Schreibberechtigung.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.#ctor(System.IntPtr,System.IO.FileAccess)">
          <source>When <ph id="ph1">&lt;xref:System.IO.Stream.Close%2A&gt;</ph> is called, the handle is also closed and the file's handle count is decremented.</source>
          <target state="translated">Wenn <ph id="ph1">&lt;xref:System.IO.Stream.Close%2A&gt;</ph> wird aufgerufen, wird auch das Handle geschlossen und die Handleanzahl für die Datei wird wieder um eins erniedrigt.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.#ctor(System.IntPtr,System.IO.FileAccess)">
          <source><ph id="ph1">`FileStream`</ph> assumes that it has exclusive control over the handle.</source>
          <target state="translated"><ph id="ph1">`FileStream`</ph> wird davon ausgegangen, dass sie die exklusive Kontrolle über das Handle besitzt.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.#ctor(System.IntPtr,System.IO.FileAccess)">
          <source>Reading, writing, or seeking while a <ph id="ph1">`FileStream`</ph> is also holding a handle could result in data corruption.</source>
          <target state="translated">Lesen, schreiben oder beim Suchen einer <ph id="ph1">`FileStream`</ph> enthalten auch ein Handle zu beschädigten Daten führen.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.#ctor(System.IntPtr,System.IO.FileAccess)">
          <source>For data safety, call <ph id="ph1">&lt;xref:System.IO.FileStream.Flush%2A&gt;</ph> before using the handle, and avoid calling any methods other than <ph id="ph2">`Close`</ph> after you are done using the handle.</source>
          <target state="translated">Rufen Sie Daten aus Sicherheitsgründen <ph id="ph1">&lt;xref:System.IO.FileStream.Flush%2A&gt;</ph> vor Verwendung des Handles, und vermeiden Sie durch Aufrufen von Methoden außer <ph id="ph2">`Close`</ph> Sie abschließend mit dem Handle.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.#ctor(System.IntPtr,System.IO.FileAccess)">
          <source>When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable, and could cause an exception to be thrown.</source>
          <target state="translated">Wenn Sie einen Satz von Zeichen mit einer bestimmten kultureinstellung kompilieren und dieser dieselben Zeichen mit einer anderen kultureinstellung abrufen, der Zeichen können nicht interpretiert werden und können dazu führen, dass eine Ausnahme ausgelöst werden.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.#ctor(System.IntPtr,System.IO.FileAccess)">
          <source><ph id="ph1">`FileShare.Read`</ph> is the default for those <ph id="ph2">&lt;xref:System.IO.FileStream&gt;</ph> constructors without a <ph id="ph3">`FileShare`</ph> parameter.</source>
          <target state="translated"><ph id="ph1">`FileShare.Read`</ph> ist der Standardwert für diese <ph id="ph2">&lt;xref:System.IO.FileStream&gt;</ph> Konstruktoren ohne eine <ph id="ph3">`FileShare`</ph> Parameter.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.#ctor(System.IntPtr,System.IO.FileAccess)">
          <source>For a list of common file and directory operations, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</source>
          <target state="translated">Eine Liste der allgemeinen Datei- und Verzeichnisvorgänge, finden Sie unter <bpt id="p1">[</bpt>allgemeine e/a-Aufgaben<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.#ctor(System.IntPtr,System.IO.FileAccess)">
          <source><ph id="ph1">&lt;paramref name="access" /&gt;</ph> is not a field of <ph id="ph2">&lt;see cref="T:System.IO.FileAccess" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="access" /&gt;</ph> ist kein Feld von <ph id="ph2">&lt;see cref="T:System.IO.FileAccess" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.#ctor(System.IntPtr,System.IO.FileAccess)">
          <source>The caller does not have the required permission.</source>
          <target state="translated">Der Aufrufer verfügt nicht über die erforderliche Berechtigung.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.#ctor(System.IntPtr,System.IO.FileAccess)">
          <source>An I/O error, such as a disk error, occurred.</source>
          <target state="translated">Es ist ein E/A-Fehler (z. B. ein Datenträgerfehler) aufgetreten.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.#ctor(System.IntPtr,System.IO.FileAccess)">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.#ctor(System.IntPtr,System.IO.FileAccess)">
          <source>The stream has been closed.</source>
          <target state="translated">Der Stream wurde geschlossen.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.#ctor(System.IntPtr,System.IO.FileAccess)">
          <source>The <ph id="ph1">&lt;paramref name="access" /&gt;</ph> requested is not permitted by the operating system for the specified file handle, such as when <ph id="ph2">&lt;paramref name="access" /&gt;</ph> is <ph id="ph3">&lt;see langword="Write" /&gt;</ph> or <ph id="ph4">&lt;see langword="ReadWrite" /&gt;</ph> and the file handle is set for read-only access.</source>
          <target state="translated">Der angeforderte <ph id="ph1">&lt;paramref name="access" /&gt;</ph> für das angegebene Dateihandle wird durch das Betriebssystem nicht zugelassen. Dies ist z. B. der Fall, wenn <ph id="ph3">&lt;see langword="Write" /&gt;</ph> oder <ph id="ph4">&lt;see langword="ReadWrite" /&gt;</ph> für <ph id="ph2">&lt;paramref name="access" /&gt;</ph> festgelegt sind und das Dateihandle auf schreibgeschützten Zugriff festgelegt ist.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.#ctor(System.IntPtr,System.IO.FileAccess)">
          <source>for reading, writing, and appending to files.</source>
          <target state="translated">zum Lesen, schreiben und Anfügen von Dateien.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.#ctor(System.IntPtr,System.IO.FileAccess)">
          <source>Associated enumerations: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /&gt;</ph>, <ph id="ph2">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /&gt;</ph>, and <ph id="ph3">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Append" /&gt;</ph>.</source>
          <target state="translated">Zugeordnete Enumerationen: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /&gt;</ph>, <ph id="ph2">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /&gt;</ph>, und <ph id="ph3">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Append" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode)">
          <source>A relative or absolute path for the file that the current <ph id="ph1">&lt;see langword="FileStream" /&gt;</ph> object will encapsulate.</source>
          <target state="translated">Ein relativer oder absoluter Pfad zu der Datei, die vom aktuellen <ph id="ph1">&lt;see langword="FileStream" /&gt;</ph>-Objekt gekapselt wird.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode)">
          <source>A constant that determines how to open or create the file.</source>
          <target state="translated">Eine Konstante, die bestimmt, auf welche Weise die Datei geöffnet oder erstellt werden soll.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.IO.FileStream" /&gt;</ph> class with the specified path and creation mode.</source>
          <target state="translated">Initialisiert eine neue Instanz der <ph id="ph1">&lt;see cref="T:System.IO.FileStream" /&gt;</ph>-Klasse mit dem angegebenen Pfad und dem angegebenen Erstellungsmodus.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode)">
          <source>The .NET Framework does not support direct access to physical disks through paths that are device names, such as "<ph id="ph1">\\</ph><ph id="ph2">\\</ph>.\PHYSICALDRIVE0 ".</source>
          <target state="translated">.NET Framework unterstützt keine direkten Zugriff auf physische Datenträger über Pfade, Gerätenamen, z. B. "<ph id="ph1">\\</ph><ph id="ph2">\\</ph>. \PHYSICALDRIVE0".</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode)">
          <source>The <ph id="ph1">`path`</ph> parameter can be a file name, including a file on a Universal Naming Convention (UNC) share.</source>
          <target state="translated">Die <ph id="ph1">`path`</ph> Parameter kann einen Dateinamen, einschließlich einer Datei auf einer Freigabe (UNC = Universal Naming Convention) sein.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode)">
          <source>The constructor is given read/write access to the file, and it is opened sharing Read access (that is, requests to open the file for writing by this or another process will fail until the <ph id="ph1">`FileStream`</ph> object has been closed, but read attempts will succeed).</source>
          <target state="translated">Der Konstruktor erhält Lese-/Schreibzugriff auf die Datei, und es wird geöffnet, und der Lesezugriff freigegeben (d. h. die Anforderungen zum Öffnen der Datei für das Schreiben von diesem oder einem anderen Prozess bis misslingen, die <ph id="ph1">`FileStream`</ph> Objekt geschlossen wurde, aber lesen versucht wird erfolgreich ausgeführt werden).</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode)">
          <source>You cannot use this constructor to open read-only files; instead, you must use a constructor that accepts a <ph id="ph1">`FileAccess`</ph> parameter with the value set to <ph id="ph2">`FileAccess.Read`</ph>.</source>
          <target state="translated">Dieser Konstruktor können keine um schreibgeschützten Dateien zu öffnen; Stattdessen müssen Sie einen Konstruktor, der akzeptiert verwenden eine <ph id="ph1">`FileAccess`</ph> Parameter mit dem Wert <ph id="ph2">`FileAccess.Read`</ph>.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode)">
          <source>The buffer size is set to the default size of 4096 bytes (4 KB).</source>
          <target state="translated">Die Größe des Puffers wird auf die Standardgröße von 4096 Bytes (4 KB) festgelegt.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode)">
          <source><ph id="ph1">`path`</ph> is not required to be a file stored on disk; it can be any part of a system that supports access through streams.</source>
          <target state="translated"><ph id="ph1">`path`</ph> ist nicht erforderlich, um eine Datei auf dem Datenträger gespeichert werden. Es kann einen beliebigen Teil eines Systems, die Zugriff über Datenströme unterstützt.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode)">
          <source>For example, depending on the system, this class can access a physical device.</source>
          <target state="translated">Je nach System kann diese Klasse z. B. ein physisches Gerät zugreifen.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode)">
          <source><ph id="ph1">&lt;xref:System.IO.Stream.CanSeek%2A&gt;</ph> is <ph id="ph2">`true`</ph> for all <ph id="ph3">&lt;xref:System.IO.FileStream&gt;</ph> objects that encapsulate files.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.Stream.CanSeek%2A&gt;</ph> ist <ph id="ph2">`true`</ph> für alle <ph id="ph3">&lt;xref:System.IO.FileStream&gt;</ph> Objekte, die Dateien zu kapseln.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode)">
          <source>If <ph id="ph1">`path`</ph> indicates a device that does not support seeking, the <ph id="ph2">&lt;xref:System.IO.FileStream.CanSeek%2A&gt;</ph> property on the resulting <ph id="ph3">&lt;xref:System.IO.FileStream&gt;</ph> is <ph id="ph4">`false`</ph>.</source>
          <target state="translated">Wenn <ph id="ph1">`path`</ph> gibt an, ein Gerät, das keine Suchvorgänge, unterstützt die <ph id="ph2">&lt;xref:System.IO.FileStream.CanSeek%2A&gt;</ph> Eigenschaft für die resultierende <ph id="ph3">&lt;xref:System.IO.FileStream&gt;</ph> ist <ph id="ph4">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode)">
          <source>For additional information, see <ph id="ph1">&lt;xref:System.IO.Stream.CanSeek%2A&gt;</ph>.</source>
          <target state="translated">Weitere Informationen finden Sie unter <ph id="ph1">&lt;xref:System.IO.Stream.CanSeek%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode)">
          <source><ph id="ph1">`FileShare.Read`</ph> is the default for those <ph id="ph2">&lt;xref:System.IO.FileStream&gt;</ph> constructors without a <ph id="ph3">`FileShare`</ph> parameter.</source>
          <target state="translated"><ph id="ph1">`FileShare.Read`</ph> ist der Standardwert für diese <ph id="ph2">&lt;xref:System.IO.FileStream&gt;</ph> Konstruktoren ohne eine <ph id="ph3">`FileShare`</ph> Parameter.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode)">
          <source>For constructors without a <ph id="ph1">&lt;xref:System.IO.FileAccess&gt;</ph> parameter, if the <ph id="ph2">`mode`</ph> parameter is set to <ph id="ph3">&lt;xref:System.IO.FileMode.Append&gt;</ph>, <ph id="ph4">&lt;xref:System.IO.FileAccess.Write&gt;</ph> is the default access.</source>
          <target state="translated">Für Konstruktoren ohne eine <ph id="ph1">&lt;xref:System.IO.FileAccess&gt;</ph> Parameter, wenn die <ph id="ph2">`mode`</ph> Parametersatz auf <ph id="ph3">&lt;xref:System.IO.FileMode.Append&gt;</ph>, <ph id="ph4">&lt;xref:System.IO.FileAccess.Write&gt;</ph> ist der Standardzugriff.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode)">
          <source>Otherwise, the access is set to <ph id="ph1">&lt;xref:System.IO.FileAccess.ReadWrite&gt;</ph>.</source>
          <target state="translated">Andernfalls wird der Zugriff auf festgelegt <ph id="ph1">&lt;xref:System.IO.FileAccess.ReadWrite&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode)">
          <source>When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable, and could cause an exception to be thrown.</source>
          <target state="translated">Wenn Sie einen Satz von Zeichen mit einer bestimmten kultureinstellung kompilieren und dieser dieselben Zeichen mit einer anderen kultureinstellung abrufen, der Zeichen können nicht interpretiert werden und können dazu führen, dass eine Ausnahme ausgelöst werden.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode)">
          <source>For a list of common file and directory operations, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</source>
          <target state="translated">Eine Liste der allgemeinen Datei- und Verzeichnisvorgänge, finden Sie unter <bpt id="p1">[</bpt>allgemeine e/a-Aufgaben<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode)">
          <source>The following code example shows how to write data to a file, byte by byte, and then verify that the data was written correctly.</source>
          <target state="translated">Im folgenden Codebeispiel wird veranschaulicht, wie zum Schreiben von Daten in eine Datei byteweise, und überprüfen, dass die Daten richtig geschrieben wurde.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode)">
          <source><ph id="ph1">&lt;paramref name="path" /&gt;</ph> is an empty string (""), contains only white space, or contains one or more invalid characters.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph> ist eine leere Zeichenfolge (""), enthält nur Leerzeichen oder enthält mindestens ein ungültiges Zeichen.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode)">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode)">
          <source><ph id="ph1">&lt;paramref name="path" /&gt;</ph> refers to a non-file device, such as "con:", "com1:", "lpt1:", etc. in an NTFS environment.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph> verweist auf ein Gerät, das keine Datei ist, z. B. "con:", "com1:", "lpt1:" usw. in einer NTFS-Umgebung.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode)">
          <source><ph id="ph1">&lt;paramref name="path" /&gt;</ph> refers to a non-file device, such as "con:", "com1:", "lpt1:", etc. in a non-NTFS environment.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph> verweist auf ein Gerät, das keine Datei ist, z. B. "con:", "com1:", "lpt1:" usw. in einer Nicht-NTFS-Umgebung.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode)">
          <source><ph id="ph1">&lt;paramref name="path" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode)">
          <source>The caller does not have the required permission.</source>
          <target state="translated">Der Aufrufer verfügt nicht über die erforderliche Berechtigung.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode)">
          <source>The file cannot be found, such as when <ph id="ph1">&lt;paramref name="mode" /&gt;</ph> is <ph id="ph2">&lt;see langword="FileMode.Truncate" /&gt;</ph> or <ph id="ph3">&lt;see langword="FileMode.Open" /&gt;</ph>, and the file specified by <ph id="ph4">&lt;paramref name="path" /&gt;</ph> does not exist.</source>
          <target state="translated">Die Datei kann nicht gefunden werden. Dies ist z. B. der Fall, wenn <ph id="ph1">&lt;paramref name="mode" /&gt;</ph> auf <ph id="ph2">&lt;see langword="FileMode.Truncate" /&gt;</ph> oder <ph id="ph3">&lt;see langword="FileMode.Open" /&gt;</ph> festgelegt wurde und die durch <ph id="ph4">&lt;paramref name="path" /&gt;</ph> angegebene Datei nicht vorhanden ist.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode)">
          <source>The file must already exist in these modes.</source>
          <target state="translated">Die Datei muss bereits in diesen Modi vorhanden sein.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode)">
          <source>An I/O error, such as specifying <ph id="ph1">&lt;see langword="FileMode.CreateNew" /&gt;</ph> when the file specified by <ph id="ph2">&lt;paramref name="path" /&gt;</ph> already exists, occurred.</source>
          <target state="translated">Es ist ein E/A-Fehler aufgetreten, beispielsweise wurde <ph id="ph1">&lt;see langword="FileMode.CreateNew" /&gt;</ph> angegeben, und die durch <ph id="ph2">&lt;paramref name="path" /&gt;</ph> angegebene Datei ist bereits vorhanden.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode)">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode)">
          <source>The stream has been closed.</source>
          <target state="translated">Der Stream wurde geschlossen.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode)">
          <source>The specified path is invalid, such as being on an unmapped drive.</source>
          <target state="translated">Der angegebene Pfad ist ungültig, z. B. befindet er sich auf einem nicht zugeordneten Laufwerk.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode)">
          <source>The specified path, file name, or both exceed the system-defined maximum length.</source>
          <target state="translated">Der angegebene Pfad und/oder Dateiname überschreiten die vom System definierte maximale Länge.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode)">
          <source>For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.</source>
          <target state="translated">Beispielsweise müssen auf Windows-basierten Plattformen Pfade weniger als 248 Zeichen und Dateinamen weniger als 260 Zeichen enthalten.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode)">
          <source><ph id="ph1">&lt;paramref name="mode" /&gt;</ph> contains an invalid value.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="mode" /&gt;</ph> enthält einen ungültigen Wert.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode)">
          <source>for reading, writing, and appending to files.</source>
          <target state="translated">zum Lesen, schreiben und Anfügen von Dateien.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode)">
          <source>Associated enumerations: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /&gt;</ph>, <ph id="ph2">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /&gt;</ph>, and <ph id="ph3">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Append" /&gt;</ph>.</source>
          <target state="translated">Zugeordnete Enumerationen: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /&gt;</ph>, <ph id="ph2">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /&gt;</ph>, und <ph id="ph3">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Append" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.#ctor(Microsoft.Win32.SafeHandles.SafeFileHandle,System.IO.FileAccess,System.Int32)">
          <source>A file handle for the file that the current <ph id="ph1">&lt;see langword="FileStream" /&gt;</ph> object will encapsulate.</source>
          <target state="translated">Ein Dateihandle für die Datei, die vom aktuellen <ph id="ph1">&lt;see langword="FileStream" /&gt;</ph>-Objekt gekapselt wird.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.#ctor(Microsoft.Win32.SafeHandles.SafeFileHandle,System.IO.FileAccess,System.Int32)">
          <source>A <ph id="ph1">&lt;see cref="T:System.IO.FileAccess" /&gt;</ph> constant that sets the <ph id="ph2">&lt;see cref="P:System.IO.FileStream.CanRead" /&gt;</ph> and <ph id="ph3">&lt;see cref="P:System.IO.FileStream.CanWrite" /&gt;</ph> properties of the <ph id="ph4">&lt;see langword="FileStream" /&gt;</ph> object.</source>
          <target state="translated">Eine <ph id="ph1">&lt;see cref="T:System.IO.FileAccess" /&gt;</ph>-Konstante, die die <ph id="ph2">&lt;see cref="P:System.IO.FileStream.CanRead" /&gt;</ph>- und <ph id="ph3">&lt;see cref="P:System.IO.FileStream.CanWrite" /&gt;</ph>-Eigenschaften des <ph id="ph4">&lt;see langword="FileStream" /&gt;</ph>-Objekts festlegt.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.#ctor(Microsoft.Win32.SafeHandles.SafeFileHandle,System.IO.FileAccess,System.Int32)">
          <source>A positive <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> value greater than 0 indicating the buffer size.</source>
          <target state="translated">Ein positiver <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph>-Wert größer als 0 (null), der die Puffergröße angibt.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.#ctor(Microsoft.Win32.SafeHandles.SafeFileHandle,System.IO.FileAccess,System.Int32)">
          <source>The default buffer size is 4096.</source>
          <target state="translated">Die Standardpuffergröße ist 4096.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.#ctor(Microsoft.Win32.SafeHandles.SafeFileHandle,System.IO.FileAccess,System.Int32)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.IO.FileStream" /&gt;</ph> class for the specified file handle, with the specified read/write permission, and buffer size.</source>
          <target state="translated">Initialisiert eine neue Instanz der <ph id="ph1">&lt;see cref="T:System.IO.FileStream" /&gt;</ph>-Klasse für das angegebene Dateihandle mit den Angaben für die Lese-/Schreibberechtigung und die Puffergröße.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.#ctor(Microsoft.Win32.SafeHandles.SafeFileHandle,System.IO.FileAccess,System.Int32)">
          <source><ph id="ph1">`FileStream`</ph> assumes that it has exclusive control over the handle.</source>
          <target state="translated"><ph id="ph1">`FileStream`</ph> wird davon ausgegangen, dass sie die exklusive Kontrolle über das Handle besitzt.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.#ctor(Microsoft.Win32.SafeHandles.SafeFileHandle,System.IO.FileAccess,System.Int32)">
          <source>Reading, writing, or seeking while a <ph id="ph1">`FileStream`</ph> is also holding a handle could result in data corruption.</source>
          <target state="translated">Lesen, schreiben oder beim Suchen einer <ph id="ph1">`FileStream`</ph> enthalten auch ein Handle zu beschädigten Daten führen.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.#ctor(Microsoft.Win32.SafeHandles.SafeFileHandle,System.IO.FileAccess,System.Int32)">
          <source>For data safety, call <ph id="ph1">&lt;xref:System.IO.FileStream.Flush%2A&gt;</ph> before using the handle, and avoid calling any methods other than <ph id="ph2">`Close`</ph> after you are done using the handle.</source>
          <target state="translated">Rufen Sie Daten aus Sicherheitsgründen <ph id="ph1">&lt;xref:System.IO.FileStream.Flush%2A&gt;</ph> vor Verwendung des Handles, und vermeiden Sie durch Aufrufen von Methoden außer <ph id="ph2">`Close`</ph> Sie abschließend mit dem Handle.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.#ctor(Microsoft.Win32.SafeHandles.SafeFileHandle,System.IO.FileAccess,System.Int32)">
          <source>Alternately, read and write to the handle before calling this <ph id="ph1">`FileStream`</ph> constructor.</source>
          <target state="translated">Klicken Sie alternativ lesen und Schreiben in das Handle vor dem Aufrufen dieser <ph id="ph1">`FileStream`</ph> Konstruktor.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.#ctor(Microsoft.Win32.SafeHandles.SafeFileHandle,System.IO.FileAccess,System.Int32)">
          <source><ph id="ph1">`FileShare.Read`</ph> is the default for those <ph id="ph2">&lt;xref:System.IO.FileStream&gt;</ph> constructors without a <ph id="ph3">`FileShare`</ph> parameter.</source>
          <target state="translated"><ph id="ph1">`FileShare.Read`</ph> ist der Standardwert für diese <ph id="ph2">&lt;xref:System.IO.FileStream&gt;</ph> Konstruktoren ohne eine <ph id="ph3">`FileShare`</ph> Parameter.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.#ctor(Microsoft.Win32.SafeHandles.SafeFileHandle,System.IO.FileAccess,System.Int32)">
          <source>When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable, and could cause an exception to be thrown.</source>
          <target state="translated">Wenn Sie einen Satz von Zeichen mit einer bestimmten kultureinstellung kompilieren und dieser dieselben Zeichen mit einer anderen kultureinstellung abrufen, der Zeichen können nicht interpretiert werden und können dazu führen, dass eine Ausnahme ausgelöst werden.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.#ctor(Microsoft.Win32.SafeHandles.SafeFileHandle,System.IO.FileAccess,System.Int32)">
          <source>For a list of common file and directory operations, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</source>
          <target state="translated">Eine Liste der allgemeinen Datei- und Verzeichnisvorgänge, finden Sie unter <bpt id="p1">[</bpt>allgemeine e/a-Aufgaben<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.#ctor(Microsoft.Win32.SafeHandles.SafeFileHandle,System.IO.FileAccess,System.Int32)">
          <source>The <ph id="ph1">&lt;paramref name="handle" /&gt;</ph> parameter is an invalid handle.</source>
          <target state="translated">Der <ph id="ph1">&lt;paramref name="handle" /&gt;</ph>-Parameter ist ein ungültiges Handle.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.#ctor(Microsoft.Win32.SafeHandles.SafeFileHandle,System.IO.FileAccess,System.Int32)">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.#ctor(Microsoft.Win32.SafeHandles.SafeFileHandle,System.IO.FileAccess,System.Int32)">
          <source>The <ph id="ph1">&lt;paramref name="handle" /&gt;</ph> parameter is a synchronous handle and it was used asynchronously.</source>
          <target state="translated">Der <ph id="ph1">&lt;paramref name="handle" /&gt;</ph>-Parameter ist ein synchrones Handle und wurde asynchron verwendet.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.#ctor(Microsoft.Win32.SafeHandles.SafeFileHandle,System.IO.FileAccess,System.Int32)">
          <source>The <ph id="ph1">&lt;paramref name="bufferSize" /&gt;</ph> parameter is negative.</source>
          <target state="translated">Der <ph id="ph1">&lt;paramref name="bufferSize" /&gt;</ph>-Parameter ist negativ.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.#ctor(Microsoft.Win32.SafeHandles.SafeFileHandle,System.IO.FileAccess,System.Int32)">
          <source>An I/O error, such as a disk error, occurred.</source>
          <target state="translated">Ein E/A-Fehler, z. B. ein Datenträgerfehler ist aufgetreten.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.#ctor(Microsoft.Win32.SafeHandles.SafeFileHandle,System.IO.FileAccess,System.Int32)">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.#ctor(Microsoft.Win32.SafeHandles.SafeFileHandle,System.IO.FileAccess,System.Int32)">
          <source>The stream has been closed.</source>
          <target state="translated">Der Stream wurde geschlossen.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.#ctor(Microsoft.Win32.SafeHandles.SafeFileHandle,System.IO.FileAccess,System.Int32)">
          <source>The caller does not have the required permission.</source>
          <target state="translated">Der Aufrufer verfügt nicht über die erforderliche Berechtigung.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.#ctor(Microsoft.Win32.SafeHandles.SafeFileHandle,System.IO.FileAccess,System.Int32)">
          <source>The <ph id="ph1">&lt;paramref name="access" /&gt;</ph> requested is not permitted by the operating system for the specified file handle, such as when <ph id="ph2">&lt;paramref name="access" /&gt;</ph> is <ph id="ph3">&lt;see langword="Write" /&gt;</ph> or <ph id="ph4">&lt;see langword="ReadWrite" /&gt;</ph> and the file handle is set for read-only access.</source>
          <target state="translated">Der angeforderte <ph id="ph1">&lt;paramref name="access" /&gt;</ph> für das angegebene Dateihandle wird durch das Betriebssystem nicht zugelassen. Dies ist z. B. der Fall, wenn <ph id="ph3">&lt;see langword="Write" /&gt;</ph> oder <ph id="ph4">&lt;see langword="ReadWrite" /&gt;</ph> für <ph id="ph2">&lt;paramref name="access" /&gt;</ph> festgelegt sind und das Dateihandle auf schreibgeschützten Zugriff festgelegt ist.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.#ctor(Microsoft.Win32.SafeHandles.SafeFileHandle,System.IO.FileAccess,System.Int32)">
          <source>for reading, writing, and appending to files.</source>
          <target state="translated">zum Lesen, schreiben und Anfügen von Dateien.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.#ctor(Microsoft.Win32.SafeHandles.SafeFileHandle,System.IO.FileAccess,System.Int32)">
          <source>Associated enumerations: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /&gt;</ph>, <ph id="ph2">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /&gt;</ph>, and <ph id="ph3">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Append" /&gt;</ph>.</source>
          <target state="translated">Zugeordnete Enumerationen: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /&gt;</ph>, <ph id="ph2">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /&gt;</ph>, und <ph id="ph3">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Append" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.#ctor(Microsoft.Win32.SafeHandles.SafeFileHandle,System.IO.FileAccess,System.Int32)">
          <source>for permission to call unmanaged code.</source>
          <target state="translated">für die Berechtigung zum Aufrufen von nicht verwalteten Codes.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.#ctor(Microsoft.Win32.SafeHandles.SafeFileHandle,System.IO.FileAccess,System.Int32)">
          <source>Associated enumerations: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></source>
          <target state="translated">Zugeordnete Enumerationen: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.#ctor(System.IntPtr,System.IO.FileAccess,System.Boolean)">
          <source>A file handle for the file that the current <ph id="ph1">&lt;see langword="FileStream" /&gt;</ph> object will encapsulate.</source>
          <target state="translated">Ein Dateihandle für die Datei, die vom aktuellen <ph id="ph1">&lt;see langword="FileStream" /&gt;</ph>-Objekt gekapselt wird.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.#ctor(System.IntPtr,System.IO.FileAccess,System.Boolean)">
          <source>A constant that sets the <ph id="ph1">&lt;see cref="P:System.IO.FileStream.CanRead" /&gt;</ph> and <ph id="ph2">&lt;see cref="P:System.IO.FileStream.CanWrite" /&gt;</ph> properties of the <ph id="ph3">&lt;see langword="FileStream" /&gt;</ph> object.</source>
          <target state="translated">Eine Konstante, die die <ph id="ph1">&lt;see cref="P:System.IO.FileStream.CanRead" /&gt;</ph>-Eigenschaft und die <ph id="ph2">&lt;see cref="P:System.IO.FileStream.CanWrite" /&gt;</ph>-Eigenschaft des <ph id="ph3">&lt;see langword="FileStream" /&gt;</ph>-Objekts festlegt.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.#ctor(System.IntPtr,System.IO.FileAccess,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the file handle will be owned by this <ph id="ph2">&lt;see langword="FileStream" /&gt;</ph> instance; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, wenn das Dateihandle im Besitz dieser <ph id="ph2">&lt;see langword="FileStream" /&gt;</ph>-Instanz sein wird, andernfalls <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.#ctor(System.IntPtr,System.IO.FileAccess,System.Boolean)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.IO.FileStream" /&gt;</ph> class for the specified file handle, with the specified read/write permission and <ph id="ph2">&lt;see langword="FileStream" /&gt;</ph> instance ownership.</source>
          <target state="translated">Initialisiert eine neue Instanz der <ph id="ph1">&lt;see cref="T:System.IO.FileStream" /&gt;</ph>-Klasse für das angegebene Dateihandle mit den Angaben für die Lese-/Schreibberechtigung und für den Besitz der <ph id="ph2">&lt;see langword="FileStream" /&gt;</ph>-Instanz.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.#ctor(System.IntPtr,System.IO.FileAccess,System.Boolean)">
          <source>The <ph id="ph1">`FileStream`</ph> object is given the specified access to the file.</source>
          <target state="translated">Die <ph id="ph1">`FileStream`</ph> Objekt erhält den angegebenen Zugriff auf die Datei.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.#ctor(System.IntPtr,System.IO.FileAccess,System.Boolean)">
          <source>The ownership of the handle will be as specified.</source>
          <target state="translated">Der Besitz des Handles werden wie angegeben.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.#ctor(System.IntPtr,System.IO.FileAccess,System.Boolean)">
          <source>If this process owns the handle, a call to the <ph id="ph1">&lt;xref:System.IO.Stream.Close%2A&gt;</ph> method will also close the handle and the file's handle count is decremented.</source>
          <target state="translated">Wenn der Prozess das Handle, das einen Aufruf von besitzt die <ph id="ph1">&lt;xref:System.IO.Stream.Close%2A&gt;</ph> Methode wird auch das Handle geschlossen und die Handleanzahl für die Datei wird verringert.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.#ctor(System.IntPtr,System.IO.FileAccess,System.Boolean)">
          <source>The <ph id="ph1">`FileStream`</ph> object is given the default buffer size of 4096 bytes.</source>
          <target state="translated">Die <ph id="ph1">`FileStream`</ph> Objekt erhält die Standardpuffergröße von 4096 Bytes.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.#ctor(System.IntPtr,System.IO.FileAccess,System.Boolean)">
          <source><ph id="ph1">`FileStream`</ph> assumes that it has exclusive control over the handle.</source>
          <target state="translated"><ph id="ph1">`FileStream`</ph> wird davon ausgegangen, dass sie die exklusive Kontrolle über das Handle besitzt.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.#ctor(System.IntPtr,System.IO.FileAccess,System.Boolean)">
          <source>Reading, writing, or seeking while a <ph id="ph1">`FileStream`</ph> is also holding a handle could result in data corruption.</source>
          <target state="translated">Lesen, schreiben oder beim Suchen einer <ph id="ph1">`FileStream`</ph> enthalten auch ein Handle zu beschädigten Daten führen.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.#ctor(System.IntPtr,System.IO.FileAccess,System.Boolean)">
          <source>For data safety, call <ph id="ph1">&lt;xref:System.IO.FileStream.Flush%2A&gt;</ph> before using the handle, and avoid calling methods other than <ph id="ph2">`Close`</ph> after you are done using the handle.</source>
          <target state="translated">Rufen Sie Daten aus Sicherheitsgründen <ph id="ph1">&lt;xref:System.IO.FileStream.Flush%2A&gt;</ph> vor Verwendung des Handles und zu vermeiden, Aufrufen von Methoden außer <ph id="ph2">`Close`</ph> Sie abschließend mit dem Handle.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.#ctor(System.IntPtr,System.IO.FileAccess,System.Boolean)">
          <source><ph id="ph1">`FileShare.Read`</ph> is the default for those <ph id="ph2">&lt;xref:System.IO.FileStream&gt;</ph> constructors without a <ph id="ph3">`FileShare`</ph> parameter.</source>
          <target state="translated"><ph id="ph1">`FileShare.Read`</ph> ist der Standardwert für diese <ph id="ph2">&lt;xref:System.IO.FileStream&gt;</ph> Konstruktoren ohne eine <ph id="ph3">`FileShare`</ph> Parameter.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.#ctor(System.IntPtr,System.IO.FileAccess,System.Boolean)">
          <source>When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable, and could cause an exception to be thrown.</source>
          <target state="translated">Wenn Sie einen Satz von Zeichen mit einer bestimmten kultureinstellung kompilieren und dieser dieselben Zeichen mit einer anderen kultureinstellung abrufen, der Zeichen können nicht interpretiert werden und können dazu führen, dass eine Ausnahme ausgelöst werden.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.#ctor(System.IntPtr,System.IO.FileAccess,System.Boolean)">
          <source>For a list of common file and directory operations, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</source>
          <target state="translated">Eine Liste der allgemeinen Datei- und Verzeichnisvorgänge, finden Sie unter <bpt id="p1">[</bpt>allgemeine e/a-Aufgaben<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.#ctor(System.IntPtr,System.IO.FileAccess,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="access" /&gt;</ph> is not a field of <ph id="ph2">&lt;see cref="T:System.IO.FileAccess" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="access" /&gt;</ph> ist kein Feld von <ph id="ph2">&lt;see cref="T:System.IO.FileAccess" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.#ctor(System.IntPtr,System.IO.FileAccess,System.Boolean)">
          <source>The caller does not have the required permission.</source>
          <target state="translated">Der Aufrufer verfügt nicht über die erforderliche Berechtigung.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.#ctor(System.IntPtr,System.IO.FileAccess,System.Boolean)">
          <source>An I/O error, such as a disk error, occurred.</source>
          <target state="translated">Es ist ein E/A-Fehler (z. B. ein Datenträgerfehler) aufgetreten.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.#ctor(System.IntPtr,System.IO.FileAccess,System.Boolean)">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.#ctor(System.IntPtr,System.IO.FileAccess,System.Boolean)">
          <source>The stream has been closed.</source>
          <target state="translated">Der Stream wurde geschlossen.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.#ctor(System.IntPtr,System.IO.FileAccess,System.Boolean)">
          <source>The <ph id="ph1">&lt;paramref name="access" /&gt;</ph> requested is not permitted by the operating system for the specified file handle, such as when <ph id="ph2">&lt;paramref name="access" /&gt;</ph> is <ph id="ph3">&lt;see langword="Write" /&gt;</ph> or <ph id="ph4">&lt;see langword="ReadWrite" /&gt;</ph> and the file handle is set for read-only access.</source>
          <target state="translated">Der angeforderte <ph id="ph1">&lt;paramref name="access" /&gt;</ph> für das angegebene Dateihandle wird durch das Betriebssystem nicht zugelassen. Dies ist z. B. der Fall, wenn <ph id="ph3">&lt;see langword="Write" /&gt;</ph> oder <ph id="ph4">&lt;see langword="ReadWrite" /&gt;</ph> für <ph id="ph2">&lt;paramref name="access" /&gt;</ph> festgelegt sind und das Dateihandle auf schreibgeschützten Zugriff festgelegt ist.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.#ctor(System.IntPtr,System.IO.FileAccess,System.Boolean)">
          <source>for reading, writing, and appending to files.</source>
          <target state="translated">zum Lesen, schreiben und Anfügen von Dateien.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.#ctor(System.IntPtr,System.IO.FileAccess,System.Boolean)">
          <source>Associated enumerations: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /&gt;</ph>, <ph id="ph2">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /&gt;</ph>, and <ph id="ph3">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Append" /&gt;</ph>.</source>
          <target state="translated">Zugeordnete Enumerationen: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /&gt;</ph>, <ph id="ph2">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /&gt;</ph>, und <ph id="ph3">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Append" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess)">
          <source>A relative or absolute path for the file that the current <ph id="ph1">&lt;see langword="FileStream" /&gt;</ph> object will encapsulate.</source>
          <target state="translated">Ein relativer oder absoluter Pfad zu der Datei, die vom aktuellen <ph id="ph1">&lt;see langword="FileStream" /&gt;</ph>-Objekt gekapselt wird.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess)">
          <source>A constant that determines how to open or create the file.</source>
          <target state="translated">Eine Konstante, die bestimmt, auf welche Weise die Datei geöffnet oder erstellt werden soll.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess)">
          <source>A constant that determines how the file can be accessed by the <ph id="ph1">&lt;see langword="FileStream" /&gt;</ph> object.</source>
          <target state="translated">Eine Konstante, die bestimmt, welcher Zugriff auf die Datei für das <ph id="ph1">&lt;see langword="FileStream" /&gt;</ph>-Objekt zulässig ist.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess)">
          <source>This also determines the values returned by the <ph id="ph1">&lt;see cref="P:System.IO.FileStream.CanRead" /&gt;</ph> and <ph id="ph2">&lt;see cref="P:System.IO.FileStream.CanWrite" /&gt;</ph> properties of the <ph id="ph3">&lt;see langword="FileStream" /&gt;</ph> object.</source>
          <target state="translated">Dies bestimmt ebenfalls die von den <ph id="ph1">&lt;see cref="P:System.IO.FileStream.CanRead" /&gt;</ph>- und <ph id="ph2">&lt;see cref="P:System.IO.FileStream.CanWrite" /&gt;</ph>-Eigenschaften des <ph id="ph3">&lt;see langword="FileStream" /&gt;</ph>-Objekts zurückgegebenen Werte.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess)">
          <source><ph id="ph1">&lt;see cref="P:System.IO.FileStream.CanSeek" /&gt;</ph> is <ph id="ph2">&lt;see langword="true" /&gt;</ph> if <bpt id="p1">&lt;c&gt;</bpt>path<ept id="p1">&lt;/c&gt;</ept> specifies a disk file.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.IO.FileStream.CanSeek" /&gt;</ph> ist <ph id="ph2">&lt;see langword="true" /&gt;</ph>, wenn <bpt id="p1">&lt;c&gt;</bpt>path<ept id="p1">&lt;/c&gt;</ept> eine Datei auf einem Datenträger darstellt.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.IO.FileStream" /&gt;</ph> class with the specified path, creation mode, and read/write permission.</source>
          <target state="translated">Initialisiert eine neue Instanz der <ph id="ph1">&lt;see cref="T:System.IO.FileStream" /&gt;</ph>-Klasse mit den Angaben für den Pfad, den Erstellungsmodus und die Lese-/Schreibberechtigung.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess)">
          <source>The .NET Framework does not support direct access to physical disks through paths that are device names, such as "<ph id="ph1">\\</ph><ph id="ph2">\\</ph>.\PHYSICALDRIVE0 ".</source>
          <target state="translated">.NET Framework unterstützt keine direkten Zugriff auf physische Datenträger über Pfade, Gerätenamen, z. B. "<ph id="ph1">\\</ph><ph id="ph2">\\</ph>. \PHYSICALDRIVE0".</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess)">
          <source>The <ph id="ph1">`path`</ph> parameter can be a file name, including a file on a Universal Naming Convention (UNC) share.</source>
          <target state="translated">Die <ph id="ph1">`path`</ph> Parameter kann einen Dateinamen, einschließlich einer Datei auf einer Freigabe (UNC = Universal Naming Convention) sein.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess)">
          <source>The constructor is given read/write access to the file, and it is opened sharing Read access (that is, requests to open the file for writing by this or another process will fail until the <ph id="ph1">`FileStream`</ph> object has been closed, but read attempts will succeed).</source>
          <target state="translated">Der Konstruktor erhält Lese-/Schreibzugriff auf die Datei, und es wird geöffnet, und der Lesezugriff freigegeben (d. h. die Anforderungen zum Öffnen der Datei für das Schreiben von diesem oder einem anderen Prozess bis misslingen, die <ph id="ph1">`FileStream`</ph> Objekt geschlossen wurde, aber lesen versucht wird erfolgreich ausgeführt werden).</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess)">
          <source>The buffer size is set to the default size of 4096 bytes (4 KB).</source>
          <target state="translated">Die Größe des Puffers wird auf die Standardgröße von 4096 Bytes (4 KB) festgelegt.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess)">
          <source><ph id="ph1">`path`</ph> is not required to be a file stored on disk; it can be any part of a system that supports access through streams.</source>
          <target state="translated"><ph id="ph1">`path`</ph> ist nicht erforderlich, um eine Datei auf dem Datenträger gespeichert werden. Es kann einen beliebigen Teil eines Systems, die Zugriff über Datenströme unterstützt.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess)">
          <source>For example, depending on the system, this class can access a physical device.</source>
          <target state="translated">Je nach System kann diese Klasse z. B. ein physisches Gerät zugreifen.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess)">
          <source><ph id="ph1">&lt;xref:System.IO.Stream.CanSeek%2A&gt;</ph> is <ph id="ph2">`true`</ph> for all <ph id="ph3">&lt;xref:System.IO.FileStream&gt;</ph> objects that encapsulate files.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.Stream.CanSeek%2A&gt;</ph> ist <ph id="ph2">`true`</ph> für alle <ph id="ph3">&lt;xref:System.IO.FileStream&gt;</ph> Objekte, die Dateien zu kapseln.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess)">
          <source>If <ph id="ph1">`path`</ph> indicates a device that does not support seeking, the <ph id="ph2">&lt;xref:System.IO.FileStream.CanSeek%2A&gt;</ph> property on the resulting <ph id="ph3">&lt;xref:System.IO.FileStream&gt;</ph> is <ph id="ph4">`false`</ph>.</source>
          <target state="translated">Wenn <ph id="ph1">`path`</ph> gibt an, ein Gerät, das keine Suchvorgänge, unterstützt die <ph id="ph2">&lt;xref:System.IO.FileStream.CanSeek%2A&gt;</ph> Eigenschaft für die resultierende <ph id="ph3">&lt;xref:System.IO.FileStream&gt;</ph> ist <ph id="ph4">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess)">
          <source>For additional information, see <ph id="ph1">&lt;xref:System.IO.Stream.CanSeek%2A&gt;</ph>.</source>
          <target state="translated">Weitere Informationen finden Sie unter <ph id="ph1">&lt;xref:System.IO.Stream.CanSeek%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess)">
          <source><ph id="ph1">`FileShare.Read`</ph> is the default for those <ph id="ph2">&lt;xref:System.IO.FileStream&gt;</ph> constructors without a <ph id="ph3">`FileShare`</ph> parameter.</source>
          <target state="translated"><ph id="ph1">`FileShare.Read`</ph> ist der Standardwert für diese <ph id="ph2">&lt;xref:System.IO.FileStream&gt;</ph> Konstruktoren ohne eine <ph id="ph3">`FileShare`</ph> Parameter.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess)">
          <source>When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable, and could cause an exception to be thrown.</source>
          <target state="translated">Wenn Sie einen Satz von Zeichen mit einer bestimmten kultureinstellung kompilieren und dieser dieselben Zeichen mit einer anderen kultureinstellung abrufen, der Zeichen können nicht interpretiert werden und können dazu führen, dass eine Ausnahme ausgelöst werden.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess)">
          <source>For a list of common file and directory operations, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</source>
          <target state="translated">Eine Liste der allgemeinen Datei- und Verzeichnisvorgänge, finden Sie unter <bpt id="p1">[</bpt>allgemeine e/a-Aufgaben<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess)">
          <source><ph id="ph1">&lt;paramref name="path" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess)">
          <source><ph id="ph1">&lt;paramref name="path" /&gt;</ph> is an empty string (""), contains only white space, or contains one or more invalid characters.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph> ist eine leere Zeichenfolge (""), enthält nur Leerzeichen oder enthält mindestens ein ungültiges Zeichen.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess)">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess)">
          <source><ph id="ph1">&lt;paramref name="path" /&gt;</ph> refers to a non-file device, such as "con:", "com1:", "lpt1:", etc. in an NTFS environment.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph> verweist auf ein Gerät, das keine Datei ist, z. B. "con:", "com1:", "lpt1:" usw. in einer NTFS-Umgebung.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess)">
          <source><ph id="ph1">&lt;paramref name="path" /&gt;</ph> refers to a non-file device, such as "con:", "com1:", "lpt1:", etc. in a non-NTFS environment.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph> verweist auf ein Gerät, das keine Datei ist, z. B. "con:", "com1:", "lpt1:" usw. in einer Nicht-NTFS-Umgebung.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess)">
          <source>The file cannot be found, such as when <ph id="ph1">&lt;paramref name="mode" /&gt;</ph> is <ph id="ph2">&lt;see langword="FileMode.Truncate" /&gt;</ph> or <ph id="ph3">&lt;see langword="FileMode.Open" /&gt;</ph>, and the file specified by <ph id="ph4">&lt;paramref name="path" /&gt;</ph> does not exist.</source>
          <target state="translated">Die Datei kann nicht gefunden werden. Dies ist z. B. der Fall, wenn <ph id="ph1">&lt;paramref name="mode" /&gt;</ph> auf <ph id="ph2">&lt;see langword="FileMode.Truncate" /&gt;</ph> oder <ph id="ph3">&lt;see langword="FileMode.Open" /&gt;</ph> festgelegt wurde und die durch <ph id="ph4">&lt;paramref name="path" /&gt;</ph> angegebene Datei nicht vorhanden ist.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess)">
          <source>The file must already exist in these modes.</source>
          <target state="translated">Die Datei muss bereits in diesen Modi vorhanden sein.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess)">
          <source>An I/O error, such as specifying <ph id="ph1">&lt;see langword="FileMode.CreateNew" /&gt;</ph> when the file specified by <ph id="ph2">&lt;paramref name="path" /&gt;</ph> already exists, occurred.</source>
          <target state="translated">Es ist ein E/A-Fehler aufgetreten, beispielsweise wurde <ph id="ph1">&lt;see langword="FileMode.CreateNew" /&gt;</ph> angegeben, und die durch <ph id="ph2">&lt;paramref name="path" /&gt;</ph> angegebene Datei ist bereits vorhanden.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess)">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess)">
          <source>The stream has been closed.</source>
          <target state="translated">Der Stream wurde geschlossen.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess)">
          <source>The caller does not have the required permission.</source>
          <target state="translated">Der Aufrufer verfügt nicht über die erforderliche Berechtigung.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess)">
          <source>The specified path is invalid, such as being on an unmapped drive.</source>
          <target state="translated">Der angegebene Pfad ist ungültig, z. B. befindet er sich auf einem nicht zugeordneten Laufwerk.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess)">
          <source>The <ph id="ph1">&lt;paramref name="access" /&gt;</ph> requested is not permitted by the operating system for the specified <ph id="ph2">&lt;paramref name="path" /&gt;</ph>, such as when <ph id="ph3">&lt;paramref name="access" /&gt;</ph> is <ph id="ph4">&lt;see langword="Write" /&gt;</ph> or <ph id="ph5">&lt;see langword="ReadWrite" /&gt;</ph> and the file or directory is set for read-only access.</source>
          <target state="translated">Der angeforderte <ph id="ph1">&lt;paramref name="access" /&gt;</ph> für den angegebenen <ph id="ph2">&lt;paramref name="path" /&gt;</ph> wird durch das Betriebssystem nicht zugelassen. Dies ist z. B. der Fall, wenn <ph id="ph4">&lt;see langword="Write" /&gt;</ph> oder <ph id="ph5">&lt;see langword="ReadWrite" /&gt;</ph> für <ph id="ph3">&lt;paramref name="access" /&gt;</ph> festgelegt ist, die Datei bzw. das Verzeichnis jedoch schreibgeschützt ist.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess)">
          <source>The specified path, file name, or both exceed the system-defined maximum length.</source>
          <target state="translated">Der angegebene Pfad und/oder Dateiname überschreiten die vom System definierte maximale Länge.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess)">
          <source>For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.</source>
          <target state="translated">Beispielsweise müssen auf Windows-basierten Plattformen Pfade weniger als 248 Zeichen und Dateinamen weniger als 260 Zeichen enthalten.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess)">
          <source><ph id="ph1">&lt;paramref name="mode" /&gt;</ph> contains an invalid value.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="mode" /&gt;</ph> enthält einen ungültigen Wert.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess)">
          <source>for reading, writing, and appending to files.</source>
          <target state="translated">zum Lesen, schreiben und Anfügen von Dateien.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess)">
          <source>Associated enumerations: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /&gt;</ph>, <ph id="ph2">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /&gt;</ph>, and <ph id="ph3">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Append" /&gt;</ph>.</source>
          <target state="translated">Zugeordnete Enumerationen: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /&gt;</ph>, <ph id="ph2">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /&gt;</ph>, und <ph id="ph3">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Append" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.#ctor(Microsoft.Win32.SafeHandles.SafeFileHandle,System.IO.FileAccess,System.Int32,System.Boolean)">
          <source>A file handle for the file that this <ph id="ph1">&lt;see langword="FileStream" /&gt;</ph> object will encapsulate.</source>
          <target state="translated">Ein Dateihandle für die Datei, die von diesem <ph id="ph1">&lt;see langword="FileStream" /&gt;</ph>-Objekt gekapselt wird.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.#ctor(Microsoft.Win32.SafeHandles.SafeFileHandle,System.IO.FileAccess,System.Int32,System.Boolean)">
          <source>A constant that sets the <ph id="ph1">&lt;see cref="P:System.IO.FileStream.CanRead" /&gt;</ph> and <ph id="ph2">&lt;see cref="P:System.IO.FileStream.CanWrite" /&gt;</ph> properties of the <ph id="ph3">&lt;see langword="FileStream" /&gt;</ph> object.</source>
          <target state="translated">Eine Konstante, die die <ph id="ph1">&lt;see cref="P:System.IO.FileStream.CanRead" /&gt;</ph>-Eigenschaft und die <ph id="ph2">&lt;see cref="P:System.IO.FileStream.CanWrite" /&gt;</ph>-Eigenschaft des <ph id="ph3">&lt;see langword="FileStream" /&gt;</ph>-Objekts festlegt.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.#ctor(Microsoft.Win32.SafeHandles.SafeFileHandle,System.IO.FileAccess,System.Int32,System.Boolean)">
          <source>A positive <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> value greater than 0 indicating the buffer size.</source>
          <target state="translated">Ein positiver <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph>-Wert größer als 0 (null), der die Puffergröße angibt.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.#ctor(Microsoft.Win32.SafeHandles.SafeFileHandle,System.IO.FileAccess,System.Int32,System.Boolean)">
          <source>The default buffer size is 4096.</source>
          <target state="translated">Die Standardpuffergröße ist 4096.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.#ctor(Microsoft.Win32.SafeHandles.SafeFileHandle,System.IO.FileAccess,System.Int32,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the handle was opened asynchronously (that is, in overlapped I/O mode); otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, wenn das Handle asynchron geöffnet wurde (im überlappenden E/A-Modus), andernfalls <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.#ctor(Microsoft.Win32.SafeHandles.SafeFileHandle,System.IO.FileAccess,System.Int32,System.Boolean)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.IO.FileStream" /&gt;</ph> class for the specified file handle, with the specified read/write permission, buffer size, and synchronous or asynchronous state.</source>
          <target state="translated">Initialisiert eine neue Instanz der <ph id="ph1">&lt;see cref="T:System.IO.FileStream" /&gt;</ph>-Klasse für das angegebene Dateihandle mit den Angaben für die Lese-/Schreibberechtigung, die Puffergröße und den synchronen bzw. asynchronen Zustand.</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.#ctor(Microsoft.Win32.SafeHandles.SafeFileHandle,System.IO.FileAccess,System.Int32,System.Boolean)">
          <source>You set the <ph id="ph1">`isAsync`</ph> parameter to <ph id="ph2">`true`</ph> to open the file handle asynchronously.</source>
          <target state="translated">Festlegen der <ph id="ph1">`isAsync`</ph> Parameter <ph id="ph2">`true`</ph> um das Dateihandle asynchron zu öffnen.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.#ctor(Microsoft.Win32.SafeHandles.SafeFileHandle,System.IO.FileAccess,System.Int32,System.Boolean)">
          <source>When the parameter is <ph id="ph1">`true`</ph>, the stream utilizes overlapped I/O to perform file operations asynchronously.</source>
          <target state="translated">Wenn der Parameter ist <ph id="ph1">`true`</ph>, der Datenstrom nutzt überlappender e/a, um die Dateivorgänge asynchron ausführen.</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.#ctor(Microsoft.Win32.SafeHandles.SafeFileHandle,System.IO.FileAccess,System.Int32,System.Boolean)">
          <source>However, the parameter does not have to be <ph id="ph1">`true`</ph> to call the <ph id="ph2">&lt;xref:System.IO.FileStream.ReadAsync%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.IO.FileStream.WriteAsync%2A&gt;</ph>, or <ph id="ph4">&lt;xref:System.IO.Stream.CopyToAsync%2A&gt;</ph> method.</source>
          <target state="translated">Allerdings die Parameter enthält keinen sein <ph id="ph1">`true`</ph> zum Aufrufen der <ph id="ph2">&lt;xref:System.IO.FileStream.ReadAsync%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.IO.FileStream.WriteAsync%2A&gt;</ph>, oder <ph id="ph4">&lt;xref:System.IO.Stream.CopyToAsync%2A&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.#ctor(Microsoft.Win32.SafeHandles.SafeFileHandle,System.IO.FileAccess,System.Int32,System.Boolean)">
          <source>When the <ph id="ph1">`isAsync`</ph> parameter is <ph id="ph2">`false`</ph> and you call the asynchronous read and write operations, the UI thread is still not blocked, but the actual I/O operation is performed synchronously.</source>
          <target state="translated">Wenn die <ph id="ph1">`isAsync`</ph> Parameter ist <ph id="ph2">`false`</ph> und rufen Sie den asynchronen Lesevorgang und Schreibvorgänge, die UI-Thread wird weiterhin nicht blockiert, aber der tatsächliche e/a-Vorgang wird synchron ausgeführt.</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.#ctor(Microsoft.Win32.SafeHandles.SafeFileHandle,System.IO.FileAccess,System.Int32,System.Boolean)">
          <source><ph id="ph1">`FileStream`</ph> assumes that it has exclusive control over the handle.</source>
          <target state="translated"><ph id="ph1">`FileStream`</ph> wird davon ausgegangen, dass sie die exklusive Kontrolle über das Handle besitzt.</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.#ctor(Microsoft.Win32.SafeHandles.SafeFileHandle,System.IO.FileAccess,System.Int32,System.Boolean)">
          <source>Reading, writing, or seeking while a <ph id="ph1">`FileStream`</ph> is also holding a handle could result in data corruption.</source>
          <target state="translated">Lesen, schreiben oder beim Suchen einer <ph id="ph1">`FileStream`</ph> enthalten auch ein Handle zu beschädigten Daten führen.</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.#ctor(Microsoft.Win32.SafeHandles.SafeFileHandle,System.IO.FileAccess,System.Int32,System.Boolean)">
          <source>For data safety, call <ph id="ph1">&lt;xref:System.IO.FileStream.Flush%2A&gt;</ph> before using the handle, and avoid calling any methods other than <ph id="ph2">`Close`</ph> after you are done using the handle.</source>
          <target state="translated">Rufen Sie Daten aus Sicherheitsgründen <ph id="ph1">&lt;xref:System.IO.FileStream.Flush%2A&gt;</ph> vor Verwendung des Handles, und vermeiden Sie durch Aufrufen von Methoden außer <ph id="ph2">`Close`</ph> Sie abschließend mit dem Handle.</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.#ctor(Microsoft.Win32.SafeHandles.SafeFileHandle,System.IO.FileAccess,System.Int32,System.Boolean)">
          <source>Alternately, read and write to the handle before calling this <ph id="ph1">`FileStream`</ph> constructor.</source>
          <target state="translated">Klicken Sie alternativ lesen und Schreiben in das Handle vor dem Aufrufen dieser <ph id="ph1">`FileStream`</ph> Konstruktor.</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.#ctor(Microsoft.Win32.SafeHandles.SafeFileHandle,System.IO.FileAccess,System.Int32,System.Boolean)">
          <source><ph id="ph1">`FileShare.Read`</ph> is the default for those <ph id="ph2">&lt;xref:System.IO.FileStream&gt;</ph> constructors without a <ph id="ph3">`FileShare`</ph> parameter.</source>
          <target state="translated"><ph id="ph1">`FileShare.Read`</ph> ist der Standardwert für diese <ph id="ph2">&lt;xref:System.IO.FileStream&gt;</ph> Konstruktoren ohne eine <ph id="ph3">`FileShare`</ph> Parameter.</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.#ctor(Microsoft.Win32.SafeHandles.SafeFileHandle,System.IO.FileAccess,System.Int32,System.Boolean)">
          <source>When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable, and could cause an exception to be thrown.</source>
          <target state="translated">Wenn Sie einen Satz von Zeichen mit einer bestimmten kultureinstellung kompilieren und dieser dieselben Zeichen mit einer anderen kultureinstellung abrufen, der Zeichen können nicht interpretiert werden und können dazu führen, dass eine Ausnahme ausgelöst werden.</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.#ctor(Microsoft.Win32.SafeHandles.SafeFileHandle,System.IO.FileAccess,System.Int32,System.Boolean)">
          <source>For a list of common file and directory operations, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</source>
          <target state="translated">Eine Liste der allgemeinen Datei- und Verzeichnisvorgänge, finden Sie unter <bpt id="p1">[</bpt>allgemeine e/a-Aufgaben<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.#ctor(Microsoft.Win32.SafeHandles.SafeFileHandle,System.IO.FileAccess,System.Int32,System.Boolean)">
          <source>The <ph id="ph1">&lt;paramref name="handle" /&gt;</ph> parameter is an invalid handle.</source>
          <target state="translated">Der <ph id="ph1">&lt;paramref name="handle" /&gt;</ph>-Parameter ist ein ungültiges Handle.</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.#ctor(Microsoft.Win32.SafeHandles.SafeFileHandle,System.IO.FileAccess,System.Int32,System.Boolean)">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.#ctor(Microsoft.Win32.SafeHandles.SafeFileHandle,System.IO.FileAccess,System.Int32,System.Boolean)">
          <source>The <ph id="ph1">&lt;paramref name="handle" /&gt;</ph> parameter is a synchronous handle and it was used asynchronously.</source>
          <target state="translated">Der <ph id="ph1">&lt;paramref name="handle" /&gt;</ph>-Parameter ist ein synchrones Handle und wurde asynchron verwendet.</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.#ctor(Microsoft.Win32.SafeHandles.SafeFileHandle,System.IO.FileAccess,System.Int32,System.Boolean)">
          <source>The <ph id="ph1">&lt;paramref name="bufferSize" /&gt;</ph> parameter is negative.</source>
          <target state="translated">Der <ph id="ph1">&lt;paramref name="bufferSize" /&gt;</ph>-Parameter ist negativ.</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.#ctor(Microsoft.Win32.SafeHandles.SafeFileHandle,System.IO.FileAccess,System.Int32,System.Boolean)">
          <source>An I/O error, such as a disk error, occurred.</source>
          <target state="translated">Ein E/A-Fehler, z. B. ein Datenträgerfehler ist aufgetreten.</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.#ctor(Microsoft.Win32.SafeHandles.SafeFileHandle,System.IO.FileAccess,System.Int32,System.Boolean)">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.#ctor(Microsoft.Win32.SafeHandles.SafeFileHandle,System.IO.FileAccess,System.Int32,System.Boolean)">
          <source>The stream has been closed.</source>
          <target state="translated">Der Stream wurde geschlossen.</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.#ctor(Microsoft.Win32.SafeHandles.SafeFileHandle,System.IO.FileAccess,System.Int32,System.Boolean)">
          <source>The caller does not have the required permission.</source>
          <target state="translated">Der Aufrufer verfügt nicht über die erforderliche Berechtigung.</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.#ctor(Microsoft.Win32.SafeHandles.SafeFileHandle,System.IO.FileAccess,System.Int32,System.Boolean)">
          <source>The <ph id="ph1">&lt;paramref name="access" /&gt;</ph> requested is not permitted by the operating system for the specified file handle, such as when <ph id="ph2">&lt;paramref name="access" /&gt;</ph> is <ph id="ph3">&lt;see langword="Write" /&gt;</ph> or <ph id="ph4">&lt;see langword="ReadWrite" /&gt;</ph> and the file handle is set for read-only access.</source>
          <target state="translated">Der angeforderte <ph id="ph1">&lt;paramref name="access" /&gt;</ph> für das angegebene Dateihandle wird durch das Betriebssystem nicht zugelassen. Dies ist z. B. der Fall, wenn <ph id="ph3">&lt;see langword="Write" /&gt;</ph> oder <ph id="ph4">&lt;see langword="ReadWrite" /&gt;</ph> für <ph id="ph2">&lt;paramref name="access" /&gt;</ph> festgelegt sind und das Dateihandle auf schreibgeschützten Zugriff festgelegt ist.</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.#ctor(Microsoft.Win32.SafeHandles.SafeFileHandle,System.IO.FileAccess,System.Int32,System.Boolean)">
          <source>for reading, writing, and appending to files.</source>
          <target state="translated">zum Lesen, schreiben und Anfügen von Dateien.</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.#ctor(Microsoft.Win32.SafeHandles.SafeFileHandle,System.IO.FileAccess,System.Int32,System.Boolean)">
          <source>Associated enumerations: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /&gt;</ph>, <ph id="ph2">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /&gt;</ph>, and <ph id="ph3">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Append" /&gt;</ph>.</source>
          <target state="translated">Zugeordnete Enumerationen: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /&gt;</ph>, <ph id="ph2">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /&gt;</ph>, und <ph id="ph3">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Append" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.#ctor(Microsoft.Win32.SafeHandles.SafeFileHandle,System.IO.FileAccess,System.Int32,System.Boolean)">
          <source>for permission to call unmanaged code.</source>
          <target state="translated">für die Berechtigung zum Aufrufen von nicht verwalteten Codes.</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.#ctor(Microsoft.Win32.SafeHandles.SafeFileHandle,System.IO.FileAccess,System.Int32,System.Boolean)">
          <source>Associated enumerations: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></source>
          <target state="translated">Zugeordnete Enumerationen: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.#ctor(System.IntPtr,System.IO.FileAccess,System.Boolean,System.Int32)">
          <source>A file handle for the file that this <ph id="ph1">&lt;see langword="FileStream" /&gt;</ph> object will encapsulate.</source>
          <target state="translated">Ein Dateihandle für die Datei, die von diesem <ph id="ph1">&lt;see langword="FileStream" /&gt;</ph>-Objekt gekapselt wird.</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.#ctor(System.IntPtr,System.IO.FileAccess,System.Boolean,System.Int32)">
          <source>A constant that sets the <ph id="ph1">&lt;see cref="P:System.IO.FileStream.CanRead" /&gt;</ph> and <ph id="ph2">&lt;see cref="P:System.IO.FileStream.CanWrite" /&gt;</ph> properties of the <ph id="ph3">&lt;see langword="FileStream" /&gt;</ph> object.</source>
          <target state="translated">Eine Konstante, die die <ph id="ph1">&lt;see cref="P:System.IO.FileStream.CanRead" /&gt;</ph>-Eigenschaft und die <ph id="ph2">&lt;see cref="P:System.IO.FileStream.CanWrite" /&gt;</ph>-Eigenschaft des <ph id="ph3">&lt;see langword="FileStream" /&gt;</ph>-Objekts festlegt.</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.#ctor(System.IntPtr,System.IO.FileAccess,System.Boolean,System.Int32)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the file handle will be owned by this <ph id="ph2">&lt;see langword="FileStream" /&gt;</ph> instance; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, wenn das Dateihandle im Besitz dieser <ph id="ph2">&lt;see langword="FileStream" /&gt;</ph>-Instanz sein wird, andernfalls <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.#ctor(System.IntPtr,System.IO.FileAccess,System.Boolean,System.Int32)">
          <source>A positive <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> value greater than 0 indicating the buffer size.</source>
          <target state="translated">Ein positiver <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph>-Wert größer als 0 (null), der die Puffergröße angibt.</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.#ctor(System.IntPtr,System.IO.FileAccess,System.Boolean,System.Int32)">
          <source>The default buffer size is 4096.</source>
          <target state="translated">Die Standardpuffergröße ist 4096.</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.#ctor(System.IntPtr,System.IO.FileAccess,System.Boolean,System.Int32)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.IO.FileStream" /&gt;</ph> class for the specified file handle, with the specified read/write permission, <ph id="ph2">&lt;see langword="FileStream" /&gt;</ph> instance ownership, and buffer size.</source>
          <target state="translated">Initialisiert eine neue Instanz der <ph id="ph1">&lt;see cref="T:System.IO.FileStream" /&gt;</ph>-Klasse für das angegebene Dateihandle mit den Angaben für die Lese-/Schreibberechtigung, den Besitz der <ph id="ph2">&lt;see langword="FileStream" /&gt;</ph>-Instanz und die Puffergröße.</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.#ctor(System.IntPtr,System.IO.FileAccess,System.Boolean,System.Int32)">
          <source>The <ph id="ph1">`FileStream`</ph> object is given the specified access to the file.</source>
          <target state="translated">Die <ph id="ph1">`FileStream`</ph> Objekt erhält den angegebenen Zugriff auf die Datei.</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.#ctor(System.IntPtr,System.IO.FileAccess,System.Boolean,System.Int32)">
          <source>The ownership of the handle will be as specified.</source>
          <target state="translated">Der Besitz des Handles werden wie angegeben.</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.#ctor(System.IntPtr,System.IO.FileAccess,System.Boolean,System.Int32)">
          <source>If this <ph id="ph1">`FileStream`</ph> owns the handle, a call to the <ph id="ph2">&lt;xref:System.IO.Stream.Close%2A&gt;</ph> method will also close the handle.</source>
          <target state="translated">Wenn diese <ph id="ph1">`FileStream`</ph> besitzt das Handle, einen Aufruf der <ph id="ph2">&lt;xref:System.IO.Stream.Close%2A&gt;</ph> Methode wird auch das Handle geschlossen.</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.#ctor(System.IntPtr,System.IO.FileAccess,System.Boolean,System.Int32)">
          <source>In particular, the file's handle count is decremented.</source>
          <target state="translated">Insbesondere wird die Datei Handleanzahl verringert.</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.#ctor(System.IntPtr,System.IO.FileAccess,System.Boolean,System.Int32)">
          <source>The <ph id="ph1">`FileStream`</ph> object is given the specified buffer size.</source>
          <target state="translated">Die <ph id="ph1">`FileStream`</ph> Objekt erhält die angegebenen Puffergröße.</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.#ctor(System.IntPtr,System.IO.FileAccess,System.Boolean,System.Int32)">
          <source><ph id="ph1">`FileStream`</ph> assumes that it has exclusive control over the handle.</source>
          <target state="translated"><ph id="ph1">`FileStream`</ph> wird davon ausgegangen, dass sie die exklusive Kontrolle über das Handle besitzt.</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.#ctor(System.IntPtr,System.IO.FileAccess,System.Boolean,System.Int32)">
          <source>Reading, writing, or seeking while a <ph id="ph1">`FileStream`</ph> is also holding a handle could result in data corruption.</source>
          <target state="translated">Lesen, schreiben oder beim Suchen einer <ph id="ph1">`FileStream`</ph> enthalten auch ein Handle zu beschädigten Daten führen.</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.#ctor(System.IntPtr,System.IO.FileAccess,System.Boolean,System.Int32)">
          <source>For data safety, call <ph id="ph1">&lt;xref:System.IO.FileStream.Flush%2A&gt;</ph> before using the handle, and avoid calling any methods other than <ph id="ph2">`Close`</ph> after you are done using the handle.</source>
          <target state="translated">Rufen Sie Daten aus Sicherheitsgründen <ph id="ph1">&lt;xref:System.IO.FileStream.Flush%2A&gt;</ph> vor Verwendung des Handles, und vermeiden Sie durch Aufrufen von Methoden außer <ph id="ph2">`Close`</ph> Sie abschließend mit dem Handle.</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.#ctor(System.IntPtr,System.IO.FileAccess,System.Boolean,System.Int32)">
          <source>Alternately, read and write to the handle before calling this <ph id="ph1">`FileStream`</ph> constructor.</source>
          <target state="translated">Klicken Sie alternativ lesen und Schreiben in das Handle vor dem Aufrufen dieser <ph id="ph1">`FileStream`</ph> Konstruktor.</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.#ctor(System.IntPtr,System.IO.FileAccess,System.Boolean,System.Int32)">
          <source><ph id="ph1">`FileShare.Read`</ph> is the default for those <ph id="ph2">&lt;xref:System.IO.FileStream&gt;</ph> constructors without a <ph id="ph3">`FileShare`</ph> parameter.</source>
          <target state="translated"><ph id="ph1">`FileShare.Read`</ph> ist der Standardwert für diese <ph id="ph2">&lt;xref:System.IO.FileStream&gt;</ph> Konstruktoren ohne eine <ph id="ph3">`FileShare`</ph> Parameter.</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.#ctor(System.IntPtr,System.IO.FileAccess,System.Boolean,System.Int32)">
          <source>When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable, and could cause an exception to be thrown.</source>
          <target state="translated">Wenn Sie einen Satz von Zeichen mit einer bestimmten kultureinstellung kompilieren und dieser dieselben Zeichen mit einer anderen kultureinstellung abrufen, der Zeichen können nicht interpretiert werden und können dazu führen, dass eine Ausnahme ausgelöst werden.</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.#ctor(System.IntPtr,System.IO.FileAccess,System.Boolean,System.Int32)">
          <source>For a list of common file and directory operations, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</source>
          <target state="translated">Eine Liste der allgemeinen Datei- und Verzeichnisvorgänge, finden Sie unter <bpt id="p1">[</bpt>allgemeine e/a-Aufgaben<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.#ctor(System.IntPtr,System.IO.FileAccess,System.Boolean,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="bufferSize" /&gt;</ph> is negative.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="bufferSize" /&gt;</ph> ist ein negativer Wert.</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.#ctor(System.IntPtr,System.IO.FileAccess,System.Boolean,System.Int32)">
          <source>An I/O error, such as a disk error, occurred.</source>
          <target state="translated">Ein E/A-Fehler, z. B. ein Datenträgerfehler, ist aufgetreten.</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.#ctor(System.IntPtr,System.IO.FileAccess,System.Boolean,System.Int32)">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.#ctor(System.IntPtr,System.IO.FileAccess,System.Boolean,System.Int32)">
          <source>The stream has been closed.</source>
          <target state="translated">Der Stream wurde geschlossen.</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.#ctor(System.IntPtr,System.IO.FileAccess,System.Boolean,System.Int32)">
          <source>The caller does not have the required permission.</source>
          <target state="translated">Der Aufrufer verfügt nicht über die erforderliche Berechtigung.</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.#ctor(System.IntPtr,System.IO.FileAccess,System.Boolean,System.Int32)">
          <source>The <ph id="ph1">&lt;paramref name="access" /&gt;</ph> requested is not permitted by the operating system for the specified file handle, such as when <ph id="ph2">&lt;paramref name="access" /&gt;</ph> is <ph id="ph3">&lt;see langword="Write" /&gt;</ph> or <ph id="ph4">&lt;see langword="ReadWrite" /&gt;</ph> and the file handle is set for read-only access.</source>
          <target state="translated">Der angeforderte <ph id="ph1">&lt;paramref name="access" /&gt;</ph> für das angegebene Dateihandle wird durch das Betriebssystem nicht zugelassen. Dies ist z. B. der Fall, wenn <ph id="ph3">&lt;see langword="Write" /&gt;</ph> oder <ph id="ph4">&lt;see langword="ReadWrite" /&gt;</ph> für <ph id="ph2">&lt;paramref name="access" /&gt;</ph> festgelegt sind und das Dateihandle auf schreibgeschützten Zugriff festgelegt ist.</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.#ctor(System.IntPtr,System.IO.FileAccess,System.Boolean,System.Int32)">
          <source>for reading, writing, and appending to files.</source>
          <target state="translated">zum Lesen, schreiben und Anfügen von Dateien.</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.#ctor(System.IntPtr,System.IO.FileAccess,System.Boolean,System.Int32)">
          <source>Associated enumerations: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /&gt;</ph>, <ph id="ph2">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /&gt;</ph>, and <ph id="ph3">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Append" /&gt;</ph>.</source>
          <target state="translated">Zugeordnete Enumerationen: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /&gt;</ph>, <ph id="ph2">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /&gt;</ph>, und <ph id="ph3">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Append" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)">
          <source>A relative or absolute path for the file that the current <ph id="ph1">&lt;see langword="FileStream" /&gt;</ph> object will encapsulate.</source>
          <target state="translated">Ein relativer oder absoluter Pfad zu der Datei, die vom aktuellen <ph id="ph1">&lt;see langword="FileStream" /&gt;</ph>-Objekt gekapselt wird.</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)">
          <source>A constant that determines how to open or create the file.</source>
          <target state="translated">Eine Konstante, die bestimmt, auf welche Weise die Datei geöffnet oder erstellt werden soll.</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)">
          <source>A constant that determines how the file can be accessed by the <ph id="ph1">&lt;see langword="FileStream" /&gt;</ph> object.</source>
          <target state="translated">Eine Konstante, die bestimmt, welcher Zugriff auf die Datei für das <ph id="ph1">&lt;see langword="FileStream" /&gt;</ph>-Objekt zulässig ist.</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)">
          <source>This also determines the values returned by the <ph id="ph1">&lt;see cref="P:System.IO.FileStream.CanRead" /&gt;</ph> and <ph id="ph2">&lt;see cref="P:System.IO.FileStream.CanWrite" /&gt;</ph> properties of the <ph id="ph3">&lt;see langword="FileStream" /&gt;</ph> object.</source>
          <target state="translated">Dies bestimmt ebenfalls die von den <ph id="ph1">&lt;see cref="P:System.IO.FileStream.CanRead" /&gt;</ph>- und <ph id="ph2">&lt;see cref="P:System.IO.FileStream.CanWrite" /&gt;</ph>-Eigenschaften des <ph id="ph3">&lt;see langword="FileStream" /&gt;</ph>-Objekts zurückgegebenen Werte.</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)">
          <source><ph id="ph1">&lt;see cref="P:System.IO.FileStream.CanSeek" /&gt;</ph> is <ph id="ph2">&lt;see langword="true" /&gt;</ph> if <bpt id="p1">&lt;c&gt;</bpt>path<ept id="p1">&lt;/c&gt;</ept> specifies a disk file.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.IO.FileStream.CanSeek" /&gt;</ph> ist <ph id="ph2">&lt;see langword="true" /&gt;</ph>, wenn <bpt id="p1">&lt;c&gt;</bpt>path<ept id="p1">&lt;/c&gt;</ept> eine Datei auf einem Datenträger darstellt.</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)">
          <source>A constant that determines how the file will be shared by processes.</source>
          <target state="translated">Eine Konstante zur Bestimmung der Art, in der Prozesse gemeinsam auf die Datei zugreifen.</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.IO.FileStream" /&gt;</ph> class with the specified path, creation mode, read/write permission, and sharing permission.</source>
          <target state="translated">Initialisiert eine neue Instanz der <ph id="ph1">&lt;see cref="T:System.IO.FileStream" /&gt;</ph>-Klasse mit den Angaben für den Pfad, den Erstellungsmodus, die Lese-/Schreib- und Freigabeberechtigung.</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)">
          <source>The .NET Framework does not support direct access to physical disks through paths that are device names, such as "<ph id="ph1">\\</ph><ph id="ph2">\\</ph>.\PHYSICALDRIVE0 ".</source>
          <target state="translated">.NET Framework unterstützt keine direkten Zugriff auf physische Datenträger über Pfade, Gerätenamen, z. B. "<ph id="ph1">\\</ph><ph id="ph2">\\</ph>. \PHYSICALDRIVE0".</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)">
          <source>The <ph id="ph1">`path`</ph> parameter can be a file name, including a file on a Universal Naming Convention (UNC) share.</source>
          <target state="translated">Die <ph id="ph1">`path`</ph> Parameter kann einen Dateinamen, einschließlich einer Datei auf einer Freigabe (UNC = Universal Naming Convention) sein.</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)">
          <source>The constructor is given read/write access to the file, and it is opened sharing Read access (that is, requests to open the file for writing by this or another process will fail until the <ph id="ph1">`FileStream`</ph> object has been closed, but read attempts will succeed).</source>
          <target state="translated">Der Konstruktor erhält Lese-/Schreibzugriff auf die Datei, und es wird geöffnet, und der Lesezugriff freigegeben (d. h. die Anforderungen zum Öffnen der Datei für das Schreiben von diesem oder einem anderen Prozess bis misslingen, die <ph id="ph1">`FileStream`</ph> Objekt geschlossen wurde, aber lesen versucht wird erfolgreich ausgeführt werden).</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)">
          <source>The buffer size is set to the default size of 4096 bytes (4 KB).</source>
          <target state="translated">Die Größe des Puffers wird auf die Standardgröße von 4096 Bytes (4 KB) festgelegt.</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)">
          <source><ph id="ph1">`path`</ph> is not required to be a file stored on disk; it can be any part of a system that supports access through streams.</source>
          <target state="translated"><ph id="ph1">`path`</ph> ist nicht erforderlich, um eine Datei auf dem Datenträger gespeichert werden. Es kann einen beliebigen Teil eines Systems, die Zugriff über Datenströme unterstützt.</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)">
          <source>For example, depending on the system, this class can access a physical device.</source>
          <target state="translated">Je nach System kann diese Klasse z. B. ein physisches Gerät zugreifen.</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)">
          <source><ph id="ph1">&lt;xref:System.IO.Stream.CanSeek%2A&gt;</ph> is <ph id="ph2">`true`</ph> for all <ph id="ph3">&lt;xref:System.IO.FileStream&gt;</ph> objects that encapsulate files.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.Stream.CanSeek%2A&gt;</ph> ist <ph id="ph2">`true`</ph> für alle <ph id="ph3">&lt;xref:System.IO.FileStream&gt;</ph> Objekte, die Dateien zu kapseln.</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)">
          <source>If <ph id="ph1">`path`</ph> indicates a device that does not support seeking, the <ph id="ph2">&lt;xref:System.IO.FileStream.CanSeek%2A&gt;</ph> property on the resulting <ph id="ph3">&lt;xref:System.IO.FileStream&gt;</ph> is <ph id="ph4">`false`</ph>.</source>
          <target state="translated">Wenn <ph id="ph1">`path`</ph> gibt an, ein Gerät, das keine Suchvorgänge, unterstützt die <ph id="ph2">&lt;xref:System.IO.FileStream.CanSeek%2A&gt;</ph> Eigenschaft für die resultierende <ph id="ph3">&lt;xref:System.IO.FileStream&gt;</ph> ist <ph id="ph4">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)">
          <source>For additional information, see <ph id="ph1">&lt;xref:System.IO.Stream.CanSeek%2A&gt;</ph>.</source>
          <target state="translated">Weitere Informationen finden Sie unter <ph id="ph1">&lt;xref:System.IO.Stream.CanSeek%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)">
          <source>When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable, and could cause an exception to be thrown.</source>
          <target state="translated">Wenn Sie einen Satz von Zeichen mit einer bestimmten kultureinstellung kompilieren und dieser dieselben Zeichen mit einer anderen kultureinstellung abrufen, der Zeichen können nicht interpretiert werden und können dazu führen, dass eine Ausnahme ausgelöst werden.</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)">
          <source>For a list of common file and directory operations, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</source>
          <target state="translated">Eine Liste der allgemeinen Datei- und Verzeichnisvorgänge, finden Sie unter <bpt id="p1">[</bpt>allgemeine e/a-Aufgaben<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.IO.FileStream.Lock%2A&gt;</ph> method.</source>
          <target state="translated">Dieses Codebeispiel ist Teil eines umfangreicheren Beispiels für die <ph id="ph1">&lt;xref:System.IO.FileStream.Lock%2A&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)">
          <source><ph id="ph1">&lt;paramref name="path" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)">
          <source><ph id="ph1">&lt;paramref name="path" /&gt;</ph> is an empty string (""), contains only white space, or contains one or more invalid characters.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph> ist eine leere Zeichenfolge (""), enthält nur Leerzeichen oder enthält mindestens ein ungültiges Zeichen.</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)">
          <source><ph id="ph1">&lt;paramref name="path" /&gt;</ph> refers to a non-file device, such as "con:", "com1:", "lpt1:", etc. in an NTFS environment.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph> verweist auf ein Gerät, das keine Datei ist, z. B. "con:", "com1:", "lpt1:" usw. in einer NTFS-Umgebung.</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)">
          <source><ph id="ph1">&lt;paramref name="path" /&gt;</ph> refers to a non-file device, such as "con:", "com1:", "lpt1:", etc. in a non-NTFS environment.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph> verweist auf ein Gerät, das keine Datei ist, z. B. "con:", "com1:", "lpt1:" usw. in einer Nicht-NTFS-Umgebung.</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)">
          <source>The file cannot be found, such as when <ph id="ph1">&lt;paramref name="mode" /&gt;</ph> is <ph id="ph2">&lt;see langword="FileMode.Truncate" /&gt;</ph> or <ph id="ph3">&lt;see langword="FileMode.Open" /&gt;</ph>, and the file specified by <ph id="ph4">&lt;paramref name="path" /&gt;</ph> does not exist.</source>
          <target state="translated">Die Datei kann nicht gefunden werden. Dies ist z. B. der Fall, wenn <ph id="ph1">&lt;paramref name="mode" /&gt;</ph> auf <ph id="ph2">&lt;see langword="FileMode.Truncate" /&gt;</ph> oder <ph id="ph3">&lt;see langword="FileMode.Open" /&gt;</ph> festgelegt wurde und die durch <ph id="ph4">&lt;paramref name="path" /&gt;</ph> angegebene Datei nicht vorhanden ist.</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)">
          <source>The file must already exist in these modes.</source>
          <target state="translated">Die Datei muss bereits in diesen Modi vorhanden sein.</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)">
          <source>An I/O error, such as specifying <ph id="ph1">&lt;see langword="FileMode.CreateNew" /&gt;</ph> when the file specified by <ph id="ph2">&lt;paramref name="path" /&gt;</ph> already exists, occurred.</source>
          <target state="translated">Es ist ein E/A-Fehler aufgetreten, beispielsweise wurde <ph id="ph1">&lt;see langword="FileMode.CreateNew" /&gt;</ph> angegeben, und die durch <ph id="ph2">&lt;paramref name="path" /&gt;</ph> angegebene Datei ist bereits vorhanden.</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)">
          <source>The system is running Windows 98 or Windows 98 Second Edition and <ph id="ph1">&lt;paramref name="share" /&gt;</ph> is set to <ph id="ph2">&lt;see langword="FileShare.Delete" /&gt;</ph>.</source>
          <target state="translated">Das System führt Windows 98 oder Windows 98 SE aus, und <ph id="ph1">&lt;paramref name="share" /&gt;</ph> ist auf <ph id="ph2">&lt;see langword="FileShare.Delete" /&gt;</ph> festgelegt.</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)">
          <source>The stream has been closed.</source>
          <target state="translated">Der Stream wurde geschlossen.</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)">
          <source>The caller does not have the required permission.</source>
          <target state="translated">Der Aufrufer verfügt nicht über die erforderliche Berechtigung.</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)">
          <source>The specified path is invalid, such as being on an unmapped drive.</source>
          <target state="translated">Der angegebene Pfad ist ungültig, z. B. befindet er sich auf einem nicht zugeordneten Laufwerk.</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)">
          <source>The <ph id="ph1">&lt;paramref name="access" /&gt;</ph> requested is not permitted by the operating system for the specified <ph id="ph2">&lt;paramref name="path" /&gt;</ph>, such as when <ph id="ph3">&lt;paramref name="access" /&gt;</ph> is <ph id="ph4">&lt;see langword="Write" /&gt;</ph> or <ph id="ph5">&lt;see langword="ReadWrite" /&gt;</ph> and the file or directory is set for read-only access.</source>
          <target state="translated">Der angeforderte <ph id="ph1">&lt;paramref name="access" /&gt;</ph> für den angegebenen <ph id="ph2">&lt;paramref name="path" /&gt;</ph> wird durch das Betriebssystem nicht zugelassen. Dies ist z. B. der Fall, wenn <ph id="ph4">&lt;see langword="Write" /&gt;</ph> oder <ph id="ph5">&lt;see langword="ReadWrite" /&gt;</ph> für <ph id="ph3">&lt;paramref name="access" /&gt;</ph> festgelegt ist, die Datei bzw. das Verzeichnis jedoch schreibgeschützt ist.</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)">
          <source>The specified path, file name, or both exceed the system-defined maximum length.</source>
          <target state="translated">Der angegebene Pfad und/oder Dateiname überschreiten die vom System definierte maximale Länge.</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)">
          <source>For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.</source>
          <target state="translated">Beispielsweise müssen auf Windows-basierten Plattformen Pfade weniger als 248 Zeichen und Dateinamen weniger als 260 Zeichen enthalten.</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)">
          <source><ph id="ph1">&lt;paramref name="mode" /&gt;</ph> contains an invalid value.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="mode" /&gt;</ph> enthält einen ungültigen Wert.</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)">
          <source>for reading, writing, and appending to files.</source>
          <target state="translated">zum Lesen, schreiben und Anfügen von Dateien.</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)">
          <source>Associated enumerations: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /&gt;</ph>, <ph id="ph2">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /&gt;</ph>, and <ph id="ph3">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Append" /&gt;</ph>.</source>
          <target state="translated">Zugeordnete Enumerationen: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /&gt;</ph>, <ph id="ph2">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /&gt;</ph>, und <ph id="ph3">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Append" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.#ctor(System.IntPtr,System.IO.FileAccess,System.Boolean,System.Int32,System.Boolean)">
          <source>A file handle for the file that this <ph id="ph1">&lt;see langword="FileStream" /&gt;</ph> object will encapsulate.</source>
          <target state="translated">Ein Dateihandle für die Datei, die von diesem <ph id="ph1">&lt;see langword="FileStream" /&gt;</ph>-Objekt gekapselt wird.</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.#ctor(System.IntPtr,System.IO.FileAccess,System.Boolean,System.Int32,System.Boolean)">
          <source>A constant that sets the <ph id="ph1">&lt;see cref="P:System.IO.FileStream.CanRead" /&gt;</ph> and <ph id="ph2">&lt;see cref="P:System.IO.FileStream.CanWrite" /&gt;</ph> properties of the <ph id="ph3">&lt;see langword="FileStream" /&gt;</ph> object.</source>
          <target state="translated">Eine Konstante, die die <ph id="ph1">&lt;see cref="P:System.IO.FileStream.CanRead" /&gt;</ph>-Eigenschaft und die <ph id="ph2">&lt;see cref="P:System.IO.FileStream.CanWrite" /&gt;</ph>-Eigenschaft des <ph id="ph3">&lt;see langword="FileStream" /&gt;</ph>-Objekts festlegt.</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.#ctor(System.IntPtr,System.IO.FileAccess,System.Boolean,System.Int32,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the file handle will be owned by this <ph id="ph2">&lt;see langword="FileStream" /&gt;</ph> instance; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, wenn das Dateihandle im Besitz dieser <ph id="ph2">&lt;see langword="FileStream" /&gt;</ph>-Instanz sein wird, andernfalls <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.#ctor(System.IntPtr,System.IO.FileAccess,System.Boolean,System.Int32,System.Boolean)">
          <source>A positive <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> value greater than 0 indicating the buffer size.</source>
          <target state="translated">Ein positiver <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph>-Wert größer als 0 (null), der die Puffergröße angibt.</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.#ctor(System.IntPtr,System.IO.FileAccess,System.Boolean,System.Int32,System.Boolean)">
          <source>The default buffer size is 4096.</source>
          <target state="translated">Die Standardpuffergröße ist 4096.</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.#ctor(System.IntPtr,System.IO.FileAccess,System.Boolean,System.Int32,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the handle was opened asynchronously (that is, in overlapped I/O mode); otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, wenn das Handle asynchron geöffnet wurde (im überlappenden E/A-Modus), andernfalls <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.#ctor(System.IntPtr,System.IO.FileAccess,System.Boolean,System.Int32,System.Boolean)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.IO.FileStream" /&gt;</ph> class for the specified file handle, with the specified read/write permission, <ph id="ph2">&lt;see langword="FileStream" /&gt;</ph> instance ownership, buffer size, and synchronous or asynchronous state.</source>
          <target state="translated">Initialisiert eine neue Instanz der <ph id="ph1">&lt;see cref="T:System.IO.FileStream" /&gt;</ph>-Klasse für das angegebene Dateihandle mit den Angaben für die Lese-/Schreibberechtigung, den Besitz der <ph id="ph2">&lt;see langword="FileStream" /&gt;</ph>-Instanz, die Puffergröße und den synchronen bzw. asynchronen Zustand.</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.#ctor(System.IntPtr,System.IO.FileAccess,System.Boolean,System.Int32,System.Boolean)">
          <source>The <ph id="ph1">`FileStream`</ph> object is given the specified access to the file.</source>
          <target state="translated">Die <ph id="ph1">`FileStream`</ph> Objekt erhält den angegebenen Zugriff auf die Datei.</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.#ctor(System.IntPtr,System.IO.FileAccess,System.Boolean,System.Int32,System.Boolean)">
          <source>The ownership of the handle will be as specified.</source>
          <target state="translated">Der Besitz des Handles werden wie angegeben.</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.#ctor(System.IntPtr,System.IO.FileAccess,System.Boolean,System.Int32,System.Boolean)">
          <source>If this <ph id="ph1">`FileStream`</ph> owns the handle, a call to the <ph id="ph2">&lt;xref:System.IO.Stream.Close%2A&gt;</ph> method will also close the handle.</source>
          <target state="translated">Wenn diese <ph id="ph1">`FileStream`</ph> besitzt das Handle, einen Aufruf der <ph id="ph2">&lt;xref:System.IO.Stream.Close%2A&gt;</ph> Methode wird auch das Handle geschlossen.</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.#ctor(System.IntPtr,System.IO.FileAccess,System.Boolean,System.Int32,System.Boolean)">
          <source>In particular, the file's handle count is decremented.</source>
          <target state="translated">Insbesondere wird die Datei Handleanzahl verringert.</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.#ctor(System.IntPtr,System.IO.FileAccess,System.Boolean,System.Int32,System.Boolean)">
          <source>The <ph id="ph1">`FileStream`</ph> object is given the specified buffer size.</source>
          <target state="translated">Die <ph id="ph1">`FileStream`</ph> Objekt erhält die angegebenen Puffergröße.</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.#ctor(System.IntPtr,System.IO.FileAccess,System.Boolean,System.Int32,System.Boolean)">
          <source><ph id="ph1">`FileStream`</ph> assumes that it has exclusive control over the handle.</source>
          <target state="translated"><ph id="ph1">`FileStream`</ph> wird davon ausgegangen, dass sie die exklusive Kontrolle über das Handle besitzt.</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.#ctor(System.IntPtr,System.IO.FileAccess,System.Boolean,System.Int32,System.Boolean)">
          <source>Reading, writing, or seeking while a <ph id="ph1">`FileStream`</ph> is also holding a handle could result in data corruption.</source>
          <target state="translated">Lesen, schreiben oder beim Suchen einer <ph id="ph1">`FileStream`</ph> enthalten auch ein Handle zu beschädigten Daten führen.</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.#ctor(System.IntPtr,System.IO.FileAccess,System.Boolean,System.Int32,System.Boolean)">
          <source>For data safety, call <ph id="ph1">&lt;xref:System.IO.FileStream.Flush%2A&gt;</ph> before using the handle, and avoid calling any methods other than <ph id="ph2">`Close`</ph> after you are done using the handle.</source>
          <target state="translated">Rufen Sie Daten aus Sicherheitsgründen <ph id="ph1">&lt;xref:System.IO.FileStream.Flush%2A&gt;</ph> vor Verwendung des Handles, und vermeiden Sie durch Aufrufen von Methoden außer <ph id="ph2">`Close`</ph> Sie abschließend mit dem Handle.</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.#ctor(System.IntPtr,System.IO.FileAccess,System.Boolean,System.Int32,System.Boolean)">
          <source>Alternately, read and write to the handle before calling this <ph id="ph1">`FileStream`</ph> constructor.</source>
          <target state="translated">Klicken Sie alternativ lesen und Schreiben in das Handle vor dem Aufrufen dieser <ph id="ph1">`FileStream`</ph> Konstruktor.</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.#ctor(System.IntPtr,System.IO.FileAccess,System.Boolean,System.Int32,System.Boolean)">
          <source><ph id="ph1">`FileShare.Read`</ph> is the default for those <ph id="ph2">&lt;xref:System.IO.FileStream&gt;</ph> constructors without a <ph id="ph3">`FileShare`</ph> parameter.</source>
          <target state="translated"><ph id="ph1">`FileShare.Read`</ph> ist der Standardwert für diese <ph id="ph2">&lt;xref:System.IO.FileStream&gt;</ph> Konstruktoren ohne eine <ph id="ph3">`FileShare`</ph> Parameter.</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.#ctor(System.IntPtr,System.IO.FileAccess,System.Boolean,System.Int32,System.Boolean)">
          <source>When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable, and could cause an exception to be thrown.</source>
          <target state="translated">Wenn Sie einen Satz von Zeichen mit einer bestimmten kultureinstellung kompilieren und dieser dieselben Zeichen mit einer anderen kultureinstellung abrufen, der Zeichen können nicht interpretiert werden und können dazu führen, dass eine Ausnahme ausgelöst werden.</target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.#ctor(System.IntPtr,System.IO.FileAccess,System.Boolean,System.Int32,System.Boolean)">
          <source>For a list of common file and directory operations, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</source>
          <target state="translated">Eine Liste der allgemeinen Datei- und Verzeichnisvorgänge, finden Sie unter <bpt id="p1">[</bpt>allgemeine e/a-Aufgaben<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.#ctor(System.IntPtr,System.IO.FileAccess,System.Boolean,System.Int32,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="access" /&gt;</ph> is less than <ph id="ph2">&lt;see langword="FileAccess.Read" /&gt;</ph> or greater than <ph id="ph3">&lt;see langword="FileAccess.ReadWrite" /&gt;</ph> or <ph id="ph4">&lt;paramref name="bufferSize" /&gt;</ph> is less than or equal to 0.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="access" /&gt;</ph> ist kleiner als <ph id="ph2">&lt;see langword="FileAccess.Read" /&gt;</ph> oder größer als <ph id="ph3">&lt;see langword="FileAccess.ReadWrite" /&gt;</ph>, oder <ph id="ph4">&lt;paramref name="bufferSize" /&gt;</ph> ist kleiner oder gleich 0.</target>       </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.#ctor(System.IntPtr,System.IO.FileAccess,System.Boolean,System.Int32,System.Boolean)">
          <source>The handle is invalid.</source>
          <target state="translated">Das Handle ist ungültig.</target>       </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.#ctor(System.IntPtr,System.IO.FileAccess,System.Boolean,System.Int32,System.Boolean)">
          <source>An I/O error, such as a disk error, occurred.</source>
          <target state="translated">Ein E/A-Fehler, z. B. ein Datenträgerfehler ist aufgetreten.</target>       </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.#ctor(System.IntPtr,System.IO.FileAccess,System.Boolean,System.Int32,System.Boolean)">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.#ctor(System.IntPtr,System.IO.FileAccess,System.Boolean,System.Int32,System.Boolean)">
          <source>The stream has been closed.</source>
          <target state="translated">Der Stream wurde geschlossen.</target>       </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.#ctor(System.IntPtr,System.IO.FileAccess,System.Boolean,System.Int32,System.Boolean)">
          <source>The caller does not have the required permission.</source>
          <target state="translated">Der Aufrufer verfügt nicht über die erforderliche Berechtigung.</target>       </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.#ctor(System.IntPtr,System.IO.FileAccess,System.Boolean,System.Int32,System.Boolean)">
          <source>The <ph id="ph1">&lt;paramref name="access" /&gt;</ph> requested is not permitted by the operating system for the specified file handle, such as when <ph id="ph2">&lt;paramref name="access" /&gt;</ph> is <ph id="ph3">&lt;see langword="Write" /&gt;</ph> or <ph id="ph4">&lt;see langword="ReadWrite" /&gt;</ph> and the file handle is set for read-only access.</source>
          <target state="translated">Der angeforderte <ph id="ph1">&lt;paramref name="access" /&gt;</ph> für das angegebene Dateihandle wird durch das Betriebssystem nicht zugelassen. Dies ist z. B. der Fall, wenn <ph id="ph3">&lt;see langword="Write" /&gt;</ph> oder <ph id="ph4">&lt;see langword="ReadWrite" /&gt;</ph> für <ph id="ph2">&lt;paramref name="access" /&gt;</ph> festgelegt sind und das Dateihandle auf schreibgeschützten Zugriff festgelegt ist.</target>       </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.#ctor(System.IntPtr,System.IO.FileAccess,System.Boolean,System.Int32,System.Boolean)">
          <source>for access to unmanaged code.</source>
          <target state="translated">für den Zugriff auf nicht verwalteten Code.</target>       </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.#ctor(System.IntPtr,System.IO.FileAccess,System.Boolean,System.Int32,System.Boolean)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph>.</source>
          <target state="translated">Zugeordnete Enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.Int32)">
          <source>A relative or absolute path for the file that the current <ph id="ph1">&lt;see langword="FileStream" /&gt;</ph> object will encapsulate.</source>
          <target state="translated">Ein relativer oder absoluter Pfad zu der Datei, die vom aktuellen <ph id="ph1">&lt;see langword="FileStream" /&gt;</ph>-Objekt gekapselt wird.</target>       </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.Int32)">
          <source>A constant that determines how to open or create the file.</source>
          <target state="translated">Eine Konstante, die bestimmt, auf welche Weise die Datei geöffnet oder erstellt werden soll.</target>       </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.Int32)">
          <source>A constant that determines how the file can be accessed by the <ph id="ph1">&lt;see langword="FileStream" /&gt;</ph> object.</source>
          <target state="translated">Eine Konstante, die bestimmt, welcher Zugriff auf die Datei für das <ph id="ph1">&lt;see langword="FileStream" /&gt;</ph>-Objekt zulässig ist.</target>       </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.Int32)">
          <source>This also determines the values returned by the <ph id="ph1">&lt;see cref="P:System.IO.FileStream.CanRead" /&gt;</ph> and <ph id="ph2">&lt;see cref="P:System.IO.FileStream.CanWrite" /&gt;</ph> properties of the <ph id="ph3">&lt;see langword="FileStream" /&gt;</ph> object.</source>
          <target state="translated">Dies bestimmt ebenfalls die von den <ph id="ph1">&lt;see cref="P:System.IO.FileStream.CanRead" /&gt;</ph>- und <ph id="ph2">&lt;see cref="P:System.IO.FileStream.CanWrite" /&gt;</ph>-Eigenschaften des <ph id="ph3">&lt;see langword="FileStream" /&gt;</ph>-Objekts zurückgegebenen Werte.</target>       </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.Int32)">
          <source><ph id="ph1">&lt;see cref="P:System.IO.FileStream.CanSeek" /&gt;</ph> is <ph id="ph2">&lt;see langword="true" /&gt;</ph> if <bpt id="p1">&lt;c&gt;</bpt>path<ept id="p1">&lt;/c&gt;</ept> specifies a disk file.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.IO.FileStream.CanSeek" /&gt;</ph> ist <ph id="ph2">&lt;see langword="true" /&gt;</ph>, wenn <bpt id="p1">&lt;c&gt;</bpt>path<ept id="p1">&lt;/c&gt;</ept> eine Datei auf einem Datenträger darstellt.</target>       </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.Int32)">
          <source>A constant that determines how the file will be shared by processes.</source>
          <target state="translated">Eine Konstante zur Bestimmung der Art, in der Prozesse gemeinsam auf die Datei zugreifen.</target>       </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.Int32)">
          <source>A positive <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> value greater than 0 indicating the buffer size.</source>
          <target state="translated">Ein positiver <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph>-Wert größer als 0 (null), der die Puffergröße angibt.</target>       </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.Int32)">
          <source>The default buffer size is 4096.</source>
          <target state="translated">Die Standardpuffergröße ist 4096.</target>       </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.Int32)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.IO.FileStream" /&gt;</ph> class with the specified path, creation mode, read/write and sharing permission, and buffer size.</source>
          <target state="translated">Initialisiert eine neue Instanz der <ph id="ph1">&lt;see cref="T:System.IO.FileStream" /&gt;</ph>-Klasse mit den Angaben für den Pfad, den Erstellungsmodus, die Lese-/Schreib- und Freigabeberechtigung sowie die Puffergröße.</target>       </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.Int32)">
          <source>The .NET Framework does not support direct access to physical disks through paths that are device names, such as "<ph id="ph1">\\</ph><ph id="ph2">\\</ph>.\PHYSICALDRIVE0 ".</source>
          <target state="translated">.NET Framework unterstützt keine direkten Zugriff auf physische Datenträger über Pfade, Gerätenamen, z. B. "<ph id="ph1">\\</ph><ph id="ph2">\\</ph>. \PHYSICALDRIVE0".</target>       </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.Int32)">
          <source>The <ph id="ph1">`path`</ph> parameter can be a file name, including a file on a Universal Naming Convention (UNC) share.</source>
          <target state="translated">Die <ph id="ph1">`path`</ph> Parameter kann einen Dateinamen, einschließlich einer Datei auf einer Freigabe (UNC = Universal Naming Convention) sein.</target>       </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.Int32)">
          <source><ph id="ph1">`path`</ph> is not required to be a file stored on disk; it can be any part of a system that supports access through streams.</source>
          <target state="translated"><ph id="ph1">`path`</ph> ist nicht erforderlich, um eine Datei auf dem Datenträger gespeichert werden. Es kann einen beliebigen Teil eines Systems, die Zugriff über Datenströme unterstützt.</target>       </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.Int32)">
          <source>For example, depending on the system, this class can access a physical device.</source>
          <target state="translated">Je nach System kann diese Klasse z. B. ein physisches Gerät zugreifen.</target>       </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.Int32)">
          <source><ph id="ph1">&lt;xref:System.IO.Stream.CanSeek%2A&gt;</ph> is <ph id="ph2">`true`</ph> for all <ph id="ph3">&lt;xref:System.IO.FileStream&gt;</ph> objects that encapsulate files.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.Stream.CanSeek%2A&gt;</ph> ist <ph id="ph2">`true`</ph> für alle <ph id="ph3">&lt;xref:System.IO.FileStream&gt;</ph> Objekte, die Dateien zu kapseln.</target>       </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.Int32)">
          <source>If <ph id="ph1">`path`</ph> indicates a device that does not support seeking, the <ph id="ph2">&lt;xref:System.IO.FileStream.CanSeek%2A&gt;</ph> property on the resulting <ph id="ph3">&lt;xref:System.IO.FileStream&gt;</ph> is <ph id="ph4">`false`</ph>.</source>
          <target state="translated">Wenn <ph id="ph1">`path`</ph> gibt an, ein Gerät, das keine Suchvorgänge, unterstützt die <ph id="ph2">&lt;xref:System.IO.FileStream.CanSeek%2A&gt;</ph> Eigenschaft für die resultierende <ph id="ph3">&lt;xref:System.IO.FileStream&gt;</ph> ist <ph id="ph4">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.Int32)">
          <source>For additional information, see <ph id="ph1">&lt;xref:System.IO.Stream.CanSeek%2A&gt;</ph>.</source>
          <target state="translated">Weitere Informationen finden Sie unter <ph id="ph1">&lt;xref:System.IO.Stream.CanSeek%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.Int32)">
          <source>When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable, and could cause an exception to be thrown.</source>
          <target state="translated">Wenn Sie einen Satz von Zeichen mit einer bestimmten kultureinstellung kompilieren und dieser dieselben Zeichen mit einer anderen kultureinstellung abrufen, der Zeichen können nicht interpretiert werden und können dazu führen, dass eine Ausnahme ausgelöst werden.</target>       </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.Int32)">
          <source>For a list of common file and directory operations, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</source>
          <target state="translated">Eine Liste der allgemeinen Datei- und Verzeichnisvorgänge, finden Sie unter <bpt id="p1">[</bpt>allgemeine e/a-Aufgaben<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</target>       </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="path" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="path" /&gt;</ph> is an empty string (""), contains only white space, or contains one or more invalid characters.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph> ist eine leere Zeichenfolge (""), enthält nur Leerzeichen oder enthält mindestens ein ungültiges Zeichen.</target>       </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.Int32)">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="path" /&gt;</ph> refers to a non-file device, such as "con:", "com1:", "lpt1:", etc. in an NTFS environment.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph> verweist auf ein Gerät, das keine Datei ist, z. B. "con:", "com1:", "lpt1:" usw. in einer NTFS-Umgebung.</target>       </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="path" /&gt;</ph> refers to a non-file device, such as "con:", "com1:", "lpt1:", etc. in a non-NTFS environment.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph> verweist auf ein Gerät, das keine Datei ist, z. B. "con:", "com1:", "lpt1:" usw. in einer Nicht-NTFS-Umgebung.</target>       </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="bufferSize" /&gt;</ph> is negative or zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="bufferSize" /&gt;</ph> ist negativ oder 0 (null).</target>       </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.Int32)">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="mode" /&gt;</ph>, <ph id="ph2">&lt;paramref name="access" /&gt;</ph>, or <ph id="ph3">&lt;paramref name="share" /&gt;</ph> contain an invalid value.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="mode" /&gt;</ph>, <ph id="ph2">&lt;paramref name="access" /&gt;</ph> oder <ph id="ph3">&lt;paramref name="share" /&gt;</ph> enthalten einen ungültigen Wert.</target>       </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.Int32)">
          <source>The file cannot be found, such as when <ph id="ph1">&lt;paramref name="mode" /&gt;</ph> is <ph id="ph2">&lt;see langword="FileMode.Truncate" /&gt;</ph> or <ph id="ph3">&lt;see langword="FileMode.Open" /&gt;</ph>, and the file specified by <ph id="ph4">&lt;paramref name="path" /&gt;</ph> does not exist.</source>
          <target state="translated">Die Datei kann nicht gefunden werden. Dies ist z. B. der Fall, wenn <ph id="ph1">&lt;paramref name="mode" /&gt;</ph> auf <ph id="ph2">&lt;see langword="FileMode.Truncate" /&gt;</ph> oder <ph id="ph3">&lt;see langword="FileMode.Open" /&gt;</ph> festgelegt wurde und die durch <ph id="ph4">&lt;paramref name="path" /&gt;</ph> angegebene Datei nicht vorhanden ist.</target>       </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.Int32)">
          <source>The file must already exist in these modes.</source>
          <target state="translated">Die Datei muss bereits in diesen Modi vorhanden sein.</target>       </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.Int32)">
          <source>An I/O error, such as specifying <ph id="ph1">&lt;see langword="FileMode.CreateNew" /&gt;</ph> when the file specified by <ph id="ph2">&lt;paramref name="path" /&gt;</ph> already exists, occurred.</source>
          <target state="translated">Es ist ein E/A-Fehler aufgetreten, beispielsweise wurde <ph id="ph1">&lt;see langword="FileMode.CreateNew" /&gt;</ph> angegeben, und die durch <ph id="ph2">&lt;paramref name="path" /&gt;</ph> angegebene Datei ist bereits vorhanden.</target>       </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.Int32)">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.Int32)">
          <source>The system is running Windows 98 or Windows 98 Second Edition and <ph id="ph1">&lt;paramref name="share" /&gt;</ph> is set to <ph id="ph2">&lt;see langword="FileShare.Delete" /&gt;</ph>.</source>
          <target state="translated">Das System führt Windows 98 oder Windows 98 SE aus, und <ph id="ph1">&lt;paramref name="share" /&gt;</ph> ist auf <ph id="ph2">&lt;see langword="FileShare.Delete" /&gt;</ph> festgelegt.</target>       </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.Int32)">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.Int32)">
          <source>The stream has been closed.</source>
          <target state="translated">Der Stream wurde geschlossen.</target>       </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.Int32)">
          <source>The caller does not have the required permission.</source>
          <target state="translated">Der Aufrufer verfügt nicht über die erforderliche Berechtigung.</target>       </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.Int32)">
          <source>The specified path is invalid, such as being on an unmapped drive.</source>
          <target state="translated">Der angegebene Pfad ist ungültig, z. B. befindet er sich auf einem nicht zugeordneten Laufwerk.</target>       </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.Int32)">
          <source>The <ph id="ph1">&lt;paramref name="access" /&gt;</ph> requested is not permitted by the operating system for the specified <ph id="ph2">&lt;paramref name="path" /&gt;</ph>, such as when <ph id="ph3">&lt;paramref name="access" /&gt;</ph> is <ph id="ph4">&lt;see langword="Write" /&gt;</ph> or <ph id="ph5">&lt;see langword="ReadWrite" /&gt;</ph> and the file or directory is set for read-only access.</source>
          <target state="translated">Der angeforderte <ph id="ph1">&lt;paramref name="access" /&gt;</ph> für den angegebenen <ph id="ph2">&lt;paramref name="path" /&gt;</ph> wird durch das Betriebssystem nicht zugelassen. Dies ist z. B. der Fall, wenn <ph id="ph4">&lt;see langword="Write" /&gt;</ph> oder <ph id="ph5">&lt;see langword="ReadWrite" /&gt;</ph> für <ph id="ph3">&lt;paramref name="access" /&gt;</ph> festgelegt ist, die Datei bzw. das Verzeichnis jedoch schreibgeschützt ist.</target>       </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.Int32)">
          <source>The specified path, file name, or both exceed the system-defined maximum length.</source>
          <target state="translated">Der angegebene Pfad und/oder Dateiname überschreiten die vom System definierte maximale Länge.</target>       </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.Int32)">
          <source>For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.</source>
          <target state="translated">Beispielsweise müssen auf Windows-basierten Plattformen Pfade weniger als 248 Zeichen und Dateinamen weniger als 260 Zeichen enthalten.</target>       </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.Int32)">
          <source>for reading, writing, and appending to files.</source>
          <target state="translated">zum Lesen, schreiben und Anfügen von Dateien.</target>       </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.Int32)">
          <source>Associated enumerations: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /&gt;</ph>, <ph id="ph2">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /&gt;</ph>, and <ph id="ph3">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Append" /&gt;</ph>.</source>
          <target state="translated">Zugeordnete Enumerationen: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /&gt;</ph>, <ph id="ph2">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /&gt;</ph>, und <ph id="ph3">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Append" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.Int32,System.Boolean)">
          <source>A relative or absolute path for the file that the current <ph id="ph1">&lt;see langword="FileStream" /&gt;</ph> object will encapsulate.</source>
          <target state="translated">Ein relativer oder absoluter Pfad zu der Datei, die vom aktuellen <ph id="ph1">&lt;see langword="FileStream" /&gt;</ph>-Objekt gekapselt wird.</target>       </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.Int32,System.Boolean)">
          <source>A constant that determines how to open or create the file.</source>
          <target state="translated">Eine Konstante, die bestimmt, auf welche Weise die Datei geöffnet oder erstellt werden soll.</target>       </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.Int32,System.Boolean)">
          <source>A constant that determines how the file can be accessed by the <ph id="ph1">&lt;see langword="FileStream" /&gt;</ph> object.</source>
          <target state="translated">Eine Konstante, die bestimmt, welcher Zugriff auf die Datei für das <ph id="ph1">&lt;see langword="FileStream" /&gt;</ph>-Objekt zulässig ist.</target>       </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.Int32,System.Boolean)">
          <source>This also determines the values returned by the <ph id="ph1">&lt;see cref="P:System.IO.FileStream.CanRead" /&gt;</ph> and <ph id="ph2">&lt;see cref="P:System.IO.FileStream.CanWrite" /&gt;</ph> properties of the <ph id="ph3">&lt;see langword="FileStream" /&gt;</ph> object.</source>
          <target state="translated">Dies bestimmt ebenfalls die von den <ph id="ph1">&lt;see cref="P:System.IO.FileStream.CanRead" /&gt;</ph>- und <ph id="ph2">&lt;see cref="P:System.IO.FileStream.CanWrite" /&gt;</ph>-Eigenschaften des <ph id="ph3">&lt;see langword="FileStream" /&gt;</ph>-Objekts zurückgegebenen Werte.</target>       </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.Int32,System.Boolean)">
          <source><ph id="ph1">&lt;see cref="P:System.IO.FileStream.CanSeek" /&gt;</ph> is <ph id="ph2">&lt;see langword="true" /&gt;</ph> if <bpt id="p1">&lt;c&gt;</bpt>path<ept id="p1">&lt;/c&gt;</ept> specifies a disk file.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.IO.FileStream.CanSeek" /&gt;</ph> ist <ph id="ph2">&lt;see langword="true" /&gt;</ph>, wenn <bpt id="p1">&lt;c&gt;</bpt>path<ept id="p1">&lt;/c&gt;</ept> eine Datei auf einem Datenträger darstellt.</target>       </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.Int32,System.Boolean)">
          <source>A constant that determines how the file will be shared by processes.</source>
          <target state="translated">Eine Konstante zur Bestimmung der Art, in der Prozesse gemeinsam auf die Datei zugreifen.</target>       </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.Int32,System.Boolean)">
          <source>A positive <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> value greater than 0 indicating the buffer size.</source>
          <target state="translated">Ein positiver <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph>-Wert größer als 0 (null), der die Puffergröße angibt.</target>       </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.Int32,System.Boolean)">
          <source>The default buffer size is 4096..</source>
          <target state="translated">Die Standardpuffergröße ist 4096.</target>       </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.Int32,System.Boolean)">
          <source>Specifies whether to use asynchronous I/O or synchronous I/O.</source>
          <target state="translated">Gibt an, ob eine asynchrone E/A oder eine synchrone E/A verwendet wird.</target>       </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.Int32,System.Boolean)">
          <source>However, note that the underlying operating system might not support asynchronous I/O, so when specifying <ph id="ph1">&lt;see langword="true" /&gt;</ph>, the handle might be opened synchronously depending on the platform.</source>
          <target state="translated">Beachten Sie jedoch, dass das zugrunde liegende Betriebssystem möglicherweise keine asynchrone E/A unterstützt, sodass das Handle je nach Plattform auch bei der Angabe von <ph id="ph1">&lt;see langword="true" /&gt;</ph> möglicherweise synchron geöffnet wird.</target>       </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.Int32,System.Boolean)">
          <source>When opened asynchronously, the <ph id="ph1">&lt;see cref="M:System.IO.FileStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /&gt;</ph> and <ph id="ph2">&lt;see cref="M:System.IO.FileStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /&gt;</ph> methods perform better on large reads or writes, but they might be much slower for small reads or writes.</source>
          <target state="translated">Bei asynchronem Öffnen liefern die <ph id="ph1">&lt;see cref="M:System.IO.FileStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /&gt;</ph>-Methode und die <ph id="ph2">&lt;see cref="M:System.IO.FileStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /&gt;</ph>-Methode bei umfangreichen Lese- oder Schreibvorgängen eine höhere Leistung, sind aber möglicherweise bei kleinen Lese- und Schreibvorgängen wesentlich langsamer.</target>       </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.Int32,System.Boolean)">
          <source>If the application is designed to take advantage of asynchronous I/O, set the <bpt id="p1">&lt;c&gt;</bpt>useAsync<ept id="p1">&lt;/c&gt;</ept> parameter to <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">Wenn die Anwendung die Vorteile der asynchronen E/A nutzen kann, legen Sie den <bpt id="p1">&lt;c&gt;</bpt>useAsync<ept id="p1">&lt;/c&gt;</ept>-Parameter auf <ph id="ph1">&lt;see langword="true" /&gt;</ph> fest.</target>       </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.Int32,System.Boolean)">
          <source>Using asynchronous I/O correctly can speed up applications by as much as a factor of 10, but using it without redesigning the application for asynchronous I/O can decrease performance by as much as a factor of 10.</source>
          <target state="translated">Wird die asynchrone E/A richtig eingesetzt, können Anwendungen um ein Zehnfaches beschleunigt werden. Wenn die Anwendung jedoch nicht an eine asynchrone E/A angepasst wurde, kann dies die Leistung auch um das Zehnfache verringern.</target>       </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.Int32,System.Boolean)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.IO.FileStream" /&gt;</ph> class with the specified path, creation mode, read/write and sharing permission, buffer size, and synchronous or asynchronous state.</source>
          <target state="translated">Initialisiert eine neue Instanz der <ph id="ph1">&lt;see cref="T:System.IO.FileStream" /&gt;</ph>-Klasse mit den Angaben für den Pfad, den Erstellungsmodus, die Lese-/Schreib- und Freigabeberechtigung, die Puffergröße und den synchronen bzw. asynchronen Zustand.</target>       </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.Int32,System.Boolean)">
          <source>The .NET Framework does not support direct access to physical disks through paths that are device names, such as "<ph id="ph1">\\</ph><ph id="ph2">\\</ph>.\PHYSICALDRIVE0 ".</source>
          <target state="translated">.NET Framework unterstützt keine direkten Zugriff auf physische Datenträger über Pfade, Gerätenamen, z. B. "<ph id="ph1">\\</ph><ph id="ph2">\\</ph>. \PHYSICALDRIVE0".</target>       </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.Int32,System.Boolean)">
          <source>The <ph id="ph1">`path`</ph> parameter can be a file name, including a file on a Universal Naming Convention (UNC) share.</source>
          <target state="translated">Die <ph id="ph1">`path`</ph> Parameter kann einen Dateinamen, einschließlich einer Datei auf einer Freigabe (UNC = Universal Naming Convention) sein.</target>       </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.Int32,System.Boolean)">
          <source><ph id="ph1">`path`</ph> is not required to be a file stored on disk; it can be any part of a system that supports access through streams.</source>
          <target state="translated"><ph id="ph1">`path`</ph> ist nicht erforderlich, um eine Datei auf dem Datenträger gespeichert werden. Es kann einen beliebigen Teil eines Systems, die Zugriff über Datenströme unterstützt.</target>       </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.Int32,System.Boolean)">
          <source>For example, depending on the system, this class can access a physical device.</source>
          <target state="translated">Je nach System kann diese Klasse z. B. ein physisches Gerät zugreifen.</target>       </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.Int32,System.Boolean)">
          <source><ph id="ph1">&lt;xref:System.IO.Stream.CanSeek%2A&gt;</ph> is <ph id="ph2">`true`</ph> for all <ph id="ph3">&lt;xref:System.IO.FileStream&gt;</ph> objects that encapsulate files.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.Stream.CanSeek%2A&gt;</ph> ist <ph id="ph2">`true`</ph> für alle <ph id="ph3">&lt;xref:System.IO.FileStream&gt;</ph> Objekte, die Dateien zu kapseln.</target>       </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.Int32,System.Boolean)">
          <source>If <ph id="ph1">`path`</ph> indicates a device that does not support seeking, the <ph id="ph2">&lt;xref:System.IO.FileStream.CanSeek%2A&gt;</ph> property on the resulting <ph id="ph3">&lt;xref:System.IO.FileStream&gt;</ph> is <ph id="ph4">`false`</ph>.</source>
          <target state="translated">Wenn <ph id="ph1">`path`</ph> gibt an, ein Gerät, das keine Suchvorgänge, unterstützt die <ph id="ph2">&lt;xref:System.IO.FileStream.CanSeek%2A&gt;</ph> Eigenschaft für die resultierende <ph id="ph3">&lt;xref:System.IO.FileStream&gt;</ph> ist <ph id="ph4">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.Int32,System.Boolean)">
          <source>For additional information, see <ph id="ph1">&lt;xref:System.IO.Stream.CanSeek%2A&gt;</ph>.</source>
          <target state="translated">Weitere Informationen finden Sie unter <ph id="ph1">&lt;xref:System.IO.Stream.CanSeek%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.Int32,System.Boolean)">
          <source>When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable, and could cause an exception to be thrown.</source>
          <target state="translated">Wenn Sie einen Satz von Zeichen mit einer bestimmten kultureinstellung kompilieren und dieser dieselben Zeichen mit einer anderen kultureinstellung abrufen, der Zeichen können nicht interpretiert werden und können dazu führen, dass eine Ausnahme ausgelöst werden.</target>       </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.Int32,System.Boolean)">
          <source>For a list of common file and directory operations, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</source>
          <target state="translated">Eine Liste der allgemeinen Datei- und Verzeichnisvorgänge, finden Sie unter <bpt id="p1">[</bpt>allgemeine e/a-Aufgaben<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</target>       </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.Int32,System.Boolean)">
          <source>The following code example shows how to asynchronously write data to a file and then verify that the data was written correctly.</source>
          <target state="translated">Im folgenden Codebeispiel wird veranschaulicht, wie Daten asynchron in eine Datei schreiben, und vergewissern Sie sich, dass die Daten richtig geschrieben wurde.</target>       </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.Int32,System.Boolean)">
          <source>A <ph id="ph1">`State`</ph> object is created to pass information from the main thread to the <ph id="ph2">`EndReadCallback`</ph> and <ph id="ph3">`EndWriteCallback`</ph> methods.</source>
          <target state="translated">Ein <ph id="ph1">`State`</ph> Objekt wird erstellt, um Informationen aus den Hauptthread, übergeben die <ph id="ph2">`EndReadCallback`</ph> und <ph id="ph3">`EndWriteCallback`</ph> Methoden.</target>       </trans-unit>
        <trans-unit id="485" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.Int32,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="path" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="486" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.Int32,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="path" /&gt;</ph> is an empty string (""), contains only white space, or contains one or more invalid characters.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph> ist eine leere Zeichenfolge (""), enthält nur Leerzeichen oder enthält mindestens ein ungültiges Zeichen.</target>       </trans-unit>
        <trans-unit id="487" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.Int32,System.Boolean)">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="488" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.Int32,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="path" /&gt;</ph> refers to a non-file device, such as "con:", "com1:", "lpt1:", etc. in an NTFS environment.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph> verweist auf ein Gerät, das keine Datei ist, z. B. "con:", "com1:", "lpt1:" usw. in einer NTFS-Umgebung.</target>       </trans-unit>
        <trans-unit id="489" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.Int32,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="path" /&gt;</ph> refers to a non-file device, such as "con:", "com1:", "lpt1:", etc. in a non-NTFS environment.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph> verweist auf ein Gerät, das keine Datei ist, z. B. "con:", "com1:", "lpt1:" usw. in einer Nicht-NTFS-Umgebung.</target>       </trans-unit>
        <trans-unit id="490" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.Int32,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="bufferSize" /&gt;</ph> is negative or zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="bufferSize" /&gt;</ph> ist negativ oder 0 (null).</target>       </trans-unit>
        <trans-unit id="491" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.Int32,System.Boolean)">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="492" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.Int32,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="mode" /&gt;</ph>, <ph id="ph2">&lt;paramref name="access" /&gt;</ph>, or <ph id="ph3">&lt;paramref name="share" /&gt;</ph> contain an invalid value.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="mode" /&gt;</ph>, <ph id="ph2">&lt;paramref name="access" /&gt;</ph> oder <ph id="ph3">&lt;paramref name="share" /&gt;</ph> enthalten einen ungültigen Wert.</target>       </trans-unit>
        <trans-unit id="493" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.Int32,System.Boolean)">
          <source>The file cannot be found, such as when <ph id="ph1">&lt;paramref name="mode" /&gt;</ph> is <ph id="ph2">&lt;see langword="FileMode.Truncate" /&gt;</ph> or <ph id="ph3">&lt;see langword="FileMode.Open" /&gt;</ph>, and the file specified by <ph id="ph4">&lt;paramref name="path" /&gt;</ph> does not exist.</source>
          <target state="translated">Die Datei kann nicht gefunden werden. Dies ist z. B. der Fall, wenn <ph id="ph1">&lt;paramref name="mode" /&gt;</ph> auf <ph id="ph2">&lt;see langword="FileMode.Truncate" /&gt;</ph> oder <ph id="ph3">&lt;see langword="FileMode.Open" /&gt;</ph> festgelegt wurde und die durch <ph id="ph4">&lt;paramref name="path" /&gt;</ph> angegebene Datei nicht vorhanden ist.</target>       </trans-unit>
        <trans-unit id="494" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.Int32,System.Boolean)">
          <source>The file must already exist in these modes.</source>
          <target state="translated">Die Datei muss bereits in diesen Modi vorhanden sein.</target>       </trans-unit>
        <trans-unit id="495" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.Int32,System.Boolean)">
          <source>An I/O error, such as specifying <ph id="ph1">&lt;see langword="FileMode.CreateNew" /&gt;</ph> when the file specified by <ph id="ph2">&lt;paramref name="path" /&gt;</ph> already exists, occurred.</source>
          <target state="translated">Es ist ein E/A-Fehler aufgetreten, beispielsweise wurde <ph id="ph1">&lt;see langword="FileMode.CreateNew" /&gt;</ph> angegeben, und die durch <ph id="ph2">&lt;paramref name="path" /&gt;</ph> angegebene Datei ist bereits vorhanden.</target>       </trans-unit>
        <trans-unit id="496" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.Int32,System.Boolean)">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="497" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.Int32,System.Boolean)">
          <source>The system is running Windows 98 or Windows 98 Second Edition and <ph id="ph1">&lt;paramref name="share" /&gt;</ph> is set to <ph id="ph2">&lt;see langword="FileShare.Delete" /&gt;</ph>.</source>
          <target state="translated">Das System führt Windows 98 oder Windows 98 SE aus, und <ph id="ph1">&lt;paramref name="share" /&gt;</ph> ist auf <ph id="ph2">&lt;see langword="FileShare.Delete" /&gt;</ph> festgelegt.</target>       </trans-unit>
        <trans-unit id="498" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.Int32,System.Boolean)">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="499" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.Int32,System.Boolean)">
          <source>The stream has been closed.</source>
          <target state="translated">Der Stream wurde geschlossen.</target>       </trans-unit>
        <trans-unit id="500" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.Int32,System.Boolean)">
          <source>The caller does not have the required permission.</source>
          <target state="translated">Der Aufrufer verfügt nicht über die erforderliche Berechtigung.</target>       </trans-unit>
        <trans-unit id="501" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.Int32,System.Boolean)">
          <source>The specified path is invalid, such as being on an unmapped drive.</source>
          <target state="translated">Der angegebene Pfad ist ungültig, z. B. befindet er sich auf einem nicht zugeordneten Laufwerk.</target>       </trans-unit>
        <trans-unit id="502" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.Int32,System.Boolean)">
          <source>The <ph id="ph1">&lt;paramref name="access" /&gt;</ph> requested is not permitted by the operating system for the specified <ph id="ph2">&lt;paramref name="path" /&gt;</ph>, such as when <ph id="ph3">&lt;paramref name="access" /&gt;</ph> is <ph id="ph4">&lt;see langword="Write" /&gt;</ph> or <ph id="ph5">&lt;see langword="ReadWrite" /&gt;</ph> and the file or directory is set for read-only access.</source>
          <target state="translated">Der angeforderte <ph id="ph1">&lt;paramref name="access" /&gt;</ph> für den angegebenen <ph id="ph2">&lt;paramref name="path" /&gt;</ph> wird durch das Betriebssystem nicht zugelassen. Dies ist z. B. der Fall, wenn <ph id="ph4">&lt;see langword="Write" /&gt;</ph> oder <ph id="ph5">&lt;see langword="ReadWrite" /&gt;</ph> für <ph id="ph3">&lt;paramref name="access" /&gt;</ph> festgelegt ist, die Datei bzw. das Verzeichnis jedoch schreibgeschützt ist.</target>       </trans-unit>
        <trans-unit id="503" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.Int32,System.Boolean)">
          <source>The specified path, file name, or both exceed the system-defined maximum length.</source>
          <target state="translated">Der angegebene Pfad und/oder Dateiname überschreiten die vom System definierte maximale Länge.</target>       </trans-unit>
        <trans-unit id="504" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.Int32,System.Boolean)">
          <source>For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.</source>
          <target state="translated">Beispielsweise müssen auf Windows-basierten Plattformen Pfade weniger als 248 Zeichen und Dateinamen weniger als 260 Zeichen enthalten.</target>       </trans-unit>
        <trans-unit id="505" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.Int32,System.Boolean)">
          <source>for reading, writing, and appending to files.</source>
          <target state="translated">zum Lesen, schreiben und Anfügen von Dateien.</target>       </trans-unit>
        <trans-unit id="506" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.Int32,System.Boolean)">
          <source>Associated enumerations: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /&gt;</ph>, <ph id="ph2">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /&gt;</ph>, and <ph id="ph3">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Append" /&gt;</ph>.</source>
          <target state="translated">Zugeordnete Enumerationen: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /&gt;</ph>, <ph id="ph2">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /&gt;</ph>, und <ph id="ph3">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Append" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="507" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.Int32,System.IO.FileOptions)">
          <source>A relative or absolute path for the file that the current <ph id="ph1">&lt;see langword="FileStream" /&gt;</ph> object will encapsulate.</source>
          <target state="translated">Ein relativer oder absoluter Pfad zu der Datei, die vom aktuellen <ph id="ph1">&lt;see langword="FileStream" /&gt;</ph>-Objekt gekapselt wird.</target>       </trans-unit>
        <trans-unit id="508" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.Int32,System.IO.FileOptions)">
          <source>A constant that determines how to open or create the file.</source>
          <target state="translated">Eine Konstante, die bestimmt, auf welche Weise die Datei geöffnet oder erstellt werden soll.</target>       </trans-unit>
        <trans-unit id="509" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.Int32,System.IO.FileOptions)">
          <source>A constant that determines how the file can be accessed by the <ph id="ph1">&lt;see langword="FileStream" /&gt;</ph> object.</source>
          <target state="translated">Eine Konstante, die bestimmt, welcher Zugriff auf die Datei für das <ph id="ph1">&lt;see langword="FileStream" /&gt;</ph>-Objekt zulässig ist.</target>       </trans-unit>
        <trans-unit id="510" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.Int32,System.IO.FileOptions)">
          <source>This also determines the values returned by the <ph id="ph1">&lt;see cref="P:System.IO.FileStream.CanRead" /&gt;</ph> and <ph id="ph2">&lt;see cref="P:System.IO.FileStream.CanWrite" /&gt;</ph> properties of the <ph id="ph3">&lt;see langword="FileStream" /&gt;</ph> object.</source>
          <target state="translated">Dies bestimmt ebenfalls die von den <ph id="ph1">&lt;see cref="P:System.IO.FileStream.CanRead" /&gt;</ph>- und <ph id="ph2">&lt;see cref="P:System.IO.FileStream.CanWrite" /&gt;</ph>-Eigenschaften des <ph id="ph3">&lt;see langword="FileStream" /&gt;</ph>-Objekts zurückgegebenen Werte.</target>       </trans-unit>
        <trans-unit id="511" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.Int32,System.IO.FileOptions)">
          <source><ph id="ph1">&lt;see cref="P:System.IO.FileStream.CanSeek" /&gt;</ph> is <ph id="ph2">&lt;see langword="true" /&gt;</ph> if <bpt id="p1">&lt;c&gt;</bpt>path<ept id="p1">&lt;/c&gt;</ept> specifies a disk file.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.IO.FileStream.CanSeek" /&gt;</ph> ist <ph id="ph2">&lt;see langword="true" /&gt;</ph>, wenn <bpt id="p1">&lt;c&gt;</bpt>path<ept id="p1">&lt;/c&gt;</ept> eine Datei auf einem Datenträger darstellt.</target>       </trans-unit>
        <trans-unit id="512" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.Int32,System.IO.FileOptions)">
          <source>A constant that determines how the file will be shared by processes.</source>
          <target state="translated">Eine Konstante zur Bestimmung der Art, in der Prozesse gemeinsam auf die Datei zugreifen.</target>       </trans-unit>
        <trans-unit id="513" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.Int32,System.IO.FileOptions)">
          <source>A positive <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> value greater than 0 indicating the buffer size.</source>
          <target state="translated">Ein positiver <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph>-Wert größer als 0 (null), der die Puffergröße angibt.</target>       </trans-unit>
        <trans-unit id="514" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.Int32,System.IO.FileOptions)">
          <source>The default buffer size is 4096.</source>
          <target state="translated">Die Standardpuffergröße ist 4096.</target>       </trans-unit>
        <trans-unit id="515" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.Int32,System.IO.FileOptions)">
          <source>A value that specifies additional file options.</source>
          <target state="translated">Ein Wert, der zusätzliche Dateioptionen angibt.</target>       </trans-unit>
        <trans-unit id="516" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.Int32,System.IO.FileOptions)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.IO.FileStream" /&gt;</ph> class with the specified path, creation mode, read/write and sharing permission, the access other FileStreams can have to the same file, the buffer size, and additional file options.</source>
          <target state="translated">Initialisiert eine neue Instanz der <ph id="ph1">&lt;see cref="T:System.IO.FileStream" /&gt;</ph>-Klasse mit den Angaben für den Pfad, den Erstellungsmodus, die Lese-/Schreib- und Freigabeberechtigung, die Zugriffsmöglichkeiten anderer FileStreams auf die gleiche Datei, die Puffergröße und zusätzliche Dateioptionen.</target>       </trans-unit>
        <trans-unit id="517" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.Int32,System.IO.FileOptions)">
          <source>The .NET Framework does not support direct access to physical disks through paths that are device names, such as "<ph id="ph1">\\</ph><ph id="ph2">\\</ph>.\PHYSICALDRIVE0 ".</source>
          <target state="translated">.NET Framework unterstützt keine direkten Zugriff auf physische Datenträger über Pfade, Gerätenamen, z. B. "<ph id="ph1">\\</ph><ph id="ph2">\\</ph>. \PHYSICALDRIVE0".</target>       </trans-unit>
        <trans-unit id="518" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.Int32,System.IO.FileOptions)">
          <source>The <ph id="ph1">`fileOptions`</ph> parameter is used to provide access to more advanced operations that can be leveraged when creating a <ph id="ph2">&lt;xref:System.IO.FileStream&gt;</ph> object.</source>
          <target state="translated">Die <ph id="ph1">`fileOptions`</ph> Parameter wird verwendet, um den Zugriff auf Erweiterte Vorgänge zu ermöglichen, die genutzt werden kann, für die Erstellung einer <ph id="ph2">&lt;xref:System.IO.FileStream&gt;</ph> Objekt.</target>       </trans-unit>
        <trans-unit id="519" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.Int32,System.IO.FileOptions)">
          <source>The <ph id="ph1">`path`</ph> parameter can be a file name, including a file on a Universal Naming Convention (UNC) share.</source>
          <target state="translated">Die <ph id="ph1">`path`</ph> Parameter kann einen Dateinamen, einschließlich einer Datei auf einer Freigabe (UNC = Universal Naming Convention) sein.</target>       </trans-unit>
        <trans-unit id="520" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.Int32,System.IO.FileOptions)">
          <source><ph id="ph1">`path`</ph> is not required to be a file stored on disk; it can be any part of a system that supports access through streams.</source>
          <target state="translated"><ph id="ph1">`path`</ph> ist nicht erforderlich, um eine Datei auf dem Datenträger gespeichert werden. Es kann einen beliebigen Teil eines Systems, die Zugriff über Datenströme unterstützt.</target>       </trans-unit>
        <trans-unit id="521" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.Int32,System.IO.FileOptions)">
          <source>For example, depending on the system, this class can access a physical device.</source>
          <target state="translated">Je nach System kann diese Klasse z. B. ein physisches Gerät zugreifen.</target>       </trans-unit>
        <trans-unit id="522" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.Int32,System.IO.FileOptions)">
          <source><ph id="ph1">&lt;xref:System.IO.Stream.CanSeek%2A&gt;</ph> is <ph id="ph2">`true`</ph> for all <ph id="ph3">&lt;xref:System.IO.FileStream&gt;</ph> objects that encapsulate files.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.Stream.CanSeek%2A&gt;</ph> ist <ph id="ph2">`true`</ph> für alle <ph id="ph3">&lt;xref:System.IO.FileStream&gt;</ph> Objekte, die Dateien zu kapseln.</target>       </trans-unit>
        <trans-unit id="523" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.Int32,System.IO.FileOptions)">
          <source>If <ph id="ph1">`path`</ph> indicates a device that does not support seeking, the <ph id="ph2">&lt;xref:System.IO.FileStream.CanSeek%2A&gt;</ph> property on the resulting <ph id="ph3">&lt;xref:System.IO.FileStream&gt;</ph> is <ph id="ph4">`false`</ph>.</source>
          <target state="translated">Wenn <ph id="ph1">`path`</ph> gibt an, ein Gerät, das keine Suchvorgänge, unterstützt die <ph id="ph2">&lt;xref:System.IO.FileStream.CanSeek%2A&gt;</ph> Eigenschaft für die resultierende <ph id="ph3">&lt;xref:System.IO.FileStream&gt;</ph> ist <ph id="ph4">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="524" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.Int32,System.IO.FileOptions)">
          <source>For additional information, see <ph id="ph1">&lt;xref:System.IO.Stream.CanSeek%2A&gt;</ph>.</source>
          <target state="translated">Weitere Informationen finden Sie unter <ph id="ph1">&lt;xref:System.IO.Stream.CanSeek%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="525" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.Int32,System.IO.FileOptions)">
          <source>When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable, and could cause an exception to be thrown.</source>
          <target state="translated">Wenn Sie einen Satz von Zeichen mit einer bestimmten kultureinstellung kompilieren und dieser dieselben Zeichen mit einer anderen kultureinstellung abrufen, der Zeichen können nicht interpretiert werden und können dazu führen, dass eine Ausnahme ausgelöst werden.</target>       </trans-unit>
        <trans-unit id="526" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.Int32,System.IO.FileOptions)">
          <source>For a list of common file and directory operations, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</source>
          <target state="translated">Eine Liste der allgemeinen Datei- und Verzeichnisvorgänge, finden Sie unter <bpt id="p1">[</bpt>allgemeine e/a-Aufgaben<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</target>       </trans-unit>
        <trans-unit id="527" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.Int32,System.IO.FileOptions)">
          <source>The following example writes data to a file and then reads the data using the <ph id="ph1">&lt;xref:System.IO.FileStream&gt;</ph> object.</source>
          <target state="translated">Das folgende Beispiel schreibt Daten in eine Datei und liest dann die Daten mithilfe der <ph id="ph1">&lt;xref:System.IO.FileStream&gt;</ph> Objekt.</target>       </trans-unit>
        <trans-unit id="528" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.Int32,System.IO.FileOptions)">
          <source><ph id="ph1">&lt;paramref name="path" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="529" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.Int32,System.IO.FileOptions)">
          <source><ph id="ph1">&lt;paramref name="path" /&gt;</ph> is an empty string (""), contains only white space, or contains one or more invalid characters.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph> ist eine leere Zeichenfolge (""), enthält nur Leerzeichen oder enthält mindestens ein ungültiges Zeichen.</target>       </trans-unit>
        <trans-unit id="530" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.Int32,System.IO.FileOptions)">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="531" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.Int32,System.IO.FileOptions)">
          <source><ph id="ph1">&lt;paramref name="path" /&gt;</ph> refers to a non-file device, such as "con:", "com1:", "lpt1:", etc. in an NTFS environment.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph> verweist auf ein Gerät, das keine Datei ist, z. B. "con:", "com1:", "lpt1:" usw. in einer NTFS-Umgebung.</target>       </trans-unit>
        <trans-unit id="532" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.Int32,System.IO.FileOptions)">
          <source><ph id="ph1">&lt;paramref name="path" /&gt;</ph> refers to a non-file device, such as "con:", "com1:", "lpt1:", etc. in a non-NTFS environment.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph> verweist auf ein Gerät, das keine Datei ist, z. B. "con:", "com1:", "lpt1:" usw. in einer Nicht-NTFS-Umgebung.</target>       </trans-unit>
        <trans-unit id="533" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.Int32,System.IO.FileOptions)">
          <source><ph id="ph1">&lt;paramref name="bufferSize" /&gt;</ph> is negative or zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="bufferSize" /&gt;</ph> ist negativ oder 0 (null).</target>       </trans-unit>
        <trans-unit id="534" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.Int32,System.IO.FileOptions)">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="535" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.Int32,System.IO.FileOptions)">
          <source><ph id="ph1">&lt;paramref name="mode" /&gt;</ph>, <ph id="ph2">&lt;paramref name="access" /&gt;</ph>, or <ph id="ph3">&lt;paramref name="share" /&gt;</ph> contain an invalid value.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="mode" /&gt;</ph>, <ph id="ph2">&lt;paramref name="access" /&gt;</ph> oder <ph id="ph3">&lt;paramref name="share" /&gt;</ph> enthalten einen ungültigen Wert.</target>       </trans-unit>
        <trans-unit id="536" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.Int32,System.IO.FileOptions)">
          <source>The file cannot be found, such as when <ph id="ph1">&lt;paramref name="mode" /&gt;</ph> is <ph id="ph2">&lt;see langword="FileMode.Truncate" /&gt;</ph> or <ph id="ph3">&lt;see langword="FileMode.Open" /&gt;</ph>, and the file specified by <ph id="ph4">&lt;paramref name="path" /&gt;</ph> does not exist.</source>
          <target state="translated">Die Datei kann nicht gefunden werden. Dies ist z. B. der Fall, wenn <ph id="ph1">&lt;paramref name="mode" /&gt;</ph> auf <ph id="ph2">&lt;see langword="FileMode.Truncate" /&gt;</ph> oder <ph id="ph3">&lt;see langword="FileMode.Open" /&gt;</ph> festgelegt wurde und die durch <ph id="ph4">&lt;paramref name="path" /&gt;</ph> angegebene Datei nicht vorhanden ist.</target>       </trans-unit>
        <trans-unit id="537" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.Int32,System.IO.FileOptions)">
          <source>The file must already exist in these modes.</source>
          <target state="translated">Die Datei muss bereits in diesen Modi vorhanden sein.</target>       </trans-unit>
        <trans-unit id="538" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.Int32,System.IO.FileOptions)">
          <source>An I/O error, such as specifying <ph id="ph1">&lt;see langword="FileMode.CreateNew" /&gt;</ph> when the file specified by <ph id="ph2">&lt;paramref name="path" /&gt;</ph> already exists, occurred.</source>
          <target state="translated">Es ist ein E/A-Fehler aufgetreten, beispielsweise wurde <ph id="ph1">&lt;see langword="FileMode.CreateNew" /&gt;</ph> angegeben, und die durch <ph id="ph2">&lt;paramref name="path" /&gt;</ph> angegebene Datei ist bereits vorhanden.</target>       </trans-unit>
        <trans-unit id="539" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.Int32,System.IO.FileOptions)">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="540" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.Int32,System.IO.FileOptions)">
          <source>The stream has been closed.</source>
          <target state="translated">Der Stream wurde geschlossen.</target>       </trans-unit>
        <trans-unit id="541" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.Int32,System.IO.FileOptions)">
          <source>The caller does not have the required permission.</source>
          <target state="translated">Der Aufrufer verfügt nicht über die erforderliche Berechtigung.</target>       </trans-unit>
        <trans-unit id="542" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.Int32,System.IO.FileOptions)">
          <source>The specified path is invalid, such as being on an unmapped drive.</source>
          <target state="translated">Der angegebene Pfad ist ungültig, z. B. befindet er sich auf einem nicht zugeordneten Laufwerk.</target>       </trans-unit>
        <trans-unit id="543" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.Int32,System.IO.FileOptions)">
          <source>The <ph id="ph1">&lt;paramref name="access" /&gt;</ph> requested is not permitted by the operating system for the specified <ph id="ph2">&lt;paramref name="path" /&gt;</ph>, such as when <ph id="ph3">&lt;paramref name="access" /&gt;</ph> is <ph id="ph4">&lt;see langword="Write" /&gt;</ph> or <ph id="ph5">&lt;see langword="ReadWrite" /&gt;</ph> and the file or directory is set for read-only access.</source>
          <target state="translated">Der angeforderte <ph id="ph1">&lt;paramref name="access" /&gt;</ph> für den angegebenen <ph id="ph2">&lt;paramref name="path" /&gt;</ph> wird durch das Betriebssystem nicht zugelassen. Dies ist z. B. der Fall, wenn <ph id="ph4">&lt;see langword="Write" /&gt;</ph> oder <ph id="ph5">&lt;see langword="ReadWrite" /&gt;</ph> für <ph id="ph3">&lt;paramref name="access" /&gt;</ph> festgelegt ist, die Datei bzw. das Verzeichnis jedoch schreibgeschützt ist.</target>       </trans-unit>
        <trans-unit id="544" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.Int32,System.IO.FileOptions)">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="545" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.Int32,System.IO.FileOptions)">
          <source><ph id="ph1">&lt;see cref="F:System.IO.FileOptions.Encrypted" /&gt;</ph> is specified for <ph id="ph2">&lt;paramref name="options" /&gt;</ph>, but file encryption is not supported on the current platform.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="F:System.IO.FileOptions.Encrypted" /&gt;</ph> wurde für <ph id="ph2">&lt;paramref name="options" /&gt;</ph> angegeben, aber die Dateiverschlüsselung wird auf der aktuellen Plattform nicht unterstützt.</target>       </trans-unit>
        <trans-unit id="546" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.Int32,System.IO.FileOptions)">
          <source>The specified path, file name, or both exceed the system-defined maximum length.</source>
          <target state="translated">Der angegebene Pfad und/oder Dateiname überschreiten die vom System definierte maximale Länge.</target>       </trans-unit>
        <trans-unit id="547" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.Int32,System.IO.FileOptions)">
          <source>For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.</source>
          <target state="translated">Beispielsweise müssen auf Windows-basierten Plattformen Pfade weniger als 248 Zeichen und Dateinamen weniger als 260 Zeichen enthalten.</target>       </trans-unit>
        <trans-unit id="548" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.Int32,System.IO.FileOptions)">
          <source>for reading, writing, and appending to files.</source>
          <target state="translated">zum Lesen, schreiben und Anfügen von Dateien.</target>       </trans-unit>
        <trans-unit id="549" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.Int32,System.IO.FileOptions)">
          <source>Associated enumerations: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /&gt;</ph>, <ph id="ph2">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /&gt;</ph>, and <ph id="ph3">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Append" /&gt;</ph>.</source>
          <target state="translated">Zugeordnete Enumerationen: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /&gt;</ph>, <ph id="ph2">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /&gt;</ph>, und <ph id="ph3">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Append" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="550" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.Security.AccessControl.FileSystemRights,System.IO.FileShare,System.Int32,System.IO.FileOptions)">
          <source>A relative or absolute path for the file that the current <ph id="ph1">&lt;see cref="T:System.IO.FileStream" /&gt;</ph> object will encapsulate.</source>
          <target state="translated">Ein relativer oder absoluter Pfad zu der Datei, die vom aktuellen <ph id="ph1">&lt;see cref="T:System.IO.FileStream" /&gt;</ph>-Objekt gekapselt wird.</target>       </trans-unit>
        <trans-unit id="551" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.Security.AccessControl.FileSystemRights,System.IO.FileShare,System.Int32,System.IO.FileOptions)">
          <source>A constant that determines how to open or create the file.</source>
          <target state="translated">Eine Konstante, die bestimmt, auf welche Weise die Datei geöffnet oder erstellt werden soll.</target>       </trans-unit>
        <trans-unit id="552" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.Security.AccessControl.FileSystemRights,System.IO.FileShare,System.Int32,System.IO.FileOptions)">
          <source>A constant that determines the access rights to use when creating access and audit rules for the file.</source>
          <target state="translated">Eine Konstante, die die beim Erstellen der Zugriffs- und Überwachungsregeln für die Datei zu verwendenden Zugriffsrechte festlegt.</target>       </trans-unit>
        <trans-unit id="553" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.Security.AccessControl.FileSystemRights,System.IO.FileShare,System.Int32,System.IO.FileOptions)">
          <source>A constant that determines how the file will be shared by processes.</source>
          <target state="translated">Eine Konstante zur Bestimmung der Art, in der Prozesse gemeinsam auf die Datei zugreifen.</target>       </trans-unit>
        <trans-unit id="554" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.Security.AccessControl.FileSystemRights,System.IO.FileShare,System.Int32,System.IO.FileOptions)">
          <source>A positive <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> value greater than 0 indicating the buffer size.</source>
          <target state="translated">Ein positiver <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph>-Wert größer als 0 (null), der die Puffergröße angibt.</target>       </trans-unit>
        <trans-unit id="555" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.Security.AccessControl.FileSystemRights,System.IO.FileShare,System.Int32,System.IO.FileOptions)">
          <source>The default buffer size is 4096.</source>
          <target state="translated">Die Standardpuffergröße ist 4096.</target>       </trans-unit>
        <trans-unit id="556" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.Security.AccessControl.FileSystemRights,System.IO.FileShare,System.Int32,System.IO.FileOptions)">
          <source>A constant that specifies additional file options.</source>
          <target state="translated">Eine Konstante, die zusätzliche Dateioptionen angibt.</target>       </trans-unit>
        <trans-unit id="557" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.Security.AccessControl.FileSystemRights,System.IO.FileShare,System.Int32,System.IO.FileOptions)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.IO.FileStream" /&gt;</ph> class with the specified path, creation mode, access rights and sharing permission, the buffer size, and additional file options.</source>
          <target state="translated">Initialisiert eine neue Instanz der <ph id="ph1">&lt;see cref="T:System.IO.FileStream" /&gt;</ph>-Klasse mit den Angaben für den Pfad, den Erstellungsmodus, die Zugriffsrechte und die Freigabeberechtigung, die Puffergröße und zusätzliche Dateioptionen.</target>       </trans-unit>
        <trans-unit id="558" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.Security.AccessControl.FileSystemRights,System.IO.FileShare,System.Int32,System.IO.FileOptions)">
          <source>The .NET Framework does not support direct access to physical disks through paths that are device names, such as "<ph id="ph1">\\</ph><ph id="ph2">\\</ph>.\PHYSICALDRIVE0 ".</source>
          <target state="translated">.NET Framework unterstützt keine direkten Zugriff auf physische Datenträger über Pfade, Gerätenamen, z. B. "<ph id="ph1">\\</ph><ph id="ph2">\\</ph>. \PHYSICALDRIVE0".</target>       </trans-unit>
        <trans-unit id="559" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.Security.AccessControl.FileSystemRights,System.IO.FileShare,System.Int32,System.IO.FileOptions)">
          <source>Use this <ph id="ph1">&lt;xref:System.IO.FileStream.%23ctor%2A&gt;</ph> constructor to apply access rights at the point of creation of a file.</source>
          <target state="translated">Verwenden Sie diese <ph id="ph1">&lt;xref:System.IO.FileStream.%23ctor%2A&gt;</ph> Konstruktor anzuwendenden Zugriff Rechte zum Zeitpunkt der Erstellung einer Datei.</target>       </trans-unit>
        <trans-unit id="560" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.Security.AccessControl.FileSystemRights,System.IO.FileShare,System.Int32,System.IO.FileOptions)">
          <source>To access or modify rights on an existing file, consider using the <ph id="ph1">&lt;xref:System.IO.File.GetAccessControl%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.IO.File.SetAccessControl%2A&gt;</ph> methods.</source>
          <target state="translated">Um zugreifen oder diese Rechte in einer vorhandenen Datei ändern, sollten Sie mithilfe der <ph id="ph1">&lt;xref:System.IO.File.GetAccessControl%2A&gt;</ph> und <ph id="ph2">&lt;xref:System.IO.File.SetAccessControl%2A&gt;</ph> Methoden.</target>       </trans-unit>
        <trans-unit id="561" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.Security.AccessControl.FileSystemRights,System.IO.FileShare,System.Int32,System.IO.FileOptions)">
          <source>The <ph id="ph1">`fileOptions`</ph> parameter is used to provide access to more advanced operations that can be leveraged when creating a <ph id="ph2">&lt;xref:System.IO.FileStream&gt;</ph> object.</source>
          <target state="translated">Die <ph id="ph1">`fileOptions`</ph> Parameter wird verwendet, um den Zugriff auf Erweiterte Vorgänge zu ermöglichen, die genutzt werden kann, für die Erstellung einer <ph id="ph2">&lt;xref:System.IO.FileStream&gt;</ph> Objekt.</target>       </trans-unit>
        <trans-unit id="562" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.Security.AccessControl.FileSystemRights,System.IO.FileShare,System.Int32,System.IO.FileOptions)">
          <source>The <ph id="ph1">`path`</ph> parameter can be a file name, including a file on a Universal Naming Convention (UNC) share.</source>
          <target state="translated">Die <ph id="ph1">`path`</ph> Parameter kann einen Dateinamen, einschließlich einer Datei auf einer Freigabe (UNC = Universal Naming Convention) sein.</target>       </trans-unit>
        <trans-unit id="563" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.Security.AccessControl.FileSystemRights,System.IO.FileShare,System.Int32,System.IO.FileOptions)">
          <source><ph id="ph1">`path`</ph> is not required to be a file stored on disk; it can be any part of a system that supports access through streams.</source>
          <target state="translated"><ph id="ph1">`path`</ph> ist nicht erforderlich, um eine Datei auf dem Datenträger gespeichert werden. Es kann einen beliebigen Teil eines Systems, die Zugriff über Datenströme unterstützt.</target>       </trans-unit>
        <trans-unit id="564" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.Security.AccessControl.FileSystemRights,System.IO.FileShare,System.Int32,System.IO.FileOptions)">
          <source>For example, depending on the system, this class can access a physical device.</source>
          <target state="translated">Je nach System kann diese Klasse z. B. ein physisches Gerät zugreifen.</target>       </trans-unit>
        <trans-unit id="565" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.Security.AccessControl.FileSystemRights,System.IO.FileShare,System.Int32,System.IO.FileOptions)">
          <source><ph id="ph1">&lt;xref:System.IO.Stream.CanSeek%2A&gt;</ph> is <ph id="ph2">`true`</ph> for all <ph id="ph3">&lt;xref:System.IO.FileStream&gt;</ph> objects that encapsulate files.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.Stream.CanSeek%2A&gt;</ph> ist <ph id="ph2">`true`</ph> für alle <ph id="ph3">&lt;xref:System.IO.FileStream&gt;</ph> Objekte, die Dateien zu kapseln.</target>       </trans-unit>
        <trans-unit id="566" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.Security.AccessControl.FileSystemRights,System.IO.FileShare,System.Int32,System.IO.FileOptions)">
          <source>If <ph id="ph1">`path`</ph> indicates a device that does not support seeking, the <ph id="ph2">&lt;xref:System.IO.FileStream.CanSeek%2A&gt;</ph> property on the resulting <ph id="ph3">&lt;xref:System.IO.FileStream&gt;</ph> is <ph id="ph4">`false`</ph>.</source>
          <target state="translated">Wenn <ph id="ph1">`path`</ph> gibt an, ein Gerät, das keine Suchvorgänge, unterstützt die <ph id="ph2">&lt;xref:System.IO.FileStream.CanSeek%2A&gt;</ph> Eigenschaft für die resultierende <ph id="ph3">&lt;xref:System.IO.FileStream&gt;</ph> ist <ph id="ph4">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="567" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.Security.AccessControl.FileSystemRights,System.IO.FileShare,System.Int32,System.IO.FileOptions)">
          <source>For additional information, see <ph id="ph1">&lt;xref:System.IO.Stream.CanSeek%2A&gt;</ph>.</source>
          <target state="translated">Weitere Informationen finden Sie unter <ph id="ph1">&lt;xref:System.IO.Stream.CanSeek%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="568" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.Security.AccessControl.FileSystemRights,System.IO.FileShare,System.Int32,System.IO.FileOptions)">
          <source>When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable, and could cause an exception to be thrown.</source>
          <target state="translated">Wenn Sie einen Satz von Zeichen mit einer bestimmten kultureinstellung kompilieren und dieser dieselben Zeichen mit einer anderen kultureinstellung abrufen, der Zeichen können nicht interpretiert werden und können dazu führen, dass eine Ausnahme ausgelöst werden.</target>       </trans-unit>
        <trans-unit id="569" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.Security.AccessControl.FileSystemRights,System.IO.FileShare,System.Int32,System.IO.FileOptions)">
          <source>For a list of common file and directory operations, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</source>
          <target state="translated">Eine Liste der allgemeinen Datei- und Verzeichnisvorgänge, finden Sie unter <bpt id="p1">[</bpt>allgemeine e/a-Aufgaben<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</target>       </trans-unit>
        <trans-unit id="570" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.Security.AccessControl.FileSystemRights,System.IO.FileShare,System.Int32,System.IO.FileOptions)">
          <source><ph id="ph1">&lt;paramref name="path" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="571" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.Security.AccessControl.FileSystemRights,System.IO.FileShare,System.Int32,System.IO.FileOptions)">
          <source><ph id="ph1">&lt;paramref name="path" /&gt;</ph> is an empty string (""), contains only white space, or contains one or more invalid characters.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph> ist eine leere Zeichenfolge (""), enthält nur Leerzeichen oder enthält mindestens ein ungültiges Zeichen.</target>       </trans-unit>
        <trans-unit id="572" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.Security.AccessControl.FileSystemRights,System.IO.FileShare,System.Int32,System.IO.FileOptions)">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="573" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.Security.AccessControl.FileSystemRights,System.IO.FileShare,System.Int32,System.IO.FileOptions)">
          <source><ph id="ph1">&lt;paramref name="path" /&gt;</ph> refers to a non-file device, such as "con:", "com1:", "lpt1:", etc. in an NTFS environment.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph> verweist auf ein Gerät, das keine Datei ist, z. B. "con:", "com1:", "lpt1:" usw. in einer NTFS-Umgebung.</target>       </trans-unit>
        <trans-unit id="574" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.Security.AccessControl.FileSystemRights,System.IO.FileShare,System.Int32,System.IO.FileOptions)">
          <source><ph id="ph1">&lt;paramref name="path" /&gt;</ph> refers to a non-file device, such as "con:", "com1:", "lpt1:", etc. in a non-NTFS environment.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph> verweist auf ein Gerät, das keine Datei ist, z. B. "con:", "com1:", "lpt1:" usw. in einer Nicht-NTFS-Umgebung.</target>       </trans-unit>
        <trans-unit id="575" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.Security.AccessControl.FileSystemRights,System.IO.FileShare,System.Int32,System.IO.FileOptions)">
          <source><ph id="ph1">&lt;paramref name="bufferSize" /&gt;</ph> is negative or zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="bufferSize" /&gt;</ph> ist negativ oder 0 (null).</target>       </trans-unit>
        <trans-unit id="576" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.Security.AccessControl.FileSystemRights,System.IO.FileShare,System.Int32,System.IO.FileOptions)">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="577" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.Security.AccessControl.FileSystemRights,System.IO.FileShare,System.Int32,System.IO.FileOptions)">
          <source><ph id="ph1">&lt;paramref name="mode" /&gt;</ph>, <ph id="ph2">&lt;paramref name="access" /&gt;</ph>, or <ph id="ph3">&lt;paramref name="share" /&gt;</ph> contain an invalid value.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="mode" /&gt;</ph>, <ph id="ph2">&lt;paramref name="access" /&gt;</ph> oder <ph id="ph3">&lt;paramref name="share" /&gt;</ph> enthalten einen ungültigen Wert.</target>       </trans-unit>
        <trans-unit id="578" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.Security.AccessControl.FileSystemRights,System.IO.FileShare,System.Int32,System.IO.FileOptions)">
          <source>The file cannot be found, such as when <ph id="ph1">&lt;paramref name="mode" /&gt;</ph> is <ph id="ph2">&lt;see langword="FileMode.Truncate" /&gt;</ph> or <ph id="ph3">&lt;see langword="FileMode.Open" /&gt;</ph>, and the file specified by <ph id="ph4">&lt;paramref name="path" /&gt;</ph> does not exist.</source>
          <target state="translated">Die Datei kann nicht gefunden werden. Dies ist z. B. der Fall, wenn <ph id="ph1">&lt;paramref name="mode" /&gt;</ph> auf <ph id="ph2">&lt;see langword="FileMode.Truncate" /&gt;</ph> oder <ph id="ph3">&lt;see langword="FileMode.Open" /&gt;</ph> festgelegt wurde und die durch <ph id="ph4">&lt;paramref name="path" /&gt;</ph> angegebene Datei nicht vorhanden ist.</target>       </trans-unit>
        <trans-unit id="579" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.Security.AccessControl.FileSystemRights,System.IO.FileShare,System.Int32,System.IO.FileOptions)">
          <source>The file must already exist in these modes.</source>
          <target state="translated">Die Datei muss bereits in diesen Modi vorhanden sein.</target>       </trans-unit>
        <trans-unit id="580" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.Security.AccessControl.FileSystemRights,System.IO.FileShare,System.Int32,System.IO.FileOptions)">
          <source>The current operating system is not Windows NT or later.</source>
          <target state="translated">Das aktuelle Betriebssystem ist nicht Windows NT oder höher.</target>       </trans-unit>
        <trans-unit id="581" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.Security.AccessControl.FileSystemRights,System.IO.FileShare,System.Int32,System.IO.FileOptions)">
          <source>An I/O error, such as specifying <ph id="ph1">&lt;see langword="FileMode.CreateNew" /&gt;</ph> when the file specified by <ph id="ph2">&lt;paramref name="path" /&gt;</ph> already exists, occurred.</source>
          <target state="translated">Es ist ein E/A-Fehler aufgetreten, beispielsweise wurde <ph id="ph1">&lt;see langword="FileMode.CreateNew" /&gt;</ph> angegeben, und die durch <ph id="ph2">&lt;paramref name="path" /&gt;</ph> angegebene Datei ist bereits vorhanden.</target>       </trans-unit>
        <trans-unit id="582" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.Security.AccessControl.FileSystemRights,System.IO.FileShare,System.Int32,System.IO.FileOptions)">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="583" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.Security.AccessControl.FileSystemRights,System.IO.FileShare,System.Int32,System.IO.FileOptions)">
          <source>The stream has been closed.</source>
          <target state="translated">Der Stream wurde geschlossen.</target>       </trans-unit>
        <trans-unit id="584" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.Security.AccessControl.FileSystemRights,System.IO.FileShare,System.Int32,System.IO.FileOptions)">
          <source>The caller does not have the required permission.</source>
          <target state="translated">Der Aufrufer verfügt nicht über die erforderliche Berechtigung.</target>       </trans-unit>
        <trans-unit id="585" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.Security.AccessControl.FileSystemRights,System.IO.FileShare,System.Int32,System.IO.FileOptions)">
          <source>The specified path is invalid, such as being on an unmapped drive.</source>
          <target state="translated">Der angegebene Pfad ist ungültig, z. B. befindet er sich auf einem nicht zugeordneten Laufwerk.</target>       </trans-unit>
        <trans-unit id="586" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.Security.AccessControl.FileSystemRights,System.IO.FileShare,System.Int32,System.IO.FileOptions)">
          <source>The <ph id="ph1">&lt;paramref name="access" /&gt;</ph> requested is not permitted by the operating system for the specified <ph id="ph2">&lt;paramref name="path" /&gt;</ph>, such as when <ph id="ph3">&lt;paramref name="access" /&gt;</ph> is <ph id="ph4">&lt;see langword="Write" /&gt;</ph> or <ph id="ph5">&lt;see langword="ReadWrite" /&gt;</ph> and the file or directory is set for read-only access.</source>
          <target state="translated">Der angeforderte <ph id="ph1">&lt;paramref name="access" /&gt;</ph> für den angegebenen <ph id="ph2">&lt;paramref name="path" /&gt;</ph> wird durch das Betriebssystem nicht zugelassen. Dies ist z. B. der Fall, wenn <ph id="ph4">&lt;see langword="Write" /&gt;</ph> oder <ph id="ph5">&lt;see langword="ReadWrite" /&gt;</ph> für <ph id="ph3">&lt;paramref name="access" /&gt;</ph> festgelegt ist, die Datei bzw. das Verzeichnis jedoch schreibgeschützt ist.</target>       </trans-unit>
        <trans-unit id="587" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.Security.AccessControl.FileSystemRights,System.IO.FileShare,System.Int32,System.IO.FileOptions)">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="588" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.Security.AccessControl.FileSystemRights,System.IO.FileShare,System.Int32,System.IO.FileOptions)">
          <source><ph id="ph1">&lt;see cref="F:System.IO.FileOptions.Encrypted" /&gt;</ph> is specified for <ph id="ph2">&lt;paramref name="options" /&gt;</ph>, but file encryption is not supported on the current platform.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="F:System.IO.FileOptions.Encrypted" /&gt;</ph> wurde für <ph id="ph2">&lt;paramref name="options" /&gt;</ph> angegeben, aber die Dateiverschlüsselung wird auf der aktuellen Plattform nicht unterstützt.</target>       </trans-unit>
        <trans-unit id="589" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.Security.AccessControl.FileSystemRights,System.IO.FileShare,System.Int32,System.IO.FileOptions)">
          <source>The specified <ph id="ph1">&lt;paramref name="path" /&gt;</ph>, file name, or both exceed the system-defined maximum length.</source>
          <target state="translated">Der angegebene <ph id="ph1">&lt;paramref name="path" /&gt;</ph> und/oder der Dateiname überschreiten die vom System vorgegebene Höchstlänge.</target>       </trans-unit>
        <trans-unit id="590" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.Security.AccessControl.FileSystemRights,System.IO.FileShare,System.Int32,System.IO.FileOptions)">
          <source>For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.</source>
          <target state="translated">Beispielsweise müssen auf Windows-basierten Plattformen Pfade weniger als 248 Zeichen und Dateinamen weniger als 260 Zeichen enthalten.</target>       </trans-unit>
        <trans-unit id="591" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.Security.AccessControl.FileSystemRights,System.IO.FileShare,System.Int32,System.IO.FileOptions)">
          <source>for reading, writing, and appending to files.</source>
          <target state="translated">zum Lesen, schreiben und Anfügen von Dateien.</target>       </trans-unit>
        <trans-unit id="592" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.Security.AccessControl.FileSystemRights,System.IO.FileShare,System.Int32,System.IO.FileOptions)">
          <source>Associated enumerations: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /&gt;</ph>, <ph id="ph2">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /&gt;</ph>, and <ph id="ph3">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Append" /&gt;</ph>.</source>
          <target state="translated">Zugeordnete Enumerationen: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /&gt;</ph>, <ph id="ph2">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /&gt;</ph>, und <ph id="ph3">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Append" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="593" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.Security.AccessControl.FileSystemRights,System.IO.FileShare,System.Int32,System.IO.FileOptions,System.Security.AccessControl.FileSecurity)">
          <source>A relative or absolute path for the file that the current <ph id="ph1">&lt;see cref="T:System.IO.FileStream" /&gt;</ph> object will encapsulate.</source>
          <target state="translated">Ein relativer oder absoluter Pfad zu der Datei, die vom aktuellen <ph id="ph1">&lt;see cref="T:System.IO.FileStream" /&gt;</ph>-Objekt gekapselt wird.</target>       </trans-unit>
        <trans-unit id="594" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.Security.AccessControl.FileSystemRights,System.IO.FileShare,System.Int32,System.IO.FileOptions,System.Security.AccessControl.FileSecurity)">
          <source>A constant that determines how to open or create the file.</source>
          <target state="translated">Eine Konstante, die bestimmt, auf welche Weise die Datei geöffnet oder erstellt werden soll.</target>       </trans-unit>
        <trans-unit id="595" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.Security.AccessControl.FileSystemRights,System.IO.FileShare,System.Int32,System.IO.FileOptions,System.Security.AccessControl.FileSecurity)">
          <source>A constant that determines the access rights to use when creating access and audit rules for the file.</source>
          <target state="translated">Eine Konstante, die die beim Erstellen der Zugriffs- und Überwachungsregeln für die Datei zu verwendenden Zugriffsrechte festlegt.</target>       </trans-unit>
        <trans-unit id="596" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.Security.AccessControl.FileSystemRights,System.IO.FileShare,System.Int32,System.IO.FileOptions,System.Security.AccessControl.FileSecurity)">
          <source>A constant that determines how the file will be shared by processes.</source>
          <target state="translated">Eine Konstante zur Bestimmung der Art, in der Prozesse gemeinsam auf die Datei zugreifen.</target>       </trans-unit>
        <trans-unit id="597" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.Security.AccessControl.FileSystemRights,System.IO.FileShare,System.Int32,System.IO.FileOptions,System.Security.AccessControl.FileSecurity)">
          <source>A positive <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> value greater than 0 indicating the buffer size.</source>
          <target state="translated">Ein positiver <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph>-Wert größer als 0 (null), der die Puffergröße angibt.</target>       </trans-unit>
        <trans-unit id="598" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.Security.AccessControl.FileSystemRights,System.IO.FileShare,System.Int32,System.IO.FileOptions,System.Security.AccessControl.FileSecurity)">
          <source>The default buffer size is 4096.</source>
          <target state="translated">Die Standardpuffergröße ist 4096.</target>       </trans-unit>
        <trans-unit id="599" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.Security.AccessControl.FileSystemRights,System.IO.FileShare,System.Int32,System.IO.FileOptions,System.Security.AccessControl.FileSecurity)">
          <source>A constant that specifies additional file options.</source>
          <target state="translated">Eine Konstante, die zusätzliche Dateioptionen angibt.</target>       </trans-unit>
        <trans-unit id="600" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.Security.AccessControl.FileSystemRights,System.IO.FileShare,System.Int32,System.IO.FileOptions,System.Security.AccessControl.FileSecurity)">
          <source>A constant that determines the access control and audit security for the file.</source>
          <target state="translated">Eine Konstante, die die Zugriffssteuerung und die Überwachungssicherheit für die Datei bestimmt.</target>       </trans-unit>
        <trans-unit id="601" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.Security.AccessControl.FileSystemRights,System.IO.FileShare,System.Int32,System.IO.FileOptions,System.Security.AccessControl.FileSecurity)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.IO.FileStream" /&gt;</ph> class with the specified path, creation mode, access rights and sharing permission, the buffer size, additional file options, access control and audit security.</source>
          <target state="translated">Initialisiert eine neue Instanz der <ph id="ph1">&lt;see cref="T:System.IO.FileStream" /&gt;</ph>-Klasse mit den Angaben für den Pfad, den Erstellungsmodus, die Zugriffsrechte und die Freigabeberechtigung, die Puffergröße, zusätzliche Dateioptionen, die Zugriffssteuerung und die Überwachungssicherheit.</target>       </trans-unit>
        <trans-unit id="602" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.Security.AccessControl.FileSystemRights,System.IO.FileShare,System.Int32,System.IO.FileOptions,System.Security.AccessControl.FileSecurity)">
          <source>The .NET Framework does not support direct access to physical disks through paths that are device names, such as "<ph id="ph1">\\</ph><ph id="ph2">\\</ph>.\PHYSICALDRIVE0 ".</source>
          <target state="translated">.NET Framework unterstützt keine direkten Zugriff auf physische Datenträger über Pfade, Gerätenamen, z. B. "<ph id="ph1">\\</ph><ph id="ph2">\\</ph>. \PHYSICALDRIVE0".</target>       </trans-unit>
        <trans-unit id="603" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.Security.AccessControl.FileSystemRights,System.IO.FileShare,System.Int32,System.IO.FileOptions,System.Security.AccessControl.FileSecurity)">
          <source>Use this <ph id="ph1">&lt;xref:System.IO.FileStream.%23ctor%2A&gt;</ph> constructor to apply access rights at the point of creation of a file.</source>
          <target state="translated">Verwenden Sie diese <ph id="ph1">&lt;xref:System.IO.FileStream.%23ctor%2A&gt;</ph> Konstruktor anzuwendenden Zugriff Rechte zum Zeitpunkt der Erstellung einer Datei.</target>       </trans-unit>
        <trans-unit id="604" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.Security.AccessControl.FileSystemRights,System.IO.FileShare,System.Int32,System.IO.FileOptions,System.Security.AccessControl.FileSecurity)">
          <source>To access or modify rights on an existing file, consider using the <ph id="ph1">&lt;xref:System.IO.File.GetAccessControl%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.IO.File.SetAccessControl%2A&gt;</ph> methods.</source>
          <target state="translated">Um zugreifen oder diese Rechte in einer vorhandenen Datei ändern, sollten Sie mithilfe der <ph id="ph1">&lt;xref:System.IO.File.GetAccessControl%2A&gt;</ph> und <ph id="ph2">&lt;xref:System.IO.File.SetAccessControl%2A&gt;</ph> Methoden.</target>       </trans-unit>
        <trans-unit id="605" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.Security.AccessControl.FileSystemRights,System.IO.FileShare,System.Int32,System.IO.FileOptions,System.Security.AccessControl.FileSecurity)">
          <source>The <ph id="ph1">`fileOptions`</ph> parameter is used to provide access to more advanced operations that can be leveraged when creating a <ph id="ph2">&lt;xref:System.IO.FileStream&gt;</ph> object.</source>
          <target state="translated">Die <ph id="ph1">`fileOptions`</ph> Parameter wird verwendet, um den Zugriff auf Erweiterte Vorgänge zu ermöglichen, die genutzt werden kann, für die Erstellung einer <ph id="ph2">&lt;xref:System.IO.FileStream&gt;</ph> Objekt.</target>       </trans-unit>
        <trans-unit id="606" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.Security.AccessControl.FileSystemRights,System.IO.FileShare,System.Int32,System.IO.FileOptions,System.Security.AccessControl.FileSecurity)">
          <source>The <ph id="ph1">`path`</ph> parameter can be a file name, including a file on a Universal Naming Convention (UNC) share.</source>
          <target state="translated">Die <ph id="ph1">`path`</ph> Parameter kann einen Dateinamen, einschließlich einer Datei auf einer Freigabe (UNC = Universal Naming Convention) sein.</target>       </trans-unit>
        <trans-unit id="607" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.Security.AccessControl.FileSystemRights,System.IO.FileShare,System.Int32,System.IO.FileOptions,System.Security.AccessControl.FileSecurity)">
          <source><ph id="ph1">`path`</ph> is not required to be a file stored on disk; it can be any part of a system that supports access through streams.</source>
          <target state="translated"><ph id="ph1">`path`</ph> ist nicht erforderlich, um eine Datei auf dem Datenträger gespeichert werden. Es kann einen beliebigen Teil eines Systems, die Zugriff über Datenströme unterstützt.</target>       </trans-unit>
        <trans-unit id="608" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.Security.AccessControl.FileSystemRights,System.IO.FileShare,System.Int32,System.IO.FileOptions,System.Security.AccessControl.FileSecurity)">
          <source>For example, depending on the system, this class can access a physical device.</source>
          <target state="translated">Je nach System kann diese Klasse z. B. ein physisches Gerät zugreifen.</target>       </trans-unit>
        <trans-unit id="609" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.Security.AccessControl.FileSystemRights,System.IO.FileShare,System.Int32,System.IO.FileOptions,System.Security.AccessControl.FileSecurity)">
          <source><ph id="ph1">&lt;xref:System.IO.Stream.CanSeek%2A&gt;</ph> is <ph id="ph2">`true`</ph> for all <ph id="ph3">&lt;xref:System.IO.FileStream&gt;</ph> objects that encapsulate files.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.Stream.CanSeek%2A&gt;</ph> ist <ph id="ph2">`true`</ph> für alle <ph id="ph3">&lt;xref:System.IO.FileStream&gt;</ph> Objekte, die Dateien zu kapseln.</target>       </trans-unit>
        <trans-unit id="610" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.Security.AccessControl.FileSystemRights,System.IO.FileShare,System.Int32,System.IO.FileOptions,System.Security.AccessControl.FileSecurity)">
          <source>If <ph id="ph1">`path`</ph> indicates a device that does not support seeking, the <ph id="ph2">&lt;xref:System.IO.FileStream.CanSeek%2A&gt;</ph> property on the resulting <ph id="ph3">&lt;xref:System.IO.FileStream&gt;</ph> is <ph id="ph4">`false`</ph>.</source>
          <target state="translated">Wenn <ph id="ph1">`path`</ph> gibt an, ein Gerät, das keine Suchvorgänge, unterstützt die <ph id="ph2">&lt;xref:System.IO.FileStream.CanSeek%2A&gt;</ph> Eigenschaft für die resultierende <ph id="ph3">&lt;xref:System.IO.FileStream&gt;</ph> ist <ph id="ph4">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="611" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.Security.AccessControl.FileSystemRights,System.IO.FileShare,System.Int32,System.IO.FileOptions,System.Security.AccessControl.FileSecurity)">
          <source>For additional information, see <ph id="ph1">&lt;xref:System.IO.Stream.CanSeek%2A&gt;</ph>.</source>
          <target state="translated">Weitere Informationen finden Sie unter <ph id="ph1">&lt;xref:System.IO.Stream.CanSeek%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="612" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.Security.AccessControl.FileSystemRights,System.IO.FileShare,System.Int32,System.IO.FileOptions,System.Security.AccessControl.FileSecurity)">
          <source>When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable, and could cause an exception to be thrown.</source>
          <target state="translated">Wenn Sie einen Satz von Zeichen mit einer bestimmten kultureinstellung kompilieren und dieser dieselben Zeichen mit einer anderen kultureinstellung abrufen, der Zeichen können nicht interpretiert werden und können dazu führen, dass eine Ausnahme ausgelöst werden.</target>       </trans-unit>
        <trans-unit id="613" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.Security.AccessControl.FileSystemRights,System.IO.FileShare,System.Int32,System.IO.FileOptions,System.Security.AccessControl.FileSecurity)">
          <source>For a list of common file and directory operations, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</source>
          <target state="translated">Eine Liste der allgemeinen Datei- und Verzeichnisvorgänge, finden Sie unter <bpt id="p1">[</bpt>allgemeine e/a-Aufgaben<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</target>       </trans-unit>
        <trans-unit id="614" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.Security.AccessControl.FileSystemRights,System.IO.FileShare,System.Int32,System.IO.FileOptions,System.Security.AccessControl.FileSecurity)">
          <source>The following example writes data to a file and then reads the data using the <ph id="ph1">&lt;xref:System.IO.FileStream&gt;</ph> object.</source>
          <target state="translated">Das folgende Beispiel schreibt Daten in eine Datei und liest dann die Daten mithilfe der <ph id="ph1">&lt;xref:System.IO.FileStream&gt;</ph> Objekt.</target>       </trans-unit>
        <trans-unit id="615" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.Security.AccessControl.FileSystemRights,System.IO.FileShare,System.Int32,System.IO.FileOptions,System.Security.AccessControl.FileSecurity)">
          <source><ph id="ph1">&lt;paramref name="path" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="616" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.Security.AccessControl.FileSystemRights,System.IO.FileShare,System.Int32,System.IO.FileOptions,System.Security.AccessControl.FileSecurity)">
          <source><ph id="ph1">&lt;paramref name="path" /&gt;</ph> is an empty string (""), contains only white space, or contains one or more invalid characters.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph> ist eine leere Zeichenfolge (""), enthält nur Leerzeichen oder enthält mindestens ein ungültiges Zeichen.</target>       </trans-unit>
        <trans-unit id="617" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.Security.AccessControl.FileSystemRights,System.IO.FileShare,System.Int32,System.IO.FileOptions,System.Security.AccessControl.FileSecurity)">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="618" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.Security.AccessControl.FileSystemRights,System.IO.FileShare,System.Int32,System.IO.FileOptions,System.Security.AccessControl.FileSecurity)">
          <source><ph id="ph1">&lt;paramref name="path" /&gt;</ph> refers to a non-file device, such as "con:", "com1:", "lpt1:", etc. in an NTFS environment.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph> verweist auf ein Gerät, das keine Datei ist, z. B. "con:", "com1:", "lpt1:" usw. in einer NTFS-Umgebung.</target>       </trans-unit>
        <trans-unit id="619" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.Security.AccessControl.FileSystemRights,System.IO.FileShare,System.Int32,System.IO.FileOptions,System.Security.AccessControl.FileSecurity)">
          <source><ph id="ph1">&lt;paramref name="path" /&gt;</ph> refers to a non-file device, such as "con:", "com1:", "lpt1:", etc. in a non-NTFS environment.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph> verweist auf ein Gerät, das keine Datei ist, z. B. "con:", "com1:", "lpt1:" usw. in einer Nicht-NTFS-Umgebung.</target>       </trans-unit>
        <trans-unit id="620" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.Security.AccessControl.FileSystemRights,System.IO.FileShare,System.Int32,System.IO.FileOptions,System.Security.AccessControl.FileSecurity)">
          <source><ph id="ph1">&lt;paramref name="bufferSize" /&gt;</ph> is negative or zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="bufferSize" /&gt;</ph> ist negativ oder 0 (null).</target>       </trans-unit>
        <trans-unit id="621" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.Security.AccessControl.FileSystemRights,System.IO.FileShare,System.Int32,System.IO.FileOptions,System.Security.AccessControl.FileSecurity)">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="622" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.Security.AccessControl.FileSystemRights,System.IO.FileShare,System.Int32,System.IO.FileOptions,System.Security.AccessControl.FileSecurity)">
          <source><ph id="ph1">&lt;paramref name="mode" /&gt;</ph>, <ph id="ph2">&lt;paramref name="access" /&gt;</ph>, or <ph id="ph3">&lt;paramref name="share" /&gt;</ph> contain an invalid value.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="mode" /&gt;</ph>, <ph id="ph2">&lt;paramref name="access" /&gt;</ph> oder <ph id="ph3">&lt;paramref name="share" /&gt;</ph> enthalten einen ungültigen Wert.</target>       </trans-unit>
        <trans-unit id="623" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.Security.AccessControl.FileSystemRights,System.IO.FileShare,System.Int32,System.IO.FileOptions,System.Security.AccessControl.FileSecurity)">
          <source>The file cannot be found, such as when <ph id="ph1">&lt;paramref name="mode" /&gt;</ph> is <ph id="ph2">&lt;see langword="FileMode.Truncate" /&gt;</ph> or <ph id="ph3">&lt;see langword="FileMode.Open" /&gt;</ph>, and the file specified by <ph id="ph4">&lt;paramref name="path" /&gt;</ph> does not exist.</source>
          <target state="translated">Die Datei kann nicht gefunden werden. Dies ist z. B. der Fall, wenn <ph id="ph1">&lt;paramref name="mode" /&gt;</ph> auf <ph id="ph2">&lt;see langword="FileMode.Truncate" /&gt;</ph> oder <ph id="ph3">&lt;see langword="FileMode.Open" /&gt;</ph> festgelegt wurde und die durch <ph id="ph4">&lt;paramref name="path" /&gt;</ph> angegebene Datei nicht vorhanden ist.</target>       </trans-unit>
        <trans-unit id="624" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.Security.AccessControl.FileSystemRights,System.IO.FileShare,System.Int32,System.IO.FileOptions,System.Security.AccessControl.FileSecurity)">
          <source>The file must already exist in these modes.</source>
          <target state="translated">Die Datei muss bereits in diesen Modi vorhanden sein.</target>       </trans-unit>
        <trans-unit id="625" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.Security.AccessControl.FileSystemRights,System.IO.FileShare,System.Int32,System.IO.FileOptions,System.Security.AccessControl.FileSecurity)">
          <source>An I/O error, such as specifying <ph id="ph1">&lt;see langword="FileMode.CreateNew" /&gt;</ph> when the file specified by <ph id="ph2">&lt;paramref name="path" /&gt;</ph> already exists, occurred.</source>
          <target state="translated">Es ist ein E/A-Fehler aufgetreten, beispielsweise wurde <ph id="ph1">&lt;see langword="FileMode.CreateNew" /&gt;</ph> angegeben, und die durch <ph id="ph2">&lt;paramref name="path" /&gt;</ph> angegebene Datei ist bereits vorhanden.</target>       </trans-unit>
        <trans-unit id="626" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.Security.AccessControl.FileSystemRights,System.IO.FileShare,System.Int32,System.IO.FileOptions,System.Security.AccessControl.FileSecurity)">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="627" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.Security.AccessControl.FileSystemRights,System.IO.FileShare,System.Int32,System.IO.FileOptions,System.Security.AccessControl.FileSecurity)">
          <source>The stream has been closed.</source>
          <target state="translated">Der Stream wurde geschlossen.</target>       </trans-unit>
        <trans-unit id="628" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.Security.AccessControl.FileSystemRights,System.IO.FileShare,System.Int32,System.IO.FileOptions,System.Security.AccessControl.FileSecurity)">
          <source>The caller does not have the required permission.</source>
          <target state="translated">Der Aufrufer verfügt nicht über die erforderliche Berechtigung.</target>       </trans-unit>
        <trans-unit id="629" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.Security.AccessControl.FileSystemRights,System.IO.FileShare,System.Int32,System.IO.FileOptions,System.Security.AccessControl.FileSecurity)">
          <source>The specified path is invalid, such as being on an unmapped drive.</source>
          <target state="translated">Der angegebene Pfad ist ungültig, z. B. befindet er sich auf einem nicht zugeordneten Laufwerk.</target>       </trans-unit>
        <trans-unit id="630" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.Security.AccessControl.FileSystemRights,System.IO.FileShare,System.Int32,System.IO.FileOptions,System.Security.AccessControl.FileSecurity)">
          <source>The <ph id="ph1">&lt;paramref name="access" /&gt;</ph> requested is not permitted by the operating system for the specified <ph id="ph2">&lt;paramref name="path" /&gt;</ph>, such as when <ph id="ph3">&lt;paramref name="access" /&gt;</ph> is <ph id="ph4">&lt;see langword="Write" /&gt;</ph> or <ph id="ph5">&lt;see langword="ReadWrite" /&gt;</ph> and the file or directory is set for read-only access.</source>
          <target state="translated">Der angeforderte <ph id="ph1">&lt;paramref name="access" /&gt;</ph> für den angegebenen <ph id="ph2">&lt;paramref name="path" /&gt;</ph> wird durch das Betriebssystem nicht zugelassen. Dies ist z. B. der Fall, wenn <ph id="ph4">&lt;see langword="Write" /&gt;</ph> oder <ph id="ph5">&lt;see langword="ReadWrite" /&gt;</ph> für <ph id="ph3">&lt;paramref name="access" /&gt;</ph> festgelegt ist, die Datei bzw. das Verzeichnis jedoch schreibgeschützt ist.</target>       </trans-unit>
        <trans-unit id="631" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.Security.AccessControl.FileSystemRights,System.IO.FileShare,System.Int32,System.IO.FileOptions,System.Security.AccessControl.FileSecurity)">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="632" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.Security.AccessControl.FileSystemRights,System.IO.FileShare,System.Int32,System.IO.FileOptions,System.Security.AccessControl.FileSecurity)">
          <source><ph id="ph1">&lt;see cref="F:System.IO.FileOptions.Encrypted" /&gt;</ph> is specified for <ph id="ph2">&lt;paramref name="options" /&gt;</ph>, but file encryption is not supported on the current platform.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="F:System.IO.FileOptions.Encrypted" /&gt;</ph> wurde für <ph id="ph2">&lt;paramref name="options" /&gt;</ph> angegeben, aber die Dateiverschlüsselung wird auf der aktuellen Plattform nicht unterstützt.</target>       </trans-unit>
        <trans-unit id="633" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.Security.AccessControl.FileSystemRights,System.IO.FileShare,System.Int32,System.IO.FileOptions,System.Security.AccessControl.FileSecurity)">
          <source>The specified <ph id="ph1">&lt;paramref name="path" /&gt;</ph>, file name, or both exceed the system-defined maximum length.</source>
          <target state="translated">Der angegebene <ph id="ph1">&lt;paramref name="path" /&gt;</ph> und/oder der Dateiname überschreiten die vom System vorgegebene Höchstlänge.</target>       </trans-unit>
        <trans-unit id="634" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.Security.AccessControl.FileSystemRights,System.IO.FileShare,System.Int32,System.IO.FileOptions,System.Security.AccessControl.FileSecurity)">
          <source>For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.</source>
          <target state="translated">Beispielsweise müssen auf Windows-basierten Plattformen Pfade weniger als 248 Zeichen und Dateinamen weniger als 260 Zeichen enthalten.</target>       </trans-unit>
        <trans-unit id="635" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.Security.AccessControl.FileSystemRights,System.IO.FileShare,System.Int32,System.IO.FileOptions,System.Security.AccessControl.FileSecurity)">
          <source>The current operating system is not Windows NT or later.</source>
          <target state="translated">Das aktuelle Betriebssystem ist nicht Windows NT oder höher.</target>       </trans-unit>
        <trans-unit id="636" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.Security.AccessControl.FileSystemRights,System.IO.FileShare,System.Int32,System.IO.FileOptions,System.Security.AccessControl.FileSecurity)">
          <source>for reading, writing, and appending to files.</source>
          <target state="translated">zum Lesen, schreiben und Anfügen von Dateien.</target>       </trans-unit>
        <trans-unit id="637" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.Security.AccessControl.FileSystemRights,System.IO.FileShare,System.Int32,System.IO.FileOptions,System.Security.AccessControl.FileSecurity)">
          <source>Associated enumerations: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /&gt;</ph>, <ph id="ph2">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /&gt;</ph>, and <ph id="ph3">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Append" /&gt;</ph>.</source>
          <target state="translated">Zugeordnete Enumerationen: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /&gt;</ph>, <ph id="ph2">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /&gt;</ph>, und <ph id="ph3">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Append" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="638" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>The buffer to read data into.</source>
          <target state="translated">Der Puffer, in den Daten gelesen werden sollen.</target>       </trans-unit>
        <trans-unit id="639" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>The byte offset in <bpt id="p1">&lt;c&gt;</bpt>array<ept id="p1">&lt;/c&gt;</ept> at which to begin reading.</source>
          <target state="translated">Der Byteoffset in <bpt id="p1">&lt;c&gt;</bpt>array<ept id="p1">&lt;/c&gt;</ept>, ab dem gelesen werden soll.</target>       </trans-unit>
        <trans-unit id="640" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>The maximum number of bytes to read.</source>
          <target state="translated">Die maximale Anzahl der zu lesenden Bytes.</target>       </trans-unit>
        <trans-unit id="641" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>The method to be called when the asynchronous read operation is completed.</source>
          <target state="translated">Die Methode, die aufgerufen werden soll, wenn der asynchrone Lesevorgang abgeschlossen ist.</target>       </trans-unit>
        <trans-unit id="642" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>A user-provided object that distinguishes this particular asynchronous read request from other requests.</source>
          <target state="translated">Ein vom Benutzer bereitgestelltes Objekt, das diese asynchrone Leseanforderung von anderen Anforderungen unterscheidet.</target>       </trans-unit>
        <trans-unit id="643" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>Begins an asynchronous read operation.</source>
          <target state="translated">Beginnt einen asynchronen Lesevorgang.</target>       </trans-unit>
        <trans-unit id="644" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>(Consider using <ph id="ph1">&lt;see cref="M:System.IO.FileStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)" /&gt;</ph> instead.)</source>
          <target state="translated">(Verwenden Sie stattdessen <ph id="ph1">&lt;see cref="M:System.IO.FileStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)" /&gt;</ph>.)</target>       </trans-unit>
        <trans-unit id="645" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>An object that references the asynchronous read.</source>
          <target state="translated">Ein Objekt, das auf den asynchronen Lesevorgang verweist.</target>       </trans-unit>
        <trans-unit id="646" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>In the .NET Framework 4 and earlier versions, you have to use methods such as <ph id="ph1">&lt;xref:System.IO.FileStream.BeginRead%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.IO.FileStream.EndRead%2A&gt;</ph> to implement asynchronous file operations.</source>
          <target state="translated">In der .NET Framework 4 und früheren Versionen müssen Sie Methoden verwenden, z. B. <ph id="ph1">&lt;xref:System.IO.FileStream.BeginRead%2A&gt;</ph> und <ph id="ph2">&lt;xref:System.IO.FileStream.EndRead%2A&gt;</ph> zum Implementieren asynchroner Vorgänge.</target>       </trans-unit>
        <trans-unit id="647" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>These methods are still available in the <ph id="ph1">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph> to support legacy code; however, the new async methods, such as <ph id="ph2">&lt;xref:System.IO.FileStream.ReadAsync%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.IO.FileStream.WriteAsync%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.IO.Stream.CopyToAsync%2A&gt;</ph>, and <ph id="ph5">&lt;xref:System.IO.FileStream.FlushAsync%2A&gt;</ph>, help you implement asynchronous file operations more easily.</source>
          <target state="translated">Diese Methoden sind weiterhin verfügbar, in der <ph id="ph1">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph> zur Unterstützung von legacy-Code; allerdings der neuen asynchronen Methoden, wie z. B. <ph id="ph2">&lt;xref:System.IO.FileStream.ReadAsync%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.IO.FileStream.WriteAsync%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.IO.Stream.CopyToAsync%2A&gt;</ph>, und <ph id="ph5">&lt;xref:System.IO.FileStream.FlushAsync%2A&gt;</ph>, Hilfe, die Sie implementieren leichter asynchrone Dateivorgänge.</target>       </trans-unit>
        <trans-unit id="648" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source><ph id="ph1">&lt;xref:System.IO.FileStream.EndRead%2A&gt;</ph> must be called exactly once for every call to <ph id="ph2">&lt;xref:System.IO.FileStream.BeginRead%2A&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.FileStream.EndRead%2A&gt;</ph> muss genau einmal für jeden Aufruf aufgerufen werden <ph id="ph2">&lt;xref:System.IO.FileStream.BeginRead%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="649" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>Failing to end a read process before beginning another read can cause undesirable behavior such as deadlock.</source>
          <target state="translated">Wegen eines Fehlers beim ein Lesevorgang beendet vor dem Beginn einer anderen Lesevorgang kann unerwünschtes Verhalten wie z. B. Deadlocks verursachen.</target>       </trans-unit>
        <trans-unit id="650" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source><ph id="ph1">&lt;xref:System.IO.FileStream&gt;</ph> provides two different modes of operation: synchronous I/O and asynchronous I/O.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.FileStream&gt;</ph> bietet zwei unterschiedliche Verwendungsarten des: synchrone e/a und asynchrone e/a.</target>       </trans-unit>
        <trans-unit id="651" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>While either can be used, the underlying operating system resources might allow access in only one of these modes.</source>
          <target state="translated">Während beide verwendet werden können, lassen die zugrunde liegenden Ressourcen des Betriebssystems möglicherweise Zugriff nur in einem dieser Modi zu.</target>       </trans-unit>
        <trans-unit id="652" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>By default, <ph id="ph1">&lt;xref:System.IO.FileStream&gt;</ph> opens the operating system handle synchronously.</source>
          <target state="translated">Standardmäßig <ph id="ph1">&lt;xref:System.IO.FileStream&gt;</ph> Öffnet das Betriebssystemhandle synchron.</target>       </trans-unit>
        <trans-unit id="653" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>In Windows, this slows down asynchronous methods.</source>
          <target state="translated">In Windows verlangsamt dies asynchrone Methoden.</target>       </trans-unit>
        <trans-unit id="654" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>If asynchronous methods are used, use the <ph id="ph1">&lt;xref:System.IO.FileStream.%23ctor%28System.String%2CSystem.IO.FileMode%2CSystem.IO.FileAccess%2CSystem.IO.FileShare%2CSystem.Int32%2CSystem.Boolean%29&gt;</ph> constructor.</source>
          <target state="translated">Wenn asynchrone Methoden verwendet werden, verwenden die <ph id="ph1">&lt;xref:System.IO.FileStream.%23ctor%28System.String%2CSystem.IO.FileMode%2CSystem.IO.FileAccess%2CSystem.IO.FileShare%2CSystem.Int32%2CSystem.Boolean%29&gt;</ph> Konstruktor.</target>       </trans-unit>
        <trans-unit id="655" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>Use the <ph id="ph1">&lt;xref:System.IO.FileStream.CanRead%2A&gt;</ph> property to determine whether the current instance supports reading.</source>
          <target state="translated">Verwenden der <ph id="ph1">&lt;xref:System.IO.FileStream.CanRead%2A&gt;</ph> Eigenschaft, um zu bestimmen, ob die aktuelle Instanz Lesevorgänge unterstützt.</target>       </trans-unit>
        <trans-unit id="656" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>For additional information, see <ph id="ph1">&lt;xref:System.IO.Stream.CanRead%2A&gt;</ph>.</source>
          <target state="translated">Weitere Informationen finden Sie unter <ph id="ph1">&lt;xref:System.IO.Stream.CanRead%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="657" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>If a stream is closed or you pass an invalid argument, exceptions are thrown immediately from <ph id="ph1">&lt;xref:System.IO.FileStream.BeginRead%2A&gt;</ph>.</source>
          <target state="translated">Wenn ein Stream geschlossen ist, oder Sie ein ungültiges Argument übergeben, Ausnahmen werden ausgelöst, unmittelbar aus <ph id="ph1">&lt;xref:System.IO.FileStream.BeginRead%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="658" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>Errors that occur during an asynchronous read request, such as a disk failure during the IO request, occur on the thread pool thread and become visible upon a call to <ph id="ph1">&lt;xref:System.IO.FileStream.EndRead%2A&gt;</ph>.</source>
          <target state="translated">Fehler während einer asynchronen leseanforderung z. B. Fehler auf dem Datenträger während der e/a-Anforderung, für den Thread im Threadpool ausgeführt, und werden bei einem Aufruf sichtbar <ph id="ph1">&lt;xref:System.IO.FileStream.EndRead%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="659" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source><ph id="ph1">&lt;xref:System.IO.Stream.EndRead%2A&gt;</ph> must be called with this <ph id="ph2">&lt;xref:System.IAsyncResult&gt;</ph> to find out how many bytes were read.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.Stream.EndRead%2A&gt;</ph> muss aufgerufen werden, dabei <ph id="ph2">&lt;xref:System.IAsyncResult&gt;</ph> um herauszufinden, wie viele Bytes gelesen wurden.</target>       </trans-unit>
        <trans-unit id="660" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>Multiple simultaneous asynchronous requests render the request completion order uncertain.</source>
          <target state="translated">Mehrere gleichzeitige asynchrone Anforderungen das Rendern der Anforderung Abschluss unsicher.</target>       </trans-unit>
        <trans-unit id="661" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>For a list of common file and directory operations, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</source>
          <target state="translated">Eine Liste der allgemeinen Datei- und Verzeichnisvorgänge, finden Sie unter <bpt id="p1">[</bpt>allgemeine e/a-Aufgaben<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</target>       </trans-unit>
        <trans-unit id="662" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.IO.FileStream.%23ctor%28System.String%2CSystem.IO.FileMode%2CSystem.IO.FileAccess%2CSystem.IO.FileShare%2CSystem.Int32%2CSystem.Boolean%29&gt;</ph> constructor.</source>
          <target state="translated">Dieses Codebeispiel ist Teil eines umfangreicheren Beispiels für die <ph id="ph1">&lt;xref:System.IO.FileStream.%23ctor%28System.String%2CSystem.IO.FileMode%2CSystem.IO.FileAccess%2CSystem.IO.FileShare%2CSystem.Int32%2CSystem.Boolean%29&gt;</ph> Konstruktor.</target>       </trans-unit>
        <trans-unit id="663" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>The array length minus <ph id="ph1">&lt;paramref name="offset" /&gt;</ph> is less than <ph id="ph2">&lt;paramref name="numBytes" /&gt;</ph>.</source>
          <target state="translated">Die Arraylänge minus <ph id="ph1">&lt;paramref name="offset" /&gt;</ph> ist kleiner als <ph id="ph2">&lt;paramref name="numBytes" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="664" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source><ph id="ph1">&lt;paramref name="array" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="array" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="665" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source><ph id="ph1">&lt;paramref name="offset" /&gt;</ph> or <ph id="ph2">&lt;paramref name="numBytes" /&gt;</ph> is negative.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="offset" /&gt;</ph> oder <ph id="ph2">&lt;paramref name="numBytes" /&gt;</ph> ist ein negativer Wert.</target>       </trans-unit>
        <trans-unit id="666" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>An asynchronous read was attempted past the end of the file.</source>
          <target state="translated">Es wurde ein asynchroner Lesevorgang nach Erreichen des Dateiendes versucht.</target>       </trans-unit>
        <trans-unit id="667" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>The buffer containing data to write to the current stream.</source>
          <target state="translated">Der Puffer mit den Daten, die in den aktuellen Stream geschrieben werden sollen.</target>       </trans-unit>
        <trans-unit id="668" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>The zero-based byte offset in <bpt id="p1">&lt;c&gt;</bpt>array<ept id="p1">&lt;/c&gt;</ept> at which to begin copying bytes to the current stream.</source>
          <target state="translated">Der nullbasierte Byteoffset in <bpt id="p1">&lt;c&gt;</bpt>array<ept id="p1">&lt;/c&gt;</ept>, ab dem Bytes in den aktuellen Stream kopiert werden sollen.</target>       </trans-unit>
        <trans-unit id="669" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>The maximum number of bytes to write.</source>
          <target state="translated">Die maximale Anzahl der zu schreibenden Bytes.</target>       </trans-unit>
        <trans-unit id="670" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>The method to be called when the asynchronous write operation is completed.</source>
          <target state="translated">Die Methode, die aufgerufen werden soll, wenn der asynchrone Schreibvorgang abgeschlossen ist.</target>       </trans-unit>
        <trans-unit id="671" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>A user-provided object that distinguishes this particular asynchronous write request from other requests.</source>
          <target state="translated">Ein vom Benutzer bereitgestelltes Objekt, das diese asynchrone Schreibanforderung von anderen Anforderungen unterscheidet.</target>       </trans-unit>
        <trans-unit id="672" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>Begins an asynchronous write operation.</source>
          <target state="translated">Beginnt einen asynchronen Schreibvorgang.</target>       </trans-unit>
        <trans-unit id="673" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>(Consider using <ph id="ph1">&lt;see cref="M:System.IO.FileStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)" /&gt;</ph> instead.)</source>
          <target state="translated">(Verwenden Sie stattdessen <ph id="ph1">&lt;see cref="M:System.IO.FileStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)" /&gt;</ph>.)</target>       </trans-unit>
        <trans-unit id="674" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>An object that references the asynchronous write.</source>
          <target state="translated">Ein Objekt, das auf den asynchronen Schreibvorgang verweist.</target>       </trans-unit>
        <trans-unit id="675" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>In the .NET Framework 4 and earlier versions, you have to use methods such as <ph id="ph1">&lt;xref:System.IO.FileStream.BeginWrite%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.IO.FileStream.EndWrite%2A&gt;</ph> to implement asynchronous file operations.</source>
          <target state="translated">In der .NET Framework 4 und früheren Versionen müssen Sie Methoden verwenden, z. B. <ph id="ph1">&lt;xref:System.IO.FileStream.BeginWrite%2A&gt;</ph> und <ph id="ph2">&lt;xref:System.IO.FileStream.EndWrite%2A&gt;</ph> zum Implementieren asynchroner Vorgänge.</target>       </trans-unit>
        <trans-unit id="676" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>These methods are still available in the <ph id="ph1">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph> to support legacy code; however, the new async methods, such as <ph id="ph2">&lt;xref:System.IO.FileStream.ReadAsync%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.IO.FileStream.WriteAsync%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.IO.Stream.CopyToAsync%2A&gt;</ph>, and <ph id="ph5">&lt;xref:System.IO.FileStream.FlushAsync%2A&gt;</ph>, help you implement asynchronous file operations more easily.</source>
          <target state="translated">Diese Methoden sind weiterhin verfügbar, in der <ph id="ph1">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph> zur Unterstützung von legacy-Code; allerdings der neuen asynchronen Methoden, wie z. B. <ph id="ph2">&lt;xref:System.IO.FileStream.ReadAsync%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.IO.FileStream.WriteAsync%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.IO.Stream.CopyToAsync%2A&gt;</ph>, und <ph id="ph5">&lt;xref:System.IO.FileStream.FlushAsync%2A&gt;</ph>, Hilfe, die Sie implementieren leichter asynchrone Dateivorgänge.</target>       </trans-unit>
        <trans-unit id="677" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source><ph id="ph1">&lt;xref:System.IO.FileStream.EndWrite%2A&gt;</ph> must be called exactly once on every <ph id="ph2">&lt;xref:System.IAsyncResult&gt;</ph> from <ph id="ph3">&lt;xref:System.IO.FileStream.BeginWrite%2A&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.FileStream.EndWrite%2A&gt;</ph> muss genau einmal aufgerufen werden, für jede <ph id="ph2">&lt;xref:System.IAsyncResult&gt;</ph> aus <ph id="ph3">&lt;xref:System.IO.FileStream.BeginWrite%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="678" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source><ph id="ph1">&lt;xref:System.IO.FileStream.EndWrite%2A&gt;</ph> will block until the I/O operation has completed.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.FileStream.EndWrite%2A&gt;</ph> blockiert, bis die e/a-Operation abgeschlossen ist.</target>       </trans-unit>
        <trans-unit id="679" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>This method overrides <ph id="ph1">&lt;xref:System.IO.Stream.BeginWrite%2A&gt;</ph>.</source>
          <target state="translated">Diese Methode überschreibt <ph id="ph1">&lt;xref:System.IO.Stream.BeginWrite%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="680" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source><ph id="ph1">&lt;xref:System.IO.FileStream&gt;</ph> provides two different modes of operation: synchronous I/O and asynchronous I/O.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.FileStream&gt;</ph> bietet zwei unterschiedliche Verwendungsarten des: synchrone e/a und asynchrone e/a.</target>       </trans-unit>
        <trans-unit id="681" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>While either can be used, the underlying operating system resources might allow access in only one of these modes.</source>
          <target state="translated">Während beide verwendet werden können, lassen die zugrunde liegenden Ressourcen des Betriebssystems möglicherweise Zugriff nur in einem dieser Modi zu.</target>       </trans-unit>
        <trans-unit id="682" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>By default, <ph id="ph1">&lt;xref:System.IO.FileStream&gt;</ph> opens the operating system handle synchronously.</source>
          <target state="translated">Standardmäßig <ph id="ph1">&lt;xref:System.IO.FileStream&gt;</ph> Öffnet das Betriebssystemhandle synchron.</target>       </trans-unit>
        <trans-unit id="683" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>In Windows, this slows down asynchronous methods.</source>
          <target state="translated">In Windows verlangsamt dies asynchrone Methoden.</target>       </trans-unit>
        <trans-unit id="684" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>If asynchronous methods are used, use the <ph id="ph1">&lt;xref:System.IO.FileStream.%23ctor%28System.String%2CSystem.IO.FileMode%2CSystem.IO.FileAccess%2CSystem.IO.FileShare%2CSystem.Int32%2CSystem.Boolean%29&gt;</ph> constructor.</source>
          <target state="translated">Wenn asynchrone Methoden verwendet werden, verwenden die <ph id="ph1">&lt;xref:System.IO.FileStream.%23ctor%28System.String%2CSystem.IO.FileMode%2CSystem.IO.FileAccess%2CSystem.IO.FileShare%2CSystem.Int32%2CSystem.Boolean%29&gt;</ph> Konstruktor.</target>       </trans-unit>
        <trans-unit id="685" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>If a stream is closed or you pass an invalid argument, exceptions are thrown immediately from <ph id="ph1">&lt;xref:System.IO.FileStream.BeginWrite%2A&gt;</ph>.</source>
          <target state="translated">Wenn ein Stream geschlossen ist, oder Sie ein ungültiges Argument übergeben, Ausnahmen werden ausgelöst, unmittelbar aus <ph id="ph1">&lt;xref:System.IO.FileStream.BeginWrite%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="686" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>Errors that occur during an asynchronous write request, such as a disk failure during the IO request, occur on the thread pool thread and become visible upon a call to <ph id="ph1">&lt;xref:System.IO.FileStream.EndWrite%2A&gt;</ph>.</source>
          <target state="translated">Fehler während einer asynchronen schreibanforderung, z. B. Fehler auf dem Datenträger während der e/a-Anforderung für den Thread im Threadpool ausgeführt, und werden bei einem Aufruf sichtbar <ph id="ph1">&lt;xref:System.IO.FileStream.EndWrite%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="687" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>Multiple simultaneous asynchronous requests render the request completion order uncertain.</source>
          <target state="translated">Mehrere gleichzeitige asynchrone Anforderungen das Rendern der Anforderung Abschluss unsicher.</target>       </trans-unit>
        <trans-unit id="688" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>For a list of common file and directory operations, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</source>
          <target state="translated">Eine Liste der allgemeinen Datei- und Verzeichnisvorgänge, finden Sie unter <bpt id="p1">[</bpt>allgemeine e/a-Aufgaben<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</target>       </trans-unit>
        <trans-unit id="689" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.IO.FileStream.%23ctor%28System.String%2CSystem.IO.FileMode%2CSystem.IO.FileAccess%2CSystem.IO.FileShare%2CSystem.Int32%2CSystem.Boolean%29&gt;</ph> constructor.</source>
          <target state="translated">Dieses Codebeispiel ist Teil eines umfangreicheren Beispiels für die <ph id="ph1">&lt;xref:System.IO.FileStream.%23ctor%28System.String%2CSystem.IO.FileMode%2CSystem.IO.FileAccess%2CSystem.IO.FileShare%2CSystem.Int32%2CSystem.Boolean%29&gt;</ph> Konstruktor.</target>       </trans-unit>
        <trans-unit id="690" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source><ph id="ph1">&lt;paramref name="array" /&gt;</ph> length minus <ph id="ph2">&lt;paramref name="offset" /&gt;</ph> is less than <ph id="ph3">&lt;paramref name="numBytes" /&gt;</ph>.</source>
          <target state="translated">Die Länge von <ph id="ph1">&lt;paramref name="array" /&gt;</ph> minus <ph id="ph2">&lt;paramref name="offset" /&gt;</ph> ist kleiner als <ph id="ph3">&lt;paramref name="numBytes" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="691" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source><ph id="ph1">&lt;paramref name="array" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="array" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="692" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source><ph id="ph1">&lt;paramref name="offset" /&gt;</ph> or <ph id="ph2">&lt;paramref name="numBytes" /&gt;</ph> is negative.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="offset" /&gt;</ph> oder <ph id="ph2">&lt;paramref name="numBytes" /&gt;</ph> ist ein negativer Wert.</target>       </trans-unit>
        <trans-unit id="693" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>The stream does not support writing.</source>
          <target state="translated">Der Stream unterstützt das Schreiben nicht.</target>       </trans-unit>
        <trans-unit id="694" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>The stream is closed.</source>
          <target state="translated">Der Stream ist geschlossen.</target>       </trans-unit>
        <trans-unit id="695" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>An I/O error occurred.</source>
          <target state="translated">E/A-Fehler</target>       </trans-unit>
        <trans-unit id="696" translate="yes" xml:space="preserve" uid="P:System.IO.FileStream.CanRead">
          <source>Gets a value indicating whether the current stream supports reading.</source>
          <target state="translated">Ruft einen Wert ab, der angibt, ob der aktuelle Stream Lesevorgänge unterstützt.</target>       </trans-unit>
        <trans-unit id="697" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileStream.CanRead">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the stream supports reading; <ph id="ph2">&lt;see langword="false" /&gt;</ph> if the stream is closed or was opened with write-only access.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, wenn der Stream Lesevorgänge unterstützt, <ph id="ph2">&lt;see langword="false" /&gt;</ph>, wenn der Stream geschlossen ist oder ausschließlich mit Schreibzugriff geöffnet wurde.</target>       </trans-unit>
        <trans-unit id="698" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileStream.CanRead">
          <source>If a class derived from <ph id="ph1">&lt;xref:System.IO.Stream&gt;</ph> does not support reading, calls to the <ph id="ph2">&lt;xref:System.IO.FileStream.Read%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.IO.FileStream.ReadByte%2A&gt;</ph>, and <ph id="ph4">&lt;xref:System.IO.FileStream.BeginRead%2A&gt;</ph> methods throw a <ph id="ph5">&lt;xref:System.NotSupportedException&gt;</ph>.</source>
          <target state="translated">Wenn von eine Klasse abgeleitet <ph id="ph1">&lt;xref:System.IO.Stream&gt;</ph> keine Lesevorgänge unterstützt, werden Aufrufe von der <ph id="ph2">&lt;xref:System.IO.FileStream.Read%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.IO.FileStream.ReadByte%2A&gt;</ph>, und <ph id="ph4">&lt;xref:System.IO.FileStream.BeginRead%2A&gt;</ph> Methoden lösen eine <ph id="ph5">&lt;xref:System.NotSupportedException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="699" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileStream.CanRead">
          <source>If the stream is closed, this property returns <ph id="ph1">`false`</ph>.</source>
          <target state="translated">Wenn der Stream geschlossen ist, gibt diese Eigenschaft <ph id="ph1">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="700" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileStream.CanRead">
          <source>The following example demonstrates a use of the <ph id="ph1">`CanRead`</ph> property.</source>
          <target state="translated">Das folgende Beispiel veranschaulicht die Verwendung von der <ph id="ph1">`CanRead`</ph> Eigenschaft.</target>       </trans-unit>
        <trans-unit id="701" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileStream.CanRead">
          <source>The output of this code is "MyFile.txt is not writable."</source>
          <target state="translated">Die Ausgabe dieses Codes lautet "MyFile.txt nicht geschrieben werden kann."</target>       </trans-unit>
        <trans-unit id="702" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileStream.CanRead">
          <source>To get the output message "MyFile.txt can be both written to and read from.", change the <ph id="ph1">`FileAccess`</ph> parameter to <ph id="ph2">`ReadWrite`</ph> in the <ph id="ph3">`FileStream`</ph> constructor.</source>
          <target state="translated">Zum Abrufen der Ausgabenachricht "MyFile.txt können sowohl in geschrieben und gelesen werden.", ändern die <ph id="ph1">`FileAccess`</ph> Parameter <ph id="ph2">`ReadWrite`</ph> in die <ph id="ph3">`FileStream`</ph> Konstruktor.</target>       </trans-unit>
        <trans-unit id="703" translate="yes" xml:space="preserve" uid="P:System.IO.FileStream.CanSeek">
          <source>Gets a value indicating whether the current stream supports seeking.</source>
          <target state="translated">Ruft einen Wert ab, der angibt, ob der aktuelle Stream Suchvorgänge unterstützt.</target>       </trans-unit>
        <trans-unit id="704" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileStream.CanSeek">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the stream supports seeking; <ph id="ph2">&lt;see langword="false" /&gt;</ph> if the stream is closed or if the <ph id="ph3">&lt;see langword="FileStream" /&gt;</ph> was constructed from an operating-system handle such as a pipe or output to the console.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, wenn der Stream Suchvorgänge unterstützt, <ph id="ph2">&lt;see langword="false" /&gt;</ph>, wenn der Stream geschlossen ist oder der <ph id="ph3">&lt;see langword="FileStream" /&gt;</ph> von einem Betriebssystemhandle, z. B. einer Pipe oder einer Ausgabe in der Konsole, erstellt wurde.</target>       </trans-unit>
        <trans-unit id="705" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileStream.CanSeek">
          <source>If a class derived from <ph id="ph1">&lt;xref:System.IO.Stream&gt;</ph> does not support seeking, calls to <ph id="ph2">&lt;xref:System.IO.FileStream.Length%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.IO.FileStream.SetLength%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.IO.FileStream.Position%2A&gt;</ph>, and <ph id="ph5">&lt;xref:System.IO.FileStream.Seek%2A&gt;</ph> throw a <ph id="ph6">&lt;xref:System.NotSupportedException&gt;</ph>.</source>
          <target state="translated">Wenn von eine Klasse abgeleitet <ph id="ph1">&lt;xref:System.IO.Stream&gt;</ph> Suchvorgänge nicht unterstützt, werden Aufrufe von <ph id="ph2">&lt;xref:System.IO.FileStream.Length%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.IO.FileStream.SetLength%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.IO.FileStream.Position%2A&gt;</ph>, und <ph id="ph5">&lt;xref:System.IO.FileStream.Seek%2A&gt;</ph> Auslösen einer <ph id="ph6">&lt;xref:System.NotSupportedException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="706" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileStream.CanSeek">
          <source>If the stream is closed, this property returns <ph id="ph1">`false`</ph>.</source>
          <target state="translated">Wenn der Stream geschlossen ist, gibt diese Eigenschaft <ph id="ph1">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="707" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileStream.CanSeek">
          <source>The following example uses the <ph id="ph1">`CanSeek`</ph> property to check whether a stream supports seeking.</source>
          <target state="translated">Im folgenden Beispiel wird die <ph id="ph1">`CanSeek`</ph> Eigenschaft zu überprüfen, ob ein Stream Suchvorgänge unterstützt.</target>       </trans-unit>
        <trans-unit id="708" translate="yes" xml:space="preserve" uid="P:System.IO.FileStream.CanWrite">
          <source>Gets a value indicating whether the current stream supports writing.</source>
          <target state="translated">Ruft einen Wert ab, der angibt, ob der aktuelle Stream Schreibvorgänge unterstützt.</target>       </trans-unit>
        <trans-unit id="709" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileStream.CanWrite">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the stream supports writing; <ph id="ph2">&lt;see langword="false" /&gt;</ph> if the stream is closed or was opened with read-only access.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, wenn der Stream Schreibvorgänge unterstützt, <ph id="ph2">&lt;see langword="false" /&gt;</ph>, wenn der Stream geschlossen ist oder mit schreibgeschütztem Zugriff geöffnet wurde.</target>       </trans-unit>
        <trans-unit id="710" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileStream.CanWrite">
          <source>If a class derived from <ph id="ph1">&lt;xref:System.IO.Stream&gt;</ph> does not support writing, a call to <ph id="ph2">&lt;xref:System.IO.FileStream.SetLength%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.IO.FileStream.Write%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.IO.FileStream.BeginWrite%2A&gt;</ph>, or <ph id="ph5">&lt;xref:System.IO.FileStream.WriteByte%2A&gt;</ph> throws a <ph id="ph6">&lt;xref:System.NotSupportedException&gt;</ph>.</source>
          <target state="translated">Wenn von eine Klasse abgeleitet <ph id="ph1">&lt;xref:System.IO.Stream&gt;</ph> unterstützt nicht das Schreiben von einem Aufruf von <ph id="ph2">&lt;xref:System.IO.FileStream.SetLength%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.IO.FileStream.Write%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.IO.FileStream.BeginWrite%2A&gt;</ph>, oder <ph id="ph5">&lt;xref:System.IO.FileStream.WriteByte%2A&gt;</ph> löst eine <ph id="ph6">&lt;xref:System.NotSupportedException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="711" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileStream.CanWrite">
          <source>If the stream is closed, this property returns <ph id="ph1">`false`</ph>.</source>
          <target state="translated">Wenn der Stream geschlossen ist, gibt diese Eigenschaft <ph id="ph1">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="712" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileStream.CanWrite">
          <source>The following example uses the <ph id="ph1">`CanWrite`</ph> property to check whether a stream supports writing.</source>
          <target state="translated">Im folgenden Beispiel wird die <ph id="ph1">`CanWrite`</ph> Eigenschaft zu überprüfen, ob ein Stream Schreibvorgänge unterstützt.</target>       </trans-unit>
        <trans-unit id="713" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileStream.CanWrite">
          <source>The following is an example using the <ph id="ph1">`CanWrite`</ph> property.</source>
          <target state="translated">Das folgenden Beispiel wird mithilfe der <ph id="ph1">`CanWrite`</ph> Eigenschaft.</target>       </trans-unit>
        <trans-unit id="714" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileStream.CanWrite">
          <source>The output of this code is "MyFile.txt is writable."</source>
          <target state="translated">Die Ausgabe dieses Codes lautet "MyFile.txt geschrieben werden kann."</target>       </trans-unit>
        <trans-unit id="715" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileStream.CanWrite">
          <source>To get the output message "MyFile.txt can be both written to and read from.", change the <ph id="ph1">`FileAccess`</ph> parameter to <ph id="ph2">`ReadWrite`</ph> in the <ph id="ph3">`FileStream`</ph> constructor.</source>
          <target state="translated">Zum Abrufen der Ausgabenachricht "MyFile.txt können sowohl in geschrieben und gelesen werden.", ändern die <ph id="ph1">`FileAccess`</ph> Parameter <ph id="ph2">`ReadWrite`</ph> in die <ph id="ph3">`FileStream`</ph> Konstruktor.</target>       </trans-unit>
        <trans-unit id="716" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to release both managed and unmanaged resources; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to release only unmanaged resources.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, um sowohl verwaltete als auch nicht verwaltete Ressourcen freizugeben, <ph id="ph2">&lt;see langword="false" /&gt;</ph>, um ausschließlich nicht verwaltete Ressourcen freizugeben.</target>       </trans-unit>
        <trans-unit id="717" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.Dispose(System.Boolean)">
          <source>Releases the unmanaged resources used by the <ph id="ph1">&lt;see cref="T:System.IO.FileStream" /&gt;</ph> and optionally releases the managed resources.</source>
          <target state="translated">Gibt die von <ph id="ph1">&lt;see cref="T:System.IO.FileStream" /&gt;</ph> verwendeten nicht verwalteten Ressourcen und optional die verwalteten Ressourcen frei.</target>       </trans-unit>
        <trans-unit id="718" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.Dispose(System.Boolean)">
          <source>This method is called by the public <ph id="ph1">&lt;xref:System.ComponentModel.Component.Dispose%2A&gt;</ph> method and the <ph id="ph2">&lt;xref:System.Object.Finalize%2A&gt;</ph> method.</source>
          <target state="translated">Diese Methode wird aufgerufen, der öffentlich <ph id="ph1">&lt;xref:System.ComponentModel.Component.Dispose%2A&gt;</ph> Methode und die <ph id="ph2">&lt;xref:System.Object.Finalize%2A&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="719" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;xref:System.ComponentModel.Component.Dispose%2A&gt;</ph> invokes the protected <ph id="ph2">&lt;xref:System.IO.FileStream.Dispose%2A&gt;</ph> method with the <ph id="ph3">`disposing`</ph> parameter set to <ph id="ph4">`true`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.Component.Dispose%2A&gt;</ph> Ruft die geschützte <ph id="ph2">&lt;xref:System.IO.FileStream.Dispose%2A&gt;</ph> Methode mit dem <ph id="ph3">`disposing`</ph> Parametersatz auf <ph id="ph4">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="720" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;xref:System.Object.Finalize%2A&gt;</ph> invokes <ph id="ph2">&lt;xref:System.IO.FileStream.Dispose%2A&gt;</ph> with <ph id="ph3">`disposing`</ph> set to <ph id="ph4">`false`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Object.Finalize%2A&gt;</ph> Ruft <ph id="ph2">&lt;xref:System.IO.FileStream.Dispose%2A&gt;</ph> mit <ph id="ph3">`disposing`</ph> festgelegt <ph id="ph4">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="721" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.Dispose(System.Boolean)">
          <source>When the <ph id="ph1">`disposing`</ph> parameter is <ph id="ph2">`true`</ph>, this method releases all resources held by any managed objects that this <ph id="ph3">&lt;xref:System.IO.FileStream&gt;</ph> references.</source>
          <target state="translated">Wenn der <ph id="ph1">`disposing`</ph>-Parameter <ph id="ph2">`true`</ph> ist, gibt diese Methode sämtliche Ressourcen frei, die für verwaltete Objekte reserviert sind, auf die dieser <ph id="ph3">&lt;xref:System.IO.FileStream&gt;</ph> verweist.</target>       </trans-unit>
        <trans-unit id="722" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.Dispose(System.Boolean)">
          <source>This method invokes the <ph id="ph1">&lt;xref:System.ComponentModel.Component.Dispose%2A&gt;</ph> method of each referenced object.</source>
          <target state="translated">Diese Methode ruft die <ph id="ph1">&lt;xref:System.ComponentModel.Component.Dispose%2A&gt;</ph>-Methode aller Objekte auf, auf die verwiesen wird.</target>       </trans-unit>
        <trans-unit id="723" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see cref="M:System.ComponentModel.Component.Dispose" /&gt;</ph> can be called multiple times by other objects.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.ComponentModel.Component.Dispose" /&gt;</ph> kann von anderen Objekten mehrmals aufgerufen werden.</target>       </trans-unit>
        <trans-unit id="724" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.Dispose(System.Boolean)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.IO.FileStream.Dispose(System.Boolean)" /&gt;</ph> be careful not to reference objects that have been previously disposed of in an earlier call to <ph id="ph2">&lt;see cref="M:System.ComponentModel.Component.Dispose" /&gt;</ph>.</source>
          <target state="translated">Zum Überschreiben <ph id="ph1">&lt;see cref="M:System.IO.FileStream.Dispose(System.Boolean)" /&gt;</ph> Achten Sie darauf, dass Sie nicht auf Objekte verweisen, die einen früheren Aufruf freigegeben wurden <ph id="ph2">&lt;see cref="M:System.ComponentModel.Component.Dispose" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="725" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.Dispose(System.Boolean)">
          <source>For more information about how to implement <ph id="ph1">&lt;see cref="M:System.IO.FileStream.Dispose(System.Boolean)" /&gt;</ph>, see <bpt id="p1">[</bpt>Implementing a Dispose Method<ept id="p1">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</source>
          <target state="translated">Weitere Informationen zum Implementieren <ph id="ph1">&lt;see cref="M:System.IO.FileStream.Dispose(System.Boolean)" /&gt;</ph>, finden Sie unter <bpt id="p1">[</bpt>Implementieren einer Dispose-Methode<ept id="p1">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</target>       </trans-unit>
        <trans-unit id="726" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.Dispose(System.Boolean)">
          <source>For more information about <ph id="ph1">&lt;see cref="M:System.ComponentModel.Component.Dispose" /&gt;</ph> and <ph id="ph2">&lt;see cref="M:System.Object.Finalize" /&gt;</ph>, see <bpt id="p1">[</bpt>Cleaning Up Unmanaged Resources<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept>.</source>
          <target state="translated">Weitere Informationen zu <ph id="ph1">&lt;see cref="M:System.ComponentModel.Component.Dispose" /&gt;</ph> und <ph id="ph2">&lt;see cref="M:System.Object.Finalize" /&gt;</ph>, finden Sie unter <bpt id="p1">[</bpt>Bereinigen von nicht verwalteten Ressourcen<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept>.</target>       </trans-unit>
        <trans-unit id="727" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.EndRead(System.IAsyncResult)">
          <source>The reference to the pending asynchronous request to wait for.</source>
          <target state="translated">Der Verweis auf die ausstehende asynchrone Anforderung, die abgewartet werden soll.</target>       </trans-unit>
        <trans-unit id="728" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.EndRead(System.IAsyncResult)">
          <source>Waits for the pending asynchronous read operation to complete.</source>
          <target state="translated">Wartet, bis der ausstehende asynchrone Lesevorgang abgeschlossen ist.</target>       </trans-unit>
        <trans-unit id="729" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.EndRead(System.IAsyncResult)">
          <source>(Consider using <ph id="ph1">&lt;see cref="M:System.IO.FileStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)" /&gt;</ph> instead.)</source>
          <target state="translated">(Verwenden Sie stattdessen <ph id="ph1">&lt;see cref="M:System.IO.FileStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)" /&gt;</ph>.)</target>       </trans-unit>
        <trans-unit id="730" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.EndRead(System.IAsyncResult)">
          <source>The number of bytes read from the stream, between 0 and the number of bytes you requested.</source>
          <target state="translated">Die Anzahl der aus dem Stream gelesenen Bytes. Diese Anzahl kann zwischen 0 und der Anzahl der angeforderten Bytes liegen.</target>       </trans-unit>
        <trans-unit id="731" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.EndRead(System.IAsyncResult)">
          <source>Streams only return 0 at the end of the stream, otherwise, they should block until at least 1 byte is available.</source>
          <target state="translated">Streams geben nur am Ende des Streams 0 zurück, andernfalls sollten sie blockieren, bis mindestens 1 Byte verfügbar ist.</target>       </trans-unit>
        <trans-unit id="732" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.EndRead(System.IAsyncResult)">
          <source>In the .NET Framework 4 and earlier versions, you have to use methods such as <ph id="ph1">&lt;xref:System.IO.FileStream.BeginRead%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.IO.FileStream.EndRead%2A&gt;</ph> to implement asynchronous file operations.</source>
          <target state="translated">In der .NET Framework 4 und früheren Versionen müssen Sie Methoden verwenden, z. B. <ph id="ph1">&lt;xref:System.IO.FileStream.BeginRead%2A&gt;</ph> und <ph id="ph2">&lt;xref:System.IO.FileStream.EndRead%2A&gt;</ph> zum Implementieren asynchroner Vorgänge.</target>       </trans-unit>
        <trans-unit id="733" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.EndRead(System.IAsyncResult)">
          <source>These methods are still available in the <ph id="ph1">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph> to support legacy code; however, the new async methods, such as <ph id="ph2">&lt;xref:System.IO.FileStream.ReadAsync%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.IO.FileStream.WriteAsync%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.IO.Stream.CopyToAsync%2A&gt;</ph>, and <ph id="ph5">&lt;xref:System.IO.FileStream.FlushAsync%2A&gt;</ph>, help you implement asynchronous file operations more easily.</source>
          <target state="translated">Diese Methoden sind weiterhin verfügbar, in der <ph id="ph1">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph> zur Unterstützung von legacy-Code; allerdings der neuen asynchronen Methoden, wie z. B. <ph id="ph2">&lt;xref:System.IO.FileStream.ReadAsync%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.IO.FileStream.WriteAsync%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.IO.Stream.CopyToAsync%2A&gt;</ph>, und <ph id="ph5">&lt;xref:System.IO.FileStream.FlushAsync%2A&gt;</ph>, Hilfe, die Sie implementieren leichter asynchrone Dateivorgänge.</target>       </trans-unit>
        <trans-unit id="734" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.EndRead(System.IAsyncResult)">
          <source><ph id="ph1">&lt;xref:System.IO.FileStream.EndRead%2A&gt;</ph> must be called exactly for every call to <ph id="ph2">&lt;xref:System.IO.FileStream.BeginRead%2A&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.FileStream.EndRead%2A&gt;</ph> muss aufgerufen werden, genau für jeden Aufruf von <ph id="ph2">&lt;xref:System.IO.FileStream.BeginRead%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="735" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.EndRead(System.IAsyncResult)">
          <source>Failing to end a read process before beginning another read can cause undesirable behavior such as deadlock.</source>
          <target state="translated">Wegen eines Fehlers beim ein Lesevorgang beendet vor dem Beginn einer anderen Lesevorgang kann unerwünschtes Verhalten wie z. B. Deadlocks verursachen.</target>       </trans-unit>
        <trans-unit id="736" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.EndRead(System.IAsyncResult)">
          <source>This method overrides <ph id="ph1">&lt;xref:System.IO.Stream.EndRead%2A&gt;</ph>.</source>
          <target state="translated">Diese Methode überschreibt <ph id="ph1">&lt;xref:System.IO.Stream.EndRead%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="737" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.EndRead(System.IAsyncResult)">
          <source><ph id="ph1">&lt;xref:System.IO.FileStream.EndRead%2A&gt;</ph> can be called on every <ph id="ph2">&lt;xref:System.IAsyncResult&gt;</ph> from <ph id="ph3">&lt;xref:System.IO.FileStream.BeginRead%2A&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.FileStream.EndRead%2A&gt;</ph> kann aufgerufen werden, auf jedem <ph id="ph2">&lt;xref:System.IAsyncResult&gt;</ph> aus <ph id="ph3">&lt;xref:System.IO.FileStream.BeginRead%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="738" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.EndRead(System.IAsyncResult)">
          <source>Calling <ph id="ph1">&lt;xref:System.IO.FileStream.EndRead%2A&gt;</ph> tells you how many bytes were read from the stream.</source>
          <target state="translated">Aufrufen von <ph id="ph1">&lt;xref:System.IO.FileStream.EndRead%2A&gt;</ph> Aufschluss darüber, wie viele Bytes aus dem Stream gelesen wurden.</target>       </trans-unit>
        <trans-unit id="739" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.EndRead(System.IAsyncResult)">
          <source><ph id="ph1">&lt;xref:System.IO.FileStream.EndRead%2A&gt;</ph> will block until the I/O operation has completed.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.FileStream.EndRead%2A&gt;</ph> blockiert, bis die e/a-Operation abgeschlossen ist.</target>       </trans-unit>
        <trans-unit id="740" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.EndRead(System.IAsyncResult)">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.IO.FileStream.%23ctor%28System.String%2CSystem.IO.FileMode%2CSystem.IO.FileAccess%2CSystem.IO.FileShare%2CSystem.Int32%2CSystem.Boolean%29&gt;</ph> constructor.</source>
          <target state="translated">Dieses Codebeispiel ist Teil eines umfangreicheren Beispiels für die <ph id="ph1">&lt;xref:System.IO.FileStream.%23ctor%28System.String%2CSystem.IO.FileMode%2CSystem.IO.FileAccess%2CSystem.IO.FileShare%2CSystem.Int32%2CSystem.Boolean%29&gt;</ph> Konstruktor.</target>       </trans-unit>
        <trans-unit id="741" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.EndRead(System.IAsyncResult)">
          <source><ph id="ph1">&lt;paramref name="asyncResult" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="asyncResult" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="742" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.EndRead(System.IAsyncResult)">
          <source>This <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> object was not created by calling <ph id="ph2">&lt;see cref="M:System.IO.FileStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /&gt;</ph> on this class.</source>
          <target state="translated">Dieses <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph>-Objekt wurde nicht durch Aufrufen von <ph id="ph2">&lt;see cref="M:System.IO.FileStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /&gt;</ph> für diese Klasse erstellt.</target>       </trans-unit>
        <trans-unit id="743" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.EndRead(System.IAsyncResult)">
          <source><ph id="ph1">&lt;see cref="M:System.IO.FileStream.EndRead(System.IAsyncResult)" /&gt;</ph> is called multiple times.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.IO.FileStream.EndRead(System.IAsyncResult)" /&gt;</ph> wird mehrmals aufgerufen.</target>       </trans-unit>
        <trans-unit id="744" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.EndRead(System.IAsyncResult)">
          <source>The stream is closed or an internal error has occurred.</source>
          <target state="translated">Der Stream ist geschlossen, oder ein interner Fehler ist aufgetreten.</target>       </trans-unit>
        <trans-unit id="745" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.EndWrite(System.IAsyncResult)">
          <source>The pending asynchronous I/O request.</source>
          <target state="translated">Die ausstehende asynchrone E/A-Anforderung.</target>       </trans-unit>
        <trans-unit id="746" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.EndWrite(System.IAsyncResult)">
          <source>Ends an asynchronous write operation and blocks until the I/O operation is complete.</source>
          <target state="translated">Beendet einen asynchronen Schreibvorgang und blockiert, bis die E/A-Operation abgeschlossen wurde.</target>       </trans-unit>
        <trans-unit id="747" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.EndWrite(System.IAsyncResult)">
          <source>(Consider using <ph id="ph1">&lt;see cref="M:System.IO.FileStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)" /&gt;</ph> instead.)</source>
          <target state="translated">(Verwenden Sie stattdessen <ph id="ph1">&lt;see cref="M:System.IO.FileStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)" /&gt;</ph>.)</target>       </trans-unit>
        <trans-unit id="748" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.EndWrite(System.IAsyncResult)">
          <source>In the .NET Framework 4 and earlier versions, you have to use methods such as <ph id="ph1">&lt;xref:System.IO.FileStream.BeginWrite%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.IO.FileStream.EndWrite%2A&gt;</ph> to implement asynchronous file operations.</source>
          <target state="translated">In der .NET Framework 4 und früheren Versionen müssen Sie Methoden verwenden, z. B. <ph id="ph1">&lt;xref:System.IO.FileStream.BeginWrite%2A&gt;</ph> und <ph id="ph2">&lt;xref:System.IO.FileStream.EndWrite%2A&gt;</ph> zum Implementieren asynchroner Vorgänge.</target>       </trans-unit>
        <trans-unit id="749" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.EndWrite(System.IAsyncResult)">
          <source>These methods are still available in the <ph id="ph1">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph> to support legacy code; however, the new async methods, such as <ph id="ph2">&lt;xref:System.IO.FileStream.ReadAsync%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.IO.FileStream.WriteAsync%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.IO.Stream.CopyToAsync%2A&gt;</ph>, and <ph id="ph5">&lt;xref:System.IO.FileStream.FlushAsync%2A&gt;</ph>, help you implement asynchronous file operations more easily.</source>
          <target state="translated">Diese Methoden sind weiterhin verfügbar, in der <ph id="ph1">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph> zur Unterstützung von legacy-Code; allerdings der neuen asynchronen Methoden, wie z. B. <ph id="ph2">&lt;xref:System.IO.FileStream.ReadAsync%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.IO.FileStream.WriteAsync%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.IO.Stream.CopyToAsync%2A&gt;</ph>, und <ph id="ph5">&lt;xref:System.IO.FileStream.FlushAsync%2A&gt;</ph>, Hilfe, die Sie implementieren leichter asynchrone Dateivorgänge.</target>       </trans-unit>
        <trans-unit id="750" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.EndWrite(System.IAsyncResult)">
          <source>This method overrides <ph id="ph1">&lt;xref:System.IO.Stream.EndWrite%2A&gt;</ph>.</source>
          <target state="translated">Diese Methode überschreibt <ph id="ph1">&lt;xref:System.IO.Stream.EndWrite%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="751" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.EndWrite(System.IAsyncResult)">
          <source><ph id="ph1">&lt;xref:System.IO.FileStream.EndWrite%2A&gt;</ph> must be called exactly once on every <ph id="ph2">&lt;xref:System.IAsyncResult&gt;</ph> from <ph id="ph3">&lt;xref:System.IO.FileStream.BeginWrite%2A&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.FileStream.EndWrite%2A&gt;</ph> muss genau einmal aufgerufen werden, für jede <ph id="ph2">&lt;xref:System.IAsyncResult&gt;</ph> aus <ph id="ph3">&lt;xref:System.IO.FileStream.BeginWrite%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="752" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.EndWrite(System.IAsyncResult)">
          <source><ph id="ph1">&lt;xref:System.IO.FileStream.EndWrite%2A&gt;</ph> will block until the I/O operation has completed.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.FileStream.EndWrite%2A&gt;</ph> blockiert, bis die e/a-Operation abgeschlossen ist.</target>       </trans-unit>
        <trans-unit id="753" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.EndWrite(System.IAsyncResult)">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.IO.FileStream.%23ctor%28System.String%2CSystem.IO.FileMode%2CSystem.IO.FileAccess%2CSystem.IO.FileShare%2CSystem.Int32%2CSystem.Boolean%29&gt;</ph> constructor.</source>
          <target state="translated">Dieses Codebeispiel ist Teil eines umfangreicheren Beispiels für die <ph id="ph1">&lt;xref:System.IO.FileStream.%23ctor%28System.String%2CSystem.IO.FileMode%2CSystem.IO.FileAccess%2CSystem.IO.FileShare%2CSystem.Int32%2CSystem.Boolean%29&gt;</ph> Konstruktor.</target>       </trans-unit>
        <trans-unit id="754" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.EndWrite(System.IAsyncResult)">
          <source><ph id="ph1">&lt;paramref name="asyncResult" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="asyncResult" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="755" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.EndWrite(System.IAsyncResult)">
          <source>This <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> object was not created by calling <ph id="ph2">&lt;see cref="M:System.IO.Stream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /&gt;</ph> on this class.</source>
          <target state="translated">Dieses <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph>-Objekt wurde nicht durch Aufrufen von <ph id="ph2">&lt;see cref="M:System.IO.Stream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /&gt;</ph> für diese Klasse erstellt.</target>       </trans-unit>
        <trans-unit id="756" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.EndWrite(System.IAsyncResult)">
          <source><ph id="ph1">&lt;see cref="M:System.IO.FileStream.EndWrite(System.IAsyncResult)" /&gt;</ph> is called multiple times.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.IO.FileStream.EndWrite(System.IAsyncResult)" /&gt;</ph> wird mehrmals aufgerufen.</target>       </trans-unit>
        <trans-unit id="757" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.EndWrite(System.IAsyncResult)">
          <source>The stream is closed or an internal error has occurred.</source>
          <target state="translated">Der Stream ist geschlossen, oder ein interner Fehler ist aufgetreten.</target>       </trans-unit>
        <trans-unit id="758" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.Finalize">
          <source>Ensures that resources are freed and other cleanup operations are performed when the garbage collector reclaims the <ph id="ph1">&lt;see langword="FileStream" /&gt;</ph>.</source>
          <target state="translated">Stellt das Freigeben von Ressourcen und das Ausführen anderer Bereinigungsvorgänge sicher, wenn der Garbage Collector den <ph id="ph1">&lt;see langword="FileStream" /&gt;</ph> verarbeitet.</target>       </trans-unit>
        <trans-unit id="759" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.Finalize">
          <source>The garbage collector calls <ph id="ph1">`Finalize`</ph> when the current object is ready to be finalized.</source>
          <target state="translated">Der Garbage Collector ruft <ph id="ph1">`Finalize`</ph> Wenn das aktuelle Objekt wird finalisiert werden.</target>       </trans-unit>
        <trans-unit id="760" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.Finalize">
          <source><ph id="ph1">`Finalize`</ph> closes the <ph id="ph2">`FileStream`</ph>.</source>
          <target state="translated"><ph id="ph1">`Finalize`</ph> Schließt die <ph id="ph2">`FileStream`</ph>.</target>       </trans-unit>
        <trans-unit id="761" translate="yes" xml:space="preserve" uid="T:System.IO.FileStream">
          <source>Clears buffers for this stream and causes any buffered data to be written to the file.</source>
          <target state="translated">Löscht die Puffer für diesen Datenstrom und veranlasst die Ausgabe aller gepufferten Daten in die Datei.</target>       </trans-unit>
        <trans-unit id="762" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.Flush">
          <source>Clears buffers for this stream and causes any buffered data to be written to the file.</source>
          <target state="translated">Löscht die Puffer für diesen Datenstrom und veranlasst die Ausgabe aller gepufferten Daten in die Datei.</target>       </trans-unit>
        <trans-unit id="763" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.Flush">
          <source>This method overrides <ph id="ph1">&lt;xref:System.IO.Stream.Flush%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Diese Methode überschreibt <ph id="ph1">&lt;xref:System.IO.Stream.Flush%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="764" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.Flush">
          <source>When you call the <ph id="ph1">&lt;xref:System.IO.FileStream.Flush%2A?displayProperty=nameWithType&gt;</ph> method, the operating system I/O buffer is also flushed.</source>
          <target state="translated">Beim Aufrufen der <ph id="ph1">&lt;xref:System.IO.FileStream.Flush%2A?displayProperty=nameWithType&gt;</ph> -Methode, den Betriebssystem-e/a-Puffer wird ebenfalls geleert.</target>       </trans-unit>
        <trans-unit id="765" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.Flush">
          <source>A stream’s encoder is not flushed unless you explicitly call <ph id="ph1">&lt;xref:System.IO.FileStream.Flush%2A&gt;</ph> or dispose of the object.</source>
          <target state="translated">Ein Stream Encoder wird nicht geleert werden, es sei denn, Sie explizit aufrufen <ph id="ph1">&lt;xref:System.IO.FileStream.Flush%2A&gt;</ph> oder das Objekt freizugeben.</target>       </trans-unit>
        <trans-unit id="766" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.Flush">
          <source>Setting <ph id="ph1">&lt;xref:System.IO.StreamWriter.AutoFlush%2A?displayProperty=nameWithType&gt;</ph> to <ph id="ph2">`true`</ph> means that data will be flushed from the buffer to the stream, but the encoder state will not be flushed.</source>
          <target state="translated">Festlegen von <ph id="ph1">&lt;xref:System.IO.StreamWriter.AutoFlush%2A?displayProperty=nameWithType&gt;</ph> zu <ph id="ph2">`true`</ph> ist, werden Daten aus dem Puffer geleert werden, in den Stream, aber die Encoder-Status wird nicht geleert werden.</target>       </trans-unit>
        <trans-unit id="767" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.Flush">
          <source>This allows the encoder to keep its state (partial characters) so that it can encode the next block of characters correctly.</source>
          <target state="translated">Dadurch wird den Encoder seinen Zustand (teilweise Zeichen) beibehalten, sodass er den nächsten Block von Zeichen richtig zu codieren.</target>       </trans-unit>
        <trans-unit id="768" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.Flush">
          <source>This scenario affects UTF8 and UTF7 where certain characters can only be encoded after the encoder receives the adjacent character or characters.</source>
          <target state="translated">Dieses Szenario betrifft UTF8 und UTF7, in denen bestimmte Zeichen nur verschlüsselt werden können, nachdem der Encoder die angrenzenden Zeichen oder Zeichen empfängt.</target>       </trans-unit>
        <trans-unit id="769" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.Flush">
          <source>Because a buffer can be used for either reading or writing, <ph id="ph1">&lt;xref:System.IO.FileStream.Flush&gt;</ph> performs the following two functions:</source>
          <target state="translated">Da ein Puffer zum Lesen oder Schreiben verwendet werden kann <ph id="ph1">&lt;xref:System.IO.FileStream.Flush&gt;</ph> führt die folgenden zwei Funktionen:</target>       </trans-unit>
        <trans-unit id="770" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.Flush">
          <source>Any data previously written to the buffer is copied to the file and the buffer is cleared except for its encoder state.</source>
          <target state="translated">Alle zuvor in den Puffer geschriebenen Daten in die Datei kopiert und der Puffer mit Ausnahme von Datenbankzustands Encoder deaktiviert ist.</target>       </trans-unit>
        <trans-unit id="771" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.Flush">
          <source>If <ph id="ph1">&lt;xref:System.IO.BufferedStream.CanSeek%2A?displayProperty=nameWithType&gt;</ph> is <ph id="ph2">`true`</ph> and data was previously copied from the file to the buffer for reading, the current position within the file is decremented by the number of unread bytes in the buffer.</source>
          <target state="translated">Wenn <ph id="ph1">&lt;xref:System.IO.BufferedStream.CanSeek%2A?displayProperty=nameWithType&gt;</ph> ist <ph id="ph2">`true`</ph> und Daten wurde zuvor in den Puffer zum Lesen aus der Datei kopiert, die aktuelle Position in der Datei verringert, um die Anzahl der gelesenen Bytes im Puffer ist.</target>       </trans-unit>
        <trans-unit id="772" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.Flush">
          <source>The buffer is then cleared.</source>
          <target state="translated">Der Puffer wird dann gelöscht.</target>       </trans-unit>
        <trans-unit id="773" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.Flush">
          <source>Use the <ph id="ph1">&lt;xref:System.IO.FileStream.Flush%28System.Boolean%29&gt;</ph> method overload when you want to ensure that all buffered data in intermediate file buffers is written to disk.</source>
          <target state="translated">Verwenden der <ph id="ph1">&lt;xref:System.IO.FileStream.Flush%28System.Boolean%29&gt;</ph> -methodenüberladung, wenn Sie sicherstellen möchten, dass alle Zwischendateipuffer Daten gepuffert bezieht sich auf den Datenträger.</target>       </trans-unit>
        <trans-unit id="774" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.Flush">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.IO.FileStream.Lock%2A&gt;</ph> method.</source>
          <target state="translated">Dieses Codebeispiel ist Teil eines umfangreicheren Beispiels für die <ph id="ph1">&lt;xref:System.IO.FileStream.Lock%2A&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="775" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.Flush">
          <source>An I/O error occurred.</source>
          <target state="translated">E/A-Fehler</target>       </trans-unit>
        <trans-unit id="776" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.Flush">
          <source>The stream is closed.</source>
          <target state="translated">Der Stream ist geschlossen.</target>       </trans-unit>
        <trans-unit id="777" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.Flush(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to flush all intermediate file buffers; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, um alle Zwischendateipuffer zu leeren, andernfalls <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="778" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.Flush(System.Boolean)">
          <source>Clears buffers for this stream and causes any buffered data to be written to the file, and also clears all intermediate file buffers.</source>
          <target state="translated">Löscht die Puffer für diesen Datenstrom, veranlasst die Ausgabe aller gepufferten Daten in die Datei und löscht zudem alle Zwischendateipuffer.</target>       </trans-unit>
        <trans-unit id="779" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.Flush(System.Boolean)">
          <source>Use this overload when you want to ensure that all buffered data in intermediate file buffers is written to disk.</source>
          <target state="translated">Verwenden Sie diese Überladung, wenn Sie möchten, um sicherzustellen, dass alle Zwischendateipuffer Daten gepuffert wird geschrieben auf den Datenträger.</target>       </trans-unit>
        <trans-unit id="780" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.Flush(System.Boolean)">
          <source>When you call the <ph id="ph1">&lt;xref:System.IO.FileStream.Flush%2A&gt;</ph> method, the operating system I/O buffer is also flushed.</source>
          <target state="translated">Beim Aufrufen der <ph id="ph1">&lt;xref:System.IO.FileStream.Flush%2A&gt;</ph> -Methode, den Betriebssystem-e/a-Puffer wird ebenfalls geleert.</target>       </trans-unit>
        <trans-unit id="781" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.FlushAsync(System.Threading.CancellationToken)">
          <source>The token to monitor for cancellation requests.</source>
          <target state="translated">Das Token zum überwachen von Abbruchanforderungen.</target>       </trans-unit>
        <trans-unit id="782" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.FlushAsync(System.Threading.CancellationToken)">
          <source>Asynchronously clears all buffers for this stream, causes any buffered data to be written to the underlying device, and monitors cancellation requests.</source>
          <target state="translated">Löscht alle Puffer für diesen Stream asynchron, veranlasst die Ausgabe aller gepufferten Daten an das zugrunde liegende Gerät und überwacht Abbruchanforderungen.</target>       </trans-unit>
        <trans-unit id="783" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.FlushAsync(System.Threading.CancellationToken)">
          <source>A task that represents the asynchronous flush operation.</source>
          <target state="translated">Eine Aufgabe, die die asynchrone Leerung darstellt.</target>       </trans-unit>
        <trans-unit id="784" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.FlushAsync(System.Threading.CancellationToken)">
          <source>When you call the <ph id="ph1">&lt;xref:System.IO.FileStream.FlushAsync%2A&gt;</ph> method, the operating system I/O buffer is also flushed.</source>
          <target state="translated">Beim Aufrufen der <ph id="ph1">&lt;xref:System.IO.FileStream.FlushAsync%2A&gt;</ph> -Methode, den Betriebssystem-e/a-Puffer wird ebenfalls geleert.</target>       </trans-unit>
        <trans-unit id="785" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.FlushAsync(System.Threading.CancellationToken)">
          <source>If the operation is canceled before it completes, the returned task contains the <ph id="ph1">&lt;xref:System.Threading.Tasks.TaskStatus.Canceled&gt;</ph> value for the <ph id="ph2">&lt;xref:System.Threading.Tasks.Task.Status%2A&gt;</ph> property.</source>
          <target state="translated">Wenn der Vorgang abgebrochen wird, bevor er abgeschlossen wurde, enthält die zurückgegebene Aufgabe der <ph id="ph1">&lt;xref:System.Threading.Tasks.TaskStatus.Canceled&gt;</ph> Wert für die <ph id="ph2">&lt;xref:System.Threading.Tasks.Task.Status%2A&gt;</ph> Eigenschaft.</target>       </trans-unit>
        <trans-unit id="786" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.FlushAsync(System.Threading.CancellationToken)">
          <source>If the handle to the file is disposed, the returned task contains the <ph id="ph1">&lt;xref:System.ObjectDisposedException&gt;</ph> exception in the <ph id="ph2">&lt;xref:System.Threading.Tasks.Task.Exception%2A&gt;</ph> property.</source>
          <target state="translated">Wenn das Handle für die Datei verworfen wird, enthält die zurückgegebene Aufgabe der <ph id="ph1">&lt;xref:System.ObjectDisposedException&gt;</ph> Ausnahme in der <ph id="ph2">&lt;xref:System.Threading.Tasks.Task.Exception%2A&gt;</ph> Eigenschaft.</target>       </trans-unit>
        <trans-unit id="787" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.FlushAsync(System.Threading.CancellationToken)">
          <source>The stream has been disposed.</source>
          <target state="translated">Der Stream wurde verworfen.</target>       </trans-unit>
        <trans-unit id="788" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.GetAccessControl">
          <source>Gets a <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.FileSecurity" /&gt;</ph> object that encapsulates the access control list (ACL) entries for the file described by the current <ph id="ph2">&lt;see cref="T:System.IO.FileStream" /&gt;</ph> object.</source>
          <target state="translated">Ruft ein <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.FileSecurity" /&gt;</ph>-Objekt ab, das die Einträge in der Zugriffssteuerungsliste für die Datei kapselt, das vom aktuellen <ph id="ph2">&lt;see cref="T:System.IO.FileStream" /&gt;</ph>-Objekt beschrieben wird.</target>       </trans-unit>
        <trans-unit id="789" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.GetAccessControl">
          <source>An object that encapsulates the access control settings for the file described by the current <ph id="ph1">&lt;see cref="T:System.IO.FileStream" /&gt;</ph> object.</source>
          <target state="translated">Ein Objekt, das die Zugriffssteuerungseinstellungen für die vom aktuellen <ph id="ph1">&lt;see cref="T:System.IO.FileStream" /&gt;</ph>-Objekt beschriebene Datei kapselt.</target>       </trans-unit>
        <trans-unit id="790" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.GetAccessControl">
          <source>While the <ph id="ph1">&lt;xref:System.IO.FileStream&gt;</ph> class and <ph id="ph2">&lt;xref:System.IO.FileStream.GetAccessControl%2A&gt;</ph> can be used to retrieve the access control list (ACL) entries of an existing file, consider using <ph id="ph3">&lt;xref:System.IO.File.GetAccessControl%2A?displayProperty=nameWithType&gt;</ph> method, as it is easier to use.</source>
          <target state="translated">Während der <ph id="ph1">&lt;xref:System.IO.FileStream&gt;</ph> Klasse und <ph id="ph2">&lt;xref:System.IO.FileStream.GetAccessControl%2A&gt;</ph> kann verwendet werden, das die Einträge in der Zugriffssteuerungsliste (ACL) einer vorhandenen Datei abgerufen werden, erwägen Sie <ph id="ph3">&lt;xref:System.IO.File.GetAccessControl%2A?displayProperty=nameWithType&gt;</ph> Methode, wie es ist einfacher zu verwenden.</target>       </trans-unit>
        <trans-unit id="791" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.GetAccessControl">
          <source>Use the <ph id="ph1">&lt;xref:System.IO.FileStream.GetAccessControl%2A&gt;</ph> method to retrieve the ACL entries for a file.</source>
          <target state="translated">Verwenden der <ph id="ph1">&lt;xref:System.IO.FileStream.GetAccessControl%2A&gt;</ph> Methode, um die ACL-Einträge für eine Datei abzurufen.</target>       </trans-unit>
        <trans-unit id="792" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.GetAccessControl">
          <source>An ACL describes individuals and/or groups who have, or do not have, rights to specific actions on the given file.</source>
          <target state="translated">Eine ACL beschreibt einzelne Benutzer und/oder Gruppen besitzen oder verfügen nicht über, Rechte für bestimmte Aktionen für die angegebene Datei.</target>       </trans-unit>
        <trans-unit id="793" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.GetAccessControl">
          <source>For more information, see <bpt id="p1">[</bpt>How to: Add or Remove Access Control List Entries<ept id="p1">](~/docs/standard/io/how-to-add-or-remove-access-control-list-entries.md)</ept>.</source>
          <target state="translated">Weitere Informationen finden Sie unter <bpt id="p1">[</bpt>Gewusst wie: Hinzufügen oder Entfernen von Zugriffssteuerungslisten-Einträgen<ept id="p1">](~/docs/standard/io/how-to-add-or-remove-access-control-list-entries.md)</ept>.</target>       </trans-unit>
        <trans-unit id="794" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.GetAccessControl">
          <source>The file is closed.</source>
          <target state="translated">Die Datei ist geschlossen.</target>       </trans-unit>
        <trans-unit id="795" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.GetAccessControl">
          <source>An I/O error occurred while opening the file.</source>
          <target state="translated">Beim Öffnen der Datei ist ein E/A-Fehler aufgetreten.</target>       </trans-unit>
        <trans-unit id="796" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.GetAccessControl">
          <source>The file could not be found.</source>
          <target state="translated">Die Datei wurde nicht gefunden.</target>       </trans-unit>
        <trans-unit id="797" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.GetAccessControl">
          <source>This operation is not supported on the current platform.</source>
          <target state="translated">Dieser Vorgang wird von der aktuellen Plattform nicht unterstützt.</target>       </trans-unit>
        <trans-unit id="798" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.GetAccessControl">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="799" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.GetAccessControl">
          <source>The caller does not have the required permission.</source>
          <target state="translated">Der Aufrufer verfügt nicht über die erforderliche Berechtigung.</target>       </trans-unit>
        <trans-unit id="800" translate="yes" xml:space="preserve" uid="P:System.IO.FileStream.Handle">
          <source>Gets the operating system file handle for the file that the current <ph id="ph1">&lt;see langword="FileStream" /&gt;</ph> object encapsulates.</source>
          <target state="translated">Ruft das Dateihandle des Betriebssystems für die Datei ab, die durch das aktuelle <ph id="ph1">&lt;see langword="FileStream" /&gt;</ph>-Objekt gekapselt wird.</target>       </trans-unit>
        <trans-unit id="801" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileStream.Handle">
          <source>The operating system file handle for the file encapsulated by this <ph id="ph1">&lt;see langword="FileStream" /&gt;</ph> object, or -1 if the <ph id="ph2">&lt;see langword="FileStream" /&gt;</ph> has been closed.</source>
          <target state="translated">Das Dateihandle des Betriebssystems für die vom <ph id="ph1">&lt;see langword="FileStream" /&gt;</ph>-Objekt gekapselte Datei oder -1, wenn der <ph id="ph2">&lt;see langword="FileStream" /&gt;</ph> geschlossen wurde.</target>       </trans-unit>
        <trans-unit id="802" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileStream.Handle">
          <source>This property is an operating system handle for use with operating-system-provided system calls (such as <ph id="ph1">`ReadFile`</ph> on Windows).</source>
          <target state="translated">Diese Eigenschaft ist ein Betriebssystem-Handle für die Verwendung mit dem Betriebssystem bereitgestellten Systemaufrufe (z. B. <ph id="ph1">`ReadFile`</ph> unter Windows).</target>       </trans-unit>
        <trans-unit id="803" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileStream.Handle">
          <source>It will not work with C library functions that expect a file descriptor, such as <ph id="ph1">`fread`</ph>.</source>
          <target state="translated">Sie funktioniert nicht mit Funktionen der C-Bibliothek, die einen Dateideskriptor, z. B. erwarten <ph id="ph1">`fread`</ph>.</target>       </trans-unit>
        <trans-unit id="804" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileStream.Handle">
          <source>The operating system handle might have been opened synchronously or asynchronously, depending on which <ph id="ph1">`FileStream`</ph> constructor was called.</source>
          <target state="translated">Das Betriebssystemhandle möglicherweise geöffnet wurden synchron oder asynchron ausgeführt wird, je nachdem, welche <ph id="ph1">`FileStream`</ph> Klassenkonstruktor aufgerufen wurde.</target>       </trans-unit>
        <trans-unit id="805" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileStream.Handle">
          <source>Use the <ph id="ph1">&lt;xref:System.IO.FileStream.IsAsync%2A&gt;</ph> property to discover whether this handle was opened asynchronously.</source>
          <target state="translated">Verwenden der <ph id="ph1">&lt;xref:System.IO.FileStream.IsAsync%2A&gt;</ph> Eigenschaft, um zu ermitteln, ob dieses Handle asynchron geöffnet wurde.</target>       </trans-unit>
        <trans-unit id="806" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileStream.Handle">
          <source>In Win32, this means the handle was opened for overlapped IO, and it requires different parameters to <ph id="ph1">`ReadFile`</ph> and <ph id="ph2">`WriteFile`</ph>.</source>
          <target state="translated">In Win32 Dies bedeutet, dass das Handle geöffnet wurde, für überlappende e/a und andere Parameter für erfordert <ph id="ph1">`ReadFile`</ph> und <ph id="ph2">`WriteFile`</ph>.</target>       </trans-unit>
        <trans-unit id="807" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileStream.Handle">
          <source>Data corruption might occur if a <ph id="ph1">`FileStream`</ph> is created, its handle is passed, some operation moves the handle's file pointer, and then the <ph id="ph2">`FileStream`</ph> is used again.</source>
          <target state="translated">Datenverluste auftreten, wenn eine <ph id="ph1">`FileStream`</ph> ist dessen Handle übergeben wird, ein Vorgang verschiebt das Handle der Dateizeiger, erstellt, und klicken Sie dann die <ph id="ph2">`FileStream`</ph> erneut verwendet wird.</target>       </trans-unit>
        <trans-unit id="808" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileStream.Handle">
          <source>Multiple threads cannot safely write to the same file simultaneously, and <ph id="ph1">`FileStream`</ph> buffering code assumes that it exclusively controls the handle.</source>
          <target state="translated">Mehrere Threads können nicht problemlos gleichzeitig auf dieselbe Datei schreiben und <ph id="ph1">`FileStream`</ph> Pufferung Code wird davon ausgegangen, dass es ausschließlich das Handle steuert.</target>       </trans-unit>
        <trans-unit id="809" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileStream.Handle">
          <source><ph id="ph1">`FileStream`</ph> might throw an <ph id="ph2">&lt;xref:System.IO.IOException&gt;</ph> if <ph id="ph3">`FileStream`</ph> detects that some other process has moved the file pointer.</source>
          <target state="translated"><ph id="ph1">`FileStream`</ph> Dies unter Umständen Auslösen einer <ph id="ph2">&lt;xref:System.IO.IOException&gt;</ph> Wenn <ph id="ph3">`FileStream`</ph> erkennt, dass ein anderer Prozess den Dateizeiger verschoben wurde.</target>       </trans-unit>
        <trans-unit id="810" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileStream.Handle">
          <source>To avoid this, do not write any data into a portion of the file that <ph id="ph1">`FileStream`</ph> might have buffered, and restore the file pointer to the location it had when methods were last called on <ph id="ph2">`FileStream`</ph>.</source>
          <target state="translated">Um dies zu vermeiden, Sie keine Daten schreiben in einen Teil der Datei, die <ph id="ph1">`FileStream`</ph> möglicherweise gepuffert und Wiederherstellung den Dateizeiger am Speicherort, die er hatte, als Methoden auf zuletzt aufgerufenen <ph id="ph2">`FileStream`</ph>.</target>       </trans-unit>
        <trans-unit id="811" translate="yes" xml:space="preserve" uid="P:System.IO.FileStream.Handle">
          <source>The caller does not have the required permission.</source>
          <target state="translated">Der Aufrufer verfügt nicht über die erforderliche Berechtigung.</target>       </trans-unit>
        <trans-unit id="812" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileStream.Handle">
          <source>for the ability to access unmanaged code.</source>
          <target state="translated">für den Zugriff auf nicht verwalteten Code.</target>       </trans-unit>
        <trans-unit id="813" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileStream.Handle">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph> Security action: <ph id="ph2">&lt;see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" /&gt;</ph>.</source>
          <target state="translated">Zugeordnete Enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph> Sicherheitsaktion: <ph id="ph2">&lt;see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="814" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileStream.Handle">
          <source>requires full trust for the immediate caller.</source>
          <target state="translated">erfordert volle Vertrauenswürdigkeit für den unmittelbaren Aufrufer.</target>       </trans-unit>
        <trans-unit id="815" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileStream.Handle">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">Dieser Member kann nicht von teilweise vertrauenswürdigem oder transparentem Code verwendet werden.</target>       </trans-unit>
        <trans-unit id="816" translate="yes" xml:space="preserve" uid="P:System.IO.FileStream.IsAsync">
          <source>Gets a value indicating whether the <ph id="ph1">&lt;see langword="FileStream" /&gt;</ph> was opened asynchronously or synchronously.</source>
          <target state="translated">Ruft einen Wert ab, der angibt, ob der <ph id="ph1">&lt;see langword="FileStream" /&gt;</ph> asynchron oder synchron geöffnet wurde.</target>       </trans-unit>
        <trans-unit id="817" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileStream.IsAsync">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see langword="FileStream" /&gt;</ph> was opened asynchronously; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, wenn <ph id="ph2">&lt;see langword="FileStream" /&gt;</ph> asynchron geöffnet wurde, andernfalls <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="818" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileStream.IsAsync">
          <source>The <ph id="ph1">`IsAsync`</ph> property detects whether the <ph id="ph2">`FileStream`</ph> handle was opened asynchronously, enabling your code to use the <ph id="ph3">&lt;xref:System.IO.FileStream.Handle%2A&gt;</ph> property correctly.</source>
          <target state="translated">Die <ph id="ph1">`IsAsync`</ph> Eigenschaft erkennt, ob die <ph id="ph2">`FileStream`</ph> Handle asynchron geöffnet wurde, aktivieren den Code so die <ph id="ph3">&lt;xref:System.IO.FileStream.Handle%2A&gt;</ph> Eigenschaft ordnungsgemäß.</target>       </trans-unit>
        <trans-unit id="819" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileStream.IsAsync">
          <source>In Win32, <ph id="ph1">`IsAsync`</ph> being true means the handle was opened for overlapped I/O, and thus requires different parameters to <ph id="ph2">`ReadFile`</ph> and <ph id="ph3">`WriteFile`</ph>.</source>
          <target state="translated">In Win32 <ph id="ph1">`IsAsync`</ph> wird "true" bedeutet, dass das Handle geöffnet wurde, für überlappende e/a und erfordert daher verschiedene Parameter für <ph id="ph2">`ReadFile`</ph> und <ph id="ph3">`WriteFile`</ph>.</target>       </trans-unit>
        <trans-unit id="820" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileStream.IsAsync">
          <source>You specify this value when you create an instance of the <ph id="ph1">&lt;xref:System.IO.FileStream&gt;</ph> class using a constructor that has an <ph id="ph2">`isAsync`</ph>, <ph id="ph3">`useAsync`</ph>, or <ph id="ph4">`options`</ph> parameter.</source>
          <target state="translated">Bei der Erstellung einer Instanz von, geben Sie diesen Wert der <ph id="ph1">&lt;xref:System.IO.FileStream&gt;</ph> -Klasse mit einem Konstruktor, verfügt ein <ph id="ph2">`isAsync`</ph>, <ph id="ph3">`useAsync`</ph>, oder <ph id="ph4">`options`</ph> Parameter.</target>       </trans-unit>
        <trans-unit id="821" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileStream.IsAsync">
          <source>When the property is <ph id="ph1">`true`</ph>, the stream utilizes overlapped I/O to perform file operations asynchronously.</source>
          <target state="translated">Wenn die Eigenschaft den Wert <ph id="ph1">`true`</ph>, der Datenstrom nutzt überlappender e/a, um die Dateivorgänge asynchron ausführen.</target>       </trans-unit>
        <trans-unit id="822" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileStream.IsAsync">
          <source>However, the <ph id="ph1">&lt;xref:System.IO.FileStream.IsAsync%2A&gt;</ph> property does not have to be <ph id="ph2">`true`</ph> to call the <ph id="ph3">&lt;xref:System.IO.FileStream.ReadAsync%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.IO.FileStream.WriteAsync%2A&gt;</ph>, or <ph id="ph5">&lt;xref:System.IO.Stream.CopyToAsync%2A&gt;</ph> method.</source>
          <target state="translated">Allerdings die <ph id="ph1">&lt;xref:System.IO.FileStream.IsAsync%2A&gt;</ph> Eigenschaft hat keine werden <ph id="ph2">`true`</ph> zum Aufrufen der <ph id="ph3">&lt;xref:System.IO.FileStream.ReadAsync%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.IO.FileStream.WriteAsync%2A&gt;</ph>, oder <ph id="ph5">&lt;xref:System.IO.Stream.CopyToAsync%2A&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="823" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileStream.IsAsync">
          <source>When the <ph id="ph1">&lt;xref:System.IO.FileStream.IsAsync%2A&gt;</ph> property is <ph id="ph2">`false`</ph> and you call the asynchronous read and write operations, the UI thread is still not blocked, but the actual I/O operation is performed synchronously.</source>
          <target state="translated">Wenn die <ph id="ph1">&lt;xref:System.IO.FileStream.IsAsync%2A&gt;</ph> Eigenschaft ist <ph id="ph2">`false`</ph> und rufen Sie den asynchronen Lesevorgang und Schreibvorgänge, die UI-Thread wird weiterhin nicht blockiert, aber der tatsächliche e/a-Vorgang wird synchron ausgeführt.</target>       </trans-unit>
        <trans-unit id="824" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileStream.IsAsync">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.IO.FileStream.%23ctor%28System.String%2CSystem.IO.FileMode%2CSystem.IO.FileAccess%2CSystem.IO.FileShare%2CSystem.Int32%2CSystem.Boolean%29&gt;</ph> constructor.</source>
          <target state="translated">Dieses Codebeispiel ist Teil eines umfangreicheren Beispiels für die <ph id="ph1">&lt;xref:System.IO.FileStream.%23ctor%28System.String%2CSystem.IO.FileMode%2CSystem.IO.FileAccess%2CSystem.IO.FileShare%2CSystem.Int32%2CSystem.Boolean%29&gt;</ph> Konstruktor.</target>       </trans-unit>
        <trans-unit id="825" translate="yes" xml:space="preserve" uid="P:System.IO.FileStream.Length">
          <source>Gets the length in bytes of the stream.</source>
          <target state="translated">Ruft die Länge des Streams in Bytes ab.</target>       </trans-unit>
        <trans-unit id="826" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileStream.Length">
          <source>A long value representing the length of the stream in bytes.</source>
          <target state="translated">Ein Long-Wert, der die Länge des Streams in Bytes darstellt.</target>       </trans-unit>
        <trans-unit id="827" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileStream.Length">
          <source>For a list of common file and directory operations, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</source>
          <target state="translated">Eine Liste der allgemeinen Datei- und Verzeichnisvorgänge, finden Sie unter <bpt id="p1">[</bpt>allgemeine e/a-Aufgaben<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</target>       </trans-unit>
        <trans-unit id="828" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileStream.Length">
          <source>The following example uses the <ph id="ph1">`Length`</ph> and <ph id="ph2">`Position`</ph> properties to check for an end-of-file condition.</source>
          <target state="translated">Im folgenden Beispiel wird die <ph id="ph1">`Length`</ph> und <ph id="ph2">`Position`</ph> Eigenschaften für eine End-of-File-Bedingung überprüfen.</target>       </trans-unit>
        <trans-unit id="829" translate="yes" xml:space="preserve" uid="P:System.IO.FileStream.Length">
          <source><ph id="ph1">&lt;see cref="P:System.IO.FileStream.CanSeek" /&gt;</ph> for this stream is <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.IO.FileStream.CanSeek" /&gt;</ph> ist für diesen Stream <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="830" translate="yes" xml:space="preserve" uid="P:System.IO.FileStream.Length">
          <source>An I/O error, such as the file being closed, occurred.</source>
          <target state="translated">Es ist ein E/A-Fehler aufgetreten, z. B. wurde die Datei geschlossen.</target>       </trans-unit>
        <trans-unit id="831" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.Lock(System.Int64,System.Int64)">
          <source>The beginning of the range to lock.</source>
          <target state="translated">Der Anfang des zu sperrenden Bereichs.</target>       </trans-unit>
        <trans-unit id="832" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.Lock(System.Int64,System.Int64)">
          <source>The value of this parameter must be equal to or greater than zero (0).</source>
          <target state="translated">Der Wert dieses Parameters muss größer oder gleich 0 sein.</target>       </trans-unit>
        <trans-unit id="833" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.Lock(System.Int64,System.Int64)">
          <source>The range to be locked.</source>
          <target state="translated">Der zu sperrende Bereich.</target>       </trans-unit>
        <trans-unit id="834" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.Lock(System.Int64,System.Int64)">
          <source>Prevents other processes from reading from or writing to the <ph id="ph1">&lt;see cref="T:System.IO.FileStream" /&gt;</ph>.</source>
          <target state="translated">Verhindert, dass andere Prozesse im <ph id="ph1">&lt;see cref="T:System.IO.FileStream" /&gt;</ph> lesen oder schreiben.</target>       </trans-unit>
        <trans-unit id="835" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.Lock(System.Int64,System.Int64)">
          <source>Locking a range of a file stream gives the threads of the locking process exclusive access to that range of the file stream.</source>
          <target state="translated">Durch Sperren eines Bereichs eines Dateidatenstroms erhält die Threads mit der Sperren exklusiven Zugriff auf dieses Bereichs des Dateidatenstroms.</target>       </trans-unit>
        <trans-unit id="836" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.Lock(System.Int64,System.Int64)">
          <source>For a list of common file and directory operations, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</source>
          <target state="translated">Eine Liste der allgemeinen Datei- und Verzeichnisvorgänge, finden Sie unter <bpt id="p1">[</bpt>allgemeine e/a-Aufgaben<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</target>       </trans-unit>
        <trans-unit id="837" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.Lock(System.Int64,System.Int64)">
          <source>The following code example demonstrates how to lock part of a file so another process cannot access that part of the file even though it has read/write access to the file.</source>
          <target state="translated">Im folgenden Codebeispiel wird veranschaulicht, Teil einer Datei zu sperren, sodass ein anderer Prozess auf, dass ein Teil der Datei zugreifen kann, obwohl sie Lese-/Schreibzugriff auf die Datei hat.</target>       </trans-unit>
        <trans-unit id="838" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.Lock(System.Int64,System.Int64)">
          <source>Run the program simultaneously in different command windows and investigate using the different console input options.</source>
          <target state="translated">Führen Sie das Programm gleichzeitig in verschiedenen Befehlsfenstern und untersuchen Sie der verschiedenen Konsole Eingabeoptionen verwenden.</target>       </trans-unit>
        <trans-unit id="839" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.Lock(System.Int64,System.Int64)">
          <source><ph id="ph1">&lt;paramref name="position" /&gt;</ph> or <ph id="ph2">&lt;paramref name="length" /&gt;</ph> is negative.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="position" /&gt;</ph> oder <ph id="ph2">&lt;paramref name="length" /&gt;</ph> ist ein negativer Wert.</target>       </trans-unit>
        <trans-unit id="840" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.Lock(System.Int64,System.Int64)">
          <source>The file is closed.</source>
          <target state="translated">Die Datei ist geschlossen.</target>       </trans-unit>
        <trans-unit id="841" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.Lock(System.Int64,System.Int64)">
          <source>The process cannot access the file because another process has locked a portion of the file.</source>
          <target state="translated">Der Prozess kann nicht auf die Datei zugreifen, da sie teilweise von einem anderen Prozess gesperrt ist.</target>       </trans-unit>
        <trans-unit id="842" translate="yes" xml:space="preserve" uid="P:System.IO.FileStream.Name">
          <source>Gets the name of the <ph id="ph1">&lt;see langword="FileStream" /&gt;</ph> that was passed to the constructor.</source>
          <target state="translated">Ruft den Namen des <ph id="ph1">&lt;see langword="FileStream" /&gt;</ph> ab, der an den Konstruktor übergeben wurde.</target>       </trans-unit>
        <trans-unit id="843" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileStream.Name">
          <source>A string that is the name of the <ph id="ph1">&lt;see langword="FileStream" /&gt;</ph>.</source>
          <target state="translated">Eine Zeichenfolge, die den Namen des <ph id="ph1">&lt;see langword="FileStream" /&gt;</ph> darstellt.</target>       </trans-unit>
        <trans-unit id="844" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileStream.Name">
          <source>For a list of common file and directory operations, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</source>
          <target state="translated">Eine Liste der allgemeinen Datei- und Verzeichnisvorgänge, finden Sie unter <bpt id="p1">[</bpt>allgemeine e/a-Aufgaben<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</target>       </trans-unit>
        <trans-unit id="845" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileStream.Name">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.IO.FileStream.%23ctor%28System.String%2CSystem.IO.FileMode%2CSystem.IO.FileAccess%2CSystem.IO.FileShare%2CSystem.Int32%2CSystem.Boolean%29&gt;</ph> constructor.</source>
          <target state="translated">Dieses Codebeispiel ist Teil eines umfangreicheren Beispiels für die <ph id="ph1">&lt;xref:System.IO.FileStream.%23ctor%28System.String%2CSystem.IO.FileMode%2CSystem.IO.FileAccess%2CSystem.IO.FileShare%2CSystem.Int32%2CSystem.Boolean%29&gt;</ph> Konstruktor.</target>       </trans-unit>
        <trans-unit id="846" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileStream.Name">
          <source>for access to the path.</source>
          <target state="translated">für den Zugriff auf den Pfad.</target>       </trans-unit>
        <trans-unit id="847" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileStream.Name">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /&gt;</ph></source>
          <target state="translated">Zugeordnete Enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="848" translate="yes" xml:space="preserve" uid="P:System.IO.FileStream.Position">
          <source>Gets or sets the current position of this stream.</source>
          <target state="translated">Ruft die aktuelle Position dieses Streams ab oder legt diese fest.</target>       </trans-unit>
        <trans-unit id="849" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileStream.Position">
          <source>The current position of this stream.</source>
          <target state="translated">Die aktuelle Position dieses Streams.</target>       </trans-unit>
        <trans-unit id="850" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileStream.Position">
          <source>Seeking to any location beyond the length of the stream is supported.</source>
          <target state="translated">Suchvorgänge, die an einem beliebigen Speicherort überschreitet die Länge des Streams wird unterstützt.</target>       </trans-unit>
        <trans-unit id="851" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileStream.Position">
          <source>When you seek beyond the length of the file, the file size grows.</source>
          <target state="translated">Wenn Sie die Länge der Datei suchen, wächst die Dateigröße.</target>       </trans-unit>
        <trans-unit id="852" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileStream.Position">
          <source>In Microsoft Windows NT and newer, any data added to the end of the file is set to zero.</source>
          <target state="translated">In Microsoft Windows NT und neueren Betriebssystemen ist bis zum Ende der Datei hinzugefügten Daten auf 0 (null) festgelegt.</target>       </trans-unit>
        <trans-unit id="853" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileStream.Position">
          <source>In Microsoft Windows 98 or earlier, any data added to the end of the file is not set to zero, which means that previously deleted data is visible to the stream.</source>
          <target state="translated">In Microsoft Windows 98 oder früher, werden bis zum Ende der Datei hinzugefügten Daten nicht auf 0 (null), festgelegt, d. h., die zuvor Daten gelöscht sichtbar, in den Stream ist.</target>       </trans-unit>
        <trans-unit id="854" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileStream.Position">
          <source>Setting the position of the stream to a large value beyond the end of the stream in Windows 98 or earlier may result in an exception being raised.</source>
          <target state="translated">Festlegen der Position im Stream auf einen hohen Wert hinter dem Ende des Streams in Windows 98 oder früher kann dazu führen, dass eine Ausnahme ausgelöst wird.</target>       </trans-unit>
        <trans-unit id="855" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileStream.Position">
          <source>For a list of common file and directory operations, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</source>
          <target state="translated">Eine Liste der allgemeinen Datei- und Verzeichnisvorgänge, finden Sie unter <bpt id="p1">[</bpt>allgemeine e/a-Aufgaben<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</target>       </trans-unit>
        <trans-unit id="856" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileStream.Position">
          <source>The following example uses the <ph id="ph1">`Length`</ph> and <ph id="ph2">`Position`</ph> properties to check for an end-of-file condition.</source>
          <target state="translated">Im folgenden Beispiel wird die <ph id="ph1">`Length`</ph> und <ph id="ph2">`Position`</ph> Eigenschaften für eine End-of-File-Bedingung überprüfen.</target>       </trans-unit>
        <trans-unit id="857" translate="yes" xml:space="preserve" uid="P:System.IO.FileStream.Position">
          <source>The stream does not support seeking.</source>
          <target state="translated">Vom Stream wird Suchen nicht unterstützt.</target>       </trans-unit>
        <trans-unit id="858" translate="yes" xml:space="preserve" uid="P:System.IO.FileStream.Position">
          <source>An I/O error occurred.</source>
          <target state="translated">E/A-Fehler</target>       </trans-unit>
        <trans-unit id="859" translate="yes" xml:space="preserve" uid="P:System.IO.FileStream.Position">
          <source><ph id="ph1">\-</ph> or -</source>
          <target state="translated"><ph id="ph1">\-</ph> oder –</target>       </trans-unit>
        <trans-unit id="860" translate="yes" xml:space="preserve" uid="P:System.IO.FileStream.Position">
          <source>The position was set to a very large value beyond the end of the stream in Windows 98 or earlier.</source>
          <target state="translated">Die Position wurde auf einen sehr großen Wert festgelegt, der das Ende des Streams in Windows 98 oder früher überschreitet.</target>       </trans-unit>
        <trans-unit id="861" translate="yes" xml:space="preserve" uid="P:System.IO.FileStream.Position">
          <source>Attempted to set the position to a negative value.</source>
          <target state="translated">Es wurde versucht, die Position auf einen negativen Wert festzulegen.</target>       </trans-unit>
        <trans-unit id="862" translate="yes" xml:space="preserve" uid="P:System.IO.FileStream.Position">
          <source>Attempted seeking past the end of a stream that does not support this.</source>
          <target state="translated">Es wurde versucht, über das Ende eines Streams hinaus zu suchen, der dies nicht unterstützt.</target>       </trans-unit>
        <trans-unit id="863" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.Read(System.Byte[],System.Int32,System.Int32)">
          <source>When this method returns, contains the specified byte array with the values between <bpt id="p1">&lt;c&gt;</bpt>offset<ept id="p1">&lt;/c&gt;</ept> and (<bpt id="p2">&lt;c&gt;</bpt>offset<ept id="p2">&lt;/c&gt;</ept><ph id="ph1"> + </ph><bpt id="p3">&lt;c&gt;</bpt>count<ept id="p3">&lt;/c&gt;</ept> - 1<bpt id="p4">&lt;c&gt;</bpt>)<ept id="p4">&lt;/c&gt;</ept> replaced by the bytes read from the current source.</source>
          <target state="translated">Enthält, wenn diese Methode zurückgegeben wird, das angegebene Bytearray mit den Werten zwischen <bpt id="p1">&lt;c&gt;</bpt>offset<ept id="p1">&lt;/c&gt;</ept> und (<bpt id="p2">&lt;c&gt;</bpt>offset<ept id="p2">&lt;/c&gt;</ept><ph id="ph1"> + </ph><bpt id="p3">&lt;c&gt;</bpt>count<ept id="p3">&lt;/c&gt;</ept> –1<bpt id="p4">&lt;c&gt;</bpt>)<ept id="p4">&lt;/c&gt;</ept>, das von den Bytes ersetzt wird, die aus der aktuellen Quelle gelesen werden.</target>       </trans-unit>
        <trans-unit id="864" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.Read(System.Byte[],System.Int32,System.Int32)">
          <source>The byte offset in <bpt id="p1">&lt;c&gt;</bpt>array<ept id="p1">&lt;/c&gt;</ept> at which the read bytes will be placed.</source>
          <target state="translated">Der Byteoffset in <bpt id="p1">&lt;c&gt;</bpt>array<ept id="p1">&lt;/c&gt;</ept>, an dem die gelesenen Bytes platziert werden.</target>       </trans-unit>
        <trans-unit id="865" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.Read(System.Byte[],System.Int32,System.Int32)">
          <source>The maximum number of bytes to read.</source>
          <target state="translated">Die maximale Anzahl der zu lesenden Bytes.</target>       </trans-unit>
        <trans-unit id="866" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.Read(System.Byte[],System.Int32,System.Int32)">
          <source>Reads a block of bytes from the stream and writes the data in a given buffer.</source>
          <target state="translated">Liest einen Byteblock aus dem Stream und schreibt die Daten in einen angegebenen Puffer.</target>       </trans-unit>
        <trans-unit id="867" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.Read(System.Byte[],System.Int32,System.Int32)">
          <source>The total number of bytes read into the buffer.</source>
          <target state="translated">Die Gesamtanzahl der in den Puffer gelesenen Bytes.</target>       </trans-unit>
        <trans-unit id="868" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.Read(System.Byte[],System.Int32,System.Int32)">
          <source>This might be less than the number of bytes requested if that number of bytes are not currently available, or zero if the end of the stream is reached.</source>
          <target state="translated">Dies kann weniger als die Anzahl der angeforderten Bytes sein, wenn diese Anzahl an Bytes derzeit nicht verfügbar ist, oder 0, wenn das Streamende erreicht ist.</target>       </trans-unit>
        <trans-unit id="869" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.Read(System.Byte[],System.Int32,System.Int32)">
          <source>This method overrides <ph id="ph1">&lt;xref:System.IO.Stream.Read%2A&gt;</ph>.</source>
          <target state="translated">Diese Methode überschreibt <ph id="ph1">&lt;xref:System.IO.Stream.Read%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="870" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.Read(System.Byte[],System.Int32,System.Int32)">
          <source>The <ph id="ph1">`offset`</ph> parameter gives the offset of the byte in <ph id="ph2">`array`</ph> (the buffer index) at which to begin reading, and the <ph id="ph3">`count`</ph> parameter gives the maximum number of bytes to be read from this stream.</source>
          <target state="translated">Die <ph id="ph1">`offset`</ph> -Parameter gibt den Offset des Bytes in <ph id="ph2">`array`</ph> (Pufferindex) ab dem gelesen werden soll und die <ph id="ph3">`count`</ph> Parameter gibt die maximale Anzahl von Bytes, die aus diesem Stream gelesen werden.</target>       </trans-unit>
        <trans-unit id="871" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.Read(System.Byte[],System.Int32,System.Int32)">
          <source>The returned value is the actual number of bytes read, or zero if the end of the stream is reached.</source>
          <target state="translated">Der zurückgegebene Wert ist die tatsächliche Anzahl der gelesenen Bytes oder 0 (null), wenn das Ende des Streams erreicht ist.</target>       </trans-unit>
        <trans-unit id="872" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.Read(System.Byte[],System.Int32,System.Int32)">
          <source>If the read operation is successful, the current position of the stream is advanced by the number of bytes read.</source>
          <target state="translated">Wenn der Lesevorgang erfolgreich ist, wird die aktuelle Position im Stream um die Anzahl der gelesenen Bytes erweiterte.</target>       </trans-unit>
        <trans-unit id="873" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.Read(System.Byte[],System.Int32,System.Int32)">
          <source>If an exception occurs, the current position of the stream is unchanged.</source>
          <target state="translated">Wenn eine Ausnahme auftritt, ist die aktuelle Position im Stream nicht geändert.</target>       </trans-unit>
        <trans-unit id="874" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.Read(System.Byte[],System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.IO.FileStream.Read%2A&gt;</ph> method returns zero only after reaching the end of the stream.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.IO.FileStream.Read%2A&gt;</ph> Methode gibt 0 (null) erst nach dem Ende des Streams erreicht.</target>       </trans-unit>
        <trans-unit id="875" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.Read(System.Byte[],System.Int32,System.Int32)">
          <source>Otherwise, <ph id="ph1">&lt;xref:System.IO.FileStream.Read%2A&gt;</ph> always reads at least one byte from the stream before returning.</source>
          <target state="translated">Andernfalls <ph id="ph1">&lt;xref:System.IO.FileStream.Read%2A&gt;</ph> liest immer mindestens ein Byte aus dem Stream vor der Rückgabe.</target>       </trans-unit>
        <trans-unit id="876" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.Read(System.Byte[],System.Int32,System.Int32)">
          <source>If no data is available from the stream upon a call to <ph id="ph1">&lt;xref:System.IO.FileStream.Read%2A&gt;</ph>, the method will block until at least one byte of data can be returned.</source>
          <target state="translated">Wenn keine Daten verfügbar, aus dem Stream bei einem Aufruf von sind <ph id="ph1">&lt;xref:System.IO.FileStream.Read%2A&gt;</ph>, die Methode blockiert, bis mindestens 1 Byte Daten zurückgegeben werden kann.</target>       </trans-unit>
        <trans-unit id="877" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.Read(System.Byte[],System.Int32,System.Int32)">
          <source>An implementation is free to return fewer bytes than requested even if the end of the stream has not been reached.</source>
          <target state="translated">Eine Implementierung kann weniger Bytes als angefordert zurückgeben, selbst wenn das Ende des Streams nicht erreicht wurde.</target>       </trans-unit>
        <trans-unit id="878" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.Read(System.Byte[],System.Int32,System.Int32)">
          <source>Use <ph id="ph1">&lt;xref:System.IO.BinaryReader&gt;</ph> for reading primitive data types.</source>
          <target state="translated">Verwendung <ph id="ph1">&lt;xref:System.IO.BinaryReader&gt;</ph> zum Lesen von primitiven Datentypen.</target>       </trans-unit>
        <trans-unit id="879" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.Read(System.Byte[],System.Int32,System.Int32)">
          <source>Do not interrupt a thread that is performing a read operation.</source>
          <target state="translated">Unterbrochen Sie einen Thread, der einen Lesevorgang ausführt wird nicht.</target>       </trans-unit>
        <trans-unit id="880" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.Read(System.Byte[],System.Int32,System.Int32)">
          <source>Although the application may appear to run successfully after the thread is unblocked, the interruption can decrease your application's performance and reliability.</source>
          <target state="translated">Obwohl die Anwendung scheinbar ordnungsgemäß erfolgreich ausgeführt wird, nachdem der Thread nicht blockiert ist, kann die Unterbrechung Leistung und Zuverlässigkeit der Anwendung verringern.</target>       </trans-unit>
        <trans-unit id="881" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.Read(System.Byte[],System.Int32,System.Int32)">
          <source>For a list of common file and directory operations, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</source>
          <target state="translated">Eine Liste der allgemeinen Datei- und Verzeichnisvorgänge, finden Sie unter <bpt id="p1">[</bpt>allgemeine e/a-Aufgaben<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</target>       </trans-unit>
        <trans-unit id="882" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.Read(System.Byte[],System.Int32,System.Int32)">
          <source>The following example reads the contents from a <ph id="ph1">&lt;xref:System.IO.FileStream&gt;</ph> and writes it into another <ph id="ph2">&lt;xref:System.IO.FileStream&gt;</ph>.</source>
          <target state="translated">Das folgende Beispiel liest den Inhalt aus einem <ph id="ph1">&lt;xref:System.IO.FileStream&gt;</ph> und schreibt ihn in eine andere <ph id="ph2">&lt;xref:System.IO.FileStream&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="883" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.Read(System.Byte[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="array" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="array" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="884" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.Read(System.Byte[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="offset" /&gt;</ph> or <ph id="ph2">&lt;paramref name="count" /&gt;</ph> is negative.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="offset" /&gt;</ph> oder <ph id="ph2">&lt;paramref name="count" /&gt;</ph> ist ein negativer Wert.</target>       </trans-unit>
        <trans-unit id="885" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.Read(System.Byte[],System.Int32,System.Int32)">
          <source>The stream does not support reading.</source>
          <target state="translated">Lesevorgänge werden vom Stream nicht unterstützt.</target>       </trans-unit>
        <trans-unit id="886" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.Read(System.Byte[],System.Int32,System.Int32)">
          <source>An I/O error occurred.</source>
          <target state="translated">E/A-Fehler</target>       </trans-unit>
        <trans-unit id="887" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.Read(System.Byte[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="offset" /&gt;</ph> and <ph id="ph2">&lt;paramref name="count" /&gt;</ph> describe an invalid range in <ph id="ph3">&lt;paramref name="array" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="offset" /&gt;</ph> und <ph id="ph2">&lt;paramref name="count" /&gt;</ph> bezeichnen einen ungültigen Bereich in <ph id="ph3">&lt;paramref name="array" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="888" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.Read(System.Byte[],System.Int32,System.Int32)">
          <source>Methods were called after the stream was closed.</source>
          <target state="translated">Es wurden Methoden aufgerufen, nachdem der Stream geschlossen wurde.</target>       </trans-unit>
        <trans-unit id="889" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
          <source>The buffer to write the data into.</source>
          <target state="translated">Der Puffer, in den die Daten geschrieben werden sollen.</target>       </trans-unit>
        <trans-unit id="890" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
          <source>The byte offset in <bpt id="p1">&lt;c&gt;</bpt>buffer<ept id="p1">&lt;/c&gt;</ept> at which to begin writing data from the stream.</source>
          <target state="translated">Der Byteoffset in <bpt id="p1">&lt;c&gt;</bpt>buffer<ept id="p1">&lt;/c&gt;</ept>, ab dem Daten aus dem Stream geschrieben werden sollen.</target>       </trans-unit>
        <trans-unit id="891" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
          <source>The maximum number of bytes to read.</source>
          <target state="translated">Die maximale Anzahl der zu lesenden Bytes.</target>       </trans-unit>
        <trans-unit id="892" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
          <source>The token to monitor for cancellation requests.</source>
          <target state="translated">Das Token zum überwachen von Abbruchanforderungen.</target>       </trans-unit>
        <trans-unit id="893" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
          <source>Asynchronously reads a sequence of bytes from the current stream, advances the position within the stream by the number of bytes read, and monitors cancellation requests.</source>
          <target state="translated">Liest eine Folge von Bytes asynchron aus dem aktuellen Stream, erhöht die Position im Stream um die Anzahl der gelesenen Bytes und überwacht Abbruchanfragen.</target>       </trans-unit>
        <trans-unit id="894" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
          <source>A task that represents the asynchronous read operation.</source>
          <target state="translated">Eine Aufgabe, die den asynchronen Lesevorgang darstellt.</target>       </trans-unit>
        <trans-unit id="895" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
          <source>The value of the <ph id="ph1">&lt;paramref name="TResult" /&gt;</ph> parameter contains the total number of bytes read into the buffer.</source>
          <target state="translated">Der Wert des <ph id="ph1">&lt;paramref name="TResult" /&gt;</ph>-Parameters enthält die Gesamtzahl der Bytes, die in den Puffer gelesen werden.</target>       </trans-unit>
        <trans-unit id="896" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
          <source>The result value can be less than the number of bytes requested if the number of bytes currently available is less than the requested number, or it can be 0 (zero) if the end of the stream has been reached.</source>
          <target state="translated">Der Ergebniswert kann niedriger als die Anzahl der angeforderten Bytes sein, wenn die Anzahl an derzeit verfügbaren Bytes kleiner ist als die angeforderte Anzahl, oder sie kann 0 (null) sein, wenn das Datenstromende erreicht ist.</target>       </trans-unit>
        <trans-unit id="897" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
          <source>The <ph id="ph1">&lt;xref:System.IO.FileStream.ReadAsync%2A&gt;</ph> method enables you to perform resource-intensive file operations without blocking the main thread.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.IO.FileStream.ReadAsync%2A&gt;</ph> Methode können Sie ressourcenintensive Dateivorgänge ausführen, ohne den Hauptthread zu blockieren.</target>       </trans-unit>
        <trans-unit id="898" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
          <source>This performance consideration is particularly important in a <ph id="ph1">[!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)]</ph> app or <ph id="ph2">[!INCLUDE[desktop_appname](~/includes/desktop-appname-md.md)]</ph> app where a time-consuming stream operation can block the UI thread and make your app appear as if it is not working.</source>
          <target state="translated">Diese Überlegungen zur Leistung sind insbesondere in einer <ph id="ph1">[!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)]</ph>-App oder <ph id="ph2">[!INCLUDE[desktop_appname](~/includes/desktop-appname-md.md)]</ph>-App wichtig, bei der ein zeitaufwendiger Streamvorgang den UI-Thread blockieren kann und es dann den Anschein hat, dass Ihre App nicht funktioniert.</target>       </trans-unit>
        <trans-unit id="899" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
          <source>The async methods are used in conjunction with the <ph id="ph1">`async`</ph> and <ph id="ph2">`await`</ph> keywords in Visual Basic and C#.</source>
          <target state="translated">Die Async-Methoden werden verwendet, in Verbindung mit der <ph id="ph1">`async`</ph> und <ph id="ph2">`await`</ph> in Visual Basic und C#-Schlüsselwörter.</target>       </trans-unit>
        <trans-unit id="900" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
          <source>Use the <ph id="ph1">&lt;xref:System.IO.FileStream.CanRead%2A&gt;</ph> property to determine whether the current instance supports reading.</source>
          <target state="translated">Verwenden der <ph id="ph1">&lt;xref:System.IO.FileStream.CanRead%2A&gt;</ph> Eigenschaft, um zu bestimmen, ob die aktuelle Instanz Lesevorgänge unterstützt.</target>       </trans-unit>
        <trans-unit id="901" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
          <source>If the operation is canceled before it completes, the returned task contains the <ph id="ph1">&lt;xref:System.Threading.Tasks.TaskStatus.Canceled&gt;</ph> value for the <ph id="ph2">&lt;xref:System.Threading.Tasks.Task.Status%2A&gt;</ph> property.</source>
          <target state="translated">Wenn der Vorgang abgebrochen wird, bevor er abgeschlossen wurde, enthält die zurückgegebene Aufgabe der <ph id="ph1">&lt;xref:System.Threading.Tasks.TaskStatus.Canceled&gt;</ph> Wert für die <ph id="ph2">&lt;xref:System.Threading.Tasks.Task.Status%2A&gt;</ph> Eigenschaft.</target>       </trans-unit>
        <trans-unit id="902" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
          <source>If the handle to the file is disposed, the returned task contains the <ph id="ph1">&lt;xref:System.ObjectDisposedException&gt;</ph> exception in the <ph id="ph2">&lt;xref:System.Threading.Tasks.Task.Exception%2A&gt;</ph> property.</source>
          <target state="translated">Wenn das Handle für die Datei verworfen wird, enthält die zurückgegebene Aufgabe der <ph id="ph1">&lt;xref:System.ObjectDisposedException&gt;</ph> Ausnahme in der <ph id="ph2">&lt;xref:System.Threading.Tasks.Task.Exception%2A&gt;</ph> Eigenschaft.</target>       </trans-unit>
        <trans-unit id="903" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
          <source>The following example shows how to read from a file asynchronously.</source>
          <target state="translated">Im folgende Beispiel wird gezeigt, wie asynchron aus einer Datei gelesen werden.</target>       </trans-unit>
        <trans-unit id="904" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
          <source><ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="905" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
          <source><ph id="ph1">&lt;paramref name="offset" /&gt;</ph> or <ph id="ph2">&lt;paramref name="count" /&gt;</ph> is negative.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="offset" /&gt;</ph> oder <ph id="ph2">&lt;paramref name="count" /&gt;</ph> ist ein negativer Wert.</target>       </trans-unit>
        <trans-unit id="906" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
          <source>The sum of <ph id="ph1">&lt;paramref name="offset" /&gt;</ph> and <ph id="ph2">&lt;paramref name="count" /&gt;</ph> is larger than the buffer length.</source>
          <target state="translated">Die Summe von <ph id="ph1">&lt;paramref name="offset" /&gt;</ph> und <ph id="ph2">&lt;paramref name="count" /&gt;</ph> ist größer als die Pufferlänge.</target>       </trans-unit>
        <trans-unit id="907" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
          <source>The stream does not support reading.</source>
          <target state="translated">Lesevorgänge werden vom Stream nicht unterstützt.</target>       </trans-unit>
        <trans-unit id="908" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
          <source>The stream has been disposed.</source>
          <target state="translated">Der Stream wurde verworfen.</target>       </trans-unit>
        <trans-unit id="909" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
          <source>The stream is currently in use by a previous read operation.</source>
          <target state="translated">Der Stream wird zurzeit von einem vorherigen Lesevorgang verwendet.</target>       </trans-unit>
        <trans-unit id="910" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.ReadByte">
          <source>Reads a byte from the file and advances the read position one byte.</source>
          <target state="translated">Liest ein Byte aus der Datei und erhöht die Leseposition um ein Byte.</target>       </trans-unit>
        <trans-unit id="911" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.ReadByte">
          <source>The byte, cast to an <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph>, or -1 if the end of the stream has been reached.</source>
          <target state="translated">Das Byte, das in <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> umgewandelt wurde, oder -1, wenn das Ende des Streams erreicht wurde.</target>       </trans-unit>
        <trans-unit id="912" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.ReadByte">
          <source>This method overrides <ph id="ph1">&lt;xref:System.IO.Stream.ReadByte%2A&gt;</ph>.</source>
          <target state="translated">Diese Methode überschreibt <ph id="ph1">&lt;xref:System.IO.Stream.ReadByte%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="913" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.ReadByte">
          <source>Use the <ph id="ph1">&lt;xref:System.IO.FileStream.CanRead%2A&gt;</ph> property to determine whether the current instance supports reading.</source>
          <target state="translated">Verwenden der <ph id="ph1">&lt;xref:System.IO.FileStream.CanRead%2A&gt;</ph> Eigenschaft, um zu bestimmen, ob die aktuelle Instanz Lesevorgänge unterstützt.</target>       </trans-unit>
        <trans-unit id="914" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.ReadByte">
          <source>For additional information, see <ph id="ph1">&lt;xref:System.IO.Stream.CanRead%2A&gt;</ph>.</source>
          <target state="translated">Weitere Informationen finden Sie unter <ph id="ph1">&lt;xref:System.IO.Stream.CanRead%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="915" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.ReadByte">
          <source>The following code example shows how to write data to a file, byte by byte, and then verify that the data was written correctly.</source>
          <target state="translated">Im folgenden Codebeispiel wird veranschaulicht, wie zum Schreiben von Daten in eine Datei byteweise, und überprüfen, dass die Daten richtig geschrieben wurde.</target>       </trans-unit>
        <trans-unit id="916" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.ReadByte">
          <source>The current stream does not support reading.</source>
          <target state="translated">Lesevorgänge werden vom aktuellen Stream nicht unterstützt.</target>       </trans-unit>
        <trans-unit id="917" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.ReadByte">
          <source>The current stream is closed.</source>
          <target state="translated">Der aktuelle Stream wird geschlossen.</target>       </trans-unit>
        <trans-unit id="918" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.ReadByte">
          <source>The default implementation on <ph id="ph1">&lt;see langword="Stream" /&gt;</ph> creates a new single-byte array and then calls <ph id="ph2">&lt;see cref="M:System.IO.Stream.Read(System.Byte[],System.Int32,System.Int32)" /&gt;</ph>.</source>
          <target state="translated">Die standardmäßige Implementierung auf <ph id="ph1">&lt;see langword="Stream" /&gt;</ph> erstellt ein neues Single-Byte-Array und ruft dann <ph id="ph2">&lt;see cref="M:System.IO.Stream.Read(System.Byte[],System.Int32,System.Int32)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="919" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.ReadByte">
          <source>While this is formally correct, it is inefficient.</source>
          <target state="translated">Während dies formal richtig ist, ist es ineffizient.</target>       </trans-unit>
        <trans-unit id="920" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.ReadByte">
          <source>Any stream with an internal buffer should override this method and provide a much more efficient version that reads the buffer directly, avoiding the extra array allocation on every call.</source>
          <target state="translated">Jeder Stream mit einem internen Puffer sollte diese Methode überschreiben und eine wesentlich effizienter Version, die den Puffer direkt, liest die Zuordnung zusätzlichen Array bei jedem Aufruf zu vermeiden.</target>       </trans-unit>
        <trans-unit id="921" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.ReadByte">
          <source>For a list of common file and directory operations, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</source>
          <target state="translated">Eine Liste der allgemeinen Datei- und Verzeichnisvorgänge, finden Sie unter <bpt id="p1">[</bpt>allgemeine e/a-Aufgaben<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</target>       </trans-unit>
        <trans-unit id="922" translate="yes" xml:space="preserve" uid="P:System.IO.FileStream.SafeFileHandle">
          <source>Gets a <ph id="ph1">&lt;see cref="T:Microsoft.Win32.SafeHandles.SafeFileHandle" /&gt;</ph> object that represents the operating system file handle for the file that the current <ph id="ph2">&lt;see cref="T:System.IO.FileStream" /&gt;</ph> object encapsulates.</source>
          <target state="translated">Ruft ein <ph id="ph1">&lt;see cref="T:Microsoft.Win32.SafeHandles.SafeFileHandle" /&gt;</ph>-Objekt ab, das das Dateihandle des Betriebssystems für die Datei darstellt, die vom aktuellen <ph id="ph2">&lt;see cref="T:System.IO.FileStream" /&gt;</ph>-Objekt gekapselt wird.</target>       </trans-unit>
        <trans-unit id="923" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileStream.SafeFileHandle">
          <source>An object that represents the operating system file handle for the file that the current <ph id="ph1">&lt;see cref="T:System.IO.FileStream" /&gt;</ph> object encapsulates.</source>
          <target state="translated">Ein Objekt, das das Dateihandle des Betriebssystems für die Datei darstellt, von der das aktuelle <ph id="ph1">&lt;see cref="T:System.IO.FileStream" /&gt;</ph>-Objekt gekapselt wird.</target>       </trans-unit>
        <trans-unit id="924" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileStream.SafeFileHandle">
          <source>The <ph id="ph1">&lt;xref:System.IO.FileStream.SafeFileHandle%2A&gt;</ph> property automatically flushes the stream and sets the current stream position to 0.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.IO.FileStream.SafeFileHandle%2A&gt;</ph> Eigenschaft automatisch entleert den Stream und legt die aktuelle Streamposition auf 0 fest.</target>       </trans-unit>
        <trans-unit id="925" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileStream.SafeFileHandle">
          <source>This allows the file to be moved or the stream position to be reset by another stream using the <ph id="ph1">&lt;xref:System.IO.FileStream.SafeFileHandle%2A&gt;</ph> returned by this property.</source>
          <target state="translated">Dadurch kann die Datei verschoben werden soll oder die Position im Stream durch einen anderen Stream mit zurückgesetzt werden die <ph id="ph1">&lt;xref:System.IO.FileStream.SafeFileHandle%2A&gt;</ph> von dieser Eigenschaft zurückgegeben.</target>       </trans-unit>
        <trans-unit id="926" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileStream.SafeFileHandle">
          <source>for permission to call unmanaged code.</source>
          <target state="translated">für die Berechtigung zum Aufrufen von nicht verwalteten Codes.</target>       </trans-unit>
        <trans-unit id="927" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileStream.SafeFileHandle">
          <source>Security action: Link Demand</source>
          <target state="translated">Sicherheitsaktion: Linkaufruf</target>       </trans-unit>
        <trans-unit id="928" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileStream.SafeFileHandle">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></source>
          <target state="translated">Zugeordnete Enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="929" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileStream.SafeFileHandle">
          <source>requires full trust for the immediate caller.</source>
          <target state="translated">erfordert volle Vertrauenswürdigkeit für den unmittelbaren Aufrufer.</target>       </trans-unit>
        <trans-unit id="930" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileStream.SafeFileHandle">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">Dieser Member kann nicht von teilweise vertrauenswürdigem oder transparentem Code verwendet werden.</target>       </trans-unit>
        <trans-unit id="931" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.Seek(System.Int64,System.IO.SeekOrigin)">
          <source>The point relative to <bpt id="p1">&lt;c&gt;</bpt>origin<ept id="p1">&lt;/c&gt;</ept> from which to begin seeking.</source>
          <target state="translated">Der Punkt, ab dem gesucht werden soll, der relativ zu <bpt id="p1">&lt;c&gt;</bpt>origin<ept id="p1">&lt;/c&gt;</ept>ist.</target>       </trans-unit>
        <trans-unit id="932" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.Seek(System.Int64,System.IO.SeekOrigin)">
          <source>Specifies the beginning, the end, or the current position as a reference point for <bpt id="p1">&lt;c&gt;</bpt>offset<ept id="p1">&lt;/c&gt;</ept>, using a value of type <ph id="ph1">&lt;see cref="T:System.IO.SeekOrigin" /&gt;</ph>.</source>
          <target state="translated">Bestimmt den Anfang, das Ende oder die aktuelle Position als Bezugspunkt für <bpt id="p1">&lt;c&gt;</bpt>offset<ept id="p1">&lt;/c&gt;</ept> unter Verwendung eines Werts vom Typ <ph id="ph1">&lt;see cref="T:System.IO.SeekOrigin" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="933" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.Seek(System.Int64,System.IO.SeekOrigin)">
          <source>Sets the current position of this stream to the given value.</source>
          <target state="translated">Legt die aktuelle Position dieses Streams auf den angegebenen Wert fest.</target>       </trans-unit>
        <trans-unit id="934" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.Seek(System.Int64,System.IO.SeekOrigin)">
          <source>The new position in the stream.</source>
          <target state="translated">Die neue Position im Stream.</target>       </trans-unit>
        <trans-unit id="935" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.Seek(System.Int64,System.IO.SeekOrigin)">
          <source>This method overrides <ph id="ph1">&lt;xref:System.IO.Stream.Seek%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Diese Methode überschreibt <ph id="ph1">&lt;xref:System.IO.Stream.Seek%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="936" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.Seek(System.Int64,System.IO.SeekOrigin)">
          <source>Use the <ph id="ph1">&lt;xref:System.IO.FileStream.CanSeek%2A?displayProperty=nameWithType&gt;</ph> property to determine whether the current instance supports seeking.</source>
          <target state="translated">Verwenden der <ph id="ph1">&lt;xref:System.IO.FileStream.CanSeek%2A?displayProperty=nameWithType&gt;</ph> Eigenschaft, um zu bestimmen, ob die aktuelle Instanz Suchvorgänge unterstützt.</target>       </trans-unit>
        <trans-unit id="937" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.Seek(System.Int64,System.IO.SeekOrigin)">
          <source>For additional information, see <ph id="ph1">&lt;xref:System.IO.Stream.CanSeek%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Weitere Informationen finden Sie unter <ph id="ph1">&lt;xref:System.IO.Stream.CanSeek%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="938" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.Seek(System.Int64,System.IO.SeekOrigin)">
          <source>You can seek to any location beyond the length of the stream.</source>
          <target state="translated">Sie können an einem beliebigen Speicherort überschreitet die Länge des Streams gesucht.</target>       </trans-unit>
        <trans-unit id="939" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.Seek(System.Int64,System.IO.SeekOrigin)">
          <source>When you seek beyond the length of the file, the file size grows.</source>
          <target state="translated">Wenn Sie die Länge der Datei suchen, wächst die Dateigröße.</target>       </trans-unit>
        <trans-unit id="940" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.Seek(System.Int64,System.IO.SeekOrigin)">
          <source>In Windows NT and later versions, data added to the end of the file is set to zero.</source>
          <target state="translated">In Windows NT und höheren Versionen werden am Ende der Datei hinzugefügte Daten auf NULL festgelegt.</target>       </trans-unit>
        <trans-unit id="941" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.Seek(System.Int64,System.IO.SeekOrigin)">
          <source>In Windows 98 or earlier versions, data added to the end of the file is not set to zero, which means that previously deleted data is visible to the stream.</source>
          <target state="translated">In Windows 98 oder früher werden am Ende der Datei hinzugefügte Daten nicht auf 0 (null), festgelegt, d. h., die zuvor Daten gelöscht sichtbar, in den Stream ist.</target>       </trans-unit>
        <trans-unit id="942" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.Seek(System.Int64,System.IO.SeekOrigin)">
          <source>For a list of common file and directory operations, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</source>
          <target state="translated">Eine Liste der allgemeinen Datei- und Verzeichnisvorgänge, finden Sie unter <bpt id="p1">[</bpt>allgemeine e/a-Aufgaben<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</target>       </trans-unit>
        <trans-unit id="943" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.Seek(System.Int64,System.IO.SeekOrigin)">
          <source>The following example shows how to write data to a file, byte by byte, and then verify that the data was written correctly.</source>
          <target state="translated">Im folgende Beispiel veranschaulicht das Schreiben von Daten in eine Datei byteweise, und überprüfen, dass die Daten richtig geschrieben wurde.</target>       </trans-unit>
        <trans-unit id="944" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.Seek(System.Int64,System.IO.SeekOrigin)">
          <source>The following example reads text in the reverse direction, from the end of file to the beginning of the file, by using the various <ph id="ph1">&lt;xref:System.IO.SeekOrigin&gt;</ph> values with the <ph id="ph2">&lt;xref:System.IO.FileStream.Seek%2A&gt;</ph> method.</source>
          <target state="translated">Das folgende Beispiel liest Text in umgekehrter Richtung vom Ende der Datei an den Anfang der Datei mit den verschiedenen <ph id="ph1">&lt;xref:System.IO.SeekOrigin&gt;</ph> Werte mit der <ph id="ph2">&lt;xref:System.IO.FileStream.Seek%2A&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="945" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.Seek(System.Int64,System.IO.SeekOrigin)">
          <source>An I/O error occurred.</source>
          <target state="translated">E/A-Fehler</target>       </trans-unit>
        <trans-unit id="946" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.Seek(System.Int64,System.IO.SeekOrigin)">
          <source>The stream does not support seeking, such as if the <ph id="ph1">&lt;see langword="FileStream" /&gt;</ph> is constructed from a pipe or console output.</source>
          <target state="translated">Der Stream unterstützt keine Suchvorgänge. Dies ist beispielsweise der Fall, wenn <ph id="ph1">&lt;see langword="FileStream" /&gt;</ph> aus einer Pipe- oder Konsolenausgabe erstellt wird.</target>       </trans-unit>
        <trans-unit id="947" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.Seek(System.Int64,System.IO.SeekOrigin)">
          <source>Seeking is attempted before the beginning of the stream.</source>
          <target state="translated">Es wird versucht, vor Beginn des Streams eine Suche auszuführen.</target>       </trans-unit>
        <trans-unit id="948" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.Seek(System.Int64,System.IO.SeekOrigin)">
          <source>Methods were called after the stream was closed.</source>
          <target state="translated">Es wurden Methoden aufgerufen, nachdem der Stream geschlossen wurde.</target>       </trans-unit>
        <trans-unit id="949" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.SetAccessControl(System.Security.AccessControl.FileSecurity)">
          <source>An object that describes an ACL entry to apply to the current file.</source>
          <target state="translated">Ein Objekt, das einen Eintrag in einer Zugriffssteuerungsliste beschreibt, der auf die aktuelle Datei angewendet werden soll.</target>       </trans-unit>
        <trans-unit id="950" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.SetAccessControl(System.Security.AccessControl.FileSecurity)">
          <source>Applies access control list (ACL) entries described by a <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.FileSecurity" /&gt;</ph> object to the file described by the current <ph id="ph2">&lt;see cref="T:System.IO.FileStream" /&gt;</ph> object.</source>
          <target state="translated">Wendet von einem <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.FileSecurity" /&gt;</ph>-Objekt beschriebene Einträge in Zugriffssteuerungslisten auf die Datei an, die vom aktuellen <ph id="ph2">&lt;see cref="T:System.IO.FileStream" /&gt;</ph>-Objekt beschrieben wird.</target>       </trans-unit>
        <trans-unit id="951" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.SetAccessControl(System.Security.AccessControl.FileSecurity)">
          <source>While the <ph id="ph1">&lt;xref:System.IO.FileStream&gt;</ph> class and <ph id="ph2">&lt;xref:System.IO.FileStream.SetAccessControl%2A&gt;</ph> can be used on an existing file, consider using the <ph id="ph3">&lt;xref:System.IO.File.SetAccessControl%2A?displayProperty=nameWithType&gt;</ph> method as it is easier to use.</source>
          <target state="translated">Während der <ph id="ph1">&lt;xref:System.IO.FileStream&gt;</ph> Klasse und <ph id="ph2">&lt;xref:System.IO.FileStream.SetAccessControl%2A&gt;</ph> kann auf einer vorhandenen Datei verwendet werden, sollten Sie die <ph id="ph3">&lt;xref:System.IO.File.SetAccessControl%2A?displayProperty=nameWithType&gt;</ph> -Methode ist einfacher zu verwenden.</target>       </trans-unit>
        <trans-unit id="952" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.SetAccessControl(System.Security.AccessControl.FileSecurity)">
          <source>The <ph id="ph1">&lt;xref:System.IO.FileStream.SetAccessControl%2A&gt;</ph> method applies access control list (ACL) entries to a file that represents the noninherited ACL list.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.IO.FileStream.SetAccessControl%2A&gt;</ph> Methode gilt Einträge Access Control List (ACL) für eine Datei, die nicht geerbte Zugriffssteuerungsliste darstellt.</target>       </trans-unit>
        <trans-unit id="953" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.SetAccessControl(System.Security.AccessControl.FileSecurity)">
          <source>The ACL specified for the <ph id="ph1">`fileSecurity`</ph> parameter replaces the existing ACL for the file.</source>
          <target state="translated">Die ACL angegeben, für die <ph id="ph1">`fileSecurity`</ph> Parameter ersetzt die vorhandene Zugriffssteuerungsliste für die Datei.</target>       </trans-unit>
        <trans-unit id="954" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.SetAccessControl(System.Security.AccessControl.FileSecurity)">
          <source>To add permissions for a new user, use the <ph id="ph1">&lt;xref:System.IO.FileStream.GetAccessControl%2A&gt;</ph> method to obtain the existing ACL, modify it, and then use <ph id="ph2">&lt;xref:System.IO.FileStream.SetAccessControl%2A&gt;</ph> to apply it back to the file.</source>
          <target state="translated">Um Berechtigungen für einen neuen Benutzer hinzuzufügen, verwenden die <ph id="ph1">&lt;xref:System.IO.FileStream.GetAccessControl%2A&gt;</ph> Methode zum Abrufen der vorhandenen ACL, ändern und verwenden Sie dann <ph id="ph2">&lt;xref:System.IO.FileStream.SetAccessControl%2A&gt;</ph> , wieder in der Datei anzuwenden.</target>       </trans-unit>
        <trans-unit id="955" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.SetAccessControl(System.Security.AccessControl.FileSecurity)">
          <source>An ACL describes individuals and/or groups who have, or do not have, rights to specific actions on the given file.</source>
          <target state="translated">Eine ACL beschreibt einzelne Benutzer und/oder Gruppen besitzen oder verfügen nicht über, Rechte für bestimmte Aktionen für die angegebene Datei.</target>       </trans-unit>
        <trans-unit id="956" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.SetAccessControl(System.Security.AccessControl.FileSecurity)">
          <source>For more information, see <bpt id="p1">[</bpt>How to: Add or Remove Access Control List Entries<ept id="p1">](~/docs/standard/io/how-to-add-or-remove-access-control-list-entries.md)</ept>.</source>
          <target state="translated">Weitere Informationen finden Sie unter <bpt id="p1">[</bpt>Gewusst wie: Hinzufügen oder Entfernen von Zugriffssteuerungslisten-Einträgen<ept id="p1">](~/docs/standard/io/how-to-add-or-remove-access-control-list-entries.md)</ept>.</target>       </trans-unit>
        <trans-unit id="957" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.SetAccessControl(System.Security.AccessControl.FileSecurity)">
          <source>The file is closed.</source>
          <target state="translated">Die Datei ist geschlossen.</target>       </trans-unit>
        <trans-unit id="958" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.SetAccessControl(System.Security.AccessControl.FileSecurity)">
          <source>The <ph id="ph1">&lt;paramref name="fileSecurity" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Der <ph id="ph1">&lt;paramref name="fileSecurity" /&gt;</ph>-Parameter ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="959" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.SetAccessControl(System.Security.AccessControl.FileSecurity)">
          <source>The file could not be found or modified.</source>
          <target state="translated">Die Datei konnte nicht gefunden oder geändert werden.</target>       </trans-unit>
        <trans-unit id="960" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.SetAccessControl(System.Security.AccessControl.FileSecurity)">
          <source>The current process does not have access to open the file.</source>
          <target state="translated">Der aktuelle Prozess hat keinen Zugriff zum Öffnen der Datei.</target>       </trans-unit>
        <trans-unit id="961" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.SetLength(System.Int64)">
          <source>The new length of the stream.</source>
          <target state="translated">Die neue Länge des Streams.</target>       </trans-unit>
        <trans-unit id="962" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.SetLength(System.Int64)">
          <source>Sets the length of this stream to the given value.</source>
          <target state="translated">Legt die Länge dieses Streams auf den angegebenen Wert fest.</target>       </trans-unit>
        <trans-unit id="963" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.SetLength(System.Int64)">
          <source>This method overrides <ph id="ph1">&lt;xref:System.IO.Stream.SetLength%2A&gt;</ph>.</source>
          <target state="translated">Diese Methode überschreibt <ph id="ph1">&lt;xref:System.IO.Stream.SetLength%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="964" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.SetLength(System.Int64)">
          <source>If the given value is less than the current length of the stream, the stream is truncated.</source>
          <target state="translated">Wenn der angegebene Wert kleiner als die aktuelle Länge des Streams ist, wird der Stream abgeschnitten.</target>       </trans-unit>
        <trans-unit id="965" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.SetLength(System.Int64)">
          <source>In this scenario, if the current position is greater than the new length, the current position is moved to the last byte of the stream.</source>
          <target state="translated">In diesem Szenario wird die aktuelle Position größer als die neue Länge wird die aktuelle Position das letzte Byte des Datenstroms verschoben.</target>       </trans-unit>
        <trans-unit id="966" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.SetLength(System.Int64)">
          <source>If the given value is larger than the current length of the stream, the stream is expanded, and the current position remains the same.</source>
          <target state="translated">Wenn der angegebene Wert größer als die aktuelle Länge des Streams ist, wird der Stream erweitert und bleibt unverändert, die aktuelle Position.</target>       </trans-unit>
        <trans-unit id="967" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.SetLength(System.Int64)">
          <source>If the stream is expanded, the contents of the stream between the old and the new length are undefined.</source>
          <target state="translated">Wenn der Stream erweitert wird, sind den Inhalt des Streams zwischen der alten und die neue Länge nicht definiert.</target>       </trans-unit>
        <trans-unit id="968" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.SetLength(System.Int64)">
          <source>A stream must support both writing and seeking for <ph id="ph1">`SetLength`</ph> to work.</source>
          <target state="translated">Ein Stream muss Schreib- und Suchvorgänge für unterstützen <ph id="ph1">`SetLength`</ph> arbeiten.</target>       </trans-unit>
        <trans-unit id="969" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.SetLength(System.Int64)">
          <source>Use the <ph id="ph1">&lt;xref:System.IO.FileStream.CanWrite%2A&gt;</ph> property to determine whether the current instance supports writing, and the <ph id="ph2">&lt;xref:System.IO.FileStream.CanSeek%2A&gt;</ph> property to determine whether seeking is supported.</source>
          <target state="translated">Verwenden der <ph id="ph1">&lt;xref:System.IO.FileStream.CanWrite%2A&gt;</ph> Eigenschaft, um zu bestimmen, ob die aktuelle Instanz Schreibvorgänge unterstützt und die <ph id="ph2">&lt;xref:System.IO.FileStream.CanSeek%2A&gt;</ph> Eigenschaft, um zu bestimmen, ob Suchvorgänge unterstützt werden.</target>       </trans-unit>
        <trans-unit id="970" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.SetLength(System.Int64)">
          <source>For additional information, see <ph id="ph1">&lt;xref:System.IO.Stream.CanWrite%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.IO.Stream.CanSeek%2A&gt;</ph>.</source>
          <target state="translated">Weitere Informationen finden Sie unter <ph id="ph1">&lt;xref:System.IO.Stream.CanWrite%2A&gt;</ph> und <ph id="ph2">&lt;xref:System.IO.Stream.CanSeek%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="971" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.SetLength(System.Int64)">
          <source>For a list of common file and directory operations, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</source>
          <target state="translated">Eine Liste der allgemeinen Datei- und Verzeichnisvorgänge, finden Sie unter <bpt id="p1">[</bpt>allgemeine e/a-Aufgaben<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</target>       </trans-unit>
        <trans-unit id="972" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.SetLength(System.Int64)">
          <source>An I/O error has occurred.</source>
          <target state="translated">Ein E/A-Fehler ist aufgetreten.</target>       </trans-unit>
        <trans-unit id="973" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.SetLength(System.Int64)">
          <source>The stream does not support both writing and seeking.</source>
          <target state="translated">Der Stream unterstützt nicht gleichzeitig Schreib- und Suchvorgänge.</target>       </trans-unit>
        <trans-unit id="974" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.SetLength(System.Int64)">
          <source>Attempted to set the <ph id="ph1">&lt;paramref name="value" /&gt;</ph> parameter to less than 0.</source>
          <target state="translated">Es wurde versucht, den <ph id="ph1">&lt;paramref name="value" /&gt;</ph>-Parameter auf einen kleineren Wert als 0 festzulegen.</target>       </trans-unit>
        <trans-unit id="975" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.Unlock(System.Int64,System.Int64)">
          <source>The beginning of the range to unlock.</source>
          <target state="translated">Der Anfang des zu entsperrenden Bereichs.</target>       </trans-unit>
        <trans-unit id="976" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.Unlock(System.Int64,System.Int64)">
          <source>The range to be unlocked.</source>
          <target state="translated">Der zu entsperrende Bereich.</target>       </trans-unit>
        <trans-unit id="977" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.Unlock(System.Int64,System.Int64)">
          <source>Allows access by other processes to all or part of a file that was previously locked.</source>
          <target state="translated">Ermöglicht anderen Prozessen den Zugriff auf die gesamte Datei oder einen Teil der Datei, die zuvor gesperrt war.</target>       </trans-unit>
        <trans-unit id="978" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.Unlock(System.Int64,System.Int64)">
          <source>For a list of common file and directory operations, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</source>
          <target state="translated">Eine Liste der allgemeinen Datei- und Verzeichnisvorgänge, finden Sie unter <bpt id="p1">[</bpt>allgemeine e/a-Aufgaben<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</target>       </trans-unit>
        <trans-unit id="979" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.Unlock(System.Int64,System.Int64)">
          <source>The following code example demonstrates how to lock part of a file so another process cannot access that part of the file even though it has read/write access to the file, and then unlock the specified part of the file .</source>
          <target state="translated">Im folgenden Codebeispiel wird veranschaulicht, wie Sperren Teil einer Datei, einem anderen Prozess kann nicht, dass ein Teil der Datei zugreifen, obwohl sie Lese-/Schreibzugriff auf die Datei hat, und klicken Sie dann den angegebenen Teil der Datei zu entsperren.</target>       </trans-unit>
        <trans-unit id="980" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.Unlock(System.Int64,System.Int64)">
          <source>Run the program simultaneously in different command windows and investigate using the different console input options.</source>
          <target state="translated">Führen Sie das Programm gleichzeitig in verschiedenen Befehlsfenstern und untersuchen Sie der verschiedenen Konsole Eingabeoptionen verwenden.</target>       </trans-unit>
        <trans-unit id="981" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.Unlock(System.Int64,System.Int64)">
          <source><ph id="ph1">&lt;paramref name="position" /&gt;</ph> or <ph id="ph2">&lt;paramref name="length" /&gt;</ph> is negative.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="position" /&gt;</ph> oder <ph id="ph2">&lt;paramref name="length" /&gt;</ph> ist ein negativer Wert.</target>       </trans-unit>
        <trans-unit id="982" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.Write(System.Byte[],System.Int32,System.Int32)">
          <source>The buffer containing data to write to the stream.</source>
          <target state="translated">Der Puffer mit den Daten, die in den Stream geschrieben werden sollen.</target>       </trans-unit>
        <trans-unit id="983" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.Write(System.Byte[],System.Int32,System.Int32)">
          <source>The zero-based byte offset in <bpt id="p1">&lt;c&gt;</bpt>array<ept id="p1">&lt;/c&gt;</ept> from which to begin copying bytes to the stream.</source>
          <target state="translated">Der nullbasierte Byteoffset in <bpt id="p1">&lt;c&gt;</bpt>array<ept id="p1">&lt;/c&gt;</ept>, ab dem Bytes in den Stream kopiert werden sollen.</target>       </trans-unit>
        <trans-unit id="984" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.Write(System.Byte[],System.Int32,System.Int32)">
          <source>The maximum number of bytes to write.</source>
          <target state="translated">Die maximale Anzahl der zu schreibenden Bytes.</target>       </trans-unit>
        <trans-unit id="985" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.Write(System.Byte[],System.Int32,System.Int32)">
          <source>Writes a block of bytes to the file stream.</source>
          <target state="translated">Schreibt einen Block von Bytes in den Dateistream.</target>       </trans-unit>
        <trans-unit id="986" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.Write(System.Byte[],System.Int32,System.Int32)">
          <source>This method overrides <ph id="ph1">&lt;xref:System.IO.Stream.Write%2A&gt;</ph>.</source>
          <target state="translated">Diese Methode überschreibt <ph id="ph1">&lt;xref:System.IO.Stream.Write%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="987" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.Write(System.Byte[],System.Int32,System.Int32)">
          <source>The <ph id="ph1">`offset`</ph> parameter gives the offset of the byte in <ph id="ph2">`array`</ph> (the buffer index) at which to begin copying, and the <ph id="ph3">`count`</ph> parameter gives the number of bytes that will be written to the stream.</source>
          <target state="translated">Die <ph id="ph1">`offset`</ph> -Parameter gibt den Offset des Bytes in <ph id="ph2">`array`</ph> (Pufferindex) ab dem kopiert wird, und die <ph id="ph3">`count`</ph> -Parameter gibt die Anzahl der Bytes, die in den Stream geschrieben werden.</target>       </trans-unit>
        <trans-unit id="988" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.Write(System.Byte[],System.Int32,System.Int32)">
          <source>If the write operation is successful, the current position of the stream is advanced by the number of bytes written.</source>
          <target state="translated">Wenn der Schreibvorgang erfolgreich ist, wird die aktuelle Position im Stream um die Anzahl der geschriebenen Bytes erweiterte.</target>       </trans-unit>
        <trans-unit id="989" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.Write(System.Byte[],System.Int32,System.Int32)">
          <source>If an exception occurs, the current position of the stream is unchanged.</source>
          <target state="translated">Wenn eine Ausnahme auftritt, ist die aktuelle Position im Stream nicht geändert.</target>       </trans-unit>
        <trans-unit id="990" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.Write(System.Byte[],System.Int32,System.Int32)">
          <source>Use the <ph id="ph1">&lt;xref:System.IO.FileStream.CanWrite%2A&gt;</ph> property to determine whether the current instance supports writing.</source>
          <target state="translated">Verwenden der <ph id="ph1">&lt;xref:System.IO.FileStream.CanWrite%2A&gt;</ph> Eigenschaft, um zu bestimmen, ob die aktuelle Instanz Schreibvorgänge unterstützt.</target>       </trans-unit>
        <trans-unit id="991" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.Write(System.Byte[],System.Int32,System.Int32)">
          <source>For additional information, see <ph id="ph1">&lt;xref:System.IO.Stream.CanWrite%2A&gt;</ph>.</source>
          <target state="translated">Weitere Informationen finden Sie unter <ph id="ph1">&lt;xref:System.IO.Stream.CanWrite%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="992" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.Write(System.Byte[],System.Int32,System.Int32)">
          <source>Do not interrupt a thread that is performing a write operation.</source>
          <target state="translated">Unterbrochen Sie einen Thread, der einen Schreibvorgang ausführt wird nicht.</target>       </trans-unit>
        <trans-unit id="993" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.Write(System.Byte[],System.Int32,System.Int32)">
          <source>Although the application may appear to run successfully after the thread is unblocked, the interruption can decrease your application's performance and reliability.</source>
          <target state="translated">Obwohl die Anwendung scheinbar ordnungsgemäß erfolgreich ausgeführt wird, nachdem der Thread nicht blockiert ist, kann die Unterbrechung Leistung und Zuverlässigkeit der Anwendung verringern.</target>       </trans-unit>
        <trans-unit id="994" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.Write(System.Byte[],System.Int32,System.Int32)">
          <source>For a list of common file and directory operations, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</source>
          <target state="translated">Eine Liste der allgemeinen Datei- und Verzeichnisvorgänge, finden Sie unter <bpt id="p1">[</bpt>allgemeine e/a-Aufgaben<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</target>       </trans-unit>
        <trans-unit id="995" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.Write(System.Byte[],System.Int32,System.Int32)">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.IO.FileStream.Lock%2A&gt;</ph> method.</source>
          <target state="translated">Dieses Codebeispiel ist Teil eines umfangreicheren Beispiels für die <ph id="ph1">&lt;xref:System.IO.FileStream.Lock%2A&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="996" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.Write(System.Byte[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="array" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="array" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="997" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.Write(System.Byte[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="offset" /&gt;</ph> and <ph id="ph2">&lt;paramref name="count" /&gt;</ph> describe an invalid range in <ph id="ph3">&lt;paramref name="array" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="offset" /&gt;</ph> und <ph id="ph2">&lt;paramref name="count" /&gt;</ph> bezeichnen einen ungültigen Bereich in <ph id="ph3">&lt;paramref name="array" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="998" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.Write(System.Byte[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="offset" /&gt;</ph> or <ph id="ph2">&lt;paramref name="count" /&gt;</ph> is negative.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="offset" /&gt;</ph> oder <ph id="ph2">&lt;paramref name="count" /&gt;</ph> ist ein negativer Wert.</target>       </trans-unit>
        <trans-unit id="999" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.Write(System.Byte[],System.Int32,System.Int32)">
          <source>An I/O error occurred.</source>
          <target state="translated">E/A-Fehler</target>       </trans-unit>
        <trans-unit id="1000" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.Write(System.Byte[],System.Int32,System.Int32)">
          <source><ph id="ph1">\-</ph> or -</source>
          <target state="translated"><ph id="ph1">\-</ph> oder –</target>       </trans-unit>
        <trans-unit id="1001" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.Write(System.Byte[],System.Int32,System.Int32)">
          <source>Another thread may have caused an unexpected change in the position of the operating system's file handle.</source>
          <target state="translated">Ein anderer Thread hat möglicherweise eine unerwartete Änderung der Position des Dateihandles des Betriebssystems verursacht.</target>       </trans-unit>
        <trans-unit id="1002" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.Write(System.Byte[],System.Int32,System.Int32)">
          <source>The stream is closed.</source>
          <target state="translated">Der Stream ist geschlossen.</target>       </trans-unit>
        <trans-unit id="1003" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.Write(System.Byte[],System.Int32,System.Int32)">
          <source>The current stream instance does not support writing.</source>
          <target state="translated">Die aktuelle Streaminstanz unterstützt keine Schreibvorgänge.</target>       </trans-unit>
        <trans-unit id="1004" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
          <source>The buffer to write data from.</source>
          <target state="translated">Der Puffer, aus dem Daten geschrieben werden sollen.</target>       </trans-unit>
        <trans-unit id="1005" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
          <source>The zero-based byte offset in <bpt id="p1">&lt;c&gt;</bpt>buffer<ept id="p1">&lt;/c&gt;</ept> from which to begin copying bytes to the stream.</source>
          <target state="translated">Der nullbasierte Byteoffset in <bpt id="p1">&lt;c&gt;</bpt>buffer<ept id="p1">&lt;/c&gt;</ept>, ab dem Bytes in den Stream kopiert werden sollen.</target>       </trans-unit>
        <trans-unit id="1006" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
          <source>The maximum number of bytes to write.</source>
          <target state="translated">Die maximale Anzahl der zu schreibenden Bytes.</target>       </trans-unit>
        <trans-unit id="1007" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
          <source>The token to monitor for cancellation requests.</source>
          <target state="translated">Das Token zum überwachen von Abbruchanforderungen.</target>       </trans-unit>
        <trans-unit id="1008" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
          <source>Asynchronously writes a sequence of bytes to the current stream, advances the current position within this stream by the number of bytes written, and monitors cancellation requests.</source>
          <target state="translated">Schreibt eine Folge von Bytes asynchron in den aktuellen Stream, erhöht die aktuelle Position im Stream um die Anzahl der geschriebenen Bytes und überwacht Abbruchanforderungen.</target>       </trans-unit>
        <trans-unit id="1009" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
          <source>A task that represents the asynchronous write operation.</source>
          <target state="translated">Eine Aufgabe, die den asynchronen Schreibvorgang darstellt.</target>       </trans-unit>
        <trans-unit id="1010" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
          <source>The <ph id="ph1">&lt;xref:System.IO.FileStream.WriteAsync%2A&gt;</ph> method enables you to perform resource-intensive file operations without blocking the main thread.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.IO.FileStream.WriteAsync%2A&gt;</ph> Methode können Sie ressourcenintensive Dateivorgänge ausführen, ohne den Hauptthread zu blockieren.</target>       </trans-unit>
        <trans-unit id="1011" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
          <source>This performance consideration is particularly important in a <ph id="ph1">[!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)]</ph> app or <ph id="ph2">[!INCLUDE[desktop_appname](~/includes/desktop-appname-md.md)]</ph> app where a time-consuming stream operation can block the UI thread and make your app appear as if it is not working.</source>
          <target state="translated">Diese Überlegungen zur Leistung sind insbesondere in einer <ph id="ph1">[!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)]</ph>-App oder <ph id="ph2">[!INCLUDE[desktop_appname](~/includes/desktop-appname-md.md)]</ph>-App wichtig, bei der ein zeitaufwendiger Streamvorgang den UI-Thread blockieren kann und es dann den Anschein hat, dass Ihre App nicht funktioniert.</target>       </trans-unit>
        <trans-unit id="1012" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
          <source>The async methods are used in conjunction with the <ph id="ph1">`async`</ph> and <ph id="ph2">`await`</ph> keywords in Visual Basic and C#.</source>
          <target state="translated">Die Async-Methoden werden verwendet, in Verbindung mit der <ph id="ph1">`async`</ph> und <ph id="ph2">`await`</ph> in Visual Basic und C#-Schlüsselwörter.</target>       </trans-unit>
        <trans-unit id="1013" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
          <source>Use the <ph id="ph1">&lt;xref:System.IO.FileStream.CanWrite%2A&gt;</ph> property to determine whether the current instance supports reading.</source>
          <target state="translated">Verwenden der <ph id="ph1">&lt;xref:System.IO.FileStream.CanWrite%2A&gt;</ph> Eigenschaft, um zu bestimmen, ob die aktuelle Instanz Lesevorgänge unterstützt.</target>       </trans-unit>
        <trans-unit id="1014" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
          <source>If the operation is canceled before it completes, the returned task contains the <ph id="ph1">&lt;xref:System.Threading.Tasks.TaskStatus.Canceled&gt;</ph> value for the <ph id="ph2">&lt;xref:System.Threading.Tasks.Task.Status%2A&gt;</ph> property.</source>
          <target state="translated">Wenn der Vorgang abgebrochen wird, bevor er abgeschlossen wurde, enthält die zurückgegebene Aufgabe der <ph id="ph1">&lt;xref:System.Threading.Tasks.TaskStatus.Canceled&gt;</ph> Wert für die <ph id="ph2">&lt;xref:System.Threading.Tasks.Task.Status%2A&gt;</ph> Eigenschaft.</target>       </trans-unit>
        <trans-unit id="1015" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
          <source>If the handle to the file is disposed, the returned task contains the <ph id="ph1">&lt;xref:System.ObjectDisposedException&gt;</ph> exception in the <ph id="ph2">&lt;xref:System.Threading.Tasks.Task.Exception%2A&gt;</ph> property.</source>
          <target state="translated">Wenn das Handle für die Datei verworfen wird, enthält die zurückgegebene Aufgabe der <ph id="ph1">&lt;xref:System.ObjectDisposedException&gt;</ph> Ausnahme in der <ph id="ph2">&lt;xref:System.Threading.Tasks.Task.Exception%2A&gt;</ph> Eigenschaft.</target>       </trans-unit>
        <trans-unit id="1016" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
          <source>The following example shows how to write asynchronously to a file.</source>
          <target state="translated">Im folgende Beispiel wird gezeigt, wie asynchron in eine Datei geschrieben wird.</target>       </trans-unit>
        <trans-unit id="1017" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
          <source><ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1018" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
          <source><ph id="ph1">&lt;paramref name="offset" /&gt;</ph> or <ph id="ph2">&lt;paramref name="count" /&gt;</ph> is negative.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="offset" /&gt;</ph> oder <ph id="ph2">&lt;paramref name="count" /&gt;</ph> ist ein negativer Wert.</target>       </trans-unit>
        <trans-unit id="1019" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
          <source>The sum of <ph id="ph1">&lt;paramref name="offset" /&gt;</ph> and <ph id="ph2">&lt;paramref name="count" /&gt;</ph> is larger than the buffer length.</source>
          <target state="translated">Die Summe von <ph id="ph1">&lt;paramref name="offset" /&gt;</ph> und <ph id="ph2">&lt;paramref name="count" /&gt;</ph> ist größer als die Pufferlänge.</target>       </trans-unit>
        <trans-unit id="1020" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
          <source>The stream does not support writing.</source>
          <target state="translated">Der Stream unterstützt das Schreiben nicht.</target>       </trans-unit>
        <trans-unit id="1021" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
          <source>The stream has been disposed.</source>
          <target state="translated">Der Stream wurde verworfen.</target>       </trans-unit>
        <trans-unit id="1022" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
          <source>The stream is currently in use by a previous write operation.</source>
          <target state="translated">Der Stream wird zurzeit von einem vorherigen Schreibvorgang verwendet.</target>       </trans-unit>
        <trans-unit id="1023" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.WriteByte(System.Byte)">
          <source>A byte to write to the stream.</source>
          <target state="translated">Ein Byte, das in den Stream geschrieben werden soll.</target>       </trans-unit>
        <trans-unit id="1024" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.WriteByte(System.Byte)">
          <source>Writes a byte to the current position in the file stream.</source>
          <target state="translated">Schreibt ein Byte an die aktuelle Position im Dateistream.</target>       </trans-unit>
        <trans-unit id="1025" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.WriteByte(System.Byte)">
          <source>This method overrides <ph id="ph1">&lt;xref:System.IO.Stream.WriteByte%2A&gt;</ph>.</source>
          <target state="translated">Diese Methode überschreibt <ph id="ph1">&lt;xref:System.IO.Stream.WriteByte%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1026" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.WriteByte(System.Byte)">
          <source>Use <ph id="ph1">`WriteByte`</ph> to write a byte to a <ph id="ph2">`FileStream`</ph> efficiently.</source>
          <target state="translated">Verwendung <ph id="ph1">`WriteByte`</ph> einen Byte, das Schreiben einer <ph id="ph2">`FileStream`</ph> effizient.</target>       </trans-unit>
        <trans-unit id="1027" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.WriteByte(System.Byte)">
          <source>If the stream is closed or not writable, an exception will be thrown.</source>
          <target state="translated">Wenn der Stream geschlossen oder schreibgeschützt ist, wird eine Ausnahme ausgelöst.</target>       </trans-unit>
        <trans-unit id="1028" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.WriteByte(System.Byte)">
          <source>Use the <ph id="ph1">&lt;xref:System.IO.FileStream.CanWrite%2A&gt;</ph> property to determine whether the current instance supports writing.</source>
          <target state="translated">Verwenden der <ph id="ph1">&lt;xref:System.IO.FileStream.CanWrite%2A&gt;</ph> Eigenschaft, um zu bestimmen, ob die aktuelle Instanz Schreibvorgänge unterstützt.</target>       </trans-unit>
        <trans-unit id="1029" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.WriteByte(System.Byte)">
          <source>For additional information, see <ph id="ph1">&lt;xref:System.IO.Stream.CanWrite%2A&gt;</ph>.</source>
          <target state="translated">Weitere Informationen finden Sie unter <ph id="ph1">&lt;xref:System.IO.Stream.CanWrite%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1030" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.WriteByte(System.Byte)">
          <source>The following code example shows how to write data to a file, byte by byte, and then verify that the data was written correctly.</source>
          <target state="translated">Im folgenden Codebeispiel wird veranschaulicht, wie zum Schreiben von Daten in eine Datei byteweise, und überprüfen, dass die Daten richtig geschrieben wurde.</target>       </trans-unit>
        <trans-unit id="1031" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.WriteByte(System.Byte)">
          <source>The stream is closed.</source>
          <target state="translated">Der Stream ist geschlossen.</target>       </trans-unit>
        <trans-unit id="1032" translate="yes" xml:space="preserve" uid="M:System.IO.FileStream.WriteByte(System.Byte)">
          <source>The stream does not support writing.</source>
          <target state="translated">Der Stream unterstützt das Schreiben nicht.</target>       </trans-unit>
        <trans-unit id="1033" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.WriteByte(System.Byte)">
          <source>The default implementation on <ph id="ph1">&lt;see langword="Stream" /&gt;</ph> creates a new single-byte array and then calls <ph id="ph2">&lt;see cref="M:System.IO.Stream.Write(System.Byte[],System.Int32,System.Int32)" /&gt;</ph>.</source>
          <target state="translated">Die standardmäßige Implementierung auf <ph id="ph1">&lt;see langword="Stream" /&gt;</ph> erstellt ein neues Single-Byte-Array und ruft dann <ph id="ph2">&lt;see cref="M:System.IO.Stream.Write(System.Byte[],System.Int32,System.Int32)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1034" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.WriteByte(System.Byte)">
          <source>While this is formally correct, it is inefficient.</source>
          <target state="translated">Während dies formal richtig ist, ist es ineffizient.</target>       </trans-unit>
        <trans-unit id="1035" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.WriteByte(System.Byte)">
          <source>Any stream with an internal buffer should override this method and provide a much more efficient version that reads the buffer directly, avoiding the extra array allocation on every call.</source>
          <target state="translated">Jeder Stream mit einem internen Puffer sollte diese Methode überschreiben und eine wesentlich effizienter Version, die den Puffer direkt, liest die Zuordnung zusätzlichen Array bei jedem Aufruf zu vermeiden.</target>       </trans-unit>
        <trans-unit id="1036" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileStream.WriteByte(System.Byte)">
          <source>For a list of common file and directory operations, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</source>
          <target state="translated">Eine Liste der allgemeinen Datei- und Verzeichnisvorgänge, finden Sie unter <bpt id="p1">[</bpt>allgemeine e/a-Aufgaben<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>