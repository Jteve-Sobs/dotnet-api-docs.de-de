<Type Name="WindowsRuntimeStreamExtensions" FullName="System.IO.WindowsRuntimeStreamExtensions">
  <Metadata><Meta Name="ms.openlocfilehash" Value="a112b56a2b68e5b3d72b76bc2fdad73149bfd7d2" /><Meta Name="ms.sourcegitcommit" Value="6b9d64332f31de312efea785fbb19e4d80f544d5" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="06/12/2019" /><Meta Name="ms.locfileid" Value="67026401" /></Metadata><TypeSignature Language="C#" Value="public static class WindowsRuntimeStreamExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit WindowsRuntimeStreamExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.IO.WindowsRuntimeStreamExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module WindowsRuntimeStreamExtensions" />
  <TypeSignature Language="C++ CLI" Value="public ref class WindowsRuntimeStreamExtensions abstract sealed" />
  <TypeSignature Language="F#" Value="type WindowsRuntimeStreamExtensions = class" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.WindowsRuntime</AssemblyName>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.14.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="dotnet-uwp-10.0">
      <AttributeName>System.Security.SecurityCritical</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Enthält die Erweiterungsmethoden für die Konvertierung zwischen Datenströmen in der Windows-Runtime und verwalteten Datenströmen in .NET für Anwendungen des Microsoft Store.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[
## Remarks

Diese Erweiterungsmethoden sind verfügbar, nur, wenn Sie Windows Store-apps entwickeln. Die Methoden stellen hilfreiche Möglichkeiten des Arbeitens mit Streams in Windows Store-apps bereit. Sie erstellen eine Instanz der nicht der `WindowsRuntimeStreamExtensions` Klasse; stattdessen verwenden Sie diese Methoden von Instanzen von der <xref:Windows.Storage.Streams.IInputStream> und <xref:Windows.Storage.Streams.IOutputStream> Schnittstellen und die <xref:System.IO.Stream> Klasse.

Die `WindowsRuntimeStreamExtensions` Klasse enthält zwei Methoden zum Konvertieren eines verwalteten <xref:System.IO.Stream> Objekt in einen Stream, in der Windows-Runtime:

  - <xref:System.IO.WindowsRuntimeStreamExtensions.AsInputStream%2A>
  - <xref:System.IO.WindowsRuntimeStreamExtensions.AsOutputStream%2A>

Die `WindowsRuntimeStreamExtensions` -Klasse enthält drei überladene Methoden für das Konvertieren eines Datenstroms in der Windows-Runtime auf einem <xref:System.IO.Stream> Objekt:

  - <xref:System.IO.WindowsRuntimeStreamExtensions.AsStream%2A>
  - <xref:System.IO.WindowsRuntimeStreamExtensions.AsStreamForRead%2A>
  - <xref:System.IO.WindowsRuntimeStreamExtensions.AsStreamForWrite%2A>

Ab .NET Framework 4.5.1, die `WindowsRuntimeStreamExtensions` -Klasse enthält eine Methode zum Konvertieren eines Datenstroms in einer Windows-Runtime <xref:Windows.Storage.Streams.RandomAccessStream>:

  - <xref:System.IO.WindowsRuntimeStreamExtensions.AsRandomAccessStream(System.IO.Stream)>

## Examples

Das folgende Beispiel zeigt, wie Sie mit der <xref:System.IO.WindowsRuntimeStreamExtensions.AsStreamForWrite%2A> und <xref:System.IO.WindowsRuntimeStreamExtensions.AsStreamForRead%2A>

[!code-csharp[windowsruntimestreamextensions#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.windowsruntimestreamextensions/cs/blankpage.xaml.cs#2)]
[!code-vb[windowsruntimestreamextensions#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.windowsruntimestreamextensions/vb/blankpage.xaml.vb#2)]

Hier ist der XAML-Code, der im vorherigen Beispiel zugeordnet ist. 

[!code-xaml[windowsruntimestreamextensions#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.windowsruntimestreamextensions/cs/blankpage.xaml#1)]
]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AsInputStream">
      <MemberSignature Language="C#" Value="public static Windows.Storage.Streams.IInputStream AsInputStream (this System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Windows.Storage.Streams.IInputStream AsInputStream(class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.WindowsRuntimeStreamExtensions.AsInputStream(System.IO.Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Windows::Storage::Streams::IInputStream ^ AsInputStream(System::IO::Stream ^ stream);" />
      <MemberSignature Language="F#" Value="static member AsInputStream : System.IO.Stream -&gt; Windows.Storage.Streams.IInputStream" Usage="System.IO.WindowsRuntimeStreamExtensions.AsInputStream stream" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.WindowsRuntime</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Windows.Storage.Streams.IInputStream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" RefType="this" />
      </Parameters>
      <Docs>
        <param name="stream">Der zu konvertierende Stream.</param>
        <summary>Konvertiert einen verwalteten Stream in .NET für Microsoft Store-Apps in einen Eingabestream in der Windows-Runtime.</summary>
        <returns>Ein Windows-Runtime-<see cref="T:Windows.Storage.Streams.IInputStream" />-Objekt, das den konvertierten Stream darstellt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
          
> [!NOTE]
> In Visual Basic und C#, Sie können diese Methode aufrufen, wie eine Instanzmethode auf ein beliebiges Objekt vom Typ <xref:System.IO.Stream>. Bei Verwendung der Syntax für Instanzenmethoden lassen Sie den ersten Parameter aus. Weitere Informationen finden Sie unter [Erweiterungsmethoden (Visual Basic)](~/docs/visual-basic/programming-guide/language-features/procedures/extension-methods.md) oder [Extension Methods (C# Programming Guide)](~/docs/csharp/programming-guide/classes-and-structs/extension-methods.md).

## Examples

Das folgende Beispiel zeigt, wie Sie mit der `AsInputStream` und <xref:System.IO.WindowsRuntimeStreamExtensions.AsOutputStream%2A> Methoden, um einen verwalteten Stream in und aus einem Stream in der Windows-Runtime konvertieren.

[!code-csharp[windowsruntimestreamextensions#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.windowsruntimestreamextensions/cs/blankpage2.xaml.cs#4)]
[!code-vb[windowsruntimestreamextensions#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.windowsruntimestreamextensions/vb/blankpage2.xaml.vb#4)]

Hier ist der XAML-Code, der im vorherigen Beispiel zugeordnet ist.

[!code-xaml[windowsruntimestreamextensions#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.windowsruntimestreamextensions/cs/blankpage2.xaml#3)]

]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="stream" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.NotSupportedException">Lesevorgänge werden vom Stream nicht unterstützt.</exception>
      </Docs>
    </Member>
    <Member MemberName="AsOutputStream">
      <MemberSignature Language="C#" Value="public static Windows.Storage.Streams.IOutputStream AsOutputStream (this System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Windows.Storage.Streams.IOutputStream AsOutputStream(class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.WindowsRuntimeStreamExtensions.AsOutputStream(System.IO.Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Windows::Storage::Streams::IOutputStream ^ AsOutputStream(System::IO::Stream ^ stream);" />
      <MemberSignature Language="F#" Value="static member AsOutputStream : System.IO.Stream -&gt; Windows.Storage.Streams.IOutputStream" Usage="System.IO.WindowsRuntimeStreamExtensions.AsOutputStream stream" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.WindowsRuntime</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Windows.Storage.Streams.IOutputStream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" RefType="this" />
      </Parameters>
      <Docs>
        <param name="stream">Der zu konvertierende Stream.</param>
        <summary>Konvertiert einen verwalteten Stream in .NET für Microsoft Store-Apps in einen Ausgabestream in der Windows-Runtime.</summary>
        <returns>Ein Windows-Runtime-<see cref="T:Windows.Storage.Streams.IOutputStream" />-Objekt, das den konvertierten Stream darstellt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

> [!NOTE]
> In Visual Basic und C#, Sie können diese Methode aufrufen, wie eine Instanzmethode auf ein beliebiges Objekt vom Typ <xref:System.IO.Stream>. Bei Verwendung der Syntax für Instanzenmethoden lassen Sie den ersten Parameter aus. Weitere Informationen finden Sie unter [Erweiterungsmethoden (Visual Basic)](~/docs/visual-basic/programming-guide/language-features/procedures/extension-methods.md) oder [Extension Methods (C# Programming Guide)](~/docs/csharp/programming-guide/classes-and-structs/extension-methods.md).

## Examples

Das folgende Beispiel zeigt, wie Sie mit der <xref:System.IO.WindowsRuntimeStreamExtensions.AsInputStream%2A> und `AsOutputStream`> Methoden, um einen verwalteten Stream in und aus einem Stream in der Windows-Runtime konvertieren.

[!code-csharp[windowsruntimestreamextensions#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.windowsruntimestreamextensions/cs/blankpage2.xaml.cs#4)]
[!code-vb[windowsruntimestreamextensions#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.windowsruntimestreamextensions/vb/blankpage2.xaml.vb#4)]

Hier ist der XAML-Code, der im vorherigen Beispiel zugeordnet ist.

[!code-xaml[windowsruntimestreamextensions#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.windowsruntimestreamextensions/cs/blankpage2.xaml#3)]

]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="stream" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.NotSupportedException">Lesevorgänge werden vom Stream nicht unterstützt.</exception>
      </Docs>
    </Member>
    <Member MemberName="AsRandomAccessStream">
      <MemberSignature Language="C#" Value="public static Windows.Storage.Streams.IRandomAccessStream AsRandomAccessStream (this System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Windows.Storage.Streams.IRandomAccessStream AsRandomAccessStream(class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.WindowsRuntimeStreamExtensions.AsRandomAccessStream(System.IO.Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Windows::Storage::Streams::IRandomAccessStream ^ AsRandomAccessStream(System::IO::Stream ^ stream);" />
      <MemberSignature Language="F#" Value="static member AsRandomAccessStream : System.IO.Stream -&gt; Windows.Storage.Streams.IRandomAccessStream" Usage="System.IO.WindowsRuntimeStreamExtensions.AsRandomAccessStream stream" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.WindowsRuntime</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Windows.Storage.Streams.IRandomAccessStream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" RefType="this" />
      </Parameters>
      <Docs>
        <param name="stream">Der zu konvertierende Stream.</param>
        <summary>Konvertiert den angegebenen Stream in einen Random-Access-Stream.</summary>
        <returns>Ein Windows-Runtime-<see cref="T:Windows.Storage.Streams.IRandomAccessStream" />, das den konvertierten Stream darstellt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks


> [!NOTE]
> In Visual Basic und C#, Sie können diese Methode aufrufen, wie eine Instanzmethode auf ein beliebiges Objekt vom Typ <xref:System.IO.Stream>. Bei Verwendung der Syntax für Instanzenmethoden lassen Sie den ersten Parameter aus. Weitere Informationen finden Sie unter [Erweiterungsmethoden (Visual Basic)](~/docs/visual-basic/programming-guide/language-features/procedures/extension-methods.md) oder [Extension Methods (C# Programming Guide)](~/docs/csharp/programming-guide/classes-and-structs/extension-methods.md).

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AsStream">
      <MemberSignature Language="C#" Value="public static System.IO.Stream AsStream (this Windows.Storage.Streams.IRandomAccessStream windowsRuntimeStream);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.Stream AsStream(class Windows.Storage.Streams.IRandomAccessStream windowsRuntimeStream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.WindowsRuntimeStreamExtensions.AsStream(Windows.Storage.Streams.IRandomAccessStream)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AsStream (windowsRuntimeStream As IRandomAccessStream) As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::IO::Stream ^ AsStream(Windows::Storage::Streams::IRandomAccessStream ^ windowsRuntimeStream);" />
      <MemberSignature Language="F#" Value="static member AsStream : Windows.Storage.Streams.IRandomAccessStream -&gt; System.IO.Stream" Usage="System.IO.WindowsRuntimeStreamExtensions.AsStream windowsRuntimeStream" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.WindowsRuntime</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="windowsRuntimeStream" Type="Windows.Storage.Streams.IRandomAccessStream" RefType="this" />
      </Parameters>
      <Docs>
        <param name="windowsRuntimeStream">Das Windows-Runtime-<see cref="T:Windows.Storage.Streams.IRandomAccessStream" />-Objekt, das konvertiert werden soll.</param>
        <summary>Konvertiert einen Random-Access-Stream in der Windows-Runtime in einen verwalteten Stream in .NET für Microsoft Store-Apps.</summary>
        <returns>Die konvertierte Stream.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

> [!NOTE]
> In Visual Basic und C#, Sie können diese Methode aufrufen, wie eine Instanzmethode auf ein beliebiges Objekt vom Typ <xref:System.IO.Stream>. Bei Verwendung der Syntax für Instanzenmethoden lassen Sie den ersten Parameter aus. Weitere Informationen finden Sie unter [Erweiterungsmethoden (Visual Basic)](~/docs/visual-basic/programming-guide/language-features/procedures/extension-methods.md) oder [Extension Methods (C# Programming Guide)](~/docs/csharp/programming-guide/classes-and-structs/extension-methods.md).

Eine Standardpuffergröße von 16.384 Bytes wird verwendet, wenn es sich bei den Stream zu konvertieren. Verwenden Sie zum Angeben einer anderen Puffergröße der <xref:System.IO.WindowsRuntimeStreamExtensions.AsStream(Windows.Storage.Streams.IRandomAccessStream,System.Int32)> überladen.

]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="windowsRuntimeStream" /> ist <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="AsStream">
      <MemberSignature Language="C#" Value="public static System.IO.Stream AsStream (this Windows.Storage.Streams.IRandomAccessStream windowsRuntimeStream, int bufferSize);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.Stream AsStream(class Windows.Storage.Streams.IRandomAccessStream windowsRuntimeStream, int32 bufferSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.WindowsRuntimeStreamExtensions.AsStream(Windows.Storage.Streams.IRandomAccessStream,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AsStream (windowsRuntimeStream As IRandomAccessStream, bufferSize As Integer) As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::IO::Stream ^ AsStream(Windows::Storage::Streams::IRandomAccessStream ^ windowsRuntimeStream, int bufferSize);" />
      <MemberSignature Language="F#" Value="static member AsStream : Windows.Storage.Streams.IRandomAccessStream * int -&gt; System.IO.Stream" Usage="System.IO.WindowsRuntimeStreamExtensions.AsStream (windowsRuntimeStream, bufferSize)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.WindowsRuntime</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="windowsRuntimeStream" Type="Windows.Storage.Streams.IRandomAccessStream" RefType="this" />
        <Parameter Name="bufferSize" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="windowsRuntimeStream">Das Windows-Runtime-<see cref="T:Windows.Storage.Streams.IRandomAccessStream" />-Objekt, das konvertiert werden soll.</param>
        <param name="bufferSize">Die Größe des Cookies in Bytes. Dieser Wert kann nicht negativ sein, aber er kann 0 (null) sein, um die Pufferung zu deaktivieren.</param>
        <summary>Konvertiert einen Random-Access-Stream in der Windows-Runtime mithilfe der angegebenen Puffergröße in einen verwalteten Stream in .NET für Microsoft Store-Apps.</summary>
        <returns>Die konvertierte Stream.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

> [!NOTE]
> In Visual Basic und C#, Sie können diese Methode aufrufen, wie eine Instanzmethode auf ein beliebiges Objekt vom Typ <xref:System.IO.Stream>. Bei Verwendung der Syntax für Instanzenmethoden lassen Sie den ersten Parameter aus. Weitere Informationen finden Sie unter [Erweiterungsmethoden (Visual Basic)](~/docs/visual-basic/programming-guide/language-features/procedures/extension-methods.md) oder [Extension Methods (C# Programming Guide)](~/docs/csharp/programming-guide/classes-and-structs/extension-methods.md).

Sie können diese Methode verwenden, um eine Puffergröße zu geben, wenn Sie den Stream zu konvertieren. Um die Standardpuffergröße von 16.384 Bytes zu verwenden, verwenden die <xref:System.IO.WindowsRuntimeStreamExtensions.AsStream(Windows.Storage.Streams.IRandomAccessStream)> überladen.

In den meisten Fällen verbessert Pufferung die Leistung von Stream-Vorgänge aus. Sie können die Pufferung durch das Festlegen von deaktivieren `bufferSize` 0 (null), aber Sie sollten dies tun, nur, wenn Sie sicher sind, dass das Deaktivieren der Pufferung für Ihre Situation geeignet ist.

]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="windowsRuntimeStream" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="bufferSize" /> ist ein negativer Wert.</exception>
      </Docs>
    </Member>
    <Member MemberName="AsStreamForRead">
      <MemberSignature Language="C#" Value="public static System.IO.Stream AsStreamForRead (this Windows.Storage.Streams.IInputStream windowsRuntimeStream);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.Stream AsStreamForRead(class Windows.Storage.Streams.IInputStream windowsRuntimeStream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.WindowsRuntimeStreamExtensions.AsStreamForRead(Windows.Storage.Streams.IInputStream)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AsStreamForRead (windowsRuntimeStream As IInputStream) As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::IO::Stream ^ AsStreamForRead(Windows::Storage::Streams::IInputStream ^ windowsRuntimeStream);" />
      <MemberSignature Language="F#" Value="static member AsStreamForRead : Windows.Storage.Streams.IInputStream -&gt; System.IO.Stream" Usage="System.IO.WindowsRuntimeStreamExtensions.AsStreamForRead windowsRuntimeStream" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.WindowsRuntime</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="windowsRuntimeStream" Type="Windows.Storage.Streams.IInputStream" RefType="this" />
      </Parameters>
      <Docs>
        <param name="windowsRuntimeStream">Das Windows-Runtime-<see cref="T:Windows.Storage.Streams.IInputStream" />-Objekt, das konvertiert werden soll.</param>
        <summary>Konvertiert einen Eingabestream in der Windows-Runtime in einen verwalteten Stream in .NET für Microsoft Store-Apps.</summary>
        <returns>Die konvertierte Stream.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

> [!NOTE]
> In Visual Basic und C#, Sie können diese Methode aufrufen, wie eine Instanzmethode auf ein beliebiges Objekt vom Typ <xref:System.IO.Stream>. Bei Verwendung der Syntax für Instanzenmethoden lassen Sie den ersten Parameter aus. Weitere Informationen finden Sie unter [Erweiterungsmethoden (Visual Basic)](~/docs/visual-basic/programming-guide/language-features/procedures/extension-methods.md) oder [Extension Methods (C# Programming Guide)](~/docs/csharp/programming-guide/classes-and-structs/extension-methods.md).

Eine Standardpuffergröße von 16.384 Bytes wird verwendet, wenn es sich bei den Stream zu konvertieren. Verwenden Sie zum Angeben einer anderen Puffergröße der <xref:System.IO.WindowsRuntimeStreamExtensions.AsStreamForRead(Windows.Storage.Streams.IInputStream,System.Int32)> überladen.

## Examples

Das folgende Beispiel zeigt, wie Sie mit der <xref:System.IO.WindowsRuntimeStreamExtensions.AsStreamForWrite%2A> und <xref:System.IO.WindowsRuntimeStreamExtensions.AsStreamForRead%2A> Methoden, um einen verwalteten Stream in und aus einem Stream in der Windows-Runtime konvertieren.

[!code-csharp[windowsruntimestreamextensions#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.windowsruntimestreamextensions/cs/blankpage.xaml.cs#2)]
[!code-vb[windowsruntimestreamextensions#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.windowsruntimestreamextensions/vb/blankpage.xaml.vb#2)]

Hier ist der XAML-Code, der im vorherigen Beispiel zugeordnet ist.

[!code-xaml[windowsruntimestreamextensions#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.windowsruntimestreamextensions/cs/blankpage.xaml#1)]

]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="windowsRuntimeStream" /> ist <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="AsStreamForRead">
      <MemberSignature Language="C#" Value="public static System.IO.Stream AsStreamForRead (this Windows.Storage.Streams.IInputStream windowsRuntimeStream, int bufferSize);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.Stream AsStreamForRead(class Windows.Storage.Streams.IInputStream windowsRuntimeStream, int32 bufferSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.WindowsRuntimeStreamExtensions.AsStreamForRead(Windows.Storage.Streams.IInputStream,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AsStreamForRead (windowsRuntimeStream As IInputStream, bufferSize As Integer) As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::IO::Stream ^ AsStreamForRead(Windows::Storage::Streams::IInputStream ^ windowsRuntimeStream, int bufferSize);" />
      <MemberSignature Language="F#" Value="static member AsStreamForRead : Windows.Storage.Streams.IInputStream * int -&gt; System.IO.Stream" Usage="System.IO.WindowsRuntimeStreamExtensions.AsStreamForRead (windowsRuntimeStream, bufferSize)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.WindowsRuntime</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="windowsRuntimeStream" Type="Windows.Storage.Streams.IInputStream" RefType="this" />
        <Parameter Name="bufferSize" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="windowsRuntimeStream">Das Windows-Runtime-<see xref="T:Windows.Storage.Streams.IInputStream" />-Objekt, das konvertiert werden soll.</param>
        <param name="bufferSize">Die Größe des Cookies in Bytes. Dieser Wert kann nicht negativ sein, aber er kann 0 (null) sein, um die Pufferung zu deaktivieren.</param>
        <summary>Konvertiert einen Eingabestream in der Windows-Runtime mithilfe der angegebenen Puffergröße in einen verwalteten Stream in .NET für Store-Apps für Windows 8.x.</summary>
        <returns>Die konvertierte Stream.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[
## Remarks

> [!NOTE]
> In Visual Basic und C#, Sie können diese Methode aufrufen, wie eine Instanzmethode auf ein beliebiges Objekt vom Typ <xref:System.IO.Stream>. Bei Verwendung der Syntax für Instanzenmethoden lassen Sie den ersten Parameter aus. Weitere Informationen finden Sie unter [Erweiterungsmethoden (Visual Basic)](~/docs/visual-basic/programming-guide/language-features/procedures/extension-methods.md) oder [Extension Methods (C# Programming Guide)](~/docs/csharp/programming-guide/classes-and-structs/extension-methods.md).

Sie können diese Methode verwenden, um eine Puffergröße zu geben, wenn Sie den Stream zu konvertieren. Um die Standardpuffergröße von 16.384 Bytes zu verwenden, verwenden die <xref:System.IO.WindowsRuntimeStreamExtensions.AsStreamForRead(Windows.Storage.Streams.IInputStream)> überladen.

In den meisten Fällen verbessert Pufferung die Leistung von Stream-Vorgänge aus. Sie können die Pufferung durch das Festlegen von deaktivieren `bufferSize` 0 (null), aber Sie sollten dies tun, nur, wenn Sie sicher sind, dass das Deaktivieren der Pufferung für Ihre Situation geeignet ist.

]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="windowsRuntimeStream" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="bufferSize" /> ist ein negativer Wert.</exception>
      </Docs>
    </Member>
    <Member MemberName="AsStreamForWrite">
      <MemberSignature Language="C#" Value="public static System.IO.Stream AsStreamForWrite (this Windows.Storage.Streams.IOutputStream windowsRuntimeStream);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.Stream AsStreamForWrite(class Windows.Storage.Streams.IOutputStream windowsRuntimeStream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.WindowsRuntimeStreamExtensions.AsStreamForWrite(Windows.Storage.Streams.IOutputStream)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AsStreamForWrite (windowsRuntimeStream As IOutputStream) As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::IO::Stream ^ AsStreamForWrite(Windows::Storage::Streams::IOutputStream ^ windowsRuntimeStream);" />
      <MemberSignature Language="F#" Value="static member AsStreamForWrite : Windows.Storage.Streams.IOutputStream -&gt; System.IO.Stream" Usage="System.IO.WindowsRuntimeStreamExtensions.AsStreamForWrite windowsRuntimeStream" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.WindowsRuntime</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="windowsRuntimeStream" Type="Windows.Storage.Streams.IOutputStream" RefType="this" />
      </Parameters>
      <Docs>
        <param name="windowsRuntimeStream">Das Windows-Runtime-<see xref="T:Windows.Storage.Streams.IOutputStream" />-Objekt, das konvertiert werden soll.</param>
        <summary>Konvertiert einen Ausgabestream in der Windows-Runtime in einen verwalteten Stream in .NET für Store-Apps für Windows 8.x.</summary>
        <returns>Die konvertierte Stream.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[
## Remarks

> [!NOTE]
> In Visual Basic und C#, Sie können diese Methode aufrufen, wie eine Instanzmethode auf ein beliebiges Objekt vom Typ <xref:System.IO.Stream>. Bei Verwendung der Syntax für Instanzenmethoden lassen Sie den ersten Parameter aus. Weitere Informationen finden Sie unter [Erweiterungsmethoden (Visual Basic)](~/docs/visual-basic/programming-guide/language-features/procedures/extension-methods.md) oder [Extension Methods (C# Programming Guide)](~/docs/csharp/programming-guide/classes-and-structs/extension-methods.md).

Eine Standardpuffergröße von 16.384 Bytes wird verwendet, wenn es sich bei den Stream zu konvertieren. Verwenden Sie zum Angeben einer anderen Puffergröße der <xref:System.IO.WindowsRuntimeStreamExtensions.AsStreamForWrite(Windows.Storage.Streams.IOutputStream,System.Int32)> überladen.

## Examples
Das folgende Beispiel zeigt, wie Sie mit der <xref:System.IO.WindowsRuntimeStreamExtensions.AsStreamForWrite%2A> und <xref:System.IO.WindowsRuntimeStreamExtensions.AsStreamForRead%2A> Methoden, um einen verwalteten Stream in und aus einem Stream in der Windows-Runtime konvertieren.

[!code-csharp[windowsruntimestreamextensions#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.windowsruntimestreamextensions/cs/blankpage.xaml.cs#2)]
[!code-vb[windowsruntimestreamextensions#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.windowsruntimestreamextensions/vb/blankpage.xaml.vb#2)]

Hier ist der XAML-Code, der im vorherigen Beispiel zugeordnet ist.

[!code-xaml[windowsruntimestreamextensions#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.windowsruntimestreamextensions/cs/blankpage.xaml#1)]

]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="windowsRuntimeStream" /> ist <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="AsStreamForWrite">
      <MemberSignature Language="C#" Value="public static System.IO.Stream AsStreamForWrite (this Windows.Storage.Streams.IOutputStream windowsRuntimeStream, int bufferSize);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.Stream AsStreamForWrite(class Windows.Storage.Streams.IOutputStream windowsRuntimeStream, int32 bufferSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.WindowsRuntimeStreamExtensions.AsStreamForWrite(Windows.Storage.Streams.IOutputStream,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AsStreamForWrite (windowsRuntimeStream As IOutputStream, bufferSize As Integer) As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::IO::Stream ^ AsStreamForWrite(Windows::Storage::Streams::IOutputStream ^ windowsRuntimeStream, int bufferSize);" />
      <MemberSignature Language="F#" Value="static member AsStreamForWrite : Windows.Storage.Streams.IOutputStream * int -&gt; System.IO.Stream" Usage="System.IO.WindowsRuntimeStreamExtensions.AsStreamForWrite (windowsRuntimeStream, bufferSize)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.WindowsRuntime</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="windowsRuntimeStream" Type="Windows.Storage.Streams.IOutputStream" RefType="this" />
        <Parameter Name="bufferSize" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="windowsRuntimeStream">Das Windows-Runtime-<see cref="T:Windows.Storage.Streams.IOutputStream" />-Objekt, das konvertiert werden soll.</param>
        <param name="bufferSize">Die Größe des Cookies in Bytes. Dieser Wert kann nicht negativ sein, aber er kann 0 (null) sein, um die Pufferung zu deaktivieren.</param>
        <summary>Konvertiert einen Ausgabestream in der Windows-Runtime mithilfe der angegebenen Puffergröße in einen verwalteten Stream in .NET für Microsoft Store-Apps.</summary>
        <returns>Die konvertierte Stream.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

> [!NOTE]
> In Visual Basic und C#, Sie können diese Methode aufrufen, wie eine Instanzmethode auf ein beliebiges Objekt vom Typ <xref:System.IO.Stream>. Bei Verwendung der Syntax für Instanzenmethoden lassen Sie den ersten Parameter aus. Weitere Informationen finden Sie unter [Erweiterungsmethoden (Visual Basic)](~/docs/visual-basic/programming-guide/language-features/procedures/extension-methods.md) oder [Extension Methods (C# Programming Guide)](~/docs/csharp/programming-guide/classes-and-structs/extension-methods.md).

Sie können diese Methode verwenden, um eine Puffergröße zu geben, wenn Sie den Stream zu konvertieren. Um die Standardpuffergröße von 16.384 Bytes zu verwenden, verwenden die <xref:System.IO.WindowsRuntimeStreamExtensions.AsStreamForWrite(Windows.Storage.Streams.IOutputStream)> überladen.

In den meisten Fällen verbessert Pufferung die Leistung von Stream-Vorgänge aus. Sie können die Pufferung durch das Festlegen von deaktivieren `bufferSize` 0 (null), aber Sie sollten dies tun, nur, wenn Sie sicher sind, dass das Deaktivieren der Pufferung für Ihre Situation geeignet ist.

]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="windowsRuntimeStream" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="bufferSize" /> ist ein negativer Wert.</exception>
      </Docs>
    </Member>
  </Members>
</Type>