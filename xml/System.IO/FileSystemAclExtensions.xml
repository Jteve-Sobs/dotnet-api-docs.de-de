<Type Name="FileSystemAclExtensions" FullName="System.IO.FileSystemAclExtensions">
  <Metadata><Meta Name="ms.openlocfilehash" Value="49df79e0a529957d05f47cc6f6e647ea9375918f" /><Meta Name="ms.sourcegitcommit" Value="1617f40ee47f4336ea7edb156fc31f853fadd853" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="08/13/2020" /><Meta Name="ms.locfileid" Value="88188302" /></Metadata><TypeSignature Language="C#" Value="public static class FileSystemAclExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit FileSystemAclExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.IO.FileSystemAclExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module FileSystemAclExtensions" />
  <TypeSignature Language="C++ CLI" Value="public ref class FileSystemAclExtensions abstract sealed" />
  <TypeSignature Language="F#" Value="type FileSystemAclExtensions = class" />
  <AssemblyInfo>
    <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
    <AssemblyVersion>4.0.3.0</AssemblyVersion>
    <AssemblyVersion>4.0.4.0</AssemblyVersion>
    <AssemblyVersion>4.0.5.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1">
      <AttributeName Language="C#">[System.Security.SecurityCritical]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Security.SecurityCritical&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Stellt Windows-spezifische statische Erweiterungsmethoden zum Bearbeiten von ACL-Sicherheitsattributen (Access Control List, Zugriffssteuerungsliste) für Dateien und Verzeichnisse bereit.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static void Create (this System.IO.DirectoryInfo directoryInfo, System.Security.AccessControl.DirectorySecurity directorySecurity);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Create(class System.IO.DirectoryInfo directoryInfo, class System.Security.AccessControl.DirectorySecurity directorySecurity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.FileSystemAclExtensions.Create(System.IO.DirectoryInfo,System.Security.AccessControl.DirectorySecurity)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub Create (directoryInfo As DirectoryInfo, directorySecurity As DirectorySecurity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void Create(System::IO::DirectoryInfo ^ directoryInfo, System::Security::AccessControl::DirectorySecurity ^ directorySecurity);" />
      <MemberSignature Language="F#" Value="static member Create : System.IO.DirectoryInfo * System.Security.AccessControl.DirectorySecurity -&gt; unit" Usage="System.IO.FileSystemAclExtensions.Create (directoryInfo, directorySecurity)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="directoryInfo" Type="System.IO.DirectoryInfo" RefType="this" Index="0" FrameworkAlternate="dotnet-plat-ext-3.1;netcore-3.1;dotnet-plat-ext-5.0;net-5.0" />
        <Parameter Name="directorySecurity" Type="System.Security.AccessControl.DirectorySecurity" Index="1" FrameworkAlternate="dotnet-plat-ext-3.1;netcore-3.1;dotnet-plat-ext-5.0;net-5.0" />
      </Parameters>
      <Docs>
        <param name="directoryInfo">Ein Verzeichnis, das noch nicht vorhanden ist und von der Methode erstellt wird.</param>
        <param name="directorySecurity">Die Zugriffssteuerung und Überwachungssicherheit für das Verzeichnis.</param>
        <summary>Erstellt ein neues Verzeichnis, wobei sichergestellt wird, dass es mit der angegebenen Verzeichnissicherheit erstellt wird. Wenn das Verzeichnis bereits vorhanden ist, wird nichts unternommen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

Diese Erweiterungsmethode wurde .net Core hinzugefügt, um die Funktionalität zu bieten, die von der [DirectoryInfo. Create (DirectorySecurity)](/dotnet/api/system.io.directoryinfo.create?view=netframework-4.8#System_IO_DirectoryInfo_Create_System_Security_AccessControl_DirectorySecurity_) -.NET Framework-Methode bereitgestellt wurde.

## Examples

Im folgenden Codebeispiel wird ein neues Verzeichnis im temporären Ordner des Benutzers mit den angegebenen Verzeichnis Sicherheits Attributen erstellt:

```csharp
using System.IO;
using System.Security.AccessControl;
using System.Security.Principal;

namespace ConsoleApp
{
    class Program
    {
        static void Main()
        {
            DirectorySecurity security = new DirectorySecurity();

            SecurityIdentifier identity = new SecurityIdentifier(WellKnownSidType.BuiltinUsersSid, null);
            FileSystemAccessRule accessRule = new FileSystemAccessRule(identity, FileSystemRights.FullControl, AccessControlType.Allow);
            security.AddAccessRule(accessRule);

            string path = Path.Combine(Path.GetTempPath(), "directoryToCreate");

            DirectoryInfo dirInfo = new DirectoryInfo(path);

            dirInfo.Create(security);
        }
    }
}
```

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="directoryInfo" /> oder <paramref name="directorySecurity" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.IO.DirectoryNotFoundException">Ein Teil des Pfads wurde nicht gefunden.</exception>
        <exception cref="T:System.UnauthorizedAccessException">Der Zugriff auf den Pfad wurde verweigert.</exception>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.IO.FileStream Create (this System.IO.FileInfo fileInfo, System.IO.FileMode mode, System.Security.AccessControl.FileSystemRights rights, System.IO.FileShare share, int bufferSize, System.IO.FileOptions options, System.Security.AccessControl.FileSecurity fileSecurity);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.FileStream Create(class System.IO.FileInfo fileInfo, valuetype System.IO.FileMode mode, valuetype System.Security.AccessControl.FileSystemRights rights, valuetype System.IO.FileShare share, int32 bufferSize, valuetype System.IO.FileOptions options, class System.Security.AccessControl.FileSecurity fileSecurity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.FileSystemAclExtensions.Create(System.IO.FileInfo,System.IO.FileMode,System.Security.AccessControl.FileSystemRights,System.IO.FileShare,System.Int32,System.IO.FileOptions,System.Security.AccessControl.FileSecurity)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Create (fileInfo As FileInfo, mode As FileMode, rights As FileSystemRights, share As FileShare, bufferSize As Integer, options As FileOptions, fileSecurity As FileSecurity) As FileStream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::IO::FileStream ^ Create(System::IO::FileInfo ^ fileInfo, System::IO::FileMode mode, System::Security::AccessControl::FileSystemRights rights, System::IO::FileShare share, int bufferSize, System::IO::FileOptions options, System::Security::AccessControl::FileSecurity ^ fileSecurity);" />
      <MemberSignature Language="F#" Value="static member Create : System.IO.FileInfo * System.IO.FileMode * System.Security.AccessControl.FileSystemRights * System.IO.FileShare * int * System.IO.FileOptions * System.Security.AccessControl.FileSecurity -&gt; System.IO.FileStream" Usage="System.IO.FileSystemAclExtensions.Create (fileInfo, mode, rights, share, bufferSize, options, fileSecurity)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.FileStream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileInfo" Type="System.IO.FileInfo" RefType="this" Index="0" FrameworkAlternate="dotnet-plat-ext-3.1;netcore-3.1;dotnet-plat-ext-5.0;net-5.0" />
        <Parameter Name="mode" Type="System.IO.FileMode" Index="1" FrameworkAlternate="dotnet-plat-ext-3.1;netcore-3.1;dotnet-plat-ext-5.0;net-5.0" />
        <Parameter Name="rights" Type="System.Security.AccessControl.FileSystemRights" Index="2" FrameworkAlternate="dotnet-plat-ext-3.1;netcore-3.1;dotnet-plat-ext-5.0;net-5.0" />
        <Parameter Name="share" Type="System.IO.FileShare" Index="3" FrameworkAlternate="dotnet-plat-ext-3.1;netcore-3.1;dotnet-plat-ext-5.0;net-5.0" />
        <Parameter Name="bufferSize" Type="System.Int32" Index="4" FrameworkAlternate="dotnet-plat-ext-3.1;netcore-3.1;dotnet-plat-ext-5.0;net-5.0" />
        <Parameter Name="options" Type="System.IO.FileOptions" Index="5" FrameworkAlternate="dotnet-plat-ext-3.1;netcore-3.1;dotnet-plat-ext-5.0;net-5.0" />
        <Parameter Name="fileSecurity" Type="System.Security.AccessControl.FileSecurity" Index="6" FrameworkAlternate="dotnet-plat-ext-3.1;netcore-3.1;dotnet-plat-ext-5.0;net-5.0" />
      </Parameters>
      <Docs>
        <param name="fileInfo">Eine Datei, die noch nicht vorhanden ist und von der Methode erstellt wird.</param>
        <param name="mode">Einer der Enumerationswerte, der angibt, wie die das Betriebssystem eine Datei öffnen soll.</param>
        <param name="rights">Einer der Enumerationswerte, der die beim Erstellen der Zugriffs- und Überwachungsregeln zu verwendenden Zugriffsrechte definiert.</param>
        <param name="share">Einer der Enumerationswerte für das Steuern der Zugriffsart von anderen Dateidatenstromobjekten auf dieselbe Datei.</param>
        <param name="bufferSize">Die Anzahl der für Lese- und Schreibvorgänge in die Datei gepufferten Bytes.</param>
        <param name="options">Einer der Enumerationswerte, der beschreibt, wie die Datei erstellt oder überschrieben werden soll.</param>
        <param name="fileSecurity">Ein Objekt, das die Zugriffssteuerung und die Überwachungssicherheit für die Datei bestimmt.</param>
        <summary>Erstellt einen neuen Datenstrom, wobei sichergestellt wird, dass er mit den angegebenen Eigenschaften und Sicherheitseinstellungen erstellt wird.</summary>
        <returns>Ein Dateidatenstrom für die neu erstellte Datei.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

Diese Erweiterungsmethode wurde .net Core hinzugefügt, um die Funktionalität zu bieten, die von bereitgestellt wurde:

- Der FileStream-.NET Framework Konstruktor [(String, FileMode, FileSystemRights, FileShare, Int32, FileOptions, FileSecurity)](/dotnet/api/system.io.filestream.-ctor?view=netframework-4.8#System_IO_FileStream__ctor_System_String_System_IO_FileMode_System_Security_AccessControl_FileSystemRights_System_IO_FileShare_System_Int32_System_IO_FileOptions_System_Security_AccessControl_FileSecurity_) .
- Die [Datei. Create (String, Int32, FileOptions, FileSecurity](/dotnet/api/system.io.file.create?view=netframework-4.8#System_IO_File_Create_System_String_System_Int32_System_IO_FileOptions_System_Security_AccessControl_FileSecurity_) .NET Framework-Methode.

## Examples

Im folgenden Codebeispiel wird eine neue Textdatei (mit der Standardpuffergröße 4096) im temporären Ordner des Benutzers mit den angegebenen Datei Sicherheits Attributen erstellt:

```csharp
using System.IO;
using System.Security.AccessControl;
using System.Security.Principal;

namespace ConsoleApp
{
    class Program
    {
        static void Main()
        {
            FileSecurity security = new FileSecurity();

            SecurityIdentifier identity = new SecurityIdentifier(WellKnownSidType.BuiltinUsersSid, null);
            FileSystemAccessRule accessRule = new FileSystemAccessRule(identity, FileSystemRights.FullControl, AccessControlType.Allow);
            security.AddAccessRule(accessRule);

            string path = Path.Combine(Path.GetTempPath(), "fileToCreate.txt");

            FileInfo fileInfo = new FileInfo(path);

            fileInfo.Create(FileMode.Create, FileSystemRights.FullControl, FileShare.Read, 4096, FileOptions.None, security);
        }
    }
}
```

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Die Kombination aus <paramref name="rights" /> und <paramref name="mode" /> ist ungültig.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="fileInfo" /> oder <paramref name="fileSecurity" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="mode" /> oder <paramref name="share" /> liegen außerhalb ihrer gültigen Aufzählungsbereiche.

- oder -

<paramref name="bufferSize" /> ist keine positive Zahl.</exception>
        <exception cref="T:System.IO.DirectoryNotFoundException">Ein Teil des Pfads wurde nicht gefunden.</exception>
        <exception cref="T:System.IO.IOException">E/A-Fehler</exception>
        <exception cref="T:System.UnauthorizedAccessException">Der Zugriff auf den Pfad wurde verweigert.</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateDirectory">
      <MemberSignature Language="C#" Value="public static System.IO.DirectoryInfo CreateDirectory (this System.Security.AccessControl.DirectorySecurity directorySecurity, string path);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.DirectoryInfo CreateDirectory(class System.Security.AccessControl.DirectorySecurity directorySecurity, string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.FileSystemAclExtensions.CreateDirectory(System.Security.AccessControl.DirectorySecurity,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function CreateDirectory (directorySecurity As DirectorySecurity, path As String) As DirectoryInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::IO::DirectoryInfo ^ CreateDirectory(System::Security::AccessControl::DirectorySecurity ^ directorySecurity, System::String ^ path);" />
      <MemberSignature Language="F#" Value="static member CreateDirectory : System.Security.AccessControl.DirectorySecurity * string -&gt; System.IO.DirectoryInfo" Usage="System.IO.FileSystemAclExtensions.CreateDirectory (directorySecurity, path)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.DirectoryInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="directorySecurity" Type="System.Security.AccessControl.DirectorySecurity" RefType="this" Index="0" FrameworkAlternate="dotnet-plat-ext-5.0;net-5.0" />
        <Parameter Name="path" Type="System.String" Index="1" FrameworkAlternate="dotnet-plat-ext-5.0;net-5.0" />
      </Parameters>
      <Docs>
        <param name="directorySecurity">Ein Objekt, das die Zugriffssteuerung und Überwachungssicherheit für das Verzeichnis bestimmt.</param>
        <param name="path">Der Pfad des zu erstellenden Verzeichnisses.</param>
        <summary>Erstellt ein Verzeichnis und gibt es zurück, wobei sichergestellt wird, dass es mit der angegebenen Verzeichnissicherheit erstellt wird. Wenn das Verzeichnis bereits vorhanden ist, wird das vorhandene Verzeichnis zurückgegeben.</summary>
        <returns>Ein Verzeichnisinformationsobjekt, das entweder ein erstelltes Verzeichnis mit den bereitgestellten Sicherheitseigenschaften oder das vorhandene Verzeichnis darstellt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

Diese Erweiterungsmethode wurde .net Core hinzugefügt, um die Funktionalität zu bieten, die von der .NET Framework-Methode bereitgestellt wurde `System.IO.Directory.CreateDirectory(System.String,System.Security.AccessControl.DirectorySecurity)` .

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="directorySecurity" /> oder <paramref name="path" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="path" /> ist leer.</exception>
        <exception cref="T:System.IO.DirectoryNotFoundException">Ein Teil des Pfads wurde nicht gefunden.</exception>
        <exception cref="T:System.UnauthorizedAccessException">Der Zugriff auf den Pfad wurde verweigert.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetAccessControl">
      <MemberSignature Language="C#" Value="public static System.Security.AccessControl.DirectorySecurity GetAccessControl (this System.IO.DirectoryInfo directoryInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Security.AccessControl.DirectorySecurity GetAccessControl(class System.IO.DirectoryInfo directoryInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.FileSystemAclExtensions.GetAccessControl(System.IO.DirectoryInfo)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetAccessControl (directoryInfo As DirectoryInfo) As DirectorySecurity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Security::AccessControl::DirectorySecurity ^ GetAccessControl(System::IO::DirectoryInfo ^ directoryInfo);" />
      <MemberSignature Language="F#" Value="static member GetAccessControl : System.IO.DirectoryInfo -&gt; System.Security.AccessControl.DirectorySecurity" Usage="System.IO.FileSystemAclExtensions.GetAccessControl directoryInfo" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.AccessControl.DirectorySecurity</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="directoryInfo" Type="System.IO.DirectoryInfo" RefType="this" />
      </Parameters>
      <Docs>
        <param name="directoryInfo">Das vorhandene Verzeichnis, aus dem die Sicherheitsinformationen abgerufen werden sollen.</param>
        <summary>Gibt die Sicherheitsinformationen eines Verzeichnisses zurück.</summary>
        <returns>Die Sicherheitsbeschreibungen aller Zugriffssteuerungsabschnitte des Verzeichnisses.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAccessControl">
      <MemberSignature Language="C#" Value="public static System.Security.AccessControl.FileSecurity GetAccessControl (this System.IO.FileInfo fileInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Security.AccessControl.FileSecurity GetAccessControl(class System.IO.FileInfo fileInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.FileSystemAclExtensions.GetAccessControl(System.IO.FileInfo)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetAccessControl (fileInfo As FileInfo) As FileSecurity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Security::AccessControl::FileSecurity ^ GetAccessControl(System::IO::FileInfo ^ fileInfo);" />
      <MemberSignature Language="F#" Value="static member GetAccessControl : System.IO.FileInfo -&gt; System.Security.AccessControl.FileSecurity" Usage="System.IO.FileSystemAclExtensions.GetAccessControl fileInfo" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.AccessControl.FileSecurity</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileInfo" Type="System.IO.FileInfo" RefType="this" />
      </Parameters>
      <Docs>
        <param name="fileInfo">Die Datei, aus der die Sicherheitsinformationen abgerufen werden sollen.</param>
        <summary>Gibt die Sicherheitsinformationen einer Datei zurück.</summary>
        <returns>Die Sicherheitsbeschreibungen aller Zugriffssteuerungsabschnitte der Datei.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAccessControl">
      <MemberSignature Language="C#" Value="public static System.Security.AccessControl.FileSecurity GetAccessControl (this System.IO.FileStream fileStream);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Security.AccessControl.FileSecurity GetAccessControl(class System.IO.FileStream fileStream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.FileSystemAclExtensions.GetAccessControl(System.IO.FileStream)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetAccessControl (fileStream As FileStream) As FileSecurity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Security::AccessControl::FileSecurity ^ GetAccessControl(System::IO::FileStream ^ fileStream);" />
      <MemberSignature Language="F#" Value="static member GetAccessControl : System.IO.FileStream -&gt; System.Security.AccessControl.FileSecurity" Usage="System.IO.FileSystemAclExtensions.GetAccessControl fileStream" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.AccessControl.FileSecurity</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileStream" Type="System.IO.FileStream" RefType="this" />
      </Parameters>
      <Docs>
        <param name="fileStream">Eine vorhandene Datei, aus der die Sicherheitsinformationen abgerufen werden sollen.</param>
        <summary>Gibt die Sicherheitsinformationen einer Datei zurück.</summary>
        <returns>Die Sicherheitsbeschreibungen aller Zugriffssteuerungsabschnitte der Datei.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="fileStream" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.ObjectDisposedException">Der Dateidatenstrom ist geschlossen.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetAccessControl">
      <MemberSignature Language="C#" Value="public static System.Security.AccessControl.DirectorySecurity GetAccessControl (this System.IO.DirectoryInfo directoryInfo, System.Security.AccessControl.AccessControlSections includeSections);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Security.AccessControl.DirectorySecurity GetAccessControl(class System.IO.DirectoryInfo directoryInfo, valuetype System.Security.AccessControl.AccessControlSections includeSections) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.FileSystemAclExtensions.GetAccessControl(System.IO.DirectoryInfo,System.Security.AccessControl.AccessControlSections)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetAccessControl (directoryInfo As DirectoryInfo, includeSections As AccessControlSections) As DirectorySecurity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Security::AccessControl::DirectorySecurity ^ GetAccessControl(System::IO::DirectoryInfo ^ directoryInfo, System::Security::AccessControl::AccessControlSections includeSections);" />
      <MemberSignature Language="F#" Value="static member GetAccessControl : System.IO.DirectoryInfo * System.Security.AccessControl.AccessControlSections -&gt; System.Security.AccessControl.DirectorySecurity" Usage="System.IO.FileSystemAclExtensions.GetAccessControl (directoryInfo, includeSections)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.AccessControl.DirectorySecurity</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="directoryInfo" Type="System.IO.DirectoryInfo" RefType="this" />
        <Parameter Name="includeSections" Type="System.Security.AccessControl.AccessControlSections" />
      </Parameters>
      <Docs>
        <param name="directoryInfo">Ein vorhandenes Verzeichnis, aus dem die Sicherheitsinformationen abgerufen werden sollen.</param>
        <param name="includeSections">Die gewünschten Zugriffssteuerungsabschnitte, die abgerufen werden sollen.</param>
        <summary>Gibt die Sicherheitsinformationen eines Verzeichnisses zurück.</summary>
        <returns>Die Sicherheitsbeschreibungen der angegebenen Zugriffssteuerungsabschnitte des Verzeichnisses.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAccessControl">
      <MemberSignature Language="C#" Value="public static System.Security.AccessControl.FileSecurity GetAccessControl (this System.IO.FileInfo fileInfo, System.Security.AccessControl.AccessControlSections includeSections);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Security.AccessControl.FileSecurity GetAccessControl(class System.IO.FileInfo fileInfo, valuetype System.Security.AccessControl.AccessControlSections includeSections) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.FileSystemAclExtensions.GetAccessControl(System.IO.FileInfo,System.Security.AccessControl.AccessControlSections)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetAccessControl (fileInfo As FileInfo, includeSections As AccessControlSections) As FileSecurity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Security::AccessControl::FileSecurity ^ GetAccessControl(System::IO::FileInfo ^ fileInfo, System::Security::AccessControl::AccessControlSections includeSections);" />
      <MemberSignature Language="F#" Value="static member GetAccessControl : System.IO.FileInfo * System.Security.AccessControl.AccessControlSections -&gt; System.Security.AccessControl.FileSecurity" Usage="System.IO.FileSystemAclExtensions.GetAccessControl (fileInfo, includeSections)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.AccessControl.FileSecurity</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileInfo" Type="System.IO.FileInfo" RefType="this" />
        <Parameter Name="includeSections" Type="System.Security.AccessControl.AccessControlSections" />
      </Parameters>
      <Docs>
        <param name="fileInfo">Eine vorhandene Datei, aus der die Sicherheitsinformationen abgerufen werden sollen.</param>
        <param name="includeSections">Die gewünschten Zugriffssteuerungsabschnitte, die aus der Datei abgerufen werden sollen.</param>
        <summary>Gibt die Sicherheitsinformationen einer Datei zurück.</summary>
        <returns>Die Sicherheitsbeschreibungen der angegebenen Zugriffssteuerungsabschnitte der Datei.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetAccessControl">
      <MemberSignature Language="C#" Value="public static void SetAccessControl (this System.IO.DirectoryInfo directoryInfo, System.Security.AccessControl.DirectorySecurity directorySecurity);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetAccessControl(class System.IO.DirectoryInfo directoryInfo, class System.Security.AccessControl.DirectorySecurity directorySecurity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.FileSystemAclExtensions.SetAccessControl(System.IO.DirectoryInfo,System.Security.AccessControl.DirectorySecurity)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub SetAccessControl (directoryInfo As DirectoryInfo, directorySecurity As DirectorySecurity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void SetAccessControl(System::IO::DirectoryInfo ^ directoryInfo, System::Security::AccessControl::DirectorySecurity ^ directorySecurity);" />
      <MemberSignature Language="F#" Value="static member SetAccessControl : System.IO.DirectoryInfo * System.Security.AccessControl.DirectorySecurity -&gt; unit" Usage="System.IO.FileSystemAclExtensions.SetAccessControl (directoryInfo, directorySecurity)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="directoryInfo" Type="System.IO.DirectoryInfo" RefType="this" />
        <Parameter Name="directorySecurity" Type="System.Security.AccessControl.DirectorySecurity" />
      </Parameters>
      <Docs>
        <param name="directoryInfo">Ein vorhandenes Verzeichnis.</param>
        <param name="directorySecurity">Die auf das Verzeichnis anzuwendenden Sicherheitsinformationen.</param>
        <summary>Ändert die Sicherheitsattribute eines vorhandenen Verzeichnisses.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="directorySecurity" /> ist <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="SetAccessControl">
      <MemberSignature Language="C#" Value="public static void SetAccessControl (this System.IO.FileInfo fileInfo, System.Security.AccessControl.FileSecurity fileSecurity);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetAccessControl(class System.IO.FileInfo fileInfo, class System.Security.AccessControl.FileSecurity fileSecurity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.FileSystemAclExtensions.SetAccessControl(System.IO.FileInfo,System.Security.AccessControl.FileSecurity)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub SetAccessControl (fileInfo As FileInfo, fileSecurity As FileSecurity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void SetAccessControl(System::IO::FileInfo ^ fileInfo, System::Security::AccessControl::FileSecurity ^ fileSecurity);" />
      <MemberSignature Language="F#" Value="static member SetAccessControl : System.IO.FileInfo * System.Security.AccessControl.FileSecurity -&gt; unit" Usage="System.IO.FileSystemAclExtensions.SetAccessControl (fileInfo, fileSecurity)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileInfo" Type="System.IO.FileInfo" RefType="this" />
        <Parameter Name="fileSecurity" Type="System.Security.AccessControl.FileSecurity" />
      </Parameters>
      <Docs>
        <param name="fileInfo">Eine vorhandene Datei.</param>
        <param name="fileSecurity">Die auf die Datei anzuwendenden Sicherheitsinformationen.</param>
        <summary>Ändert die Sicherheitsattribute einer vorhandenen Datei.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="fileSecurity" /> ist <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="SetAccessControl">
      <MemberSignature Language="C#" Value="public static void SetAccessControl (this System.IO.FileStream fileStream, System.Security.AccessControl.FileSecurity fileSecurity);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetAccessControl(class System.IO.FileStream fileStream, class System.Security.AccessControl.FileSecurity fileSecurity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.FileSystemAclExtensions.SetAccessControl(System.IO.FileStream,System.Security.AccessControl.FileSecurity)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub SetAccessControl (fileStream As FileStream, fileSecurity As FileSecurity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void SetAccessControl(System::IO::FileStream ^ fileStream, System::Security::AccessControl::FileSecurity ^ fileSecurity);" />
      <MemberSignature Language="F#" Value="static member SetAccessControl : System.IO.FileStream * System.Security.AccessControl.FileSecurity -&gt; unit" Usage="System.IO.FileSystemAclExtensions.SetAccessControl (fileStream, fileSecurity)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileStream" Type="System.IO.FileStream" RefType="this" />
        <Parameter Name="fileSecurity" Type="System.Security.AccessControl.FileSecurity" />
      </Parameters>
      <Docs>
        <param name="fileStream">Eine vorhandene Datei.</param>
        <param name="fileSecurity">Die auf die Datei anzuwendenden Sicherheitsinformationen.</param>
        <summary>Ändert die Sicherheitsattribute einer vorhandenen Datei.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="fileStream" /> oder <paramref name="fileSecurity" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.ObjectDisposedException">Der Dateidatenstrom ist geschlossen.</exception>
      </Docs>
    </Member>
  </Members>
</Type>
