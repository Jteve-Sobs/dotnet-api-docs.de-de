<Type Name="EnumerationOptions" FullName="System.IO.EnumerationOptions">
  <Metadata><Meta Name="ms.openlocfilehash" Value="d096a9c01a62a35c9165cda5d3b3c44934291e8b" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70693502" /></Metadata><TypeSignature Language="C#" Value="public class EnumerationOptions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit EnumerationOptions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.IO.EnumerationOptions" />
  <TypeSignature Language="VB.NET" Value="Public Class EnumerationOptions" />
  <TypeSignature Language="C++ CLI" Value="public ref class EnumerationOptions" />
  <TypeSignature Language="F#" Value="type EnumerationOptions = class" />
  <AssemblyInfo>
    <AssemblyName>System.IO.FileSystem</AssemblyName>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EnumerationOptions ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.EnumerationOptions.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EnumerationOptions();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.IO.EnumerationOptions" />-Klasse mit den empfohlenen Standardoptionen.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AttributesToSkip">
      <MemberSignature Language="C#" Value="public System.IO.FileAttributes AttributesToSkip { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.IO.FileAttributes AttributesToSkip" />
      <MemberSignature Language="DocId" Value="P:System.IO.EnumerationOptions.AttributesToSkip" />
      <MemberSignature Language="VB.NET" Value="Public Property AttributesToSkip As FileAttributes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::FileAttributes AttributesToSkip { System::IO::FileAttributes get(); void set(System::IO::FileAttributes value); };" />
      <MemberSignature Language="F#" Value="member this.AttributesToSkip : System.IO.FileAttributes with get, set" Usage="System.IO.EnumerationOptions.AttributesToSkip" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.FileAttributes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die zu überspringenden Attribute ab oder legt sie fest. Der Standardwert <c>FileAttributes.Hidden | FileAttributes.System</c>.</summary>
        <value>Die zu über springenden Attribute.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BufferSize">
      <MemberSignature Language="C#" Value="public int BufferSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 BufferSize" />
      <MemberSignature Language="DocId" Value="P:System.IO.EnumerationOptions.BufferSize" />
      <MemberSignature Language="VB.NET" Value="Public Property BufferSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int BufferSize { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.BufferSize : int with get, set" Usage="System.IO.EnumerationOptions.BufferSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die vorgeschlagene Puffergröße in Bytes ab oder legt Sie fest. Der Standardwert ist 0 (kein Vorschlag).</summary>
        <value>Die Puffergröße.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

Nicht alle Plattformen verwenden vom Benutzer zugewiesene Puffer, und einige erfordern entweder fixierte Puffer oder einen Puffer, der über ausreichend Speicherplatz verfügt, um ein vollständiges Ergebnis zurückzugeben. Ein Szenario, in dem diese Option nützlich ist, ist die Aufzählung von Remote Freigaben unter Windows. Ein großer Puffer kann zu einer besseren Leistung führen, da mehr Ergebnisse über das Netzwerk (z. b. über eine Netzwerkfreigabe) als Batch verarbeitet werden können.
Ein "großer" Puffer ist beispielsweise 16K. Der typische Wert ist 4K.
            
Die vorgeschlagene Puffergröße wird nicht verwendet, wenn Sie für die systemeigenen APIs auf der aktuellen Plattform keine Bedeutung hat oder wenn Sie zu klein wäre, um wenigstens ein einzelnes Ergebnis zu erhalten.

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IgnoreInaccessible">
      <MemberSignature Language="C#" Value="public bool IgnoreInaccessible { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IgnoreInaccessible" />
      <MemberSignature Language="DocId" Value="P:System.IO.EnumerationOptions.IgnoreInaccessible" />
      <MemberSignature Language="VB.NET" Value="Public Property IgnoreInaccessible As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IgnoreInaccessible { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IgnoreInaccessible : bool with get, set" Usage="System.IO.EnumerationOptions.IgnoreInaccessible" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob Dateien oder Verzeichnisse übersprungen werden sollen, wenn der Zugriff verweigert wird (z.B. <see cref="T:System.UnauthorizedAccessException" /> oder <see cref="T:System.Security.SecurityException" />), oder legt diesen Wert fest. Die Standardeinstellung ist <see langword="true" />.</summary>
        <value><see langword="true" />zum Überspringen von Dateien oder Verzeichnissen, die sich in der Liste befinden. <see langword="false" />andernfalls.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MatchCasing">
      <MemberSignature Language="C#" Value="public System.IO.MatchCasing MatchCasing { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.IO.MatchCasing MatchCasing" />
      <MemberSignature Language="DocId" Value="P:System.IO.EnumerationOptions.MatchCasing" />
      <MemberSignature Language="VB.NET" Value="Public Property MatchCasing As MatchCasing" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::MatchCasing MatchCasing { System::IO::MatchCasing get(); void set(System::IO::MatchCasing value); };" />
      <MemberSignature Language="F#" Value="member this.MatchCasing : System.IO.MatchCasing with get, set" Usage="System.IO.EnumerationOptions.MatchCasing" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.MatchCasing</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft das Verhalten bezüglich Groß-/Kleinschreibung ab oder legt es fest.</summary>
        <value>Einer der Enumerationswerte, der das Verhalten der Groß-/Kleinschreibung angibt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

Bei APIs, die das Angeben eines Übereinstimmungs Ausdrucks zulassen, können Sie mit dieser Eigenschaft das Verhalten für die Groß-/Kleinschreibung angeben
Standardmäßig werden Platt Form Standardwerte abgeglichen, die aus der Unterscheidung nach Groß-/Kleinschreibung des temporären Ordners abgeleitet werden.

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MatchType">
      <MemberSignature Language="C#" Value="public System.IO.MatchType MatchType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.IO.MatchType MatchType" />
      <MemberSignature Language="DocId" Value="P:System.IO.EnumerationOptions.MatchType" />
      <MemberSignature Language="VB.NET" Value="Public Property MatchType As MatchType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::MatchType MatchType { System::IO::MatchType get(); void set(System::IO::MatchType value); };" />
      <MemberSignature Language="F#" Value="member this.MatchType : System.IO.MatchType with get, set" Usage="System.IO.EnumerationOptions.MatchType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.MatchType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Übereinstimmungstyp ab oder legt ihn fest.</summary>
        <value>Einer der Enumerationswerte, der den Übereinstimmungstyp angibt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

Für APIs, die das Angeben eines Vergleichs Ausdrucks zulassen, können Sie mit dieser Eigenschaft angeben, wie der Übereinstimmungs Ausdruck interpretiert werden soll.
Der Standardwert ist eine einfache Übereinstimmung, bei der ' * ' immer 0 oder mehr Zeichen und '? ' ein einzelnes Zeichen ist.

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RecurseSubdirectories">
      <MemberSignature Language="C#" Value="public bool RecurseSubdirectories { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RecurseSubdirectories" />
      <MemberSignature Language="DocId" Value="P:System.IO.EnumerationOptions.RecurseSubdirectories" />
      <MemberSignature Language="VB.NET" Value="Public Property RecurseSubdirectories As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool RecurseSubdirectories { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.RecurseSubdirectories : bool with get, set" Usage="System.IO.EnumerationOptions.RecurseSubdirectories" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob beim Aufzählen Unterverzeichnisse rekursiv durchlaufen werden sollen, oder legt diesen Wert fest. Die Standardeinstellung ist <see langword="false" />.</summary>
        <value><see langword="true" />, wenn in die Unterverzeichnisse rekursiert werden sollen. <see langword="false" />andernfalls.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReturnSpecialDirectories">
      <MemberSignature Language="C#" Value="public bool ReturnSpecialDirectories { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ReturnSpecialDirectories" />
      <MemberSignature Language="DocId" Value="P:System.IO.EnumerationOptions.ReturnSpecialDirectories" />
      <MemberSignature Language="VB.NET" Value="Public Property ReturnSpecialDirectories As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ReturnSpecialDirectories { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ReturnSpecialDirectories : bool with get, set" Usage="System.IO.EnumerationOptions.ReturnSpecialDirectories" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob die besonderen Verzeichniseinträge „.“ und „..“ zurückgegeben werden sollen, oder legt diesen Wert fest.</summary>
        <value><see langword="true" />So geben Sie die speziellen Verzeichniseinträge "." und ".." zurück <see langword="false" />andernfalls.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
