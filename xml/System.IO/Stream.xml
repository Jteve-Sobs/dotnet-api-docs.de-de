<Type Name="Stream" FullName="System.IO.Stream">
  <TypeSignature Language="C#" Value="public abstract class Stream : MarshalByRefObject, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract serializable beforefieldinit Stream extends System.MarshalByRefObject implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.IO.Stream" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class Stream&#xA;Inherits MarshalByRefObject&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class Stream abstract : MarshalByRefObject, IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.IO</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
    <BaseTypeName FrameworkAlternate="netframework-4.5">System.MarshalByRefObject</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="dfd93-101">Stellt eine allgemeine Ansicht einer Folge von Bytes bereit.</span><span class="sxs-lookup"><span data-stu-id="dfd93-101">Provides a generic view of a sequence of bytes.</span></span> <span data-ttu-id="dfd93-102">Dies ist eine abstrakte Klasse.</span><span class="sxs-lookup"><span data-stu-id="dfd93-102">This is an abstract class.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfd93-103"><xref:System.IO.Stream> ist die abstrakte Basisklasse aller Streams.</span><span class="sxs-lookup"><span data-stu-id="dfd93-103"><xref:System.IO.Stream> is the abstract base class of all streams.</span></span> <span data-ttu-id="dfd93-104">Ein Stream (Datenstream) ist eine Abstraktion einer Folge von Bytes, beispielsweise eine Datei, ein Eingabe-/Ausgabegerät, eine Pipe für die Kommunikation zwischen Prozessen oder ein TCP/IP-Socket.</span><span class="sxs-lookup"><span data-stu-id="dfd93-104">A stream is an abstraction of a sequence of bytes, such as a file, an input/output device, an inter-process communication pipe, or a TCP/IP socket.</span></span> <span data-ttu-id="dfd93-105">Die <xref:System.IO.Stream> Klasse und abgeleitete Klassen stellen eine allgemeine Ansicht dieser verschiedenen Gruppentypen Eingabe-und Ausgabetypen und sodass Programmierer sich nicht den Einzelheiten des Betriebssystems und der zugrunde liegenden Geräte.</span><span class="sxs-lookup"><span data-stu-id="dfd93-105">The <xref:System.IO.Stream> class and its derived classes provide a generic view of these different types of input and output, and isolate the programmer from the specific details of the operating system and the underlying devices.</span></span>  
  
 <span data-ttu-id="dfd93-106">Streams umfassen drei grundlegende Vorgänge:</span><span class="sxs-lookup"><span data-stu-id="dfd93-106">Streams involve three fundamental operations:</span></span>  
  
-   <span data-ttu-id="dfd93-107">Sie können aus Streams lesen.</span><span class="sxs-lookup"><span data-stu-id="dfd93-107">You can read from streams.</span></span> <span data-ttu-id="dfd93-108">Lesen wird die Übertragung von Daten aus einem Stream in eine Datenstruktur, z. B. ein Array von Bytes.</span><span class="sxs-lookup"><span data-stu-id="dfd93-108">Reading is the transfer of data from a stream into a data structure, such as an array of bytes.</span></span>  
  
-   <span data-ttu-id="dfd93-109">Sie können in Streams schreiben.</span><span class="sxs-lookup"><span data-stu-id="dfd93-109">You can write to streams.</span></span> <span data-ttu-id="dfd93-110">Schreiben wird die Übertragung von Daten aus einer Datenstruktur in einen Stream.</span><span class="sxs-lookup"><span data-stu-id="dfd93-110">Writing is the transfer of data from a data structure into a stream.</span></span>  
  
-   <span data-ttu-id="dfd93-111">Datenströme können Suchvorgänge unterstützt.</span><span class="sxs-lookup"><span data-stu-id="dfd93-111">Streams can support seeking.</span></span> <span data-ttu-id="dfd93-112">Suchvorgänge bezieht sich auf Abfragen und ändern die aktuelle Position im Stream.</span><span class="sxs-lookup"><span data-stu-id="dfd93-112">Seeking refers to querying and modifying the current position within a stream.</span></span> <span data-ttu-id="dfd93-113">Seek-Funktion hängt von der Art der Sicherungsspeicher hat ein Datenstrom.</span><span class="sxs-lookup"><span data-stu-id="dfd93-113">Seek capability depends on the kind of backing store a stream has.</span></span> <span data-ttu-id="dfd93-114">Klicken Sie z. B. Netzwerkstreams unterstützen keine einheitliche eine aktuelle Position, und daher in der Regel unterstützen keine Suchvorgänge.</span><span class="sxs-lookup"><span data-stu-id="dfd93-114">For example, network streams have no unified concept of a current position, and therefore typically do not support seeking.</span></span>  
  
 <span data-ttu-id="dfd93-115">Einige der häufiger häufig verwendete Streams, die von erben <xref:System.IO.Stream> sind <xref:System.IO.FileStream>, und <xref:System.IO.MemoryStream>.</span><span class="sxs-lookup"><span data-stu-id="dfd93-115">Some of the more commonly used streams that inherit from <xref:System.IO.Stream> are <xref:System.IO.FileStream>, and <xref:System.IO.MemoryStream>.</span></span>  
  
 <span data-ttu-id="dfd93-116">Streams möglicherweise nur einige dieser Funktionen unterstützen, abhängig von der zugrunde liegenden Datenquelle oder vom Repository.</span><span class="sxs-lookup"><span data-stu-id="dfd93-116">Depending on the underlying data source or repository, streams might support only some of these capabilities.</span></span> <span data-ttu-id="dfd93-117">Sie können einen Datenstrom, damit seine Funktionen mithilfe von Abfragen die <xref:System.IO.Stream.CanRead%2A>, <xref:System.IO.Stream.CanWrite%2A>, und <xref:System.IO.Stream.CanSeek%2A> Eigenschaften der <xref:System.IO.Stream> Klasse.</span><span class="sxs-lookup"><span data-stu-id="dfd93-117">You can query a stream for its capabilities by using the <xref:System.IO.Stream.CanRead%2A>, <xref:System.IO.Stream.CanWrite%2A>, and <xref:System.IO.Stream.CanSeek%2A> properties of the <xref:System.IO.Stream> class.</span></span>  
  
 <span data-ttu-id="dfd93-118">Die <xref:System.IO.Stream.Read%2A> und <xref:System.IO.Stream.Write%2A> Methoden lesen und Schreiben von Daten in einer Vielzahl von Formaten.</span><span class="sxs-lookup"><span data-stu-id="dfd93-118">The <xref:System.IO.Stream.Read%2A> and <xref:System.IO.Stream.Write%2A> methods read and write data in a variety of formats.</span></span> <span data-ttu-id="dfd93-119">Verwenden Sie für Datenströme, die Suchvorgänge unterstützt, die <xref:System.IO.Stream.Seek%2A> und <xref:System.IO.Stream.SetLength%2A> Methoden und die <xref:System.IO.Stream.Position%2A> und <xref:System.IO.Stream.Length%2A> Eigenschaften Abfragen und ändern die aktuelle Position und Länge eines Streams.</span><span class="sxs-lookup"><span data-stu-id="dfd93-119">For streams that support seeking, use the <xref:System.IO.Stream.Seek%2A> and <xref:System.IO.Stream.SetLength%2A> methods and the <xref:System.IO.Stream.Position%2A> and <xref:System.IO.Stream.Length%2A> properties to query and modify the current position and length of a stream.</span></span>  
  
 <span data-ttu-id="dfd93-120">Dieser Typ implementiert die <xref:System.IDisposable> Schnittstelle.</span><span class="sxs-lookup"><span data-stu-id="dfd93-120">This type implements the <xref:System.IDisposable> interface.</span></span> <span data-ttu-id="dfd93-121">Wenn Sie mithilfe des Typs abgeschlossen haben, sollten Sie es entweder direkt oder indirekt freigeben.</span><span class="sxs-lookup"><span data-stu-id="dfd93-121">When you have finished using the type, you should dispose of it either directly or indirectly.</span></span> <span data-ttu-id="dfd93-122">Aufrufen, um den Typ direkt zu verwerfen, dessen <xref:System.IDisposable.Dispose%2A> Methode in einer `try` / `catch` Block.</span><span class="sxs-lookup"><span data-stu-id="dfd93-122">To dispose of the type directly, call its <xref:System.IDisposable.Dispose%2A> method in a `try`/`catch` block.</span></span> <span data-ttu-id="dfd93-123">Um es indirekt freizugeben, verwenden Sie ein Sprachkonstrukt z. B. `using` (in c#) oder `Using` (in Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="dfd93-123">To dispose of it indirectly, use a language construct such as `using` (in C#) or `Using` (in Visual Basic).</span></span> <span data-ttu-id="dfd93-124">Weitere Informationen finden Sie im Abschnitt "Verwenden eines Objekts, implementiert IDisposable" in der <xref:System.IDisposable> Thema zur Schnittstelle.</span><span class="sxs-lookup"><span data-stu-id="dfd93-124">For more information, see the "Using an Object that Implements IDisposable" section in the <xref:System.IDisposable> interface topic.</span></span>  
  
 <span data-ttu-id="dfd93-125">Freigeben einer <xref:System.IO.Stream> Objekt Leert alle gepufferten Daten, und im Wesentlichen Ruft die <xref:System.IO.Stream.Flush%2A> Methode für Sie.</span><span class="sxs-lookup"><span data-stu-id="dfd93-125">Disposing a <xref:System.IO.Stream> object flushes any buffered data, and essentially calls the <xref:System.IO.Stream.Flush%2A> method for you.</span></span> <span data-ttu-id="dfd93-126"><xref:System.IO.Stream.Dispose%2A> Betriebssystem-Ressourcen wie Dateihandles, Netzwerkverbindungen oder Speicher für interne Pufferung verwendet auch frei.</span><span class="sxs-lookup"><span data-stu-id="dfd93-126"><xref:System.IO.Stream.Dispose%2A> also releases operating system resources such as file handles, network connections, or memory used for any internal buffering.</span></span> <span data-ttu-id="dfd93-127">Die <xref:System.IO.BufferedStream> -Klasse bietet die Möglichkeit, einen anderen Stream um verbessern lesen und schreiben die Leistung einen gepufferten Datenstrom umgebrochen.</span><span class="sxs-lookup"><span data-stu-id="dfd93-127">The <xref:System.IO.BufferedStream> class provides the capability of wrapping a buffered stream around another stream in order to improve read and write performance.</span></span>  
  
 <span data-ttu-id="dfd93-128">Beginnend mit der [!INCLUDE[net_v45](~/includes/net-v45-md.md)]die <xref:System.IO.Stream> Klasse enthält asynchrone Methoden, um asynchrone Vorgänge zu vereinfachen.</span><span class="sxs-lookup"><span data-stu-id="dfd93-128">Starting with the [!INCLUDE[net_v45](~/includes/net-v45-md.md)], the <xref:System.IO.Stream> class includes async methods to simplify asynchronous operations.</span></span> <span data-ttu-id="dfd93-129">Eine asynchrone Methode enthält `Async` in ihrem Namen, z. B. <xref:System.IO.Stream.ReadAsync%2A>, <xref:System.IO.Stream.WriteAsync%2A>, <xref:System.IO.Stream.CopyToAsync%2A>, und <xref:System.IO.Stream.FlushAsync%2A>.</span><span class="sxs-lookup"><span data-stu-id="dfd93-129">An async method contains `Async` in its name, such as <xref:System.IO.Stream.ReadAsync%2A>, <xref:System.IO.Stream.WriteAsync%2A>, <xref:System.IO.Stream.CopyToAsync%2A>, and <xref:System.IO.Stream.FlushAsync%2A>.</span></span> <span data-ttu-id="dfd93-130">Diese Methoden können Sie ressourcenintensive e/a-Vorgänge ausführen, ohne den Hauptthread zu blockieren.</span><span class="sxs-lookup"><span data-stu-id="dfd93-130">These methods enable you to perform resource-intensive I/O operations without blocking the main thread.</span></span> <span data-ttu-id="dfd93-131">Diese Überlegungen zur Leistung sind insbesondere in einer [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)]-App oder [!INCLUDE[desktop_appname](~/includes/desktop-appname-md.md)]-App wichtig, bei der ein zeitaufwendiger Streamvorgang den UI-Thread blockieren kann und es dann den Anschein hat, dass Ihre App nicht funktioniert.</span><span class="sxs-lookup"><span data-stu-id="dfd93-131">This performance consideration is particularly important in a [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] app or [!INCLUDE[desktop_appname](~/includes/desktop-appname-md.md)] app where a time-consuming stream operation can block the UI thread and make your app appear as if it is not working.</span></span> <span data-ttu-id="dfd93-132">Die Async-Methoden werden verwendet, in Verbindung mit der `async` und `await` in Visual Basic und C#-Schlüsselwörter.</span><span class="sxs-lookup"><span data-stu-id="dfd93-132">The async methods are used in conjunction with the `async` and `await` keywords in Visual Basic and C#.</span></span>  
  
 <span data-ttu-id="dfd93-133">Bei der Verwendung in einem [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] app <xref:System.IO.Stream> enthält zwei Erweiterungsmethoden: <xref:System.IO.WindowsRuntimeStreamExtensions.AsInputStream%2A> und <xref:System.IO.WindowsRuntimeStreamExtensions.AsOutputStream%2A>.</span><span class="sxs-lookup"><span data-stu-id="dfd93-133">When used in a [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] app, <xref:System.IO.Stream> includes two extension methods: <xref:System.IO.WindowsRuntimeStreamExtensions.AsInputStream%2A> and <xref:System.IO.WindowsRuntimeStreamExtensions.AsOutputStream%2A>.</span></span> <span data-ttu-id="dfd93-134">Diese Methoden wandeln eine <xref:System.IO.Stream> Objekt in einen Stream in den [!INCLUDE[wrt](~/includes/wrt-md.md)].</span><span class="sxs-lookup"><span data-stu-id="dfd93-134">These methods convert a <xref:System.IO.Stream> object to a stream in the [!INCLUDE[wrt](~/includes/wrt-md.md)].</span></span> <span data-ttu-id="dfd93-135">Sie können auch einen Stream in Konvertieren der [!INCLUDE[wrt](~/includes/wrt-md.md)] zu eine <xref:System.IO.Stream> -Objekt mithilfe der <xref:System.IO.WindowsRuntimeStreamExtensions.AsStreamForRead%2A> und <xref:System.IO.WindowsRuntimeStreamExtensions.AsStreamForWrite%2A> Methoden.</span><span class="sxs-lookup"><span data-stu-id="dfd93-135">You can also convert a stream in the [!INCLUDE[wrt](~/includes/wrt-md.md)] to a <xref:System.IO.Stream> object by using the <xref:System.IO.WindowsRuntimeStreamExtensions.AsStreamForRead%2A> and <xref:System.IO.WindowsRuntimeStreamExtensions.AsStreamForWrite%2A> methods.</span></span> <span data-ttu-id="dfd93-136">Weitere Informationen finden Sie unter [wie: Konvertieren zwischen .NET Framework-Streams und Windows-Runtime-Streams](~/docs/standard/io/how-to-convert-between-dotnet-streams-and-winrt-streams.md)</span><span class="sxs-lookup"><span data-stu-id="dfd93-136">For more information, see [How to: Convert Between .NET Framework Streams and Windows Runtime Streams](~/docs/standard/io/how-to-convert-between-dotnet-streams-and-winrt-streams.md)</span></span>  
  
 <span data-ttu-id="dfd93-137">Einige datenstromimplementierungen führen lokalen Pufferung von der zugrunde liegenden Daten zur Verbesserung der Leistung.</span><span class="sxs-lookup"><span data-stu-id="dfd93-137">Some stream implementations perform local buffering of the underlying data to improve performance.</span></span> <span data-ttu-id="dfd93-138">Für solche Datenströme, können Sie die <xref:System.IO.Stream.Flush%2A> oder <xref:System.IO.Stream.FlushAsync%2A> Methode, um alle internen Puffer zu löschen, und stellen Sie sicher, dass alle Daten auf dem zugrunde liegenden Datenquelle oder das Repository geschrieben wurden.</span><span class="sxs-lookup"><span data-stu-id="dfd93-138">For such streams, you can use the <xref:System.IO.Stream.Flush%2A> or <xref:System.IO.Stream.FlushAsync%2A> method to clear any internal buffers and ensure that all data has been written to the underlying data source or repository.</span></span>  
  
 <span data-ttu-id="dfd93-139">Wenn Sie einen Stream ohne Sicherungsspeicher (auch bekannt als Bitbucket), verwenden die <xref:System.IO.Stream.Null> Feld, das eine Instanz eines Datenstroms abgerufen, die für diesen Zweck entwickelt wurde.</span><span class="sxs-lookup"><span data-stu-id="dfd93-139">If you need a stream with no backing store (also known as a bit bucket), use the <xref:System.IO.Stream.Null> field to retrieve an instance of a stream that is designed for this purpose.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dfd93-140">Im folgenden Beispiel wird veranschaulicht, wie zwei <xref:System.IO.FileStream> -Objekten, die Dateien asynchron aus einem Verzeichnis in ein anderes Verzeichnis zu kopieren.</span><span class="sxs-lookup"><span data-stu-id="dfd93-140">The following example demonstrates how to use two <xref:System.IO.FileStream> objects to asynchronously copy the files from one directory to another directory.</span></span> <span data-ttu-id="dfd93-141">Die <xref:System.IO.FileStream>-Klasse wird aus der <xref:System.IO.Stream>-Klasse abgeleitet.</span><span class="sxs-lookup"><span data-stu-id="dfd93-141">The <xref:System.IO.FileStream> class derives from the <xref:System.IO.Stream> class.</span></span> <span data-ttu-id="dfd93-142">Beachten Sie, dass der <xref:System.Web.UI.WebControls.Button.Click> -Ereignishandler für das <xref:System.Windows.Controls.Button> -Steuerelement mit dem `async` -Modifizierer markiert wird, da er eine asynchrone Methode aufruft.</span><span class="sxs-lookup"><span data-stu-id="dfd93-142">Notice that the <xref:System.Web.UI.WebControls.Button.Click> event handler for the <xref:System.Windows.Controls.Button> control is marked with the `async` modifier because it calls an asynchronous method.</span></span>  
  
 [!code-csharp[Asynchronous_File_IO_async#1](~/samples/snippets/csharp/VS_Snippets_CLR/Asynchronous_File_IO_async/cs/example.cs#1)]
 [!code-vb[Asynchronous_File_IO_async#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Asynchronous_File_IO_async/vb/example.vb#1)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para><span data-ttu-id="dfd93-143">Wenn Sie eine abgeleitete Klasse implementieren <see cref="T:System.IO.Stream" />, müssen Sie angeben, die Implementierungen für die <see cref="M:System.IO.Stream.Read(System.Byte[],System.Int32,System.Int32)" /> und <see cref="M:System.IO.Stream.Write(System.Byte[],System.Int32,System.Int32)" /> Methoden.</span><span class="sxs-lookup"><span data-stu-id="dfd93-143">When you implement a derived class of <see cref="T:System.IO.Stream" />, you must provide implementations for the <see cref="M:System.IO.Stream.Read(System.Byte[],System.Int32,System.Int32)" /> and <see cref="M:System.IO.Stream.Write(System.Byte[],System.Int32,System.Int32)" /> methods.</span></span> <span data-ttu-id="dfd93-144">Die asynchronen Methoden <see cref="M:System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32)" />, <see cref="M:System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32)" />, und <see cref="M:System.IO.Stream.CopyToAsync(System.IO.Stream)" /> verwenden Sie die synchronen Methoden <see cref="M:System.IO.Stream.Read(System.Byte[],System.Int32,System.Int32)" /> und <see cref="M:System.IO.Stream.Write(System.Byte[],System.Int32,System.Int32)" /> in ihren Implementierungen.</span><span class="sxs-lookup"><span data-stu-id="dfd93-144">The asynchronous methods <see cref="M:System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32)" />, <see cref="M:System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32)" />, and <see cref="M:System.IO.Stream.CopyToAsync(System.IO.Stream)" /> use the synchronous methods <see cref="M:System.IO.Stream.Read(System.Byte[],System.Int32,System.Int32)" /> and <see cref="M:System.IO.Stream.Write(System.Byte[],System.Int32,System.Int32)" /> in their implementations.</span></span> <span data-ttu-id="dfd93-145">Aus diesem Grund wird die Implementierung von <see cref="M:System.IO.Stream.Read(System.Byte[],System.Int32,System.Int32)" /> und <see cref="M:System.IO.Stream.Write(System.Byte[],System.Int32,System.Int32)" /> funktionieren ordnungsgemäß mit der asynchronen Methoden.</span><span class="sxs-lookup"><span data-stu-id="dfd93-145">Therefore, your implementations of <see cref="M:System.IO.Stream.Read(System.Byte[],System.Int32,System.Int32)" /> and <see cref="M:System.IO.Stream.Write(System.Byte[],System.Int32,System.Int32)" /> will work correctly with the asynchronous methods.</span></span> <span data-ttu-id="dfd93-146">Die standardmäßigen Implementierungen von <see cref="M:System.IO.Stream.ReadByte" /> und <see cref="M:System.IO.Stream.WriteByte(System.Byte)" /> erstellen Sie ein neues Einzelelement-Bytearray, und rufen Sie dann Ihre Implementierungen von <see cref="M:System.IO.Stream.Read(System.Byte[],System.Int32,System.Int32)" /> und <see cref="M:System.IO.Stream.Write(System.Byte[],System.Int32,System.Int32)" />.</span><span class="sxs-lookup"><span data-stu-id="dfd93-146">The default implementations of <see cref="M:System.IO.Stream.ReadByte" /> and <see cref="M:System.IO.Stream.WriteByte(System.Byte)" /> create a new single-element byte array, and then call your implementations of <see cref="M:System.IO.Stream.Read(System.Byte[],System.Int32,System.Int32)" /> and <see cref="M:System.IO.Stream.Write(System.Byte[],System.Int32,System.Int32)" />.</span></span> <span data-ttu-id="dfd93-147">Beim Ableiten von <see cref="T:System.IO.Stream" />, es wird empfohlen, die Sie überschreiben diese Methoden, um den internen Puffer zugreifen, wenn Sie eine erheblich bessere Leistung haben.</span><span class="sxs-lookup"><span data-stu-id="dfd93-147">When you derive from <see cref="T:System.IO.Stream" />, we recommend that you override these methods to access your internal buffer, if you have one, for substantially better performance.</span></span> <span data-ttu-id="dfd93-148">Sie müssen auch Implementierungen der bereitstellen <see cref="P:System.IO.Stream.CanRead" />, <see cref="P:System.IO.Stream.CanSeek" />, <see cref="P:System.IO.Stream.CanWrite" />, <see cref="M:System.IO.Stream.Flush" />, <see cref="P:System.IO.Stream.Length" />, <see cref="P:System.IO.Stream.Position" />, <see cref="M:System.IO.Stream.Seek(System.Int64,System.IO.SeekOrigin)" />, und <see cref="M:System.IO.Stream.SetLength(System.Int64)" />.</span><span class="sxs-lookup"><span data-stu-id="dfd93-148">You must also provide implementations of <see cref="P:System.IO.Stream.CanRead" />, <see cref="P:System.IO.Stream.CanSeek" />, <see cref="P:System.IO.Stream.CanWrite" />, <see cref="M:System.IO.Stream.Flush" />, <see cref="P:System.IO.Stream.Length" />, <see cref="P:System.IO.Stream.Position" />, <see cref="M:System.IO.Stream.Seek(System.Int64,System.IO.SeekOrigin)" />, and <see cref="M:System.IO.Stream.SetLength(System.Int64)" />.</span></span>  
  
 <span data-ttu-id="dfd93-149">Überschreiben Sie nicht die <see cref="M:System.IO.Stream.Close" /> -Methode, stattdessen werden alle der <see cref="T:System.IO.Stream" /> Bereinigungslogik in die <see cref="M:System.IO.Stream.Dispose(System.Boolean)" /> Methode.</span><span class="sxs-lookup"><span data-stu-id="dfd93-149">Do not override the <see cref="M:System.IO.Stream.Close" /> method, instead, put all the <see cref="T:System.IO.Stream" /> cleanup logic in the <see cref="M:System.IO.Stream.Dispose(System.Boolean)" /> method.</span></span> <span data-ttu-id="dfd93-150">Weitere Informationen finden Sie unter [Implementieren einer Dispose-Methode](~/docs/standard/garbage-collection/implementing-dispose.md).</span><span class="sxs-lookup"><span data-stu-id="dfd93-150">For more information, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span></para>
    </block>
    <altmember cref="T:System.IO.FileStream" />
    <altmember cref="T:System.IO.MemoryStream" />
    <altmember cref="T:System.IO.BufferedStream" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Stream ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Stream.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Stream();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="dfd93-151">Initialisiert eine neue Instanz der <see cref="T:System.IO.Stream" />-Klasse.</span><span class="sxs-lookup"><span data-stu-id="dfd93-151">Initializes a new instance of the <see cref="T:System.IO.Stream" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfd93-152"><xref:System.IO.Stream> ist die abstrakte Basisklasse aller Streams.</span><span class="sxs-lookup"><span data-stu-id="dfd93-152"><xref:System.IO.Stream> is the abstract base class of all streams.</span></span>  
  
 <span data-ttu-id="dfd93-153">Einige der häufiger häufig verwendete Streams, die von erben <xref:System.IO.Stream> sind <xref:System.IO.FileStream>, und <xref:System.IO.MemoryStream>.</span><span class="sxs-lookup"><span data-stu-id="dfd93-153">Some of the more commonly used streams that inherit from <xref:System.IO.Stream> are <xref:System.IO.FileStream>, and <xref:System.IO.MemoryStream>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginRead">
      <MemberSignature Language="C#" Value="public virtual IAsyncResult BeginRead (byte[] buffer, int offset, int count, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginRead(unsigned int8[] buffer, int32 offset, int32 count, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Stream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function BeginRead (buffer As Byte(), offset As Integer, count As Integer, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginRead(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="dfd93-154">Der Puffer, in den die Daten gelesen werden sollen.</span><span class="sxs-lookup"><span data-stu-id="dfd93-154">The buffer to read the data into.</span></span></param>
        <param name="offset"><span data-ttu-id="dfd93-155">Der Byteoffset in <c>buffer</c>, ab dem gelesene Daten aus dem Stream geschrieben werden sollen.</span><span class="sxs-lookup"><span data-stu-id="dfd93-155">The byte offset in <c>buffer</c> at which to begin writing data read from the stream.</span></span></param>
        <param name="count"><span data-ttu-id="dfd93-156">Die maximale Anzahl der zu lesenden Bytes.</span><span class="sxs-lookup"><span data-stu-id="dfd93-156">The maximum number of bytes to read.</span></span></param>
        <param name="callback"><span data-ttu-id="dfd93-157">Ein optionaler asynchroner Rückruf, der nach Abschluss des Lesevorgangs aufgerufen werden soll.</span><span class="sxs-lookup"><span data-stu-id="dfd93-157">An optional asynchronous callback, to be called when the read is complete.</span></span></param>
        <param name="state"><span data-ttu-id="dfd93-158">Ein vom Benutzer bereitgestelltes Objekt, das diese asynchrone Leseanforderung von anderen Anforderungen unterscheidet.</span><span class="sxs-lookup"><span data-stu-id="dfd93-158">A user-provided object that distinguishes this particular asynchronous read request from other requests.</span></span></param>
        <summary><span data-ttu-id="dfd93-159">Beginnt einen asynchronen Lesevorgang.</span><span class="sxs-lookup"><span data-stu-id="dfd93-159">Begins an asynchronous read operation.</span></span> <span data-ttu-id="dfd93-160">(Verwenden Sie stattdessen <see cref="M:System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32)" />.)</span><span class="sxs-lookup"><span data-stu-id="dfd93-160">(Consider using <see cref="M:System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32)" /> instead.)</span></span></summary>
        <returns><span data-ttu-id="dfd93-161">Ein <see cref="T:System.IAsyncResult" />, das den asynchronen Lesevorgang darstellt, der möglicherweise noch aussteht.</span><span class="sxs-lookup"><span data-stu-id="dfd93-161">An <see cref="T:System.IAsyncResult" /> that represents the asynchronous read, which could still be pending.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfd93-162">In .NET Framework 4 und vorherigen Versionen müssen Sie Methoden wie <xref:System.IO.Stream.BeginRead%2A> und <xref:System.IO.Stream.EndRead%2A> verwenden, um asynchrone E/A-Vorgänge zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="dfd93-162">In the .NET Framework 4 and earlier versions, you have to use methods such as <xref:System.IO.Stream.BeginRead%2A> and <xref:System.IO.Stream.EndRead%2A> to implement asynchronous I/O operations.</span></span> <span data-ttu-id="dfd93-163">Diese Methoden sind weiterhin verfügbar, in der [!INCLUDE[net_v45](~/includes/net-v45-md.md)] zur Unterstützung von legacy-Code; allerdings der neuen asynchronen Methoden, wie z. B. <xref:System.IO.Stream.ReadAsync%2A>, <xref:System.IO.Stream.WriteAsync%2A>, <xref:System.IO.Stream.CopyToAsync%2A>, und <xref:System.IO.Stream.FlushAsync%2A>, Hilfe, die Sie implementieren leichter asynchrone e/a-Vorgänge.</span><span class="sxs-lookup"><span data-stu-id="dfd93-163">These methods are still available in the [!INCLUDE[net_v45](~/includes/net-v45-md.md)] to support legacy code; however, the new async methods, such as <xref:System.IO.Stream.ReadAsync%2A>, <xref:System.IO.Stream.WriteAsync%2A>, <xref:System.IO.Stream.CopyToAsync%2A>, and <xref:System.IO.Stream.FlushAsync%2A>, help you implement asynchronous I/O operations more easily.</span></span>  
  
 <span data-ttu-id="dfd93-164">Die standardmäßige Implementierung des `BeginRead` für einen Datenstrom Aufrufe der <xref:System.IO.Stream.Read%2A> Methode synchron, was bedeutet, dass `Read` auf einige Datenströme blockiert werden könnten.</span><span class="sxs-lookup"><span data-stu-id="dfd93-164">The default implementation of `BeginRead` on a stream calls the <xref:System.IO.Stream.Read%2A> method synchronously, which means that `Read` might block on some streams.</span></span> <span data-ttu-id="dfd93-165">Allerdings Instanzen von Klassen, z. B. `FileStream` und `NetworkStream` vollständig asynchrone Vorgänge unterstützt, wenn die Instanzen asynchron geöffnet worden sein.</span><span class="sxs-lookup"><span data-stu-id="dfd93-165">However, instances of classes such as `FileStream` and `NetworkStream` fully support asynchronous operations if the instances have been opened asynchronously.</span></span> <span data-ttu-id="dfd93-166">Aus diesem Grund Aufrufe von `BeginRead` Datenströme nicht blockiert.</span><span class="sxs-lookup"><span data-stu-id="dfd93-166">Therefore, calls to `BeginRead` will not block on those streams.</span></span> <span data-ttu-id="dfd93-167">Sie können außer Kraft setzen `BeginRead` (mithilfe von asynchronen Delegaten, z. B.) um asynchrones Verhalten bereitzustellen.</span><span class="sxs-lookup"><span data-stu-id="dfd93-167">You can override `BeginRead` (by using async delegates, for example) to provide asynchronous behavior.</span></span>  
  
 <span data-ttu-id="dfd93-168">Übergeben Sie die `IAsyncResult` Rückgabewert auf die <xref:System.IO.Stream.EndRead%2A> -Methode des Datenstroms, um zu bestimmen, wie viele Bytes gelesen wurden, und zum Freigeben von Betriebssystemressourcen, die zum Lesen.</span><span class="sxs-lookup"><span data-stu-id="dfd93-168">Pass the `IAsyncResult` return value to the <xref:System.IO.Stream.EndRead%2A> method of the stream to determine how many bytes were read and to release operating system resources used for reading.</span></span> <span data-ttu-id="dfd93-169"><xref:System.IO.Stream.EndRead%2A> muss einmal für jeden Aufruf aufgerufen werden <xref:System.IO.Stream.BeginRead%2A>.</span><span class="sxs-lookup"><span data-stu-id="dfd93-169"><xref:System.IO.Stream.EndRead%2A> must be called once for every call to <xref:System.IO.Stream.BeginRead%2A>.</span></span> <span data-ttu-id="dfd93-170">Hierzu können Sie entweder über den gleichen Code, der aufgerufen `BeginRead` oder einen Rückruf, der an übergebene `BeginRead`.</span><span class="sxs-lookup"><span data-stu-id="dfd93-170">You can do this either by using the same code that called `BeginRead` or in a callback passed to `BeginRead`.</span></span>  
  
 <span data-ttu-id="dfd93-171">Die aktuelle Position im Stream wird aktualisiert, wenn die asynchrone Lese- oder Schreibberechtigungen ausgegeben wird nicht verwendet werden, wenn der e/a-Vorgang abgeschlossen ist.</span><span class="sxs-lookup"><span data-stu-id="dfd93-171">The current position in the stream is updated when the asynchronous read or write is issued, not when the I/O operation completes.</span></span>  
  
 <span data-ttu-id="dfd93-172">Mehrere gleichzeitige asynchrone Anforderungen das Rendern der Anforderung Abschluss unsicher.</span><span class="sxs-lookup"><span data-stu-id="dfd93-172">Multiple simultaneous asynchronous requests render the request completion order uncertain.</span></span>  
  
 <span data-ttu-id="dfd93-173">Verwenden der <xref:System.IO.Stream.CanRead%2A> Eigenschaft, um zu bestimmen, ob die aktuelle Instanz Lesevorgänge unterstützt.</span><span class="sxs-lookup"><span data-stu-id="dfd93-173">Use the <xref:System.IO.Stream.CanRead%2A> property to determine whether the current instance supports reading.</span></span>  
  
 <span data-ttu-id="dfd93-174">Wenn ein Stream geschlossen ist, oder Sie ein ungültiges Argument übergeben, Ausnahmen werden ausgelöst, unmittelbar aus `BeginRead`.</span><span class="sxs-lookup"><span data-stu-id="dfd93-174">If a stream is closed or you pass an invalid argument, exceptions are thrown immediately from `BeginRead`.</span></span> <span data-ttu-id="dfd93-175">Fehler während einer asynchronen leseanforderung z. B. Fehler auf dem Datenträger während der e/a-Anforderung, für den Thread im Threadpool ausgeführt, und Ausnahmen auslösen, wenn der Aufruf von `EndRead`.</span><span class="sxs-lookup"><span data-stu-id="dfd93-175">Errors that occur during an asynchronous read request, such as a disk failure during the I/O request, occur on the thread pool thread and throw exceptions when calling `EndRead`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="dfd93-176">Es wurde versucht, einen asynchronen Lesevorgang über das Ende des Streams hinaus durchzuführen, oder es ist ein Datenträgerfehler aufgetreten.</span><span class="sxs-lookup"><span data-stu-id="dfd93-176">Attempted an asynchronous read past the end of the stream, or a disk error occurs.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="dfd93-177">Mindestens eines der Argumente ist ungültig.</span><span class="sxs-lookup"><span data-stu-id="dfd93-177">One or more of the arguments is invalid.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="dfd93-178">Es wurden Methoden aufgerufen, nachdem der Stream geschlossen wurde.</span><span class="sxs-lookup"><span data-stu-id="dfd93-178">Methods were called after the stream was closed.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="dfd93-179">Die aktuelle <see langword="Stream" />-Implementierung unterstützt den Lesevorgang nicht.</span><span class="sxs-lookup"><span data-stu-id="dfd93-179">The current <see langword="Stream" /> implementation does not support the read operation.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BeginWrite">
      <MemberSignature Language="C#" Value="public virtual IAsyncResult BeginWrite (byte[] buffer, int offset, int count, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginWrite(unsigned int8[] buffer, int32 offset, int32 count, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Stream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function BeginWrite (buffer As Byte(), offset As Integer, count As Integer, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginWrite(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="dfd93-180">Der Puffer, aus dem Daten geschrieben werden sollen.</span><span class="sxs-lookup"><span data-stu-id="dfd93-180">The buffer to write data from.</span></span></param>
        <param name="offset"><span data-ttu-id="dfd93-181">Der Byteoffset in <c>buffer</c>, ab dem geschrieben werden soll.</span><span class="sxs-lookup"><span data-stu-id="dfd93-181">The byte offset in <c>buffer</c> from which to begin writing.</span></span></param>
        <param name="count"><span data-ttu-id="dfd93-182">Die maximale Anzahl der zu schreibenden Bytes.</span><span class="sxs-lookup"><span data-stu-id="dfd93-182">The maximum number of bytes to write.</span></span></param>
        <param name="callback"><span data-ttu-id="dfd93-183">Ein optionaler asynchroner Rückruf, der nach Abschluss des Schreibvorgangs aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="dfd93-183">An optional asynchronous callback, to be called when the write is complete.</span></span></param>
        <param name="state"><span data-ttu-id="dfd93-184">Ein vom Benutzer bereitgestelltes Objekt, das diese asynchrone Schreibanforderung von anderen Anforderungen unterscheidet.</span><span class="sxs-lookup"><span data-stu-id="dfd93-184">A user-provided object that distinguishes this particular asynchronous write request from other requests.</span></span></param>
        <summary><span data-ttu-id="dfd93-185">Beginnt einen asynchronen Schreibvorgang.</span><span class="sxs-lookup"><span data-stu-id="dfd93-185">Begins an asynchronous write operation.</span></span> <span data-ttu-id="dfd93-186">(Verwenden Sie stattdessen <see cref="M:System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32)" />.)</span><span class="sxs-lookup"><span data-stu-id="dfd93-186">(Consider using <see cref="M:System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32)" /> instead.)</span></span></summary>
        <returns><span data-ttu-id="dfd93-187">Ein <see langword="IAsyncResult" />, das den asynchronen Schreibvorgang darstellt, der möglicherweise noch aussteht.</span><span class="sxs-lookup"><span data-stu-id="dfd93-187">An <see langword="IAsyncResult" /> that represents the asynchronous write, which could still be pending.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfd93-188">In .NET Framework 4 und vorherigen Versionen müssen Sie Methoden wie <xref:System.IO.Stream.BeginWrite%2A> und <xref:System.IO.Stream.EndWrite%2A> verwenden, um asynchrone E/A-Vorgänge zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="dfd93-188">In the .NET Framework 4 and earlier versions, you have to use methods such as <xref:System.IO.Stream.BeginWrite%2A> and <xref:System.IO.Stream.EndWrite%2A> to implement asynchronous I/O operations.</span></span> <span data-ttu-id="dfd93-189">Diese Methoden sind weiterhin verfügbar, in der [!INCLUDE[net_v45](~/includes/net-v45-md.md)] zur Unterstützung von legacy-Code; allerdings der neuen asynchronen Methoden, wie z. B. <xref:System.IO.Stream.ReadAsync%2A>, <xref:System.IO.Stream.WriteAsync%2A>, <xref:System.IO.Stream.CopyToAsync%2A>, und <xref:System.IO.Stream.FlushAsync%2A>, Hilfe, die Sie implementieren leichter asynchrone e/a-Vorgänge.</span><span class="sxs-lookup"><span data-stu-id="dfd93-189">These methods are still available in the [!INCLUDE[net_v45](~/includes/net-v45-md.md)] to support legacy code; however, the new async methods, such as <xref:System.IO.Stream.ReadAsync%2A>, <xref:System.IO.Stream.WriteAsync%2A>, <xref:System.IO.Stream.CopyToAsync%2A>, and <xref:System.IO.Stream.FlushAsync%2A>, help you implement asynchronous I/O operations more easily.</span></span>  
  
 <span data-ttu-id="dfd93-190">Die standardmäßige Implementierung des `BeginWrite` für einen Datenstrom Aufrufe der <xref:System.IO.Stream.Write%2A> Methode synchron, was bedeutet, dass `Write` auf einige Datenströme blockiert werden könnten.</span><span class="sxs-lookup"><span data-stu-id="dfd93-190">The default implementation of `BeginWrite` on a stream calls the <xref:System.IO.Stream.Write%2A> method synchronously, which means that `Write` might block on some streams.</span></span> <span data-ttu-id="dfd93-191">Allerdings Instanzen von Klassen, z. B. `FileStream` und `NetworkStream` vollständig asynchrone Vorgänge unterstützt, wenn die Instanzen asynchron geöffnet worden sein.</span><span class="sxs-lookup"><span data-stu-id="dfd93-191">However, instances of classes such as `FileStream` and `NetworkStream` fully support asynchronous operations if the instances have been opened asynchronously.</span></span> <span data-ttu-id="dfd93-192">Aus diesem Grund Aufrufe von `BeginWrite` Datenströme nicht blockiert.</span><span class="sxs-lookup"><span data-stu-id="dfd93-192">Therefore, calls to `BeginWrite` will not block on those streams.</span></span> <span data-ttu-id="dfd93-193">Sie können außer Kraft setzen `BeginWrite` (mithilfe von asynchronen Delegaten, z. B.) um asynchrones Verhalten bereitzustellen.</span><span class="sxs-lookup"><span data-stu-id="dfd93-193">You can override `BeginWrite` (by using async delegates, for example) to provide asynchronous behavior.</span></span>  
  
 <span data-ttu-id="dfd93-194">Übergeben Sie die `IAsyncResult` zurückgegeben, die für die aktuelle Methode zum <xref:System.IO.Stream.EndWrite%2A> um sicherzustellen, dass der Schreibvorgang abgeschlossen ist und die Ressourcen entsprechend freigegeben werden.</span><span class="sxs-lookup"><span data-stu-id="dfd93-194">Pass the `IAsyncResult` returned by the current method to <xref:System.IO.Stream.EndWrite%2A> to ensure that the write completes and frees resources appropriately.</span></span> <span data-ttu-id="dfd93-195"><xref:System.IO.Stream.EndWrite%2A> muss einmal für jeden Aufruf aufgerufen werden <xref:System.IO.Stream.BeginWrite%2A>.</span><span class="sxs-lookup"><span data-stu-id="dfd93-195"><xref:System.IO.Stream.EndWrite%2A> must be called once for every call to <xref:System.IO.Stream.BeginWrite%2A>.</span></span> <span data-ttu-id="dfd93-196">Hierzu können Sie entweder über den gleichen Code, der aufgerufen `BeginWrite` oder einen Rückruf, der an übergebene `BeginWrite`.</span><span class="sxs-lookup"><span data-stu-id="dfd93-196">You can do this either by using the same code that called `BeginWrite` or in a callback passed to `BeginWrite`.</span></span> <span data-ttu-id="dfd93-197">Wenn während eines asynchronen Schreibvorgangs ein Fehler auftritt, wird erst dann eine Ausnahme ausgelöst, wenn `EndWrite` aufgerufen wird und die `IAsyncResult` von dieser Methode zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="dfd93-197">If an error occurs during an asynchronous write, an exception will not be thrown until `EndWrite` is called with the `IAsyncResult` returned by this method.</span></span>  
  
 <span data-ttu-id="dfd93-198">Wenn ein Stream geschrieben werden kann, erweitert Schreiben am Ende des Streams den Stream.</span><span class="sxs-lookup"><span data-stu-id="dfd93-198">If a stream is writable, writing at the end of the stream expands the stream.</span></span>  
  
 <span data-ttu-id="dfd93-199">Die aktuelle Position im Stream wird aktualisiert, wenn Sie veranlassen, die den asynchronen Lesevorgang oder schreiben, nicht verwendet werden, wenn der e/a-Vorgang abgeschlossen ist.</span><span class="sxs-lookup"><span data-stu-id="dfd93-199">The current position in the stream is updated when you issue the asynchronous read or write, not when the I/O operation completes.</span></span> <span data-ttu-id="dfd93-200">Mehrere gleichzeitige asynchrone Anforderungen das Rendern der Anforderung Abschluss unsicher.</span><span class="sxs-lookup"><span data-stu-id="dfd93-200">Multiple simultaneous asynchronous requests render the request completion order uncertain.</span></span>  
  
 <span data-ttu-id="dfd93-201">Verwenden der <xref:System.IO.Stream.CanWrite%2A> Eigenschaft, um zu bestimmen, ob die aktuelle Instanz Schreibvorgänge unterstützt.</span><span class="sxs-lookup"><span data-stu-id="dfd93-201">Use the <xref:System.IO.Stream.CanWrite%2A> property to determine whether the current instance supports writing.</span></span>  
  
 <span data-ttu-id="dfd93-202">Wenn ein Stream geschlossen ist, oder Sie ein ungültiges Argument übergeben, Ausnahmen werden ausgelöst, unmittelbar aus `BeginWrite`.</span><span class="sxs-lookup"><span data-stu-id="dfd93-202">If a stream is closed or you pass an invalid argument, exceptions are thrown immediately from `BeginWrite`.</span></span> <span data-ttu-id="dfd93-203">Fehler während einer asynchronen schreibanforderung, z. B. Fehler auf dem Datenträger während der e/a-Anforderung für den Thread im Threadpool ausgeführt, und Ausnahmen auslösen, wenn der Aufruf von `EndWrite`.</span><span class="sxs-lookup"><span data-stu-id="dfd93-203">Errors that occur during an asynchronous write request, such as a disk failure during the I/O request, occur on the thread pool thread and throw exceptions when calling `EndWrite`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="dfd93-204">Es wurde versucht, einen asynchronen Schreibvorgang über das Ende des Streams hinaus durchzuführen, oder es ist ein Datenträgerfehler aufgetreten.</span><span class="sxs-lookup"><span data-stu-id="dfd93-204">Attempted an asynchronous write past the end of the stream, or a disk error occurs.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="dfd93-205">Mindestens eines der Argumente ist ungültig.</span><span class="sxs-lookup"><span data-stu-id="dfd93-205">One or more of the arguments is invalid.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="dfd93-206">Es wurden Methoden aufgerufen, nachdem der Stream geschlossen wurde.</span><span class="sxs-lookup"><span data-stu-id="dfd93-206">Methods were called after the stream was closed.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="dfd93-207">Die aktuelle <see langword="Stream" />-Implementierung unterstützt den Schreibvorgang nicht.</span><span class="sxs-lookup"><span data-stu-id="dfd93-207">The current <see langword="Stream" /> implementation does not support the write operation.</span></span></exception>
        <altmember cref="M:System.IO.Stream.EndWrite(System.IAsyncResult)" />
        <altmember cref="P:System.IO.Stream.CanWrite" />
      </Docs>
    </Member>
    <Member MemberName="CanRead">
      <MemberSignature Language="C#" Value="public abstract bool CanRead { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanRead" />
      <MemberSignature Language="DocId" Value="P:System.IO.Stream.CanRead" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property CanRead As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool CanRead { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dfd93-208">Ruft beim Überschreiben in einer abgeleiteten Klasse einen Wert ab, der angibt, ob der aktuelle Stream Lesevorgänge unterstützt.</span><span class="sxs-lookup"><span data-stu-id="dfd93-208">When overridden in a derived class, gets a value indicating whether the current stream supports reading.</span></span></summary>
        <value>
          <span data-ttu-id="dfd93-209"><see langword="true" />, wenn der Stream Lesevorgänge unterstützt, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="dfd93-209"><see langword="true" /> if the stream supports reading; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfd93-210">Wenn von eine Klasse abgeleitet <xref:System.IO.Stream> keine Lesevorgänge unterstützt, werden Aufrufe von der <xref:System.IO.Stream.Read%2A>, <xref:System.IO.Stream.ReadByte%2A>, und <xref:System.IO.Stream.BeginRead%2A> Methoden lösen eine <xref:System.NotSupportedException>.</span><span class="sxs-lookup"><span data-stu-id="dfd93-210">If a class derived from <xref:System.IO.Stream> does not support reading, calls to the <xref:System.IO.Stream.Read%2A>, <xref:System.IO.Stream.ReadByte%2A>, and <xref:System.IO.Stream.BeginRead%2A> methods throw a <xref:System.NotSupportedException>.</span></span>  
  
 <span data-ttu-id="dfd93-211">Wenn der Stream geschlossen ist, gibt diese Eigenschaft `false`.</span><span class="sxs-lookup"><span data-stu-id="dfd93-211">If the stream is closed, this property returns `false`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dfd93-212">Im folgenden werden gezeigt, wie die `CanRead` Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="dfd93-212">The following is an example of using the `CanRead` property.</span></span>  
  
 [!code-cpp[Classic FileStream.CanRead Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic FileStream.CanRead Example/CPP/source.cpp#1)]
 [!code-csharp[Classic FileStream.CanRead Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic FileStream.CanRead Example/CS/source.cs#1)]
 [!code-vb[Classic FileStream.CanRead Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic FileStream.CanRead Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanSeek">
      <MemberSignature Language="C#" Value="public abstract bool CanSeek { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanSeek" />
      <MemberSignature Language="DocId" Value="P:System.IO.Stream.CanSeek" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property CanSeek As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool CanSeek { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dfd93-213">Ruft beim Überschreiben in einer abgeleiteten Klasse einen Wert ab, der angibt, ob der aktuelle Stream Suchvorgänge unterstützt.</span><span class="sxs-lookup"><span data-stu-id="dfd93-213">When overridden in a derived class, gets a value indicating whether the current stream supports seeking.</span></span></summary>
        <value>
          <span data-ttu-id="dfd93-214"><see langword="true" />, wenn der Stream Suchvorgänge unterstützt, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="dfd93-214"><see langword="true" /> if the stream supports seeking; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfd93-215">Wenn von eine Klasse abgeleitet <xref:System.IO.Stream> Suchvorgänge nicht unterstützt, werden Aufrufe von <xref:System.IO.Stream.Length%2A>, <xref:System.IO.Stream.SetLength%2A>, <xref:System.IO.Stream.Position%2A>, und <xref:System.IO.Stream.Seek%2A> Auslösen einer <xref:System.NotSupportedException>.</span><span class="sxs-lookup"><span data-stu-id="dfd93-215">If a class derived from <xref:System.IO.Stream> does not support seeking, calls to <xref:System.IO.Stream.Length%2A>, <xref:System.IO.Stream.SetLength%2A>, <xref:System.IO.Stream.Position%2A>, and <xref:System.IO.Stream.Seek%2A> throw a <xref:System.NotSupportedException>.</span></span>  
  
 <span data-ttu-id="dfd93-216">Wenn der Stream geschlossen ist, gibt diese Eigenschaft `false`.</span><span class="sxs-lookup"><span data-stu-id="dfd93-216">If the stream is closed, this property returns `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanTimeout">
      <MemberSignature Language="C#" Value="public virtual bool CanTimeout { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanTimeout" />
      <MemberSignature Language="DocId" Value="P:System.IO.Stream.CanTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CanTimeout As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanTimeout { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dfd93-217">Ruft einen Wert ab, der bestimmt, ob für den aktuellen Stream ein Timeout möglich ist.</span><span class="sxs-lookup"><span data-stu-id="dfd93-217">Gets a value that determines whether the current stream can time out.</span></span></summary>
        <value><span data-ttu-id="dfd93-218">Ein Wert, der bestimmt, ob für den aktuellen Stream ein Timeout möglich ist.</span><span class="sxs-lookup"><span data-stu-id="dfd93-218">A value that determines whether the current stream can time out.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfd93-219">Die <xref:System.IO.Stream.CanTimeout%2A>-Eigenschaft gibt immer `false` zurück.</span><span class="sxs-lookup"><span data-stu-id="dfd93-219">The <xref:System.IO.Stream.CanTimeout%2A> property always returns `false`.</span></span> <span data-ttu-id="dfd93-220">Einige datenstromimplementierungen erfordern unterschiedliches Verhalten wie z. B. <xref:System.Net.Sockets.NetworkStream>, die ein Timeout auftritt, wenn die Netzwerkkonnektivität unterbrochen wird oder verloren geht.</span><span class="sxs-lookup"><span data-stu-id="dfd93-220">Some stream implementations require different behavior, such as <xref:System.Net.Sockets.NetworkStream>, which times out if network connectivity is interrupted or lost.</span></span> <span data-ttu-id="dfd93-221">Wenn Sie einen Stream implementieren, die auf einen Timeout beendet werden muss, sollte diese Eigenschaft überschrieben werden, um zurückgeben `true`.</span><span class="sxs-lookup"><span data-stu-id="dfd93-221">If you are implementing a stream that must be able to time out, this property should be overridden to return `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.IO.Stream.ReadTimeout" />
        <altmember cref="P:System.IO.Stream.WriteTimeout" />
      </Docs>
    </Member>
    <Member MemberName="CanWrite">
      <MemberSignature Language="C#" Value="public abstract bool CanWrite { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanWrite" />
      <MemberSignature Language="DocId" Value="P:System.IO.Stream.CanWrite" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property CanWrite As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool CanWrite { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dfd93-222">Ruft beim Überschreiben in einer abgeleiteten Klasse einen Wert ab, der angibt, ob der aktuelle Stream Schreibvorgänge unterstützt.</span><span class="sxs-lookup"><span data-stu-id="dfd93-222">When overridden in a derived class, gets a value indicating whether the current stream supports writing.</span></span></summary>
        <value>
          <span data-ttu-id="dfd93-223"><see langword="true" />, wenn der Stream Schreibvorgänge unterstützt, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="dfd93-223"><see langword="true" /> if the stream supports writing; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfd93-224">Wenn von eine Klasse abgeleitet <xref:System.IO.Stream> unterstützt nicht das Schreiben von einem Aufruf von <xref:System.IO.Stream.Write%2A>, <xref:System.IO.Stream.BeginWrite%2A>, oder <xref:System.IO.Stream.WriteByte%2A> löst eine <xref:System.NotSupportedException>.</span><span class="sxs-lookup"><span data-stu-id="dfd93-224">If a class derived from <xref:System.IO.Stream> does not support writing, a call to <xref:System.IO.Stream.Write%2A>, <xref:System.IO.Stream.BeginWrite%2A>, or <xref:System.IO.Stream.WriteByte%2A> throws a <xref:System.NotSupportedException>.</span></span>  
  
 <span data-ttu-id="dfd93-225">Wenn der Stream geschlossen ist, gibt diese Eigenschaft `false`.</span><span class="sxs-lookup"><span data-stu-id="dfd93-225">If the stream is closed, this property returns `false`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dfd93-226">Im folgenden werden gezeigt, wie die `CanWrite` Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="dfd93-226">The following is an example of using the `CanWrite` property.</span></span>  
  
 [!code-cpp[Classic Stream.CanWrite Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Stream.CanWrite Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Stream.CanWrite Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Stream.CanWrite Example/CS/source.cs#1)]
 [!code-vb[Classic Stream.CanWrite Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Stream.CanWrite Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public virtual void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Stream.Close" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Close();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="dfd93-227">Schließt den aktuellen Stream und gibt alle dem aktuellen Stream zugeordneten Ressourcen frei (z. B. Sockets und Dateihandles).</span><span class="sxs-lookup"><span data-stu-id="dfd93-227">Closes the current stream and releases any resources (such as sockets and file handles) associated with the current stream.</span></span> <span data-ttu-id="dfd93-228">Anstatt diese Methode aufzurufen, stellen Sie sicher, dass der Stream ordnungsgemäß freigegeben wird.</span><span class="sxs-lookup"><span data-stu-id="dfd93-228">Instead of calling this method, ensure that the stream is properly disposed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfd93-229">Diese Methode ruft <xref:System.IO.Stream.Dispose%2A>, wobei `true` alle Ressourcen freizugeben.</span><span class="sxs-lookup"><span data-stu-id="dfd93-229">This method calls <xref:System.IO.Stream.Dispose%2A>, specifying `true` to release all resources.</span></span> <span data-ttu-id="dfd93-230">Sie müssen nicht explizit aufrufen, die <xref:System.IO.Stream.Close%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="dfd93-230">You do not have to specifically call the <xref:System.IO.Stream.Close%2A> method.</span></span> <span data-ttu-id="dfd93-231">Stattdessen sicher, dass jeder <xref:System.IO.Stream> Objekt ordnungsgemäß freigegeben ist.</span><span class="sxs-lookup"><span data-stu-id="dfd93-231">Instead, ensure that every <xref:System.IO.Stream> object is properly disposed.</span></span> <span data-ttu-id="dfd93-232">Sie können deklarieren, <xref:System.IO.Stream> Objekte innerhalb einer `using` Block (oder `Using` -block in Visual Basic) sicherstellen, dass Streams und aller zugehörigen Ressourcen werden freigegeben, oder Sie explizit aufrufen können, die <xref:System.IO.Stream.Dispose%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="dfd93-232">You can declare <xref:System.IO.Stream> objects within a `using` block (or `Using` block in Visual Basic) to ensure that the stream and all of its resources are disposed, or you can explicitly call the <xref:System.IO.Stream.Dispose%2A> method.</span></span>  
  
 <span data-ttu-id="dfd93-233">Das Leeren des Streams wird die zugrunde liegende Encoder nicht entleert, es sei denn, Sie explizit, um eine Implementierung von Aufrufen <xref:System.IO.Stream.Flush%2A> oder `Close`.</span><span class="sxs-lookup"><span data-stu-id="dfd93-233">Flushing the stream will not flush its underlying encoder unless you explicitly call an implementation of <xref:System.IO.Stream.Flush%2A> or `Close`.</span></span> <span data-ttu-id="dfd93-234">Festlegen von <xref:System.IO.StreamWriter.AutoFlush%2A> zu `true` ist, werden Daten aus dem Puffer geleert werden, in den Stream, aber die Encoder-Status wird nicht geleert werden.</span><span class="sxs-lookup"><span data-stu-id="dfd93-234">Setting <xref:System.IO.StreamWriter.AutoFlush%2A> to `true` means that data will be flushed from the buffer to the stream, but the encoder state will not be flushed.</span></span> <span data-ttu-id="dfd93-235">Dadurch wird den Encoder seinen Zustand (teilweise Zeichen) beibehalten, sodass er den nächsten Block von Zeichen richtig zu codieren.</span><span class="sxs-lookup"><span data-stu-id="dfd93-235">This allows the encoder to keep its state (partial characters) so that it can encode the next block of characters correctly.</span></span> <span data-ttu-id="dfd93-236">Dieses Szenario betrifft UTF8 und UTF7, in denen bestimmte Zeichen codiert werden können, nachdem der Encoder die angrenzenden Zeichen oder Zeichen empfängt.</span><span class="sxs-lookup"><span data-stu-id="dfd93-236">This scenario affects UTF8 and UTF7 where certain characters can be encoded only after the encoder receives the adjacent character or characters.</span></span>  
  
 <span data-ttu-id="dfd93-237">Versucht, den Stream zu bearbeiten, nachdem der Stream geschlossen wurde dies unter Umständen Auslösen einer <xref:System.ObjectDisposedException>.</span><span class="sxs-lookup"><span data-stu-id="dfd93-237">Attempts to manipulate the stream after the stream has been closed might throw an <xref:System.ObjectDisposedException>.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="dfd93-238">Überschreiben Sie in abgeleiteten Klassen nicht die <see cref="M:System.IO.Stream.Close" /> -Methode, stattdessen werden alle der <see langword="Stream" /> Bereinigungslogik in die <see cref="M:System.IO.Stream.Dispose(System.Boolean)" /> Methode.</span><span class="sxs-lookup"><span data-stu-id="dfd93-238">In derived classes, do not override the <see cref="M:System.IO.Stream.Close" /> method, instead, put all of the <see langword="Stream" /> cleanup logic in the <see cref="M:System.IO.Stream.Dispose(System.Boolean)" /> method.</span></span> <span data-ttu-id="dfd93-239">Weitere Informationen finden Sie unter [Implementieren einer Dispose-Methode](~/docs/standard/garbage-collection/implementing-dispose.md).</span><span class="sxs-lookup"><span data-stu-id="dfd93-239">For more information, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span></para>
        </block>
      </Docs>
    </Member>
    <MemberGroup MemberName="CopyTo">
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="dfd93-240">Liest alle Bytes aus dem aktuellen Stream und schreibt sie in einen anderen Datenstrom.</span><span class="sxs-lookup"><span data-stu-id="dfd93-240">Reads the bytes from the current stream and writes them to another stream.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (System.IO.Stream destination);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyTo(class System.IO.Stream destination) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Stream.CopyTo(System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (destination As Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopyTo(System::IO::Stream ^ destination);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="destination"><span data-ttu-id="dfd93-241">Der Stream, in den der Inhalt des aktuellen Stream kopiert wird.</span><span class="sxs-lookup"><span data-stu-id="dfd93-241">The stream to which the contents of the current stream will be copied.</span></span></param>
        <summary><span data-ttu-id="dfd93-242">Liest alle Bytes aus dem aktuellen Stream und schreibt sie in einen anderen Datenstrom.</span><span class="sxs-lookup"><span data-stu-id="dfd93-242">Reads the bytes from the current stream and writes them to another stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfd93-243">Kopieren beginnt an der aktuellen Position im aktuellen Stream und setzt nicht die Position im Zielstream zurück, nachdem der Kopiervorgang abgeschlossen ist.</span><span class="sxs-lookup"><span data-stu-id="dfd93-243">Copying begins at the current position in the current stream, and does not reset the position of the destination stream after the copy operation is complete.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dfd93-244">Im folgenden Beispiel wird kopiert den Inhalt einer <xref:System.IO.FileStream> auf eine <xref:System.IO.MemoryStream>.</span><span class="sxs-lookup"><span data-stu-id="dfd93-244">The following example copies the contents of a <xref:System.IO.FileStream> to a <xref:System.IO.MemoryStream>.</span></span>  
  
 [!code-csharp[System.IO.Stream.CopyTo#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.stream.copyto/cs/program.cs#1)]
 [!code-vb[System.IO.Stream.CopyTo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.stream.copyto/vb/program.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="dfd93-245"><paramref name="destination" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="dfd93-245"><paramref name="destination" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="dfd93-246">Lesevorgänge werden vom aktuellen Stream nicht unterstützt.</span><span class="sxs-lookup"><span data-stu-id="dfd93-246">The current stream does not support reading.</span></span>  
  
 <span data-ttu-id="dfd93-247">- oder - </span><span class="sxs-lookup"><span data-stu-id="dfd93-247">-or-</span></span>  
  
 <span data-ttu-id="dfd93-248"><paramref name="destination" /> unterstützt das Schreiben nicht.</span><span class="sxs-lookup"><span data-stu-id="dfd93-248"><paramref name="destination" /> does not support writing.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="dfd93-249">Entweder der aktuelle Stream oder <paramref name="destination" /> wurde geschlossen, bevor die <see cref="M:System.IO.Stream.CopyTo(System.IO.Stream)" />-Methode aufgerufen wurde.</span><span class="sxs-lookup"><span data-stu-id="dfd93-249">Either the current stream or <paramref name="destination" /> were closed before the <see cref="M:System.IO.Stream.CopyTo(System.IO.Stream)" /> method was called.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="dfd93-250">E/A-Fehler</span><span class="sxs-lookup"><span data-stu-id="dfd93-250">An I/O error occurred.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (System.IO.Stream destination, int bufferSize);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyTo(class System.IO.Stream destination, int32 bufferSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Stream.CopyTo(System.IO.Stream,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (destination As Stream, bufferSize As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopyTo(System::IO::Stream ^ destination, int bufferSize);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.IO.Stream" />
        <Parameter Name="bufferSize" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="destination"><span data-ttu-id="dfd93-251">Der Stream, in den der Inhalt des aktuellen Stream kopiert wird.</span><span class="sxs-lookup"><span data-stu-id="dfd93-251">The stream to which the contents of the current stream will be copied.</span></span></param>
        <param name="bufferSize"><span data-ttu-id="dfd93-252">Die Größe des Puffers.</span><span class="sxs-lookup"><span data-stu-id="dfd93-252">The size of the buffer.</span></span> <span data-ttu-id="dfd93-253">Dieser Wert muss größer als 0 sein.</span><span class="sxs-lookup"><span data-stu-id="dfd93-253">This value must be greater than zero.</span></span> <span data-ttu-id="dfd93-254">Die Standardgröße ist 81920.</span><span class="sxs-lookup"><span data-stu-id="dfd93-254">The default size is 81920.</span></span></param>
        <summary><span data-ttu-id="dfd93-255">Liest alles Bytes aus dem aktuellen Datenstrom und schreibt sie unter Verwendung einer angegebenen Puffergröße in einen anderen Datenstrom.</span><span class="sxs-lookup"><span data-stu-id="dfd93-255">Reads the bytes from the current stream and writes them to another stream, using a specified buffer size.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfd93-256">Kopieren beginnt an der aktuellen Position im aktuellen Stream und setzt nicht die Position im Zielstream zurück, nachdem der Kopiervorgang abgeschlossen ist.</span><span class="sxs-lookup"><span data-stu-id="dfd93-256">Copying begins at the current position in the current stream, and does not reset the position of the destination stream after the copy operation is complete.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="dfd93-257"><paramref name="destination" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="dfd93-257"><paramref name="destination" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="dfd93-258"><paramref name="bufferSize" /> ist negativ oder 0 (null).</span><span class="sxs-lookup"><span data-stu-id="dfd93-258"><paramref name="bufferSize" /> is negative or zero.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="dfd93-259">Lesevorgänge werden vom aktuellen Stream nicht unterstützt.</span><span class="sxs-lookup"><span data-stu-id="dfd93-259">The current stream does not support reading.</span></span>  
  
 <span data-ttu-id="dfd93-260">- oder - </span><span class="sxs-lookup"><span data-stu-id="dfd93-260">-or-</span></span>  
  
 <span data-ttu-id="dfd93-261"><paramref name="destination" /> unterstützt das Schreiben nicht.</span><span class="sxs-lookup"><span data-stu-id="dfd93-261"><paramref name="destination" /> does not support writing.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="dfd93-262">Entweder der aktuelle Stream oder <paramref name="destination" /> wurde geschlossen, bevor die <see cref="M:System.IO.Stream.CopyTo(System.IO.Stream)" />-Methode aufgerufen wurde.</span><span class="sxs-lookup"><span data-stu-id="dfd93-262">Either the current stream or <paramref name="destination" /> were closed before the <see cref="M:System.IO.Stream.CopyTo(System.IO.Stream)" /> method was called.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="dfd93-263">E/A-Fehler</span><span class="sxs-lookup"><span data-stu-id="dfd93-263">An I/O error occurred.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="CopyToAsync">
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="dfd93-264">Liest die Bytes asynchron aus dem aktuellen Stream und schreibt sie in einen anderen Stream.</span><span class="sxs-lookup"><span data-stu-id="dfd93-264">Asynchronously reads the bytes from the current stream and writes them to another stream.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CopyToAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task CopyToAsync (System.IO.Stream destination);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task CopyToAsync(class System.IO.Stream destination) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Stream.CopyToAsync(System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Public Function CopyToAsync (destination As Stream) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ CopyToAsync(System::IO::Stream ^ destination);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="destination"><span data-ttu-id="dfd93-265">Der Stream, in den der Inhalt des aktuellen Stream kopiert wird.</span><span class="sxs-lookup"><span data-stu-id="dfd93-265">The stream to which the contents of the current stream will be copied.</span></span></param>
        <summary><span data-ttu-id="dfd93-266">Liest die Bytes asynchron aus dem aktuellen Stream und schreibt sie in einen anderen Stream.</span><span class="sxs-lookup"><span data-stu-id="dfd93-266">Asynchronously reads the bytes from the current stream and writes them to another stream.</span></span></summary>
        <returns><span data-ttu-id="dfd93-267">Eine Aufgabe, die den asynchronen Kopiervorgang darstellt.</span><span class="sxs-lookup"><span data-stu-id="dfd93-267">A task that represents the asynchronous copy operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfd93-268">Die <xref:System.IO.Stream.CopyToAsync%2A> Methode können Sie ressourcenintensive e/a-Vorgänge ausführen, ohne den Hauptthread zu blockieren.</span><span class="sxs-lookup"><span data-stu-id="dfd93-268">The <xref:System.IO.Stream.CopyToAsync%2A> method enables you to perform resource-intensive I/O operations without blocking the main thread.</span></span> <span data-ttu-id="dfd93-269">Diese Überlegungen zur Leistung sind insbesondere in einer [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)]-App oder [!INCLUDE[desktop_appname](~/includes/desktop-appname-md.md)]-App wichtig, bei der ein zeitaufwendiger Streamvorgang den UI-Thread blockieren kann und es dann den Anschein hat, dass Ihre App nicht funktioniert.</span><span class="sxs-lookup"><span data-stu-id="dfd93-269">This performance consideration is particularly important in a [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] app or [!INCLUDE[desktop_appname](~/includes/desktop-appname-md.md)] app where a time-consuming stream operation can block the UI thread and make your app appear as if it is not working.</span></span> <span data-ttu-id="dfd93-270">Die Async-Methoden werden verwendet, in Verbindung mit der `async` und `await` in Visual Basic und C#-Schlüsselwörter.</span><span class="sxs-lookup"><span data-stu-id="dfd93-270">The async methods are used in conjunction with the `async` and `await` keywords in Visual Basic and C#.</span></span>  
  
 <span data-ttu-id="dfd93-271">Das Kopieren beginnt an der aktuellen Position im aktuellen Stream.</span><span class="sxs-lookup"><span data-stu-id="dfd93-271">Copying begins at the current position in the current stream.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dfd93-272">Im folgenden Beispiel wird veranschaulicht, wie zwei <xref:System.IO.FileStream> -Objekten, die Dateien asynchron aus einem Verzeichnis auf einen anderen zu kopieren.</span><span class="sxs-lookup"><span data-stu-id="dfd93-272">The following example demonstrates how to use two <xref:System.IO.FileStream> objects to asynchronously copy the files from one directory to another.</span></span> <span data-ttu-id="dfd93-273">Die <xref:System.IO.FileStream>-Klasse wird aus der <xref:System.IO.Stream>-Klasse abgeleitet.</span><span class="sxs-lookup"><span data-stu-id="dfd93-273">The <xref:System.IO.FileStream> class derives from the <xref:System.IO.Stream> class.</span></span>  <span data-ttu-id="dfd93-274">Beachten Sie, dass die <xref:System.Web.UI.WebControls.Button.Click> -Ereignishandler für das <xref:System.Windows.Controls.Button> Steuerelement markiert ist, mit der `async` Modifizierer, da es sich um eine asynchrone Methode aufruft</span><span class="sxs-lookup"><span data-stu-id="dfd93-274">Notice that the <xref:System.Web.UI.WebControls.Button.Click> event handler for the <xref:System.Windows.Controls.Button> control is marked with the `async` modifier because it calls an asynchronous method</span></span>  
  
 [!code-csharp[Asynchronous_File_IO_async#1](~/samples/snippets/csharp/VS_Snippets_CLR/Asynchronous_File_IO_async/cs/example.cs#1)]
 [!code-vb[Asynchronous_File_IO_async#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Asynchronous_File_IO_async/vb/example.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="dfd93-275"><paramref name="destination" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="dfd93-275"><paramref name="destination" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="dfd93-276">Entweder der aktuelle Stream oder der Zielstream wird freigegeben.</span><span class="sxs-lookup"><span data-stu-id="dfd93-276">Either the current stream or the destination stream is disposed.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="dfd93-277">Der aktuelle Stream unterstützt kein Lesen oder Zielstream unterstützt keine Schreibvorgänge.</span><span class="sxs-lookup"><span data-stu-id="dfd93-277">The current stream does not support reading, or the destination stream does not support writing.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CopyToAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task CopyToAsync (System.IO.Stream destination, int bufferSize);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task CopyToAsync(class System.IO.Stream destination, int32 bufferSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Stream.CopyToAsync(System.IO.Stream,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function CopyToAsync (destination As Stream, bufferSize As Integer) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ CopyToAsync(System::IO::Stream ^ destination, int bufferSize);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.IO.Stream" />
        <Parameter Name="bufferSize" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="destination"><span data-ttu-id="dfd93-278">Der Stream, in den der Inhalt des aktuellen Stream kopiert wird.</span><span class="sxs-lookup"><span data-stu-id="dfd93-278">The stream to which the contents of the current stream will be copied.</span></span></param>
        <param name="bufferSize"><span data-ttu-id="dfd93-279">Die Größe des Cookies in Bytes.</span><span class="sxs-lookup"><span data-stu-id="dfd93-279">The size, in bytes, of the buffer.</span></span> <span data-ttu-id="dfd93-280">Dieser Wert muss größer als 0 sein.</span><span class="sxs-lookup"><span data-stu-id="dfd93-280">This value must be greater than zero.</span></span> <span data-ttu-id="dfd93-281">Die Standardgröße ist 81920.</span><span class="sxs-lookup"><span data-stu-id="dfd93-281">The default size is 81920.</span></span></param>
        <summary><span data-ttu-id="dfd93-282">Liest die Bytes asynchron aus dem aktuellen Stream und schreibt sie unter Verwendung einer angegebenen Puffergröße in einen anderen Stream.</span><span class="sxs-lookup"><span data-stu-id="dfd93-282">Asynchronously reads the bytes from the current stream and writes them to another stream, using a specified buffer size.</span></span></summary>
        <returns><span data-ttu-id="dfd93-283">Eine Aufgabe, die den asynchronen Kopiervorgang darstellt.</span><span class="sxs-lookup"><span data-stu-id="dfd93-283">A task that represents the asynchronous copy operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfd93-284">Die <xref:System.IO.Stream.CopyToAsync%2A> Methode können Sie ressourcenintensive e/a-Vorgänge ausführen, ohne den Hauptthread zu blockieren.</span><span class="sxs-lookup"><span data-stu-id="dfd93-284">The <xref:System.IO.Stream.CopyToAsync%2A> method enables you to perform resource-intensive I/O operations without blocking the main thread.</span></span> <span data-ttu-id="dfd93-285">Diese Überlegungen zur Leistung sind insbesondere in einer [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)]-App oder [!INCLUDE[desktop_appname](~/includes/desktop-appname-md.md)]-App wichtig, bei der ein zeitaufwendiger Streamvorgang den UI-Thread blockieren kann und es dann den Anschein hat, dass Ihre App nicht funktioniert.</span><span class="sxs-lookup"><span data-stu-id="dfd93-285">This performance consideration is particularly important in a [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] app or [!INCLUDE[desktop_appname](~/includes/desktop-appname-md.md)] app where a time-consuming stream operation can block the UI thread and make your app appear as if it is not working.</span></span> <span data-ttu-id="dfd93-286">Die Async-Methoden werden verwendet, in Verbindung mit der `async` und `await` in Visual Basic und C#-Schlüsselwörter.</span><span class="sxs-lookup"><span data-stu-id="dfd93-286">The async methods are used in conjunction with the `async` and `await` keywords in Visual Basic and C#.</span></span>  
  
 <span data-ttu-id="dfd93-287">Das Kopieren beginnt an der aktuellen Position im aktuellen Stream.</span><span class="sxs-lookup"><span data-stu-id="dfd93-287">Copying begins at the current position in the current stream.</span></span>  
  
 <span data-ttu-id="dfd93-288">Ein Beispiel für das Kopieren der zwischen zwei Datenströmen, finden Sie die <xref:System.IO.Stream.CopyToAsync%28System.IO.Stream%29> überladen.</span><span class="sxs-lookup"><span data-stu-id="dfd93-288">For an example of copying between two streams, see the <xref:System.IO.Stream.CopyToAsync%28System.IO.Stream%29> overload.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="dfd93-289"><paramref name="destination" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="dfd93-289"><paramref name="destination" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="dfd93-290"><paramref name="buffersize" /> ist negativ oder 0 (null).</span><span class="sxs-lookup"><span data-stu-id="dfd93-290"><paramref name="buffersize" /> is negative or zero.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="dfd93-291">Entweder der aktuelle Stream oder der Zielstream wird freigegeben.</span><span class="sxs-lookup"><span data-stu-id="dfd93-291">Either the current stream or the destination stream is disposed.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="dfd93-292">Der aktuelle Stream unterstützt kein Lesen oder Zielstream unterstützt keine Schreibvorgänge.</span><span class="sxs-lookup"><span data-stu-id="dfd93-292">The current stream does not support reading, or the destination stream does not support writing.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CopyToAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task CopyToAsync (System.IO.Stream destination, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task CopyToAsync(class System.IO.Stream destination, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Stream.CopyToAsync(System.IO.Stream,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ CopyToAsync(System::IO::Stream ^ destination, System::Threading::CancellationToken cancellationToken);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.IO.Stream" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="destination">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyToAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task CopyToAsync (System.IO.Stream destination, int bufferSize, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task CopyToAsync(class System.IO.Stream destination, int32 bufferSize, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Stream.CopyToAsync(System.IO.Stream,System.Int32,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ CopyToAsync(System::IO::Stream ^ destination, int bufferSize, System::Threading::CancellationToken cancellationToken);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.IO.Stream" />
        <Parameter Name="bufferSize" Type="System.Int32" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="destination"><span data-ttu-id="dfd93-293">Der Stream, in den der Inhalt des aktuellen Stream kopiert wird.</span><span class="sxs-lookup"><span data-stu-id="dfd93-293">The stream to which the contents of the current stream will be copied.</span></span></param>
        <param name="bufferSize"><span data-ttu-id="dfd93-294">Die Größe des Cookies in Bytes.</span><span class="sxs-lookup"><span data-stu-id="dfd93-294">The size, in bytes, of the buffer.</span></span> <span data-ttu-id="dfd93-295">Dieser Wert muss größer als 0 sein.</span><span class="sxs-lookup"><span data-stu-id="dfd93-295">This value must be greater than zero.</span></span> <span data-ttu-id="dfd93-296">Die Standardgröße ist 81920.</span><span class="sxs-lookup"><span data-stu-id="dfd93-296">The default size is 81920.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="dfd93-297">Das Token zum überwachen von Abbruchanforderungen.</span><span class="sxs-lookup"><span data-stu-id="dfd93-297">The token to monitor for cancellation requests.</span></span> <span data-ttu-id="dfd93-298">Der Standardwert ist <see cref="P:System.Threading.CancellationToken.None" />.</span><span class="sxs-lookup"><span data-stu-id="dfd93-298">The default value is <see cref="P:System.Threading.CancellationToken.None" />.</span></span></param>
        <summary><span data-ttu-id="dfd93-299">Liest die Bytes asynchron aus dem aktuellen Stream und schreibt sie unter Verwendung einer angegebenen Puffergröße und eines Abbruchtokens in einen anderen Stream.</span><span class="sxs-lookup"><span data-stu-id="dfd93-299">Asynchronously reads the bytes from the current stream and writes them to another stream, using a specified buffer size and cancellation token.</span></span></summary>
        <returns><span data-ttu-id="dfd93-300">Eine Aufgabe, die den asynchronen Kopiervorgang darstellt.</span><span class="sxs-lookup"><span data-stu-id="dfd93-300">A task that represents the asynchronous copy operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfd93-301">Die <xref:System.IO.Stream.CopyToAsync%2A> Methode können Sie ressourcenintensive e/a-Vorgänge ausführen, ohne den Hauptthread zu blockieren.</span><span class="sxs-lookup"><span data-stu-id="dfd93-301">The <xref:System.IO.Stream.CopyToAsync%2A> method enables you to perform resource-intensive I/O operations without blocking the main thread.</span></span> <span data-ttu-id="dfd93-302">Diese Überlegungen zur Leistung sind insbesondere in einer [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)]-App oder [!INCLUDE[desktop_appname](~/includes/desktop-appname-md.md)]-App wichtig, bei der ein zeitaufwendiger Streamvorgang den UI-Thread blockieren kann und es dann den Anschein hat, dass Ihre App nicht funktioniert.</span><span class="sxs-lookup"><span data-stu-id="dfd93-302">This performance consideration is particularly important in a [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] app or [!INCLUDE[desktop_appname](~/includes/desktop-appname-md.md)] app where a time-consuming stream operation can block the UI thread and make your app appear as if it is not working.</span></span> <span data-ttu-id="dfd93-303">Die Async-Methoden werden verwendet, in Verbindung mit der `async` und `await` in Visual Basic und C#-Schlüsselwörter.</span><span class="sxs-lookup"><span data-stu-id="dfd93-303">The async methods are used in conjunction with the `async` and `await` keywords in Visual Basic and C#.</span></span>  
  
 <span data-ttu-id="dfd93-304">Wenn der Vorgang abgebrochen wird, bevor er abgeschlossen wurde, enthält die zurückgegebene Aufgabe der <xref:System.Threading.Tasks.TaskStatus.Canceled> Wert für die <xref:System.Threading.Tasks.Task.Status%2A> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="dfd93-304">If the operation is canceled before it completes, the returned task contains the <xref:System.Threading.Tasks.TaskStatus.Canceled> value for the <xref:System.Threading.Tasks.Task.Status%2A> property.</span></span>  
  
 <span data-ttu-id="dfd93-305">Das Kopieren beginnt an der aktuellen Position im aktuellen Stream.</span><span class="sxs-lookup"><span data-stu-id="dfd93-305">Copying begins at the current position in the current stream.</span></span>  
  
 <span data-ttu-id="dfd93-306">Ein Beispiel für das Kopieren der zwischen zwei Datenströmen, finden Sie die <xref:System.IO.Stream.CopyToAsync%28System.IO.Stream%29> überladen.</span><span class="sxs-lookup"><span data-stu-id="dfd93-306">For an example of copying between two streams, see the <xref:System.IO.Stream.CopyToAsync%28System.IO.Stream%29> overload.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="dfd93-307"><paramref name="destination" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="dfd93-307"><paramref name="destination" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="dfd93-308"><paramref name="buffersize" /> ist negativ oder 0 (null).</span><span class="sxs-lookup"><span data-stu-id="dfd93-308"><paramref name="buffersize" /> is negative or zero.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="dfd93-309">Entweder der aktuelle Stream oder der Zielstream wird freigegeben.</span><span class="sxs-lookup"><span data-stu-id="dfd93-309">Either the current stream or the destination stream is disposed.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="dfd93-310">Der aktuelle Stream unterstützt kein Lesen oder Zielstream unterstützt keine Schreibvorgänge.</span><span class="sxs-lookup"><span data-stu-id="dfd93-310">The current stream does not support reading, or the destination stream does not support writing.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CreateWaitHandle">
      <MemberSignature Language="C#" Value="protected virtual System.Threading.WaitHandle CreateWaitHandle ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Threading.WaitHandle CreateWaitHandle() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Stream.CreateWaitHandle" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateWaitHandle () As WaitHandle" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Threading::WaitHandle ^ CreateWaitHandle();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("CreateWaitHandle will be removed eventually.  Please use "new ManualResetEvent(false)" instead.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.WaitHandle</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="dfd93-311">Reserviert ein <see cref="T:System.Threading.WaitHandle" />-Objekt.</span><span class="sxs-lookup"><span data-stu-id="dfd93-311">Allocates a <see cref="T:System.Threading.WaitHandle" /> object.</span></span></summary>
        <returns><span data-ttu-id="dfd93-312">Ein Verweis auf das reservierte <see langword="WaitHandle" />.</span><span class="sxs-lookup"><span data-stu-id="dfd93-312">A reference to the allocated <see langword="WaitHandle" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfd93-313">Wenn zum ersten Mal aufgerufen wird, wird die aktuelle Methode erstellt eine `WaitHandle` Objekt und gibt ihn zurück.</span><span class="sxs-lookup"><span data-stu-id="dfd93-313">When called for the first time, the current method creates a `WaitHandle` object and returns it.</span></span> <span data-ttu-id="dfd93-314">Bei nachfolgenden Aufrufen `CreateWaitHandle` gibt einen Verweis auf ein neues Wait-Handle.</span><span class="sxs-lookup"><span data-stu-id="dfd93-314">On subsequent calls, `CreateWaitHandle` returns a reference to a new wait handle.</span></span>  
  
 <span data-ttu-id="dfd93-315">Verwenden Sie diese Methode, wenn Sie die asynchronen Methoden zu implementieren und eine Möglichkeit zum Blockieren benötigen in <xref:System.IO.Stream.EndRead%2A> oder <xref:System.IO.Stream.EndWrite%2A> bis der asynchrone Vorgang abgeschlossen ist.</span><span class="sxs-lookup"><span data-stu-id="dfd93-315">Use this method if you implement the asynchronous methods and require a way of blocking in <xref:System.IO.Stream.EndRead%2A> or <xref:System.IO.Stream.EndWrite%2A> until the asynchronous operation is complete.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="dfd93-316">Gibt alle vom <see cref="T:System.IO.Stream" />-Objekt verwendeten Ressourcen frei.</span><span class="sxs-lookup"><span data-stu-id="dfd93-316">Releases all resources used by the <see cref="T:System.IO.Stream" /> object.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Stream.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="dfd93-317">Gibt alle vom <see cref="T:System.IO.Stream" /> verwendeten Ressourcen frei.</span><span class="sxs-lookup"><span data-stu-id="dfd93-317">Releases all resources used by the <see cref="T:System.IO.Stream" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfd93-318">Diese Methode verwirft den Stream und durch das Schreiben von Änderungen in den Sicherungsspeicher und Schließen des Streams um Ressourcen freizugeben.</span><span class="sxs-lookup"><span data-stu-id="dfd93-318">This method disposes the stream, by writing any changes to the backing store and closing the stream to release resources.</span></span>  
  
 <span data-ttu-id="dfd93-319">Aufrufen von `Dispose` können Ressourcen von der <xref:System.IO.Stream> neu für andere Zwecke reserviert werden.</span><span class="sxs-lookup"><span data-stu-id="dfd93-319">Calling `Dispose` allows the resources used by the <xref:System.IO.Stream> to be reallocated for other purposes.</span></span> <span data-ttu-id="dfd93-320">Weitere Informationen zu `Dispose`, finden Sie unter [Bereinigen von nicht verwalteten Ressourcen](~/docs/standard/garbage-collection/unmanaged.md).</span><span class="sxs-lookup"><span data-stu-id="dfd93-320">For more information about `Dispose`, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md).</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="dfd93-321">Fügen Sie alle Bereinigungslogik für das Streamobjekt in <see cref="M:System.IO.Stream.Dispose(System.Boolean)" />.</span><span class="sxs-lookup"><span data-stu-id="dfd93-321">Place all cleanup logic for your stream object in <see cref="M:System.IO.Stream.Dispose(System.Boolean)" />.</span></span> <span data-ttu-id="dfd93-322">Überschreiben Sie nicht <see cref="M:System.IO.Stream.Close" />.</span><span class="sxs-lookup"><span data-stu-id="dfd93-322">Do not override <see cref="M:System.IO.Stream.Close" />.</span></span>  
  
 <span data-ttu-id="dfd93-323">Beachten Sie, dass aufgrund der Abwärtskompatibilität Anforderungen, die Implementierung dieser Methode die empfohlene Vorgehensweise für das Dispose-Muster unterscheidet.</span><span class="sxs-lookup"><span data-stu-id="dfd93-323">Note that because of backward compatibility requirements, this method's implementation differs from the recommended guidance for the Dispose pattern.</span></span>  <span data-ttu-id="dfd93-324">Diese Methode ruft <see cref="M:System.IO.Stream.Close" />, wodurch wiederum <see cref="M:System.IO.Stream.Dispose(System.Boolean)" />.</span><span class="sxs-lookup"><span data-stu-id="dfd93-324">This method calls <see cref="M:System.IO.Stream.Close" />, which then calls <see cref="M:System.IO.Stream.Dispose(System.Boolean)" />.</span></span></para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Stream.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="dfd93-325"><see langword="true" />, um sowohl verwaltete als auch nicht verwaltete Ressourcen freizugeben, <see langword="false" />, um ausschließlich nicht verwaltete Ressourcen freizugeben.</span><span class="sxs-lookup"><span data-stu-id="dfd93-325"><see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="dfd93-326">Gibt die von <see cref="T:System.IO.Stream" /> verwendeten nicht verwalteten Ressourcen und optional die verwalteten Ressourcen frei.</span><span class="sxs-lookup"><span data-stu-id="dfd93-326">Releases the unmanaged resources used by the <see cref="T:System.IO.Stream" /> and optionally releases the managed resources.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfd93-327">Sie sollten alle Ressourcen freizugeben, indem Sie angeben `true` für `disposing`.</span><span class="sxs-lookup"><span data-stu-id="dfd93-327">You should release all resources by specifying `true` for `disposing`.</span></span> <span data-ttu-id="dfd93-328">Wenn `disposing` ist `true`, der Datenstrom kann außerdem sicherstellen, Daten in den zugrunde liegenden Puffer geleert werden, und auf andere finalisierbare Objekte zugreifen.</span><span class="sxs-lookup"><span data-stu-id="dfd93-328">When `disposing` is `true`, the stream can also ensure data is flushed to the underlying buffer, and access other finalizable objects.</span></span>  <span data-ttu-id="dfd93-329">Dies kann nicht möglich, beim Aufruf von einem Finalizer einen mangelnde Reihenfolge von Finalizern sein.</span><span class="sxs-lookup"><span data-stu-id="dfd93-329">This may not be possible when called from a finalizer due a lack of ordering among finalizers.</span></span>  
  
 <span data-ttu-id="dfd93-330">Wenn der Stream ein Betriebssystemhandle für die Kommunikation mit der Quelle verwendet wird, erwägen Sie eine Unterklasse von <xref:System.Runtime.InteropServices.SafeHandle> für diesen Zweck.</span><span class="sxs-lookup"><span data-stu-id="dfd93-330">If your stream is using an operating system handle to communicate with its source, consider using a subclass of <xref:System.Runtime.InteropServices.SafeHandle> for this purpose.</span></span>  
  
 <span data-ttu-id="dfd93-331">Diese Methode wird aufgerufen, der öffentlich <xref:System.ComponentModel.Component.Dispose%2A> Methode und die <xref:System.Object.Finalize%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="dfd93-331">This method is called by the public <xref:System.ComponentModel.Component.Dispose%2A> method and the <xref:System.Object.Finalize%2A> method.</span></span> <span data-ttu-id="dfd93-332"><xref:System.ComponentModel.Component.Dispose%2A> Ruft die geschützte <xref:System.IO.Stream.Dispose%2A> Methode mit dem `disposing` Parametersatz auf `true`.</span><span class="sxs-lookup"><span data-stu-id="dfd93-332"><xref:System.ComponentModel.Component.Dispose%2A> invokes the protected <xref:System.IO.Stream.Dispose%2A> method with the `disposing` parameter set to `true`.</span></span> <span data-ttu-id="dfd93-333"><xref:System.Object.Finalize%2A> Ruft <xref:System.IO.Stream.Dispose%2A> mit `disposing` festgelegt `false`.</span><span class="sxs-lookup"><span data-stu-id="dfd93-333"><xref:System.Object.Finalize%2A> invokes <xref:System.IO.Stream.Dispose%2A> with `disposing` set to `false`.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="dfd93-334">Überschreiben Sie in abgeleiteten Klassen nicht die <see cref="M:System.IO.Stream.Close" /> -Methode, werden alle in den Stream der Bereinigungslogik stattdessen die <see cref="M:System.IO.Stream.Dispose(System.Boolean)" /> Methode.</span><span class="sxs-lookup"><span data-stu-id="dfd93-334">In derived classes, do not override the <see cref="M:System.IO.Stream.Close" /> method, instead, put all of the Stream cleanup logic in the <see cref="M:System.IO.Stream.Dispose(System.Boolean)" /> method.</span></span>  
  
 <span data-ttu-id="dfd93-335"><see cref="M:System.ComponentModel.Component.Dispose" /> kann von anderen Objekten mehrmals aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="dfd93-335"><see cref="M:System.ComponentModel.Component.Dispose" /> can be called multiple times by other objects.</span></span> <span data-ttu-id="dfd93-336">Beim Überschreiben von <see cref="M:System.IO.Stream.Dispose(System.Boolean)" /> müssen Sie darauf achten, nicht auf Objekte zu verweisen, die durch einen früheren Aufruf von <see cref="M:System.ComponentModel.Component.Dispose" /> freigegeben wurden.</span><span class="sxs-lookup"><span data-stu-id="dfd93-336">When overriding <see cref="M:System.IO.Stream.Dispose(System.Boolean)" />, be careful not to reference objects that have been previously disposed of in an earlier call to <see cref="M:System.ComponentModel.Component.Dispose" />.</span></span> <span data-ttu-id="dfd93-337">Weitere Informationen zum Implementieren <see cref="M:System.IO.Stream.Dispose(System.Boolean)" />, finden Sie unter [Implementieren einer Dispose-Methode](~/docs/standard/garbage-collection/implementing-dispose.md).</span><span class="sxs-lookup"><span data-stu-id="dfd93-337">For more information about how to implement <see cref="M:System.IO.Stream.Dispose(System.Boolean)" />, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
 <span data-ttu-id="dfd93-338">Weitere Informationen zu <see cref="M:System.ComponentModel.Component.Dispose" /> und <see cref="M:System.Object.Finalize" />, finden Sie unter [Bereinigen von nicht verwalteten Ressourcen](~/docs/standard/garbage-collection/unmanaged.md).</span><span class="sxs-lookup"><span data-stu-id="dfd93-338">For more information about <see cref="M:System.ComponentModel.Component.Dispose" /> and <see cref="M:System.Object.Finalize" />, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md).</span></span></para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="EndRead">
      <MemberSignature Language="C#" Value="public virtual int EndRead (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 EndRead(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Stream.EndRead(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function EndRead (asyncResult As IAsyncResult) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int EndRead(IAsyncResult ^ asyncResult);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult"><span data-ttu-id="dfd93-339">Der Verweis auf die ausstehende asynchrone Anforderung, die beendet werden soll.</span><span class="sxs-lookup"><span data-stu-id="dfd93-339">The reference to the pending asynchronous request to finish.</span></span></param>
        <summary><span data-ttu-id="dfd93-340">Wartet, bis der ausstehende asynchrone Lesevorgang abgeschlossen ist.</span><span class="sxs-lookup"><span data-stu-id="dfd93-340">Waits for the pending asynchronous read to complete.</span></span> <span data-ttu-id="dfd93-341">(Verwenden Sie stattdessen <see cref="M:System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32)" />.)</span><span class="sxs-lookup"><span data-stu-id="dfd93-341">(Consider using <see cref="M:System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32)" /> instead.)</span></span></summary>
        <returns><span data-ttu-id="dfd93-342">Die Anzahl der aus dem Stream gelesenen Bytes. Diese Anzahl kann zwischen 0 und der Anzahl der angeforderten Bytes liegen.</span><span class="sxs-lookup"><span data-stu-id="dfd93-342">The number of bytes read from the stream, between zero (0) and the number of bytes you requested.</span></span> <span data-ttu-id="dfd93-343">Streams geben nur am Ende des Streams 0 zurück, andernfalls sollten sie blockieren, bis mindestens 1 Byte verfügbar ist.</span><span class="sxs-lookup"><span data-stu-id="dfd93-343">Streams return zero (0) only at the end of the stream, otherwise, they should block until at least one byte is available.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfd93-344">In .NET Framework 4 und vorherigen Versionen müssen Sie Methoden wie <xref:System.IO.Stream.BeginRead%2A> und <xref:System.IO.Stream.EndRead%2A> verwenden, um asynchrone E/A-Vorgänge zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="dfd93-344">In the .NET Framework 4 and earlier versions, you have to use methods such as <xref:System.IO.Stream.BeginRead%2A> and <xref:System.IO.Stream.EndRead%2A> to implement asynchronous I/O operations.</span></span> <span data-ttu-id="dfd93-345">Diese Methoden sind weiterhin verfügbar, in der [!INCLUDE[net_v45](~/includes/net-v45-md.md)] zur Unterstützung von legacy-Code; allerdings der neuen asynchronen Methoden, wie z. B. <xref:System.IO.Stream.ReadAsync%2A>, <xref:System.IO.Stream.WriteAsync%2A>, <xref:System.IO.Stream.CopyToAsync%2A>, und <xref:System.IO.Stream.FlushAsync%2A>, Hilfe, die Sie implementieren leichter asynchrone e/a-Vorgänge.</span><span class="sxs-lookup"><span data-stu-id="dfd93-345">These methods are still available in the [!INCLUDE[net_v45](~/includes/net-v45-md.md)] to support legacy code; however, the new async methods, such as <xref:System.IO.Stream.ReadAsync%2A>, <xref:System.IO.Stream.WriteAsync%2A>, <xref:System.IO.Stream.CopyToAsync%2A>, and <xref:System.IO.Stream.FlushAsync%2A>, help you implement asynchronous I/O operations more easily.</span></span>  
  
 <span data-ttu-id="dfd93-346">Rufen Sie `EndRead` zu bestimmen, wie viele Bytes aus dem Stream gelesen wurden.</span><span class="sxs-lookup"><span data-stu-id="dfd93-346">Call `EndRead` to determine how many bytes were read from the stream.</span></span>  
  
 <span data-ttu-id="dfd93-347">`EndRead` kann auf einmal aufgerufen werden alle <xref:System.IAsyncResult> aus <xref:System.IO.Stream.BeginRead%2A>.</span><span class="sxs-lookup"><span data-stu-id="dfd93-347">`EndRead` can be called once on every <xref:System.IAsyncResult> from <xref:System.IO.Stream.BeginRead%2A>.</span></span>  
  
 <span data-ttu-id="dfd93-348">Diese Methode blockiert, bis die E/A-Operation abgeschlossen ist.</span><span class="sxs-lookup"><span data-stu-id="dfd93-348">This method blocks until the I/O operation has completed.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="dfd93-349"><paramref name="asyncResult" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="dfd93-349"><paramref name="asyncResult" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="dfd93-350">Ein Handle für den ausstehenden Lesevorgang ist nicht verfügbar.</span><span class="sxs-lookup"><span data-stu-id="dfd93-350">A handle to the pending read operation is not available.</span></span>  
  
 <span data-ttu-id="dfd93-351">- oder - </span><span class="sxs-lookup"><span data-stu-id="dfd93-351">-or-</span></span>  
  
 <span data-ttu-id="dfd93-352">Die anstehende Operation unterstützt keine Lesevorgänge.</span><span class="sxs-lookup"><span data-stu-id="dfd93-352">The pending operation does not support reading.</span></span></exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="dfd93-353"><paramref name="asyncResult" /> basiert nicht auf einer <see cref="M:System.IO.Stream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />-Methode im aktuellen Stream.</span><span class="sxs-lookup"><span data-stu-id="dfd93-353"><paramref name="asyncResult" /> did not originate from a <see cref="M:System.IO.Stream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> method on the current stream.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="dfd93-354">Der Stream ist geschlossen, oder ein interner Fehler ist aufgetreten.</span><span class="sxs-lookup"><span data-stu-id="dfd93-354">The stream is closed or an internal error has occurred.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="EndWrite">
      <MemberSignature Language="C#" Value="public virtual void EndWrite (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndWrite(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Stream.EndWrite(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub EndWrite (asyncResult As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void EndWrite(IAsyncResult ^ asyncResult);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult"><span data-ttu-id="dfd93-355">Ein Verweis auf die ausstehende asynchrone E/A-Anforderung.</span><span class="sxs-lookup"><span data-stu-id="dfd93-355">A reference to the outstanding asynchronous I/O request.</span></span></param>
        <summary><span data-ttu-id="dfd93-356">Beendet einen asynchronen Schreibvorgang.</span><span class="sxs-lookup"><span data-stu-id="dfd93-356">Ends an asynchronous write operation.</span></span> <span data-ttu-id="dfd93-357">(Verwenden Sie stattdessen <see cref="M:System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32)" />.)</span><span class="sxs-lookup"><span data-stu-id="dfd93-357">(Consider using <see cref="M:System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32)" /> instead.)</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfd93-358">In .NET Framework 4 und vorherigen Versionen müssen Sie Methoden wie <xref:System.IO.Stream.BeginWrite%2A> und <xref:System.IO.Stream.EndWrite%2A> verwenden, um asynchrone E/A-Vorgänge zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="dfd93-358">In the .NET Framework 4 and earlier versions, you have to use methods such as <xref:System.IO.Stream.BeginWrite%2A> and <xref:System.IO.Stream.EndWrite%2A> to implement asynchronous I/O operations.</span></span> <span data-ttu-id="dfd93-359">Diese Methoden sind weiterhin verfügbar, in der [!INCLUDE[net_v45](~/includes/net-v45-md.md)] zur Unterstützung von legacy-Code; allerdings der neuen asynchronen Methoden, wie z. B. <xref:System.IO.Stream.ReadAsync%2A>, <xref:System.IO.Stream.WriteAsync%2A>, <xref:System.IO.Stream.CopyToAsync%2A>, und <xref:System.IO.Stream.FlushAsync%2A>, Hilfe, die Sie implementieren leichter asynchrone e/a-Vorgänge.</span><span class="sxs-lookup"><span data-stu-id="dfd93-359">These methods are still available in the [!INCLUDE[net_v45](~/includes/net-v45-md.md)] to support legacy code; however, the new async methods, such as <xref:System.IO.Stream.ReadAsync%2A>, <xref:System.IO.Stream.WriteAsync%2A>, <xref:System.IO.Stream.CopyToAsync%2A>, and <xref:System.IO.Stream.FlushAsync%2A>, help you implement asynchronous I/O operations more easily.</span></span>  
  
 <span data-ttu-id="dfd93-360">`EndWrite` muss genau einmal aufgerufen werden, für jede <xref:System.IAsyncResult> aus <xref:System.IO.Stream.BeginWrite%2A>.</span><span class="sxs-lookup"><span data-stu-id="dfd93-360">`EndWrite` must be called exactly once on every <xref:System.IAsyncResult> from <xref:System.IO.Stream.BeginWrite%2A>.</span></span>  
  
 <span data-ttu-id="dfd93-361">Diese Methode blockiert, bis die E/A-Operation abgeschlossen ist.</span><span class="sxs-lookup"><span data-stu-id="dfd93-361">This method blocks until the I/O operation has completed.</span></span> <span data-ttu-id="dfd93-362">Fehler während einer asynchronen schreibanforderung, z. B. Fehler auf dem Datenträger während der e/a-Anforderung für den Thread im Threadpool ausgeführt, und werden bei einem Aufruf sichtbar `EndWrite`.</span><span class="sxs-lookup"><span data-stu-id="dfd93-362">Errors that occur during an asynchronous write request, such as a disk failure during the I/O request, occur on the thread pool thread and become visible upon a call to `EndWrite`.</span></span> <span data-ttu-id="dfd93-363">Der Thread des Threadpools ausgelöste Ausnahmen werden nicht sichtbar sein, beim Aufrufen von `EndWrite`.</span><span class="sxs-lookup"><span data-stu-id="dfd93-363">Exceptions thrown by the thread pool thread will not be visible when calling `EndWrite`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="dfd93-364"><paramref name="asyncResult" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="dfd93-364"><paramref name="asyncResult" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="dfd93-365">Ein Handle für den ausstehenden Schreibvorgang ist nicht verfügbar.</span><span class="sxs-lookup"><span data-stu-id="dfd93-365">A handle to the pending write operation is not available.</span></span>  
  
 <span data-ttu-id="dfd93-366">- oder - </span><span class="sxs-lookup"><span data-stu-id="dfd93-366">-or-</span></span>  
  
 <span data-ttu-id="dfd93-367">Die anstehende Operation unterstützt keine Schreibvorgänge.</span><span class="sxs-lookup"><span data-stu-id="dfd93-367">The pending operation does not support writing.</span></span></exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="dfd93-368"><paramref name="asyncResult" /> basiert nicht auf einer <see cref="M:System.IO.Stream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />-Methode im aktuellen Stream.</span><span class="sxs-lookup"><span data-stu-id="dfd93-368"><paramref name="asyncResult" /> did not originate from a <see cref="M:System.IO.Stream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> method on the current stream.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="dfd93-369">Der Stream ist geschlossen, oder ein interner Fehler ist aufgetreten.</span><span class="sxs-lookup"><span data-stu-id="dfd93-369">The stream is closed or an internal error has occurred.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public abstract void Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Flush() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Stream.Flush" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Flush ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Flush();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="dfd93-370">Löscht beim Überschreiben in einer abgeleiteten Klasse alle Puffer für diesen Stream und veranlasst die Ausgabe aller gepufferten Daten an das zugrunde liegende Gerät.</span><span class="sxs-lookup"><span data-stu-id="dfd93-370">When overridden in a derived class, clears all buffers for this stream and causes any buffered data to be written to the underlying device.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfd93-371">Überschreiben Sie `Flush` für Streams aus, die einen Puffer zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="dfd93-371">Override `Flush` on streams that implement a buffer.</span></span> <span data-ttu-id="dfd93-372">Verwenden Sie diese Methode, verschieben alle Informationen aus einem zugrunde liegenden Puffer an ihr Ziel, deaktivieren Sie den Puffer oder beides.</span><span class="sxs-lookup"><span data-stu-id="dfd93-372">Use this method to move any information from an underlying buffer to its destination, clear the buffer, or both.</span></span> <span data-ttu-id="dfd93-373">Je nach Zustand des Objekts, müssen Sie möglicherweise die aktuelle Position im Stream ändern (beispielsweise, wenn die zugrunde liegende stream mit Suchvorgänge unterstützt).</span><span class="sxs-lookup"><span data-stu-id="dfd93-373">Depending upon the state of the object, you might have to modify the current position within the stream (for example, if the underlying stream supports seeking).</span></span> <span data-ttu-id="dfd93-374">Weitere Informationen finden Sie unter <xref:System.IO.Stream.CanSeek%2A>.</span><span class="sxs-lookup"><span data-stu-id="dfd93-374">For additional information see <xref:System.IO.Stream.CanSeek%2A>.</span></span>  
  
 <span data-ttu-id="dfd93-375">Bei Verwendung der <xref:System.IO.StreamWriter> oder <xref:System.IO.BinaryWriter> Klasse, leert Sie nicht die Basis <xref:System.IO.Stream> Objekt.</span><span class="sxs-lookup"><span data-stu-id="dfd93-375">When using the <xref:System.IO.StreamWriter> or <xref:System.IO.BinaryWriter> class, do not flush the base <xref:System.IO.Stream> object.</span></span> <span data-ttu-id="dfd93-376">Verwenden Sie stattdessen der Klasse <xref:System.IO.Stream.Flush%2A> oder <xref:System.IO.Stream.Close%2A> -Methode, die sicherstellt, dass die Daten zuerst auf den zugrunde liegenden Stream geleert und klicken Sie dann in die Datei geschrieben werden.</span><span class="sxs-lookup"><span data-stu-id="dfd93-376">Instead, use the class's <xref:System.IO.Stream.Flush%2A> or <xref:System.IO.Stream.Close%2A> method, which makes sure that the data is flushed to the underlying stream first and then written to the file.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="dfd93-377">Ein E/A-Fehler tritt auf.</span><span class="sxs-lookup"><span data-stu-id="dfd93-377">An I/O error occurs.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="FlushAsync">
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="dfd93-378">Löscht sämtliche Puffer für diesen Stream asynchron und veranlasst die Ausgabe aller gepufferten Daten an das zugrunde liegende Gerät.</span><span class="sxs-lookup"><span data-stu-id="dfd93-378">Asynchronously clears all buffers for this stream and causes any buffered data to be written to the underlying device.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FlushAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task FlushAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task FlushAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Stream.FlushAsync" />
      <MemberSignature Language="VB.NET" Value="Public Function FlushAsync () As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ FlushAsync();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="dfd93-379">Löscht sämtliche Puffer für diesen Stream asynchron und veranlasst die Ausgabe aller gepufferten Daten an das zugrunde liegende Gerät.</span><span class="sxs-lookup"><span data-stu-id="dfd93-379">Asynchronously clears all buffers for this stream and causes any buffered data to be written to the underlying device.</span></span></summary>
        <returns><span data-ttu-id="dfd93-380">Eine Aufgabe, die die asynchrone Leerung darstellt.</span><span class="sxs-lookup"><span data-stu-id="dfd93-380">A task that represents the asynchronous flush operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfd93-381">Wenn eine abgeleitete Klasse, wie z. B. <xref:System.IO.Compression.DeflateStream> oder <xref:System.IO.Compression.GZipStream>, leert den Puffer in seiner Implementierung von der <xref:System.IO.Stream.Flush%2A> -Methode, die <xref:System.IO.Stream.FlushAsync%2A> Methode wird nicht entleert den Puffer.</span><span class="sxs-lookup"><span data-stu-id="dfd93-381">If a derived class, such as <xref:System.IO.Compression.DeflateStream> or <xref:System.IO.Compression.GZipStream>, does not flush the buffer in its implementation of the <xref:System.IO.Stream.Flush%2A> method, the <xref:System.IO.Stream.FlushAsync%2A> method will not flush the buffer.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="dfd93-382">Der Stream wurde verworfen.</span><span class="sxs-lookup"><span data-stu-id="dfd93-382">The stream has been disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="FlushAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task FlushAsync (System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task FlushAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Stream.FlushAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ FlushAsync(System::Threading::CancellationToken cancellationToken);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"><span data-ttu-id="dfd93-383">Das Token zum überwachen von Abbruchanforderungen.</span><span class="sxs-lookup"><span data-stu-id="dfd93-383">The token to monitor for cancellation requests.</span></span> <span data-ttu-id="dfd93-384">Der Standardwert ist <see cref="P:System.Threading.CancellationToken.None" />.</span><span class="sxs-lookup"><span data-stu-id="dfd93-384">The default value is <see cref="P:System.Threading.CancellationToken.None" />.</span></span></param>
        <summary><span data-ttu-id="dfd93-385">Löscht alle Puffer für diesen Stream asynchron, veranlasst die Ausgabe aller gepufferten Daten an das zugrunde liegende Gerät und überwacht Abbruchanforderungen.</span><span class="sxs-lookup"><span data-stu-id="dfd93-385">Asynchronously clears all buffers for this stream, causes any buffered data to be written to the underlying device, and monitors cancellation requests.</span></span></summary>
        <returns><span data-ttu-id="dfd93-386">Eine Aufgabe, die die asynchrone Leerung darstellt.</span><span class="sxs-lookup"><span data-stu-id="dfd93-386">A task that represents the asynchronous flush operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfd93-387">Wenn der Vorgang abgebrochen wird, bevor er abgeschlossen wurde, enthält die zurückgegebene Aufgabe der <xref:System.Threading.Tasks.TaskStatus.Canceled> Wert für die <xref:System.Threading.Tasks.Task.Status%2A> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="dfd93-387">If the operation is canceled before it completes, the returned task contains the <xref:System.Threading.Tasks.TaskStatus.Canceled> value for the <xref:System.Threading.Tasks.Task.Status%2A> property.</span></span>  
  
 <span data-ttu-id="dfd93-388">Wenn eine abgeleitete Klasse, wie z. B. <xref:System.IO.Compression.DeflateStream> oder <xref:System.IO.Compression.GZipStream>, leert den Puffer in seiner Implementierung von der <xref:System.IO.Stream.Flush%2A> -Methode, die <xref:System.IO.Stream.FlushAsync%2A> Methode wird nicht entleert den Puffer.</span><span class="sxs-lookup"><span data-stu-id="dfd93-388">If a derived class, such as <xref:System.IO.Compression.DeflateStream> or <xref:System.IO.Compression.GZipStream>, does not flush the buffer in its implementation of the <xref:System.IO.Stream.Flush%2A> method, the <xref:System.IO.Stream.FlushAsync%2A> method will not flush the buffer.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="dfd93-389">Der Stream wurde verworfen.</span><span class="sxs-lookup"><span data-stu-id="dfd93-389">The stream has been disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Length">
      <MemberSignature Language="C#" Value="public abstract long Length { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 Length" />
      <MemberSignature Language="DocId" Value="P:System.IO.Stream.Length" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Length As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property long Length { long get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dfd93-390">Ruft beim Überschreiben in einer abgeleiteten Klasse die Länge des Streams in Bytes ab.</span><span class="sxs-lookup"><span data-stu-id="dfd93-390">When overridden in a derived class, gets the length in bytes of the stream.</span></span></summary>
        <value><span data-ttu-id="dfd93-391">Ein Long-Wert, der die Länge des Streams in Bytes darstellt.</span><span class="sxs-lookup"><span data-stu-id="dfd93-391">A long value representing the length of the stream in bytes.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="dfd93-392">Eine aus <see langword="Stream" /> abgeleitete Klasse unterstützt keine Suchvorgänge.</span><span class="sxs-lookup"><span data-stu-id="dfd93-392">A class derived from <see langword="Stream" /> does not support seeking.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="dfd93-393">Es wurden Methoden aufgerufen, nachdem der Stream geschlossen wurde.</span><span class="sxs-lookup"><span data-stu-id="dfd93-393">Methods were called after the stream was closed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Null">
      <MemberSignature Language="C#" Value="public static readonly System.IO.Stream Null;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.IO.Stream Null" />
      <MemberSignature Language="DocId" Value="F:System.IO.Stream.Null" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Null As Stream " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::IO::Stream ^ Null;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dfd93-394">Ein <see langword="Stream" /> ohne Sicherungsspeicher.</span><span class="sxs-lookup"><span data-stu-id="dfd93-394">A <see langword="Stream" /> with no backing store.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfd93-395">Verwendung `Null` Umleiten von Ausgaben in einen Stream, der keine Ressourcen des Betriebssystems belegt wird.</span><span class="sxs-lookup"><span data-stu-id="dfd93-395">Use `Null` to redirect output to a stream that will not consume any operating system resources.</span></span> <span data-ttu-id="dfd93-396">Wenn die Methoden der `Stream` , die Schreiben von aufgerufen werden bereitstellen `Null`, der Aufruf zurückgegeben und keine Daten geschrieben werden.</span><span class="sxs-lookup"><span data-stu-id="dfd93-396">When the methods of `Stream` that provide writing are invoked on `Null`, the call simply returns, and no data is written.</span></span> <span data-ttu-id="dfd93-397">`Null` implementiert auch eine `Read` Methode, die 0 (null), ohne Lesen von Daten zurückgibt.</span><span class="sxs-lookup"><span data-stu-id="dfd93-397">`Null` also implements a `Read` method that returns zero without reading data.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ObjectInvariant">
      <MemberSignature Language="C#" Value="protected virtual void ObjectInvariant ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void ObjectInvariant() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Stream.ObjectInvariant" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub ObjectInvariant ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void ObjectInvariant();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Do not call or override this method.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="dfd93-398">Bietet Unterstützung für einen <see cref="T:System.Diagnostics.Contracts.Contract" />.</span><span class="sxs-lookup"><span data-stu-id="dfd93-398">Provides support for a <see cref="T:System.Diagnostics.Contracts.Contract" />.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Position">
      <MemberSignature Language="C#" Value="public abstract long Position { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 Position" />
      <MemberSignature Language="DocId" Value="P:System.IO.Stream.Position" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Property Position As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property long Position { long get(); void set(long value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dfd93-399">Ruft beim Überschreiben in einer abgeleiteten Klasse die Position im aktuellen Stream ab oder legt diese fest.</span><span class="sxs-lookup"><span data-stu-id="dfd93-399">When overridden in a derived class, gets or sets the position within the current stream.</span></span></summary>
        <value><span data-ttu-id="dfd93-400">Die aktuelle Position innerhalb des Streams.</span><span class="sxs-lookup"><span data-stu-id="dfd93-400">The current position within the stream.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfd93-401">Der Datenstrom muss Suchvorgänge zum Abrufen oder Festlegen der Position unterstützt.</span><span class="sxs-lookup"><span data-stu-id="dfd93-401">The stream must support seeking to get or set the position.</span></span> <span data-ttu-id="dfd93-402">Verwenden der <xref:System.IO.Stream.CanSeek%2A> Eigenschaft, um zu bestimmen, ob der Stream Suchvorgänge unterstützt.</span><span class="sxs-lookup"><span data-stu-id="dfd93-402">Use the <xref:System.IO.Stream.CanSeek%2A> property to determine whether the stream supports seeking.</span></span>  
  
 <span data-ttu-id="dfd93-403">Suchvorgänge, die an einem beliebigen Speicherort überschreitet die Länge des Streams wird unterstützt.</span><span class="sxs-lookup"><span data-stu-id="dfd93-403">Seeking to any location beyond the length of the stream is supported.</span></span>  
  
 <span data-ttu-id="dfd93-404">Die `Position` Eigenschaft ist nicht behalten Sie den Überblick über der Anzahl von Bytes aus der Datenstrom, der verarbeitet wurden übersprungen, oder beides.</span><span class="sxs-lookup"><span data-stu-id="dfd93-404">The `Position` property does not keep track of the number of bytes from the stream that have been consumed, skipped, or both.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="dfd93-405">Ein E/A-Fehler tritt auf.</span><span class="sxs-lookup"><span data-stu-id="dfd93-405">An I/O error occurs.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="dfd93-406">Vom Stream wird Suchen nicht unterstützt.</span><span class="sxs-lookup"><span data-stu-id="dfd93-406">The stream does not support seeking.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="dfd93-407">Es wurden Methoden aufgerufen, nachdem der Stream geschlossen wurde.</span><span class="sxs-lookup"><span data-stu-id="dfd93-407">Methods were called after the stream was closed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public virtual int Read (Span&lt;byte&gt; buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Read(valuetype System.Span`1&lt;unsigned int8&gt; buffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Stream.Read(System.Span{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Read (buffer As Span(Of Byte)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int Read(Span&lt;System::Byte&gt; buffer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Span&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="buffer">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public abstract int Read (byte[] buffer, int offset, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Read([out] unsigned int8[] buffer, int32 offset, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Stream.Read(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Read (buffer As Byte(), offset As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract int Read(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="dfd93-408">Ein Bytearray.</span><span class="sxs-lookup"><span data-stu-id="dfd93-408">An array of bytes.</span></span> <span data-ttu-id="dfd93-409">Wenn diese Methode zurückgegeben wird, enthält der Puffer das angegebene Bytearray mit den Werten zwischen <c>offset</c> und (<c>offset</c> + <c>count</c> –1), die durch aus der aktuellen Quelle gelesene Bytes ersetzt wurden.</span><span class="sxs-lookup"><span data-stu-id="dfd93-409">When this method returns, the buffer contains the specified byte array with the values between <c>offset</c> and (<c>offset</c> + <c>count</c> - 1) replaced by the bytes read from the current source.</span></span></param>
        <param name="offset"><span data-ttu-id="dfd93-410">Der nullbasierte Byteoffset in <c>buffer</c>, ab dem die aus dem aktuellen Stream gelesenen Daten gespeichert werden sollen.</span><span class="sxs-lookup"><span data-stu-id="dfd93-410">The zero-based byte offset in <c>buffer</c> at which to begin storing the data read from the current stream.</span></span></param>
        <param name="count"><span data-ttu-id="dfd93-411">Die maximale Anzahl an Bytes, die aus dem aktuellen Stream gelesen werden sollen.</span><span class="sxs-lookup"><span data-stu-id="dfd93-411">The maximum number of bytes to be read from the current stream.</span></span></param>
        <summary><span data-ttu-id="dfd93-412">Liest beim Überschreiben in einer abgeleiteten Klasse eine Folge von Bytes aus dem aktuellen Stream und erhöht die Position im Stream um die Anzahl der gelesenen Bytes.</span><span class="sxs-lookup"><span data-stu-id="dfd93-412">When overridden in a derived class, reads a sequence of bytes from the current stream and advances the position within the stream by the number of bytes read.</span></span></summary>
        <returns><span data-ttu-id="dfd93-413">Die Gesamtanzahl der in den Puffer gelesenen Bytes.</span><span class="sxs-lookup"><span data-stu-id="dfd93-413">The total number of bytes read into the buffer.</span></span> <span data-ttu-id="dfd93-414">Dies kann weniger als die Anzahl der angeforderten Bytes sein, wenn diese Anzahl an Bytes derzeit nicht verfügbar ist, oder 0, wenn das Ende des Streams erreicht ist.</span><span class="sxs-lookup"><span data-stu-id="dfd93-414">This can be less than the number of bytes requested if that many bytes are not currently available, or zero (0) if the end of the stream has been reached.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfd93-415">Verwenden der <xref:System.IO.Stream.CanRead%2A> Eigenschaft, um zu bestimmen, ob die aktuelle Instanz Lesevorgänge unterstützt.</span><span class="sxs-lookup"><span data-stu-id="dfd93-415">Use the <xref:System.IO.Stream.CanRead%2A> property to determine whether the current instance supports reading.</span></span> <span data-ttu-id="dfd93-416">Verwenden der <xref:System.IO.Stream.ReadAsync%2A> Methode, um asynchron aus dem aktuellen Stream zu lesen.</span><span class="sxs-lookup"><span data-stu-id="dfd93-416">Use the <xref:System.IO.Stream.ReadAsync%2A> method to read asynchronously from the current stream.</span></span>  
  
 <span data-ttu-id="dfd93-417">Implementierungen dieser Methode lesen maximal `count` Bytes aus dem aktuellen stream und speichert diese im `buffer` beginnend `offset`.</span><span class="sxs-lookup"><span data-stu-id="dfd93-417">Implementations of this method read a maximum of `count` bytes from the current stream and store them in `buffer` beginning at `offset`.</span></span> <span data-ttu-id="dfd93-418">Die aktuelle Position im Stream wird durch die Anzahl der gelesenen Bytes erweitert; Wenn eine Ausnahme auftritt, bleibt die aktuelle Position im Stream jedoch unverändert.</span><span class="sxs-lookup"><span data-stu-id="dfd93-418">The current position within the stream is advanced by the number of bytes read; however, if an exception occurs, the current position within the stream remains unchanged.</span></span> <span data-ttu-id="dfd93-419">Implementierungen geben die Anzahl der gelesenen Bytes zurück.</span><span class="sxs-lookup"><span data-stu-id="dfd93-419">Implementations return the number of bytes read.</span></span> <span data-ttu-id="dfd93-420">Die Implementierung blockiert, bis mindestens 1 Byte Daten gelesen werden kann, dass keine Daten verfügbar sind.</span><span class="sxs-lookup"><span data-stu-id="dfd93-420">The implementation will block until at least one byte of data can be read, in the event that no data is available.</span></span> <span data-ttu-id="dfd93-421"><xref:System.IO.Stream.Read%2A> nur, wenn keine weiteren Daten in den Datenstrom vorhanden ist und nicht mehr (z. B. ein geschlossener Socket oder ein Dateiende) erwartet wird, wird 0 zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="dfd93-421"><xref:System.IO.Stream.Read%2A> returns 0 only when there is no more data in the stream and no more is expected (such as a closed socket or end of file).</span></span> <span data-ttu-id="dfd93-422">Eine Implementierung kann weniger Bytes als angefordert zurückgeben, selbst wenn das Ende des Streams nicht erreicht wurde.</span><span class="sxs-lookup"><span data-stu-id="dfd93-422">An implementation is free to return fewer bytes than requested even if the end of the stream has not been reached.</span></span>  
  
 <span data-ttu-id="dfd93-423">Verwendung <xref:System.IO.BinaryReader> zum Lesen von primitiven Datentypen.</span><span class="sxs-lookup"><span data-stu-id="dfd93-423">Use <xref:System.IO.BinaryReader> for reading primitive data types.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dfd93-424">Das folgende Beispiel zeigt, wie Sie <xref:System.IO.Stream.Read%2A> einen Block von Daten zu lesen.</span><span class="sxs-lookup"><span data-stu-id="dfd93-424">The following example shows how to use <xref:System.IO.Stream.Read%2A> to read a block of data.</span></span>  
  
 [!code-cpp[Classic Stream.Read Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Stream.Read Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Stream.Read Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Stream.Read Example/CS/source.cs#1)]
 [!code-vb[Classic Stream.Read Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Stream.Read Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="dfd93-425">Die Summe von <paramref name="offset" /> und <paramref name="count" /> ist größer als die Pufferlänge.</span><span class="sxs-lookup"><span data-stu-id="dfd93-425">The sum of <paramref name="offset" /> and <paramref name="count" /> is larger than the buffer length.</span></span></exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="dfd93-426"><paramref name="buffer" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="dfd93-426"><paramref name="buffer" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="dfd93-427"><paramref name="offset" /> oder <paramref name="count" /> ist ein negativer Wert.</span><span class="sxs-lookup"><span data-stu-id="dfd93-427"><paramref name="offset" /> or <paramref name="count" /> is negative.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="dfd93-428">Ein E/A-Fehler tritt auf.</span><span class="sxs-lookup"><span data-stu-id="dfd93-428">An I/O error occurs.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="dfd93-429">Lesevorgänge werden vom Stream nicht unterstützt.</span><span class="sxs-lookup"><span data-stu-id="dfd93-429">The stream does not support reading.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="dfd93-430">Es wurden Methoden aufgerufen, nachdem der Stream geschlossen wurde.</span><span class="sxs-lookup"><span data-stu-id="dfd93-430">Methods were called after the stream was closed.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ReadAsync">
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="dfd93-431">Liest eine Bytesequenz asynchron aus dem aktuellen Stream und setzt die Position in diesem Stream um die Anzahl der gelesenen Bytes nach vorn.</span><span class="sxs-lookup"><span data-stu-id="dfd93-431">Asynchronously reads a sequence of bytes from the current stream and advances the position within the stream by the number of bytes read.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ReadAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.ValueTask&lt;int&gt; ReadAsync (Memory&lt;byte&gt; buffer, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Threading.Tasks.ValueTask`1&lt;int32&gt; ReadAsync(valuetype System.Memory`1&lt;unsigned int8&gt; buffer, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Stream.ReadAsync(System.Memory{System.Byte},System.Threading.CancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ValueTask&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Memory&lt;System.Byte&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="buffer">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;int&gt; ReadAsync (byte[] buffer, int offset, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;int32&gt; ReadAsync(unsigned int8[] buffer, int32 offset, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function ReadAsync (buffer As Byte(), offset As Integer, count As Integer) As Task(Of Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;int&gt; ^ ReadAsync(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="dfd93-432">Der Puffer, in den die Daten geschrieben werden sollen.</span><span class="sxs-lookup"><span data-stu-id="dfd93-432">The buffer to write the data into.</span></span></param>
        <param name="offset"><span data-ttu-id="dfd93-433">Der Byteoffset in <c>buffer</c>, ab dem Daten aus dem Stream geschrieben werden sollen.</span><span class="sxs-lookup"><span data-stu-id="dfd93-433">The byte offset in <c>buffer</c> at which to begin writing data from the stream.</span></span></param>
        <param name="count"><span data-ttu-id="dfd93-434">Die maximale Anzahl der zu lesenden Bytes.</span><span class="sxs-lookup"><span data-stu-id="dfd93-434">The maximum number of bytes to read.</span></span></param>
        <summary><span data-ttu-id="dfd93-435">Liest eine Bytesequenz asynchron aus dem aktuellen Stream und setzt die Position in diesem Stream um die Anzahl der gelesenen Bytes nach vorn.</span><span class="sxs-lookup"><span data-stu-id="dfd93-435">Asynchronously reads a sequence of bytes from the current stream and advances the position within the stream by the number of bytes read.</span></span></summary>
        <returns><span data-ttu-id="dfd93-436">Eine Aufgabe, die den asynchronen Lesevorgang darstellt.</span><span class="sxs-lookup"><span data-stu-id="dfd93-436">A task that represents the asynchronous read operation.</span></span> <span data-ttu-id="dfd93-437">Der Wert des <paramref name="TResult" />-Parameters enthält die Gesamtzahl der Bytes, die in den Puffer gelesen werden.</span><span class="sxs-lookup"><span data-stu-id="dfd93-437">The value of the <paramref name="TResult" /> parameter contains the total number of bytes read into the buffer.</span></span> <span data-ttu-id="dfd93-438">Der Ergebniswert kann niedriger als die Anzahl der angeforderten Bytes sein, wenn die Anzahl an derzeit verfügbaren Bytes kleiner ist als die angeforderte Anzahl, oder sie kann 0 (null) sein, wenn das Datenstromende erreicht ist.</span><span class="sxs-lookup"><span data-stu-id="dfd93-438">The result value can be less than the number of bytes requested if the number of bytes currently available is less than the requested number, or it can be 0 (zero) if the end of the stream has been reached.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfd93-439">Die <xref:System.IO.Stream.ReadAsync%2A> Methode können Sie ressourcenintensive e/a-Vorgänge ausführen, ohne den Hauptthread zu blockieren.</span><span class="sxs-lookup"><span data-stu-id="dfd93-439">The <xref:System.IO.Stream.ReadAsync%2A> method enables you to perform resource-intensive I/O operations without blocking the main thread.</span></span> <span data-ttu-id="dfd93-440">Diese Überlegungen zur Leistung sind insbesondere in einer [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)]-App oder [!INCLUDE[desktop_appname](~/includes/desktop-appname-md.md)]-App wichtig, bei der ein zeitaufwendiger Streamvorgang den UI-Thread blockieren kann und es dann den Anschein hat, dass Ihre App nicht funktioniert.</span><span class="sxs-lookup"><span data-stu-id="dfd93-440">This performance consideration is particularly important in a [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] app or [!INCLUDE[desktop_appname](~/includes/desktop-appname-md.md)] app where a time-consuming stream operation can block the UI thread and make your app appear as if it is not working.</span></span> <span data-ttu-id="dfd93-441">Die Async-Methoden werden verwendet, in Verbindung mit der `async` und `await` in Visual Basic und C#-Schlüsselwörter.</span><span class="sxs-lookup"><span data-stu-id="dfd93-441">The async methods are used in conjunction with the `async` and `await` keywords in Visual Basic and C#.</span></span>  
  
 <span data-ttu-id="dfd93-442">Verwenden der <xref:System.IO.Stream.CanRead%2A> Eigenschaft, um zu bestimmen, ob die aktuelle Instanz Lesevorgänge unterstützt.</span><span class="sxs-lookup"><span data-stu-id="dfd93-442">Use the <xref:System.IO.Stream.CanRead%2A> property to determine whether the current instance supports reading.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dfd93-443">Im folgende Beispiel wird gezeigt, wie asynchron aus einer Datei gelesen werden.</span><span class="sxs-lookup"><span data-stu-id="dfd93-443">The following example shows how to read from a file asynchronously.</span></span> <span data-ttu-id="dfd93-444">Im Beispiel wird die <xref:System.IO.FileStream> -Klasse, abgeleitet von der <xref:System.IO.Stream> Klasse.</span><span class="sxs-lookup"><span data-stu-id="dfd93-444">The example uses the <xref:System.IO.FileStream> class, which derives from the <xref:System.IO.Stream> class.</span></span>  
  
 [!code-csharp[Asynchronous_File_IO_async#4](~/samples/snippets/csharp/VS_Snippets_CLR/Asynchronous_File_IO_async/cs/example4.cs#4)]
 [!code-vb[Asynchronous_File_IO_async#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/Asynchronous_File_IO_async/vb/example4.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="dfd93-445"><paramref name="buffer" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="dfd93-445"><paramref name="buffer" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="dfd93-446"><paramref name="offset" /> oder <paramref name="count" /> ist ein negativer Wert.</span><span class="sxs-lookup"><span data-stu-id="dfd93-446"><paramref name="offset" /> or <paramref name="count" /> is negative.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="dfd93-447">Die Summe von <paramref name="offset" /> und <paramref name="count" /> ist größer als die Pufferlänge.</span><span class="sxs-lookup"><span data-stu-id="dfd93-447">The sum of <paramref name="offset" /> and <paramref name="count" /> is larger than the buffer length.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="dfd93-448">Lesevorgänge werden vom Stream nicht unterstützt.</span><span class="sxs-lookup"><span data-stu-id="dfd93-448">The stream does not support reading.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="dfd93-449">Der Stream wurde verworfen.</span><span class="sxs-lookup"><span data-stu-id="dfd93-449">The stream has been disposed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="dfd93-450">Der Stream wird zurzeit von einem vorherigen Lesevorgang verwendet.</span><span class="sxs-lookup"><span data-stu-id="dfd93-450">The stream is currently in use by a previous read operation.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ReadAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;int&gt; ReadAsync (byte[] buffer, int offset, int count, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;int32&gt; ReadAsync(unsigned int8[] buffer, int32 offset, int32 count, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task&lt;int&gt; ^ ReadAsync(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count, System::Threading::CancellationToken cancellationToken);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="dfd93-451">Der Puffer, in den die Daten geschrieben werden sollen.</span><span class="sxs-lookup"><span data-stu-id="dfd93-451">The buffer to write the data into.</span></span></param>
        <param name="offset"><span data-ttu-id="dfd93-452">Der Byteoffset in <c>buffer</c>, ab dem Daten aus dem Stream geschrieben werden sollen.</span><span class="sxs-lookup"><span data-stu-id="dfd93-452">The byte offset in <c>buffer</c> at which to begin writing data from the stream.</span></span></param>
        <param name="count"><span data-ttu-id="dfd93-453">Die maximale Anzahl der zu lesenden Bytes.</span><span class="sxs-lookup"><span data-stu-id="dfd93-453">The maximum number of bytes to read.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="dfd93-454">Das Token zum überwachen von Abbruchanforderungen.</span><span class="sxs-lookup"><span data-stu-id="dfd93-454">The token to monitor for cancellation requests.</span></span> <span data-ttu-id="dfd93-455">Der Standardwert ist <see cref="P:System.Threading.CancellationToken.None" />.</span><span class="sxs-lookup"><span data-stu-id="dfd93-455">The default value is <see cref="P:System.Threading.CancellationToken.None" />.</span></span></param>
        <summary><span data-ttu-id="dfd93-456">Liest eine Folge von Bytes asynchron aus dem aktuellen Stream, erhöht die Position im Stream um die Anzahl der gelesenen Bytes und überwacht Abbruchanfragen.</span><span class="sxs-lookup"><span data-stu-id="dfd93-456">Asynchronously reads a sequence of bytes from the current stream, advances the position within the stream by the number of bytes read, and monitors cancellation requests.</span></span></summary>
        <returns><span data-ttu-id="dfd93-457">Eine Aufgabe, die den asynchronen Lesevorgang darstellt.</span><span class="sxs-lookup"><span data-stu-id="dfd93-457">A task that represents the asynchronous read operation.</span></span> <span data-ttu-id="dfd93-458">Der Wert des <paramref name="TResult" />-Parameters enthält die Gesamtzahl der Bytes, die in den Puffer gelesen werden.</span><span class="sxs-lookup"><span data-stu-id="dfd93-458">The value of the <paramref name="TResult" /> parameter contains the total number of bytes read into the buffer.</span></span> <span data-ttu-id="dfd93-459">Der Ergebniswert kann niedriger als die Anzahl der angeforderten Bytes sein, wenn die Anzahl an derzeit verfügbaren Bytes kleiner ist als die angeforderte Anzahl, oder sie kann 0 (null) sein, wenn das Datenstromende erreicht ist.</span><span class="sxs-lookup"><span data-stu-id="dfd93-459">The result value can be less than the number of bytes requested if the number of bytes currently available is less than the requested number, or it can be 0 (zero) if the end of the stream has been reached.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfd93-460">Die <xref:System.IO.Stream.ReadAsync%2A> Methode können Sie ressourcenintensive e/a-Vorgänge ausführen, ohne den Hauptthread zu blockieren.</span><span class="sxs-lookup"><span data-stu-id="dfd93-460">The <xref:System.IO.Stream.ReadAsync%2A> method enables you to perform resource-intensive I/O operations without blocking the main thread.</span></span> <span data-ttu-id="dfd93-461">Diese Überlegungen zur Leistung sind insbesondere in einer [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)]-App oder [!INCLUDE[desktop_appname](~/includes/desktop-appname-md.md)]-App wichtig, bei der ein zeitaufwendiger Streamvorgang den UI-Thread blockieren kann und es dann den Anschein hat, dass Ihre App nicht funktioniert.</span><span class="sxs-lookup"><span data-stu-id="dfd93-461">This performance consideration is particularly important in a [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] app or [!INCLUDE[desktop_appname](~/includes/desktop-appname-md.md)] app where a time-consuming stream operation can block the UI thread and make your app appear as if it is not working.</span></span> <span data-ttu-id="dfd93-462">Die Async-Methoden werden verwendet, in Verbindung mit der `async` und `await` in Visual Basic und C#-Schlüsselwörter.</span><span class="sxs-lookup"><span data-stu-id="dfd93-462">The async methods are used in conjunction with the `async` and `await` keywords in Visual Basic and C#.</span></span>  
  
 <span data-ttu-id="dfd93-463">Verwenden der <xref:System.IO.Stream.CanRead%2A> Eigenschaft, um zu bestimmen, ob die aktuelle Instanz Lesevorgänge unterstützt.</span><span class="sxs-lookup"><span data-stu-id="dfd93-463">Use the <xref:System.IO.Stream.CanRead%2A> property to determine whether the current instance supports reading.</span></span>  
  
 <span data-ttu-id="dfd93-464">Wenn der Vorgang abgebrochen wird, bevor er abgeschlossen wurde, enthält die zurückgegebene Aufgabe der <xref:System.Threading.Tasks.TaskStatus.Canceled> Wert für die <xref:System.Threading.Tasks.Task.Status%2A> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="dfd93-464">If the operation is canceled before it completes, the returned task contains the <xref:System.Threading.Tasks.TaskStatus.Canceled> value for the <xref:System.Threading.Tasks.Task.Status%2A> property.</span></span>  
  
 <span data-ttu-id="dfd93-465">Ein Beispiel finden Sie unter der <xref:System.IO.Stream.ReadAsync%28System.Byte%5B%5D%2CSystem.Int32%2CSystem.Int32%29> überladen.</span><span class="sxs-lookup"><span data-stu-id="dfd93-465">For an example, see the <xref:System.IO.Stream.ReadAsync%28System.Byte%5B%5D%2CSystem.Int32%2CSystem.Int32%29> overload.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="dfd93-466"><paramref name="buffer" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="dfd93-466"><paramref name="buffer" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="dfd93-467"><paramref name="offset" /> oder <paramref name="count" /> ist ein negativer Wert.</span><span class="sxs-lookup"><span data-stu-id="dfd93-467"><paramref name="offset" /> or <paramref name="count" /> is negative.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="dfd93-468">Die Summe von <paramref name="offset" /> und <paramref name="count" /> ist größer als die Pufferlänge.</span><span class="sxs-lookup"><span data-stu-id="dfd93-468">The sum of <paramref name="offset" /> and <paramref name="count" /> is larger than the buffer length.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="dfd93-469">Lesevorgänge werden vom Stream nicht unterstützt.</span><span class="sxs-lookup"><span data-stu-id="dfd93-469">The stream does not support reading.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="dfd93-470">Der Stream wurde verworfen.</span><span class="sxs-lookup"><span data-stu-id="dfd93-470">The stream has been disposed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="dfd93-471">Der Stream wird zurzeit von einem vorherigen Lesevorgang verwendet.</span><span class="sxs-lookup"><span data-stu-id="dfd93-471">The stream is currently in use by a previous read operation.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ReadByte">
      <MemberSignature Language="C#" Value="public virtual int ReadByte ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 ReadByte() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Stream.ReadByte" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadByte () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int ReadByte();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="dfd93-472">Liest ein Byte aus dem Stream und erhöht die Position im Stream um ein Byte, oder gibt -1 zurück, wenn das Ende des Streams erreicht ist.</span><span class="sxs-lookup"><span data-stu-id="dfd93-472">Reads a byte from the stream and advances the position within the stream by one byte, or returns -1 if at the end of the stream.</span></span></summary>
        <returns><span data-ttu-id="dfd93-473">Das Byte ohne Vorzeichen, umgewandelt in <see langword="Int32" />, oder -1, wenn das Ende des Streams erreicht ist.</span><span class="sxs-lookup"><span data-stu-id="dfd93-473">The unsigned byte cast to an <see langword="Int32" />, or -1 if at the end of the stream.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfd93-474">Verwenden der <xref:System.IO.Stream.CanRead%2A> Eigenschaft, um zu bestimmen, ob die aktuelle Instanz Lesevorgänge unterstützt.</span><span class="sxs-lookup"><span data-stu-id="dfd93-474">Use the <xref:System.IO.Stream.CanRead%2A> property to determine whether the current instance supports reading.</span></span>  
  
 <span data-ttu-id="dfd93-475">Der Stream bearbeiten, nachdem der Stream geschlossen wurde auslösen konnte ein <xref:System.ObjectDisposedException>.</span><span class="sxs-lookup"><span data-stu-id="dfd93-475">Attempts to manipulate the stream after the stream has been closed could throw an <xref:System.ObjectDisposedException>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="dfd93-476">Lesevorgänge werden vom Stream nicht unterstützt.</span><span class="sxs-lookup"><span data-stu-id="dfd93-476">The stream does not support reading.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="dfd93-477">Es wurden Methoden aufgerufen, nachdem der Stream geschlossen wurde.</span><span class="sxs-lookup"><span data-stu-id="dfd93-477">Methods were called after the stream was closed.</span></span></exception>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="dfd93-478">Die standardmäßige Implementierung auf <see langword="Stream" /> erstellt ein neues Single-Byte-Array und ruft dann <see cref="M:System.IO.Stream.Read(System.Byte[],System.Int32,System.Int32)" />.</span><span class="sxs-lookup"><span data-stu-id="dfd93-478">The default implementation on <see langword="Stream" /> creates a new single-byte array and then calls <see cref="M:System.IO.Stream.Read(System.Byte[],System.Int32,System.Int32)" />.</span></span> <span data-ttu-id="dfd93-479">Während dies formal richtig ist, ist es ineffizient.</span><span class="sxs-lookup"><span data-stu-id="dfd93-479">While this is formally correct, it is inefficient.</span></span> <span data-ttu-id="dfd93-480">Jeder Stream mit einem internen Puffer sollte diese Methode überschreiben und eine wesentlich effizienter Version, die den Puffer direkt, liest die Zuordnung zusätzlichen Array bei jedem Aufruf zu vermeiden.</span><span class="sxs-lookup"><span data-stu-id="dfd93-480">Any stream with an internal buffer should override this method and provide a much more efficient version that reads the buffer directly, avoiding the extra array allocation on every call.</span></span></para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="ReadTimeout">
      <MemberSignature Language="C#" Value="public virtual int ReadTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ReadTimeout" />
      <MemberSignature Language="DocId" Value="P:System.IO.Stream.ReadTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ReadTimeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int ReadTimeout { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dfd93-481">Ruft einen Wert in Millisekunden ab, der bestimmt, wie lange der Stream versucht, Lesevorgänge durchzuführen, bevor ein Timeout auftritt, oder legt diesen fest.</span><span class="sxs-lookup"><span data-stu-id="dfd93-481">Gets or sets a value, in miliseconds, that determines how long the stream will attempt to read before timing out.</span></span></summary>
        <value><span data-ttu-id="dfd93-482">Ein Wert in Millisekunden, der bestimmt, wie lange der Stream versucht, Lesevorgänge durchzuführen, bevor ein Timeout auftritt.</span><span class="sxs-lookup"><span data-stu-id="dfd93-482">A value, in miliseconds, that determines how long the stream will attempt to read before timing out.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="dfd93-483">Die <see cref="P:System.IO.Stream.ReadTimeout" />-Methode löst immer eine <see cref="T:System.InvalidOperationException" /> aus.</span><span class="sxs-lookup"><span data-stu-id="dfd93-483">The <see cref="P:System.IO.Stream.ReadTimeout" /> method always throws an <see cref="T:System.InvalidOperationException" />.</span></span></exception>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="dfd93-484">Die <see cref="P:System.IO.Stream.ReadTimeout" /> Eigenschaft sollte überschrieben werden, um das entsprechende Verhalten für den Stream bereitzustellen.</span><span class="sxs-lookup"><span data-stu-id="dfd93-484">The <see cref="P:System.IO.Stream.ReadTimeout" /> property should be overridden to provide the appropriate behavior for the stream.</span></span> <span data-ttu-id="dfd93-485">Wenn der Stream ein Timeout nicht unterstützt, sollte diese Eigenschaft Auslösen einer <see cref="T:System.InvalidOperationException" />.</span><span class="sxs-lookup"><span data-stu-id="dfd93-485">If the stream does not support timing out, this property should raise an <see cref="T:System.InvalidOperationException" />.</span></span></para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Seek">
      <MemberSignature Language="C#" Value="public abstract long Seek (long offset, System.IO.SeekOrigin origin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int64 Seek(int64 offset, valuetype System.IO.SeekOrigin origin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Stream.Seek(System.Int64,System.IO.SeekOrigin)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Seek (offset As Long, origin As SeekOrigin) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract long Seek(long offset, System::IO::SeekOrigin origin);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offset" Type="System.Int64" />
        <Parameter Name="origin" Type="System.IO.SeekOrigin" />
      </Parameters>
      <Docs>
        <param name="offset"><span data-ttu-id="dfd93-486">Ein Byteoffset, der relativ zum <c>origin</c>-Parameter ist.</span><span class="sxs-lookup"><span data-stu-id="dfd93-486">A byte offset relative to the <c>origin</c> parameter.</span></span></param>
        <param name="origin"><span data-ttu-id="dfd93-487">Ein Wert vom Typ <see cref="T:System.IO.SeekOrigin" />, der den Bezugspunkt angibt, von dem aus die neue Position ermittelt wird.</span><span class="sxs-lookup"><span data-stu-id="dfd93-487">A value of type <see cref="T:System.IO.SeekOrigin" /> indicating the reference point used to obtain the new position.</span></span></param>
        <summary><span data-ttu-id="dfd93-488">Legt beim Überschreiben in einer abgeleiteten Klasse die Position im aktuellen Stream fest.</span><span class="sxs-lookup"><span data-stu-id="dfd93-488">When overridden in a derived class, sets the position within the current stream.</span></span></summary>
        <returns><span data-ttu-id="dfd93-489">Die neue Position innerhalb des aktuellen Streams.</span><span class="sxs-lookup"><span data-stu-id="dfd93-489">The new position within the current stream.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfd93-490">Verwenden der <xref:System.IO.Stream.CanSeek%2A> Eigenschaft, um zu bestimmen, ob die aktuelle Instanz Suchvorgänge unterstützt.</span><span class="sxs-lookup"><span data-stu-id="dfd93-490">Use the <xref:System.IO.Stream.CanSeek%2A> property to determine whether the current instance supports seeking.</span></span>  
  
 <span data-ttu-id="dfd93-491">Wenn `offset` ist negativ ist, die neue Position ist erforderlich, um vor der der angegebenen Position `origin` durch die Anzahl der Bytes, die vom angegebenen `offset`.</span><span class="sxs-lookup"><span data-stu-id="dfd93-491">If `offset` is negative, the new position is required to precede the position specified by `origin` by the number of bytes specified by `offset`.</span></span> <span data-ttu-id="dfd93-492">Wenn `offset` ist 0 (null), die neue Position ist erforderlich, um die angegebene Position von `origin`.</span><span class="sxs-lookup"><span data-stu-id="dfd93-492">If `offset` is zero (0), the new position is required to be the position specified by `origin`.</span></span> <span data-ttu-id="dfd93-493">Wenn `offset` positiv ist, wird die neue Position ist erforderlich, um der angegebenen Position `origin` durch die Anzahl der Bytes, die vom angegebenen `offset`.</span><span class="sxs-lookup"><span data-stu-id="dfd93-493">If `offset` is positive, the new position is required to follow the position specified by `origin` by the number of bytes specified by `offset`.</span></span>  
  
 <span data-ttu-id="dfd93-494">Abgeleitete Klassen von `Stream` , dass Suchvorgänge unterstützen diese Methode, um die oben beschriebenen Funktionen bereitstellen muss außer Kraft gesetzt.</span><span class="sxs-lookup"><span data-stu-id="dfd93-494">Classes derived from `Stream` that support seeking must override this method to provide the functionality described above.</span></span>  
  
 <span data-ttu-id="dfd93-495">Suchvorgänge, die an einem beliebigen Speicherort überschreitet die Länge des Streams wird unterstützt.</span><span class="sxs-lookup"><span data-stu-id="dfd93-495">Seeking to any location beyond the length of the stream is supported.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="dfd93-496">Ein E/A-Fehler tritt auf.</span><span class="sxs-lookup"><span data-stu-id="dfd93-496">An I/O error occurs.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="dfd93-497">Der Stream unterstützt keine Suchvorgänge. Dies ist beispielsweise der Fall, wenn der Stream aus einer Pipe- oder Konsolenausgabe erstellt wird.</span><span class="sxs-lookup"><span data-stu-id="dfd93-497">The stream does not support seeking, such as if the stream is constructed from a pipe or console output.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="dfd93-498">Es wurden Methoden aufgerufen, nachdem der Stream geschlossen wurde.</span><span class="sxs-lookup"><span data-stu-id="dfd93-498">Methods were called after the stream was closed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SetLength">
      <MemberSignature Language="C#" Value="public abstract void SetLength (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetLength(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Stream.SetLength(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub SetLength (value As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void SetLength(long value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="dfd93-499">Die gewünschte Länge des aktuellen Streams in Bytes.</span><span class="sxs-lookup"><span data-stu-id="dfd93-499">The desired length of the current stream in bytes.</span></span></param>
        <summary><span data-ttu-id="dfd93-500">Legt beim Überschreiben in einer abgeleiteten Klasse die Länge des aktuellen Streams fest.</span><span class="sxs-lookup"><span data-stu-id="dfd93-500">When overridden in a derived class, sets the length of the current stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfd93-501">Wenn der angegebene Wert kleiner als die aktuelle Länge des Streams ist, wird der Stream abgeschnitten.</span><span class="sxs-lookup"><span data-stu-id="dfd93-501">If the specified value is less than the current length of the stream, the stream is truncated.</span></span> <span data-ttu-id="dfd93-502">Wenn der angegebene Wert größer als die aktuelle Länge des Streams ist, wird der Stream erweitert.</span><span class="sxs-lookup"><span data-stu-id="dfd93-502">If the specified value is larger than the current length of the stream, the stream is expanded.</span></span> <span data-ttu-id="dfd93-503">Wenn der Stream erweitert wird, werden der Inhalt des Streams zwischen der alten und die neue Länge nicht definiert.</span><span class="sxs-lookup"><span data-stu-id="dfd93-503">If the stream is expanded, the contents of the stream between the old and the new length are not defined.</span></span>  
  
 <span data-ttu-id="dfd93-504">Ein Stream muss Schreib- und Suchvorgänge für unterstützen `SetLength` arbeiten.</span><span class="sxs-lookup"><span data-stu-id="dfd93-504">A stream must support both writing and seeking for `SetLength` to work.</span></span>  
  
 <span data-ttu-id="dfd93-505">Verwenden der <xref:System.IO.Stream.CanWrite%2A> Eigenschaft, um zu bestimmen, ob die aktuelle Instanz Schreibvorgänge unterstützt und die <xref:System.IO.Stream.CanSeek%2A> Eigenschaft, um zu bestimmen, ob Suchvorgänge unterstützt werden.</span><span class="sxs-lookup"><span data-stu-id="dfd93-505">Use the <xref:System.IO.Stream.CanWrite%2A> property to determine whether the current instance supports writing, and the <xref:System.IO.Stream.CanSeek%2A> property to determine whether seeking is supported.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="dfd93-506">Ein E/A-Fehler tritt auf.</span><span class="sxs-lookup"><span data-stu-id="dfd93-506">An I/O error occurs.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="dfd93-507">Der Stream unterstützt nicht sowohl Lese- als auch Schreibvorgänge. Dies ist beispielsweise der Fall, wenn der Stream aus einer Pipe- oder Konsolenausgabe erstellt wird.</span><span class="sxs-lookup"><span data-stu-id="dfd93-507">The stream does not support both writing and seeking, such as if the stream is constructed from a pipe or console output.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="dfd93-508">Es wurden Methoden aufgerufen, nachdem der Stream geschlossen wurde.</span><span class="sxs-lookup"><span data-stu-id="dfd93-508">Methods were called after the stream was closed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Synchronized">
      <MemberSignature Language="C#" Value="public static System.IO.Stream Synchronized (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.Stream Synchronized(class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Stream.Synchronized(System.IO.Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::Stream ^ Synchronized(System::IO::Stream ^ stream);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="stream"><span data-ttu-id="dfd93-509">Das <see cref="T:System.IO.Stream" />-Objekt, das synchronisiert werden soll.</span><span class="sxs-lookup"><span data-stu-id="dfd93-509">The <see cref="T:System.IO.Stream" /> object to synchronize.</span></span></param>
        <summary><span data-ttu-id="dfd93-510">Erstellt um das angegebene <see cref="T:System.IO.Stream" />-Objekt einen threadsicheren (synchronisierten) Wrapper.</span><span class="sxs-lookup"><span data-stu-id="dfd93-510">Creates a thread-safe (synchronized) wrapper around the specified <see cref="T:System.IO.Stream" /> object.</span></span></summary>
        <returns><span data-ttu-id="dfd93-511">Ein threadsicheres <see cref="T:System.IO.Stream" />-Objekt.</span><span class="sxs-lookup"><span data-stu-id="dfd93-511">A thread-safe <see cref="T:System.IO.Stream" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfd93-512">Diese Methode gibt eine Klasse, die den angegebenen umschließt <xref:System.IO.Stream> -Objekt und den Zugriff von mehreren Threads darauf beschränkt.</span><span class="sxs-lookup"><span data-stu-id="dfd93-512">This method returns a class that wraps the specified <xref:System.IO.Stream> object and restricts access to it from multiple threads.</span></span> <span data-ttu-id="dfd93-513">Der gesamte Zugriff auf die <xref:System.IO.Stream> Objekt ist threadsicher.</span><span class="sxs-lookup"><span data-stu-id="dfd93-513">All access to the <xref:System.IO.Stream> object will be thread safe.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="dfd93-514"><paramref name="stream" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="dfd93-514"><paramref name="stream" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public virtual void Write (ReadOnlySpan&lt;byte&gt; buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Write(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; buffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Stream.Write(System.ReadOnlySpan{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Write (buffer As ReadOnlySpan(Of Byte))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Write(ReadOnlySpan&lt;System::Byte&gt; buffer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="buffer">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public abstract void Write (byte[] buffer, int offset, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Write(unsigned int8[] buffer, int32 offset, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Stream.Write(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Write (buffer As Byte(), offset As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Write(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="dfd93-515">Ein Bytearray.</span><span class="sxs-lookup"><span data-stu-id="dfd93-515">An array of bytes.</span></span> <span data-ttu-id="dfd93-516">Diese Methode kopiert <c>count</c>-Bytes aus <c>buffer</c> in den aktuellen Stream.</span><span class="sxs-lookup"><span data-stu-id="dfd93-516">This method copies <c>count</c> bytes from <c>buffer</c> to the current stream.</span></span></param>
        <param name="offset"><span data-ttu-id="dfd93-517">Der nullbasierte Byteoffset in <c>buffer</c>, ab dem Daten in den aktuellen Stream kopiert werden sollen.</span><span class="sxs-lookup"><span data-stu-id="dfd93-517">The zero-based byte offset in <c>buffer</c> at which to begin copying bytes to the current stream.</span></span></param>
        <param name="count"><span data-ttu-id="dfd93-518">Die Anzahl an Bytes, die in den aktuellen Stream geschrieben werden sollen.</span><span class="sxs-lookup"><span data-stu-id="dfd93-518">The number of bytes to be written to the current stream.</span></span></param>
        <summary><span data-ttu-id="dfd93-519">Schreibt beim Überschreiben in einer abgeleiteten Klasse eine Folge von Bytes in den aktuellen Stream und erhöht die aktuelle Position im Stream um die Anzahl der geschriebenen Bytes.</span><span class="sxs-lookup"><span data-stu-id="dfd93-519">When overridden in a derived class, writes a sequence of bytes to the current stream and advances the current position within this stream by the number of bytes written.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfd93-520">Verwenden der <xref:System.IO.Stream.CanWrite%2A> Eigenschaft, um zu bestimmen, ob die aktuelle Instanz Schreibvorgänge unterstützt.</span><span class="sxs-lookup"><span data-stu-id="dfd93-520">Use the <xref:System.IO.Stream.CanWrite%2A> property to determine whether the current instance supports writing.</span></span> <span data-ttu-id="dfd93-521">Verwenden der <xref:System.IO.Stream.WriteAsync%2A> -Methode asynchron in den aktuellen Stream geschrieben.</span><span class="sxs-lookup"><span data-stu-id="dfd93-521">Use the <xref:System.IO.Stream.WriteAsync%2A> method to write asynchronously to the current stream.</span></span>  
  
 <span data-ttu-id="dfd93-522">Wenn der Schreibvorgang erfolgreich ist, setzt die Position im Stream um die Anzahl der geschriebenen Bytes.</span><span class="sxs-lookup"><span data-stu-id="dfd93-522">If the write operation is successful, the position within the stream advances by the number of bytes written.</span></span> <span data-ttu-id="dfd93-523">Wenn eine Ausnahme auftritt, bleibt die Position im Stream unverändert.</span><span class="sxs-lookup"><span data-stu-id="dfd93-523">If an exception occurs, the position within the stream remains unchanged.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="dfd93-524">Die Summe von <paramref name="offset" /> und <paramref name="count" /> ist größer als die Pufferlänge.</span><span class="sxs-lookup"><span data-stu-id="dfd93-524">The sum of <paramref name="offset" /> and <paramref name="count" /> is greater than the buffer length.</span></span></exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="dfd93-525"><paramref name="buffer" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="dfd93-525"><paramref name="buffer" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="dfd93-526"><paramref name="offset" /> oder <paramref name="count" /> ist ein negativer Wert.</span><span class="sxs-lookup"><span data-stu-id="dfd93-526"><paramref name="offset" /> or <paramref name="count" /> is negative.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="dfd93-527">Ein E/A-Fehler ist aufgetreten, z.B. „Die angegebene Datei kann nicht gefunden werden.“</span><span class="sxs-lookup"><span data-stu-id="dfd93-527">An I/O error occured, such as the specified file cannot be found.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="dfd93-528">Der Stream unterstützt das Schreiben nicht.</span><span class="sxs-lookup"><span data-stu-id="dfd93-528">The stream does not support writing.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="dfd93-529"><see cref="M:System.IO.Stream.Write(System.Byte[],System.Int32,System.Int32)" /> wurde aufgerufen, nachdem der Stream geschlossen wurde.</span><span class="sxs-lookup"><span data-stu-id="dfd93-529"><see cref="M:System.IO.Stream.Write(System.Byte[],System.Int32,System.Int32)" /> was called after the stream was closed.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteAsync">
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="dfd93-530">Schreibt eine Bytesequenz asynchron in den aktuellen Stream und setzt die aktuelle Position in diesem Stream um die Anzahl der geschriebenen Bytes nach vorn.</span><span class="sxs-lookup"><span data-stu-id="dfd93-530">Asynchronously writes a sequence of bytes to the current stream and advances the current position within this stream by the number of bytes written.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.ValueTask WriteAsync (ReadOnlyMemory&lt;byte&gt; buffer, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Threading.Tasks.ValueTask WriteAsync(valuetype System.ReadOnlyMemory`1&lt;unsigned int8&gt; buffer, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Stream.WriteAsync(System.ReadOnlyMemory{System.Byte},System.Threading.CancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ValueTask</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.ReadOnlyMemory&lt;System.Byte&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="buffer">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task WriteAsync (byte[] buffer, int offset, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task WriteAsync(unsigned int8[] buffer, int32 offset, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function WriteAsync (buffer As Byte(), offset As Integer, count As Integer) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ WriteAsync(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="dfd93-531">Der Puffer, aus dem Daten geschrieben werden sollen.</span><span class="sxs-lookup"><span data-stu-id="dfd93-531">The buffer to write data from.</span></span></param>
        <param name="offset"><span data-ttu-id="dfd93-532">Der nullbasierte Byteoffset in <c>buffer</c>, ab dem Bytes in den Stream kopiert werden sollen.</span><span class="sxs-lookup"><span data-stu-id="dfd93-532">The zero-based byte offset in <c>buffer</c> from which to begin copying bytes to the stream.</span></span></param>
        <param name="count"><span data-ttu-id="dfd93-533">Die maximale Anzahl der zu schreibenden Bytes.</span><span class="sxs-lookup"><span data-stu-id="dfd93-533">The maximum number of bytes to write.</span></span></param>
        <summary><span data-ttu-id="dfd93-534">Schreibt eine Bytesequenz asynchron in den aktuellen Stream und setzt die aktuelle Position in diesem Stream um die Anzahl der geschriebenen Bytes nach vorn.</span><span class="sxs-lookup"><span data-stu-id="dfd93-534">Asynchronously writes a sequence of bytes to the current stream and advances the current position within this stream by the number of bytes written.</span></span></summary>
        <returns><span data-ttu-id="dfd93-535">Eine Aufgabe, die den asynchronen Schreibvorgang darstellt.</span><span class="sxs-lookup"><span data-stu-id="dfd93-535">A task that represents the asynchronous write operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfd93-536">Die <xref:System.IO.Stream.WriteAsync%2A> Methode können Sie ressourcenintensive e/a-Vorgänge ausführen, ohne den Hauptthread zu blockieren.</span><span class="sxs-lookup"><span data-stu-id="dfd93-536">The <xref:System.IO.Stream.WriteAsync%2A> method enables you to perform resource-intensive I/O operations without blocking the main thread.</span></span> <span data-ttu-id="dfd93-537">Diese Überlegungen zur Leistung sind insbesondere in einer [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)]-App oder [!INCLUDE[desktop_appname](~/includes/desktop-appname-md.md)]-App wichtig, bei der ein zeitaufwendiger Streamvorgang den UI-Thread blockieren kann und es dann den Anschein hat, dass Ihre App nicht funktioniert.</span><span class="sxs-lookup"><span data-stu-id="dfd93-537">This performance consideration is particularly important in a [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] app or [!INCLUDE[desktop_appname](~/includes/desktop-appname-md.md)] app where a time-consuming stream operation can block the UI thread and make your app appear as if it is not working.</span></span> <span data-ttu-id="dfd93-538">Die Async-Methoden werden verwendet, in Verbindung mit der `async` und `await` in Visual Basic und C#-Schlüsselwörter.</span><span class="sxs-lookup"><span data-stu-id="dfd93-538">The async methods are used in conjunction with the `async` and `await` keywords in Visual Basic and C#.</span></span>  
  
 <span data-ttu-id="dfd93-539">Verwenden der <xref:System.IO.Stream.CanWrite%2A> Eigenschaft, um zu bestimmen, ob die aktuelle Instanz Schreibvorgänge unterstützt.</span><span class="sxs-lookup"><span data-stu-id="dfd93-539">Use the <xref:System.IO.Stream.CanWrite%2A> property to determine whether the current instance supports writing.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dfd93-540">Im folgende Beispiel wird gezeigt, wie asynchron in eine Datei geschrieben wird.</span><span class="sxs-lookup"><span data-stu-id="dfd93-540">The following example shows how to write asynchronously to a file.</span></span> <span data-ttu-id="dfd93-541">Im Beispiel wird die <xref:System.IO.FileStream> -Klasse, abgeleitet von der <xref:System.IO.Stream> Klasse.</span><span class="sxs-lookup"><span data-stu-id="dfd93-541">The example uses the <xref:System.IO.FileStream> class, which derives from the <xref:System.IO.Stream> class.</span></span>  
  
 [!code-csharp[Asynchronous_File_IO_async#3](~/samples/snippets/csharp/VS_Snippets_CLR/Asynchronous_File_IO_async/cs/example3.cs#3)]
 [!code-vb[Asynchronous_File_IO_async#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/Asynchronous_File_IO_async/vb/example3.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="dfd93-542"><paramref name="buffer" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="dfd93-542"><paramref name="buffer" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="dfd93-543"><paramref name="offset" /> oder <paramref name="count" /> ist ein negativer Wert.</span><span class="sxs-lookup"><span data-stu-id="dfd93-543"><paramref name="offset" /> or <paramref name="count" /> is negative.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="dfd93-544">Die Summe von <paramref name="offset" /> und <paramref name="count" /> ist größer als die Pufferlänge.</span><span class="sxs-lookup"><span data-stu-id="dfd93-544">The sum of <paramref name="offset" /> and <paramref name="count" /> is larger than the buffer length.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="dfd93-545">Der Stream unterstützt das Schreiben nicht.</span><span class="sxs-lookup"><span data-stu-id="dfd93-545">The stream does not support writing.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="dfd93-546">Der Stream wurde verworfen.</span><span class="sxs-lookup"><span data-stu-id="dfd93-546">The stream has been disposed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="dfd93-547">Der Stream wird zurzeit von einem vorherigen Schreibvorgang verwendet.</span><span class="sxs-lookup"><span data-stu-id="dfd93-547">The stream is currently in use by a previous write operation.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task WriteAsync (byte[] buffer, int offset, int count, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task WriteAsync(unsigned int8[] buffer, int32 offset, int32 count, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ WriteAsync(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count, System::Threading::CancellationToken cancellationToken);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="dfd93-548">Der Puffer, aus dem Daten geschrieben werden sollen.</span><span class="sxs-lookup"><span data-stu-id="dfd93-548">The buffer to write data from.</span></span></param>
        <param name="offset"><span data-ttu-id="dfd93-549">Der nullbasierte Byteoffset in <c>buffer</c>, ab dem Bytes in den Stream kopiert werden sollen.</span><span class="sxs-lookup"><span data-stu-id="dfd93-549">The zero-based byte offset in <c>buffer</c> from which to begin copying bytes to the stream.</span></span></param>
        <param name="count"><span data-ttu-id="dfd93-550">Die maximale Anzahl der zu schreibenden Bytes.</span><span class="sxs-lookup"><span data-stu-id="dfd93-550">The maximum number of bytes to write.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="dfd93-551">Das Token zum überwachen von Abbruchanforderungen.</span><span class="sxs-lookup"><span data-stu-id="dfd93-551">The token to monitor for cancellation requests.</span></span> <span data-ttu-id="dfd93-552">Der Standardwert ist <see cref="P:System.Threading.CancellationToken.None" />.</span><span class="sxs-lookup"><span data-stu-id="dfd93-552">The default value is <see cref="P:System.Threading.CancellationToken.None" />.</span></span></param>
        <summary><span data-ttu-id="dfd93-553">Schreibt eine Folge von Bytes asynchron in den aktuellen Stream, erhöht die aktuelle Position im Stream um die Anzahl der geschriebenen Bytes und überwacht Abbruchanforderungen.</span><span class="sxs-lookup"><span data-stu-id="dfd93-553">Asynchronously writes a sequence of bytes to the current stream, advances the current position within this stream by the number of bytes written, and monitors cancellation requests.</span></span></summary>
        <returns><span data-ttu-id="dfd93-554">Eine Aufgabe, die den asynchronen Schreibvorgang darstellt.</span><span class="sxs-lookup"><span data-stu-id="dfd93-554">A task that represents the asynchronous write operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfd93-555">Die <xref:System.IO.Stream.WriteAsync%2A> Methode können Sie ressourcenintensive e/a-Vorgänge ausführen, ohne den Hauptthread zu blockieren.</span><span class="sxs-lookup"><span data-stu-id="dfd93-555">The <xref:System.IO.Stream.WriteAsync%2A> method enables you to perform resource-intensive I/O operations without blocking the main thread.</span></span> <span data-ttu-id="dfd93-556">Diese Überlegungen zur Leistung sind insbesondere in einer [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)]-App oder [!INCLUDE[desktop_appname](~/includes/desktop-appname-md.md)]-App wichtig, bei der ein zeitaufwendiger Streamvorgang den UI-Thread blockieren kann und es dann den Anschein hat, dass Ihre App nicht funktioniert.</span><span class="sxs-lookup"><span data-stu-id="dfd93-556">This performance consideration is particularly important in a [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] app or [!INCLUDE[desktop_appname](~/includes/desktop-appname-md.md)] app where a time-consuming stream operation can block the UI thread and make your app appear as if it is not working.</span></span> <span data-ttu-id="dfd93-557">Die Async-Methoden werden verwendet, in Verbindung mit der `async` und `await` in Visual Basic und C#-Schlüsselwörter.</span><span class="sxs-lookup"><span data-stu-id="dfd93-557">The async methods are used in conjunction with the `async` and `await` keywords in Visual Basic and C#.</span></span>  
  
 <span data-ttu-id="dfd93-558">Verwenden der <xref:System.IO.Stream.CanWrite%2A> Eigenschaft, um zu bestimmen, ob die aktuelle Instanz Schreibvorgänge unterstützt.</span><span class="sxs-lookup"><span data-stu-id="dfd93-558">Use the <xref:System.IO.Stream.CanWrite%2A> property to determine whether the current instance supports writing.</span></span>  
  
 <span data-ttu-id="dfd93-559">Wenn der Vorgang abgebrochen wird, bevor er abgeschlossen wurde, enthält die zurückgegebene Aufgabe der <xref:System.Threading.Tasks.TaskStatus.Canceled> Wert für die <xref:System.Threading.Tasks.Task.Status%2A> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="dfd93-559">If the operation is canceled before it completes, the returned task contains the <xref:System.Threading.Tasks.TaskStatus.Canceled> value for the <xref:System.Threading.Tasks.Task.Status%2A> property.</span></span>  
  
 <span data-ttu-id="dfd93-560">Ein Beispiel finden Sie unter der <xref:System.IO.Stream.WriteAsync%28System.Byte%5B%5D%2CSystem.Int32%2CSystem.Int32%29> überladen.</span><span class="sxs-lookup"><span data-stu-id="dfd93-560">For an example, see the <xref:System.IO.Stream.WriteAsync%28System.Byte%5B%5D%2CSystem.Int32%2CSystem.Int32%29> overload.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="dfd93-561"><paramref name="buffer" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="dfd93-561"><paramref name="buffer" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="dfd93-562"><paramref name="offset" /> oder <paramref name="count" /> ist ein negativer Wert.</span><span class="sxs-lookup"><span data-stu-id="dfd93-562"><paramref name="offset" /> or <paramref name="count" /> is negative.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="dfd93-563">Die Summe von <paramref name="offset" /> und <paramref name="count" /> ist größer als die Pufferlänge.</span><span class="sxs-lookup"><span data-stu-id="dfd93-563">The sum of <paramref name="offset" /> and <paramref name="count" /> is larger than the buffer length.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="dfd93-564">Der Stream unterstützt das Schreiben nicht.</span><span class="sxs-lookup"><span data-stu-id="dfd93-564">The stream does not support writing.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="dfd93-565">Der Stream wurde verworfen.</span><span class="sxs-lookup"><span data-stu-id="dfd93-565">The stream has been disposed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="dfd93-566">Der Stream wird zurzeit von einem vorherigen Schreibvorgang verwendet.</span><span class="sxs-lookup"><span data-stu-id="dfd93-566">The stream is currently in use by a previous write operation.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteByte">
      <MemberSignature Language="C#" Value="public virtual void WriteByte (byte value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteByte(unsigned int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Stream.WriteByte(System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteByte (value As Byte)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteByte(System::Byte value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="dfd93-567">Das Byte, das in den Stream geschrieben werden soll.</span><span class="sxs-lookup"><span data-stu-id="dfd93-567">The byte to write to the stream.</span></span></param>
        <summary><span data-ttu-id="dfd93-568">Schreibt ein Byte an die aktuellen Position im Stream und erhöht die aktuelle Position im Stream um ein Byte.</span><span class="sxs-lookup"><span data-stu-id="dfd93-568">Writes a byte to the current position in the stream and advances the position within the stream by one byte.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfd93-569">Verwenden der <xref:System.IO.Stream.CanWrite%2A> Eigenschaft, um zu bestimmen, ob die aktuelle Instanz Schreibvorgänge unterstützt.</span><span class="sxs-lookup"><span data-stu-id="dfd93-569">Use the <xref:System.IO.Stream.CanWrite%2A> property to determine whether the current instance supports writing.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="dfd93-570">Ein E/A-Fehler tritt auf.</span><span class="sxs-lookup"><span data-stu-id="dfd93-570">An I/O error occurs.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="dfd93-571">Der Stream unterstützt keine Schreibvorgänge, oder er wurde bereits geschlossen.</span><span class="sxs-lookup"><span data-stu-id="dfd93-571">The stream does not support writing, or the stream is already closed.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="dfd93-572">Es wurden Methoden aufgerufen, nachdem der Stream geschlossen wurde.</span><span class="sxs-lookup"><span data-stu-id="dfd93-572">Methods were called after the stream was closed.</span></span></exception>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="dfd93-573">Die standardmäßige Implementierung auf <see langword="Stream" /> erstellt ein neues Single-Byte-Array und ruft dann <see cref="M:System.IO.Stream.Write(System.Byte[],System.Int32,System.Int32)" />.</span><span class="sxs-lookup"><span data-stu-id="dfd93-573">The default implementation on <see langword="Stream" /> creates a new single-byte array and then calls <see cref="M:System.IO.Stream.Write(System.Byte[],System.Int32,System.Int32)" />.</span></span> <span data-ttu-id="dfd93-574">Während dies formal richtig ist, ist es ineffizient.</span><span class="sxs-lookup"><span data-stu-id="dfd93-574">While this is formally correct, it is inefficient.</span></span> <span data-ttu-id="dfd93-575">Jeder Stream mit einem internen Puffer sollte diese Methode überschreiben und eine wesentlich effizienter Version, die direkt in den Puffer schreibt die Zuordnung zusätzlichen Array bei jedem Aufruf zu vermeiden.</span><span class="sxs-lookup"><span data-stu-id="dfd93-575">Any stream with an internal buffer should override this method and provide a much more efficient version that writes to the buffer directly, avoiding the extra array allocation on every call.</span></span></para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="WriteTimeout">
      <MemberSignature Language="C#" Value="public virtual int WriteTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 WriteTimeout" />
      <MemberSignature Language="DocId" Value="P:System.IO.Stream.WriteTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property WriteTimeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int WriteTimeout { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dfd93-576">Ruft einen Wert in Millisekunden ab, der bestimmt, wie lange der Stream versucht, Schreibvorgänge durchzuführen, bevor ein Timeout auftritt, oder legt diesen fest.</span><span class="sxs-lookup"><span data-stu-id="dfd93-576">Gets or sets a value, in miliseconds, that determines how long the stream will attempt to write before timing out.</span></span></summary>
        <value><span data-ttu-id="dfd93-577">Ein Wert in Millisekunden, der bestimmt, wie lange der Stream versucht, Schreibvorgänge durchzuführen, bevor ein Timeout auftritt.</span><span class="sxs-lookup"><span data-stu-id="dfd93-577">A value, in miliseconds, that determines how long the stream will attempt to write before timing out.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="dfd93-578">Die <see cref="P:System.IO.Stream.WriteTimeout" />-Methode löst immer eine <see cref="T:System.InvalidOperationException" /> aus.</span><span class="sxs-lookup"><span data-stu-id="dfd93-578">The <see cref="P:System.IO.Stream.WriteTimeout" /> method always throws an <see cref="T:System.InvalidOperationException" />.</span></span></exception>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="dfd93-579">Die <see cref="P:System.IO.Stream.WriteTimeout" /> Eigenschaft sollte überschrieben werden, um das entsprechende Verhalten für den Stream bereitzustellen.</span><span class="sxs-lookup"><span data-stu-id="dfd93-579">The <see cref="P:System.IO.Stream.WriteTimeout" /> property should be overridden to provide the appropriate behavior for the stream.</span></span> <span data-ttu-id="dfd93-580">Wenn der Stream ein Timeout nicht unterstützt, sollte diese Eigenschaft Auslösen einer <see cref="T:System.InvalidOperationException" />.</span><span class="sxs-lookup"><span data-stu-id="dfd93-580">If the stream does not support timing out, this property should raise an <see cref="T:System.InvalidOperationException" />.</span></span></para>
        </block>
      </Docs>
    </Member>
  </Members>
</Type>