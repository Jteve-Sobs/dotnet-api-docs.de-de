<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="TextWriter.xml" source-language="en-US" target-language="de-DE">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac537db43c3bb762501a2a8726c80dee4afa2a84a6a.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">37db43c3bb762501a2a8726c80dee4afa2a84a6a</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.5,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.IO.TextWriter">
          <source>Represents a writer that can write a sequential series of characters.</source>
          <target state="translated">Stellt einen Writer dar, der eine sequenzielle Serie von Zeichen schreiben kann.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.IO.TextWriter">
          <source>This class is abstract.</source>
          <target state="translated">Diese Klasse ist abstrakt.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.TextWriter">
          <source><ph id="ph1">&lt;xref:System.IO.TextWriter&gt;</ph> is the abstract base class of <ph id="ph2">&lt;xref:System.IO.StreamWriter&gt;</ph> and <ph id="ph3">&lt;xref:System.IO.StringWriter&gt;</ph>, which write characters to streams and strings, respectively.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.TextWriter&gt;</ph> ist die abstrakte Basisklasse von <ph id="ph2">&lt;xref:System.IO.StreamWriter&gt;</ph> und <ph id="ph3">&lt;xref:System.IO.StringWriter&gt;</ph>, die Zeichen bzw. in Datenströme und Zeichenfolgen, schreiben.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.TextWriter">
          <source>Create an instance of <ph id="ph1">&lt;xref:System.IO.TextWriter&gt;</ph> to write an object to a string, write strings to a file, or to serialize XML.</source>
          <target state="translated">Erstellen Sie eine Instanz des <ph id="ph1">&lt;xref:System.IO.TextWriter&gt;</ph> zum Schreiben eines Objekts in eine Zeichenfolge, die Zeichenfolgen in eine Datei schreiben oder um XML zu serialisieren.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.TextWriter">
          <source>You can also use an instance of <ph id="ph1">&lt;xref:System.IO.TextWriter&gt;</ph> to write text to a custom backing store using the same APIs you would use for a string or a stream, or to add support for text formatting.</source>
          <target state="translated">Sie können auch eine Instanz von <ph id="ph1">&lt;xref:System.IO.TextWriter&gt;</ph> zum Schreiben von Text in einen benutzerdefinierten Sicherungsspeicher über die gleichen APIs Sie für eine Zeichenfolge oder einem Stream verwenden oder zum Hinzufügen der Unterstützung für das Formatieren von Text.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.TextWriter">
          <source>All the <ph id="ph1">`Write`</ph> methods of <ph id="ph2">&lt;xref:System.IO.TextWriter&gt;</ph> having primitive data types as parameters write out the values as strings.</source>
          <target state="translated">Alle der <ph id="ph1">`Write`</ph> Methoden der <ph id="ph2">&lt;xref:System.IO.TextWriter&gt;</ph> mit primitiven Datentypen als Parameter, die Werte als Zeichenfolgen zu schreiben.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.TextWriter">
          <source>By default, a <ph id="ph1">&lt;xref:System.IO.TextWriter&gt;</ph> is not thread safe.</source>
          <target state="translated">Wird standardmäßig ein <ph id="ph1">&lt;xref:System.IO.TextWriter&gt;</ph> ist nicht threadsicher.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.TextWriter">
          <source>See <ph id="ph1">&lt;xref:System.IO.TextWriter.Synchronized%2A?displayProperty=nameWithType&gt;</ph> for a thread-safe wrapper.</source>
          <target state="translated">Finden Sie unter <ph id="ph1">&lt;xref:System.IO.TextWriter.Synchronized%2A?displayProperty=nameWithType&gt;</ph> für ein threadsicherer Wrapper.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.TextWriter">
          <source>This type implements the <ph id="ph1">&lt;xref:System.IDisposable&gt;</ph> interface.</source>
          <target state="translated">Dieser Typ implementiert die <ph id="ph1">&lt;xref:System.IDisposable&gt;</ph> Schnittstelle.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.TextWriter">
          <source>When you have finished using any type that derives from this type, you should dispose of it either directly or indirectly.</source>
          <target state="translated">Wenn Sie mit der jeder Typ, der von diesem Typ abgeleitete abgeschlossen haben, sollten Sie es entweder direkt oder indirekt freigeben.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.TextWriter">
          <source>To dispose of the type directly, call its <ph id="ph1">&lt;xref:System.IO.TextWriter.Dispose%2A&gt;</ph> method in a <ph id="ph2">`try`</ph><ph id="ph3">/</ph><ph id="ph4">`catch`</ph> block.</source>
          <target state="translated">Aufrufen, um den Typ direkt zu verwerfen, dessen <ph id="ph1">&lt;xref:System.IO.TextWriter.Dispose%2A&gt;</ph> Methode in einer <ph id="ph2">`try`</ph> <ph id="ph3">/</ph> <ph id="ph4">`catch`</ph> Block.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.TextWriter">
          <source>To dispose of it indirectly, use a language construct such as <ph id="ph1">`using`</ph> (in C#) or <ph id="ph2">`Using`</ph> (in Visual Basic).</source>
          <target state="translated">Um es indirekt freizugeben, verwenden Sie ein Sprachkonstrukt z. B. <ph id="ph1">`using`</ph> (in c#) oder <ph id="ph2">`Using`</ph> (in Visual Basic).</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.TextWriter">
          <source>For more information, see Dispose and the "Using an Object that Implements IDisposable" section in the <ph id="ph1">&lt;xref:System.IDisposable&gt;</ph> interface topic.</source>
          <target state="translated">Weitere Informationen finden Sie unter Dispose und im Abschnitt "Verwenden eines Objekts, implementiert IDisposable" in der <ph id="ph1">&lt;xref:System.IDisposable&gt;</ph> Thema zur Schnittstelle.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.TextWriter">
          <source>For a list of common I/O tasks, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</source>
          <target state="translated">Eine Liste der allgemeinen e/a-Aufgaben finden Sie <bpt id="p1">[</bpt>allgemeine e/a-Aufgaben<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.TextWriter">
          <source>The <ph id="ph1">&lt;xref:System.IO.TextWriter&gt;</ph> class is an abstract class.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.IO.TextWriter&gt;</ph>-Klasse stellt eine abstrakte Klasse dar.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.TextWriter">
          <source>Therefore, you do not instantiate it in your code.</source>
          <target state="translated">Aus diesem Grund ist es nicht in Ihrem Code instanziiert werden.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.TextWriter">
          <source>The <ph id="ph1">&lt;xref:System.IO.StreamWriter&gt;</ph> class derives from <ph id="ph2">&lt;xref:System.IO.TextWriter&gt;</ph> and provides implementations of the members for writing to a stream.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.IO.StreamWriter&gt;</ph> Klasse leitet sich von <ph id="ph2">&lt;xref:System.IO.TextWriter&gt;</ph> und bietet Implementierungen der Elemente für das Schreiben in einen Stream.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.TextWriter">
          <source>The following example shows how to write two lines that consist of string values to a text file by using the <ph id="ph1">&lt;xref:System.IO.StreamWriter.WriteLineAsync%28System.String%29&gt;</ph> method.</source>
          <target state="translated">Im folgende Beispiel wird gezeigt, wie zwei Zeilen zu schreiben, die mithilfe von Zeichenfolgenwerten in eine Textdatei bestehen die <ph id="ph1">&lt;xref:System.IO.StreamWriter.WriteLineAsync%28System.String%29&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.TextWriter">
          <source>Override Dispose in a derived class to provide</source>
          <target state="translated">Überschreiben Sie Dispose in einer abgeleiteten Klasse bereitstellen</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.TextWriter">
          <source>A derived class must minimally implement the <ph id="ph1">&lt;see cref="M:System.IO.TextWriter.Write(System.Char)" /&gt;</ph> method to make a useful instance of <ph id="ph2">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph>.</source>
          <target state="translated">Eine abgeleitete Klasse muss minimal implementieren die <ph id="ph1">&lt;see cref="M:System.IO.TextWriter.Write(System.Char)" /&gt;</ph> Methode, um eine nützliche Instanz der <ph id="ph2">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="T:System.IO.TextWriter">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> class.</source>
          <target state="translated">Initialisiert eine neue Instanz der <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph>-Klasse.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> class.</source>
          <target state="translated">Initialisiert eine neue Instanz der <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph>-Klasse.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.#ctor">
          <source>Use this constructor overload when you do not want to provide a value for the <ph id="ph1">&lt;xref:System.IO.TextWriter.FormatProvider%2A&gt;</ph> property.</source>
          <target state="translated">Verwenden Sie diese Konstruktorüberladung aus, wenn Sie nicht, geben Sie einen Wert für möchten die <ph id="ph1">&lt;xref:System.IO.TextWriter.FormatProvider%2A&gt;</ph> Eigenschaft.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.#ctor">
          <source>When the <ph id="ph1">&lt;xref:System.IO.TextWriter.FormatProvider%2A&gt;</ph> property is <ph id="ph2">`null`</ph>, the culture of the current thread is used for formatting.</source>
          <target state="translated">Wenn die <ph id="ph1">&lt;xref:System.IO.TextWriter.FormatProvider%2A&gt;</ph> Eigenschaft ist <ph id="ph2">`null`</ph>, die Kultur des aktuellen Threads für die Formatierung verwendet.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.#ctor">
          <source>Use this constructor for derived classes.</source>
          <target state="translated">Verwenden Sie diesen Konstruktor für abgeleitete Klassen.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.#ctor">
          <source>For a list of common I/O tasks, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</source>
          <target state="translated">Eine Liste der allgemeinen e/a-Aufgaben finden Sie <bpt id="p1">[</bpt>allgemeine e/a-Aufgaben<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.#ctor(System.IFormatProvider)">
          <source>An <ph id="ph1">&lt;see cref="T:System.IFormatProvider" /&gt;</ph> object that controls formatting.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.IFormatProvider" /&gt;</ph>-Objekt zum Steuern der Formatierung.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.#ctor(System.IFormatProvider)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> class with the specified format provider.</source>
          <target state="translated">Initialisiert eine neue Instanz der <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph>-Klasse mit dem angegebenen Formatanbieter.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.#ctor(System.IFormatProvider)">
          <source>Use this constructor overload to provide a value for the <ph id="ph1">&lt;xref:System.IO.TextWriter.FormatProvider%2A&gt;</ph> property.</source>
          <target state="translated">Verwenden Sie diese Konstruktorüberladung, um einen Wert für die <ph id="ph1">&lt;xref:System.IO.TextWriter.FormatProvider%2A&gt;</ph> Eigenschaft.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.#ctor(System.IFormatProvider)">
          <source>The value of the <ph id="ph1">&lt;xref:System.IO.TextWriter.FormatProvider%2A&gt;</ph> property specifies the culture-specific formatting that is used when you call the <ph id="ph2">&lt;xref:System.IO.TextWriter.Write%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.IO.TextWriter.WriteLine%2A&gt;</ph> methods.</source>
          <target state="translated">Der Wert von der <ph id="ph1">&lt;xref:System.IO.TextWriter.FormatProvider%2A&gt;</ph> Eigenschaft gibt an, der kulturabhängige Formatierung, die verwendet wird, beim Aufrufen der <ph id="ph2">&lt;xref:System.IO.TextWriter.Write%2A&gt;</ph> und <ph id="ph3">&lt;xref:System.IO.TextWriter.WriteLine%2A&gt;</ph> Methoden.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.#ctor(System.IFormatProvider)">
          <source>If you do not want to provide a format provider, you create an instance by using the <ph id="ph1">&lt;xref:System.IO.TextWriter.%23ctor&gt;</ph> constructor, which sets the <ph id="ph2">&lt;xref:System.IO.TextWriter.FormatProvider%2A&gt;</ph> property to <ph id="ph3">`null`</ph>.</source>
          <target state="translated">Wenn Sie keinen Formatanbieter bereitstellen möchten, erstellen Sie eine Instanz mithilfe der <ph id="ph1">&lt;xref:System.IO.TextWriter.%23ctor&gt;</ph> -Konstruktor, der festlegt der <ph id="ph2">&lt;xref:System.IO.TextWriter.FormatProvider%2A&gt;</ph> Eigenschaft <ph id="ph3">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.#ctor(System.IFormatProvider)">
          <source>When the <ph id="ph1">&lt;xref:System.IO.TextWriter.FormatProvider%2A&gt;</ph> property is <ph id="ph2">`null`</ph>, the culture of the current thread is used for formatting.</source>
          <target state="translated">Wenn die <ph id="ph1">&lt;xref:System.IO.TextWriter.FormatProvider%2A&gt;</ph> Eigenschaft ist <ph id="ph2">`null`</ph>, die Kultur des aktuellen Threads für die Formatierung verwendet.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.#ctor(System.IFormatProvider)">
          <source>For a list of common I/O tasks, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</source>
          <target state="translated">Eine Liste der allgemeinen e/a-Aufgaben finden Sie <bpt id="p1">[</bpt>allgemeine e/a-Aufgaben<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Close">
          <source>Closes the current writer and releases any system resources associated with the writer.</source>
          <target state="translated">Schließt den aktuellen Writer und gibt alle dem Writer zugeordneten Systemressourcen frei.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Close">
          <source>This implementation of <ph id="ph1">`Close`</ph> calls the <ph id="ph2">&lt;xref:System.IO.TextWriter.Dispose%28System.Boolean%29?displayProperty=nameWithType&gt;</ph> method and passes it a <ph id="ph3">`true`</ph> value.</source>
          <target state="translated">Diese Implementierung der <ph id="ph1">`Close`</ph> Aufrufe der <ph id="ph2">&lt;xref:System.IO.TextWriter.Dispose%28System.Boolean%29?displayProperty=nameWithType&gt;</ph> Methode und übergibt es ein <ph id="ph3">`true`</ph> Wert.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Close">
          <source>Flushing the stream will not flush its underlying encoder unless you explicitly call <ph id="ph1">&lt;xref:System.IO.TextWriter.Flush%2A&gt;</ph> or <ph id="ph2">`Close`</ph>.</source>
          <target state="translated">Das Leeren des Streams wird die zugrunde liegende Encoder nicht entleert, es sei denn, Sie explizit aufrufen <ph id="ph1">&lt;xref:System.IO.TextWriter.Flush%2A&gt;</ph> oder <ph id="ph2">`Close`</ph>.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Close">
          <source>Setting the <ph id="ph1">&lt;xref:System.IO.StreamWriter.AutoFlush%2A?displayProperty=nameWithType&gt;</ph> property to <ph id="ph2">`true`</ph> means that data will be flushed from the buffer to the stream, but the encoder state will not be flushed.</source>
          <target state="translated">Festlegen der <ph id="ph1">&lt;xref:System.IO.StreamWriter.AutoFlush%2A?displayProperty=nameWithType&gt;</ph> Eigenschaft <ph id="ph2">`true`</ph> ist, werden Daten aus dem Puffer geleert werden, in den Stream, aber die Encoder-Status wird nicht geleert werden.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Close">
          <source>This allows the encoder to keep its state (partial characters) so that it can encode the next block of characters correctly.</source>
          <target state="translated">Dadurch wird den Encoder seinen Zustand (teilweise Zeichen) beibehalten, sodass er den nächsten Block von Zeichen richtig zu codieren.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Close">
          <source>This scenario affects UTF8 and UTF7 where certain characters can be encoded only after the encoder receives the adjacent character or characters.</source>
          <target state="translated">Dieses Szenario betrifft UTF8 und UTF7, in denen bestimmte Zeichen codiert werden können, nachdem der Encoder die angrenzenden Zeichen oder Zeichen empfängt.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Close">
          <source>In derived classes, do not override the <ph id="ph1">&lt;xref:System.IO.TextWriter.Close%2A&gt;</ph> method.</source>
          <target state="translated">Überschreiben Sie in abgeleiteten Klassen nicht die <ph id="ph1">&lt;xref:System.IO.TextWriter.Close%2A&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Close">
          <source>Instead, override the <ph id="ph1">&lt;xref:System.IO.TextWriter.Dispose%28System.Boolean%29?displayProperty=nameWithType&gt;</ph> method to add code for releasing resources.</source>
          <target state="translated">Überschreiben Sie stattdessen die <ph id="ph1">&lt;xref:System.IO.TextWriter.Dispose%28System.Boolean%29?displayProperty=nameWithType&gt;</ph> Methode, um Code für die Freigabe Ressourcen hinzuzufügen.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="F:System.IO.TextWriter.CoreNewLine">
          <source>Stores the newline characters used for this <ph id="ph1">&lt;see langword="TextWriter" /&gt;</ph>.</source>
          <target state="translated">Speichert die für diesen <ph id="ph1">&lt;see langword="TextWriter" /&gt;</ph> verwendeten Zeilenendemarken.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.IO.TextWriter.CoreNewLine">
          <source>For a list of common I/O tasks, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</source>
          <target state="translated">Eine Liste der allgemeinen e/a-Aufgaben finden Sie <bpt id="p1">[</bpt>allgemeine e/a-Aufgaben<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="T:System.IO.TextWriter">
          <source>Releases all resources used by the <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> object.</source>
          <target state="translated">Gibt alle vom <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph>-Objekt verwendeten Ressourcen frei.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Dispose">
          <source>Releases all resources used by the <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> object.</source>
          <target state="translated">Gibt alle vom <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph>-Objekt verwendeten Ressourcen frei.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Dispose">
          <source>Call <ph id="ph1">&lt;xref:System.IO.TextWriter.Dispose%2A&gt;</ph> when you are finished using the <ph id="ph2">&lt;xref:System.IO.TextWriter&gt;</ph>.</source>
          <target state="translated">Rufen Sie <ph id="ph1">&lt;xref:System.IO.TextWriter.Dispose%2A&gt;</ph> auf, wenn Sie <ph id="ph2">&lt;xref:System.IO.TextWriter&gt;</ph> nicht mehr benötigen.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Dispose">
          <source>The <ph id="ph1">&lt;xref:System.IO.TextWriter.Dispose%2A&gt;</ph> method leaves the <ph id="ph2">&lt;xref:System.IO.TextWriter&gt;</ph> in an unusable state.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.IO.TextWriter.Dispose%2A&gt;</ph>-Methode bewirkt, dass <ph id="ph2">&lt;xref:System.IO.TextWriter&gt;</ph> nicht mehr verwendet werden kann.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Dispose">
          <source>After calling <ph id="ph1">&lt;xref:System.IO.TextWriter.Dispose%2A&gt;</ph>, you must release all references to the <ph id="ph2">&lt;xref:System.IO.TextWriter&gt;</ph> so the garbage collector can reclaim the memory that the <ph id="ph3">&lt;xref:System.IO.TextWriter&gt;</ph> was occupying.</source>
          <target state="translated">Nach dem Aufruf <ph id="ph1">&lt;xref:System.IO.TextWriter.Dispose%2A&gt;</ph>, müssen Sie alle Verweise auf Freigeben der <ph id="ph2">&lt;xref:System.IO.TextWriter&gt;</ph> , damit der Garbage Collector den Arbeitsspeicher freigeben kann, die die <ph id="ph3">&lt;xref:System.IO.TextWriter&gt;</ph> belegt wurde.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Dispose">
          <source>For more information, see <bpt id="p1">[</bpt>Cleaning Up Unmanaged Resources<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept> and <bpt id="p2">[</bpt>Implementing a Dispose Method<ept id="p2">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</source>
          <target state="translated">Weitere Informationen finden Sie unter <bpt id="p1">[</bpt>Bereinigen von nicht verwalteten Ressourcen<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept> und <bpt id="p2">[</bpt>Implementieren einer Dispose-Methode<ept id="p2">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Dispose">
          <source><bpt id="p1">**</bpt>Note<ept id="p1">**</ept> Always call <ph id="ph1">&lt;xref:System.IO.TextWriter.Dispose%2A&gt;</ph> before you release your last reference to the <ph id="ph2">&lt;xref:System.IO.TextWriter&gt;</ph>.</source>
          <target state="translated"><bpt id="p1">**</bpt>Hinweis<ept id="p1">**</ept> immer Aufruf <ph id="ph1">&lt;xref:System.IO.TextWriter.Dispose%2A&gt;</ph> , bevor Sie den letzten Verweis auf Freigeben der <ph id="ph2">&lt;xref:System.IO.TextWriter&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Dispose">
          <source>Otherwise, the resources it is using will not be freed until the garbage collector calls the <ph id="ph1">&lt;xref:System.IO.TextWriter&gt;</ph> object's <ph id="ph2">&lt;xref:System.Object.Finalize%2A&gt;</ph> method.</source>
          <target state="translated">Andernfalls bleiben die verwendeten Ressourcen reserviert, bis die Garbage Collection die <ph id="ph1">&lt;xref:System.IO.TextWriter&gt;</ph>-Methode des <ph id="ph2">&lt;xref:System.Object.Finalize%2A&gt;</ph>-Objekts aufruft.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to release both managed and unmanaged resources; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to release only unmanaged resources.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, um sowohl verwaltete als auch nicht verwaltete Ressourcen freizugeben, <ph id="ph2">&lt;see langword="false" /&gt;</ph>, um ausschließlich nicht verwaltete Ressourcen freizugeben.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Dispose(System.Boolean)">
          <source>Releases the unmanaged resources used by the <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> and optionally releases the managed resources.</source>
          <target state="translated">Gibt die von <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> verwendeten nicht verwalteten Ressourcen und optional die verwalteten Ressourcen frei.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Dispose(System.Boolean)">
          <source>This method is called by <ph id="ph1">`Dispose`</ph> and <ph id="ph2">&lt;xref:System.Object.Finalize%2A&gt;</ph>.</source>
          <target state="translated">Diese Methode wird aufgerufen, indem <ph id="ph1">`Dispose`</ph> und <ph id="ph2">&lt;xref:System.Object.Finalize%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Dispose(System.Boolean)">
          <source>By default, this method specifies the <ph id="ph1">`disposing`</ph> parameter as <ph id="ph2">`true`</ph>.</source>
          <target state="translated">Standardmäßig gibt diese Methode die <ph id="ph1">`disposing`</ph> Parameter als <ph id="ph2">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;xref:System.Object.Finalize%2A&gt;</ph> specifies the <ph id="ph2">`disposing`</ph> parameter as <ph id="ph3">`false`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Object.Finalize%2A&gt;</ph> Gibt an, die <ph id="ph2">`disposing`</ph> Parameter als <ph id="ph3">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Dispose(System.Boolean)">
          <source>When the <ph id="ph1">`disposing`</ph> parameter is <ph id="ph2">`true`</ph>, this method releases all resources held by any managed objects that this <ph id="ph3">&lt;xref:System.IO.TextWriter&gt;</ph> references.</source>
          <target state="translated">Wenn der <ph id="ph1">`disposing`</ph>-Parameter <ph id="ph2">`true`</ph> ist, gibt diese Methode sämtliche Ressourcen frei, die für verwaltete Objekte reserviert sind, auf die dieser <ph id="ph3">&lt;xref:System.IO.TextWriter&gt;</ph> verweist.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Dispose(System.Boolean)">
          <source>This method invokes the <ph id="ph1">`Dispose`</ph> method of each referenced object.</source>
          <target state="translated">Diese Methode ruft die <ph id="ph1">`Dispose`</ph>-Methode aller Objekte auf, auf die verwiesen wird.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see cref="M:System.IO.TextWriter.Dispose(System.Boolean)" /&gt;</ph> can be called multiple times by other objects.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.IO.TextWriter.Dispose(System.Boolean)" /&gt;</ph> kann von anderen Objekten mehrmals aufgerufen werden.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Dispose(System.Boolean)">
          <source>When overriding this method, be careful not to reference objects that have been previously disposed of in an earlier call to <ph id="ph1">&lt;see langword="Dispose" /&gt;</ph>.</source>
          <target state="translated">Beim Überschreiben dieser Methode werden nicht auf Objekte verweisen, die einen früheren Aufruf freigegeben wurden <ph id="ph1">&lt;see langword="Dispose" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Dispose(System.Boolean)">
          <source>For more information about how to implement this method, see <bpt id="p1">[</bpt>Implementing a Dispose Method<ept id="p1">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</source>
          <target state="translated">Weitere Informationen dazu, wie Sie diese Methode implementieren, finden Sie unter <bpt id="p1">[</bpt>Implementieren einer Dispose-Methode<ept id="p1">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Dispose(System.Boolean)">
          <source>For more information about <ph id="ph1">&lt;see cref="M:System.IDisposable.Dispose" /&gt;</ph> and <ph id="ph2">&lt;see cref="M:System.Object.Finalize" /&gt;</ph>, see <bpt id="p1">[</bpt>Cleaning Up Unmanaged Resources<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept>.</source>
          <target state="translated">Weitere Informationen zu <ph id="ph1">&lt;see cref="M:System.IDisposable.Dispose" /&gt;</ph> und <ph id="ph2">&lt;see cref="M:System.Object.Finalize" /&gt;</ph>, finden Sie unter <bpt id="p1">[</bpt>Bereinigen von nicht verwalteten Ressourcen<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept>.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="P:System.IO.TextWriter.Encoding">
          <source>When overridden in a derived class, returns the character encoding in which the output is written.</source>
          <target state="translated">Gibt beim Überschreiben in einer abgeleiteten Klasse die Zeichencodierung zurück, in der die Ausgabe geschrieben ist.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.TextWriter.Encoding">
          <source>The character encoding in which the output is written.</source>
          <target state="translated">Die Zeichencodierung, in der die Ausgabe geschrieben wird.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.TextWriter.Encoding">
          <source>This property is necessary for some XML scenarios where a header must be written containing the encoding used by the <ph id="ph1">`TextWriter`</ph>.</source>
          <target state="translated">Diese Eigenschaft ist erforderlich für einige XML-Szenarien, in denen ein Header geschrieben werden muss, enthält die Codierung von verwendet, die <ph id="ph1">`TextWriter`</ph>.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.TextWriter.Encoding">
          <source>This enables the XML code to consume an arbitrary <ph id="ph1">`TextWriter`</ph> and generate the correct XML header.</source>
          <target state="translated">Dies ermöglicht die XML-Code einen beliebigen nutzen <ph id="ph1">`TextWriter`</ph> und den richtigen XML-Header generieren.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.TextWriter.Encoding">
          <source>For a list of common I/O tasks, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</source>
          <target state="translated">Eine Liste der allgemeinen e/a-Aufgaben finden Sie <bpt id="p1">[</bpt>allgemeine e/a-Aufgaben<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Flush">
          <source>Clears all buffers for the current writer and causes any buffered data to be written to the underlying device.</source>
          <target state="translated">Löscht sämtliche Puffer für den aktuellen Writer und veranlasst die Ausgabe aller gepufferten Daten an das zugrunde liegende Gerät.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Flush">
          <source>This default method does nothing, but derived classes can override the method to provide the appropriate functionality.</source>
          <target state="translated">Diese Standardmethode bewirkt nichts, aber abgeleitete Klassen können Überschreiben der Methode, um die entsprechende Funktionalität bereitzustellen.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Flush">
          <source>Flushing the stream will not flush its underlying encoder unless you explicitly call <ph id="ph1">`Flush`</ph> or <ph id="ph2">&lt;xref:System.IO.TextWriter.Close%2A&gt;</ph>.</source>
          <target state="translated">Das Leeren des Streams wird die zugrunde liegende Encoder nicht entleert, es sei denn, Sie explizit aufrufen <ph id="ph1">`Flush`</ph> oder <ph id="ph2">&lt;xref:System.IO.TextWriter.Close%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Flush">
          <source>Setting <ph id="ph1">&lt;xref:System.IO.StreamWriter.AutoFlush%2A&gt;</ph> to <ph id="ph2">`true`</ph> means that data will be flushed from the buffer to the stream, but the encoder state will not be flushed.</source>
          <target state="translated">Festlegen von <ph id="ph1">&lt;xref:System.IO.StreamWriter.AutoFlush%2A&gt;</ph> zu <ph id="ph2">`true`</ph> ist, werden Daten aus dem Puffer geleert werden, in den Stream, aber die Encoder-Status wird nicht geleert werden.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Flush">
          <source>This allows the encoder to keep its state (partial characters) so that it can encode the next block of characters correctly.</source>
          <target state="translated">Dadurch wird den Encoder seinen Zustand (teilweise Zeichen) beibehalten, sodass er den nächsten Block von Zeichen richtig zu codieren.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Flush">
          <source>This scenario affects UTF8 and UTF7 where certain characters can only be encoded after the encoder receives the adjacent character or characters.</source>
          <target state="translated">Dieses Szenario betrifft UTF8 und UTF7, in denen bestimmte Zeichen nur verschlüsselt werden können, nachdem der Encoder die angrenzenden Zeichen oder Zeichen empfängt.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.FlushAsync">
          <source>Asynchronously clears all buffers for the current writer and causes any buffered data to be written to the underlying device.</source>
          <target state="translated">Löscht sämtliche Puffer für den aktuellen Writer asynchron und veranlasst die Ausgabe aller gepufferten Daten an das zugrunde liegende Gerät.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.FlushAsync">
          <source>A task that represents the asynchronous flush operation.</source>
          <target state="translated">Eine Aufgabe, die die asynchrone Leerung darstellt.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.FlushAsync">
          <source>The text writer is disposed.</source>
          <target state="translated">Der Textwriter wird freigegeben.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.FlushAsync">
          <source>The writer is currently in use by a previous write operation.</source>
          <target state="translated">Der Writer wird derzeit von einem vorherigen Schreibvorgang verwendet.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="P:System.IO.TextWriter.FormatProvider">
          <source>Gets an object that controls formatting.</source>
          <target state="translated">Ruft ein Objekt zum Steuern der Formatierung ab.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.TextWriter.FormatProvider">
          <source>An <ph id="ph1">&lt;see cref="T:System.IFormatProvider" /&gt;</ph> object for a specific culture, or the formatting of the current culture if no other culture is specified.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.IFormatProvider" /&gt;</ph>-Objekt für eine bestimmte Kultur oder die Formatierung der aktuellen Kultur, wenn keine andere Kultur angegeben wurde.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.TextWriter.FormatProvider">
          <source>The value of the <ph id="ph1">&lt;xref:System.IO.TextWriter.FormatProvider%2A&gt;</ph> property specifies the culture-specific formatting that is used when you call the <ph id="ph2">&lt;xref:System.IO.TextWriter.Write%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.IO.TextWriter.WriteLine%2A&gt;</ph> methods.</source>
          <target state="translated">Der Wert von der <ph id="ph1">&lt;xref:System.IO.TextWriter.FormatProvider%2A&gt;</ph> Eigenschaft gibt an, der kulturabhängige Formatierung, die verwendet wird, beim Aufrufen der <ph id="ph2">&lt;xref:System.IO.TextWriter.Write%2A&gt;</ph> und <ph id="ph3">&lt;xref:System.IO.TextWriter.WriteLine%2A&gt;</ph> Methoden.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.TextWriter.FormatProvider">
          <source>If you do not want to provide a format provider, you create an instance by using the <ph id="ph1">&lt;xref:System.IO.TextWriter.%23ctor&gt;</ph> constructor, which sets the <ph id="ph2">&lt;xref:System.IO.TextWriter.FormatProvider%2A&gt;</ph> property to <ph id="ph3">`null`</ph>.</source>
          <target state="translated">Wenn Sie keinen Formatanbieter bereitstellen möchten, erstellen Sie eine Instanz mithilfe der <ph id="ph1">&lt;xref:System.IO.TextWriter.%23ctor&gt;</ph> -Konstruktor, der festlegt der <ph id="ph2">&lt;xref:System.IO.TextWriter.FormatProvider%2A&gt;</ph> Eigenschaft <ph id="ph3">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.TextWriter.FormatProvider">
          <source>When the <ph id="ph1">&lt;xref:System.IO.TextWriter.FormatProvider%2A&gt;</ph> property contains <ph id="ph2">`null`</ph>, the culture of the current thread is used for formatting.</source>
          <target state="translated">Wenn die <ph id="ph1">&lt;xref:System.IO.TextWriter.FormatProvider%2A&gt;</ph> Eigenschaft enthält <ph id="ph2">`null`</ph>, die Kultur des aktuellen Threads für die Formatierung verwendet.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.TextWriter.FormatProvider">
          <source>For an example of creating a file and writing text to a file, see <bpt id="p1">[</bpt>How to: Write Text to a File<ept id="p1">](~/docs/standard/io/how-to-write-text-to-a-file.md)</ept>.</source>
          <target state="translated">Ein Beispiel für eine Datei erstellen und Schreiben von Text in eine Datei, finden Sie unter <bpt id="p1">[</bpt>wie: Schreiben von Text in eine Datei<ept id="p1">](~/docs/standard/io/how-to-write-text-to-a-file.md)</ept>.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.TextWriter.FormatProvider">
          <source>For an example of reading text from a file, see <bpt id="p1">[</bpt>How to: Read Text from a File<ept id="p1">](~/docs/standard/io/how-to-read-text-from-a-file.md)</ept>.</source>
          <target state="translated">Ein Beispiel Lesen von Text aus einer Datei finden Sie unter <bpt id="p1">[</bpt>wie: Lesen von Text aus einer Datei<ept id="p1">](~/docs/standard/io/how-to-read-text-from-a-file.md)</ept>.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.TextWriter.FormatProvider">
          <source>For an example of reading from and writing to a binary file, see <bpt id="p1">[</bpt>How to: Read and Write to a Newly Created Data File<ept id="p1">](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)</ept>.</source>
          <target state="translated">Ein Beispiel für das Lesen und Schreiben in eine Binärdatei, finden Sie unter <bpt id="p1">[</bpt>wie: Lesen und Schreiben in einer neu erstellten Datendatei<ept id="p1">](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)</ept>.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.TextWriter.FormatProvider">
          <source>For a list of common I/O tasks, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</source>
          <target state="translated">Eine Liste der allgemeinen e/a-Aufgaben finden Sie <bpt id="p1">[</bpt>allgemeine e/a-Aufgaben<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="P:System.IO.TextWriter.NewLine">
          <source>Gets or sets the line terminator string used by the current <ph id="ph1">&lt;see langword="TextWriter" /&gt;</ph>.</source>
          <target state="translated">Ruft die Zeichenfolge für den Zeilenabschluss ab, die vom aktuellen <ph id="ph1">&lt;see langword="TextWriter" /&gt;</ph> verwendet wird, oder legt diese fest.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.TextWriter.NewLine">
          <source>The line terminator string for the current <ph id="ph1">&lt;see langword="TextWriter" /&gt;</ph>.</source>
          <target state="translated">Die Zeichenfolge für den Zeilenabschluss für den aktuellen <ph id="ph1">&lt;see langword="TextWriter" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.TextWriter.NewLine">
          <source>The default line terminator string is a carriage return followed by a line feed ("\r\n").</source>
          <target state="translated">Der Standardwert für den Zeilenabschluss ist ein Wagenrücklaufzeichen gefolgt von einem Zeilenvorschub ("\r\n").</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.TextWriter.NewLine">
          <source>The line terminator string is written to the text stream whenever one of the <ph id="ph1">`WriteLine`</ph> methods is called.</source>
          <target state="translated">Zeichenfolge für den Zeilenabschluss geschrieben, in den Textstream, wenn eine von der <ph id="ph1">`WriteLine`</ph> Methoden aufgerufen wird.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.TextWriter.NewLine">
          <source>In order for text written by the <ph id="ph1">`TextWriter`</ph> to be readable by a <ph id="ph2">&lt;xref:System.IO.TextReader&gt;</ph>, only "\n" or "\r\n" should be used as terminator strings.</source>
          <target state="translated">In der Reihenfolge vom geschriebene Text der <ph id="ph1">`TextWriter`</ph> von lesbar sein, eine <ph id="ph2">&lt;xref:System.IO.TextReader&gt;</ph>, sollten nur "\n" oder "\r\n" als Abschlusszeichen Zeichenfolgen verwendet werden.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.TextWriter.NewLine">
          <source>If <ph id="ph1">`NewLine`</ph> is set to <ph id="ph2">`null`</ph>, the default newline character is used instead.</source>
          <target state="translated">Wenn <ph id="ph1">`NewLine`</ph> festgelegt ist, um <ph id="ph2">`null`</ph>, das Standard-Zeilenumbruchzeichen wird stattdessen verwendet.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.TextWriter.NewLine">
          <source>For a list of common I/O tasks, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</source>
          <target state="translated">Eine Liste der allgemeinen e/a-Aufgaben finden Sie <bpt id="p1">[</bpt>allgemeine e/a-Aufgaben<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="F:System.IO.TextWriter.Null">
          <source>Provides a <ph id="ph1">&lt;see langword="TextWriter" /&gt;</ph> with no backing store that can be written to, but not read from.</source>
          <target state="translated">Stellt einen <ph id="ph1">&lt;see langword="TextWriter" /&gt;</ph> ohne Sicherungsspeicher bereit, in den zwar geschrieben, aus dem jedoch nicht gelesen werden kann.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.IO.TextWriter.Null">
          <source>Use <ph id="ph1">`Null`</ph> to redirect output to a stream that will not consume any operating system resources.</source>
          <target state="translated">Verwendung <ph id="ph1">`Null`</ph> Umleiten von Ausgaben in einen Stream, der keine Ressourcen des Betriebssystems belegt wird.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.IO.TextWriter.Null">
          <source>When the <ph id="ph1">&lt;xref:System.IO.TextWriter.Write%2A?displayProperty=nameWithType&gt;</ph> methods are invoked on <ph id="ph2">`Null`</ph>, the call simply returns, and no data is actually written to any backing store.</source>
          <target state="translated">Wenn die <ph id="ph1">&lt;xref:System.IO.TextWriter.Write%2A?displayProperty=nameWithType&gt;</ph> Methoden werden aufgerufen, auf <ph id="ph2">`Null`</ph>, der Aufruf zurückgegeben und keine Daten tatsächlich in einen Sicherungsspeicher geschrieben werden.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.IO.TextWriter.Null">
          <source>For a list of common I/O tasks, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</source>
          <target state="translated">Eine Liste der allgemeinen e/a-Aufgaben finden Sie <bpt id="p1">[</bpt>allgemeine e/a-Aufgaben<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Synchronized(System.IO.TextWriter)">
          <source>The <ph id="ph1">&lt;see langword="TextWriter" /&gt;</ph> to synchronize.</source>
          <target state="translated">Die <ph id="ph1">&lt;see langword="TextWriter" /&gt;</ph>, die synchronisiert werden soll.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Synchronized(System.IO.TextWriter)">
          <source>Creates a thread-safe wrapper around the specified <ph id="ph1">&lt;see langword="TextWriter" /&gt;</ph>.</source>
          <target state="translated">Erstellt einen threadsicheren Wrapper um den angegebenen <ph id="ph1">&lt;see langword="TextWriter" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Synchronized(System.IO.TextWriter)">
          <source>A thread-safe wrapper.</source>
          <target state="translated">Ein threadsicherer Wrapper.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Synchronized(System.IO.TextWriter)">
          <source>All write operations to the returned wrapper will be thread safe.</source>
          <target state="translated">Gesamter geschrieben, dass Vorgänge an den zurückgegebenen Wrapper threadsicher ist.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Synchronized(System.IO.TextWriter)">
          <source>You call this method to ensure that only one thread at a time can execute the methods on the <ph id="ph1">&lt;xref:System.IO.TextWriter&gt;</ph> instance that is returned.</source>
          <target state="translated">Rufen Sie diese Methode, um sicherzustellen, dass nur ein Thread zu einem Zeitpunkt für die Methoden ausgeführt werden kann die <ph id="ph1">&lt;xref:System.IO.TextWriter&gt;</ph> -Instanz, die zurückgegeben wird.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Synchronized(System.IO.TextWriter)">
          <source>For more information about synchronization and threading, see <bpt id="p1">[</bpt>Synchronizing Data for Multithreading<ept id="p1">](~/docs/standard/threading/synchronizing-data-for-multithreading.md)</ept>.</source>
          <target state="translated">Weitere Informationen zur Synchronisierung und threading finden Sie unter <bpt id="p1">[</bpt>Datensynchronisierung für Multithreading<ept id="p1">](~/docs/standard/threading/synchronizing-data-for-multithreading.md)</ept>.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Synchronized(System.IO.TextWriter)">
          <source>For a list of common I/O tasks, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</source>
          <target state="translated">Eine Liste der allgemeinen e/a-Aufgaben finden Sie <bpt id="p1">[</bpt>allgemeine e/a-Aufgaben<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Synchronized(System.IO.TextWriter)">
          <source><ph id="ph1">&lt;paramref name="writer" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="writer" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="T:System.IO.TextWriter">
          <source>Writes data to a text string or stream.</source>
          <target state="translated">Schreibt Daten in eine Textzeichenfolge oder einen Stream.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Write(System.Boolean)">
          <source>The <ph id="ph1">&lt;see langword="Boolean" /&gt;</ph> value to write.</source>
          <target state="translated">Der zu schreibende <ph id="ph1">&lt;see langword="Boolean" /&gt;</ph>-Wert.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Write(System.Boolean)">
          <source>Writes the text representation of a <ph id="ph1">&lt;see langword="Boolean" /&gt;</ph> value to the text string or stream.</source>
          <target state="translated">Schreibt die Textdarstellung eines <ph id="ph1">&lt;see langword="Boolean" /&gt;</ph>-Werts in die Textzeichenfolge oder den Stream.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.Boolean)">
          <source>The text representation of the specified value is produced by calling the <ph id="ph1">&lt;xref:System.Boolean.ToString%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">Die Textdarstellung des angegebenen Werts wird erstellt, durch Aufrufen der <ph id="ph1">&lt;xref:System.Boolean.ToString%2A?displayProperty=nameWithType&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.Boolean)">
          <source>This method outputs either <ph id="ph1">&lt;xref:System.Boolean.TrueString?displayProperty=nameWithType&gt;</ph> or <ph id="ph2">&lt;xref:System.Boolean.FalseString?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Diese Methode gibt entweder <ph id="ph1">&lt;xref:System.Boolean.TrueString?displayProperty=nameWithType&gt;</ph> oder <ph id="ph2">&lt;xref:System.Boolean.FalseString?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.Boolean)">
          <source>For a list of common I/O tasks, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</source>
          <target state="translated">Eine Liste der allgemeinen e/a-Aufgaben finden Sie <bpt id="p1">[</bpt>allgemeine e/a-Aufgaben<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Write(System.Boolean)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> is closed.</source>
          <target state="translated">Der <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> ist geschlossen.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Write(System.Boolean)">
          <source>An I/O error occurs.</source>
          <target state="translated">Ein E/A-Fehler tritt auf.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Write(System.Char)">
          <source>The character to write to the text stream.</source>
          <target state="translated">Das in den Textstream zu schreibende Zeichen.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Write(System.Char)">
          <source>Writes a character to the text string or stream.</source>
          <target state="translated">Schreibt ein Zeichen in die Textzeichenfolge oder den Stream.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.Char)">
          <source>This default method does nothing, but derived classes can override the method to provide the appropriate functionality.</source>
          <target state="translated">Diese Standardmethode bewirkt nichts, aber abgeleitete Klassen können Überschreiben der Methode, um die entsprechende Funktionalität bereitzustellen.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.Char)">
          <source>For a list of common I/O tasks, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</source>
          <target state="translated">Eine Liste der allgemeinen e/a-Aufgaben finden Sie <bpt id="p1">[</bpt>allgemeine e/a-Aufgaben<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Write(System.Char)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> is closed.</source>
          <target state="translated">Der <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> ist geschlossen.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Write(System.Char)">
          <source>An I/O error occurs.</source>
          <target state="translated">Ein E/A-Fehler tritt auf.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Write(System.Char[])">
          <source>The character array to write to the text stream.</source>
          <target state="translated">Das in den Textstream zu schreibende Zeichenarray.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Write(System.Char[])">
          <source>Writes a character array to the text string or stream.</source>
          <target state="translated">Schreibt ein Zeichenarray in die Textzeichenfolge oder den Stream.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.Char[])">
          <source>This method does not search the specified string for individual newline characters (hexadecimal 0x000a) and replace them with <ph id="ph1">&lt;xref:System.IO.TextWriter.NewLine%2A&gt;</ph>.</source>
          <target state="translated">Diese Methode nicht die angegebene Zeichenfolge für die einzelnen neue Zeilenumbruchzeichen (hexadezimal 0x000a) zu suchen und Ersetzen Sie sie durch <ph id="ph1">&lt;xref:System.IO.TextWriter.NewLine%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.Char[])">
          <source>This default method calls the <ph id="ph1">&lt;xref:System.IO.TextWriter.Write%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29&gt;</ph> method and passes the entire character array.</source>
          <target state="translated">Diese Standardmethode ruft die <ph id="ph1">&lt;xref:System.IO.TextWriter.Write%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29&gt;</ph> Methode und übergibt das gesamte Zeichenarray.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.Char[])">
          <source>If the character array is <ph id="ph1">`null`</ph>, nothing is written.</source>
          <target state="translated">Wenn das Zeichenarray <ph id="ph1">`null`</ph>, wird nichts geschrieben.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.Char[])">
          <source>For a list of common I/O tasks, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</source>
          <target state="translated">Eine Liste der allgemeinen e/a-Aufgaben finden Sie <bpt id="p1">[</bpt>allgemeine e/a-Aufgaben<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Write(System.Char[])">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> is closed.</source>
          <target state="translated">Der <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> ist geschlossen.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Write(System.Char[])">
          <source>An I/O error occurs.</source>
          <target state="translated">Ein E/A-Fehler tritt auf.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Write(System.Decimal)">
          <source>The decimal value to write.</source>
          <target state="translated">Der zu schreibende Dezimalwert.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Write(System.Decimal)">
          <source>Writes the text representation of a decimal value to the text string or stream.</source>
          <target state="translated">Schreibt die Textdarstellung eines Dezimalwerts in die Textzeichenfolge oder den Stream.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.Decimal)">
          <source>The <ph id="ph1">&lt;xref:System.IO.TextWriter.FormatProvider%2A&gt;</ph> property, if not <ph id="ph2">`null`</ph>, specifies the culture-specific formatting.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.IO.TextWriter.FormatProvider%2A&gt;</ph> Eigenschaft, wenn keine <ph id="ph2">`null`</ph>, gibt an, die kulturspezifische Formatierung.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Write(System.Decimal)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> is closed.</source>
          <target state="translated">Der <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> ist geschlossen.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Write(System.Decimal)">
          <source>An I/O error occurs.</source>
          <target state="translated">Ein E/A-Fehler tritt auf.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Write(System.Double)">
          <source>The 8-byte floating-point value to write.</source>
          <target state="translated">Der zu schreibende 8-Byte-Gleitkommawert.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Write(System.Double)">
          <source>Writes the text representation of an 8-byte floating-point value to the text string or stream.</source>
          <target state="translated">Schreibt die Textdarstellung eines 8-Byte-Gleitkommawerts in die Textzeichenfolge oder den Stream.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.Double)">
          <source>The text representation of the specified value is produced by calling the <ph id="ph1">&lt;xref:System.Double.ToString%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">Die Textdarstellung des angegebenen Werts wird erstellt, durch Aufrufen der <ph id="ph1">&lt;xref:System.Double.ToString%2A?displayProperty=nameWithType&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.Double)">
          <source>The <ph id="ph1">&lt;xref:System.IO.TextWriter.FormatProvider%2A?displayProperty=nameWithType&gt;</ph> property, if not <ph id="ph2">`null`</ph>, specifies the culture-specific formatting.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.IO.TextWriter.FormatProvider%2A?displayProperty=nameWithType&gt;</ph> Eigenschaft, wenn keine <ph id="ph2">`null`</ph>, gibt an, die kulturspezifische Formatierung.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.Double)">
          <source>For a list of common I/O tasks, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</source>
          <target state="translated">Eine Liste der allgemeinen e/a-Aufgaben finden Sie <bpt id="p1">[</bpt>allgemeine e/a-Aufgaben<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Write(System.Double)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> is closed.</source>
          <target state="translated">Der <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> ist geschlossen.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Write(System.Double)">
          <source>An I/O error occurs.</source>
          <target state="translated">Ein E/A-Fehler tritt auf.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Write(System.Int32)">
          <source>The 4-byte signed integer to write.</source>
          <target state="translated">Die zu schreibende 4-Byte-Ganzzahl mit Vorzeichen.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Write(System.Int32)">
          <source>Writes the text representation of a 4-byte signed integer to the text string or stream.</source>
          <target state="translated">Schreibt die Textdarstellung einer 4-Byte-Ganzzahl mit Vorzeichen in die Textzeichenfolge oder den Stream.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.Int32)">
          <source>The text representation of the specified value is produced by calling the <ph id="ph1">&lt;xref:System.Int32.ToString%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">Die Textdarstellung des angegebenen Werts wird erstellt, durch Aufrufen der <ph id="ph1">&lt;xref:System.Int32.ToString%2A?displayProperty=nameWithType&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.IO.TextWriter.FormatProvider%2A?displayProperty=nameWithType&gt;</ph> property, if not <ph id="ph2">`null`</ph>, specifies the culture-specific formatting.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.IO.TextWriter.FormatProvider%2A?displayProperty=nameWithType&gt;</ph> Eigenschaft, wenn keine <ph id="ph2">`null`</ph>, gibt an, die kulturspezifische Formatierung.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.Int32)">
          <source>For a list of common I/O tasks, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</source>
          <target state="translated">Eine Liste der allgemeinen e/a-Aufgaben finden Sie <bpt id="p1">[</bpt>allgemeine e/a-Aufgaben<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Write(System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> is closed.</source>
          <target state="translated">Der <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> ist geschlossen.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Write(System.Int32)">
          <source>An I/O error occurs.</source>
          <target state="translated">Ein E/A-Fehler tritt auf.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Write(System.Int64)">
          <source>The 8-byte signed integer to write.</source>
          <target state="translated">Die zu schreibende 8-Byte-Ganzzahl mit Vorzeichen.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Write(System.Int64)">
          <source>Writes the text representation of an 8-byte signed integer to the text string or stream.</source>
          <target state="translated">Schreibt die Textdarstellung einer 8-Byte-Ganzzahl mit Vorzeichen in die Textzeichenfolge oder den Stream.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.Int64)">
          <source>The text representation of the specified value is produced by calling the <ph id="ph1">&lt;xref:System.Int64.ToString%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">Die Textdarstellung des angegebenen Werts wird erstellt, durch Aufrufen der <ph id="ph1">&lt;xref:System.Int64.ToString%2A?displayProperty=nameWithType&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.Int64)">
          <source>The <ph id="ph1">&lt;xref:System.IO.TextWriter.FormatProvider%2A?displayProperty=nameWithType&gt;</ph> property, if not <ph id="ph2">`null`</ph>, specifies the culture-specific formatting.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.IO.TextWriter.FormatProvider%2A?displayProperty=nameWithType&gt;</ph> Eigenschaft, wenn keine <ph id="ph2">`null`</ph>, gibt an, die kulturspezifische Formatierung.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.Int64)">
          <source>For a list of common I/O tasks, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</source>
          <target state="translated">Eine Liste der allgemeinen e/a-Aufgaben finden Sie <bpt id="p1">[</bpt>allgemeine e/a-Aufgaben<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.Int64)">
          <source><bpt id="p1">[</bpt>How to: Write Text to a File<ept id="p1">](~/docs/standard/io/how-to-write-text-to-a-file.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Gewusst wie: Schreiben von Text in eine Datei<ept id="p1">](~/docs/standard/io/how-to-write-text-to-a-file.md)</ept></target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Write(System.Int64)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> is closed.</source>
          <target state="translated">Der <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> ist geschlossen.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Write(System.Int64)">
          <source>An I/O error occurs.</source>
          <target state="translated">Ein E/A-Fehler tritt auf.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Write(System.Object)">
          <source>The object to write.</source>
          <target state="translated">Das zu schreibende Objekt.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Write(System.Object)">
          <source>Writes the text representation of an object to the text string or stream by calling the <ph id="ph1">&lt;see langword="ToString" /&gt;</ph> method on that object.</source>
          <target state="translated">Schreibt die Textdarstellung eines Objekts in die Textzeichenfolge oder den Stream, indem für das Objekt die <ph id="ph1">&lt;see langword="ToString" /&gt;</ph>-Methode aufgerufen wird.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.Object)">
          <source>This overload is equivalent to the <ph id="ph1">&lt;xref:System.IO.TextWriter.Write%28System.String%29&gt;</ph> overload.</source>
          <target state="translated">Diese Überladung entspricht dem <ph id="ph1">&lt;xref:System.IO.TextWriter.Write%28System.String%29&gt;</ph> überladen.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.Object)">
          <source>If the specified object is <ph id="ph1">`null`</ph>, no action is taken and no exception is thrown.</source>
          <target state="translated">Wenn das angegebene Objekt <ph id="ph1">`null`</ph>, wird keine Aktion ausgeführt, und keine Ausnahme ausgelöst wird.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.Object)">
          <source>Otherwise, the object's <ph id="ph1">`ToString`</ph> method is called to produce the string representation, and the resulting string is then written to the output stream.</source>
          <target state="translated">Andernfalls des Objekts <ph id="ph1">`ToString`</ph> Methode wird aufgerufen, um die Zeichenfolgendarstellung zu erzeugen, und die resultierende Zeichenfolge wird dann in den Ausgabestream geschrieben.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.IO.TextWriter.FormatProvider%2A&gt;</ph> property, if not <ph id="ph2">`null`</ph>, specifies the culture-specific formatting.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.IO.TextWriter.FormatProvider%2A&gt;</ph> Eigenschaft, wenn keine <ph id="ph2">`null`</ph>, gibt an, die kulturspezifische Formatierung.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.Object)">
          <source>For a list of common I/O tasks, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</source>
          <target state="translated">Eine Liste der allgemeinen e/a-Aufgaben finden Sie <bpt id="p1">[</bpt>allgemeine e/a-Aufgaben<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Write(System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> is closed.</source>
          <target state="translated">Der <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> ist geschlossen.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Write(System.Object)">
          <source>An I/O error occurs.</source>
          <target state="translated">Ein E/A-Fehler tritt auf.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Write(System.Single)">
          <source>The 4-byte floating-point value to write.</source>
          <target state="translated">Der zu schreibende 4-Byte-Gleitkommawert.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Write(System.Single)">
          <source>Writes the text representation of a 4-byte floating-point value to the text string or stream.</source>
          <target state="translated">Schreibt die Textdarstellung eines 4-Byte-Gleitkommawerts in die Textzeichenfolge oder den Stream.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.Single)">
          <source>The text representation of the specified value is produced by calling the <ph id="ph1">&lt;xref:System.Single.ToString%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">Die Textdarstellung des angegebenen Werts wird erstellt, durch Aufrufen der <ph id="ph1">&lt;xref:System.Single.ToString%2A?displayProperty=nameWithType&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.Single)">
          <source>The <ph id="ph1">&lt;xref:System.IO.TextWriter.FormatProvider%2A?displayProperty=nameWithType&gt;</ph> property, if not <ph id="ph2">`null`</ph>, specifies the culture-specific formatting.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.IO.TextWriter.FormatProvider%2A?displayProperty=nameWithType&gt;</ph> Eigenschaft, wenn keine <ph id="ph2">`null`</ph>, gibt an, die kulturspezifische Formatierung.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.Single)">
          <source>For a list of common I/O tasks, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</source>
          <target state="translated">Eine Liste der allgemeinen e/a-Aufgaben finden Sie <bpt id="p1">[</bpt>allgemeine e/a-Aufgaben<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Write(System.Single)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> is closed.</source>
          <target state="translated">Der <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> ist geschlossen.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Write(System.Single)">
          <source>An I/O error occurs.</source>
          <target state="translated">Ein E/A-Fehler tritt auf.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Write(System.String)">
          <source>The string to write.</source>
          <target state="translated">Die zu schreibende Zeichenfolge.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Write(System.String)">
          <source>Writes a string to the text string or stream.</source>
          <target state="translated">Schreibt eine Zeichenfolge in die Textzeichenfolge oder den Stream.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String)">
          <source>This overload is equivalent to the <ph id="ph1">&lt;xref:System.IO.TextWriter.Write%28System.Char%5B%5D%29&gt;</ph> overload.</source>
          <target state="translated">Diese Überladung entspricht dem <ph id="ph1">&lt;xref:System.IO.TextWriter.Write%28System.Char%5B%5D%29&gt;</ph> überladen.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String)">
          <source>This method does not search the specified string for individual newline characters (hexadecimal 0x000a) and replace them with <ph id="ph1">&lt;xref:System.IO.TextWriter.NewLine%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Diese Methode nicht die angegebene Zeichenfolge für die einzelnen neue Zeilenumbruchzeichen (hexadezimal 0x000a) zu suchen und Ersetzen Sie sie durch <ph id="ph1">&lt;xref:System.IO.TextWriter.NewLine%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String)">
          <source>If <ph id="ph1">`value`</ph> is <ph id="ph2">`null`</ph>, nothing is written to the text stream.</source>
          <target state="translated">Wenn <ph id="ph1">`value`</ph> den Wert <ph id="ph2">`null`</ph> hat, wird nichts in den Stream geschrieben.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String)">
          <source>For a list of common I/O tasks, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</source>
          <target state="translated">Eine Liste der allgemeinen e/a-Aufgaben finden Sie <bpt id="p1">[</bpt>allgemeine e/a-Aufgaben<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Write(System.String)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> is closed.</source>
          <target state="translated">Der <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> ist geschlossen.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Write(System.String)">
          <source>An I/O error occurs.</source>
          <target state="translated">Ein E/A-Fehler tritt auf.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Write(System.UInt32)">
          <source>The 4-byte unsigned integer to write.</source>
          <target state="translated">Die zu schreibende 4-Byte-Ganzzahl ohne Vorzeichen.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Write(System.UInt32)">
          <source>Writes the text representation of a 4-byte unsigned integer to the text string or stream.</source>
          <target state="translated">Schreibt die Textdarstellung einer 4-Byte-Ganzzahl ohne Vorzeichen in die Textzeichenfolge oder den Stream.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.UInt32)">
          <source>The text representation of the specified value is produced by calling the <ph id="ph1">&lt;xref:System.UInt32.ToString%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">Die Textdarstellung des angegebenen Werts wird erstellt, durch Aufrufen der <ph id="ph1">&lt;xref:System.UInt32.ToString%2A?displayProperty=nameWithType&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.UInt32)">
          <source>The <ph id="ph1">&lt;xref:System.IO.TextWriter.FormatProvider%2A?displayProperty=nameWithType&gt;</ph> property, if not <ph id="ph2">`null`</ph>, specifies the culture-specific formatting.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.IO.TextWriter.FormatProvider%2A?displayProperty=nameWithType&gt;</ph> Eigenschaft, wenn keine <ph id="ph2">`null`</ph>, gibt an, die kulturspezifische Formatierung.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.UInt32)">
          <source>For a list of common I/O tasks, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</source>
          <target state="translated">Eine Liste der allgemeinen e/a-Aufgaben finden Sie <bpt id="p1">[</bpt>allgemeine e/a-Aufgaben<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Write(System.UInt32)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> is closed.</source>
          <target state="translated">Der <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> ist geschlossen.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Write(System.UInt32)">
          <source>An I/O error occurs.</source>
          <target state="translated">Ein E/A-Fehler tritt auf.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Write(System.UInt64)">
          <source>The 8-byte unsigned integer to write.</source>
          <target state="translated">Die zu schreibende 8-Byte-Ganzzahl ohne Vorzeichen.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Write(System.UInt64)">
          <source>Writes the text representation of an 8-byte unsigned integer to the text string or stream.</source>
          <target state="translated">Schreibt die Textdarstellung einer 8-Byte-Ganzzahl ohne Vorzeichen in die Textzeichenfolge oder den Stream.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.UInt64)">
          <source>The text representation of the specified value is produced by calling the <ph id="ph1">&lt;xref:System.UInt64.ToString%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">Die Textdarstellung des angegebenen Werts wird erstellt, durch Aufrufen der <ph id="ph1">&lt;xref:System.UInt64.ToString%2A?displayProperty=nameWithType&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.UInt64)">
          <source>The <ph id="ph1">&lt;xref:System.IO.TextWriter.FormatProvider%2A?displayProperty=nameWithType&gt;</ph> property, if not <ph id="ph2">`null`</ph>, specifies the culture-specific formatting.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.IO.TextWriter.FormatProvider%2A?displayProperty=nameWithType&gt;</ph> Eigenschaft, wenn keine <ph id="ph2">`null`</ph>, gibt an, die kulturspezifische Formatierung.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.UInt64)">
          <source>For a list of common I/O tasks, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</source>
          <target state="translated">Eine Liste der allgemeinen e/a-Aufgaben finden Sie <bpt id="p1">[</bpt>allgemeine e/a-Aufgaben<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Write(System.UInt64)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> is closed.</source>
          <target state="translated">Der <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> ist geschlossen.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Write(System.UInt64)">
          <source>An I/O error occurs.</source>
          <target state="translated">Ein E/A-Fehler tritt auf.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Write(System.String,System.Object)">
          <source>A composite format string.</source>
          <target state="translated">Eine kombinierte Formatzeichenfolge.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Write(System.String,System.Object)">
          <source>The object to format and write.</source>
          <target state="translated">Das zu formatierende und zu schreibende Objekt.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Write(System.String,System.Object)">
          <source>Writes a formatted string to the text string or stream, using the same semantics as the <ph id="ph1">&lt;see cref="M:System.String.Format(System.String,System.Object)" /&gt;</ph> method.</source>
          <target state="translated">Schreibt eine formatierte Zeichenfolge in die Textzeichenfolge oder den Stream unter Verwendung der gleichen Semantik wie die <ph id="ph1">&lt;see cref="M:System.String.Format(System.String,System.Object)" /&gt;</ph>-Methode.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object)">
          <source>This method uses composite formatting to convert the value of an object to its string representation and to embed that representation in a string.</source>
          <target state="translated">Diese Methode verwendet die kombinierte Formatierung auf den Wert eines Objekts in seine Zeichenfolgendarstellung zu konvertieren und diese Darstellung in einer Zeichenfolge einzubetten.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object)">
          <source>.NET provides extensive formatting support, which is described in greater detail in the following formatting topics:</source>
          <target state="translated">.NET bietet eine umfangreiche formatierungsunterstützung, dies wird in den folgenden Themen zur Formatierung ausführlicher beschrieben:</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object)">
          <source>For more information about the composite formatting feature, see <bpt id="p1">[</bpt>Composite Formatting<ept id="p1">](~/docs/standard/base-types/composite-formatting.md)</ept>.</source>
          <target state="translated">Weitere Informationen zur Funktion für kombinierte Formatierung finden Sie unter <bpt id="p1">[</bpt>kombinierte Formatierung<ept id="p1">](~/docs/standard/base-types/composite-formatting.md)</ept>.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object)">
          <source>For more information about numeric format specifiers, see <bpt id="p1">[</bpt>Standard Numeric Format Strings<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept> and <bpt id="p2">[</bpt>Custom Numeric Format Strings<ept id="p2">](~/docs/standard/base-types/custom-numeric-format-strings.md)</ept>.</source>
          <target state="translated">Weitere Informationen zu numerischen Formatbezeichnern finden Sie unter <bpt id="p1">[</bpt>Standard Numeric Format Strings<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept> und <bpt id="p2">[</bpt>benutzerdefinierte Zahlenformatzeichenfolgen<ept id="p2">](~/docs/standard/base-types/custom-numeric-format-strings.md)</ept>.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object)">
          <source>For more information about date and time format specifiers, see <bpt id="p1">[</bpt>Standard Date and Time Format Strings<ept id="p1">](~/docs/standard/base-types/standard-date-and-time-format-strings.md)</ept> and <bpt id="p2">[</bpt>Custom Date and Time Format Strings<ept id="p2">](~/docs/standard/base-types/custom-date-and-time-format-strings.md)</ept>.</source>
          <target state="translated">Weitere Informationen über Datum und Uhrzeit, die Formatbezeichner finden Sie unter <bpt id="p1">[</bpt>Standardformatbezeichner für Datum und Uhrzeit-Formatzeichenfolgen<ept id="p1">](~/docs/standard/base-types/standard-date-and-time-format-strings.md)</ept> und <bpt id="p2">[</bpt>benutzerdefinierte Datums- und Uhrzeit-Formatzeichenfolgen<ept id="p2">](~/docs/standard/base-types/custom-date-and-time-format-strings.md)</ept>.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object)">
          <source>For more information about enumeration format specifiers, see <bpt id="p1">[</bpt>Enumeration Format Strings<ept id="p1">](~/docs/standard/base-types/enumeration-format-strings.md)</ept>.</source>
          <target state="translated">Weitere Informationen zu Formatbezeichnern finden Sie unter <bpt id="p1">[</bpt>Enumerationsformatzeichenfolgen<ept id="p1">](~/docs/standard/base-types/enumeration-format-strings.md)</ept>.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object)">
          <source>For more information about formatting, see <bpt id="p1">[</bpt>Formatting Types<ept id="p1">](~/docs/standard/base-types/formatting-types.md)</ept>.</source>
          <target state="translated">Weitere Informationen zur Formatierung finden Sie unter <bpt id="p1">[</bpt>Formatierung von Typen<ept id="p1">](~/docs/standard/base-types/formatting-types.md)</ept>.</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object)">
          <source>The <ph id="ph1">`format`</ph> parameter consists of zero or more runs of text intermixed with zero or more indexed placeholders, called format items, that correspond to an object in the parameter list of this method.</source>
          <target state="translated">Die <ph id="ph1">`format`</ph> -Parameter besteht aus 0 (null) oder mehreren Einheiten Text mit NULL oder mehr indizierten Platzhaltern enthalten, so genannten Formatelementen, die ein Objekt in der Parameterliste dieser Methode entsprechen.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object)">
          <source>The formatting process replaces each format item with the string representation of the value of the corresponding object.</source>
          <target state="translated">Der Formatierungsvorgang wird jedes Formatelement durch die Zeichenfolgendarstellung des Werts des entsprechenden Objekts ersetzt.</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object)">
          <source>The syntax of a format item is as follows:</source>
          <target state="translated">Die Syntax eines Formatelements lautet wie folgt:</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object)">
          <source>{<bpt id="p1">*</bpt>index<ept id="p1">*</ept>[,<bpt id="p2">*</bpt>length<ept id="p2">*</ept>][:<bpt id="p3">*</bpt>formatString<ept id="p3">*</ept>]}</source>
          <target state="translated">{<bpt id="p1">*</bpt>Index<ept id="p1">*</ept>[,<bpt id="p2">*</bpt>Länge<ept id="p2">*</ept>] [:<bpt id="p3">*</bpt>"FormatString"<ept id="p3">*</ept>]}</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object)">
          <source>Elements in square brackets are optional.</source>
          <target state="translated">Elemente in eckigen Klammern sind optional.</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object)">
          <source>The following table describes each element.</source>
          <target state="translated">In der folgenden Tabelle wird jedes Element beschrieben.</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object)">
          <source>For more information about the composite formatting feature, including the syntax of a format item, see <bpt id="p1">[</bpt>Composite Formatting<ept id="p1">](~/docs/standard/base-types/composite-formatting.md)</ept>.</source>
          <target state="translated">Weitere Informationen zu der Funktion für kombinierte Formatierung, einschließlich der Syntax eines Formatelements, finden Sie unter <bpt id="p1">[</bpt>kombinierte Formatierung<ept id="p1">](~/docs/standard/base-types/composite-formatting.md)</ept>.</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object)">
          <source>Element</source>
          <target state="translated">Element</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object)">
          <source>Description</source>
          <target state="translated">Beschreibung </target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object)">
          <source>index</source>
          <target state="translated">Index</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object)">
          <source>The zero-based position in the parameter list of the object to be formatted.</source>
          <target state="translated">Die nullbasierte Position in der Parameterliste des Objekts, das formatiert werden.</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object)">
          <source>If the object specified by <bpt id="p1">*</bpt>index<ept id="p1">*</ept> is <ph id="ph1">`null`</ph>, the format item is replaced by <ph id="ph2">&lt;xref:System.String.Empty?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Wenn das Objekt vom angegebenen <bpt id="p1">*</bpt>Index<ept id="p1">*</ept> ist <ph id="ph1">`null`</ph>, das Formatelement wird durch ersetzt <ph id="ph2">&lt;xref:System.String.Empty?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object)">
          <source>Because this overload has only a single object in its parameter list, the value of <bpt id="p1">*</bpt>index<ept id="p1">*</ept> must always be 0.</source>
          <target state="translated">Da diese Überladung nur ein einzelnes Objekt im Parameter verfügt über aufzulisten, den Wert der <bpt id="p1">*</bpt>Index<ept id="p1">*</ept> muss immer 0 sein.</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object)">
          <source>If there is no parameter in the <bpt id="p1">*</bpt>index<ept id="p1">*</ept> position, a <ph id="ph1">&lt;xref:System.FormatException&gt;</ph> is thrown.</source>
          <target state="translated">Wenn es keinen Parameter in gibt der <bpt id="p1">*</bpt>Index<ept id="p1">*</ept> Position eine <ph id="ph1">&lt;xref:System.FormatException&gt;</ph> ausgelöst wird.</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object)">
          <source>,<bpt id="p1">*</bpt>length<ept id="p1">*</ept></source>
          <target state="translated">,<bpt id="p1">*</bpt>length<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object)">
          <source>The minimum number of characters in the string representation of the parameter.</source>
          <target state="translated">Die minimale Anzahl von Zeichen in eine Zeichenfolgendarstellung des Parameters.</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object)">
          <source>If positive, the parameter is right-aligned; if negative, it is left-aligned.</source>
          <target state="translated">Wenn positiv ist, ist der Parameter rechts ausgerichteten; Wenn Sie negativ ist, ist es linksbündig ausgerichtet.</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object)">
          <source>:<bpt id="p1">*</bpt>formatString<ept id="p1">*</ept></source>
          <target state="translated">:<bpt id="p1">*</bpt>formatString<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object)">
          <source>A standard or custom format string that is supported by the object to be formatted.</source>
          <target state="translated">Eine standardmäßige oder benutzerdefinierte Formatierungszeichenfolge, die von der zu formatierende Objekt unterstützt wird.</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object)">
          <source>Possible values for <bpt id="p1">*</bpt>formatString<ept id="p1">*</ept> are the same as the values supported by the object's <ph id="ph1">`ToString(string format)`</ph> method.</source>
          <target state="translated">Mögliche Werte für <bpt id="p1">*</bpt>"FormatString"<ept id="p1">*</ept> sind identisch mit den Werten, die von des Objekts unterstützt <ph id="ph1">`ToString(string format)`</ph> Methode.</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object)">
          <source>If <bpt id="p1">*</bpt>formatString<ept id="p1">*</ept> is not specified and the object to be formatted implements the <ph id="ph1">&lt;xref:System.IFormattable&gt;</ph> interface, <ph id="ph2">`null`</ph> is passed as the value of the <ph id="ph3">`format`</ph> parameter that is used as the <ph id="ph4">&lt;xref:System.IFormattable.ToString%2A?displayProperty=nameWithType&gt;</ph> format string.</source>
          <target state="translated">Wenn <bpt id="p1">*</bpt>"FormatString"<ept id="p1">*</ept> nicht angegeben wird und die zu formatierende Objekt implementiert die <ph id="ph1">&lt;xref:System.IFormattable&gt;</ph> -Schnittstelle, <ph id="ph2">`null`</ph> wird als Wert übergeben der <ph id="ph3">`format`</ph> Parameter, der verwendet wird, als die <ph id="ph4">&lt;xref:System.IFormattable.ToString%2A?displayProperty=nameWithType&gt;</ph> Formatzeichenfolge.</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object)">
          <source>The leading and trailing brace characters, "{" and "}", are required.</source>
          <target state="translated">Das führende und nachgestellte geschweifte Klammer "{" und "}", erforderlich sind.</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object)">
          <source>To specify a single literal brace character in <ph id="ph1">`format`</ph>, specify two leading or trailing brace characters; that is, "{{" or "}}".</source>
          <target state="translated">Um einen einzelnen literal geschweifte Klammer in <ph id="ph1">`format`</ph>, geben Sie zwei führende oder nachgestellte geschweifte; d. h. "{{" oder "}}".</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object)">
          <source>.</source>
          <target state="translated">sein.</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object)">
          <source>This method does not search the specified string for individual newline characters (hexadecimal 0x000a) and replace them with <ph id="ph1">&lt;xref:System.IO.TextWriter.NewLine%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Diese Methode nicht die angegebene Zeichenfolge für die einzelnen neue Zeilenumbruchzeichen (hexadezimal 0x000a) zu suchen und Ersetzen Sie sie durch <ph id="ph1">&lt;xref:System.IO.TextWriter.NewLine%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object)">
          <source>If a specified object is not referenced in the format string, it is ignored.</source>
          <target state="translated">Wenn ein angegebenes Objekt nicht in der Formatzeichenfolge verwiesen wird, wird es ignoriert.</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object)">
          <source>For a list of common I/O tasks, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</source>
          <target state="translated">Eine Liste der allgemeinen e/a-Aufgaben finden Sie <bpt id="p1">[</bpt>allgemeine e/a-Aufgaben<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Write(System.String,System.Object)">
          <source><ph id="ph1">&lt;paramref name="format" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="format" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Write(System.String,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> is closed.</source>
          <target state="translated">Der <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> ist geschlossen.</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Write(System.String,System.Object)">
          <source>An I/O error occurs.</source>
          <target state="translated">Ein E/A-Fehler tritt auf.</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Write(System.String,System.Object)">
          <source><ph id="ph1">&lt;paramref name="format" /&gt;</ph> is not a valid composite format string.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="format" /&gt;</ph> ist keine gültige kombinierte Formatzeichenfolge.</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Write(System.String,System.Object)">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Write(System.String,System.Object)">
          <source>The index of a format item is less than 0 (zero), or greater than or equal to the number of objects to be formatted (which, for this method overload, is one).</source>
          <target state="translated">Der Index eines Formatelements ist kleiner als 0 (null) oder größer/gleich der Anzahl der zu formatierenden Objekte (1 für diese Methodenüberladung).</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Write(System.String,System.Object[])">
          <source>A composite format string.</source>
          <target state="translated">Eine kombinierte Formatzeichenfolge.</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Write(System.String,System.Object[])">
          <source>An object array that contains zero or more objects to format and write.</source>
          <target state="translated">Ein Objektarray mit 0 (null) oder mehr zu formatierenden und zu schreibenden Objekten.</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Write(System.String,System.Object[])">
          <source>Writes a formatted string to the text string or stream, using the same semantics as the <ph id="ph1">&lt;see cref="M:System.String.Format(System.String,System.Object[])" /&gt;</ph> method.</source>
          <target state="translated">Schreibt eine formatierte Zeichenfolge in die Textzeichenfolge oder den Stream unter Verwendung der gleichen Semantik wie die <ph id="ph1">&lt;see cref="M:System.String.Format(System.String,System.Object[])" /&gt;</ph>-Methode.</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object[])">
          <source>This method uses composite formatting to convert the value of an object to its string representation and to embed that representation in a string.</source>
          <target state="translated">Diese Methode verwendet die kombinierte Formatierung auf den Wert eines Objekts in seine Zeichenfolgendarstellung zu konvertieren und diese Darstellung in einer Zeichenfolge einzubetten.</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object[])">
          <source>.NET provides extensive formatting support, which is described in greater detail in the following formatting topics:</source>
          <target state="translated">.NET bietet eine umfangreiche formatierungsunterstützung, dies wird in den folgenden Themen zur Formatierung ausführlicher beschrieben:</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object[])">
          <source>For more information about the composite formatting feature, see <bpt id="p1">[</bpt>Composite Formatting<ept id="p1">](~/docs/standard/base-types/composite-formatting.md)</ept>.</source>
          <target state="translated">Weitere Informationen zur Funktion für kombinierte Formatierung finden Sie unter <bpt id="p1">[</bpt>kombinierte Formatierung<ept id="p1">](~/docs/standard/base-types/composite-formatting.md)</ept>.</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object[])">
          <source>For more information about numeric format specifiers, see <bpt id="p1">[</bpt>Standard Numeric Format Strings<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept> and <bpt id="p2">[</bpt>Custom Numeric Format Strings<ept id="p2">](~/docs/standard/base-types/custom-numeric-format-strings.md)</ept>.</source>
          <target state="translated">Weitere Informationen zu numerischen Formatbezeichnern finden Sie unter <bpt id="p1">[</bpt>Standard Numeric Format Strings<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept> und <bpt id="p2">[</bpt>benutzerdefinierte Zahlenformatzeichenfolgen<ept id="p2">](~/docs/standard/base-types/custom-numeric-format-strings.md)</ept>.</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object[])">
          <source>For more information about date and time format specifiers, see <bpt id="p1">[</bpt>Standard Date and Time Format Strings<ept id="p1">](~/docs/standard/base-types/standard-date-and-time-format-strings.md)</ept> and <bpt id="p2">[</bpt>Custom Date and Time Format Strings<ept id="p2">](~/docs/standard/base-types/custom-date-and-time-format-strings.md)</ept>.</source>
          <target state="translated">Weitere Informationen über Datum und Uhrzeit, die Formatbezeichner finden Sie unter <bpt id="p1">[</bpt>Standardformatbezeichner für Datum und Uhrzeit-Formatzeichenfolgen<ept id="p1">](~/docs/standard/base-types/standard-date-and-time-format-strings.md)</ept> und <bpt id="p2">[</bpt>benutzerdefinierte Datums- und Uhrzeit-Formatzeichenfolgen<ept id="p2">](~/docs/standard/base-types/custom-date-and-time-format-strings.md)</ept>.</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object[])">
          <source>For more information about enumeration format specifiers, see <bpt id="p1">[</bpt>Enumeration Format Strings<ept id="p1">](~/docs/standard/base-types/enumeration-format-strings.md)</ept>.</source>
          <target state="translated">Weitere Informationen zu Formatbezeichnern finden Sie unter <bpt id="p1">[</bpt>Enumerationsformatzeichenfolgen<ept id="p1">](~/docs/standard/base-types/enumeration-format-strings.md)</ept>.</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object[])">
          <source>For more information about formatting, see <bpt id="p1">[</bpt>Formatting Types<ept id="p1">](~/docs/standard/base-types/formatting-types.md)</ept>.</source>
          <target state="translated">Weitere Informationen zur Formatierung finden Sie unter <bpt id="p1">[</bpt>Formatierung von Typen<ept id="p1">](~/docs/standard/base-types/formatting-types.md)</ept>.</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object[])">
          <source>The <ph id="ph1">`format`</ph> parameter consists of zero or more runs of text intermixed with zero or more indexed placeholders, called format items, that correspond to an object in the parameter list of this method.</source>
          <target state="translated">Die <ph id="ph1">`format`</ph> -Parameter besteht aus 0 (null) oder mehreren Einheiten Text mit NULL oder mehr indizierten Platzhaltern enthalten, so genannten Formatelementen, die ein Objekt in der Parameterliste dieser Methode entsprechen.</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object[])">
          <source>The formatting process replaces each format item with the string representation of the value of the corresponding object.</source>
          <target state="translated">Der Formatierungsvorgang wird jedes Formatelement durch die Zeichenfolgendarstellung des Werts des entsprechenden Objekts ersetzt.</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object[])">
          <source>The syntax of a format item is as follows:</source>
          <target state="translated">Die Syntax eines Formatelements lautet wie folgt:</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object[])">
          <source>{<bpt id="p1">*</bpt>index<ept id="p1">*</ept>[,<bpt id="p2">*</bpt>length<ept id="p2">*</ept>][:<bpt id="p3">*</bpt>formatString<ept id="p3">*</ept>]}</source>
          <target state="translated">{<bpt id="p1">*</bpt>Index<ept id="p1">*</ept>[,<bpt id="p2">*</bpt>Länge<ept id="p2">*</ept>] [:<bpt id="p3">*</bpt>"FormatString"<ept id="p3">*</ept>]}</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object[])">
          <source>Elements in square brackets are optional.</source>
          <target state="translated">Elemente in eckigen Klammern sind optional.</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object[])">
          <source>The following table describes each element.</source>
          <target state="translated">In der folgenden Tabelle wird jedes Element beschrieben.</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object[])">
          <source>For more information about the composite formatting feature, including the syntax of a format item, see <bpt id="p1">[</bpt>Composite Formatting<ept id="p1">](~/docs/standard/base-types/composite-formatting.md)</ept>.</source>
          <target state="translated">Weitere Informationen zu der Funktion für kombinierte Formatierung, einschließlich der Syntax eines Formatelements, finden Sie unter <bpt id="p1">[</bpt>kombinierte Formatierung<ept id="p1">](~/docs/standard/base-types/composite-formatting.md)</ept>.</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object[])">
          <source>Element</source>
          <target state="translated">Element</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object[])">
          <source>Description</source>
          <target state="translated">Beschreibung </target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object[])">
          <source>index</source>
          <target state="translated">Index</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object[])">
          <source>The zero-based position in the parameter list of the object to be formatted.</source>
          <target state="translated">Die nullbasierte Position in der Parameterliste des Objekts, das formatiert werden.</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object[])">
          <source>If the object specified by <bpt id="p1">*</bpt>index<ept id="p1">*</ept> is <ph id="ph1">`null`</ph>, the format item is replaced by <ph id="ph2">&lt;xref:System.String.Empty?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Wenn das Objekt vom angegebenen <bpt id="p1">*</bpt>Index<ept id="p1">*</ept> ist <ph id="ph1">`null`</ph>, das Formatelement wird durch ersetzt <ph id="ph2">&lt;xref:System.String.Empty?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object[])">
          <source>Because this overload has an array in its parameter list, the value of <bpt id="p1">*</bpt>index<ept id="p1">*</ept> must always be less than the length of the array.</source>
          <target state="translated">Diese Überladung verfügt über ein Array in seine Parameter aufzulisten, den Wert der <bpt id="p1">*</bpt>Index<ept id="p1">*</ept> muss immer kleiner als die Länge des Arrays sein.</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object[])">
          <source>If there is no parameter in the <bpt id="p1">*</bpt>index<ept id="p1">*</ept> position, a <ph id="ph1">&lt;xref:System.FormatException&gt;</ph> is thrown.</source>
          <target state="translated">Wenn es keinen Parameter in gibt der <bpt id="p1">*</bpt>Index<ept id="p1">*</ept> Position eine <ph id="ph1">&lt;xref:System.FormatException&gt;</ph> ausgelöst wird.</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object[])">
          <source>,<bpt id="p1">*</bpt>length<ept id="p1">*</ept></source>
          <target state="translated">,<bpt id="p1">*</bpt>length<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object[])">
          <source>The minimum number of characters in the string representation of the parameter.</source>
          <target state="translated">Die minimale Anzahl von Zeichen in eine Zeichenfolgendarstellung des Parameters.</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object[])">
          <source>If positive, the parameter is right-aligned; if negative, it is left-aligned.</source>
          <target state="translated">Wenn positiv ist, ist der Parameter rechts ausgerichteten; Wenn Sie negativ ist, ist es linksbündig ausgerichtet.</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object[])">
          <source>:<bpt id="p1">*</bpt>formatString<ept id="p1">*</ept></source>
          <target state="translated">:<bpt id="p1">*</bpt>formatString<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object[])">
          <source>A standard or custom format string that is supported by the object to be formatted.</source>
          <target state="translated">Eine standardmäßige oder benutzerdefinierte Formatierungszeichenfolge, die von der zu formatierende Objekt unterstützt wird.</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object[])">
          <source>Possible values for <bpt id="p1">*</bpt>formatString<ept id="p1">*</ept> are the same as the values supported by the object's <ph id="ph1">`ToString(string format)`</ph> method.</source>
          <target state="translated">Mögliche Werte für <bpt id="p1">*</bpt>"FormatString"<ept id="p1">*</ept> sind identisch mit den Werten, die von des Objekts unterstützt <ph id="ph1">`ToString(string format)`</ph> Methode.</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object[])">
          <source>If <bpt id="p1">*</bpt>formatString<ept id="p1">*</ept> is not specified and the object to be formatted implements the <ph id="ph1">&lt;xref:System.IFormattable&gt;</ph> interface, <ph id="ph2">`null`</ph> is passed as the value of the <ph id="ph3">`format`</ph> parameter that is used as the <ph id="ph4">&lt;xref:System.IFormattable.ToString%2A?displayProperty=nameWithType&gt;</ph> format string.</source>
          <target state="translated">Wenn <bpt id="p1">*</bpt>"FormatString"<ept id="p1">*</ept> nicht angegeben wird und die zu formatierende Objekt implementiert die <ph id="ph1">&lt;xref:System.IFormattable&gt;</ph> -Schnittstelle, <ph id="ph2">`null`</ph> wird als Wert übergeben der <ph id="ph3">`format`</ph> Parameter, der verwendet wird, als die <ph id="ph4">&lt;xref:System.IFormattable.ToString%2A?displayProperty=nameWithType&gt;</ph> Formatzeichenfolge.</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object[])">
          <source>The leading and trailing brace characters, "{" and "}", are required.</source>
          <target state="translated">Das führende und nachgestellte geschweifte Klammer "{" und "}", erforderlich sind.</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object[])">
          <source>To specify a single literal brace character in <ph id="ph1">`format`</ph>, specify two leading or trailing brace characters; that is, "{{" or "}}".</source>
          <target state="translated">Um einen einzelnen literal geschweifte Klammer in <ph id="ph1">`format`</ph>, geben Sie zwei führende oder nachgestellte geschweifte; d. h. "{{" oder "}}".</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object[])">
          <source>This method does not search the specified string for individual newline characters (hexadecimal 0x000a) and replace them with <ph id="ph1">&lt;xref:System.IO.TextWriter.NewLine%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Diese Methode nicht die angegebene Zeichenfolge für die einzelnen neue Zeilenumbruchzeichen (hexadezimal 0x000a) zu suchen und Ersetzen Sie sie durch <ph id="ph1">&lt;xref:System.IO.TextWriter.NewLine%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object[])">
          <source>If a specified object is not referenced in the format string, it is ignored.</source>
          <target state="translated">Wenn ein angegebenes Objekt nicht in der Formatzeichenfolge verwiesen wird, wird es ignoriert.</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object[])">
          <source>For a list of common I/O tasks, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</source>
          <target state="translated">Eine Liste der allgemeinen e/a-Aufgaben finden Sie <bpt id="p1">[</bpt>allgemeine e/a-Aufgaben<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Write(System.String,System.Object[])">
          <source><ph id="ph1">&lt;paramref name="format" /&gt;</ph> or <ph id="ph2">&lt;paramref name="arg" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="format" /&gt;</ph> oder <ph id="ph2">&lt;paramref name="arg" /&gt;</ph> ist <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Write(System.String,System.Object[])">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> is closed.</source>
          <target state="translated">Der <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> ist geschlossen.</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Write(System.String,System.Object[])">
          <source>An I/O error occurs.</source>
          <target state="translated">Ein E/A-Fehler tritt auf.</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Write(System.String,System.Object[])">
          <source><ph id="ph1">&lt;paramref name="format" /&gt;</ph> is not a valid composite format string.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="format" /&gt;</ph> ist keine gültige kombinierte Formatzeichenfolge.</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Write(System.String,System.Object[])">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Write(System.String,System.Object[])">
          <source>The index of a format item is less than 0 (zero), or greater than or equal to the length of the <ph id="ph1">&lt;paramref name="arg" /&gt;</ph> array.</source>
          <target state="translated">Der Index eines Formatelements ist kleiner als 0 (null) oder größer oder gleich der Länge des <ph id="ph1">&lt;paramref name="arg" /&gt;</ph>-Arrays.</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Write(System.Char[],System.Int32,System.Int32)">
          <source>The character array to write data from.</source>
          <target state="translated">Das Zeichenarray, aus dem Daten geschrieben werden sollen.</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Write(System.Char[],System.Int32,System.Int32)">
          <source>The character position in the buffer at which to start retrieving data.</source>
          <target state="translated">Die Zeichenposition im Puffer, an der mit dem Abrufen von Daten begonnen werden soll.</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Write(System.Char[],System.Int32,System.Int32)">
          <source>The number of characters to write.</source>
          <target state="translated">Die Anzahl der zu schreibenden Zeichen.</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Write(System.Char[],System.Int32,System.Int32)">
          <source>Writes a subarray of characters to the text string or stream.</source>
          <target state="translated">Schreibt ein Teilarray von Zeichen in die Textzeichenfolge oder den Stream.</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.Char[],System.Int32,System.Int32)">
          <source>This method will write <ph id="ph1">`count`</ph> characters of data into this <ph id="ph2">`TextWriter`</ph> from the <ph id="ph3">`buffer`</ph> character array starting at position <ph id="ph4">`index`</ph>.</source>
          <target state="translated">Diese Methode schreibt <ph id="ph1">`count`</ph> Zeichen mit Daten in diese <ph id="ph2">`TextWriter`</ph> aus der <ph id="ph3">`buffer`</ph> Array von Zeichen ab Position <ph id="ph4">`index`</ph>.</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.Char[],System.Int32,System.Int32)">
          <source>This overload is equivalent to the <ph id="ph1">&lt;xref:System.IO.TextWriter.Write%28System.Char%5B%5D%29&gt;</ph> overload for each character in <ph id="ph2">`buffer`</ph> between <ph id="ph3">`index`</ph> and (<ph id="ph4">`index`</ph><ph id="ph5"> + </ph><ph id="ph6">`count`</ph>).</source>
          <target state="translated">Diese Überladung entspricht dem <ph id="ph1">&lt;xref:System.IO.TextWriter.Write%28System.Char%5B%5D%29&gt;</ph> für jedes Zeichen in überladen <ph id="ph2">`buffer`</ph> zwischen <ph id="ph3">`index`</ph> und (<ph id="ph4">`index`</ph><ph id="ph5"> + </ph><ph id="ph6">`count`</ph>).</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.Char[],System.Int32,System.Int32)">
          <source>For a list of common I/O tasks, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</source>
          <target state="translated">Eine Liste der allgemeinen e/a-Aufgaben finden Sie <bpt id="p1">[</bpt>allgemeine e/a-Aufgaben<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Write(System.Char[],System.Int32,System.Int32)">
          <source>The buffer length minus <ph id="ph1">&lt;paramref name="index" /&gt;</ph> is less than <ph id="ph2">&lt;paramref name="count" /&gt;</ph>.</source>
          <target state="translated">Die Länge des Puffers minus <ph id="ph1">&lt;paramref name="index" /&gt;</ph> ist kleiner als <ph id="ph2">&lt;paramref name="count" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Write(System.Char[],System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Der <ph id="ph1">&lt;paramref name="buffer" /&gt;</ph>-Parameter ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Write(System.Char[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> or <ph id="ph2">&lt;paramref name="count" /&gt;</ph> is negative.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> oder <ph id="ph2">&lt;paramref name="count" /&gt;</ph> ist ein negativer Wert.</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Write(System.Char[],System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> is closed.</source>
          <target state="translated">Der <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> ist geschlossen.</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Write(System.Char[],System.Int32,System.Int32)">
          <source>An I/O error occurs.</source>
          <target state="translated">Ein E/A-Fehler tritt auf.</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Write(System.String,System.Object,System.Object)">
          <source>A composite format string.</source>
          <target state="translated">Eine kombinierte Formatzeichenfolge.</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Write(System.String,System.Object,System.Object)">
          <source>The first object to format and write.</source>
          <target state="translated">Das erste zu formatierende und zu schreibende Objekt.</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Write(System.String,System.Object,System.Object)">
          <source>The second object to format and write.</source>
          <target state="translated">Das zweite zu formatierende und zu schreibende Objekt.</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Write(System.String,System.Object,System.Object)">
          <source>Writes a formatted string to the text string or stream, using the same semantics as the <ph id="ph1">&lt;see cref="M:System.String.Format(System.String,System.Object,System.Object)" /&gt;</ph> method.</source>
          <target state="translated">Schreibt eine formatierte Zeichenfolge in die Textzeichenfolge oder den Stream unter Verwendung der gleichen Semantik wie die <ph id="ph1">&lt;see cref="M:System.String.Format(System.String,System.Object,System.Object)" /&gt;</ph>-Methode.</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object,System.Object)">
          <source>This method uses composite formatting to convert the value of an object to its string representation and to embed that representation in a string.</source>
          <target state="translated">Diese Methode verwendet die kombinierte Formatierung auf den Wert eines Objekts in seine Zeichenfolgendarstellung zu konvertieren und diese Darstellung in einer Zeichenfolge einzubetten.</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object,System.Object)">
          <source>.NET provides extensive formatting support, which is described in greater detail in the following formatting topics:</source>
          <target state="translated">.NET bietet eine umfangreiche formatierungsunterstützung, dies wird in den folgenden Themen zur Formatierung ausführlicher beschrieben:</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object,System.Object)">
          <source>For more information about the composite formatting feature, see <bpt id="p1">[</bpt>Composite Formatting<ept id="p1">](~/docs/standard/base-types/composite-formatting.md)</ept>.</source>
          <target state="translated">Weitere Informationen zur Funktion für kombinierte Formatierung finden Sie unter <bpt id="p1">[</bpt>kombinierte Formatierung<ept id="p1">](~/docs/standard/base-types/composite-formatting.md)</ept>.</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object,System.Object)">
          <source>For more information about numeric format specifiers, see <bpt id="p1">[</bpt>Standard Numeric Format Strings<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept> and <bpt id="p2">[</bpt>Custom Numeric Format Strings<ept id="p2">](~/docs/standard/base-types/custom-numeric-format-strings.md)</ept>.</source>
          <target state="translated">Weitere Informationen zu numerischen Formatbezeichnern finden Sie unter <bpt id="p1">[</bpt>Standard Numeric Format Strings<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept> und <bpt id="p2">[</bpt>benutzerdefinierte Zahlenformatzeichenfolgen<ept id="p2">](~/docs/standard/base-types/custom-numeric-format-strings.md)</ept>.</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object,System.Object)">
          <source>For more information about date and time format specifiers, see <bpt id="p1">[</bpt>Standard Date and Time Format Strings<ept id="p1">](~/docs/standard/base-types/standard-date-and-time-format-strings.md)</ept> and <bpt id="p2">[</bpt>Custom Date and Time Format Strings<ept id="p2">](~/docs/standard/base-types/custom-date-and-time-format-strings.md)</ept>.</source>
          <target state="translated">Weitere Informationen über Datum und Uhrzeit, die Formatbezeichner finden Sie unter <bpt id="p1">[</bpt>Standardformatbezeichner für Datum und Uhrzeit-Formatzeichenfolgen<ept id="p1">](~/docs/standard/base-types/standard-date-and-time-format-strings.md)</ept> und <bpt id="p2">[</bpt>benutzerdefinierte Datums- und Uhrzeit-Formatzeichenfolgen<ept id="p2">](~/docs/standard/base-types/custom-date-and-time-format-strings.md)</ept>.</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object,System.Object)">
          <source>For more information about enumeration format specifiers, see <bpt id="p1">[</bpt>Enumeration Format Strings<ept id="p1">](~/docs/standard/base-types/enumeration-format-strings.md)</ept>.</source>
          <target state="translated">Weitere Informationen zu Formatbezeichnern finden Sie unter <bpt id="p1">[</bpt>Enumerationsformatzeichenfolgen<ept id="p1">](~/docs/standard/base-types/enumeration-format-strings.md)</ept>.</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object,System.Object)">
          <source>For more information about formatting, see <bpt id="p1">[</bpt>Formatting Types<ept id="p1">](~/docs/standard/base-types/formatting-types.md)</ept>.</source>
          <target state="translated">Weitere Informationen zur Formatierung finden Sie unter <bpt id="p1">[</bpt>Formatierung von Typen<ept id="p1">](~/docs/standard/base-types/formatting-types.md)</ept>.</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object,System.Object)">
          <source>The <ph id="ph1">`format`</ph> parameter consists of zero or more runs of text intermixed with zero or more indexed placeholders, called format items, that correspond to an object in the parameter list of this method.</source>
          <target state="translated">Die <ph id="ph1">`format`</ph> -Parameter besteht aus 0 (null) oder mehreren Einheiten Text mit NULL oder mehr indizierten Platzhaltern enthalten, so genannten Formatelementen, die ein Objekt in der Parameterliste dieser Methode entsprechen.</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object,System.Object)">
          <source>The formatting process replaces each format item with the string representation of the value of the corresponding object.</source>
          <target state="translated">Der Formatierungsvorgang wird jedes Formatelement durch die Zeichenfolgendarstellung des Werts des entsprechenden Objekts ersetzt.</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object,System.Object)">
          <source>The syntax of a format item is as follows:</source>
          <target state="translated">Die Syntax eines Formatelements lautet wie folgt:</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object,System.Object)">
          <source>{<bpt id="p1">*</bpt>index<ept id="p1">*</ept>[,<bpt id="p2">*</bpt>length<ept id="p2">*</ept>][:<bpt id="p3">*</bpt>formatString<ept id="p3">*</ept>]}</source>
          <target state="translated">{<bpt id="p1">*</bpt>Index<ept id="p1">*</ept>[,<bpt id="p2">*</bpt>Länge<ept id="p2">*</ept>] [:<bpt id="p3">*</bpt>"FormatString"<ept id="p3">*</ept>]}</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object,System.Object)">
          <source>Elements in square brackets are optional.</source>
          <target state="translated">Elemente in eckigen Klammern sind optional.</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object,System.Object)">
          <source>The following table describes each element.</source>
          <target state="translated">In der folgenden Tabelle wird jedes Element beschrieben.</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object,System.Object)">
          <source>For more information about the composite formatting feature, including the syntax of a format item, see <bpt id="p1">[</bpt>Composite Formatting<ept id="p1">](~/docs/standard/base-types/composite-formatting.md)</ept>.</source>
          <target state="translated">Weitere Informationen zu der Funktion für kombinierte Formatierung, einschließlich der Syntax eines Formatelements, finden Sie unter <bpt id="p1">[</bpt>kombinierte Formatierung<ept id="p1">](~/docs/standard/base-types/composite-formatting.md)</ept>.</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object,System.Object)">
          <source>Element</source>
          <target state="translated">Element</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object,System.Object)">
          <source>Description</source>
          <target state="translated">Beschreibung </target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object,System.Object)">
          <source>index</source>
          <target state="translated">Index</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object,System.Object)">
          <source>The zero-based position in the parameter list of the object to be formatted.</source>
          <target state="translated">Die nullbasierte Position in der Parameterliste des Objekts, das formatiert werden.</target>       </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object,System.Object)">
          <source>If the object specified by <bpt id="p1">*</bpt>index<ept id="p1">*</ept> is <ph id="ph1">`null`</ph>, the format item is replaced by <ph id="ph2">&lt;xref:System.String.Empty?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Wenn das Objekt vom angegebenen <bpt id="p1">*</bpt>Index<ept id="p1">*</ept> ist <ph id="ph1">`null`</ph>, das Formatelement wird durch ersetzt <ph id="ph2">&lt;xref:System.String.Empty?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object,System.Object)">
          <source>Because this overload has two objects in its parameter list, the value of <bpt id="p1">*</bpt>index<ept id="p1">*</ept> must always be 0 or 1.</source>
          <target state="translated">Da diese Überladung zwei Objekte im Parameter aufzulisten, den Wert der <bpt id="p1">*</bpt>Index<ept id="p1">*</ept> muss immer 0 oder 1 sein.</target>       </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object,System.Object)">
          <source>If there is no parameter in the <bpt id="p1">*</bpt>index<ept id="p1">*</ept> position, a <ph id="ph1">&lt;xref:System.FormatException&gt;</ph> is thrown.</source>
          <target state="translated">Wenn es keinen Parameter in gibt der <bpt id="p1">*</bpt>Index<ept id="p1">*</ept> Position eine <ph id="ph1">&lt;xref:System.FormatException&gt;</ph> ausgelöst wird.</target>       </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object,System.Object)">
          <source>,<bpt id="p1">*</bpt>length<ept id="p1">*</ept></source>
          <target state="translated">,<bpt id="p1">*</bpt>length<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object,System.Object)">
          <source>The minimum number of characters in the string representation of the parameter.</source>
          <target state="translated">Die minimale Anzahl von Zeichen in eine Zeichenfolgendarstellung des Parameters.</target>       </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object,System.Object)">
          <source>If positive, the parameter is right-aligned; if negative, it is left-aligned.</source>
          <target state="translated">Wenn positiv ist, ist der Parameter rechts ausgerichteten; Wenn Sie negativ ist, ist es linksbündig ausgerichtet.</target>       </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object,System.Object)">
          <source>:<bpt id="p1">*</bpt>formatString<ept id="p1">*</ept></source>
          <target state="translated">:<bpt id="p1">*</bpt>formatString<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object,System.Object)">
          <source>A standard or custom format string that is supported by the object to be formatted.</source>
          <target state="translated">Eine standardmäßige oder benutzerdefinierte Formatierungszeichenfolge, die von der zu formatierende Objekt unterstützt wird.</target>       </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object,System.Object)">
          <source>Possible values for <bpt id="p1">*</bpt>formatString<ept id="p1">*</ept> are the same as the values supported by the object's <ph id="ph1">`ToString(string format)`</ph> method.</source>
          <target state="translated">Mögliche Werte für <bpt id="p1">*</bpt>"FormatString"<ept id="p1">*</ept> sind identisch mit den Werten, die von des Objekts unterstützt <ph id="ph1">`ToString(string format)`</ph> Methode.</target>       </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object,System.Object)">
          <source>If <bpt id="p1">*</bpt>formatString<ept id="p1">*</ept> is not specified and the object to be formatted implements the <ph id="ph1">&lt;xref:System.IFormattable&gt;</ph> interface, <ph id="ph2">`null`</ph> is passed as the value of the <ph id="ph3">`format`</ph> parameter that is used as the <ph id="ph4">&lt;xref:System.IFormattable.ToString%2A?displayProperty=nameWithType&gt;</ph> format string.</source>
          <target state="translated">Wenn <bpt id="p1">*</bpt>"FormatString"<ept id="p1">*</ept> nicht angegeben wird und die zu formatierende Objekt implementiert die <ph id="ph1">&lt;xref:System.IFormattable&gt;</ph> -Schnittstelle, <ph id="ph2">`null`</ph> wird als Wert übergeben der <ph id="ph3">`format`</ph> Parameter, der verwendet wird, als die <ph id="ph4">&lt;xref:System.IFormattable.ToString%2A?displayProperty=nameWithType&gt;</ph> Formatzeichenfolge.</target>       </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object,System.Object)">
          <source>The leading and trailing brace characters, "{" and "}", are required.</source>
          <target state="translated">Das führende und nachgestellte geschweifte Klammer "{" und "}", erforderlich sind.</target>       </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object,System.Object)">
          <source>To specify a single literal brace character in <ph id="ph1">`format`</ph>, specify two leading or trailing brace characters; that is, "{{" or "}}".</source>
          <target state="translated">Um einen einzelnen literal geschweifte Klammer in <ph id="ph1">`format`</ph>, geben Sie zwei führende oder nachgestellte geschweifte; d. h. "{{" oder "}}".</target>       </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object,System.Object)">
          <source>This method does not search the specified string for individual newline characters (hexadecimal 0x000a) and replace them with <ph id="ph1">&lt;xref:System.IO.TextWriter.NewLine%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Diese Methode nicht die angegebene Zeichenfolge für die einzelnen neue Zeilenumbruchzeichen (hexadezimal 0x000a) zu suchen und Ersetzen Sie sie durch <ph id="ph1">&lt;xref:System.IO.TextWriter.NewLine%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object,System.Object)">
          <source>If a specified object is not referenced in the format string, it is ignored.</source>
          <target state="translated">Wenn ein angegebenes Objekt nicht in der Formatzeichenfolge verwiesen wird, wird es ignoriert.</target>       </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object,System.Object)">
          <source>For a list of common I/O tasks, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</source>
          <target state="translated">Eine Liste der allgemeinen e/a-Aufgaben finden Sie <bpt id="p1">[</bpt>allgemeine e/a-Aufgaben<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</target>       </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Write(System.String,System.Object,System.Object)">
          <source><ph id="ph1">&lt;paramref name="format" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="format" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Write(System.String,System.Object,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> is closed.</source>
          <target state="translated">Der <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> ist geschlossen.</target>       </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Write(System.String,System.Object,System.Object)">
          <source>An I/O error occurs.</source>
          <target state="translated">Ein E/A-Fehler tritt auf.</target>       </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Write(System.String,System.Object,System.Object)">
          <source><ph id="ph1">&lt;paramref name="format" /&gt;</ph> is not a valid composite format string.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="format" /&gt;</ph> ist keine gültige kombinierte Formatzeichenfolge.</target>       </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Write(System.String,System.Object,System.Object)">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Write(System.String,System.Object,System.Object)">
          <source>The index of a format item is less than 0 (zero) or greater than or equal to the number of objects to be formatted (which, for this method overload, is two).</source>
          <target state="translated">Der Index eines Formatelements ist kleiner als 0 (null) oder größer/gleich der Anzahl der zu formatierenden Objekte (2 für diese Methodenüberladung).</target>       </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Write(System.String,System.Object,System.Object,System.Object)">
          <source>A composite format string.</source>
          <target state="translated">Eine kombinierte Formatzeichenfolge.</target>       </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Write(System.String,System.Object,System.Object,System.Object)">
          <source>The first object to format and write.</source>
          <target state="translated">Das erste zu formatierende und zu schreibende Objekt.</target>       </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Write(System.String,System.Object,System.Object,System.Object)">
          <source>The second object to format and write.</source>
          <target state="translated">Das zweite zu formatierende und zu schreibende Objekt.</target>       </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Write(System.String,System.Object,System.Object,System.Object)">
          <source>The third object to format and write.</source>
          <target state="translated">Das dritte zu formatierende und zu schreibende Objekt.</target>       </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Write(System.String,System.Object,System.Object,System.Object)">
          <source>Writes a formatted string to the text string or stream, using the same semantics as the <ph id="ph1">&lt;see cref="M:System.String.Format(System.String,System.Object,System.Object,System.Object)" /&gt;</ph> method.</source>
          <target state="translated">Schreibt eine formatierte Zeichenfolge in die Textzeichenfolge oder den Stream unter Verwendung der gleichen Semantik wie die <ph id="ph1">&lt;see cref="M:System.String.Format(System.String,System.Object,System.Object,System.Object)" /&gt;</ph>-Methode.</target>       </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object,System.Object,System.Object)">
          <source>This method uses composite formatting to convert the value of an object to its string representation and to embed that representation in a string.</source>
          <target state="translated">Diese Methode verwendet die kombinierte Formatierung auf den Wert eines Objekts in seine Zeichenfolgendarstellung zu konvertieren und diese Darstellung in einer Zeichenfolge einzubetten.</target>       </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object,System.Object,System.Object)">
          <source>.NET provides extensive formatting support, which is described in greater detail in the following formatting topics:</source>
          <target state="translated">.NET bietet eine umfangreiche formatierungsunterstützung, dies wird in den folgenden Themen zur Formatierung ausführlicher beschrieben:</target>       </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object,System.Object,System.Object)">
          <source>For more information about the composite formatting feature, see <bpt id="p1">[</bpt>Composite Formatting<ept id="p1">](~/docs/standard/base-types/composite-formatting.md)</ept>.</source>
          <target state="translated">Weitere Informationen zur Funktion für kombinierte Formatierung finden Sie unter <bpt id="p1">[</bpt>kombinierte Formatierung<ept id="p1">](~/docs/standard/base-types/composite-formatting.md)</ept>.</target>       </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object,System.Object,System.Object)">
          <source>For more information about numeric format specifiers, see <bpt id="p1">[</bpt>Standard Numeric Format Strings<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept> and <bpt id="p2">[</bpt>Custom Numeric Format Strings<ept id="p2">](~/docs/standard/base-types/custom-numeric-format-strings.md)</ept>.</source>
          <target state="translated">Weitere Informationen zu numerischen Formatbezeichnern finden Sie unter <bpt id="p1">[</bpt>Standard Numeric Format Strings<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept> und <bpt id="p2">[</bpt>benutzerdefinierte Zahlenformatzeichenfolgen<ept id="p2">](~/docs/standard/base-types/custom-numeric-format-strings.md)</ept>.</target>       </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object,System.Object,System.Object)">
          <source>For more information about date and time format specifiers, see <bpt id="p1">[</bpt>Standard Date and Time Format Strings<ept id="p1">](~/docs/standard/base-types/standard-date-and-time-format-strings.md)</ept> and <bpt id="p2">[</bpt>Custom Date and Time Format Strings<ept id="p2">](~/docs/standard/base-types/custom-date-and-time-format-strings.md)</ept>.</source>
          <target state="translated">Weitere Informationen über Datum und Uhrzeit, die Formatbezeichner finden Sie unter <bpt id="p1">[</bpt>Standardformatbezeichner für Datum und Uhrzeit-Formatzeichenfolgen<ept id="p1">](~/docs/standard/base-types/standard-date-and-time-format-strings.md)</ept> und <bpt id="p2">[</bpt>benutzerdefinierte Datums- und Uhrzeit-Formatzeichenfolgen<ept id="p2">](~/docs/standard/base-types/custom-date-and-time-format-strings.md)</ept>.</target>       </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object,System.Object,System.Object)">
          <source>For more information about enumeration format specifiers, see <bpt id="p1">[</bpt>Enumeration Format Strings<ept id="p1">](~/docs/standard/base-types/enumeration-format-strings.md)</ept>.</source>
          <target state="translated">Weitere Informationen zu Formatbezeichnern finden Sie unter <bpt id="p1">[</bpt>Enumerationsformatzeichenfolgen<ept id="p1">](~/docs/standard/base-types/enumeration-format-strings.md)</ept>.</target>       </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object,System.Object,System.Object)">
          <source>For more information about formatting, see <bpt id="p1">[</bpt>Formatting Types<ept id="p1">](~/docs/standard/base-types/formatting-types.md)</ept>.</source>
          <target state="translated">Weitere Informationen zur Formatierung finden Sie unter <bpt id="p1">[</bpt>Formatierung von Typen<ept id="p1">](~/docs/standard/base-types/formatting-types.md)</ept>.</target>       </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object,System.Object,System.Object)">
          <source>The <ph id="ph1">`format`</ph> parameter consists of zero or more runs of text intermixed with zero or more indexed placeholders, called format items, that correspond to an object in the parameter list of this method.</source>
          <target state="translated">Die <ph id="ph1">`format`</ph> -Parameter besteht aus 0 (null) oder mehreren Einheiten Text mit NULL oder mehr indizierten Platzhaltern enthalten, so genannten Formatelementen, die ein Objekt in der Parameterliste dieser Methode entsprechen.</target>       </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object,System.Object,System.Object)">
          <source>The formatting process replaces each format item with the string representation of the value of the corresponding object.</source>
          <target state="translated">Der Formatierungsvorgang wird jedes Formatelement durch die Zeichenfolgendarstellung des Werts des entsprechenden Objekts ersetzt.</target>       </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object,System.Object,System.Object)">
          <source>The syntax of a format item is as follows:</source>
          <target state="translated">Die Syntax eines Formatelements lautet wie folgt:</target>       </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object,System.Object,System.Object)">
          <source>{<bpt id="p1">*</bpt>index<ept id="p1">*</ept>[,<bpt id="p2">*</bpt>length<ept id="p2">*</ept>][:<bpt id="p3">*</bpt>formatString<ept id="p3">*</ept>]}</source>
          <target state="translated">{<bpt id="p1">*</bpt>Index<ept id="p1">*</ept>[,<bpt id="p2">*</bpt>Länge<ept id="p2">*</ept>] [:<bpt id="p3">*</bpt>"FormatString"<ept id="p3">*</ept>]}</target>       </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object,System.Object,System.Object)">
          <source>Elements in square brackets are optional.</source>
          <target state="translated">Elemente in eckigen Klammern sind optional.</target>       </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object,System.Object,System.Object)">
          <source>The following table describes each element.</source>
          <target state="translated">In der folgenden Tabelle wird jedes Element beschrieben.</target>       </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object,System.Object,System.Object)">
          <source>For more information about the composite formatting feature, including the syntax of a format item, see <bpt id="p1">[</bpt>Composite Formatting<ept id="p1">](~/docs/standard/base-types/composite-formatting.md)</ept>.</source>
          <target state="translated">Weitere Informationen zu der Funktion für kombinierte Formatierung, einschließlich der Syntax eines Formatelements, finden Sie unter <bpt id="p1">[</bpt>kombinierte Formatierung<ept id="p1">](~/docs/standard/base-types/composite-formatting.md)</ept>.</target>       </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object,System.Object,System.Object)">
          <source>Element</source>
          <target state="translated">Element</target>       </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object,System.Object,System.Object)">
          <source>Description</source>
          <target state="translated">Beschreibung </target>       </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object,System.Object,System.Object)">
          <source>index</source>
          <target state="translated">Index</target>       </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object,System.Object,System.Object)">
          <source>The zero-based position in the parameter list of the object to be formatted.</source>
          <target state="translated">Die nullbasierte Position in der Parameterliste des Objekts, das formatiert werden.</target>       </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object,System.Object,System.Object)">
          <source>If the object specified by <bpt id="p1">*</bpt>index<ept id="p1">*</ept> is <ph id="ph1">`null`</ph>, the format item is replaced by <ph id="ph2">&lt;xref:System.String.Empty?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Wenn das Objekt vom angegebenen <bpt id="p1">*</bpt>Index<ept id="p1">*</ept> ist <ph id="ph1">`null`</ph>, das Formatelement wird durch ersetzt <ph id="ph2">&lt;xref:System.String.Empty?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object,System.Object,System.Object)">
          <source>Because this overload has three objects in its parameter list, the value of <bpt id="p1">*</bpt>index<ept id="p1">*</ept> must always be 0, 1, or 2.</source>
          <target state="translated">Da diese Überladung drei Objekte im Parameter aufzulisten, den Wert der <bpt id="p1">*</bpt>Index<ept id="p1">*</ept> muss immer 0, 1 oder 2 sein.</target>       </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object,System.Object,System.Object)">
          <source>If there is no parameter in the <bpt id="p1">*</bpt>index<ept id="p1">*</ept> position, a <ph id="ph1">&lt;xref:System.FormatException&gt;</ph> is thrown.</source>
          <target state="translated">Wenn es keinen Parameter in gibt der <bpt id="p1">*</bpt>Index<ept id="p1">*</ept> Position eine <ph id="ph1">&lt;xref:System.FormatException&gt;</ph> ausgelöst wird.</target>       </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object,System.Object,System.Object)">
          <source>,<bpt id="p1">*</bpt>length<ept id="p1">*</ept></source>
          <target state="translated">,<bpt id="p1">*</bpt>length<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object,System.Object,System.Object)">
          <source>The minimum number of characters in the string representation of the parameter.</source>
          <target state="translated">Die minimale Anzahl von Zeichen in eine Zeichenfolgendarstellung des Parameters.</target>       </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object,System.Object,System.Object)">
          <source>If positive, the parameter is right-aligned; if negative, it is left-aligned.</source>
          <target state="translated">Wenn positiv ist, ist der Parameter rechts ausgerichteten; Wenn Sie negativ ist, ist es linksbündig ausgerichtet.</target>       </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object,System.Object,System.Object)">
          <source>:<bpt id="p1">*</bpt>formatString<ept id="p1">*</ept></source>
          <target state="translated">:<bpt id="p1">*</bpt>formatString<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object,System.Object,System.Object)">
          <source>A standard or custom format string that is supported by the object to be formatted.</source>
          <target state="translated">Eine standardmäßige oder benutzerdefinierte Formatierungszeichenfolge, die von der zu formatierende Objekt unterstützt wird.</target>       </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object,System.Object,System.Object)">
          <source>Possible values for <bpt id="p1">*</bpt>formatString<ept id="p1">*</ept> are the same as the values supported by the object's <ph id="ph1">`ToString(string format)`</ph> method.</source>
          <target state="translated">Mögliche Werte für <bpt id="p1">*</bpt>"FormatString"<ept id="p1">*</ept> sind identisch mit den Werten, die von des Objekts unterstützt <ph id="ph1">`ToString(string format)`</ph> Methode.</target>       </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object,System.Object,System.Object)">
          <source>If <bpt id="p1">*</bpt>formatString<ept id="p1">*</ept> is not specified and the object to be formatted implements the <ph id="ph1">&lt;xref:System.IFormattable&gt;</ph> interface, <ph id="ph2">`null`</ph> is passed as the value of the <ph id="ph3">`format`</ph> parameter that is used as the <ph id="ph4">&lt;xref:System.IFormattable.ToString%2A?displayProperty=nameWithType&gt;</ph> format string.</source>
          <target state="translated">Wenn <bpt id="p1">*</bpt>"FormatString"<ept id="p1">*</ept> nicht angegeben wird und die zu formatierende Objekt implementiert die <ph id="ph1">&lt;xref:System.IFormattable&gt;</ph> -Schnittstelle, <ph id="ph2">`null`</ph> wird als Wert übergeben der <ph id="ph3">`format`</ph> Parameter, der verwendet wird, als die <ph id="ph4">&lt;xref:System.IFormattable.ToString%2A?displayProperty=nameWithType&gt;</ph> Formatzeichenfolge.</target>       </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object,System.Object,System.Object)">
          <source>The leading and trailing brace characters, "{" and "}", are required.</source>
          <target state="translated">Das führende und nachgestellte geschweifte Klammer "{" und "}", erforderlich sind.</target>       </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object,System.Object,System.Object)">
          <source>To specify a single literal brace character in <ph id="ph1">`format`</ph>, specify two leading or trailing brace characters; that is, "{{" or "}}".</source>
          <target state="translated">Um einen einzelnen literal geschweifte Klammer in <ph id="ph1">`format`</ph>, geben Sie zwei führende oder nachgestellte geschweifte; d. h. "{{" oder "}}".</target>       </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object,System.Object,System.Object)">
          <source>This method does not search the specified string  for individual newline characters (hexadecimal 0x000a) and replace them with <ph id="ph1">&lt;xref:System.IO.TextWriter.NewLine%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Diese Methode nicht die angegebene Zeichenfolge für die einzelnen neue Zeilenumbruchzeichen (hexadezimal 0x000a) zu suchen und Ersetzen Sie sie durch <ph id="ph1">&lt;xref:System.IO.TextWriter.NewLine%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object,System.Object,System.Object)">
          <source>If a specified object is not referenced in the format string, it is ignored.</source>
          <target state="translated">Wenn ein angegebenes Objekt nicht in der Formatzeichenfolge verwiesen wird, wird es ignoriert.</target>       </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object,System.Object,System.Object)">
          <source>For a list of common I/O tasks, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</source>
          <target state="translated">Eine Liste der allgemeinen e/a-Aufgaben finden Sie <bpt id="p1">[</bpt>allgemeine e/a-Aufgaben<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</target>       </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Write(System.String,System.Object,System.Object,System.Object)">
          <source><ph id="ph1">&lt;paramref name="format" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="format" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Write(System.String,System.Object,System.Object,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> is closed.</source>
          <target state="translated">Der <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> ist geschlossen.</target>       </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Write(System.String,System.Object,System.Object,System.Object)">
          <source>An I/O error occurs.</source>
          <target state="translated">Ein E/A-Fehler tritt auf.</target>       </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Write(System.String,System.Object,System.Object,System.Object)">
          <source><ph id="ph1">&lt;paramref name="format" /&gt;</ph> is not a valid composite format string.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="format" /&gt;</ph> ist keine gültige kombinierte Formatzeichenfolge.</target>       </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Write(System.String,System.Object,System.Object,System.Object)">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Write(System.String,System.Object,System.Object,System.Object)">
          <source>The index of a format item is less than 0 (zero), or greater than or equal to the number of objects to be formatted (which, for this method overload, is three).</source>
          <target state="translated">Der Index eines Formatelements ist kleiner als 0 (null) oder größer/gleich der Anzahl der zu formatierenden Objekte (3 für diese Methodenüberladung).</target>       </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve" uid="T:System.IO.TextWriter">
          <source>Writes data to the text string or stream asynchronously.</source>
          <target state="translated">Schreibt Daten asynchron in die Textzeichenfolge oder den Stream.</target>       </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteAsync(System.Char)">
          <source>The character to write to the text stream.</source>
          <target state="translated">Das in den Textstream zu schreibende Zeichen.</target>       </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteAsync(System.Char)">
          <source>Writes a character to the text string or stream asynchronously.</source>
          <target state="translated">Schreibt ein Zeichen asynchron in die Textzeichenfolge oder den Stream.</target>       </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteAsync(System.Char)">
          <source>A task that represents the asynchronous write operation.</source>
          <target state="translated">Eine Aufgabe, die den asynchronen Schreibvorgang darstellt.</target>       </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteAsync(System.Char)">
          <source>The <ph id="ph1">&lt;xref:System.IO.TextWriter&gt;</ph> class is an abstract class.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.IO.TextWriter&gt;</ph>-Klasse stellt eine abstrakte Klasse dar.</target>       </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteAsync(System.Char)">
          <source>Therefore, you do not instantiate it in your code.</source>
          <target state="translated">Aus diesem Grund ist es nicht in Ihrem Code instanziiert werden.</target>       </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteAsync(System.Char)">
          <source>For an example of using the <ph id="ph1">&lt;xref:System.IO.TextWriter.WriteAsync%2A&gt;</ph> method, see the <ph id="ph2">&lt;xref:System.IO.StreamWriter.WriteAsync%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">Ein Beispiel der Verwendung der <ph id="ph1">&lt;xref:System.IO.TextWriter.WriteAsync%2A&gt;</ph> -Methode finden Sie unter der <ph id="ph2">&lt;xref:System.IO.StreamWriter.WriteAsync%2A?displayProperty=nameWithType&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteAsync(System.Char)">
          <source>The text writer is disposed.</source>
          <target state="translated">Der Textwriter wird freigegeben.</target>       </trans-unit>
        <trans-unit id="485" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteAsync(System.Char)">
          <source>The text writer is currently in use by a previous write operation.</source>
          <target state="translated">Der Textwriter wird derzeit von einem vorherigen Schreibvorgang verwendet.</target>       </trans-unit>
        <trans-unit id="486" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteAsync(System.Char[])">
          <source>The character array to write to the text stream.</source>
          <target state="translated">Das in den Textstream zu schreibende Zeichenarray.</target>       </trans-unit>
        <trans-unit id="487" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteAsync(System.Char[])">
          <source>If <bpt id="p1">&lt;c&gt;</bpt>buffer<ept id="p1">&lt;/c&gt;</ept> is <ph id="ph1">&lt;see langword="null" /&gt;</ph>, nothing is written.</source>
          <target state="translated">Wenn <bpt id="p1">&lt;c&gt;</bpt>buffer<ept id="p1">&lt;/c&gt;</ept> den Wert <ph id="ph1">&lt;see langword="null" /&gt;</ph> hat, wird nichts geschrieben.</target>       </trans-unit>
        <trans-unit id="488" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteAsync(System.Char[])">
          <source>Writes a character array to the text string or stream asynchronously.</source>
          <target state="translated">Schreibt ein Zeichenarray asynchron in die Textzeichenfolge oder den Stream.</target>       </trans-unit>
        <trans-unit id="489" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteAsync(System.Char[])">
          <source>A task that represents the asynchronous write operation.</source>
          <target state="translated">Eine Aufgabe, die den asynchronen Schreibvorgang darstellt.</target>       </trans-unit>
        <trans-unit id="490" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteAsync(System.Char[])">
          <source>The text writer is disposed.</source>
          <target state="translated">Der Textwriter wird freigegeben.</target>       </trans-unit>
        <trans-unit id="491" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteAsync(System.Char[])">
          <source>The text writer is currently in use by a previous write operation.</source>
          <target state="translated">Der Textwriter wird derzeit von einem vorherigen Schreibvorgang verwendet.</target>       </trans-unit>
        <trans-unit id="492" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteAsync(System.String)">
          <source>The string to write.</source>
          <target state="translated">Die zu schreibende Zeichenfolge.</target>       </trans-unit>
        <trans-unit id="493" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteAsync(System.String)">
          <source>If <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept> is <ph id="ph1">&lt;see langword="null" /&gt;</ph>, nothing is written to the text stream.</source>
          <target state="translated">Wenn <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept> <ph id="ph1">&lt;see langword="null" /&gt;</ph> ist, wird nichts in den Stream geschrieben.</target>       </trans-unit>
        <trans-unit id="494" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteAsync(System.String)">
          <source>Writes a string to the text string or stream asynchronously.</source>
          <target state="translated">Schreibt eine Zeichenfolge asynchron in die Textzeichenfolge oder den Stream.</target>       </trans-unit>
        <trans-unit id="495" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteAsync(System.String)">
          <source>A task that represents the asynchronous write operation.</source>
          <target state="translated">Eine Aufgabe, die den asynchronen Schreibvorgang darstellt.</target>       </trans-unit>
        <trans-unit id="496" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteAsync(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.IO.TextWriter&gt;</ph> class is an abstract class.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.IO.TextWriter&gt;</ph>-Klasse stellt eine abstrakte Klasse dar.</target>       </trans-unit>
        <trans-unit id="497" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteAsync(System.String)">
          <source>Therefore, you do not instantiate it in your code.</source>
          <target state="translated">Aus diesem Grund ist es nicht in Ihrem Code instanziiert werden.</target>       </trans-unit>
        <trans-unit id="498" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteAsync(System.String)">
          <source>For an example of using the <ph id="ph1">&lt;xref:System.IO.TextWriter.WriteAsync%2A&gt;</ph> method, see the <ph id="ph2">&lt;xref:System.IO.StreamWriter.WriteAsync%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">Ein Beispiel der Verwendung der <ph id="ph1">&lt;xref:System.IO.TextWriter.WriteAsync%2A&gt;</ph> -Methode finden Sie unter der <ph id="ph2">&lt;xref:System.IO.StreamWriter.WriteAsync%2A?displayProperty=nameWithType&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="499" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteAsync(System.String)">
          <source>The text writer is disposed.</source>
          <target state="translated">Der Textwriter wird freigegeben.</target>       </trans-unit>
        <trans-unit id="500" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteAsync(System.String)">
          <source>The text writer is currently in use by a previous write operation.</source>
          <target state="translated">Der Textwriter wird derzeit von einem vorherigen Schreibvorgang verwendet.</target>       </trans-unit>
        <trans-unit id="501" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteAsync(System.Char[],System.Int32,System.Int32)">
          <source>The character array to write data from.</source>
          <target state="translated">Das Zeichenarray, aus dem Daten geschrieben werden sollen.</target>       </trans-unit>
        <trans-unit id="502" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteAsync(System.Char[],System.Int32,System.Int32)">
          <source>The character position in the buffer at which to start retrieving data.</source>
          <target state="translated">Die Zeichenposition im Puffer, an der mit dem Abrufen von Daten begonnen werden soll.</target>       </trans-unit>
        <trans-unit id="503" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteAsync(System.Char[],System.Int32,System.Int32)">
          <source>The number of characters to write.</source>
          <target state="translated">Die Anzahl der zu schreibenden Zeichen.</target>       </trans-unit>
        <trans-unit id="504" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteAsync(System.Char[],System.Int32,System.Int32)">
          <source>Writes a subarray of characters to the text string or stream asynchronously.</source>
          <target state="translated">Schreibt ein Teilarray von Zeichen asynchron in die Textzeichenfolge oder den Stream.</target>       </trans-unit>
        <trans-unit id="505" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteAsync(System.Char[],System.Int32,System.Int32)">
          <source>A task that represents the asynchronous write operation.</source>
          <target state="translated">Eine Aufgabe, die den asynchronen Schreibvorgang darstellt.</target>       </trans-unit>
        <trans-unit id="506" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteAsync(System.Char[],System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.IO.TextWriter&gt;</ph> class is an abstract class.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.IO.TextWriter&gt;</ph>-Klasse stellt eine abstrakte Klasse dar.</target>       </trans-unit>
        <trans-unit id="507" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteAsync(System.Char[],System.Int32,System.Int32)">
          <source>Therefore, you do not instantiate it in your code.</source>
          <target state="translated">Aus diesem Grund ist es nicht in Ihrem Code instanziiert werden.</target>       </trans-unit>
        <trans-unit id="508" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteAsync(System.Char[],System.Int32,System.Int32)">
          <source>For an example of using the <ph id="ph1">&lt;xref:System.IO.TextWriter.WriteAsync%2A&gt;</ph> method, see the <ph id="ph2">&lt;xref:System.IO.StreamWriter.WriteAsync%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">Ein Beispiel der Verwendung der <ph id="ph1">&lt;xref:System.IO.TextWriter.WriteAsync%2A&gt;</ph> -Methode finden Sie unter der <ph id="ph2">&lt;xref:System.IO.StreamWriter.WriteAsync%2A?displayProperty=nameWithType&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="509" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteAsync(System.Char[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="510" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteAsync(System.Char[],System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;paramref name="index" /&gt;</ph> plus <ph id="ph2">&lt;paramref name="count" /&gt;</ph> is greater than the buffer length.</source>
          <target state="translated">Der <ph id="ph1">&lt;paramref name="index" /&gt;</ph> und <ph id="ph2">&lt;paramref name="count" /&gt;</ph> ist größer als die Pufferlänge.</target>       </trans-unit>
        <trans-unit id="511" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteAsync(System.Char[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> or <ph id="ph2">&lt;paramref name="count" /&gt;</ph> is negative.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> oder <ph id="ph2">&lt;paramref name="count" /&gt;</ph> ist ein negativer Wert.</target>       </trans-unit>
        <trans-unit id="512" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteAsync(System.Char[],System.Int32,System.Int32)">
          <source>The text writer is disposed.</source>
          <target state="translated">Der Textwriter wird freigegeben.</target>       </trans-unit>
        <trans-unit id="513" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteAsync(System.Char[],System.Int32,System.Int32)">
          <source>The text writer is currently in use by a previous write operation.</source>
          <target state="translated">Der Textwriter wird derzeit von einem vorherigen Schreibvorgang verwendet.</target>       </trans-unit>
        <trans-unit id="514" translate="yes" xml:space="preserve" uid="T:System.IO.TextWriter">
          <source>Writes data followed by a line terminator to the text string or stream.</source>
          <target state="translated">Schreibt Daten, gefolgt von einem Zeichen für den Zeilenabschluss, in die Textzeichenfolge oder den Stream.</target>       </trans-unit>
        <trans-unit id="515" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLine">
          <source>Writes a line terminator to the text string or stream.</source>
          <target state="translated">Schreibt ein Zeichen für den Zeilenabschluss in die Textzeichenfolge oder den Stream.</target>       </trans-unit>
        <trans-unit id="516" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine">
          <source>The line terminator is defined by the <ph id="ph1">&lt;xref:System.IO.TextWriter.CoreNewLine&gt;</ph> field.</source>
          <target state="translated">Die für den Zeilenabschluss wird definiert, indem die <ph id="ph1">&lt;xref:System.IO.TextWriter.CoreNewLine&gt;</ph> Feld.</target>       </trans-unit>
        <trans-unit id="517" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine">
          <source>For a list of common I/O tasks, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</source>
          <target state="translated">Eine Liste der allgemeinen e/a-Aufgaben finden Sie <bpt id="p1">[</bpt>allgemeine e/a-Aufgaben<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</target>       </trans-unit>
        <trans-unit id="518" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLine">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> is closed.</source>
          <target state="translated">Der <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> ist geschlossen.</target>       </trans-unit>
        <trans-unit id="519" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLine">
          <source>An I/O error occurs.</source>
          <target state="translated">Ein E/A-Fehler tritt auf.</target>       </trans-unit>
        <trans-unit id="520" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLine(System.Boolean)">
          <source>The <ph id="ph1">&lt;see langword="Boolean" /&gt;</ph> value to write.</source>
          <target state="translated">Der zu schreibende <ph id="ph1">&lt;see langword="Boolean" /&gt;</ph>-Wert.</target>       </trans-unit>
        <trans-unit id="521" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLine(System.Boolean)">
          <source>Writes the text representation of a <ph id="ph1">&lt;see langword="Boolean" /&gt;</ph> value followed by a line terminator to the text string or stream.</source>
          <target state="translated">Schreibt die Textdarstellung eines <ph id="ph1">&lt;see langword="Boolean" /&gt;</ph>-Werts, gefolgt von einem Zeichen für den Zeilenabschluss, in die Textzeichenfolge oder den Stream.</target>       </trans-unit>
        <trans-unit id="522" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.Boolean)">
          <source>The text representation of the specified value is produced by calling the <ph id="ph1">&lt;xref:System.Boolean.ToString%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">Die Textdarstellung des angegebenen Werts wird erstellt, durch Aufrufen der <ph id="ph1">&lt;xref:System.Boolean.ToString%2A?displayProperty=nameWithType&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="523" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.Boolean)">
          <source>This method outputs either <ph id="ph1">&lt;xref:System.Boolean.TrueString?displayProperty=nameWithType&gt;</ph> or <ph id="ph2">&lt;xref:System.Boolean.FalseString?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Diese Methode gibt entweder <ph id="ph1">&lt;xref:System.Boolean.TrueString?displayProperty=nameWithType&gt;</ph> oder <ph id="ph2">&lt;xref:System.Boolean.FalseString?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="524" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.Boolean)">
          <source>The line terminator is defined by the <ph id="ph1">&lt;xref:System.IO.TextWriter.CoreNewLine&gt;</ph> field.</source>
          <target state="translated">Die für den Zeilenabschluss wird definiert, indem die <ph id="ph1">&lt;xref:System.IO.TextWriter.CoreNewLine&gt;</ph> Feld.</target>       </trans-unit>
        <trans-unit id="525" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.Boolean)">
          <source>For a list of common I/O tasks, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</source>
          <target state="translated">Eine Liste der allgemeinen e/a-Aufgaben finden Sie <bpt id="p1">[</bpt>allgemeine e/a-Aufgaben<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</target>       </trans-unit>
        <trans-unit id="526" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLine(System.Boolean)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> is closed.</source>
          <target state="translated">Der <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> ist geschlossen.</target>       </trans-unit>
        <trans-unit id="527" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLine(System.Boolean)">
          <source>An I/O error occurs.</source>
          <target state="translated">Ein E/A-Fehler tritt auf.</target>       </trans-unit>
        <trans-unit id="528" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLine(System.Char)">
          <source>The character to write to the text stream.</source>
          <target state="translated">Das in den Textstream zu schreibende Zeichen.</target>       </trans-unit>
        <trans-unit id="529" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLine(System.Char)">
          <source>Writes a character followed by a line terminator to the text string or stream.</source>
          <target state="translated">Schreibt ein Zeichen, gefolgt von einem Zeichen für den Zeilenabschluss, in die Textzeichenfolge oder den Stream.</target>       </trans-unit>
        <trans-unit id="530" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.Char)">
          <source>This overload is equivalent to <ph id="ph1">&lt;xref:System.IO.TextWriter.Write%28System.Char%29&gt;</ph> followed by <ph id="ph2">&lt;xref:System.IO.TextWriter.WriteLine&gt;</ph> .</source>
          <target state="translated">Diese Überladung entspricht <ph id="ph1">&lt;xref:System.IO.TextWriter.Write%28System.Char%29&gt;</ph> gefolgt von <ph id="ph2">&lt;xref:System.IO.TextWriter.WriteLine&gt;</ph> .</target>       </trans-unit>
        <trans-unit id="531" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.Char)">
          <source>The line terminator is defined by the <ph id="ph1">&lt;xref:System.IO.TextWriter.CoreNewLine&gt;</ph> field.</source>
          <target state="translated">Die für den Zeilenabschluss wird definiert, indem die <ph id="ph1">&lt;xref:System.IO.TextWriter.CoreNewLine&gt;</ph> Feld.</target>       </trans-unit>
        <trans-unit id="532" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.Char)">
          <source>For a list of common I/O tasks, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</source>
          <target state="translated">Eine Liste der allgemeinen e/a-Aufgaben finden Sie <bpt id="p1">[</bpt>allgemeine e/a-Aufgaben<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</target>       </trans-unit>
        <trans-unit id="533" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLine(System.Char)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> is closed.</source>
          <target state="translated">Der <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> ist geschlossen.</target>       </trans-unit>
        <trans-unit id="534" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLine(System.Char)">
          <source>An I/O error occurs.</source>
          <target state="translated">Ein E/A-Fehler tritt auf.</target>       </trans-unit>
        <trans-unit id="535" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLine(System.Char[])">
          <source>The character array from which data is read.</source>
          <target state="translated">Das Zeichenarray, aus dem die Daten gelesen werden.</target>       </trans-unit>
        <trans-unit id="536" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLine(System.Char[])">
          <source>Writes an array of characters followed by a line terminator to the text string or stream.</source>
          <target state="translated">Schreibt ein Array von Zeichen, gefolgt von einem Zeichen für den Zeilenabschluss, in die Textzeichenfolge oder den Stream.</target>       </trans-unit>
        <trans-unit id="537" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.Char[])">
          <source>All the characters in <ph id="ph1">`buffer`</ph> are written to the underlying stream.</source>
          <target state="translated">Alle Zeichen im <ph id="ph1">`buffer`</ph> in den zugrunde liegenden Stream geschrieben werden.</target>       </trans-unit>
        <trans-unit id="538" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.Char[])">
          <source>If the character array is <ph id="ph1">`null`</ph>, only the line terminator is written.</source>
          <target state="translated">Wenn das Zeichenarray <ph id="ph1">`null`</ph> ist, wird nur das Zeichen für den Zeilenabschluss geschrieben.</target>       </trans-unit>
        <trans-unit id="539" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.Char[])">
          <source>This overload is equivalent to <ph id="ph1">&lt;xref:System.IO.TextWriter.Write%28System.Char%5B%5D%29&gt;</ph> followed by <ph id="ph2">&lt;xref:System.IO.TextWriter.WriteLine&gt;</ph> .</source>
          <target state="translated">Diese Überladung entspricht <ph id="ph1">&lt;xref:System.IO.TextWriter.Write%28System.Char%5B%5D%29&gt;</ph> gefolgt von <ph id="ph2">&lt;xref:System.IO.TextWriter.WriteLine&gt;</ph> .</target>       </trans-unit>
        <trans-unit id="540" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.Char[])">
          <source>The line terminator is defined by the <ph id="ph1">&lt;xref:System.IO.TextWriter.CoreNewLine&gt;</ph> field.</source>
          <target state="translated">Die für den Zeilenabschluss wird definiert, indem die <ph id="ph1">&lt;xref:System.IO.TextWriter.CoreNewLine&gt;</ph> Feld.</target>       </trans-unit>
        <trans-unit id="541" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.Char[])">
          <source>For a list of common I/O tasks, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</source>
          <target state="translated">Eine Liste der allgemeinen e/a-Aufgaben finden Sie <bpt id="p1">[</bpt>allgemeine e/a-Aufgaben<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</target>       </trans-unit>
        <trans-unit id="542" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLine(System.Char[])">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> is closed.</source>
          <target state="translated">Der <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> ist geschlossen.</target>       </trans-unit>
        <trans-unit id="543" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLine(System.Char[])">
          <source>An I/O error occurs.</source>
          <target state="translated">Ein E/A-Fehler tritt auf.</target>       </trans-unit>
        <trans-unit id="544" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLine(System.Decimal)">
          <source>The decimal value to write.</source>
          <target state="translated">Der zu schreibende Dezimalwert.</target>       </trans-unit>
        <trans-unit id="545" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLine(System.Decimal)">
          <source>Writes the text representation of a decimal value followed by a line terminator to the text string or stream.</source>
          <target state="translated">Schreibt die Textdarstellung eines Dezimalwerts, gefolgt von einem Zeichen für den Zeilenabschluss, in die Textzeichenfolge oder den Stream.</target>       </trans-unit>
        <trans-unit id="546" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.Decimal)">
          <source>The <ph id="ph1">&lt;xref:System.IO.TextWriter.FormatProvider%2A&gt;</ph> property, if not <ph id="ph2">`null`</ph>, specifies the culture-specific formatting.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.IO.TextWriter.FormatProvider%2A&gt;</ph> Eigenschaft, wenn keine <ph id="ph2">`null`</ph>, gibt an, die kulturspezifische Formatierung.</target>       </trans-unit>
        <trans-unit id="547" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.Decimal)">
          <source>For a list of common I/O tasks, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</source>
          <target state="translated">Eine Liste der allgemeinen e/a-Aufgaben finden Sie <bpt id="p1">[</bpt>allgemeine e/a-Aufgaben<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</target>       </trans-unit>
        <trans-unit id="548" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.Decimal)">
          <source>The line terminator is defined by the <ph id="ph1">&lt;xref:System.IO.TextWriter.CoreNewLine&gt;</ph> field.</source>
          <target state="translated">Die für den Zeilenabschluss wird definiert, indem die <ph id="ph1">&lt;xref:System.IO.TextWriter.CoreNewLine&gt;</ph> Feld.</target>       </trans-unit>
        <trans-unit id="549" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLine(System.Decimal)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> is closed.</source>
          <target state="translated">Der <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> ist geschlossen.</target>       </trans-unit>
        <trans-unit id="550" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLine(System.Decimal)">
          <source>An I/O error occurs.</source>
          <target state="translated">Ein E/A-Fehler tritt auf.</target>       </trans-unit>
        <trans-unit id="551" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLine(System.Double)">
          <source>The 8-byte floating-point value to write.</source>
          <target state="translated">Der zu schreibende 8-Byte-Gleitkommawert.</target>       </trans-unit>
        <trans-unit id="552" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLine(System.Double)">
          <source>Writes the text representation of a 8-byte floating-point value followed by a line terminator to the text string or stream.</source>
          <target state="translated">Schreibt die Textdarstellung eines 8-Byte-Gleitkommawerts, gefolgt von einem Zeichen für den Zeilenabschluss, in die Zeichenfolge oder den Stream.</target>       </trans-unit>
        <trans-unit id="553" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.Double)">
          <source>The <ph id="ph1">&lt;xref:System.IO.TextWriter.FormatProvider%2A&gt;</ph> property, if not <ph id="ph2">`null`</ph>, specifies the culture-specific formatting.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.IO.TextWriter.FormatProvider%2A&gt;</ph> Eigenschaft, wenn keine <ph id="ph2">`null`</ph>, gibt an, die kulturspezifische Formatierung.</target>       </trans-unit>
        <trans-unit id="554" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.Double)">
          <source>For a list of common I/O tasks, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</source>
          <target state="translated">Eine Liste der allgemeinen e/a-Aufgaben finden Sie <bpt id="p1">[</bpt>allgemeine e/a-Aufgaben<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</target>       </trans-unit>
        <trans-unit id="555" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.Double)">
          <source>The line terminator is defined by the <ph id="ph1">&lt;xref:System.IO.TextWriter.CoreNewLine&gt;</ph> field.</source>
          <target state="translated">Die für den Zeilenabschluss wird definiert, indem die <ph id="ph1">&lt;xref:System.IO.TextWriter.CoreNewLine&gt;</ph> Feld.</target>       </trans-unit>
        <trans-unit id="556" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLine(System.Double)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> is closed.</source>
          <target state="translated">Der <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> ist geschlossen.</target>       </trans-unit>
        <trans-unit id="557" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLine(System.Double)">
          <source>An I/O error occurs.</source>
          <target state="translated">Ein E/A-Fehler tritt auf.</target>       </trans-unit>
        <trans-unit id="558" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLine(System.Int32)">
          <source>The 4-byte signed integer to write.</source>
          <target state="translated">Die zu schreibende 4-Byte-Ganzzahl mit Vorzeichen.</target>       </trans-unit>
        <trans-unit id="559" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLine(System.Int32)">
          <source>Writes the text representation of a 4-byte signed integer followed by a line terminator to the text string or stream.</source>
          <target state="translated">Schreibt die Textdarstellung einer 4-Byte-Ganzzahl mit Vorzeichen, gefolgt von einem Zeichen für den Zeilenabschluss, in die Textzeichenfolge oder den Stream.</target>       </trans-unit>
        <trans-unit id="560" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.Int32)">
          <source>The text representation of the specified value is produced by calling the <ph id="ph1">&lt;xref:System.Int32.ToString%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">Die Textdarstellung des angegebenen Werts wird erstellt, durch Aufrufen der <ph id="ph1">&lt;xref:System.Int32.ToString%2A?displayProperty=nameWithType&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="561" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.IO.TextWriter.FormatProvider%2A?displayProperty=nameWithType&gt;</ph> property, if not <ph id="ph2">`null`</ph>, specifies the culture-specific formatting.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.IO.TextWriter.FormatProvider%2A?displayProperty=nameWithType&gt;</ph> Eigenschaft, wenn keine <ph id="ph2">`null`</ph>, gibt an, die kulturspezifische Formatierung.</target>       </trans-unit>
        <trans-unit id="562" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.Int32)">
          <source>The line terminator is defined by the <ph id="ph1">&lt;xref:System.IO.TextWriter.CoreNewLine&gt;</ph> field.</source>
          <target state="translated">Die für den Zeilenabschluss wird definiert, indem die <ph id="ph1">&lt;xref:System.IO.TextWriter.CoreNewLine&gt;</ph> Feld.</target>       </trans-unit>
        <trans-unit id="563" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.Int32)">
          <source>For a list of common I/O tasks, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</source>
          <target state="translated">Eine Liste der allgemeinen e/a-Aufgaben finden Sie <bpt id="p1">[</bpt>allgemeine e/a-Aufgaben<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</target>       </trans-unit>
        <trans-unit id="564" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLine(System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> is closed.</source>
          <target state="translated">Der <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> ist geschlossen.</target>       </trans-unit>
        <trans-unit id="565" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLine(System.Int32)">
          <source>An I/O error occurs.</source>
          <target state="translated">Ein E/A-Fehler tritt auf.</target>       </trans-unit>
        <trans-unit id="566" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLine(System.Int64)">
          <source>The 8-byte signed integer to write.</source>
          <target state="translated">Die zu schreibende 8-Byte-Ganzzahl mit Vorzeichen.</target>       </trans-unit>
        <trans-unit id="567" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLine(System.Int64)">
          <source>Writes the text representation of an 8-byte signed integer followed by a line terminator to the text string or stream.</source>
          <target state="translated">Schreibt die Textdarstellung einer 8-Byte-Ganzzahl mit Vorzeichen, gefolgt von einem Zeichen für den Zeilenabschluss, in die Textzeichenfolge oder den Stream.</target>       </trans-unit>
        <trans-unit id="568" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.Int64)">
          <source>The text representation of the specified value is produced by calling the <ph id="ph1">&lt;xref:System.Int64.ToString%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">Die Textdarstellung des angegebenen Werts wird erstellt, durch Aufrufen der <ph id="ph1">&lt;xref:System.Int64.ToString%2A?displayProperty=nameWithType&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="569" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.Int64)">
          <source>The <ph id="ph1">&lt;xref:System.IO.TextWriter.FormatProvider%2A?displayProperty=nameWithType&gt;</ph> property, if not <ph id="ph2">`null`</ph>, specifies the culture-specific formatting.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.IO.TextWriter.FormatProvider%2A?displayProperty=nameWithType&gt;</ph> Eigenschaft, wenn keine <ph id="ph2">`null`</ph>, gibt an, die kulturspezifische Formatierung.</target>       </trans-unit>
        <trans-unit id="570" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.Int64)">
          <source>The line terminator is defined by the <ph id="ph1">&lt;xref:System.IO.TextWriter.CoreNewLine&gt;</ph> field.</source>
          <target state="translated">Die für den Zeilenabschluss wird definiert, indem die <ph id="ph1">&lt;xref:System.IO.TextWriter.CoreNewLine&gt;</ph> Feld.</target>       </trans-unit>
        <trans-unit id="571" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.Int64)">
          <source>For a list of common I/O tasks, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</source>
          <target state="translated">Eine Liste der allgemeinen e/a-Aufgaben finden Sie <bpt id="p1">[</bpt>allgemeine e/a-Aufgaben<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</target>       </trans-unit>
        <trans-unit id="572" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLine(System.Int64)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> is closed.</source>
          <target state="translated">Der <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> ist geschlossen.</target>       </trans-unit>
        <trans-unit id="573" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLine(System.Int64)">
          <source>An I/O error occurs.</source>
          <target state="translated">Ein E/A-Fehler tritt auf.</target>       </trans-unit>
        <trans-unit id="574" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLine(System.Object)">
          <source>The object to write.</source>
          <target state="translated">Das zu schreibende Objekt.</target>       </trans-unit>
        <trans-unit id="575" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLine(System.Object)">
          <source>If <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept> is <ph id="ph1">&lt;see langword="null" /&gt;</ph>, only the line terminator is written.</source>
          <target state="translated">Wenn <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept> <ph id="ph1">&lt;see langword="null" /&gt;</ph> ist, wird nur das Zeilenabschlusszeichen geschrieben.</target>       </trans-unit>
        <trans-unit id="576" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLine(System.Object)">
          <source>Writes the text representation of an object by calling the <ph id="ph1">&lt;see langword="ToString" /&gt;</ph> method on that object, followed by a line terminator to the text string or stream.</source>
          <target state="translated">Schreibt durch Aufrufen der <ph id="ph1">&lt;see langword="ToString" /&gt;</ph>-Methode für ein Objekt die Textdarstellung dieses Objekts, gefolgt von einem Zeichen für den Zeilenabschluss, in die Textzeichenfolge oder den Stream.</target>       </trans-unit>
        <trans-unit id="577" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.Object)">
          <source>This overload is equivalent to the <ph id="ph1">&lt;xref:System.IO.TextWriter.Write%28System.String%2CSystem.Object%29&gt;</ph> overload.</source>
          <target state="translated">Diese Überladung entspricht dem <ph id="ph1">&lt;xref:System.IO.TextWriter.Write%28System.String%2CSystem.Object%29&gt;</ph> überladen.</target>       </trans-unit>
        <trans-unit id="578" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.IO.TextWriter.FormatProvider%2A&gt;</ph> property, if not <ph id="ph2">`null`</ph>, specifies the culture-specific formatting.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.IO.TextWriter.FormatProvider%2A&gt;</ph> Eigenschaft, wenn keine <ph id="ph2">`null`</ph>, gibt an, die kulturspezifische Formatierung.</target>       </trans-unit>
        <trans-unit id="579" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.Object)">
          <source>The line terminator is defined by the <ph id="ph1">&lt;xref:System.IO.TextWriter.CoreNewLine&gt;</ph> field.</source>
          <target state="translated">Die für den Zeilenabschluss wird definiert, indem die <ph id="ph1">&lt;xref:System.IO.TextWriter.CoreNewLine&gt;</ph> Feld.</target>       </trans-unit>
        <trans-unit id="580" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.Object)">
          <source>For a list of common I/O tasks, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</source>
          <target state="translated">Eine Liste der allgemeinen e/a-Aufgaben finden Sie <bpt id="p1">[</bpt>allgemeine e/a-Aufgaben<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</target>       </trans-unit>
        <trans-unit id="581" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLine(System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> is closed.</source>
          <target state="translated">Der <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> ist geschlossen.</target>       </trans-unit>
        <trans-unit id="582" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLine(System.Object)">
          <source>An I/O error occurs.</source>
          <target state="translated">Ein E/A-Fehler tritt auf.</target>       </trans-unit>
        <trans-unit id="583" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLine(System.Single)">
          <source>The 4-byte floating-point value to write.</source>
          <target state="translated">Der zu schreibende 4-Byte-Gleitkommawert.</target>       </trans-unit>
        <trans-unit id="584" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLine(System.Single)">
          <source>Writes the text representation of a 4-byte floating-point value followed by a line terminator to the text string or stream.</source>
          <target state="translated">Schreibt die Textdarstellung eines 4-Byte-Gleitkommawerts, gefolgt von einem Zeichen für den Zeilenabschluss, in die Zeichenfolge oder den Stream.</target>       </trans-unit>
        <trans-unit id="585" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.Single)">
          <source>The <ph id="ph1">&lt;xref:System.IO.TextWriter.FormatProvider%2A&gt;</ph> property, if not <ph id="ph2">`null`</ph>, specifies the culture-specific formatting.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.IO.TextWriter.FormatProvider%2A&gt;</ph> Eigenschaft, wenn keine <ph id="ph2">`null`</ph>, gibt an, die kulturspezifische Formatierung.</target>       </trans-unit>
        <trans-unit id="586" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.Single)">
          <source>For a list of common I/O tasks, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</source>
          <target state="translated">Eine Liste der allgemeinen e/a-Aufgaben finden Sie <bpt id="p1">[</bpt>allgemeine e/a-Aufgaben<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</target>       </trans-unit>
        <trans-unit id="587" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.Single)">
          <source>The line terminator is defined by the <ph id="ph1">&lt;xref:System.IO.TextWriter.CoreNewLine&gt;</ph> field.</source>
          <target state="translated">Die für den Zeilenabschluss wird definiert, indem die <ph id="ph1">&lt;xref:System.IO.TextWriter.CoreNewLine&gt;</ph> Feld.</target>       </trans-unit>
        <trans-unit id="588" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLine(System.Single)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> is closed.</source>
          <target state="translated">Der <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> ist geschlossen.</target>       </trans-unit>
        <trans-unit id="589" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLine(System.Single)">
          <source>An I/O error occurs.</source>
          <target state="translated">Ein E/A-Fehler tritt auf.</target>       </trans-unit>
        <trans-unit id="590" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLine(System.String)">
          <source>The string to write.</source>
          <target state="translated">Die zu schreibende Zeichenfolge.</target>       </trans-unit>
        <trans-unit id="591" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLine(System.String)">
          <source>If <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept> is <ph id="ph1">&lt;see langword="null" /&gt;</ph>, only the line terminator is written.</source>
          <target state="translated">Wenn <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept> <ph id="ph1">&lt;see langword="null" /&gt;</ph> ist, wird nur das Zeilenabschlusszeichen geschrieben.</target>       </trans-unit>
        <trans-unit id="592" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLine(System.String)">
          <source>Writes a string followed by a line terminator to the text string or stream.</source>
          <target state="translated">Schreibt eine Zeichenfolge, gefolgt von einem Zeichen für den Zeilenabschluss, in die Textzeichenfolge oder den Stream.</target>       </trans-unit>
        <trans-unit id="593" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String)">
          <source>This overload is equivalent to the <ph id="ph1">&lt;xref:System.IO.TextWriter.Write%28System.Char%5B%5D%29&gt;</ph> overload.</source>
          <target state="translated">Diese Überladung entspricht dem <ph id="ph1">&lt;xref:System.IO.TextWriter.Write%28System.Char%5B%5D%29&gt;</ph> überladen.</target>       </trans-unit>
        <trans-unit id="594" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String)">
          <source>The line terminator is defined by the <ph id="ph1">&lt;xref:System.IO.TextWriter.CoreNewLine&gt;</ph> field.</source>
          <target state="translated">Die für den Zeilenabschluss wird definiert, indem die <ph id="ph1">&lt;xref:System.IO.TextWriter.CoreNewLine&gt;</ph> Feld.</target>       </trans-unit>
        <trans-unit id="595" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String)">
          <source>This method does not search the specified string for individual newline characters (hexadecimal 0x000a) and replace them with <ph id="ph1">&lt;xref:System.IO.TextWriter.NewLine%2A&gt;</ph>.</source>
          <target state="translated">Diese Methode nicht die angegebene Zeichenfolge für die einzelnen neue Zeilenumbruchzeichen (hexadezimal 0x000a) zu suchen und Ersetzen Sie sie durch <ph id="ph1">&lt;xref:System.IO.TextWriter.NewLine%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="596" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String)">
          <source>For a list of common I/O tasks, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</source>
          <target state="translated">Eine Liste der allgemeinen e/a-Aufgaben finden Sie <bpt id="p1">[</bpt>allgemeine e/a-Aufgaben<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</target>       </trans-unit>
        <trans-unit id="597" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLine(System.String)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> is closed.</source>
          <target state="translated">Der <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> ist geschlossen.</target>       </trans-unit>
        <trans-unit id="598" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLine(System.String)">
          <source>An I/O error occurs.</source>
          <target state="translated">Ein E/A-Fehler tritt auf.</target>       </trans-unit>
        <trans-unit id="599" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLine(System.UInt32)">
          <source>The 4-byte unsigned integer to write.</source>
          <target state="translated">Die zu schreibende 4-Byte-Ganzzahl ohne Vorzeichen.</target>       </trans-unit>
        <trans-unit id="600" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLine(System.UInt32)">
          <source>Writes the text representation of a 4-byte unsigned integer followed by a line terminator to the text string or stream.</source>
          <target state="translated">Schreibt die Textdarstellung einer 4-Byte-Ganzzahl ohne Vorzeichen, gefolgt von einem Zeichen für den Zeilenabschluss, in die Textzeichenfolge oder den Stream.</target>       </trans-unit>
        <trans-unit id="601" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.UInt32)">
          <source>The text representation of the specified value is produced by calling the <ph id="ph1">&lt;xref:System.UInt32.ToString%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">Die Textdarstellung des angegebenen Werts wird erstellt, durch Aufrufen der <ph id="ph1">&lt;xref:System.UInt32.ToString%2A?displayProperty=nameWithType&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="602" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.UInt32)">
          <source>The <ph id="ph1">&lt;xref:System.IO.TextWriter.FormatProvider%2A&gt;</ph> property, if not <ph id="ph2">`null`</ph>, specifies the culture-specific formatting.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.IO.TextWriter.FormatProvider%2A&gt;</ph> Eigenschaft, wenn keine <ph id="ph2">`null`</ph>, gibt an, die kulturspezifische Formatierung.</target>       </trans-unit>
        <trans-unit id="603" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.UInt32)">
          <source>The line terminator is defined by the <ph id="ph1">&lt;xref:System.IO.TextWriter.CoreNewLine&gt;</ph> field.</source>
          <target state="translated">Die für den Zeilenabschluss wird definiert, indem die <ph id="ph1">&lt;xref:System.IO.TextWriter.CoreNewLine&gt;</ph> Feld.</target>       </trans-unit>
        <trans-unit id="604" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.UInt32)">
          <source>For a list of common I/O tasks, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</source>
          <target state="translated">Eine Liste der allgemeinen e/a-Aufgaben finden Sie <bpt id="p1">[</bpt>allgemeine e/a-Aufgaben<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</target>       </trans-unit>
        <trans-unit id="605" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLine(System.UInt32)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> is closed.</source>
          <target state="translated">Der <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> ist geschlossen.</target>       </trans-unit>
        <trans-unit id="606" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLine(System.UInt32)">
          <source>An I/O error occurs.</source>
          <target state="translated">Ein E/A-Fehler tritt auf.</target>       </trans-unit>
        <trans-unit id="607" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLine(System.UInt64)">
          <source>The 8-byte unsigned integer to write.</source>
          <target state="translated">Die zu schreibende 8-Byte-Ganzzahl ohne Vorzeichen.</target>       </trans-unit>
        <trans-unit id="608" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLine(System.UInt64)">
          <source>Writes the text representation of an 8-byte unsigned integer followed by a line terminator to the text string or stream.</source>
          <target state="translated">Schreibt die Textdarstellung einer 8-Byte-Ganzzahl ohne Vorzeichen, gefolgt von einem Zeichen für den Zeilenabschluss, in die Textzeichenfolge oder den Stream.</target>       </trans-unit>
        <trans-unit id="609" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.UInt64)">
          <source>The text representation of the specified value is produced by calling the <ph id="ph1">&lt;xref:System.UInt64.ToString%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">Die Textdarstellung des angegebenen Werts wird erstellt, durch Aufrufen der <ph id="ph1">&lt;xref:System.UInt64.ToString%2A?displayProperty=nameWithType&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="610" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.UInt64)">
          <source>The <ph id="ph1">&lt;xref:System.IO.TextWriter.FormatProvider%2A&gt;</ph> property, if not <ph id="ph2">`null`</ph>, specifies the culture-specific formatting.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.IO.TextWriter.FormatProvider%2A&gt;</ph> Eigenschaft, wenn keine <ph id="ph2">`null`</ph>, gibt an, die kulturspezifische Formatierung.</target>       </trans-unit>
        <trans-unit id="611" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.UInt64)">
          <source>The line terminator is defined by the <ph id="ph1">&lt;xref:System.IO.TextWriter.CoreNewLine&gt;</ph> field.</source>
          <target state="translated">Die für den Zeilenabschluss wird definiert, indem die <ph id="ph1">&lt;xref:System.IO.TextWriter.CoreNewLine&gt;</ph> Feld.</target>       </trans-unit>
        <trans-unit id="612" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.UInt64)">
          <source>For a list of common I/O tasks, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</source>
          <target state="translated">Eine Liste der allgemeinen e/a-Aufgaben finden Sie <bpt id="p1">[</bpt>allgemeine e/a-Aufgaben<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</target>       </trans-unit>
        <trans-unit id="613" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLine(System.UInt64)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> is closed.</source>
          <target state="translated">Der <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> ist geschlossen.</target>       </trans-unit>
        <trans-unit id="614" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLine(System.UInt64)">
          <source>An I/O error occurs.</source>
          <target state="translated">Ein E/A-Fehler tritt auf.</target>       </trans-unit>
        <trans-unit id="615" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object)">
          <source>A composite format string.</source>
          <target state="translated">Eine kombinierte Formatzeichenfolge.</target>       </trans-unit>
        <trans-unit id="616" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object)">
          <source>The object to format and write.</source>
          <target state="translated">Das zu formatierende und zu schreibende Objekt.</target>       </trans-unit>
        <trans-unit id="617" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object)">
          <source>Writes a formatted string and a new line to the text string or stream, using the same semantics as the <ph id="ph1">&lt;see cref="M:System.String.Format(System.String,System.Object)" /&gt;</ph> method.</source>
          <target state="translated">Schreibt eine formatierte Zeichenfolge und eine neue Zeile in die Textzeichenfolge oder den Stream unter Verwendung der gleichen Semantik wie die <ph id="ph1">&lt;see cref="M:System.String.Format(System.String,System.Object)" /&gt;</ph>-Methode.</target>       </trans-unit>
        <trans-unit id="618" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object)">
          <source>This method uses composite formatting to convert the value of an object to its string representation and to embed that representation in a string.</source>
          <target state="translated">Diese Methode verwendet die kombinierte Formatierung auf den Wert eines Objekts in seine Zeichenfolgendarstellung zu konvertieren und diese Darstellung in einer Zeichenfolge einzubetten.</target>       </trans-unit>
        <trans-unit id="619" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object)">
          <source>.NET provides extensive formatting support, which is described in greater detail in the following formatting topics:</source>
          <target state="translated">.NET bietet eine umfangreiche formatierungsunterstützung, dies wird in den folgenden Themen zur Formatierung ausführlicher beschrieben:</target>       </trans-unit>
        <trans-unit id="620" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object)">
          <source>For more information about the composite formatting feature, see <bpt id="p1">[</bpt>Composite Formatting<ept id="p1">](~/docs/standard/base-types/composite-formatting.md)</ept>.</source>
          <target state="translated">Weitere Informationen zur Funktion für kombinierte Formatierung finden Sie unter <bpt id="p1">[</bpt>kombinierte Formatierung<ept id="p1">](~/docs/standard/base-types/composite-formatting.md)</ept>.</target>       </trans-unit>
        <trans-unit id="621" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object)">
          <source>For more information about numeric format specifiers, see <bpt id="p1">[</bpt>Standard Numeric Format Strings<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept> and <bpt id="p2">[</bpt>Custom Numeric Format Strings<ept id="p2">](~/docs/standard/base-types/custom-numeric-format-strings.md)</ept>.</source>
          <target state="translated">Weitere Informationen zu numerischen Formatbezeichnern finden Sie unter <bpt id="p1">[</bpt>Standard Numeric Format Strings<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept> und <bpt id="p2">[</bpt>benutzerdefinierte Zahlenformatzeichenfolgen<ept id="p2">](~/docs/standard/base-types/custom-numeric-format-strings.md)</ept>.</target>       </trans-unit>
        <trans-unit id="622" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object)">
          <source>For more information about date and time format specifiers, see <bpt id="p1">[</bpt>Standard Date and Time Format Strings<ept id="p1">](~/docs/standard/base-types/standard-date-and-time-format-strings.md)</ept> and <bpt id="p2">[</bpt>Custom Date and Time Format Strings<ept id="p2">](~/docs/standard/base-types/custom-date-and-time-format-strings.md)</ept>.</source>
          <target state="translated">Weitere Informationen über Datum und Uhrzeit, die Formatbezeichner finden Sie unter <bpt id="p1">[</bpt>Standardformatbezeichner für Datum und Uhrzeit-Formatzeichenfolgen<ept id="p1">](~/docs/standard/base-types/standard-date-and-time-format-strings.md)</ept> und <bpt id="p2">[</bpt>benutzerdefinierte Datums- und Uhrzeit-Formatzeichenfolgen<ept id="p2">](~/docs/standard/base-types/custom-date-and-time-format-strings.md)</ept>.</target>       </trans-unit>
        <trans-unit id="623" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object)">
          <source>For more information about enumeration format specifiers, see <bpt id="p1">[</bpt>Enumeration Format Strings<ept id="p1">](~/docs/standard/base-types/enumeration-format-strings.md)</ept>.</source>
          <target state="translated">Weitere Informationen zu Formatbezeichnern finden Sie unter <bpt id="p1">[</bpt>Enumerationsformatzeichenfolgen<ept id="p1">](~/docs/standard/base-types/enumeration-format-strings.md)</ept>.</target>       </trans-unit>
        <trans-unit id="624" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object)">
          <source>For more information about formatting, see <bpt id="p1">[</bpt>Formatting Types<ept id="p1">](~/docs/standard/base-types/formatting-types.md)</ept>.</source>
          <target state="translated">Weitere Informationen zur Formatierung finden Sie unter <bpt id="p1">[</bpt>Formatierung von Typen<ept id="p1">](~/docs/standard/base-types/formatting-types.md)</ept>.</target>       </trans-unit>
        <trans-unit id="625" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object)">
          <source>The <ph id="ph1">`format`</ph> parameter consists of zero or more runs of text intermixed with zero or more indexed placeholders, called format items, that correspond to an object in the parameter list of this method.</source>
          <target state="translated">Die <ph id="ph1">`format`</ph> -Parameter besteht aus 0 (null) oder mehreren Einheiten Text mit NULL oder mehr indizierten Platzhaltern enthalten, so genannten Formatelementen, die ein Objekt in der Parameterliste dieser Methode entsprechen.</target>       </trans-unit>
        <trans-unit id="626" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object)">
          <source>The formatting process replaces each format item with the string representation of the value of the corresponding object.</source>
          <target state="translated">Der Formatierungsvorgang wird jedes Formatelement durch die Zeichenfolgendarstellung des Werts des entsprechenden Objekts ersetzt.</target>       </trans-unit>
        <trans-unit id="627" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object)">
          <source>The syntax of a format item is as follows:</source>
          <target state="translated">Die Syntax eines Formatelements lautet wie folgt:</target>       </trans-unit>
        <trans-unit id="628" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object)">
          <source>{<bpt id="p1">*</bpt>index<ept id="p1">*</ept>[,<bpt id="p2">*</bpt>length<ept id="p2">*</ept>][:<bpt id="p3">*</bpt>formatString<ept id="p3">*</ept>]}</source>
          <target state="translated">{<bpt id="p1">*</bpt>Index<ept id="p1">*</ept>[,<bpt id="p2">*</bpt>Länge<ept id="p2">*</ept>] [:<bpt id="p3">*</bpt>"FormatString"<ept id="p3">*</ept>]}</target>       </trans-unit>
        <trans-unit id="629" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object)">
          <source>Elements in square brackets are optional.</source>
          <target state="translated">Elemente in eckigen Klammern sind optional.</target>       </trans-unit>
        <trans-unit id="630" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object)">
          <source>The following table describes each element.</source>
          <target state="translated">In der folgenden Tabelle wird jedes Element beschrieben.</target>       </trans-unit>
        <trans-unit id="631" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object)">
          <source>For more information about the composite formatting feature, including the syntax of a format item, see <bpt id="p1">[</bpt>Composite Formatting<ept id="p1">](~/docs/standard/base-types/composite-formatting.md)</ept>.</source>
          <target state="translated">Weitere Informationen zu der Funktion für kombinierte Formatierung, einschließlich der Syntax eines Formatelements, finden Sie unter <bpt id="p1">[</bpt>kombinierte Formatierung<ept id="p1">](~/docs/standard/base-types/composite-formatting.md)</ept>.</target>       </trans-unit>
        <trans-unit id="632" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object)">
          <source>Element</source>
          <target state="translated">Element</target>       </trans-unit>
        <trans-unit id="633" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object)">
          <source>Description</source>
          <target state="translated">Beschreibung </target>       </trans-unit>
        <trans-unit id="634" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object)">
          <source>index</source>
          <target state="translated">Index</target>       </trans-unit>
        <trans-unit id="635" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object)">
          <source>The zero-based position in the parameter list of the object to be formatted.</source>
          <target state="translated">Die nullbasierte Position in der Parameterliste des Objekts, das formatiert werden.</target>       </trans-unit>
        <trans-unit id="636" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object)">
          <source>If the object specified by <bpt id="p1">*</bpt>index<ept id="p1">*</ept> is <ph id="ph1">`null`</ph>, the format item is replaced by <ph id="ph2">&lt;xref:System.String.Empty?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Wenn das Objekt vom angegebenen <bpt id="p1">*</bpt>Index<ept id="p1">*</ept> ist <ph id="ph1">`null`</ph>, das Formatelement wird durch ersetzt <ph id="ph2">&lt;xref:System.String.Empty?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="637" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object)">
          <source>Because this overload has only a single object in its parameter list, the value of <bpt id="p1">*</bpt>index<ept id="p1">*</ept> must always be 0.</source>
          <target state="translated">Da diese Überladung nur ein einzelnes Objekt im Parameter verfügt über aufzulisten, den Wert der <bpt id="p1">*</bpt>Index<ept id="p1">*</ept> muss immer 0 sein.</target>       </trans-unit>
        <trans-unit id="638" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object)">
          <source>If there is no parameter in the <bpt id="p1">*</bpt>index<ept id="p1">*</ept> position, a <ph id="ph1">&lt;xref:System.FormatException&gt;</ph> is thrown.</source>
          <target state="translated">Wenn es keinen Parameter in gibt der <bpt id="p1">*</bpt>Index<ept id="p1">*</ept> Position eine <ph id="ph1">&lt;xref:System.FormatException&gt;</ph> ausgelöst wird.</target>       </trans-unit>
        <trans-unit id="639" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object)">
          <source>,<bpt id="p1">*</bpt>length<ept id="p1">*</ept></source>
          <target state="translated">,<bpt id="p1">*</bpt>length<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="640" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object)">
          <source>The minimum number of characters in the string representation of the parameter.</source>
          <target state="translated">Die minimale Anzahl von Zeichen in eine Zeichenfolgendarstellung des Parameters.</target>       </trans-unit>
        <trans-unit id="641" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object)">
          <source>If positive, the parameter is right-aligned; if negative, it is left-aligned.</source>
          <target state="translated">Wenn positiv ist, ist der Parameter rechts ausgerichteten; Wenn Sie negativ ist, ist es linksbündig ausgerichtet.</target>       </trans-unit>
        <trans-unit id="642" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object)">
          <source>:<bpt id="p1">*</bpt>formatString<ept id="p1">*</ept></source>
          <target state="translated">:<bpt id="p1">*</bpt>formatString<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="643" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object)">
          <source>A standard or custom format string that is supported by the object to be formatted.</source>
          <target state="translated">Eine standardmäßige oder benutzerdefinierte Formatierungszeichenfolge, die von der zu formatierende Objekt unterstützt wird.</target>       </trans-unit>
        <trans-unit id="644" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object)">
          <source>Possible values for <bpt id="p1">*</bpt>formatString<ept id="p1">*</ept> are the same as the values supported by the object's <ph id="ph1">`ToString(string format)`</ph> method.</source>
          <target state="translated">Mögliche Werte für <bpt id="p1">*</bpt>"FormatString"<ept id="p1">*</ept> sind identisch mit den Werten, die von des Objekts unterstützt <ph id="ph1">`ToString(string format)`</ph> Methode.</target>       </trans-unit>
        <trans-unit id="645" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object)">
          <source>If <bpt id="p1">*</bpt>formatString<ept id="p1">*</ept> is not specified and the object to be formatted implements the <ph id="ph1">&lt;xref:System.IFormattable&gt;</ph> interface, <ph id="ph2">`null`</ph> is passed as the value of the <ph id="ph3">`format`</ph> parameter that is used as the <ph id="ph4">&lt;xref:System.IFormattable.ToString%2A?displayProperty=nameWithType&gt;</ph> format string.</source>
          <target state="translated">Wenn <bpt id="p1">*</bpt>"FormatString"<ept id="p1">*</ept> nicht angegeben wird und die zu formatierende Objekt implementiert die <ph id="ph1">&lt;xref:System.IFormattable&gt;</ph> -Schnittstelle, <ph id="ph2">`null`</ph> wird als Wert übergeben der <ph id="ph3">`format`</ph> Parameter, der verwendet wird, als die <ph id="ph4">&lt;xref:System.IFormattable.ToString%2A?displayProperty=nameWithType&gt;</ph> Formatzeichenfolge.</target>       </trans-unit>
        <trans-unit id="646" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object)">
          <source>The leading and trailing brace characters, "{" and "}", are required.</source>
          <target state="translated">Das führende und nachgestellte geschweifte Klammer "{" und "}", erforderlich sind.</target>       </trans-unit>
        <trans-unit id="647" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object)">
          <source>To specify a single literal brace character in <ph id="ph1">`format`</ph>, specify two leading or trailing brace characters; that is, "{{" or "}}".</source>
          <target state="translated">Um einen einzelnen literal geschweifte Klammer in <ph id="ph1">`format`</ph>, geben Sie zwei führende oder nachgestellte geschweifte; d. h. "{{" oder "}}".</target>       </trans-unit>
        <trans-unit id="648" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object)">
          <source>This method does not search the specified string for individual newline characters (hexadecimal 0x000a) and replace them with <ph id="ph1">&lt;xref:System.IO.TextWriter.NewLine%2A&gt;</ph>.</source>
          <target state="translated">Diese Methode nicht die angegebene Zeichenfolge für die einzelnen neue Zeilenumbruchzeichen (hexadezimal 0x000a) zu suchen und Ersetzen Sie sie durch <ph id="ph1">&lt;xref:System.IO.TextWriter.NewLine%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="649" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object)">
          <source>If a specified object is not referenced in the format string, it is ignored.</source>
          <target state="translated">Wenn ein angegebenes Objekt nicht in der Formatzeichenfolge verwiesen wird, wird es ignoriert.</target>       </trans-unit>
        <trans-unit id="650" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object)">
          <source>The line terminator is defined by the <ph id="ph1">&lt;xref:System.IO.TextWriter.CoreNewLine&gt;</ph> field.</source>
          <target state="translated">Die für den Zeilenabschluss wird definiert, indem die <ph id="ph1">&lt;xref:System.IO.TextWriter.CoreNewLine&gt;</ph> Feld.</target>       </trans-unit>
        <trans-unit id="651" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object)">
          <source>For a list of common I/O tasks, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</source>
          <target state="translated">Eine Liste der allgemeinen e/a-Aufgaben finden Sie <bpt id="p1">[</bpt>allgemeine e/a-Aufgaben<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</target>       </trans-unit>
        <trans-unit id="652" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object)">
          <source><ph id="ph1">&lt;paramref name="format" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="format" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="653" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> is closed.</source>
          <target state="translated">Der <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> ist geschlossen.</target>       </trans-unit>
        <trans-unit id="654" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object)">
          <source>An I/O error occurs.</source>
          <target state="translated">Ein E/A-Fehler tritt auf.</target>       </trans-unit>
        <trans-unit id="655" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object)">
          <source><ph id="ph1">&lt;paramref name="format" /&gt;</ph> is not a valid composite format string.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="format" /&gt;</ph> ist keine gültige kombinierte Formatzeichenfolge.</target>       </trans-unit>
        <trans-unit id="656" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object)">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="657" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object)">
          <source>The index of a format item is less than 0 (zero), or greater than or equal to the number of objects to be formatted (which, for this method overload, is one).</source>
          <target state="translated">Der Index eines Formatelements ist kleiner als 0 (null) oder größer/gleich der Anzahl der zu formatierenden Objekte (1 für diese Methodenüberladung).</target>       </trans-unit>
        <trans-unit id="658" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object[])">
          <source>A composite format string.</source>
          <target state="translated">Eine kombinierte Formatzeichenfolge.</target>       </trans-unit>
        <trans-unit id="659" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object[])">
          <source>An object array that contains zero or more objects to format and write.</source>
          <target state="translated">Ein Objektarray mit 0 (null) oder mehr zu formatierenden und zu schreibenden Objekten.</target>       </trans-unit>
        <trans-unit id="660" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object[])">
          <source>Writes out a formatted string and a new line, using the same semantics as <ph id="ph1">&lt;see cref="M:System.String.Format(System.String,System.Object)" /&gt;</ph>.</source>
          <target state="translated">Schreibt eine formatierte Zeichenfolge und eine neue Zeile unter Verwendung der gleichen Semantik wie bei <ph id="ph1">&lt;see cref="M:System.String.Format(System.String,System.Object)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="661" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object[])">
          <source>This method uses composite formatting to convert the value of an object to its string representation and to embed that representation in a string.</source>
          <target state="translated">Diese Methode verwendet die kombinierte Formatierung auf den Wert eines Objekts in seine Zeichenfolgendarstellung zu konvertieren und diese Darstellung in einer Zeichenfolge einzubetten.</target>       </trans-unit>
        <trans-unit id="662" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object[])">
          <source>.NET provides extensive formatting support, which is described in greater detail in the following formatting topics:</source>
          <target state="translated">.NET bietet eine umfangreiche formatierungsunterstützung, dies wird in den folgenden Themen zur Formatierung ausführlicher beschrieben:</target>       </trans-unit>
        <trans-unit id="663" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object[])">
          <source>For more information about the composite formatting feature, see <bpt id="p1">[</bpt>Composite Formatting<ept id="p1">](~/docs/standard/base-types/composite-formatting.md)</ept>.</source>
          <target state="translated">Weitere Informationen zur Funktion für kombinierte Formatierung finden Sie unter <bpt id="p1">[</bpt>kombinierte Formatierung<ept id="p1">](~/docs/standard/base-types/composite-formatting.md)</ept>.</target>       </trans-unit>
        <trans-unit id="664" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object[])">
          <source>For more information about numeric format specifiers, see <bpt id="p1">[</bpt>Standard Numeric Format Strings<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept> and <bpt id="p2">[</bpt>Custom Numeric Format Strings<ept id="p2">](~/docs/standard/base-types/custom-numeric-format-strings.md)</ept>.</source>
          <target state="translated">Weitere Informationen zu numerischen Formatbezeichnern finden Sie unter <bpt id="p1">[</bpt>Standard Numeric Format Strings<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept> und <bpt id="p2">[</bpt>benutzerdefinierte Zahlenformatzeichenfolgen<ept id="p2">](~/docs/standard/base-types/custom-numeric-format-strings.md)</ept>.</target>       </trans-unit>
        <trans-unit id="665" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object[])">
          <source>For more information about date and time format specifiers, see <bpt id="p1">[</bpt>Standard Date and Time Format Strings<ept id="p1">](~/docs/standard/base-types/standard-date-and-time-format-strings.md)</ept> and <bpt id="p2">[</bpt>Custom Date and Time Format Strings<ept id="p2">](~/docs/standard/base-types/custom-date-and-time-format-strings.md)</ept>.</source>
          <target state="translated">Weitere Informationen über Datum und Uhrzeit, die Formatbezeichner finden Sie unter <bpt id="p1">[</bpt>Standardformatbezeichner für Datum und Uhrzeit-Formatzeichenfolgen<ept id="p1">](~/docs/standard/base-types/standard-date-and-time-format-strings.md)</ept> und <bpt id="p2">[</bpt>benutzerdefinierte Datums- und Uhrzeit-Formatzeichenfolgen<ept id="p2">](~/docs/standard/base-types/custom-date-and-time-format-strings.md)</ept>.</target>       </trans-unit>
        <trans-unit id="666" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object[])">
          <source>For more information about enumeration format specifiers, see <bpt id="p1">[</bpt>Enumeration Format Strings<ept id="p1">](~/docs/standard/base-types/enumeration-format-strings.md)</ept>.</source>
          <target state="translated">Weitere Informationen zu Formatbezeichnern finden Sie unter <bpt id="p1">[</bpt>Enumerationsformatzeichenfolgen<ept id="p1">](~/docs/standard/base-types/enumeration-format-strings.md)</ept>.</target>       </trans-unit>
        <trans-unit id="667" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object[])">
          <source>For more information about formatting, see <bpt id="p1">[</bpt>Formatting Types<ept id="p1">](~/docs/standard/base-types/formatting-types.md)</ept>.</source>
          <target state="translated">Weitere Informationen zur Formatierung finden Sie unter <bpt id="p1">[</bpt>Formatierung von Typen<ept id="p1">](~/docs/standard/base-types/formatting-types.md)</ept>.</target>       </trans-unit>
        <trans-unit id="668" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object[])">
          <source>The <ph id="ph1">`format`</ph> parameter consists of zero or more runs of text intermixed with zero or more indexed placeholders, called format items, that correspond to an object in the parameter list of this method.</source>
          <target state="translated">Die <ph id="ph1">`format`</ph> -Parameter besteht aus 0 (null) oder mehreren Einheiten Text mit NULL oder mehr indizierten Platzhaltern enthalten, so genannten Formatelementen, die ein Objekt in der Parameterliste dieser Methode entsprechen.</target>       </trans-unit>
        <trans-unit id="669" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object[])">
          <source>The formatting process replaces each format item with the string representation of the value of the corresponding object.</source>
          <target state="translated">Der Formatierungsvorgang wird jedes Formatelement durch die Zeichenfolgendarstellung des Werts des entsprechenden Objekts ersetzt.</target>       </trans-unit>
        <trans-unit id="670" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object[])">
          <source>The syntax of a format item is as follows:</source>
          <target state="translated">Die Syntax eines Formatelements lautet wie folgt:</target>       </trans-unit>
        <trans-unit id="671" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object[])">
          <source>{<bpt id="p1">*</bpt>index<ept id="p1">*</ept>[,<bpt id="p2">*</bpt>length<ept id="p2">*</ept>][:<bpt id="p3">*</bpt>formatString<ept id="p3">*</ept>]}</source>
          <target state="translated">{<bpt id="p1">*</bpt>Index<ept id="p1">*</ept>[,<bpt id="p2">*</bpt>Länge<ept id="p2">*</ept>] [:<bpt id="p3">*</bpt>"FormatString"<ept id="p3">*</ept>]}</target>       </trans-unit>
        <trans-unit id="672" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object[])">
          <source>Elements in square brackets are optional.</source>
          <target state="translated">Elemente in eckigen Klammern sind optional.</target>       </trans-unit>
        <trans-unit id="673" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object[])">
          <source>The following table describes each element.</source>
          <target state="translated">In der folgenden Tabelle wird jedes Element beschrieben.</target>       </trans-unit>
        <trans-unit id="674" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object[])">
          <source>For more information about the composite formatting feature, including the syntax of a format item, see <bpt id="p1">[</bpt>Composite Formatting<ept id="p1">](~/docs/standard/base-types/composite-formatting.md)</ept>.</source>
          <target state="translated">Weitere Informationen zu der Funktion für kombinierte Formatierung, einschließlich der Syntax eines Formatelements, finden Sie unter <bpt id="p1">[</bpt>kombinierte Formatierung<ept id="p1">](~/docs/standard/base-types/composite-formatting.md)</ept>.</target>       </trans-unit>
        <trans-unit id="675" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object[])">
          <source>Element</source>
          <target state="translated">Element</target>       </trans-unit>
        <trans-unit id="676" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object[])">
          <source>Description</source>
          <target state="translated">Beschreibung </target>       </trans-unit>
        <trans-unit id="677" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object[])">
          <source>index</source>
          <target state="translated">Index</target>       </trans-unit>
        <trans-unit id="678" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object[])">
          <source>The zero-based position in the parameter list of the object to be formatted.</source>
          <target state="translated">Die nullbasierte Position in der Parameterliste des Objekts, das formatiert werden.</target>       </trans-unit>
        <trans-unit id="679" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object[])">
          <source>If the object specified by <bpt id="p1">*</bpt>index<ept id="p1">*</ept> is <ph id="ph1">`null`</ph>, the format item is replaced by <ph id="ph2">&lt;xref:System.String.Empty?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Wenn das Objekt vom angegebenen <bpt id="p1">*</bpt>Index<ept id="p1">*</ept> ist <ph id="ph1">`null`</ph>, das Formatelement wird durch ersetzt <ph id="ph2">&lt;xref:System.String.Empty?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="680" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object[])">
          <source>Because this overload has an array in its parameter list, the value of <bpt id="p1">*</bpt>index<ept id="p1">*</ept> must always be less than the length of the array.</source>
          <target state="translated">Diese Überladung verfügt über ein Array in seine Parameter aufzulisten, den Wert der <bpt id="p1">*</bpt>Index<ept id="p1">*</ept> muss immer kleiner als die Länge des Arrays sein.</target>       </trans-unit>
        <trans-unit id="681" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object[])">
          <source>If there is no parameter in the <bpt id="p1">*</bpt>index<ept id="p1">*</ept> position, a <ph id="ph1">&lt;xref:System.FormatException&gt;</ph> is thrown.</source>
          <target state="translated">Wenn es keinen Parameter in gibt der <bpt id="p1">*</bpt>Index<ept id="p1">*</ept> Position eine <ph id="ph1">&lt;xref:System.FormatException&gt;</ph> ausgelöst wird.</target>       </trans-unit>
        <trans-unit id="682" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object[])">
          <source>,<bpt id="p1">*</bpt>length<ept id="p1">*</ept></source>
          <target state="translated">,<bpt id="p1">*</bpt>length<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="683" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object[])">
          <source>The minimum number of characters in the string representation of the parameter.</source>
          <target state="translated">Die minimale Anzahl von Zeichen in eine Zeichenfolgendarstellung des Parameters.</target>       </trans-unit>
        <trans-unit id="684" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object[])">
          <source>If positive, the parameter is right-aligned; if negative, it is left-aligned.</source>
          <target state="translated">Wenn positiv ist, ist der Parameter rechts ausgerichteten; Wenn Sie negativ ist, ist es linksbündig ausgerichtet.</target>       </trans-unit>
        <trans-unit id="685" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object[])">
          <source>:<bpt id="p1">*</bpt>formatString<ept id="p1">*</ept></source>
          <target state="translated">:<bpt id="p1">*</bpt>formatString<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="686" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object[])">
          <source>A standard or custom format string that is supported by the object to be formatted.</source>
          <target state="translated">Eine standardmäßige oder benutzerdefinierte Formatierungszeichenfolge, die von der zu formatierende Objekt unterstützt wird.</target>       </trans-unit>
        <trans-unit id="687" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object[])">
          <source>Possible values for <bpt id="p1">*</bpt>formatString<ept id="p1">*</ept> are the same as the values supported by the object's <ph id="ph1">`ToString(string format)`</ph> method.</source>
          <target state="translated">Mögliche Werte für <bpt id="p1">*</bpt>"FormatString"<ept id="p1">*</ept> sind identisch mit den Werten, die von des Objekts unterstützt <ph id="ph1">`ToString(string format)`</ph> Methode.</target>       </trans-unit>
        <trans-unit id="688" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object[])">
          <source>If <bpt id="p1">*</bpt>formatString<ept id="p1">*</ept> is not specified and the object to be formatted implements the <ph id="ph1">&lt;xref:System.IFormattable&gt;</ph> interface, <ph id="ph2">`null`</ph> is passed as the value of the <ph id="ph3">`format`</ph> parameter that is used as the <ph id="ph4">&lt;xref:System.IFormattable.ToString%2A?displayProperty=nameWithType&gt;</ph> format string.</source>
          <target state="translated">Wenn <bpt id="p1">*</bpt>"FormatString"<ept id="p1">*</ept> nicht angegeben wird und die zu formatierende Objekt implementiert die <ph id="ph1">&lt;xref:System.IFormattable&gt;</ph> -Schnittstelle, <ph id="ph2">`null`</ph> wird als Wert übergeben der <ph id="ph3">`format`</ph> Parameter, der verwendet wird, als die <ph id="ph4">&lt;xref:System.IFormattable.ToString%2A?displayProperty=nameWithType&gt;</ph> Formatzeichenfolge.</target>       </trans-unit>
        <trans-unit id="689" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object[])">
          <source>The leading and trailing brace characters, "{" and "}", are required.</source>
          <target state="translated">Das führende und nachgestellte geschweifte Klammer "{" und "}", erforderlich sind.</target>       </trans-unit>
        <trans-unit id="690" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object[])">
          <source>To specify a single literal brace character in <ph id="ph1">`format`</ph>, specify two leading or trailing brace characters; that is, "{{" or "}}".</source>
          <target state="translated">Um einen einzelnen literal geschweifte Klammer in <ph id="ph1">`format`</ph>, geben Sie zwei führende oder nachgestellte geschweifte; d. h. "{{" oder "}}".</target>       </trans-unit>
        <trans-unit id="691" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object[])">
          <source>This method does not search the specified string for individual newline characters (hexadecimal 0x000a) and replace them with <ph id="ph1">&lt;xref:System.IO.TextWriter.NewLine%2A&gt;</ph>.</source>
          <target state="translated">Diese Methode nicht die angegebene Zeichenfolge für die einzelnen neue Zeilenumbruchzeichen (hexadezimal 0x000a) zu suchen und Ersetzen Sie sie durch <ph id="ph1">&lt;xref:System.IO.TextWriter.NewLine%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="692" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object[])">
          <source>If a specified object is not referenced in the format string, it is ignored.</source>
          <target state="translated">Wenn ein angegebenes Objekt nicht in der Formatzeichenfolge verwiesen wird, wird es ignoriert.</target>       </trans-unit>
        <trans-unit id="693" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object[])">
          <source>The line terminator is defined by the <ph id="ph1">&lt;xref:System.IO.TextWriter.CoreNewLine&gt;</ph> field.</source>
          <target state="translated">Die für den Zeilenabschluss wird definiert, indem die <ph id="ph1">&lt;xref:System.IO.TextWriter.CoreNewLine&gt;</ph> Feld.</target>       </trans-unit>
        <trans-unit id="694" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object[])">
          <source>For a list of common I/O tasks, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</source>
          <target state="translated">Eine Liste der allgemeinen e/a-Aufgaben finden Sie <bpt id="p1">[</bpt>allgemeine e/a-Aufgaben<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</target>       </trans-unit>
        <trans-unit id="695" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object[])">
          <source>A string or object is passed in as <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Eine Zeichenfolge oder ein Objekt wird als <ph id="ph1">&lt;see langword="null" /&gt;</ph> übergeben.</target>       </trans-unit>
        <trans-unit id="696" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object[])">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> is closed.</source>
          <target state="translated">Der <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> ist geschlossen.</target>       </trans-unit>
        <trans-unit id="697" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object[])">
          <source>An I/O error occurs.</source>
          <target state="translated">Ein E/A-Fehler tritt auf.</target>       </trans-unit>
        <trans-unit id="698" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object[])">
          <source><ph id="ph1">&lt;paramref name="format" /&gt;</ph> is not a valid composite format string.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="format" /&gt;</ph> ist keine gültige kombinierte Formatzeichenfolge.</target>       </trans-unit>
        <trans-unit id="699" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object[])">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="700" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object[])">
          <source>The index of a format item is less than 0 (zero), or greater than or equal to the length of the <ph id="ph1">&lt;paramref name="arg" /&gt;</ph> array.</source>
          <target state="translated">Der Index eines Formatelements ist kleiner als 0 (null) oder größer oder gleich der Länge des <ph id="ph1">&lt;paramref name="arg" /&gt;</ph>-Arrays.</target>       </trans-unit>
        <trans-unit id="701" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLine(System.Char[],System.Int32,System.Int32)">
          <source>The character array from which data is read.</source>
          <target state="translated">Das Zeichenarray, aus dem die Daten gelesen werden.</target>       </trans-unit>
        <trans-unit id="702" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLine(System.Char[],System.Int32,System.Int32)">
          <source>The character position in <bpt id="p1">&lt;c&gt;</bpt>buffer<ept id="p1">&lt;/c&gt;</ept> at which to start reading data.</source>
          <target state="translated">Die Zeichenposition in <bpt id="p1">&lt;c&gt;</bpt>buffer<ept id="p1">&lt;/c&gt;</ept>, an der mit dem Lesen von Daten begonnen werden soll.</target>       </trans-unit>
        <trans-unit id="703" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLine(System.Char[],System.Int32,System.Int32)">
          <source>The maximum number of characters to write.</source>
          <target state="translated">Die maximale Anzahl der zu schreibenden Zeichen.</target>       </trans-unit>
        <trans-unit id="704" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLine(System.Char[],System.Int32,System.Int32)">
          <source>Writes a subarray of characters followed by a line terminator to the text string or stream.</source>
          <target state="translated">Schreibt ein Teilarray von Zeichen, gefolgt von einem Zeichen für den Zeilenabschluss, in die Textzeichenfolge oder den Stream.</target>       </trans-unit>
        <trans-unit id="705" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.Char[],System.Int32,System.Int32)">
          <source>This method will write <ph id="ph1">`count`</ph> characters of data into this <ph id="ph2">`TextWriter`</ph> from the <ph id="ph3">`buffer`</ph> character array starting at position <ph id="ph4">`index`</ph>.</source>
          <target state="translated">Diese Methode schreibt <ph id="ph1">`count`</ph> Zeichen mit Daten in diese <ph id="ph2">`TextWriter`</ph> aus der <ph id="ph3">`buffer`</ph> Array von Zeichen ab Position <ph id="ph4">`index`</ph>.</target>       </trans-unit>
        <trans-unit id="706" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.Char[],System.Int32,System.Int32)">
          <source>This overload is equivalent to calling the <ph id="ph1">&lt;xref:System.IO.TextWriter.Write%28System.Char%5B%5D%29&gt;</ph> method followed by <ph id="ph2">&lt;xref:System.IO.TextWriter.WriteLine%2A&gt;</ph> for each character in <ph id="ph3">`buffer`</ph> between <ph id="ph4">`index`</ph> and (<ph id="ph5">`index`</ph><ph id="ph6"> + </ph><ph id="ph7">`count`</ph>).</source>
          <target state="translated">Diese Überladung entspricht dem Aufrufen der <ph id="ph1">&lt;xref:System.IO.TextWriter.Write%28System.Char%5B%5D%29&gt;</ph> Methode gefolgt von <ph id="ph2">&lt;xref:System.IO.TextWriter.WriteLine%2A&gt;</ph> für jedes Zeichen in <ph id="ph3">`buffer`</ph> zwischen <ph id="ph4">`index`</ph> und (<ph id="ph5">`index`</ph><ph id="ph6"> + </ph><ph id="ph7">`count`</ph>).</target>       </trans-unit>
        <trans-unit id="707" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.Char[],System.Int32,System.Int32)">
          <source>The line terminator is defined by the <ph id="ph1">&lt;xref:System.IO.TextWriter.CoreNewLine&gt;</ph> field.</source>
          <target state="translated">Die für den Zeilenabschluss wird definiert, indem die <ph id="ph1">&lt;xref:System.IO.TextWriter.CoreNewLine&gt;</ph> Feld.</target>       </trans-unit>
        <trans-unit id="708" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.Char[],System.Int32,System.Int32)">
          <source>For a list of common I/O tasks, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</source>
          <target state="translated">Eine Liste der allgemeinen e/a-Aufgaben finden Sie <bpt id="p1">[</bpt>allgemeine e/a-Aufgaben<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</target>       </trans-unit>
        <trans-unit id="709" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLine(System.Char[],System.Int32,System.Int32)">
          <source>The buffer length minus <ph id="ph1">&lt;paramref name="index" /&gt;</ph> is less than <ph id="ph2">&lt;paramref name="count" /&gt;</ph>.</source>
          <target state="translated">Die Länge des Puffers minus <ph id="ph1">&lt;paramref name="index" /&gt;</ph> ist kleiner als <ph id="ph2">&lt;paramref name="count" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="710" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLine(System.Char[],System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Der <ph id="ph1">&lt;paramref name="buffer" /&gt;</ph>-Parameter ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="711" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLine(System.Char[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> or <ph id="ph2">&lt;paramref name="count" /&gt;</ph> is negative.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> oder <ph id="ph2">&lt;paramref name="count" /&gt;</ph> ist ein negativer Wert.</target>       </trans-unit>
        <trans-unit id="712" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLine(System.Char[],System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> is closed.</source>
          <target state="translated">Der <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> ist geschlossen.</target>       </trans-unit>
        <trans-unit id="713" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLine(System.Char[],System.Int32,System.Int32)">
          <source>An I/O error occurs.</source>
          <target state="translated">Ein E/A-Fehler tritt auf.</target>       </trans-unit>
        <trans-unit id="714" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object)">
          <source>A composite format string.</source>
          <target state="translated">Eine kombinierte Formatzeichenfolge.</target>       </trans-unit>
        <trans-unit id="715" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object)">
          <source>The first object to format and write.</source>
          <target state="translated">Das erste zu formatierende und zu schreibende Objekt.</target>       </trans-unit>
        <trans-unit id="716" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object)">
          <source>The second object to format and write.</source>
          <target state="translated">Das zweite zu formatierende und zu schreibende Objekt.</target>       </trans-unit>
        <trans-unit id="717" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object)">
          <source>Writes a formatted string and a new line to the text string or stream, using the same semantics as the <ph id="ph1">&lt;see cref="M:System.String.Format(System.String,System.Object,System.Object)" /&gt;</ph> method.</source>
          <target state="translated">Schreibt eine formatierte Zeichenfolge und eine neue Zeile in die Textzeichenfolge oder den Stream unter Verwendung der gleichen Semantik wie die <ph id="ph1">&lt;see cref="M:System.String.Format(System.String,System.Object,System.Object)" /&gt;</ph>-Methode.</target>       </trans-unit>
        <trans-unit id="718" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object)">
          <source>This method uses composite formatting to convert the value of an object to its string representation and to embed that representation in a string.</source>
          <target state="translated">Diese Methode verwendet die kombinierte Formatierung auf den Wert eines Objekts in seine Zeichenfolgendarstellung zu konvertieren und diese Darstellung in einer Zeichenfolge einzubetten.</target>       </trans-unit>
        <trans-unit id="719" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object)">
          <source>.NET provides extensive formatting support, which is described in greater detail in the following formatting topics:</source>
          <target state="translated">.NET bietet eine umfangreiche formatierungsunterstützung, dies wird in den folgenden Themen zur Formatierung ausführlicher beschrieben:</target>       </trans-unit>
        <trans-unit id="720" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object)">
          <source>For more information about the composite formatting feature, see <bpt id="p1">[</bpt>Composite Formatting<ept id="p1">](~/docs/standard/base-types/composite-formatting.md)</ept>.</source>
          <target state="translated">Weitere Informationen zur Funktion für kombinierte Formatierung finden Sie unter <bpt id="p1">[</bpt>kombinierte Formatierung<ept id="p1">](~/docs/standard/base-types/composite-formatting.md)</ept>.</target>       </trans-unit>
        <trans-unit id="721" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object)">
          <source>For more information about numeric format specifiers, see <bpt id="p1">[</bpt>Standard Numeric Format Strings<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept> and <bpt id="p2">[</bpt>Custom Numeric Format Strings<ept id="p2">](~/docs/standard/base-types/custom-numeric-format-strings.md)</ept>.</source>
          <target state="translated">Weitere Informationen zu numerischen Formatbezeichnern finden Sie unter <bpt id="p1">[</bpt>Standard Numeric Format Strings<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept> und <bpt id="p2">[</bpt>benutzerdefinierte Zahlenformatzeichenfolgen<ept id="p2">](~/docs/standard/base-types/custom-numeric-format-strings.md)</ept>.</target>       </trans-unit>
        <trans-unit id="722" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object)">
          <source>For more information about date and time format specifiers, see <bpt id="p1">[</bpt>Standard Date and Time Format Strings<ept id="p1">](~/docs/standard/base-types/standard-date-and-time-format-strings.md)</ept> and <bpt id="p2">[</bpt>Custom Date and Time Format Strings<ept id="p2">](~/docs/standard/base-types/custom-date-and-time-format-strings.md)</ept>.</source>
          <target state="translated">Weitere Informationen über Datum und Uhrzeit, die Formatbezeichner finden Sie unter <bpt id="p1">[</bpt>Standardformatbezeichner für Datum und Uhrzeit-Formatzeichenfolgen<ept id="p1">](~/docs/standard/base-types/standard-date-and-time-format-strings.md)</ept> und <bpt id="p2">[</bpt>benutzerdefinierte Datums- und Uhrzeit-Formatzeichenfolgen<ept id="p2">](~/docs/standard/base-types/custom-date-and-time-format-strings.md)</ept>.</target>       </trans-unit>
        <trans-unit id="723" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object)">
          <source>For more information about enumeration format specifiers, see <bpt id="p1">[</bpt>Enumeration Format Strings<ept id="p1">](~/docs/standard/base-types/enumeration-format-strings.md)</ept>.</source>
          <target state="translated">Weitere Informationen zu Formatbezeichnern finden Sie unter <bpt id="p1">[</bpt>Enumerationsformatzeichenfolgen<ept id="p1">](~/docs/standard/base-types/enumeration-format-strings.md)</ept>.</target>       </trans-unit>
        <trans-unit id="724" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object)">
          <source>For more information about formatting, see <bpt id="p1">[</bpt>Formatting Types<ept id="p1">](~/docs/standard/base-types/formatting-types.md)</ept>.</source>
          <target state="translated">Weitere Informationen zur Formatierung finden Sie unter <bpt id="p1">[</bpt>Formatierung von Typen<ept id="p1">](~/docs/standard/base-types/formatting-types.md)</ept>.</target>       </trans-unit>
        <trans-unit id="725" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object)">
          <source>The <ph id="ph1">`format`</ph> parameter consists of zero or more runs of text intermixed with zero or more indexed placeholders, called format items, that correspond to an object in the parameter list of this method.</source>
          <target state="translated">Die <ph id="ph1">`format`</ph> -Parameter besteht aus 0 (null) oder mehreren Einheiten Text mit NULL oder mehr indizierten Platzhaltern enthalten, so genannten Formatelementen, die ein Objekt in der Parameterliste dieser Methode entsprechen.</target>       </trans-unit>
        <trans-unit id="726" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object)">
          <source>The formatting process replaces each format item with the string representation of the value of the corresponding object.</source>
          <target state="translated">Der Formatierungsvorgang wird jedes Formatelement durch die Zeichenfolgendarstellung des Werts des entsprechenden Objekts ersetzt.</target>       </trans-unit>
        <trans-unit id="727" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object)">
          <source>The syntax of a format item is as follows:</source>
          <target state="translated">Die Syntax eines Formatelements lautet wie folgt:</target>       </trans-unit>
        <trans-unit id="728" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object)">
          <source>{<bpt id="p1">*</bpt>index<ept id="p1">*</ept>[,<bpt id="p2">*</bpt>length<ept id="p2">*</ept>][:<bpt id="p3">*</bpt>formatString<ept id="p3">*</ept>]}</source>
          <target state="translated">{<bpt id="p1">*</bpt>Index<ept id="p1">*</ept>[,<bpt id="p2">*</bpt>Länge<ept id="p2">*</ept>] [:<bpt id="p3">*</bpt>"FormatString"<ept id="p3">*</ept>]}</target>       </trans-unit>
        <trans-unit id="729" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object)">
          <source>Elements in square brackets are optional.</source>
          <target state="translated">Elemente in eckigen Klammern sind optional.</target>       </trans-unit>
        <trans-unit id="730" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object)">
          <source>The following table describes each element.</source>
          <target state="translated">In der folgenden Tabelle wird jedes Element beschrieben.</target>       </trans-unit>
        <trans-unit id="731" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object)">
          <source>For more information about the composite formatting feature, including the syntax of a format item, see <bpt id="p1">[</bpt>Composite Formatting<ept id="p1">](~/docs/standard/base-types/composite-formatting.md)</ept>.</source>
          <target state="translated">Weitere Informationen zu der Funktion für kombinierte Formatierung, einschließlich der Syntax eines Formatelements, finden Sie unter <bpt id="p1">[</bpt>kombinierte Formatierung<ept id="p1">](~/docs/standard/base-types/composite-formatting.md)</ept>.</target>       </trans-unit>
        <trans-unit id="732" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object)">
          <source>Element</source>
          <target state="translated">Element</target>       </trans-unit>
        <trans-unit id="733" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object)">
          <source>Description</source>
          <target state="translated">Beschreibung </target>       </trans-unit>
        <trans-unit id="734" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object)">
          <source>index</source>
          <target state="translated">Index</target>       </trans-unit>
        <trans-unit id="735" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object)">
          <source>The zero-based position in the parameter list of the object to be formatted.</source>
          <target state="translated">Die nullbasierte Position in der Parameterliste des Objekts, das formatiert werden.</target>       </trans-unit>
        <trans-unit id="736" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object)">
          <source>If the object specified by <bpt id="p1">*</bpt>index<ept id="p1">*</ept> is <ph id="ph1">`null`</ph>, the format item is replaced by <ph id="ph2">&lt;xref:System.String.Empty?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Wenn das Objekt vom angegebenen <bpt id="p1">*</bpt>Index<ept id="p1">*</ept> ist <ph id="ph1">`null`</ph>, das Formatelement wird durch ersetzt <ph id="ph2">&lt;xref:System.String.Empty?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="737" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object)">
          <source>Because this overload has two objects in its parameter list, the value of <bpt id="p1">*</bpt>index<ept id="p1">*</ept> must always be 0 or 1.</source>
          <target state="translated">Da diese Überladung zwei Objekte im Parameter aufzulisten, den Wert der <bpt id="p1">*</bpt>Index<ept id="p1">*</ept> muss immer 0 oder 1 sein.</target>       </trans-unit>
        <trans-unit id="738" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object)">
          <source>If there is no parameter in the <bpt id="p1">*</bpt>index<ept id="p1">*</ept> position, a <ph id="ph1">&lt;xref:System.FormatException&gt;</ph> is thrown.</source>
          <target state="translated">Wenn es keinen Parameter in gibt der <bpt id="p1">*</bpt>Index<ept id="p1">*</ept> Position eine <ph id="ph1">&lt;xref:System.FormatException&gt;</ph> ausgelöst wird.</target>       </trans-unit>
        <trans-unit id="739" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object)">
          <source>,<bpt id="p1">*</bpt>length<ept id="p1">*</ept></source>
          <target state="translated">,<bpt id="p1">*</bpt>length<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="740" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object)">
          <source>The minimum number of characters in the string representation of the parameter.</source>
          <target state="translated">Die minimale Anzahl von Zeichen in eine Zeichenfolgendarstellung des Parameters.</target>       </trans-unit>
        <trans-unit id="741" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object)">
          <source>If positive, the parameter is right-aligned; if negative, it is left-aligned.</source>
          <target state="translated">Wenn positiv ist, ist der Parameter rechts ausgerichteten; Wenn Sie negativ ist, ist es linksbündig ausgerichtet.</target>       </trans-unit>
        <trans-unit id="742" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object)">
          <source>:<bpt id="p1">*</bpt>formatString<ept id="p1">*</ept></source>
          <target state="translated">:<bpt id="p1">*</bpt>formatString<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="743" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object)">
          <source>A standard or custom format string that is supported by the object to be formatted.</source>
          <target state="translated">Eine standardmäßige oder benutzerdefinierte Formatierungszeichenfolge, die von der zu formatierende Objekt unterstützt wird.</target>       </trans-unit>
        <trans-unit id="744" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object)">
          <source>Possible values for <bpt id="p1">*</bpt>formatString<ept id="p1">*</ept> are the same as the values supported by the object's <ph id="ph1">`ToString(string format)`</ph> method.</source>
          <target state="translated">Mögliche Werte für <bpt id="p1">*</bpt>"FormatString"<ept id="p1">*</ept> sind identisch mit den Werten, die von des Objekts unterstützt <ph id="ph1">`ToString(string format)`</ph> Methode.</target>       </trans-unit>
        <trans-unit id="745" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object)">
          <source>If <bpt id="p1">*</bpt>formatString<ept id="p1">*</ept> is not specified and the object to be formatted implements the <ph id="ph1">&lt;xref:System.IFormattable&gt;</ph> interface, <ph id="ph2">`null`</ph> is passed as the value of the <ph id="ph3">`format`</ph> parameter that is used as the <ph id="ph4">&lt;xref:System.IFormattable.ToString%2A?displayProperty=nameWithType&gt;</ph> format string.</source>
          <target state="translated">Wenn <bpt id="p1">*</bpt>"FormatString"<ept id="p1">*</ept> nicht angegeben wird und die zu formatierende Objekt implementiert die <ph id="ph1">&lt;xref:System.IFormattable&gt;</ph> -Schnittstelle, <ph id="ph2">`null`</ph> wird als Wert übergeben der <ph id="ph3">`format`</ph> Parameter, der verwendet wird, als die <ph id="ph4">&lt;xref:System.IFormattable.ToString%2A?displayProperty=nameWithType&gt;</ph> Formatzeichenfolge.</target>       </trans-unit>
        <trans-unit id="746" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object)">
          <source>The leading and trailing brace characters, "{" and "}", are required.</source>
          <target state="translated">Das führende und nachgestellte geschweifte Klammer "{" und "}", erforderlich sind.</target>       </trans-unit>
        <trans-unit id="747" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object)">
          <source>To specify a single literal brace character in <ph id="ph1">`format`</ph>, specify two leading or trailing brace characters; that is, "{{" or "}}".</source>
          <target state="translated">Um einen einzelnen literal geschweifte Klammer in <ph id="ph1">`format`</ph>, geben Sie zwei führende oder nachgestellte geschweifte; d. h. "{{" oder "}}".</target>       </trans-unit>
        <trans-unit id="748" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object)">
          <source>This method does not search the specified string for individual newline characters (hexadecimal 0x000a) and replace them with <ph id="ph1">&lt;xref:System.IO.TextWriter.NewLine%2A&gt;</ph>.</source>
          <target state="translated">Diese Methode nicht die angegebene Zeichenfolge für die einzelnen neue Zeilenumbruchzeichen (hexadezimal 0x000a) zu suchen und Ersetzen Sie sie durch <ph id="ph1">&lt;xref:System.IO.TextWriter.NewLine%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="749" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object)">
          <source>If a specified object is not referenced in the format string, it is ignored.</source>
          <target state="translated">Wenn ein angegebenes Objekt nicht in der Formatzeichenfolge verwiesen wird, wird es ignoriert.</target>       </trans-unit>
        <trans-unit id="750" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object)">
          <source>The line terminator is defined by the <ph id="ph1">&lt;xref:System.IO.TextWriter.CoreNewLine&gt;</ph> field.</source>
          <target state="translated">Die für den Zeilenabschluss wird definiert, indem die <ph id="ph1">&lt;xref:System.IO.TextWriter.CoreNewLine&gt;</ph> Feld.</target>       </trans-unit>
        <trans-unit id="751" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object)">
          <source>For a list of common I/O tasks, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</source>
          <target state="translated">Eine Liste der allgemeinen e/a-Aufgaben finden Sie <bpt id="p1">[</bpt>allgemeine e/a-Aufgaben<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</target>       </trans-unit>
        <trans-unit id="752" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object)">
          <source><ph id="ph1">&lt;paramref name="format" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="format" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="753" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> is closed.</source>
          <target state="translated">Der <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> ist geschlossen.</target>       </trans-unit>
        <trans-unit id="754" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object)">
          <source>An I/O error occurs.</source>
          <target state="translated">Ein E/A-Fehler tritt auf.</target>       </trans-unit>
        <trans-unit id="755" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object)">
          <source><ph id="ph1">&lt;paramref name="format" /&gt;</ph> is not a valid composite format string.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="format" /&gt;</ph> ist keine gültige kombinierte Formatzeichenfolge.</target>       </trans-unit>
        <trans-unit id="756" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object)">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="757" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object)">
          <source>The index of a format item is less than 0 (zero), or greater than or equal to the number of objects to be formatted (which, for this method overload, is two).</source>
          <target state="translated">Der Index eines Formatelements ist kleiner als 0 (null) oder größer/gleich der Anzahl der zu formatierenden Objekte (2 für diese Methodenüberladung).</target>       </trans-unit>
        <trans-unit id="758" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object,System.Object)">
          <source>A composite format string.</source>
          <target state="translated">Eine kombinierte Formatzeichenfolge.</target>       </trans-unit>
        <trans-unit id="759" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object,System.Object)">
          <source>The first object to format and write.</source>
          <target state="translated">Das erste zu formatierende und zu schreibende Objekt.</target>       </trans-unit>
        <trans-unit id="760" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object,System.Object)">
          <source>The second object to format and write.</source>
          <target state="translated">Das zweite zu formatierende und zu schreibende Objekt.</target>       </trans-unit>
        <trans-unit id="761" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object,System.Object)">
          <source>The third object to format and write.</source>
          <target state="translated">Das dritte zu formatierende und zu schreibende Objekt.</target>       </trans-unit>
        <trans-unit id="762" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object,System.Object)">
          <source>Writes out a formatted string and a new line, using the same semantics as <ph id="ph1">&lt;see cref="M:System.String.Format(System.String,System.Object)" /&gt;</ph>.</source>
          <target state="translated">Schreibt eine formatierte Zeichenfolge und eine neue Zeile unter Verwendung der gleichen Semantik wie bei <ph id="ph1">&lt;see cref="M:System.String.Format(System.String,System.Object)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="763" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object,System.Object)">
          <source>This method uses composite formatting to convert the value of an object to its string representation and to embed that representation in a string.</source>
          <target state="translated">Diese Methode verwendet die kombinierte Formatierung auf den Wert eines Objekts in seine Zeichenfolgendarstellung zu konvertieren und diese Darstellung in einer Zeichenfolge einzubetten.</target>       </trans-unit>
        <trans-unit id="764" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object,System.Object)">
          <source>.NET provides extensive formatting support, which is described in greater detail in the following formatting topics:</source>
          <target state="translated">.NET bietet eine umfangreiche formatierungsunterstützung, dies wird in den folgenden Themen zur Formatierung ausführlicher beschrieben:</target>       </trans-unit>
        <trans-unit id="765" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object,System.Object)">
          <source>For more information about the composite formatting feature, see <bpt id="p1">[</bpt>Composite Formatting<ept id="p1">](~/docs/standard/base-types/composite-formatting.md)</ept>.</source>
          <target state="translated">Weitere Informationen zur Funktion für kombinierte Formatierung finden Sie unter <bpt id="p1">[</bpt>kombinierte Formatierung<ept id="p1">](~/docs/standard/base-types/composite-formatting.md)</ept>.</target>       </trans-unit>
        <trans-unit id="766" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object,System.Object)">
          <source>For more information about numeric format specifiers, see <bpt id="p1">[</bpt>Standard Numeric Format Strings<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept> and <bpt id="p2">[</bpt>Custom Numeric Format Strings<ept id="p2">](~/docs/standard/base-types/custom-numeric-format-strings.md)</ept>.</source>
          <target state="translated">Weitere Informationen zu numerischen Formatbezeichnern finden Sie unter <bpt id="p1">[</bpt>Standard Numeric Format Strings<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept> und <bpt id="p2">[</bpt>benutzerdefinierte Zahlenformatzeichenfolgen<ept id="p2">](~/docs/standard/base-types/custom-numeric-format-strings.md)</ept>.</target>       </trans-unit>
        <trans-unit id="767" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object,System.Object)">
          <source>For more information about date and time format specifiers, see <bpt id="p1">[</bpt>Standard Date and Time Format Strings<ept id="p1">](~/docs/standard/base-types/standard-date-and-time-format-strings.md)</ept> and <bpt id="p2">[</bpt>Custom Date and Time Format Strings<ept id="p2">](~/docs/standard/base-types/custom-date-and-time-format-strings.md)</ept>.</source>
          <target state="translated">Weitere Informationen über Datum und Uhrzeit, die Formatbezeichner finden Sie unter <bpt id="p1">[</bpt>Standardformatbezeichner für Datum und Uhrzeit-Formatzeichenfolgen<ept id="p1">](~/docs/standard/base-types/standard-date-and-time-format-strings.md)</ept> und <bpt id="p2">[</bpt>benutzerdefinierte Datums- und Uhrzeit-Formatzeichenfolgen<ept id="p2">](~/docs/standard/base-types/custom-date-and-time-format-strings.md)</ept>.</target>       </trans-unit>
        <trans-unit id="768" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object,System.Object)">
          <source>For more information about enumeration format specifiers, see <bpt id="p1">[</bpt>Enumeration Format Strings<ept id="p1">](~/docs/standard/base-types/enumeration-format-strings.md)</ept>.</source>
          <target state="translated">Weitere Informationen zu Formatbezeichnern finden Sie unter <bpt id="p1">[</bpt>Enumerationsformatzeichenfolgen<ept id="p1">](~/docs/standard/base-types/enumeration-format-strings.md)</ept>.</target>       </trans-unit>
        <trans-unit id="769" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object,System.Object)">
          <source>For more information about formatting, see <bpt id="p1">[</bpt>Formatting Types<ept id="p1">](~/docs/standard/base-types/formatting-types.md)</ept>.</source>
          <target state="translated">Weitere Informationen zur Formatierung finden Sie unter <bpt id="p1">[</bpt>Formatierung von Typen<ept id="p1">](~/docs/standard/base-types/formatting-types.md)</ept>.</target>       </trans-unit>
        <trans-unit id="770" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object,System.Object)">
          <source>The <ph id="ph1">`format`</ph> parameter consists of zero or more runs of text intermixed with zero or more indexed placeholders, called format items, that correspond to an object in the parameter list of this method.</source>
          <target state="translated">Die <ph id="ph1">`format`</ph> -Parameter besteht aus 0 (null) oder mehreren Einheiten Text mit NULL oder mehr indizierten Platzhaltern enthalten, so genannten Formatelementen, die ein Objekt in der Parameterliste dieser Methode entsprechen.</target>       </trans-unit>
        <trans-unit id="771" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object,System.Object)">
          <source>The formatting process replaces each format item with the string representation of the value of the corresponding object.</source>
          <target state="translated">Der Formatierungsvorgang wird jedes Formatelement durch die Zeichenfolgendarstellung des Werts des entsprechenden Objekts ersetzt.</target>       </trans-unit>
        <trans-unit id="772" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object,System.Object)">
          <source>The syntax of a format item is as follows:</source>
          <target state="translated">Die Syntax eines Formatelements lautet wie folgt:</target>       </trans-unit>
        <trans-unit id="773" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object,System.Object)">
          <source>{<bpt id="p1">*</bpt>index<ept id="p1">*</ept>[,<bpt id="p2">*</bpt>length<ept id="p2">*</ept>][:<bpt id="p3">*</bpt>formatString<ept id="p3">*</ept>]}</source>
          <target state="translated">{<bpt id="p1">*</bpt>Index<ept id="p1">*</ept>[,<bpt id="p2">*</bpt>Länge<ept id="p2">*</ept>] [:<bpt id="p3">*</bpt>"FormatString"<ept id="p3">*</ept>]}</target>       </trans-unit>
        <trans-unit id="774" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object,System.Object)">
          <source>Elements in square brackets are optional.</source>
          <target state="translated">Elemente in eckigen Klammern sind optional.</target>       </trans-unit>
        <trans-unit id="775" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object,System.Object)">
          <source>The following table describes each element.</source>
          <target state="translated">In der folgenden Tabelle wird jedes Element beschrieben.</target>       </trans-unit>
        <trans-unit id="776" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object,System.Object)">
          <source>For more information about the composite formatting feature, including the syntax of a format item, see <bpt id="p1">[</bpt>Composite Formatting<ept id="p1">](~/docs/standard/base-types/composite-formatting.md)</ept>.</source>
          <target state="translated">Weitere Informationen zu der Funktion für kombinierte Formatierung, einschließlich der Syntax eines Formatelements, finden Sie unter <bpt id="p1">[</bpt>kombinierte Formatierung<ept id="p1">](~/docs/standard/base-types/composite-formatting.md)</ept>.</target>       </trans-unit>
        <trans-unit id="777" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object,System.Object)">
          <source>Element</source>
          <target state="translated">Element</target>       </trans-unit>
        <trans-unit id="778" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object,System.Object)">
          <source>Description</source>
          <target state="translated">Beschreibung </target>       </trans-unit>
        <trans-unit id="779" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object,System.Object)">
          <source>index</source>
          <target state="translated">Index</target>       </trans-unit>
        <trans-unit id="780" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object,System.Object)">
          <source>The zero-based position in the parameter list of the object to be formatted.</source>
          <target state="translated">Die nullbasierte Position in der Parameterliste des Objekts, das formatiert werden.</target>       </trans-unit>
        <trans-unit id="781" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object,System.Object)">
          <source>If the object specified by <bpt id="p1">*</bpt>index<ept id="p1">*</ept> is <ph id="ph1">`null`</ph>, the format item is replaced by <ph id="ph2">&lt;xref:System.String.Empty?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Wenn das Objekt vom angegebenen <bpt id="p1">*</bpt>Index<ept id="p1">*</ept> ist <ph id="ph1">`null`</ph>, das Formatelement wird durch ersetzt <ph id="ph2">&lt;xref:System.String.Empty?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="782" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object,System.Object)">
          <source>Because this overload has three objects in its parameter list, the value of <bpt id="p1">*</bpt>index<ept id="p1">*</ept> must always be 0, 1, or 2.</source>
          <target state="translated">Da diese Überladung drei Objekte im Parameter aufzulisten, den Wert der <bpt id="p1">*</bpt>Index<ept id="p1">*</ept> muss immer 0, 1 oder 2 sein.</target>       </trans-unit>
        <trans-unit id="783" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object,System.Object)">
          <source>If there is no parameter in the <bpt id="p1">*</bpt>index<ept id="p1">*</ept> position, a <ph id="ph1">&lt;xref:System.FormatException&gt;</ph> is thrown.</source>
          <target state="translated">Wenn es keinen Parameter in gibt der <bpt id="p1">*</bpt>Index<ept id="p1">*</ept> Position eine <ph id="ph1">&lt;xref:System.FormatException&gt;</ph> ausgelöst wird.</target>       </trans-unit>
        <trans-unit id="784" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object,System.Object)">
          <source>,<bpt id="p1">*</bpt>length<ept id="p1">*</ept></source>
          <target state="translated">,<bpt id="p1">*</bpt>length<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="785" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object,System.Object)">
          <source>The minimum number of characters in the string representation of the parameter.</source>
          <target state="translated">Die minimale Anzahl von Zeichen in eine Zeichenfolgendarstellung des Parameters.</target>       </trans-unit>
        <trans-unit id="786" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object,System.Object)">
          <source>If positive, the parameter is right-aligned; if negative, it is left-aligned.</source>
          <target state="translated">Wenn positiv ist, ist der Parameter rechts ausgerichteten; Wenn Sie negativ ist, ist es linksbündig ausgerichtet.</target>       </trans-unit>
        <trans-unit id="787" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object,System.Object)">
          <source>:<bpt id="p1">*</bpt>formatString<ept id="p1">*</ept></source>
          <target state="translated">:<bpt id="p1">*</bpt>formatString<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="788" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object,System.Object)">
          <source>A standard or custom format string that is supported by the object to be formatted.</source>
          <target state="translated">Eine standardmäßige oder benutzerdefinierte Formatierungszeichenfolge, die von der zu formatierende Objekt unterstützt wird.</target>       </trans-unit>
        <trans-unit id="789" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object,System.Object)">
          <source>Possible values for <bpt id="p1">*</bpt>formatString<ept id="p1">*</ept> are the same as the values supported by the object's <ph id="ph1">`ToString(string format)`</ph> method.</source>
          <target state="translated">Mögliche Werte für <bpt id="p1">*</bpt>"FormatString"<ept id="p1">*</ept> sind identisch mit den Werten, die von des Objekts unterstützt <ph id="ph1">`ToString(string format)`</ph> Methode.</target>       </trans-unit>
        <trans-unit id="790" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object,System.Object)">
          <source>If <bpt id="p1">*</bpt>formatString<ept id="p1">*</ept> is not specified and the object to be formatted implements the <ph id="ph1">&lt;xref:System.IFormattable&gt;</ph> interface, <ph id="ph2">`null`</ph> is passed as the value of the <ph id="ph3">`format`</ph> parameter that is used as the <ph id="ph4">&lt;xref:System.IFormattable.ToString%2A?displayProperty=nameWithType&gt;</ph> format string.</source>
          <target state="translated">Wenn <bpt id="p1">*</bpt>"FormatString"<ept id="p1">*</ept> nicht angegeben wird und die zu formatierende Objekt implementiert die <ph id="ph1">&lt;xref:System.IFormattable&gt;</ph> -Schnittstelle, <ph id="ph2">`null`</ph> wird als Wert übergeben der <ph id="ph3">`format`</ph> Parameter, der verwendet wird, als die <ph id="ph4">&lt;xref:System.IFormattable.ToString%2A?displayProperty=nameWithType&gt;</ph> Formatzeichenfolge.</target>       </trans-unit>
        <trans-unit id="791" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object,System.Object)">
          <source>The leading and trailing brace characters, "{" and "}", are required.</source>
          <target state="translated">Das führende und nachgestellte geschweifte Klammer "{" und "}", erforderlich sind.</target>       </trans-unit>
        <trans-unit id="792" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object,System.Object)">
          <source>To specify a single literal brace character in <ph id="ph1">`format`</ph>, specify two leading or trailing brace characters; that is, "{{" or "}}".</source>
          <target state="translated">Um einen einzelnen literal geschweifte Klammer in <ph id="ph1">`format`</ph>, geben Sie zwei führende oder nachgestellte geschweifte; d. h. "{{" oder "}}".</target>       </trans-unit>
        <trans-unit id="793" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object,System.Object)">
          <source>This method does not search the specified string for individual newline characters (hexadecimal 0x000a) and replace them with <ph id="ph1">&lt;xref:System.IO.TextWriter.NewLine%2A&gt;</ph>.</source>
          <target state="translated">Diese Methode nicht die angegebene Zeichenfolge für die einzelnen neue Zeilenumbruchzeichen (hexadezimal 0x000a) zu suchen und Ersetzen Sie sie durch <ph id="ph1">&lt;xref:System.IO.TextWriter.NewLine%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="794" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object,System.Object)">
          <source>If a specified object is not referenced in the format string, it is ignored.</source>
          <target state="translated">Wenn ein angegebenes Objekt nicht in der Formatzeichenfolge verwiesen wird, wird es ignoriert.</target>       </trans-unit>
        <trans-unit id="795" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object,System.Object)">
          <source>The line terminator is defined by the <ph id="ph1">&lt;xref:System.IO.TextWriter.CoreNewLine&gt;</ph> field.</source>
          <target state="translated">Die für den Zeilenabschluss wird definiert, indem die <ph id="ph1">&lt;xref:System.IO.TextWriter.CoreNewLine&gt;</ph> Feld.</target>       </trans-unit>
        <trans-unit id="796" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object,System.Object)">
          <source>For a list of common I/O tasks, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</source>
          <target state="translated">Eine Liste der allgemeinen e/a-Aufgaben finden Sie <bpt id="p1">[</bpt>allgemeine e/a-Aufgaben<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</target>       </trans-unit>
        <trans-unit id="797" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object,System.Object)">
          <source><ph id="ph1">&lt;paramref name="format" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="format" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="798" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> is closed.</source>
          <target state="translated">Der <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> ist geschlossen.</target>       </trans-unit>
        <trans-unit id="799" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object,System.Object)">
          <source>An I/O error occurs.</source>
          <target state="translated">Ein E/A-Fehler tritt auf.</target>       </trans-unit>
        <trans-unit id="800" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object,System.Object)">
          <source><ph id="ph1">&lt;paramref name="format" /&gt;</ph> is not a valid composite format string.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="format" /&gt;</ph> ist keine gültige kombinierte Formatzeichenfolge.</target>       </trans-unit>
        <trans-unit id="801" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object,System.Object)">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="802" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object,System.Object)">
          <source>The index of a format item is less than 0 (zero), or greater than or equal to the number of objects to be formatted (which, for this method overload, is three).</source>
          <target state="translated">Der Index eines Formatelements ist kleiner als 0 (null) oder größer/gleich der Anzahl der zu formatierenden Objekte (3 für diese Methodenüberladung).</target>       </trans-unit>
        <trans-unit id="803" translate="yes" xml:space="preserve" uid="T:System.IO.TextWriter">
          <source>Writes data followed by a line terminator asynchronously to the text string or stream.</source>
          <target state="translated">Schreibt Daten, gefolgt von einem Zeichen für den Zeilenabschluss, asynchron in die Textzeichenfolge oder den Stream.</target>       </trans-unit>
        <trans-unit id="804" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLineAsync">
          <source>Writes a line terminator asynchronously to the text string or stream.</source>
          <target state="translated">Schreibt ein Zeichen für den Zeilenabschluss asynchron in die Textzeichenfolge oder den Stream.</target>       </trans-unit>
        <trans-unit id="805" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLineAsync">
          <source>A task that represents the asynchronous write operation.</source>
          <target state="translated">Eine Aufgabe, die den asynchronen Schreibvorgang darstellt.</target>       </trans-unit>
        <trans-unit id="806" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLineAsync">
          <source>The line terminator is defined by the <ph id="ph1">&lt;xref:System.IO.TextWriter.CoreNewLine&gt;</ph> field.</source>
          <target state="translated">Die für den Zeilenabschluss wird definiert, indem die <ph id="ph1">&lt;xref:System.IO.TextWriter.CoreNewLine&gt;</ph> Feld.</target>       </trans-unit>
        <trans-unit id="807" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLineAsync">
          <source>The text writer is disposed.</source>
          <target state="translated">Der Textwriter wird freigegeben.</target>       </trans-unit>
        <trans-unit id="808" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLineAsync">
          <source>The text writer is currently in use by a previous write operation.</source>
          <target state="translated">Der Textwriter wird derzeit von einem vorherigen Schreibvorgang verwendet.</target>       </trans-unit>
        <trans-unit id="809" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLineAsync(System.Char)">
          <source>The character to write to the text stream.</source>
          <target state="translated">Das in den Textstream zu schreibende Zeichen.</target>       </trans-unit>
        <trans-unit id="810" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLineAsync(System.Char)">
          <source>Writes a character followed by a line terminator asynchronously to the text string or stream.</source>
          <target state="translated">Schreibt ein Zeichen, gefolgt von einem Zeichen für den Zeilenabschluss, asynchron in die Textzeichenfolge oder den Stream.</target>       </trans-unit>
        <trans-unit id="811" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLineAsync(System.Char)">
          <source>A task that represents the asynchronous write operation.</source>
          <target state="translated">Eine Aufgabe, die den asynchronen Schreibvorgang darstellt.</target>       </trans-unit>
        <trans-unit id="812" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLineAsync(System.Char)">
          <source>The line terminator is defined by the <ph id="ph1">&lt;xref:System.IO.TextWriter.CoreNewLine&gt;</ph> field.</source>
          <target state="translated">Die für den Zeilenabschluss wird definiert, indem die <ph id="ph1">&lt;xref:System.IO.TextWriter.CoreNewLine&gt;</ph> Feld.</target>       </trans-unit>
        <trans-unit id="813" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLineAsync(System.Char)">
          <source>The <ph id="ph1">&lt;xref:System.IO.TextWriter&gt;</ph> class is an abstract class.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.IO.TextWriter&gt;</ph>-Klasse stellt eine abstrakte Klasse dar.</target>       </trans-unit>
        <trans-unit id="814" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLineAsync(System.Char)">
          <source>Therefore, you do not instantiate it in your code.</source>
          <target state="translated">Aus diesem Grund ist es nicht in Ihrem Code instanziiert werden.</target>       </trans-unit>
        <trans-unit id="815" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLineAsync(System.Char)">
          <source>For an example of using the <ph id="ph1">&lt;xref:System.IO.TextWriter.WriteLineAsync%2A&gt;</ph> method, see the <ph id="ph2">&lt;xref:System.IO.StreamWriter.WriteLineAsync%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">Ein Beispiel der Verwendung der <ph id="ph1">&lt;xref:System.IO.TextWriter.WriteLineAsync%2A&gt;</ph> -Methode finden Sie unter der <ph id="ph2">&lt;xref:System.IO.StreamWriter.WriteLineAsync%2A?displayProperty=nameWithType&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="816" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLineAsync(System.Char)">
          <source>The text writer is disposed.</source>
          <target state="translated">Der Textwriter wird freigegeben.</target>       </trans-unit>
        <trans-unit id="817" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLineAsync(System.Char)">
          <source>The text writer is currently in use by a previous write operation.</source>
          <target state="translated">Der Textwriter wird derzeit von einem vorherigen Schreibvorgang verwendet.</target>       </trans-unit>
        <trans-unit id="818" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLineAsync(System.Char[])">
          <source>The character array to write to the text stream.</source>
          <target state="translated">Das in den Textstream zu schreibende Zeichenarray.</target>       </trans-unit>
        <trans-unit id="819" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLineAsync(System.Char[])">
          <source>If the character array is <ph id="ph1">&lt;see langword="null" /&gt;</ph>, only the line terminator is written.</source>
          <target state="translated">Wenn das Zeichenarray <ph id="ph1">&lt;see langword="null" /&gt;</ph> ist, wird nur das Zeichen für den Zeilenabschluss geschrieben.</target>       </trans-unit>
        <trans-unit id="820" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLineAsync(System.Char[])">
          <source>Writes an array of characters followed by a line terminator asynchronously to the text string or stream.</source>
          <target state="translated">Schreibt ein Array von Zeichen, gefolgt von einem Zeichen für den Zeilenabschluss, asynchron in die Textzeichenfolge oder den Stream.</target>       </trans-unit>
        <trans-unit id="821" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLineAsync(System.Char[])">
          <source>A task that represents the asynchronous write operation.</source>
          <target state="translated">Eine Aufgabe, die den asynchronen Schreibvorgang darstellt.</target>       </trans-unit>
        <trans-unit id="822" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLineAsync(System.Char[])">
          <source>The line terminator is defined by the <ph id="ph1">&lt;xref:System.IO.TextWriter.CoreNewLine&gt;</ph> field.</source>
          <target state="translated">Die für den Zeilenabschluss wird definiert, indem die <ph id="ph1">&lt;xref:System.IO.TextWriter.CoreNewLine&gt;</ph> Feld.</target>       </trans-unit>
        <trans-unit id="823" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLineAsync(System.Char[])">
          <source>The text writer is disposed.</source>
          <target state="translated">Der Textwriter wird freigegeben.</target>       </trans-unit>
        <trans-unit id="824" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLineAsync(System.Char[])">
          <source>The text writer is currently in use by a previous write operation.</source>
          <target state="translated">Der Textwriter wird derzeit von einem vorherigen Schreibvorgang verwendet.</target>       </trans-unit>
        <trans-unit id="825" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLineAsync(System.String)">
          <source>The string to write.</source>
          <target state="translated">Die zu schreibende Zeichenfolge.</target>       </trans-unit>
        <trans-unit id="826" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLineAsync(System.String)">
          <source>If the value is <ph id="ph1">&lt;see langword="null" /&gt;</ph>, only a line terminator is written.</source>
          <target state="translated">Wenn der Wert <ph id="ph1">&lt;see langword="null" /&gt;</ph> ist, wird nur ein Zeichen für den Zeilenabschluss geschrieben.</target>       </trans-unit>
        <trans-unit id="827" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLineAsync(System.String)">
          <source>Writes a string followed by a line terminator asynchronously to the text string or stream.</source>
          <target state="translated">Schreibt eine Zeichenfolge, gefolgt von einem Zeichen für den Zeilenabschluss, asynchron in die Textzeichenfolge oder den Stream.</target>       </trans-unit>
        <trans-unit id="828" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLineAsync(System.String)">
          <source>A task that represents the asynchronous write operation.</source>
          <target state="translated">Eine Aufgabe, die den asynchronen Schreibvorgang darstellt.</target>       </trans-unit>
        <trans-unit id="829" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLineAsync(System.String)">
          <source>The line terminator is defined by the <ph id="ph1">&lt;xref:System.IO.TextWriter.CoreNewLine&gt;</ph> field.</source>
          <target state="translated">Die für den Zeilenabschluss wird definiert, indem die <ph id="ph1">&lt;xref:System.IO.TextWriter.CoreNewLine&gt;</ph> Feld.</target>       </trans-unit>
        <trans-unit id="830" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLineAsync(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.IO.TextWriter&gt;</ph> class is an abstract class.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.IO.TextWriter&gt;</ph>-Klasse stellt eine abstrakte Klasse dar.</target>       </trans-unit>
        <trans-unit id="831" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLineAsync(System.String)">
          <source>Therefore, you do not instantiate it in your code.</source>
          <target state="translated">Aus diesem Grund ist es nicht in Ihrem Code instanziiert werden.</target>       </trans-unit>
        <trans-unit id="832" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLineAsync(System.String)">
          <source>For an example of using the <ph id="ph1">&lt;xref:System.IO.TextWriter.WriteLineAsync%2A&gt;</ph> method, see the <ph id="ph2">&lt;xref:System.IO.StreamWriter.WriteLineAsync%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">Ein Beispiel der Verwendung der <ph id="ph1">&lt;xref:System.IO.TextWriter.WriteLineAsync%2A&gt;</ph> -Methode finden Sie unter der <ph id="ph2">&lt;xref:System.IO.StreamWriter.WriteLineAsync%2A?displayProperty=nameWithType&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="833" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLineAsync(System.String)">
          <source>The text writer is disposed.</source>
          <target state="translated">Der Textwriter wird freigegeben.</target>       </trans-unit>
        <trans-unit id="834" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLineAsync(System.String)">
          <source>The text writer is currently in use by a previous write operation.</source>
          <target state="translated">Der Textwriter wird derzeit von einem vorherigen Schreibvorgang verwendet.</target>       </trans-unit>
        <trans-unit id="835" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLineAsync(System.Char[],System.Int32,System.Int32)">
          <source>The character array to write data from.</source>
          <target state="translated">Das Zeichenarray, aus dem Daten geschrieben werden sollen.</target>       </trans-unit>
        <trans-unit id="836" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLineAsync(System.Char[],System.Int32,System.Int32)">
          <source>The character position in the buffer at which to start retrieving data.</source>
          <target state="translated">Die Zeichenposition im Puffer, an der mit dem Abrufen von Daten begonnen werden soll.</target>       </trans-unit>
        <trans-unit id="837" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLineAsync(System.Char[],System.Int32,System.Int32)">
          <source>The number of characters to write.</source>
          <target state="translated">Die Anzahl der zu schreibenden Zeichen.</target>       </trans-unit>
        <trans-unit id="838" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLineAsync(System.Char[],System.Int32,System.Int32)">
          <source>Writes a subarray of characters followed by a line terminator asynchronously to the text string or stream.</source>
          <target state="translated">Schreibt ein Teilarray von Zeichen, gefolgt von einem Zeichen für den Zeilenabschluss, asynchron in die Textzeichenfolge oder den Stream.</target>       </trans-unit>
        <trans-unit id="839" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLineAsync(System.Char[],System.Int32,System.Int32)">
          <source>A task that represents the asynchronous write operation.</source>
          <target state="translated">Eine Aufgabe, die den asynchronen Schreibvorgang darstellt.</target>       </trans-unit>
        <trans-unit id="840" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLineAsync(System.Char[],System.Int32,System.Int32)">
          <source>The line terminator is defined by the <ph id="ph1">&lt;xref:System.IO.TextWriter.CoreNewLine&gt;</ph> field.</source>
          <target state="translated">Die für den Zeilenabschluss wird definiert, indem die <ph id="ph1">&lt;xref:System.IO.TextWriter.CoreNewLine&gt;</ph> Feld.</target>       </trans-unit>
        <trans-unit id="841" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLineAsync(System.Char[],System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.IO.TextWriter&gt;</ph> class is an abstract class.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.IO.TextWriter&gt;</ph>-Klasse stellt eine abstrakte Klasse dar.</target>       </trans-unit>
        <trans-unit id="842" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLineAsync(System.Char[],System.Int32,System.Int32)">
          <source>Therefore, you do not instantiate it in your code.</source>
          <target state="translated">Aus diesem Grund ist es nicht in Ihrem Code instanziiert werden.</target>       </trans-unit>
        <trans-unit id="843" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLineAsync(System.Char[],System.Int32,System.Int32)">
          <source>For an example of using the <ph id="ph1">&lt;xref:System.IO.TextWriter.WriteLineAsync%2A&gt;</ph> method, see the <ph id="ph2">&lt;xref:System.IO.StreamWriter.WriteLineAsync%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">Ein Beispiel der Verwendung der <ph id="ph1">&lt;xref:System.IO.TextWriter.WriteLineAsync%2A&gt;</ph> -Methode finden Sie unter der <ph id="ph2">&lt;xref:System.IO.StreamWriter.WriteLineAsync%2A?displayProperty=nameWithType&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="844" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLineAsync(System.Char[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="845" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLineAsync(System.Char[],System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;paramref name="index" /&gt;</ph> plus <ph id="ph2">&lt;paramref name="count" /&gt;</ph> is greater than the buffer length.</source>
          <target state="translated">Der <ph id="ph1">&lt;paramref name="index" /&gt;</ph> und <ph id="ph2">&lt;paramref name="count" /&gt;</ph> ist größer als die Pufferlänge.</target>       </trans-unit>
        <trans-unit id="846" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLineAsync(System.Char[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> or <ph id="ph2">&lt;paramref name="count" /&gt;</ph> is negative.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> oder <ph id="ph2">&lt;paramref name="count" /&gt;</ph> ist ein negativer Wert.</target>       </trans-unit>
        <trans-unit id="847" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLineAsync(System.Char[],System.Int32,System.Int32)">
          <source>The text writer is disposed.</source>
          <target state="translated">Der Textwriter wird freigegeben.</target>       </trans-unit>
        <trans-unit id="848" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLineAsync(System.Char[],System.Int32,System.Int32)">
          <source>The text writer is currently in use by a previous write operation.</source>
          <target state="translated">Der Textwriter wird derzeit von einem vorherigen Schreibvorgang verwendet.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>