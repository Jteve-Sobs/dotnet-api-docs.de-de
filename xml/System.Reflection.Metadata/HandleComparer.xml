<Type Name="HandleComparer" FullName="System.Reflection.Metadata.HandleComparer">
  <Metadata><Meta Name="ms.openlocfilehash" Value="776fb8d941ff9c09245b6c0cb1cd9de3f5e51b60" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86792578" /></Metadata><TypeSignature Language="C#" Value="public sealed class HandleComparer : System.Collections.Generic.IComparer&lt;System.Reflection.Metadata.EntityHandle&gt;, System.Collections.Generic.IComparer&lt;System.Reflection.Metadata.Handle&gt;, System.Collections.Generic.IEqualityComparer&lt;System.Reflection.Metadata.EntityHandle&gt;, System.Collections.Generic.IEqualityComparer&lt;System.Reflection.Metadata.Handle&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit HandleComparer extends System.Object implements class System.Collections.Generic.IComparer`1&lt;valuetype System.Reflection.Metadata.EntityHandle&gt;, class System.Collections.Generic.IComparer`1&lt;valuetype System.Reflection.Metadata.Handle&gt;, class System.Collections.Generic.IEqualityComparer`1&lt;valuetype System.Reflection.Metadata.EntityHandle&gt;, class System.Collections.Generic.IEqualityComparer`1&lt;valuetype System.Reflection.Metadata.Handle&gt;" />
  <TypeSignature Language="DocId" Value="T:System.Reflection.Metadata.HandleComparer" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class HandleComparer&#xA;Implements IComparer(Of EntityHandle), IComparer(Of Handle), IEqualityComparer(Of EntityHandle), IEqualityComparer(Of Handle)" />
  <TypeSignature Language="C++ CLI" Value="public ref class HandleComparer sealed : System::Collections::Generic::IComparer&lt;System::Reflection::Metadata::EntityHandle&gt;, System::Collections::Generic::IComparer&lt;System::Reflection::Metadata::Handle&gt;, System::Collections::Generic::IEqualityComparer&lt;System::Reflection::Metadata::EntityHandle&gt;, System::Collections::Generic::IEqualityComparer&lt;System::Reflection::Metadata::Handle&gt;" />
  <TypeSignature Language="F#" Value="type HandleComparer = class&#xA;    interface IEqualityComparer&lt;Handle&gt;&#xA;    interface IComparer&lt;Handle&gt;&#xA;    interface IEqualityComparer&lt;EntityHandle&gt;&#xA;    interface IComparer&lt;EntityHandle&gt;" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1" />
  <TypeSignature Language="F#" Value="type HandleComparer = class&#xA;    interface IComparer&lt;EntityHandle&gt;&#xA;    interface IComparer&lt;Handle&gt;&#xA;    interface IEqualityComparer&lt;EntityHandle&gt;&#xA;    interface IEqualityComparer&lt;Handle&gt;" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1" />
  <AssemblyInfo>
    <AssemblyName>System.Reflection.Metadata</AssemblyName>
    <AssemblyVersion>1.0.22.0</AssemblyVersion>
    <AssemblyVersion>1.3.0.0</AssemblyVersion>
    <AssemblyVersion>1.4.1.0</AssemblyVersion>
    <AssemblyVersion>1.4.2.0</AssemblyVersion>
    <AssemblyVersion>1.4.3.0</AssemblyVersion>
    <AssemblyVersion>1.4.4.0</AssemblyVersion>
    <AssemblyVersion>1.4.5.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.IComparer&lt;System.Reflection.Metadata.EntityHandle&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IComparer&lt;System.Reflection.Metadata.Handle&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEqualityComparer&lt;System.Reflection.Metadata.EntityHandle&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEqualityComparer&lt;System.Reflection.Metadata.Handle&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Compare">
      <MemberSignature Language="C#" Value="public int Compare (System.Reflection.Metadata.EntityHandle x, System.Reflection.Metadata.EntityHandle y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Compare(valuetype System.Reflection.Metadata.EntityHandle x, valuetype System.Reflection.Metadata.EntityHandle y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.HandleComparer.Compare(System.Reflection.Metadata.EntityHandle,System.Reflection.Metadata.EntityHandle)" />
      <MemberSignature Language="VB.NET" Value="Public Function Compare (x As EntityHandle, y As EntityHandle) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int Compare(System::Reflection::Metadata::EntityHandle x, System::Reflection::Metadata::EntityHandle y);" />
      <MemberSignature Language="F#" Value="abstract member Compare : System.Reflection.Metadata.EntityHandle * System.Reflection.Metadata.EntityHandle -&gt; int&#xA;override this.Compare : System.Reflection.Metadata.EntityHandle * System.Reflection.Metadata.EntityHandle -&gt; int" Usage="handleComparer.Compare (x, y)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IComparer`1.Compare(`0,`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.0.22.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
        <AssemblyVersion>1.4.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Reflection.Metadata.EntityHandle" />
        <Parameter Name="y" Type="System.Reflection.Metadata.EntityHandle" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="936c7-101">Das erste zu vergleichende Entitätshandle.</span><span class="sxs-lookup"><span data-stu-id="936c7-101">The first entity handle to compare.</span></span></param>
        <param name="y"><span data-ttu-id="936c7-102">Das zweite zu vergleichende Entitätshandle.</span><span class="sxs-lookup"><span data-stu-id="936c7-102">The second entity handle to compare.</span></span></param>
        <summary><span data-ttu-id="936c7-103">Vergleicht zwei Entitätshandles.</span><span class="sxs-lookup"><span data-stu-id="936c7-103">Compares two entity handles.</span></span></summary>
        <returns><span data-ttu-id="936c7-104">Null (0), wenn die zwei Entitätshandles gleich sind, und ein Wert ungleich null (0), wenn nicht.</span><span class="sxs-lookup"><span data-stu-id="936c7-104">Zero if the two entity handles are equal, and a non-zero value of they are not.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="936c7-105">Gibt 0 (null) zurück, wenn <xref:System.Reflection.Metadata.HandleComparer.Equals(System.Reflection.Metadata.EntityHandle,System.Reflection.Metadata.EntityHandle)> zurückgibt `true` .</span><span class="sxs-lookup"><span data-stu-id="936c7-105">Returns 0 if and only if <xref:System.Reflection.Metadata.HandleComparer.Equals(System.Reflection.Metadata.EntityHandle,System.Reflection.Metadata.EntityHandle)> returns `true`.</span></span>

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Compare">
      <MemberSignature Language="C#" Value="public int Compare (System.Reflection.Metadata.Handle x, System.Reflection.Metadata.Handle y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Compare(valuetype System.Reflection.Metadata.Handle x, valuetype System.Reflection.Metadata.Handle y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.HandleComparer.Compare(System.Reflection.Metadata.Handle,System.Reflection.Metadata.Handle)" />
      <MemberSignature Language="VB.NET" Value="Public Function Compare (x As Handle, y As Handle) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int Compare(System::Reflection::Metadata::Handle x, System::Reflection::Metadata::Handle y);" />
      <MemberSignature Language="F#" Value="abstract member Compare : System.Reflection.Metadata.Handle * System.Reflection.Metadata.Handle -&gt; int&#xA;override this.Compare : System.Reflection.Metadata.Handle * System.Reflection.Metadata.Handle -&gt; int" Usage="handleComparer.Compare (x, y)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IComparer`1.Compare(`0,`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.0.22.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
        <AssemblyVersion>1.4.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Reflection.Metadata.Handle" />
        <Parameter Name="y" Type="System.Reflection.Metadata.Handle" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="936c7-106">Das erste zu vergleichende Handle.</span><span class="sxs-lookup"><span data-stu-id="936c7-106">The first handle to compare.</span></span></param>
        <param name="y"><span data-ttu-id="936c7-107">Das zweite zu vergleichende Handle.</span><span class="sxs-lookup"><span data-stu-id="936c7-107">The second handle to compare.</span></span></param>
        <summary><span data-ttu-id="936c7-108">Vergleicht zwei Handles.</span><span class="sxs-lookup"><span data-stu-id="936c7-108">Compares two handles.</span></span></summary>
        <returns><span data-ttu-id="936c7-109">Null (0), wenn die beiden Handles gleich sind, und ein Wert ungleich null (0), wenn nicht.</span><span class="sxs-lookup"><span data-stu-id="936c7-109">Zero if the two handles are equal, and a non-zero value if they are not.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="936c7-110">Die Reihenfolge der Handles, die sich in der Art unterscheiden und nicht <xref:System.Reflection.Metadata.EntityHandle> undefiniert sind.</span><span class="sxs-lookup"><span data-stu-id="936c7-110">The order of handles that differ in kind and are not <xref:System.Reflection.Metadata.EntityHandle> is undefined.</span></span>

<span data-ttu-id="936c7-111">Gibt 0 (null) zurück, wenn <xref:System.Reflection.Metadata.HandleComparer.Equals(System.Reflection.Metadata.Handle,System.Reflection.Metadata.Handle)> zurückgibt `true` .</span><span class="sxs-lookup"><span data-stu-id="936c7-111">Returns 0 if and only if <xref:System.Reflection.Metadata.HandleComparer.Equals(System.Reflection.Metadata.Handle,System.Reflection.Metadata.Handle)> returns `true`.</span></span>

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Default">
      <MemberSignature Language="C#" Value="public static System.Reflection.Metadata.HandleComparer Default { get; }" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".property class System.Reflection.Metadata.HandleComparer Default" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Metadata.HandleComparer.Default" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Default As HandleComparer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Reflection::Metadata::HandleComparer ^ Default { System::Reflection::Metadata::HandleComparer ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Default : System.Reflection.Metadata.HandleComparer" Usage="System.Reflection.Metadata.HandleComparer.Default" />
      <MemberSignature Language="C#" Value="public static System.Reflection.Metadata.HandleComparer? Default { get; }" FrameworkAlternate="net-5.0" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.0.22.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
        <AssemblyVersion>1.4.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Metadata.HandleComparer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (System.Reflection.Metadata.EntityHandle x, System.Reflection.Metadata.EntityHandle y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(valuetype System.Reflection.Metadata.EntityHandle x, valuetype System.Reflection.Metadata.EntityHandle y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.HandleComparer.Equals(System.Reflection.Metadata.EntityHandle,System.Reflection.Metadata.EntityHandle)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (x As EntityHandle, y As EntityHandle) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Equals(System::Reflection::Metadata::EntityHandle x, System::Reflection::Metadata::EntityHandle y);" />
      <MemberSignature Language="F#" Value="override this.Equals : System.Reflection.Metadata.EntityHandle * System.Reflection.Metadata.EntityHandle -&gt; bool" Usage="handleComparer.Equals (x, y)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEqualityComparer`1.Equals(`0,`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.0.22.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
        <AssemblyVersion>1.4.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Reflection.Metadata.EntityHandle" />
        <Parameter Name="y" Type="System.Reflection.Metadata.EntityHandle" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="936c7-112">Das erste zu vergleichende Objekt vom Typ <paramref name="T" />.</span><span class="sxs-lookup"><span data-stu-id="936c7-112">The first object of type <paramref name="T" /> to compare.</span></span></param>
        <param name="y"><span data-ttu-id="936c7-113">Das zweite zu vergleichende Objekt vom Typ <paramref name="T" />.</span><span class="sxs-lookup"><span data-stu-id="936c7-113">The second object of type <paramref name="T" /> to compare.</span></span></param>
        <summary><span data-ttu-id="936c7-114">Bestimmt, ob die angegebenen Objekte gleich sind.</span><span class="sxs-lookup"><span data-stu-id="936c7-114">Determines whether the specified objects are equal.</span></span></summary>
        <returns><span data-ttu-id="936c7-115"><see langword="true" />, wenn die angegebenen Objekte gleich sind, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="936c7-115"><see langword="true" /> if the specified objects are equal; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (System.Reflection.Metadata.Handle x, System.Reflection.Metadata.Handle y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(valuetype System.Reflection.Metadata.Handle x, valuetype System.Reflection.Metadata.Handle y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.HandleComparer.Equals(System.Reflection.Metadata.Handle,System.Reflection.Metadata.Handle)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (x As Handle, y As Handle) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Equals(System::Reflection::Metadata::Handle x, System::Reflection::Metadata::Handle y);" />
      <MemberSignature Language="F#" Value="override this.Equals : System.Reflection.Metadata.Handle * System.Reflection.Metadata.Handle -&gt; bool" Usage="handleComparer.Equals (x, y)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEqualityComparer`1.Equals(`0,`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.0.22.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
        <AssemblyVersion>1.4.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Reflection.Metadata.Handle" />
        <Parameter Name="y" Type="System.Reflection.Metadata.Handle" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="936c7-116">Das erste zu vergleichende Objekt vom Typ <paramref name="T" />.</span><span class="sxs-lookup"><span data-stu-id="936c7-116">The first object of type <paramref name="T" /> to compare.</span></span></param>
        <param name="y"><span data-ttu-id="936c7-117">Das zweite zu vergleichende Objekt vom Typ <paramref name="T" />.</span><span class="sxs-lookup"><span data-stu-id="936c7-117">The second object of type <paramref name="T" /> to compare.</span></span></param>
        <summary><span data-ttu-id="936c7-118">Bestimmt, ob die angegebenen Objekte gleich sind.</span><span class="sxs-lookup"><span data-stu-id="936c7-118">Determines whether the specified objects are equal.</span></span></summary>
        <returns><span data-ttu-id="936c7-119"><see langword="true" />, wenn die angegebenen Objekte gleich sind, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="936c7-119"><see langword="true" /> if the specified objects are equal; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public int GetHashCode (System.Reflection.Metadata.EntityHandle obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetHashCode(valuetype System.Reflection.Metadata.EntityHandle obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.HandleComparer.GetHashCode(System.Reflection.Metadata.EntityHandle)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetHashCode (obj As EntityHandle) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int GetHashCode(System::Reflection::Metadata::EntityHandle obj);" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : System.Reflection.Metadata.EntityHandle -&gt; int" Usage="handleComparer.GetHashCode obj" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEqualityComparer`1.GetHashCode(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.0.22.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
        <AssemblyVersion>1.4.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Reflection.Metadata.EntityHandle" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="936c7-120">Das <see cref="T:System.Object" />, für das ein Hashcode zurückgegeben werden soll.</span><span class="sxs-lookup"><span data-stu-id="936c7-120">The <see cref="T:System.Object" /> for which a hash code is to be returned.</span></span></param>
        <summary><span data-ttu-id="936c7-121">Gibt einen Hashcode für das angegebene Objekt zurück.</span><span class="sxs-lookup"><span data-stu-id="936c7-121">Returns a hash code for the specified object.</span></span></summary>
        <returns><span data-ttu-id="936c7-122">Ein Hashcode für das angegebene Objekt.</span><span class="sxs-lookup"><span data-stu-id="936c7-122">A hash code for the specified object.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public int GetHashCode (System.Reflection.Metadata.Handle obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetHashCode(valuetype System.Reflection.Metadata.Handle obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.HandleComparer.GetHashCode(System.Reflection.Metadata.Handle)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetHashCode (obj As Handle) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int GetHashCode(System::Reflection::Metadata::Handle obj);" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : System.Reflection.Metadata.Handle -&gt; int" Usage="handleComparer.GetHashCode obj" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEqualityComparer`1.GetHashCode(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.0.22.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
        <AssemblyVersion>1.4.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Reflection.Metadata.Handle" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="936c7-123">Das <see cref="T:System.Object" />, für das ein Hashcode zurückgegeben werden soll.</span><span class="sxs-lookup"><span data-stu-id="936c7-123">The <see cref="T:System.Object" /> for which a hash code is to be returned.</span></span></param>
        <summary><span data-ttu-id="936c7-124">Gibt einen Hashcode für das angegebene Objekt zurück.</span><span class="sxs-lookup"><span data-stu-id="936c7-124">Returns a hash code for the specified object.</span></span></summary>
        <returns><span data-ttu-id="936c7-125">Ein Hashcode für das angegebene Objekt.</span><span class="sxs-lookup"><span data-stu-id="936c7-125">A hash code for the specified object.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
