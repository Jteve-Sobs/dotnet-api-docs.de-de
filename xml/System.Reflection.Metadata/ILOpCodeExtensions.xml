<Type Name="ILOpCodeExtensions" FullName="System.Reflection.Metadata.ILOpCodeExtensions">
  <Metadata><Meta Name="ms.openlocfilehash" Value="783e2be4ec078caf7f63d1b4d5facdf0af30c970" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70670052" /></Metadata><TypeSignature Language="C#" Value="public static class ILOpCodeExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit ILOpCodeExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Reflection.Metadata.ILOpCodeExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module ILOpCodeExtensions" />
  <TypeSignature Language="C++ CLI" Value="public ref class ILOpCodeExtensions abstract sealed" />
  <TypeSignature Language="F#" Value="type ILOpCodeExtensions = class" />
  <AssemblyInfo>
    <AssemblyName>System.Reflection.Metadata</AssemblyName>
    <AssemblyVersion>1.4.1.0</AssemblyVersion>
    <AssemblyVersion>1.4.2.0</AssemblyVersion>
    <AssemblyVersion>1.4.3.0</AssemblyVersion>
    <AssemblyVersion>1.4.4.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="GetBranchOperandSize">
      <MemberSignature Language="C#" Value="public static int GetBranchOperandSize (this System.Reflection.Metadata.ILOpCode opCode);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 GetBranchOperandSize(valuetype System.Reflection.Metadata.ILOpCode opCode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.ILOpCodeExtensions.GetBranchOperandSize(System.Reflection.Metadata.ILOpCode)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetBranchOperandSize (opCode As ILOpCode) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static int GetBranchOperandSize(System::Reflection::Metadata::ILOpCode opCode);" />
      <MemberSignature Language="F#" Value="static member GetBranchOperandSize : System.Reflection.Metadata.ILOpCode -&gt; int" Usage="System.Reflection.Metadata.ILOpCodeExtensions.GetBranchOperandSize opCode" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="opCode" Type="System.Reflection.Metadata.ILOpCode" RefType="this" Index="0" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="opCode"><span data-ttu-id="46af1-101">Der Branch-Op-Code.</span><span class="sxs-lookup"><span data-stu-id="46af1-101">The branch op-code.</span></span></param>
        <summary><span data-ttu-id="46af1-102">Berechnet die Größe des angegebenen Verzweigungsanweisungsoperanden.</span><span class="sxs-lookup"><span data-stu-id="46af1-102">Calculates the size of the specified branch instruction operand.</span></span></summary>
        <returns><span data-ttu-id="46af1-103">1, wenn <paramref name="opCode" /> eine kurze Verzweigung ist, oder 4, wenn es sich um eine lange Verzweigung handelt.</span><span class="sxs-lookup"><span data-stu-id="46af1-103">1 if <paramref name="opCode" /> is a short branch, or 4 if it is a long branch.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="46af1-104">Der angegebene <paramref name="opCode" /> ist kein Branch-Op-Code.</span><span class="sxs-lookup"><span data-stu-id="46af1-104">The specified <paramref name="opCode" /> is not a branch op-code.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetLongBranch">
      <MemberSignature Language="C#" Value="public static System.Reflection.Metadata.ILOpCode GetLongBranch (this System.Reflection.Metadata.ILOpCode opCode);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Reflection.Metadata.ILOpCode GetLongBranch(valuetype System.Reflection.Metadata.ILOpCode opCode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.ILOpCodeExtensions.GetLongBranch(System.Reflection.Metadata.ILOpCode)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetLongBranch (opCode As ILOpCode) As ILOpCode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Reflection::Metadata::ILOpCode GetLongBranch(System::Reflection::Metadata::ILOpCode opCode);" />
      <MemberSignature Language="F#" Value="static member GetLongBranch : System.Reflection.Metadata.ILOpCode -&gt; System.Reflection.Metadata.ILOpCode" Usage="System.Reflection.Metadata.ILOpCodeExtensions.GetLongBranch opCode" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Metadata.ILOpCode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="opCode" Type="System.Reflection.Metadata.ILOpCode" RefType="this" Index="0" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="opCode"><span data-ttu-id="46af1-105">Der Branch-Op-Code.</span><span class="sxs-lookup"><span data-stu-id="46af1-105">The branch op-code.</span></span></param>
        <summary><span data-ttu-id="46af1-106">Ruft eine lange Form des angegebenen Branch-Op-Codes ab.</span><span class="sxs-lookup"><span data-stu-id="46af1-106">Gets a long form of the specified branch op-code.</span></span></summary>
        <returns><span data-ttu-id="46af1-107">Die Langform des Branch-Op-Codes.</span><span class="sxs-lookup"><span data-stu-id="46af1-107">The long form of the branch op-code.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="46af1-108">Der angegebene <paramref name="opCode" /> ist kein Branch-Op-Code.</span><span class="sxs-lookup"><span data-stu-id="46af1-108">The specified <paramref name="opCode" /> is not a branch op-code.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetShortBranch">
      <MemberSignature Language="C#" Value="public static System.Reflection.Metadata.ILOpCode GetShortBranch (this System.Reflection.Metadata.ILOpCode opCode);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Reflection.Metadata.ILOpCode GetShortBranch(valuetype System.Reflection.Metadata.ILOpCode opCode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.ILOpCodeExtensions.GetShortBranch(System.Reflection.Metadata.ILOpCode)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetShortBranch (opCode As ILOpCode) As ILOpCode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Reflection::Metadata::ILOpCode GetShortBranch(System::Reflection::Metadata::ILOpCode opCode);" />
      <MemberSignature Language="F#" Value="static member GetShortBranch : System.Reflection.Metadata.ILOpCode -&gt; System.Reflection.Metadata.ILOpCode" Usage="System.Reflection.Metadata.ILOpCodeExtensions.GetShortBranch opCode" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Metadata.ILOpCode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="opCode" Type="System.Reflection.Metadata.ILOpCode" RefType="this" Index="0" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="opCode"><span data-ttu-id="46af1-109">Der Branch-Op-Code.</span><span class="sxs-lookup"><span data-stu-id="46af1-109">The branch op-code.</span></span></param>
        <summary><span data-ttu-id="46af1-110">Ruft eine Kurzform des angegebenen Branch-Op-Codes ab.</span><span class="sxs-lookup"><span data-stu-id="46af1-110">Gets a short form of the specified branch op-code.</span></span></summary>
        <returns><span data-ttu-id="46af1-111">Die Kurzform des Branch-Op-Codes.</span><span class="sxs-lookup"><span data-stu-id="46af1-111">The short form of the branch op-code.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="46af1-112">Der angegebene <paramref name="opCode" /> ist kein Branch-Op-Code.</span><span class="sxs-lookup"><span data-stu-id="46af1-112">The specified <paramref name="opCode" /> is not a branch op-code.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IsBranch">
      <MemberSignature Language="C#" Value="public static bool IsBranch (this System.Reflection.Metadata.ILOpCode opCode);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsBranch(valuetype System.Reflection.Metadata.ILOpCode opCode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.ILOpCodeExtensions.IsBranch(System.Reflection.Metadata.ILOpCode)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function IsBranch (opCode As ILOpCode) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static bool IsBranch(System::Reflection::Metadata::ILOpCode opCode);" />
      <MemberSignature Language="F#" Value="static member IsBranch : System.Reflection.Metadata.ILOpCode -&gt; bool" Usage="System.Reflection.Metadata.ILOpCodeExtensions.IsBranch opCode" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="opCode" Type="System.Reflection.Metadata.ILOpCode" RefType="this" Index="0" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="opCode">To be added.</param>
        <summary><span data-ttu-id="46af1-113">Überprüft, ob der angegebene Op-Code eine Verzweigung zu einer Bezeichnung ist.</span><span class="sxs-lookup"><span data-stu-id="46af1-113">Verifies if the specified op-code is a branch to a label.</span></span></summary>
        <returns><span data-ttu-id="46af1-114"><see langword="true" />, wenn der angegebene Op-Code eine Verzweigung zu einer Bezeichnung ist, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="46af1-114"><see langword="true" /> if the specified op-code is a branch to a label, <see langword="false" /> otherwise.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
