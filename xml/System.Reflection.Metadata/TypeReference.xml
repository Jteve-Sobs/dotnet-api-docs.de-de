<Type Name="TypeReference" FullName="System.Reflection.Metadata.TypeReference">
  <Metadata><Meta Name="ms.openlocfilehash" Value="cd53a425f91d805d74bf22213f904fe7088b5588" /><Meta Name="ms.sourcegitcommit" Value="0084afad1b3b1cb2c8ad2c142ae3597d08bad4a7" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="10/31/2019" /><Meta Name="ms.locfileid" Value="73390689" /></Metadata><TypeSignature Language="C#" Value="public struct TypeReference" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit TypeReference extends System.ValueType" />
  <TypeSignature Language="DocId" Value="T:System.Reflection.Metadata.TypeReference" />
  <TypeSignature Language="VB.NET" Value="Public Structure TypeReference" />
  <TypeSignature Language="C++ CLI" Value="public value class TypeReference" />
  <TypeSignature Language="F#" Value="type TypeReference = struct" />
  <AssemblyInfo>
    <AssemblyName>System.Reflection.Metadata</AssemblyName>
    <AssemblyVersion>1.0.22.0</AssemblyVersion>
    <AssemblyVersion>1.3.0.0</AssemblyVersion>
    <AssemblyVersion>1.4.1.0</AssemblyVersion>
    <AssemblyVersion>1.4.2.0</AssemblyVersion>
    <AssemblyVersion>1.4.3.0</AssemblyVersion>
    <AssemblyVersion>1.4.4.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0">
      <AttributeName>System.Runtime.CompilerServices.IsReadOnly</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public System.Reflection.Metadata.StringHandle Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Reflection.Metadata.StringHandle Name" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Metadata.TypeReference.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As StringHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Reflection::Metadata::StringHandle Name { System::Reflection::Metadata::StringHandle get(); };" />
      <MemberSignature Language="F#" Value="member this.Name : System.Reflection.Metadata.StringHandle" Usage="System.Reflection.Metadata.TypeReference.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.0.22.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Metadata.StringHandle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ca3e5-101">Ruft den Namen des Zieltyps ab.</span><span class="sxs-lookup"><span data-stu-id="ca3e5-101">Gets the name of the target type.</span></span></summary>
        <value><span data-ttu-id="ca3e5-102">Der Name des Zieltyps.</span><span class="sxs-lookup"><span data-stu-id="ca3e5-102">The name of the target type.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Namespace">
      <MemberSignature Language="C#" Value="public System.Reflection.Metadata.StringHandle Namespace { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Reflection.Metadata.StringHandle Namespace" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Metadata.TypeReference.Namespace" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Namespace As StringHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Reflection::Metadata::StringHandle Namespace { System::Reflection::Metadata::StringHandle get(); };" />
      <MemberSignature Language="F#" Value="member this.Namespace : System.Reflection.Metadata.StringHandle" Usage="System.Reflection.Metadata.TypeReference.Namespace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.0.22.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Metadata.StringHandle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ca3e5-103">Ruft den vollständigen Namen des Namespace ab, in dem der Zieltyp definiert ist.</span><span class="sxs-lookup"><span data-stu-id="ca3e5-103">Gets the full name of the namespace where the target type is defined.</span></span></summary>
        <value><span data-ttu-id="ca3e5-104">Der vollständige Name des Namespace, in dem der Zieltyp definiert ist, oder ein Handle, dessen <see cref="P:System.Reflection.Metadata.StringHandle.IsNil" />-Eigenschaft <see langword="true" /> ist, wenn der Typ in einem Stamm Namespace eingebettet oder definiert ist.</span><span class="sxs-lookup"><span data-stu-id="ca3e5-104">The full name of the namespace where the target type is defined, or a handle whose the <see cref="P:System.Reflection.Metadata.StringHandle.IsNil" /> property is <see langword="true" /> if the type is nested or defined in a root namespace,</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResolutionScope">
      <MemberSignature Language="C#" Value="public System.Reflection.Metadata.EntityHandle ResolutionScope { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Reflection.Metadata.EntityHandle ResolutionScope" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Metadata.TypeReference.ResolutionScope" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ResolutionScope As EntityHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Reflection::Metadata::EntityHandle ResolutionScope { System::Reflection::Metadata::EntityHandle get(); };" />
      <MemberSignature Language="F#" Value="member this.ResolutionScope : System.Reflection.Metadata.EntityHandle" Usage="System.Reflection.Metadata.TypeReference.ResolutionScope" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.0.22.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Metadata.EntityHandle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ca3e5-105">Ruft den Auflösungsbereich ab, in dem der Zieltyp definiert ist und eindeutig mit dem angegebenen <see cref="P:System.Reflection.Metadata.TypeReference.Namespace" /> und <see cref="P:System.Reflection.Metadata.TypeReference.Name" /> identifiziert wird.</span><span class="sxs-lookup"><span data-stu-id="ca3e5-105">Gets the resolution scope in which the target type is defined and is uniquely identified by the specified <see cref="P:System.Reflection.Metadata.TypeReference.Namespace" /> and <see cref="P:System.Reflection.Metadata.TypeReference.Name" />.</span></span></summary>
        <value><span data-ttu-id="ca3e5-106">Der Auflösungs Bereich, in dem der Zieltyp eindeutig definiert ist.</span><span class="sxs-lookup"><span data-stu-id="ca3e5-106">The resolution scope in which the target type is uniquely defined.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="ca3e5-107">Der Auflösungs Bereich kann eines der folgenden Handles sein:</span><span class="sxs-lookup"><span data-stu-id="ca3e5-107">Resolution scope can be one of the following handles:</span></span>

- <span data-ttu-id="ca3e5-108"><xref:System.Reflection.Metadata.TypeReferenceHandle> des einschließenden Typs, wenn der Zieltyp ein-Typ ist.</span><span class="sxs-lookup"><span data-stu-id="ca3e5-108"><xref:System.Reflection.Metadata.TypeReferenceHandle> of the enclosing type, if the target type is a nested type.</span></span>

- <span data-ttu-id="ca3e5-109"><xref:System.Reflection.Metadata.ModuleReferenceHandle>, wenn der Zieltyp in einem anderen Modul innerhalb derselben Assembly wie diese definiert ist.</span><span class="sxs-lookup"><span data-stu-id="ca3e5-109"><xref:System.Reflection.Metadata.ModuleReferenceHandle>, if the target type is defined in another module within the same assembly as this one.</span></span>

- <span data-ttu-id="ca3e5-110"><xref:System.Reflection.Metadata.EntityHandle.ModuleDefinition>, wenn der Zieltyp im aktuellen Modul definiert ist.</span><span class="sxs-lookup"><span data-stu-id="ca3e5-110"><xref:System.Reflection.Metadata.EntityHandle.ModuleDefinition>, if the target type is defined in the current module.</span></span> <span data-ttu-id="ca3e5-111">Dies sollte nicht in einem CLI-Modul für komprimierte Metadaten vorkommen.</span><span class="sxs-lookup"><span data-stu-id="ca3e5-111">This should not occur in a CLI compressed metadata module.</span></span>

- <span data-ttu-id="ca3e5-112"><xref:System.Reflection.Metadata.AssemblyReferenceHandle>, wenn der Zieltyp in einer anderen Assembly als das aktuelle Modul definiert ist.</span><span class="sxs-lookup"><span data-stu-id="ca3e5-112"><xref:System.Reflection.Metadata.AssemblyReferenceHandle>, if the target type is defined in a different assembly from the current module.</span></span>

- <span data-ttu-id="ca3e5-113">`Nil` handle, wenn der Zieltyp aufgelöst werden muss, indem die <xref:System.Reflection.Metadata.MetadataReader.ExportedTypes> nach einem passenden <xref:System.Reflection.Metadata.TypeReference.Namespace> und <xref:System.Reflection.Metadata.TypeReference.Name> durchsucht wird.</span><span class="sxs-lookup"><span data-stu-id="ca3e5-113">`Nil` handle if the target type must be resolved by searching the <xref:System.Reflection.Metadata.MetadataReader.ExportedTypes> for a matching <xref:System.Reflection.Metadata.TypeReference.Namespace> and <xref:System.Reflection.Metadata.TypeReference.Name>.</span></span>

          ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
