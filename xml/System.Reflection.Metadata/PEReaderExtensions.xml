<Type Name="PEReaderExtensions" FullName="System.Reflection.Metadata.PEReaderExtensions">
  <Metadata><Meta Name="ms.openlocfilehash" Value="a76cb019c8621bd48ad2dceefaf8cd6ae79858d8" /><Meta Name="ms.sourcegitcommit" Value="8ae9a18b248625c8e1851e607c00346a64849587" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="12/17/2019" /><Meta Name="ms.locfileid" Value="75099912" /></Metadata><TypeSignature Language="C#" Value="public static class PEReaderExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit PEReaderExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Reflection.Metadata.PEReaderExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module PEReaderExtensions" />
  <TypeSignature Language="C++ CLI" Value="public ref class PEReaderExtensions abstract sealed" />
  <TypeSignature Language="F#" Value="type PEReaderExtensions = class" />
  <AssemblyInfo>
    <AssemblyName>System.Reflection.Metadata</AssemblyName>
    <AssemblyVersion>1.0.22.0</AssemblyVersion>
    <AssemblyVersion>1.3.0.0</AssemblyVersion>
    <AssemblyVersion>1.4.1.0</AssemblyVersion>
    <AssemblyVersion>1.4.2.0</AssemblyVersion>
    <AssemblyVersion>1.4.3.0</AssemblyVersion>
    <AssemblyVersion>1.4.4.0</AssemblyVersion>
    <AssemblyVersion>1.4.5.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netcore-3.1">
      <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1">
      <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="GetMetadataReader">
      <MemberSignature Language="C#" Value="public static System.Reflection.Metadata.MetadataReader GetMetadataReader (this System.Reflection.PortableExecutable.PEReader peReader);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Metadata.MetadataReader GetMetadataReader(class System.Reflection.PortableExecutable.PEReader peReader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.PEReaderExtensions.GetMetadataReader(System.Reflection.PortableExecutable.PEReader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Reflection::Metadata::MetadataReader ^ GetMetadataReader(System::Reflection::PortableExecutable::PEReader ^ peReader);" />
      <MemberSignature Language="F#" Value="static member GetMetadataReader : System.Reflection.PortableExecutable.PEReader -&gt; System.Reflection.Metadata.MetadataReader" Usage="System.Reflection.Metadata.PEReaderExtensions.GetMetadataReader peReader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.0.22.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
        <AssemblyVersion>1.4.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Metadata.MetadataReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peReader" Type="System.Reflection.PortableExecutable.PEReader" RefType="this" />
      </Parameters>
      <Docs>
        <param name="peReader"><span data-ttu-id="504a6-101">Die aktuelle <see cref="T:System.Reflection.PortableExecutable.PEReader" />-Instanz.</span><span class="sxs-lookup"><span data-stu-id="504a6-101">The current <see cref="T:System.Reflection.PortableExecutable.PEReader" /> instance.</span></span></param>
        <summary><span data-ttu-id="504a6-102">Ruft ein <see cref="T:System.Reflection.Metadata.MetadataReader" /> aus einem <see cref="T:System.Reflection.PortableExecutable.PEReader" /> ab.</span><span class="sxs-lookup"><span data-stu-id="504a6-102">Gets a <see cref="T:System.Reflection.Metadata.MetadataReader" /> from a <see cref="T:System.Reflection.PortableExecutable.PEReader" />.</span></span></summary>
        <returns><span data-ttu-id="504a6-103">Ein Metadatenleser.</span><span class="sxs-lookup"><span data-stu-id="504a6-103">A metdata reader.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="504a6-104">Der Aufrufer muss die <xref:System.Reflection.PortableExecutable.PEReader> w√§hrend der gesamten Lebensdauer des metadatenreaders beibehalten und verwerfen.</span><span class="sxs-lookup"><span data-stu-id="504a6-104">The caller must keep the <xref:System.Reflection.PortableExecutable.PEReader> alive and undisposed throughout the lifetime of the metadata reader.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="504a6-105"><paramref name="peReader" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="504a6-105"><paramref name="peReader" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="504a6-106">Die aktuelle Plattform ist Big-Endian.</span><span class="sxs-lookup"><span data-stu-id="504a6-106">The current platform is big-endian.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="504a6-107">E/A-Fehler beim Lesen aus den zugrunde liegenden Stream.</span><span class="sxs-lookup"><span data-stu-id="504a6-107">IO error while reading from the underlying stream.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetMetadataReader">
      <MemberSignature Language="C#" Value="public static System.Reflection.Metadata.MetadataReader GetMetadataReader (this System.Reflection.PortableExecutable.PEReader peReader, System.Reflection.Metadata.MetadataReaderOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Metadata.MetadataReader GetMetadataReader(class System.Reflection.PortableExecutable.PEReader peReader, valuetype System.Reflection.Metadata.MetadataReaderOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.PEReaderExtensions.GetMetadataReader(System.Reflection.PortableExecutable.PEReader,System.Reflection.Metadata.MetadataReaderOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Reflection::Metadata::MetadataReader ^ GetMetadataReader(System::Reflection::PortableExecutable::PEReader ^ peReader, System::Reflection::Metadata::MetadataReaderOptions options);" />
      <MemberSignature Language="F#" Value="static member GetMetadataReader : System.Reflection.PortableExecutable.PEReader * System.Reflection.Metadata.MetadataReaderOptions -&gt; System.Reflection.Metadata.MetadataReader" Usage="System.Reflection.Metadata.PEReaderExtensions.GetMetadataReader (peReader, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.0.22.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
        <AssemblyVersion>1.4.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Metadata.MetadataReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peReader" Type="System.Reflection.PortableExecutable.PEReader" RefType="this" />
        <Parameter Name="options" Type="System.Reflection.Metadata.MetadataReaderOptions" />
      </Parameters>
      <Docs>
        <param name="peReader"><span data-ttu-id="504a6-108">Die aktuelle <see cref="T:System.Reflection.PortableExecutable.PEReader" />-Instanz.</span><span class="sxs-lookup"><span data-stu-id="504a6-108">The current <see cref="T:System.Reflection.PortableExecutable.PEReader" /> instance.</span></span></param>
        <param name="options"><span data-ttu-id="504a6-109">Ein Enumerationswert, der die Konfiguration zum Lesen von Metadaten angibt.</span><span class="sxs-lookup"><span data-stu-id="504a6-109">An  enumeration value indicating the metadata reading configuration.</span></span></param>
        <summary><span data-ttu-id="504a6-110">Ruft einen Metadatenleser mit der angegebenen Konfiguration zum Lesen von Metadaten aus einem <see cref="T:System.Reflection.PortableExecutable.PEReader" /> ab.</span><span class="sxs-lookup"><span data-stu-id="504a6-110">Gets a  metadata reader with the specified metadata reading configuration from a <see cref="T:System.Reflection.PortableExecutable.PEReader" />.</span></span></summary>
        <returns><span data-ttu-id="504a6-111">Ruft einen Metadatenleser mit der angegebenen Konfiguration zum Lesen von Metadaten ab.</span><span class="sxs-lookup"><span data-stu-id="504a6-111">A  metadata reader with the specified metadata reading configuration.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="504a6-112">Der Aufrufer muss die <xref:System.Reflection.PortableExecutable.PEReader> w√§hrend der gesamten Lebensdauer des metadatenreaders beibehalten und verwerfen.</span><span class="sxs-lookup"><span data-stu-id="504a6-112">The caller must keep the <xref:System.Reflection.PortableExecutable.PEReader> alive and undisposed throughout the lifetime of the metadata reader.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="504a6-113"><paramref name="peReader" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="504a6-113"><paramref name="peReader" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="504a6-114">Die aktuelle Plattform ist Big-Endian.</span><span class="sxs-lookup"><span data-stu-id="504a6-114">The current platform is big-endian.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="504a6-115">E/A-Fehler beim Lesen aus den zugrunde liegenden Stream.</span><span class="sxs-lookup"><span data-stu-id="504a6-115">IO error while reading from the underlying stream.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetMetadataReader">
      <MemberSignature Language="C#" Value="public static System.Reflection.Metadata.MetadataReader GetMetadataReader (this System.Reflection.PortableExecutable.PEReader peReader, System.Reflection.Metadata.MetadataReaderOptions options, System.Reflection.Metadata.MetadataStringDecoder utf8Decoder);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Metadata.MetadataReader GetMetadataReader(class System.Reflection.PortableExecutable.PEReader peReader, valuetype System.Reflection.Metadata.MetadataReaderOptions options, class System.Reflection.Metadata.MetadataStringDecoder utf8Decoder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.PEReaderExtensions.GetMetadataReader(System.Reflection.PortableExecutable.PEReader,System.Reflection.Metadata.MetadataReaderOptions,System.Reflection.Metadata.MetadataStringDecoder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Reflection::Metadata::MetadataReader ^ GetMetadataReader(System::Reflection::PortableExecutable::PEReader ^ peReader, System::Reflection::Metadata::MetadataReaderOptions options, System::Reflection::Metadata::MetadataStringDecoder ^ utf8Decoder);" />
      <MemberSignature Language="F#" Value="static member GetMetadataReader : System.Reflection.PortableExecutable.PEReader * System.Reflection.Metadata.MetadataReaderOptions * System.Reflection.Metadata.MetadataStringDecoder -&gt; System.Reflection.Metadata.MetadataReader" Usage="System.Reflection.Metadata.PEReaderExtensions.GetMetadataReader (peReader, options, utf8Decoder)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.0.22.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
        <AssemblyVersion>1.4.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Metadata.MetadataReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peReader" Type="System.Reflection.PortableExecutable.PEReader" RefType="this" />
        <Parameter Name="options" Type="System.Reflection.Metadata.MetadataReaderOptions" />
        <Parameter Name="utf8Decoder" Type="System.Reflection.Metadata.MetadataStringDecoder" />
      </Parameters>
      <Docs>
        <param name="peReader"><span data-ttu-id="504a6-116">Die aktuelle <see cref="T:System.Reflection.PortableExecutable.PEReader" />-Instanz.</span><span class="sxs-lookup"><span data-stu-id="504a6-116">The current <see cref="T:System.Reflection.PortableExecutable.PEReader" /> instance.</span></span></param>
        <param name="options"><span data-ttu-id="504a6-117">Ein Enumerationswert, der die Konfiguration zum Lesen von Metadaten angibt.</span><span class="sxs-lookup"><span data-stu-id="504a6-117">An enumeration value indicating the metadata reading configuration.</span></span></param>
        <param name="utf8Decoder"><span data-ttu-id="504a6-118">Ein Metadatenzeichenfolgen-Decoder mit der Codierungskonfiguration.</span><span class="sxs-lookup"><span data-stu-id="504a6-118">A metadata string decoder with the encoding configuration.</span></span></param>
        <summary><span data-ttu-id="504a6-119">Ruft einen Metadatenleser mit der angegebenen Konfiguration zum Lesen von Metadaten und der Codierungskonfiguration aus einem <see cref="T:System.Reflection.PortableExecutable.PEReader" /> ab.</span><span class="sxs-lookup"><span data-stu-id="504a6-119">Gets a metadata reader with the specified metadata reading configuration and encoding configuration from a <see cref="T:System.Reflection.PortableExecutable.PEReader" />.</span></span></summary>
        <returns><span data-ttu-id="504a6-120">&gt;Ein Metadatenleser mit der angegebenen Konfiguration zum Lesen von Metadaten und der Codierungskonfiguration.</span><span class="sxs-lookup"><span data-stu-id="504a6-120">&gt;A metadata reader with the specified metadata reading configuration and encoding configuration.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="504a6-121">Der Aufrufer muss die <xref:System.Reflection.PortableExecutable.PEReader> w√§hrend der gesamten Lebensdauer des metadatenreaders verbleibt.</span><span class="sxs-lookup"><span data-stu-id="504a6-121">The caller must keep the <xref:System.Reflection.PortableExecutable.PEReader> undisposed throughout the lifetime of the metadata reader.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="504a6-122"><paramref name="peReader" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="504a6-122"><paramref name="peReader" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="504a6-123">Die Codierung von <paramref name="utf8Decoder" /> ist keine <see cref="T:System.Text.UTF8Encoding" />.</span><span class="sxs-lookup"><span data-stu-id="504a6-123">The encoding of <paramref name="utf8Decoder" /> is not <see cref="T:System.Text.UTF8Encoding" />.</span></span></exception>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="504a6-124">Die aktuelle Plattform ist Big-Endian.</span><span class="sxs-lookup"><span data-stu-id="504a6-124">The current platform is big-endian.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="504a6-125">E/A-Fehler beim Lesen aus den zugrunde liegenden Stream.</span><span class="sxs-lookup"><span data-stu-id="504a6-125">IO error while reading from the underlying stream.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetMethodBody">
      <MemberSignature Language="C#" Value="public static System.Reflection.Metadata.MethodBodyBlock GetMethodBody (this System.Reflection.PortableExecutable.PEReader peReader, int relativeVirtualAddress);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Metadata.MethodBodyBlock GetMethodBody(class System.Reflection.PortableExecutable.PEReader peReader, int32 relativeVirtualAddress) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.PEReaderExtensions.GetMethodBody(System.Reflection.PortableExecutable.PEReader,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Reflection::Metadata::MethodBodyBlock ^ GetMethodBody(System::Reflection::PortableExecutable::PEReader ^ peReader, int relativeVirtualAddress);" />
      <MemberSignature Language="F#" Value="static member GetMethodBody : System.Reflection.PortableExecutable.PEReader * int -&gt; System.Reflection.Metadata.MethodBodyBlock" Usage="System.Reflection.Metadata.PEReaderExtensions.GetMethodBody (peReader, relativeVirtualAddress)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.0.22.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
        <AssemblyVersion>1.4.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Metadata.MethodBodyBlock</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peReader" Type="System.Reflection.PortableExecutable.PEReader" RefType="this" />
        <Parameter Name="relativeVirtualAddress" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="peReader"><span data-ttu-id="504a6-126">Die aktuelle <see cref="T:System.Reflection.PortableExecutable.PEReader" />-Instanz.</span><span class="sxs-lookup"><span data-stu-id="504a6-126">The current <see cref="T:System.Reflection.PortableExecutable.PEReader" /> instance.</span></span></param>
        <param name="relativeVirtualAddress"><span data-ttu-id="504a6-127">Die RVA (Relative Virtual Address, relative virtuelle Adresse).</span><span class="sxs-lookup"><span data-stu-id="504a6-127">The Relative Virtual Address (RVA).</span></span></param>
        <summary><span data-ttu-id="504a6-128">Gibt einen Textblock einer Methode mit der angegebenen relativen virtuellen Adresse (RVA) zur√ºck.</span><span class="sxs-lookup"><span data-stu-id="504a6-128">Returns a body block of a method with the specified Relative Virtual Address (RVA);</span></span></summary>
        <returns><span data-ttu-id="504a6-129">Eine Methodentextblock-Instanz.</span><span class="sxs-lookup"><span data-stu-id="504a6-129">A method block body instance.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="504a6-130"><paramref name="peReader" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="504a6-130"><paramref name="peReader" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.BadImageFormatException"><span data-ttu-id="504a6-131">Der Text wurde in den Metadaten nicht gefunden oder ist ung√ºltig.</span><span class="sxs-lookup"><span data-stu-id="504a6-131">The body is not found in the metadata or is invalid.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="504a6-132">Der Abschnitt, in dem die Methode gespeichert ist, ist nicht verf√ºgbar.</span><span class="sxs-lookup"><span data-stu-id="504a6-132">The section where the method is stored is not available.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="504a6-133">Beim Lesen aus dem zugrunde liegenden Stream ist ein E/A-Fehler aufgetreten.</span><span class="sxs-lookup"><span data-stu-id="504a6-133">IO error occurred while reading from the underlying stream.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>
