<Type Name="UpdateCheckInfo" FullName="System.Deployment.Application.UpdateCheckInfo">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="1028c2e25d1da99023a88201770378db99eddede" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37666942" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class UpdateCheckInfo" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit UpdateCheckInfo extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Deployment.Application.UpdateCheckInfo" />
  <TypeSignature Language="VB.NET" Value="Public Class UpdateCheckInfo" />
  <TypeSignature Language="C++ CLI" Value="public ref class UpdateCheckInfo" />
  <TypeSignature Language="F#" Value="type UpdateCheckInfo = class" />
  <AssemblyInfo>
    <AssemblyName>System.Deployment</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Stellt ausführliche, durch einen Aufruf von <see cref="M:System.Deployment.Application.ApplicationDeployment.CheckForDetailedUpdate" /> erhaltene Updateinformationen dar.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Mit <xref:System.Deployment.Application.UpdateCheckInfo>, können Sie entscheiden, ob die ClickOnce-Anwendung, die basierend auf Informationen über die neueste Version aktualisieren. <xref:System.Deployment.Application.UpdateCheckInfo.UpdateAvailable%2A> Gibt einen booleschen Wert, der angibt, ob es überhaupt ein neues Update ist. Die <xref:System.Deployment.Application.UpdateCheckInfo.AvailableVersion%2A> Eigenschaft gibt die Versionsnummer der neuen Version, während <xref:System.Deployment.Application.UpdateCheckInfo.MinimumRequiredVersion%2A> finden Sie die früheste Version, die der Benutzer sollte installiert haben. <xref:System.Deployment.Application.UpdateCheckInfo.IsUpdateRequired%2A> drückt aus, ob das letzte verfügbare Update des Benutzers erforderlich ist. Zum Schluss <xref:System.Deployment.Application.UpdateCheckInfo.UpdateSizeBytes%2A> drückt die Gesamtgröße des Updates.  
  
> [!NOTE]
>  Visual Studio fügt die `<deploymentProvider>` Element, das Manifest nur dann, wenn die Anwendung festgelegt wurde, um die Prüfung auf Updates, damit Sie überprüft haben **die Anwendung soll nach Updates suchen** , oder geben Sie eine Update-URL in **aktualisieren Speicherort** in die [Application Updates Dialog Box](http://msdn.microsoft.com/library/8eca8743-8e68-4d04-bfd5-4dc0a9b2934f).  
  
   
  
## Examples  
 Das folgende Codebeispiel verwendet <xref:System.Deployment.Application.UpdateCheckInfo.UpdateAvailable%2A> zu bestimmen, ob ein neues Anwendungsupdate und <xref:System.Deployment.Application.UpdateCheckInfo.IsUpdateRequired%2A> zu bestimmen, ob der Benutzer zur Installation des Updates aufgefordert.  
  
 [!code-cpp[ClickOnceAPI#6](~/samples/snippets/cpp/VS_Snippets_Winforms/ClickOnceAPI/cpp/form1.cpp#6)]
 [!code-csharp[ClickOnceAPI#6](~/samples/snippets/csharp/VS_Snippets_Winforms/ClickOnceAPI/CS/Form1.cs#6)]
 [!code-vb[ClickOnceAPI#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ClickOnceAPI/VB/Form1.vb#6)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AvailableVersion">
      <MemberSignature Language="C#" Value="public Version AvailableVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Version AvailableVersion" />
      <MemberSignature Language="DocId" Value="P:System.Deployment.Application.UpdateCheckInfo.AvailableVersion" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AvailableVersion As Version" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Version ^ AvailableVersion { Version ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AvailableVersion : Version" Usage="System.Deployment.Application.UpdateCheckInfo.AvailableVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Version</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Versionsnummer der letzten deinstallierten Version ab.</summary>
        <value>Die <see cref="T:System.Version" /> gibt Haupt- und Nebenbuildnummer sowie die Revisionsnummer der neuesten Version an.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sie können <xref:System.Deployment.Application.UpdateCheckInfo.AvailableVersion%2A> entscheiden, ob das Update, das basierend auf den Schweregrad des Updates zu installieren. Angenommen, nur die <xref:System.Version.Build%2A> oder <xref:System.Version.Revision%2A> geändert wurden, muss Ihre Anwendung möglicherweise nicht erst aktualisieren die <xref:System.Version.Minor%2A> oder <xref:System.Version.Major%2A> Eigenschaften ändern.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Deployment.Application.UpdateCheckInfo.MinimumRequiredVersion" />
      </Docs>
    </Member>
    <Member MemberName="IsUpdateRequired">
      <MemberSignature Language="C#" Value="public bool IsUpdateRequired { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsUpdateRequired" />
      <MemberSignature Language="DocId" Value="P:System.Deployment.Application.UpdateCheckInfo.IsUpdateRequired" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsUpdateRequired As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsUpdateRequired { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsUpdateRequired : bool" Usage="System.Deployment.Application.UpdateCheckInfo.IsUpdateRequired" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob das Update installiert werden muss.</summary>
        <value>
          <see langword="true" />, wenn das Update erforderlich ist, andernfalls <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn Sie ein Update für die ClickOnce-Anwendung bereitstellen, können Sie kennzeichnen als erforderliches Update, anzuzeigen zu Ihrer Anwendung, dass es sofort aktualisieren soll. Möchten Sie die Anwendung zu markieren, wenn die neueste Version ein kritisches Update enthält oder mit den Dateiformaten oder Back-End-Datenquellen verwendet, die von der früheren Version inkompatibel ist.  
  
   
  
## Examples  
 Das folgende Codebeispiel verwendet <xref:System.Deployment.Application.UpdateCheckInfo.IsUpdateRequired%2A> zu bestimmen, ob bitten Sie den Benutzer zur Installation des Updates oder Installation ohne Eingabeaufforderung.  
  
 [!code-cpp[ClickOnceAPI#6](~/samples/snippets/cpp/VS_Snippets_Winforms/ClickOnceAPI/cpp/form1.cpp#6)]
 [!code-csharp[ClickOnceAPI#6](~/samples/snippets/csharp/VS_Snippets_Winforms/ClickOnceAPI/CS/Form1.cs#6)]
 [!code-vb[ClickOnceAPI#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ClickOnceAPI/VB/Form1.vb#6)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Deployment.Application.UpdateCheckInfo.MinimumRequiredVersion" />
      </Docs>
    </Member>
    <Member MemberName="MinimumRequiredVersion">
      <MemberSignature Language="C#" Value="public Version MinimumRequiredVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Version MinimumRequiredVersion" />
      <MemberSignature Language="DocId" Value="P:System.Deployment.Application.UpdateCheckInfo.MinimumRequiredVersion" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MinimumRequiredVersion As Version" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Version ^ MinimumRequiredVersion { Version ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MinimumRequiredVersion : Version" Usage="System.Deployment.Application.UpdateCheckInfo.MinimumRequiredVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Version</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die minimale Version ab, die der Benutzer auf dem Computer installiert haben muss.</summary>
        <value>Eine <see cref="T:System.Version" />, die die Version ausdrückt, die der Benutzer mindestens installieren muss.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Anwendungen können erforderliche Updates verpassen, wenn der Benutzer von speziellen akzeptiert oder vom Computer Weg Wochen-oder monatelang ist. Mit  
  
 <xref:System.Deployment.Application.UpdateCheckInfo.MinimumRequiredVersion%2A> um zu bestimmen, wenn der Benutzer kein die Anwendung in eine Weile Upgrade ist, und eine oder mehrere fehlt die erforderliche Updates aus.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, Anzeigen der <xref:System.Deployment.Application.UpdateCheckInfo.MinimumRequiredVersion%2A> Eigenschaft für den Benutzer aus, wenn ein erforderliches Update verfügbar ist.  
  
 [!code-cpp[ClickOnceAPI#6](~/samples/snippets/cpp/VS_Snippets_Winforms/ClickOnceAPI/cpp/form1.cpp#6)]
 [!code-csharp[ClickOnceAPI#6](~/samples/snippets/csharp/VS_Snippets_Winforms/ClickOnceAPI/CS/Form1.cs#6)]
 [!code-vb[ClickOnceAPI#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ClickOnceAPI/VB/Form1.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Es ist keine neue Version zum Installieren verfügbar.</exception>
      </Docs>
    </Member>
    <Member MemberName="UpdateAvailable">
      <MemberSignature Language="C#" Value="public bool UpdateAvailable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UpdateAvailable" />
      <MemberSignature Language="DocId" Value="P:System.Deployment.Application.UpdateCheckInfo.UpdateAvailable" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UpdateAvailable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UpdateAvailable { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.UpdateAvailable : bool" Usage="System.Deployment.Application.UpdateCheckInfo.UpdateAvailable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ab, ob ein deinstalliertes Update verfügbar ist.</summary>
        <value>
          <see langword="true" />, wenn neue Version der Anwendung verfügbar ist; andernfalls <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Im folgenden Codebeispiel wird überprüft <xref:System.Deployment.Application.UpdateCheckInfo.UpdateAvailable%2A> zu bestimmen, ob ein Update installieren.  
  
 [!code-cpp[ClickOnceAPI#6](~/samples/snippets/cpp/VS_Snippets_Winforms/ClickOnceAPI/cpp/form1.cpp#6)]
 [!code-csharp[ClickOnceAPI#6](~/samples/snippets/csharp/VS_Snippets_Winforms/ClickOnceAPI/CS/Form1.cs#6)]
 [!code-vb[ClickOnceAPI#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ClickOnceAPI/VB/Form1.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateSizeBytes">
      <MemberSignature Language="C#" Value="public long UpdateSizeBytes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 UpdateSizeBytes" />
      <MemberSignature Language="DocId" Value="P:System.Deployment.Application.UpdateCheckInfo.UpdateSizeBytes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UpdateSizeBytes As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long UpdateSizeBytes { long get(); };" />
      <MemberSignature Language="F#" Value="member this.UpdateSizeBytes : int64" Usage="System.Deployment.Application.UpdateCheckInfo.UpdateSizeBytes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Größe des verfügbaren Updates ab.</summary>
        <value>Ein <see cref="T:System.Int64" />, der die Größe des verfügbaren Updates in Bytes beschreibt. Wenn kein Update verfügbar ist, wird 0 (null) zurückgegeben.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>