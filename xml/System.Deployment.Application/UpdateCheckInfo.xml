<Type Name="UpdateCheckInfo" FullName="System.Deployment.Application.UpdateCheckInfo">
  <Metadata><Meta Name="ms.openlocfilehash" Value="d1675f1109e5e03f4680b5f61403a22a060adbe7" /><Meta Name="ms.sourcegitcommit" Value="397961a0164281b579f68064c3bb66c071f374d9" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="07/14/2020" /><Meta Name="ms.locfileid" Value="69121301" /></Metadata><TypeSignature Language="C#" Value="public class UpdateCheckInfo" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit UpdateCheckInfo extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Deployment.Application.UpdateCheckInfo" />
  <TypeSignature Language="VB.NET" Value="Public Class UpdateCheckInfo" />
  <TypeSignature Language="C++ CLI" Value="public ref class UpdateCheckInfo" />
  <TypeSignature Language="F#" Value="type UpdateCheckInfo = class" />
  <AssemblyInfo>
    <AssemblyName>System.Deployment</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Stellt ausführliche, durch einen Aufruf von <see cref="M:System.Deployment.Application.ApplicationDeployment.CheckForDetailedUpdate" /> erhaltene Updateinformationen dar.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Mit <xref:System.Deployment.Application.UpdateCheckInfo> können Sie entscheiden, ob Sie Ihre ClickOnce-Anwendung auf der Grundlage von Informationen zur neuesten Version aktualisieren möchten. <xref:System.Deployment.Application.UpdateCheckInfo.UpdateAvailable%2A>Gibt einen booleschen Wert zurück, der angibt, ob ein neues Update vorliegt. Die- <xref:System.Deployment.Application.UpdateCheckInfo.AvailableVersion%2A> Eigenschaft stellt die Versionsnummer der neuen Version bereit, während <xref:System.Deployment.Application.UpdateCheckInfo.MinimumRequiredVersion%2A> die früheste Version bereitstellt, die der Benutzer installieren sollte. <xref:System.Deployment.Application.UpdateCheckInfo.IsUpdateRequired%2A>Gibt an, ob das letzte verfügbare Update für den Benutzer erforderlich ist. Zum Schluss wird <xref:System.Deployment.Application.UpdateCheckInfo.UpdateSizeBytes%2A> die Gesamtgröße des Updates ausgedrückt.  
  
> [!NOTE]
>  In Visual Studio `<deploymentProvider>` wird das Element nur dann dem Manifest hinzugefügt, wenn die Anwendung für die Suche nach Updates festgelegt ist. Daher müssen Sie entweder die Anwendung überprüfen, **um nach Updates** zu suchen, oder eine Update-URL im **Update Speicherort** im [Dialog Feld Anwendungs Updates](https://msdn.microsoft.com/library/8eca8743-8e68-4d04-bfd5-4dc0a9b2934f)angeben.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird verwendet, <xref:System.Deployment.Application.UpdateCheckInfo.UpdateAvailable%2A> um zu bestimmen, ob ein neues Anwendungs Update vorliegt, und <xref:System.Deployment.Application.UpdateCheckInfo.IsUpdateRequired%2A> um zu bestimmen, ob der Benutzer aufgefordert wird, das Update zu installieren.  
  
 [!code-cpp[ClickOnceAPI#6](~/samples/snippets/cpp/VS_Snippets_Winforms/ClickOnceAPI/cpp/form1.cpp#6)]
 [!code-csharp[ClickOnceAPI#6](~/samples/snippets/csharp/VS_Snippets_Winforms/ClickOnceAPI/CS/Form1.cs#6)]
 [!code-vb[ClickOnceAPI#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ClickOnceAPI/VB/Form1.vb#6)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AvailableVersion">
      <MemberSignature Language="C#" Value="public Version AvailableVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Version AvailableVersion" />
      <MemberSignature Language="DocId" Value="P:System.Deployment.Application.UpdateCheckInfo.AvailableVersion" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AvailableVersion As Version" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Version ^ AvailableVersion { Version ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AvailableVersion : Version" Usage="System.Deployment.Application.UpdateCheckInfo.AvailableVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Version</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Versionsnummer der letzten deinstallierten Version ab.</summary>
        <value>Die <see cref="T:System.Version" /> gibt Haupt- und Nebenbuildnummer sowie die Revisionsnummer der neuesten Version an.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Mithilfe von können Sie <xref:System.Deployment.Application.UpdateCheckInfo.AvailableVersion%2A> entscheiden, ob das Update basierend auf dem Schweregrad des Updates installiert werden soll. Wenn sich z. b. nur die- <xref:System.Version.Build%2A> oder- <xref:System.Version.Revision%2A> Versions Eigenschaften geändert haben, muss Ihre Anwendung möglicherweise nicht aktualisiert werden, bis sich entweder die- <xref:System.Version.Minor%2A> oder- <xref:System.Version.Major%2A> Eigenschaften ändern.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Deployment.Application.UpdateCheckInfo.MinimumRequiredVersion" />
      </Docs>
    </Member>
    <Member MemberName="IsUpdateRequired">
      <MemberSignature Language="C#" Value="public bool IsUpdateRequired { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsUpdateRequired" />
      <MemberSignature Language="DocId" Value="P:System.Deployment.Application.UpdateCheckInfo.IsUpdateRequired" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsUpdateRequired As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsUpdateRequired { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsUpdateRequired : bool" Usage="System.Deployment.Application.UpdateCheckInfo.IsUpdateRequired" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob das Update installiert werden muss.</summary>
        <value><see langword="true" />, wenn das Update erforderlich ist, andernfalls <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn Sie ein Update für Ihre ClickOnce-Anwendung bereitstellen, können Sie es als erforderliches Update markieren und ihrer Anwendung signalisieren, dass es sofort aktualisiert werden soll. Sie möchten die Anwendung markieren, wenn die aktuelle Version ein kritisches Update enthält, oder wenn Sie nicht mit Dateiformaten oder Back-End-Datenquellen kompatibel ist, die von der früheren Version verwendet werden.  
  
   
  
## Examples  
 Im folgenden Codebeispiel <xref:System.Deployment.Application.UpdateCheckInfo.IsUpdateRequired%2A> wird verwendet, um zu bestimmen, ob der Benutzer aufgefordert wird, das Update zu installieren, oder um ihn ohne Eingabeaufforderung zu installieren.  
  
 [!code-cpp[ClickOnceAPI#6](~/samples/snippets/cpp/VS_Snippets_Winforms/ClickOnceAPI/cpp/form1.cpp#6)]
 [!code-csharp[ClickOnceAPI#6](~/samples/snippets/csharp/VS_Snippets_Winforms/ClickOnceAPI/CS/Form1.cs#6)]
 [!code-vb[ClickOnceAPI#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ClickOnceAPI/VB/Form1.vb#6)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Deployment.Application.UpdateCheckInfo.MinimumRequiredVersion" />
      </Docs>
    </Member>
    <Member MemberName="MinimumRequiredVersion">
      <MemberSignature Language="C#" Value="public Version MinimumRequiredVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Version MinimumRequiredVersion" />
      <MemberSignature Language="DocId" Value="P:System.Deployment.Application.UpdateCheckInfo.MinimumRequiredVersion" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MinimumRequiredVersion As Version" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Version ^ MinimumRequiredVersion { Version ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MinimumRequiredVersion : Version" Usage="System.Deployment.Application.UpdateCheckInfo.MinimumRequiredVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Version</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die minimale Version ab, die der Benutzer auf dem Computer installiert haben muss.</summary>
        <value>Eine <see cref="T:System.Version" />, die die Version ausdrückt, die der Benutzer mindestens installieren muss.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Anwendungen können erforderliche Updates übersehen, wenn der Benutzer eine bestimmte Zuweisung annimmt oder für Wochen oder Monate vom Computer entfernt wird. Verwendung  
  
 <xref:System.Deployment.Application.UpdateCheckInfo.MinimumRequiredVersion%2A>, um zu bestimmen, ob der Benutzer die Anwendung in einer Weile nicht aktualisiert hat und mindestens ein erforderliches Update verpasst hat.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die- <xref:System.Deployment.Application.UpdateCheckInfo.MinimumRequiredVersion%2A> Eigenschaft für den Benutzer angezeigt wird, wenn ein erforderliches Update verfügbar ist.  
  
 [!code-cpp[ClickOnceAPI#6](~/samples/snippets/cpp/VS_Snippets_Winforms/ClickOnceAPI/cpp/form1.cpp#6)]
 [!code-csharp[ClickOnceAPI#6](~/samples/snippets/csharp/VS_Snippets_Winforms/ClickOnceAPI/CS/Form1.cs#6)]
 [!code-vb[ClickOnceAPI#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ClickOnceAPI/VB/Form1.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Es ist keine neue Version zum Installieren verfügbar.</exception>
      </Docs>
    </Member>
    <Member MemberName="UpdateAvailable">
      <MemberSignature Language="C#" Value="public bool UpdateAvailable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UpdateAvailable" />
      <MemberSignature Language="DocId" Value="P:System.Deployment.Application.UpdateCheckInfo.UpdateAvailable" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UpdateAvailable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UpdateAvailable { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.UpdateAvailable : bool" Usage="System.Deployment.Application.UpdateCheckInfo.UpdateAvailable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ab, ob ein deinstalliertes Update verfügbar ist.</summary>
        <value><see langword="true" />, wenn neue Version der Anwendung verfügbar ist; andernfalls <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Im folgenden Codebeispiel wird überprüft <xref:System.Deployment.Application.UpdateCheckInfo.UpdateAvailable%2A> , um zu bestimmen, ob ein Update für die Installation vorhanden ist.  
  
 [!code-cpp[ClickOnceAPI#6](~/samples/snippets/cpp/VS_Snippets_Winforms/ClickOnceAPI/cpp/form1.cpp#6)]
 [!code-csharp[ClickOnceAPI#6](~/samples/snippets/csharp/VS_Snippets_Winforms/ClickOnceAPI/CS/Form1.cs#6)]
 [!code-vb[ClickOnceAPI#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ClickOnceAPI/VB/Form1.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateSizeBytes">
      <MemberSignature Language="C#" Value="public long UpdateSizeBytes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 UpdateSizeBytes" />
      <MemberSignature Language="DocId" Value="P:System.Deployment.Application.UpdateCheckInfo.UpdateSizeBytes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UpdateSizeBytes As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long UpdateSizeBytes { long get(); };" />
      <MemberSignature Language="F#" Value="member this.UpdateSizeBytes : int64" Usage="System.Deployment.Application.UpdateCheckInfo.UpdateSizeBytes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Größe des verfügbaren Updates ab.</summary>
        <value>Ein <see cref="T:System.Int64" />, der die Größe des verfügbaren Updates in Bytes beschreibt. Wenn kein Update verfügbar ist, wird 0 (null) zurückgegeben.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
