<Type Name="ApplicationDeployment" FullName="System.Deployment.Application.ApplicationDeployment">
  <Metadata><Meta Name="ms.openlocfilehash" Value="01b063a5c9411662370ac4081a828f0297f393cc" /><Meta Name="ms.sourcegitcommit" Value="11d168140aa8fade0768c2a9dde3e3bcacfdfb7d" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="05/27/2020" /><Meta Name="ms.locfileid" Value="83959622" /></Metadata><TypeSignature Language="C#" Value="public sealed class ApplicationDeployment" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ApplicationDeployment extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Deployment.Application.ApplicationDeployment" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ApplicationDeployment" />
  <TypeSignature Language="C++ CLI" Value="public ref class ApplicationDeployment sealed" />
  <TypeSignature Language="F#" Value="type ApplicationDeployment = class" />
  <AssemblyInfo>
    <AssemblyName>System.Deployment</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Unterstützt programmgesteuerte Updates der aktuellen Bereitstellung und behandelt bedarfsabhängige Downloads von Dateien. Diese Klasse kann nicht vererbt werden.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[

## Remarks
 Sie können Ihre [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] Anwendung so konfigurieren, dass Sie nach Updates sucht und automatisch über das `subscription`-Element des Bereitstellungs Manifests installiert wird. Einige Anwendungen müssen jedoch eine genauere Kontrolle über Ihre Updates haben. Möglicherweise möchten Sie erforderliche Updates Programm gesteuert installieren und Benutzer auffordern, optionale Updates zu installieren. Wenn Sie Abonnement Updates im Bereitstellungs Manifest deaktivieren, können Sie die Update Richtlinien Ihrer Anwendung übernehmen. Alternativ dazu können Sie das automatische Abonnement in Verbindung mit <xref:System.Deployment.Application.ApplicationDeployment>verwenden, das es [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] ermöglicht, die Anwendung regelmäßig zu aktualisieren, verwendet jedoch <xref:System.Deployment.Application.ApplicationDeployment>, um wichtige Updates kurz nach ihrer Veröffentlichung herunterzuladen.

 Sie können testen, ob die Bereitstellung über ein verfügbares Update verfügt, indem Sie entweder die <xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdate%2A> oder die <xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdateAsync%2A>-Methode verwenden. mit der letzteren Methode wird das <xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdateCompleted>-Ereignis nach erfolgreichem Abschluss ausgelöst. <xref:System.Deployment.Application.ApplicationDeployment.CheckForDetailedUpdate%2A> gibt wichtige Informationen zum Update zurück, z. b. die Versionsnummer und ob es sich um ein erforderliches Update für aktuelle Benutzer handelt. Wenn ein Update verfügbar ist, können Sie es mit <xref:System.Deployment.Application.ApplicationDeployment.Update%2A> oder <xref:System.Deployment.Application.ApplicationDeployment.UpdateAsync%2A>installieren. die letztere Methode löst das <xref:System.Deployment.Application.ApplicationDeployment.UpdateCompleted> Ereignis aus, nachdem die Installation des Updates beendet wurde. Bei großen Updates können Sie Status Benachrichtigungen über die Ereignisse <xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdateProgressChanged> und <xref:System.Deployment.Application.ApplicationDeployment.UpdateProgressChanged> empfangen und die Informationen in <xref:System.ComponentModel.ProgressChangedEventArgs> verwenden, um den Benutzer über den Download Status zu benachrichtigen.

 Sie können auch <xref:System.Deployment.Application.ApplicationDeployment> verwenden, um große Dateien und Assemblys bei Bedarf herunterzuladen. Diese Dateien müssen im Anwendungs Manifest der Bereitstellung als "optional" gekennzeichnet werden, damit Sie nicht während der Installation heruntergeladen werden. Sie können die Dateien jederzeit während der Anwendungszeit herunterladen, indem Sie die <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroup%2A> oder die <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync%2A>-Methode verwenden. Sie können Assemblys herunterladen, bevor Sie in den Speicher geladen werden, indem Sie einen Ereignishandler für das <xref:System.AppDomain.AssemblyResolve>-Ereignis in der <xref:System.AppDomain>-Klasse angeben. Weitere Informationen finden Sie unter [Exemplarische Vorgehensweise: Bedarfsgerechtes Herunterladen von Assemblys mit der API für die ClickOnce-Bereitstellung unter Verwendung des Designers](/visualstudio/deployment/walkthrough-downloading-assemblies-on-demand-with-the-clickonce-deployment-api-using-the-designer).

> [!NOTE]
>  Wenn Sie eine [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] Anwendung aktualisieren, während die Anwendung ausgeführt wird, werden die Updates nicht angezeigt, bis Sie die <xref:System.Windows.Forms.Application.Restart%2A>-Methode der <xref:System.Windows.Forms.Application>aufgerufen haben. Dadurch wird die aktuell aktive Instanz der Anwendung geschlossen und sofort neu gestartet.

 <xref:System.Deployment.Application.ApplicationDeployment> hat keinen öffentlichen Konstruktor. Sie erhalten Instanzen der-Klasse innerhalb einer [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] Anwendung über die <xref:System.Deployment.Application.ApplicationDeployment.CurrentDeployment%2A>-Eigenschaft. Verwenden Sie die <xref:System.Deployment.Application.ApplicationDeployment.IsNetworkDeployed%2A>-Eigenschaft, um zu überprüfen, ob die aktuelle Anwendung eine [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] Anwendung ist.

 <xref:System.Deployment.Application.ApplicationDeployment> unterstützt die Überprüfung auf Updates und das asynchrone herunterladen aktualisierter Dateien mithilfe der neuen [ereignisbasierten asynchronen Muster Übersicht](/dotnet/standard/asynchronous-programming-patterns/event-based-asynchronous-pattern-overview), die Vervollständigungs Rückrufe als Klassen Ereignisse verfügbar macht. <xref:System.Deployment.Application.ApplicationDeployment> startet und verwaltet die Threads für Sie und ruft die Anwendung auf dem korrekten UI-Thread zurück. Über diese Klasse können Sie aktualisieren, ohne die Anwendung zu sperren, sodass der Benutzer während der Installation des Updates weiter arbeiten kann. Wenn der Benutzer bei einem Update alle Aufgaben beenden muss, sollten Sie stattdessen die synchronen Methoden verwenden.

> [!NOTE]
>  Das Ausführen von asynchronen Updates erfordert, dass die Anwendung sowohl den <xref:System.Deployment.Application> als auch <xref:System.ComponentModel> Namespaces importiert.



## Examples
 Im folgenden Codebeispiel wird zur Ladezeit der Anwendung bestimmt, ob ein neues Update verfügbar ist. Wenn ein erforderliches Update verfügbar ist, wird das Update im Codebeispiel asynchron installiert. Dieser Code sollte einem Formular hinzugefügt werden, das eine <xref:System.Windows.Forms.TextBox> mit dem Namen `downloadStatus`enthält.

 [!code-cpp[ClickOnceAPI#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ClickOnceAPI/cpp/form1.cpp#1)]
 [!code-csharp[ClickOnceAPI#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ClickOnceAPI/CS/Form1.cs#1)]
 [!code-vb[ClickOnceAPI#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ClickOnceAPI/VB/Form1.vb#1)]

 ]]></format>
    </remarks>
    <related type="Article" href="/visualstudio/deployment/walkthrough-downloading-assemblies-on-demand-with-the-clickonce-deployment-api-using-the-designer">Exemplarische Vorgehensweise: Herunterladen von Assemblys bei Bedarf mit der ClickOnce-Bereitstellungs-API mit</related>
  </Docs>
  <Members>
    <Member MemberName="ActivationUri">
      <MemberSignature Language="C#" Value="public Uri ActivationUri { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri ActivationUri" />
      <MemberSignature Language="DocId" Value="P:System.Deployment.Application.ApplicationDeployment.ActivationUri" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ActivationUri As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ ActivationUri { Uri ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ActivationUri : Uri" Usage="System.Deployment.Application.ApplicationDeployment.ActivationUri" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die URL ab, die verwendet wird, um das Bereitstellungsmanifest der Anwendung zu starten.</summary>
        <value>Eine Zeichenfolge der Länge 0 (null), wenn die <c>trustUrlParameters</c> -Eigenschaft im Bereitstellungs Manifest <see langword="false" />ist, oder wenn der Benutzer ein UNC-Objekt bereitgestellt hat, um die Bereitstellung zu öffnen oder lokal geöffnet hat. Andernfalls ist der Rückgabewert die vollständige URL, die zum Starten der Anwendung verwendet wird, einschließlich aller Parameter.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Diese Eigenschaft kann sowohl in vollständig vertrauenswürdigen als auch teilweise vertrauenswürdigen Anwendungen verwendet werden.



## Examples
 Der folgende Code zeigt, wie die URL-Parameter mithilfe von <xref:System.Deployment.Application.ApplicationDeployment.ActivationUri%2A>abgerufen werden und wie die <xref:System.Web.HttpUtility>-Klasse verwendet wird, um die Abfrage Zeichenfolge sicher zu analysieren. Mehrere Vorkommen derselben Abfrage Zeichenfolgen-Variablen werden in einem Eintrag der zurückgegebenen <xref:System.Collections.Specialized.NameValueCollection>konsolidiert.

 [!code-csharp[ClickOnceQueryString#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ClickOnceQueryString/CS/Form1.cs#1)]
 [!code-vb[ClickOnceQueryString#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ClickOnceQueryString/VB/Form1.vb#1)]

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CheckForDetailedUpdate">
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Führt die denselben Vorgang aus wie <see cref="M:System.Deployment.Application.ApplicationDeployment.CheckForUpdate" />, gibt aber erweiterte Informationen über das verfügbare Update zurück.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CheckForDetailedUpdate">
      <MemberSignature Language="C#" Value="public System.Deployment.Application.UpdateCheckInfo CheckForDetailedUpdate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Deployment.Application.UpdateCheckInfo CheckForDetailedUpdate() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Deployment.Application.ApplicationDeployment.CheckForDetailedUpdate" />
      <MemberSignature Language="VB.NET" Value="Public Function CheckForDetailedUpdate () As UpdateCheckInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Deployment::Application::UpdateCheckInfo ^ CheckForDetailedUpdate();" />
      <MemberSignature Language="F#" Value="member this.CheckForDetailedUpdate : unit -&gt; System.Deployment.Application.UpdateCheckInfo" Usage="applicationDeployment.CheckForDetailedUpdate " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Deployment.Application.UpdateCheckInfo</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Führt die denselben Vorgang aus wie <see cref="M:System.Deployment.Application.ApplicationDeployment.CheckForUpdate" />, gibt aber erweiterte Informationen über das verfügbare Update zurück.</summary>
        <returns>Ein <see cref="T:System.Deployment.Application.UpdateCheckInfo" /> für das verfügbare Update.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Die <xref:System.Deployment.Application.ApplicationDeployment.CheckForDetailedUpdate%2A>-Methode ermöglicht synchronen Aufrufern die gleichen erweiterten Informationen, die asynchrone Aufrufer mit der <xref:System.Deployment.Application.CheckForUpdateCompletedEventArgs>-Klasse erhalten.



## Examples
 Im folgenden Codebeispiel wird <xref:System.Deployment.Application.ApplicationDeployment.CheckForDetailedUpdate%2A> verwendet, um die Informationen zum neuesten Update abzurufen. Wenn ein Update vorhanden ist, wird es nur dann automatisch installiert, wenn es sich um ein erforderliches Update handelt. Andernfalls wird der Benutzer zur Eingabe aufgefordert.

 [!code-cpp[ClickOnceAPI#7](~/samples/snippets/cpp/VS_Snippets_Winforms/ClickOnceAPI/cpp/form1.cpp#7)]
 [!code-csharp[ClickOnceAPI#7](~/samples/snippets/csharp/VS_Snippets_Winforms/ClickOnceAPI/CS/Form1.cs#7)]
 [!code-vb[ClickOnceAPI#7](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ClickOnceAPI/VB/Form1.vb#7)]

 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Entweder ist die aktuelle Anwendung nicht für die Unterstützung von Updates konfiguriert, oder es wird bereits ein anderer Updateprüfungsvorgang ausgeführt.</exception>
        <exception cref="T:System.Deployment.Application.DeploymentDownloadException">Das Bereitstellungsmanifest kann nicht heruntergeladen werden. Diese Ausnahme wird in der <see cref="P:System.ComponentModel.AsyncCompletedEventArgs.Error" />-Eigenschaft des <see cref="E:System.Deployment.Application.ApplicationDeployment.CheckForUpdateCompleted" />-Ereignisses angezeigt.</exception>
        <exception cref="T:System.Deployment.Application.InvalidDeploymentException">Das Bereitstellungsmanifest ist beschädigt. Generieren Sie das Manifest der Anwendung erneut, bevor Sie versuchen, diese Anwendung für Benutzer bereitzustellen. Diese Ausnahme wird in der <see cref="P:System.ComponentModel.AsyncCompletedEventArgs.Error" />-Eigenschaft des <see cref="E:System.Deployment.Application.ApplicationDeployment.CheckForUpdateCompleted" />-Ereignisses angezeigt.</exception>
      </Docs>
    </Member>
    <Member MemberName="CheckForDetailedUpdate">
      <MemberSignature Language="C#" Value="public System.Deployment.Application.UpdateCheckInfo CheckForDetailedUpdate (bool persistUpdateCheckResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Deployment.Application.UpdateCheckInfo CheckForDetailedUpdate(bool persistUpdateCheckResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Deployment.Application.ApplicationDeployment.CheckForDetailedUpdate(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function CheckForDetailedUpdate (persistUpdateCheckResult As Boolean) As UpdateCheckInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Deployment::Application::UpdateCheckInfo ^ CheckForDetailedUpdate(bool persistUpdateCheckResult);" />
      <MemberSignature Language="F#" Value="member this.CheckForDetailedUpdate : bool -&gt; System.Deployment.Application.UpdateCheckInfo" Usage="applicationDeployment.CheckForDetailedUpdate persistUpdateCheckResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Deployment.Application.UpdateCheckInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="persistUpdateCheckResult" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="persistUpdateCheckResult"><see langword="false" />, wenn das Update automatisch angewendet und kein Dialogfeld angezeigt wird.</param>
        <summary>Führt die denselben Vorgang aus wie <see cref="M:System.Deployment.Application.ApplicationDeployment.CheckForUpdate" />, gibt aber erweiterte Informationen über das verfügbare Update zurück.</summary>
        <returns>Ein <see cref="T:System.Deployment.Application.UpdateCheckInfo" /> für das verfügbare Update.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CheckForUpdate">
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Überprüft <see cref="P:System.Deployment.Application.ApplicationDeployment.UpdateLocation" />, um zu bestimmen, ob ein neues Update verfügbar ist.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CheckForUpdate">
      <MemberSignature Language="C#" Value="public bool CheckForUpdate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool CheckForUpdate() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Deployment.Application.ApplicationDeployment.CheckForUpdate" />
      <MemberSignature Language="VB.NET" Value="Public Function CheckForUpdate () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CheckForUpdate();" />
      <MemberSignature Language="F#" Value="member this.CheckForUpdate : unit -&gt; bool" Usage="applicationDeployment.CheckForUpdate " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Überprüft <see cref="P:System.Deployment.Application.ApplicationDeployment.UpdateLocation" />, um zu bestimmen, ob ein neues Update verfügbar ist.</summary>
        <returns><see langword="true" />, wenn ein neues Update vorhanden ist, andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Die <xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdate%2A>-Methode vergleicht die Version der derzeit installierten Bereitstellung mit der Version, die im Bereitstellungs Manifest unter <xref:System.Deployment.Application.ApplicationDeployment.UpdateLocation%2A>angegeben ist. Wenn sich die Version auf dem Server von der installierten Version unterscheidet, wird `true`zurückgegeben.

 Diese Methode wird blockiert, bis die Überprüfung abgeschlossen ist. Verwenden Sie stattdessen die <xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdateAsync%2A>-Methode, um asynchron nach einem Update zu suchen.

> [!NOTE]
>  Wenn <xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdate%2A> feststellt, dass ein Update verfügbar ist, und der Benutzer die Installation nicht durchführt, wird der Benutzer [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] aufgefordert, bei der nächsten Anwendungs Installation ein Update verfügbar zu sein. Diese Aufforderung kann nicht deaktiviert werden. (Wenn es sich bei der Anwendung um ein erforderliches Update handelt, wird [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] ohne Aufforderung installiert.)



## Examples
 Im folgenden Codebeispiel wird auf ein Anwendungs Update geprüft. Wenn eine solche verfügbar ist, wird sie synchron installiert.

 [!code-cpp[ClickOnceAPI#5](~/samples/snippets/cpp/VS_Snippets_Winforms/ClickOnceAPI/cpp/form1.cpp#5)]
 [!code-csharp[ClickOnceAPI#5](~/samples/snippets/csharp/VS_Snippets_Winforms/ClickOnceAPI/CS/Form1.cs#5)]
 [!code-vb[ClickOnceAPI#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ClickOnceAPI/VB/Form1.vb#5)]

 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">[!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] löst sofort diese Ausnahme aus, wenn Sie die <see cref="M:System.Deployment.Application.ApplicationDeployment.CheckForUpdate" />-Methode aufrufen, während bereits ein Update ausgeführt wird.</exception>
        <exception cref="T:System.Deployment.Application.DeploymentDownloadException">Das Bereitstellungsmanifest kann nicht heruntergeladen werden.</exception>
        <exception cref="T:System.Deployment.Application.InvalidDeploymentException">Das Bereitstellungsmanifest ist beschädigt. Sie müssen die Anwendung erneut bereitstellen, um dieses Problem zu beheben.</exception>
        <altmember cref="M:System.Deployment.Application.ApplicationDeployment.CheckForUpdateAsync" />
        <altmember cref="M:System.Deployment.Application.ApplicationDeployment.CheckForDetailedUpdate" />
      </Docs>
    </Member>
    <Member MemberName="CheckForUpdate">
      <MemberSignature Language="C#" Value="public bool CheckForUpdate (bool persistUpdateCheckResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool CheckForUpdate(bool persistUpdateCheckResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Deployment.Application.ApplicationDeployment.CheckForUpdate(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function CheckForUpdate (persistUpdateCheckResult As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CheckForUpdate(bool persistUpdateCheckResult);" />
      <MemberSignature Language="F#" Value="member this.CheckForUpdate : bool -&gt; bool" Usage="applicationDeployment.CheckForUpdate persistUpdateCheckResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="persistUpdateCheckResult" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="persistUpdateCheckResult"><see langword="false" />, wenn das Update automatisch angewendet und kein Dialogfeld angezeigt wird.</param>
        <summary>Überprüft <see cref="P:System.Deployment.Application.ApplicationDeployment.UpdateLocation" />, um zu bestimmen, ob ein neues Update verfügbar ist.</summary>
        <returns><see langword="true" />, wenn ein neues Update vorhanden ist, andernfalls <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckForUpdateAsync">
      <MemberSignature Language="C#" Value="public void CheckForUpdateAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CheckForUpdateAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Deployment.Application.ApplicationDeployment.CheckForUpdateAsync" />
      <MemberSignature Language="VB.NET" Value="Public Sub CheckForUpdateAsync ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CheckForUpdateAsync();" />
      <MemberSignature Language="F#" Value="member this.CheckForUpdateAsync : unit -&gt; unit" Usage="applicationDeployment.CheckForUpdateAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Überprüft <see cref="P:System.Deployment.Application.ApplicationDeployment.UpdateLocation" /> asynchron, um zu bestimmen, ob ein neues Update verfügbar ist.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdateAsync%2A> wird sofort zurückgegeben und startet einen separaten Thread, um die aktualisierte Anwendung herunterzuladen. Wenn die Methode abgeschlossen ist oder abgebrochen wird, löst Sie das <xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdateCompleted>-Ereignis aus. Sie können <xref:System.ComponentModel.AsyncCompletedEventArgs> in diesem Ereignishandler verwenden, um zu bestimmen, ob der Vorgang abgebrochen wurde, oder ob während des Updates eine Ausnahme ausgelöst wurde.

 Sie können ein asynchrones Update abbrechen, indem Sie <xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdateAsyncCancel%2A>aufrufen.

> [!NOTE]
>  Wenn <xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdate%2A> feststellt, dass ein Update verfügbar ist, und der Benutzer die Installation nicht durchführt, wird der Benutzer [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] aufgefordert, bei der nächsten Anwendungs Installation ein Update verfügbar zu sein. Diese Aufforderung kann nicht deaktiviert werden. (Wenn es sich bei der Anwendung um ein erforderliches Update handelt, wird [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] ohne Aufforderung installiert.)



## Examples
 Im folgenden Beispiel wird eine asynchrone Aktualisierung des Updates durchgeführt, und das Update wird installiert, sofern vorhanden.

 [!code-cpp[ClickOnceAPI#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ClickOnceAPI/cpp/form1.cpp#1)]
 [!code-csharp[ClickOnceAPI#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ClickOnceAPI/CS/Form1.cs#1)]
 [!code-vb[ClickOnceAPI#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ClickOnceAPI/VB/Form1.vb#1)]

 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">[!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] löst sofort diese Ausnahme aus, wenn Sie die <see cref="M:System.Deployment.Application.ApplicationDeployment.CheckForUpdateAsync" />-Methode aufrufen, während bereits ein Update ausgeführt wird.</exception>
        <exception cref="T:System.Deployment.Application.DeploymentDownloadException">Das Bereitstellungsmanifest kann nicht heruntergeladen werden. Diese Ausnahme wird in der <see cref="P:System.ComponentModel.AsyncCompletedEventArgs.Error" />-Eigenschaft des <see cref="E:System.Deployment.Application.ApplicationDeployment.CheckForUpdateCompleted" />-Ereignisses angezeigt.</exception>
        <exception cref="T:System.Deployment.Application.InvalidDeploymentException">Das Bereitstellungsmanifest ist beschädigt. Sie müssen die Anwendung erneut bereitstellen, um dieses Problem zu beheben. Diese Ausnahme wird in der <see cref="P:System.ComponentModel.AsyncCompletedEventArgs.Error" />-Eigenschaft des <see cref="E:System.Deployment.Application.ApplicationDeployment.CheckForUpdateCompleted" />-Ereignisses angezeigt.</exception>
        <altmember cref="M:System.Deployment.Application.ApplicationDeployment.CheckForUpdate" />
        <altmember cref="M:System.Deployment.Application.ApplicationDeployment.CheckForDetailedUpdate" />
        <altmember cref="M:System.Deployment.Application.ApplicationDeployment.CheckForUpdateAsyncCancel" />
      </Docs>
    </Member>
    <Member MemberName="CheckForUpdateAsyncCancel">
      <MemberSignature Language="C#" Value="public void CheckForUpdateAsyncCancel ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CheckForUpdateAsyncCancel() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Deployment.Application.ApplicationDeployment.CheckForUpdateAsyncCancel" />
      <MemberSignature Language="VB.NET" Value="Public Sub CheckForUpdateAsyncCancel ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CheckForUpdateAsyncCancel();" />
      <MemberSignature Language="F#" Value="member this.CheckForUpdateAsyncCancel : unit -&gt; unit" Usage="applicationDeployment.CheckForUpdateAsyncCancel " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Bricht die asynchrone Updateprüfung ab.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Verwenden Sie diese Methode, um eine mit der <xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdateAsync%2A>-Methode initiierte Update Überprüfung abzubrechen.

 Mit dieser Methode werden keine Hintergrund Aktualisierungen abgebrochen, die möglicherweise bereits ausgeführt werden, z. b. ein Update, das als Teil eines Abonnements gestartet wurde. Weitere Informationen zu Abonnements finden Sie unter [Auswählen einer Strategie für die ClickOnce-Aktualisierung](/visualstudio/deployment/choosing-a-clickonce-update-strategy).

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckForUpdateCompleted">
      <MemberSignature Language="C#" Value="public event System.Deployment.Application.CheckForUpdateCompletedEventHandler CheckForUpdateCompleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Deployment.Application.CheckForUpdateCompletedEventHandler CheckForUpdateCompleted" />
      <MemberSignature Language="DocId" Value="E:System.Deployment.Application.ApplicationDeployment.CheckForUpdateCompleted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CheckForUpdateCompleted As CheckForUpdateCompletedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Deployment::Application::CheckForUpdateCompletedEventHandler ^ CheckForUpdateCompleted;" />
      <MemberSignature Language="F#" Value="member this.CheckForUpdateCompleted : System.Deployment.Application.CheckForUpdateCompletedEventHandler " Usage="member this.CheckForUpdateCompleted : System.Deployment.Application.CheckForUpdateCompletedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Deployment.Application.CheckForUpdateCompletedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt auf, wenn <see cref="M:System.Deployment.Application.ApplicationDeployment.CheckForUpdateAsync" /> abgeschlossen wurde.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Die <xref:System.Deployment.Application.CheckForUpdateCompletedEventArgs>-Klasse teilt Ihnen unter anderem die Version des Updates, die Größe des Updates und ob das verfügbare Update erforderlich oder optional ist.



## Examples
 Im folgenden Codebeispiel wird <xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdateCompleted> verwendet, um zu entscheiden, ob der Benutzer zur Installation des verfügbaren Anwendungs Updates aufgefordert werden soll. Wenn das Update ein obligatorisches Upgrade ist, wird der Benutzer vom <xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdateCompleted> Ereignishandler nicht zur Eingabe aufgefordert. Das Beispiel erfordert, dass Sie eine Windows Forms Anwendung bereitstellen, die ein <xref:System.Windows.Forms.StatusStrip> Steuerelement enthält, und dass dieses Steuerelement ein <xref:System.Windows.Forms.ToolStripStatusLabel>-Steuerelement mit dem Namen `downloadStatus`enthält.

 [!code-cpp[ClickOnceAPI#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ClickOnceAPI/cpp/form1.cpp#1)]
 [!code-csharp[ClickOnceAPI#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ClickOnceAPI/CS/Form1.cs#1)]
 [!code-vb[ClickOnceAPI#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ClickOnceAPI/VB/Form1.vb#1)]

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckForUpdateProgressChanged">
      <MemberSignature Language="C#" Value="public event System.Deployment.Application.DeploymentProgressChangedEventHandler CheckForUpdateProgressChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Deployment.Application.DeploymentProgressChangedEventHandler CheckForUpdateProgressChanged" />
      <MemberSignature Language="DocId" Value="E:System.Deployment.Application.ApplicationDeployment.CheckForUpdateProgressChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CheckForUpdateProgressChanged As DeploymentProgressChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Deployment::Application::DeploymentProgressChangedEventHandler ^ CheckForUpdateProgressChanged;" />
      <MemberSignature Language="F#" Value="member this.CheckForUpdateProgressChanged : System.Deployment.Application.DeploymentProgressChangedEventHandler " Usage="member this.CheckForUpdateProgressChanged : System.Deployment.Application.DeploymentProgressChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Deployment.Application.DeploymentProgressChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt auf, wenn ein Fortschrittsupdate auf einem <see cref="M:System.Deployment.Application.ApplicationDeployment.CheckForUpdateAsync" />-Aufruf verfügbar ist.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdateProgressChanged> meldet den Download Status des Bereitstellungs Manifests der Anwendung. Dies können wichtige Informationen für Benutzer sein, die die Bereitstellung über langsame Netzwerkverbindungen herunterladen.



## Examples
 Im folgenden Codebeispiel wird das <xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdateProgressChanged> Ereignis verwendet, um den Benutzer darüber zu informieren, wie viel des Bereitstellungs Manifests noch nicht heruntergeladen werden kann. Das Beispiel erfordert, dass Sie eine Windows Forms Anwendung bereitstellen, die ein <xref:System.Windows.Forms.StatusStrip> Steuerelement enthält, und dass dieses Steuerelement ein <xref:System.Windows.Forms.ToolStripStatusLabel>-Steuerelement mit dem Namen `downloadStatus`enthält.

 [!code-cpp[ClickOnceAPI#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ClickOnceAPI/cpp/form1.cpp#1)]
 [!code-csharp[ClickOnceAPI#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ClickOnceAPI/CS/Form1.cs#1)]
 [!code-vb[ClickOnceAPI#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ClickOnceAPI/VB/Form1.vb#1)]

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentDeployment">
      <MemberSignature Language="C#" Value="public static System.Deployment.Application.ApplicationDeployment CurrentDeployment { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Deployment.Application.ApplicationDeployment CurrentDeployment" />
      <MemberSignature Language="DocId" Value="P:System.Deployment.Application.ApplicationDeployment.CurrentDeployment" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property CurrentDeployment As ApplicationDeployment" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Deployment::Application::ApplicationDeployment ^ CurrentDeployment { System::Deployment::Application::ApplicationDeployment ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CurrentDeployment : System.Deployment.Application.ApplicationDeployment" Usage="System.Deployment.Application.ApplicationDeployment.CurrentDeployment" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Deployment.Application.ApplicationDeployment</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gibt die aktuelle <see cref="T:System.Deployment.Application.ApplicationDeployment" /> für diese Bereitstellung zurück.</summary>
        <value>Die aktuelle Bereitstellung.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Instanzen von <xref:System.Deployment.Application.ApplicationDeployment> können nicht direkt in der Anwendung erstellt werden. Sie müssen eine gültige-Instanz über die <xref:System.Deployment.Application.ApplicationDeployment.CurrentDeployment%2A>-Eigenschaft abrufen.

 Die <xref:System.Deployment.Application.ApplicationDeployment.CurrentDeployment%2A> static-Eigenschaft ist nur in einer Anwendung gültig, die mit [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)]bereitgestellt wurde. Versuche, diese Eigenschaft von nicht[!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] Anwendungen aufzurufen, lösen eine Ausnahme aus. Wenn Sie eine Anwendung entwickeln, die mit [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)]bereitgestellt werden kann, verwenden Sie die <xref:System.Deployment.Application.ApplicationDeployment.IsNetworkDeployed%2A>-Eigenschaft, um zu testen, ob das aktuelle Programm eine [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] Anwendung ist.



## Examples
 Im folgenden Codebeispiel werden <xref:System.Deployment.Application.ApplicationDeployment.CurrentDeployment%2A> abgerufen und überprüft, um zu bestimmen, ob die Anwendung in den letzten drei Tagen aktualisiert wurde.

 [!code-cpp[ClickOnceAPI#3](~/samples/snippets/cpp/VS_Snippets_Winforms/ClickOnceAPI/cpp/form1.cpp#3)]
 [!code-csharp[ClickOnceAPI#3](~/samples/snippets/csharp/VS_Snippets_Winforms/ClickOnceAPI/CS/Form1.cs#3)]
 [!code-vb[ClickOnceAPI#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ClickOnceAPI/VB/Form1.vb#3)]

 ]]></format>
        </remarks>
        <exception cref="T:System.Deployment.Application.InvalidDeploymentException">Sie haben versucht, diese statische Eigenschaft mit einer Anwendung aufzurufen, die keine [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)]-Anwendung ist.</exception>
        <altmember cref="P:System.Deployment.Application.ApplicationDeployment.IsNetworkDeployed" />
      </Docs>
    </Member>
    <Member MemberName="CurrentVersion">
      <MemberSignature Language="C#" Value="public Version CurrentVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Version CurrentVersion" />
      <MemberSignature Language="DocId" Value="P:System.Deployment.Application.ApplicationDeployment.CurrentVersion" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CurrentVersion As Version" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Version ^ CurrentVersion { Version ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CurrentVersion : Version" Usage="System.Deployment.Application.ApplicationDeployment.CurrentVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Version</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Version der Bereitstellung für die aktuell ausgeführte Instanz der Anwendung ab.</summary>
        <value>Die aktuelle Bereitstellungsversion.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Deployment.Application.ApplicationDeployment.CurrentVersion%2A> unterscheiden sich von <xref:System.Deployment.Application.ApplicationDeployment.UpdatedVersion%2A>, wenn ein neues Update installiert wurde, Sie aber noch nicht <xref:System.Windows.Forms.Application.Restart%2A>aufgerufen haben. Wenn das Bereitstellungs Manifest für automatische Updates konfiguriert ist, können Sie diese beiden Werte vergleichen, um zu bestimmen, ob die Anwendung neu gestartet werden soll.



## Examples
 Im folgenden Codebeispiel wird eine-Methode definiert, die bestimmt, ob die Anwendung von [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] aktualisiert wurde.

 [!code-cpp[ClickOnceAPI#3](~/samples/snippets/cpp/VS_Snippets_Winforms/ClickOnceAPI/cpp/form1.cpp#3)]
 [!code-csharp[ClickOnceAPI#3](~/samples/snippets/csharp/VS_Snippets_Winforms/ClickOnceAPI/CS/Form1.cs#3)]
 [!code-vb[ClickOnceAPI#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ClickOnceAPI/VB/Form1.vb#3)]

 ]]></format>
        </remarks>
        <altmember cref="P:System.Deployment.Application.ApplicationDeployment.UpdatedVersion" />
      </Docs>
    </Member>
    <Member MemberName="DataDirectory">
      <MemberSignature Language="C#" Value="public string DataDirectory { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataDirectory" />
      <MemberSignature Language="DocId" Value="P:System.Deployment.Application.ApplicationDeployment.DataDirectory" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DataDirectory As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DataDirectory { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DataDirectory : string" Usage="System.Deployment.Application.ApplicationDeployment.DataDirectory" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Pfad des Datenverzeichnisses von [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] ab.</summary>
        <value>Eine Zeichenfolge mit dem Pfad zum Datenverzeichnis der Anwendung auf dem lokalen Datenträger.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DownloadFileGroup">
      <MemberSignature Language="C#" Value="public void DownloadFileGroup (string groupName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DownloadFileGroup(string groupName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Deployment.Application.ApplicationDeployment.DownloadFileGroup(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DownloadFileGroup (groupName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DownloadFileGroup(System::String ^ groupName);" />
      <MemberSignature Language="F#" Value="member this.DownloadFileGroup : string -&gt; unit" Usage="applicationDeployment.DownloadFileGroup groupName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="groupName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="groupName">Die genannte Gruppe von Dateien zum Herunterladen. Alle in einer [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)]-Anwendung als "optional" markierten Dateien erfordern einen Gruppennamen.</param>
        <summary>Lädt bedarfsabhängig einen Satz optionaler Dateien herunter.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 In einer [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] Anwendung werden die Dateien, die im Anwendungs Manifest als "optional" markiert sind, während der Initialisierung oder Aktualisierung nicht heruntergeladen. Sie können die <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroup%2A>-Methode verwenden, um alle Dateien, die zu einer benannten Gruppe gehören, bei Bedarf herunterzuladen, sodass Sie keine Netzwerkressourcen und keinen Speicherplatz belegen, bis Sie sicher sind, dass der Benutzer Sie benötigt. Beispielsweise müssen bestimmte Benutzer möglicherweise ein Datenanalyse Paket, das in der Anwendung enthalten ist, täglich verwenden, während andere Benutzer Sie niemals aufrufen können.

 Um eine Assembly zu verwenden, die Sie mit <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroup%2A>heruntergeladen haben, fügen Sie einen Ereignislistener an das <xref:System.AppDomain.AssemblyResolve>-Ereignis auf dem <xref:System.AppDomain.CurrentDomain%2A>an. Ein Beispiel finden Sie unter = Exemplarische Vorgehensweise[: Herunterladen von Assemblys bei Bedarf mit der ClickOnce-Bereitstellungs-API mithilfe des Designers](/visualstudio/deployment/walkthrough-downloading-assemblies-on-demand-with-the-clickonce-deployment-api-using-the-designer).

 Alle Dateien werden in den [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] Anwendungscache heruntergeladen und sind daher auf die aktuelle Version der Anwendung isoliert. Nehmen wir an, dass der Benutzer nach dem Herunterladen einer Datei Gruppe eine neue Version der Anwendung installiert, aber später auf die vorherige Version der Anwendung zurückgreift. In diesem Fall enthält die vorherige Version weiterhin die Kopien der Dateien, die Sie ursprünglich heruntergeladen haben. Weitere Informationen zum Zugreifen auf Datendateien finden Sie unter [zugreifen auf lokale und Remote Daten in ClickOnce-Anwendungen](/visualstudio/deployment/accessing-local-and-remote-data-in-clickonce-applications).

 <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroup%2A> funktioniert in teilweise vertrauenswürdigen Anwendungen, d. h. in jeder [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] Anwendung, die mit eingeschränkten Berechtigungen ausgeführt wird. Wenn Sie jedoch versuchen, Assemblys dynamisch zu laden, ist für Ihre Anwendung volle Vertrauenswürdigkeit erforderlich.

 Das Bedarfs gesteuerte herunterladen von Datendateien wird derzeit nicht unterstützt.

 Die Anwendung reagiert erst dann auf Benutzereingaben, wenn die <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroup%2A>-Methode zurückgegeben wird. Wenn Sie Dateien herunterladen müssen, ohne den Workflow des Benutzers zu unterbrechen, verwenden Sie stattdessen die <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync%2A>-Methode.

 Sie können nur eine einzelne Datei mit dem Dateinamen herunterladen. Um eine einzelne Datei herunterzuladen, weisen Sie Ihr einen Gruppennamen in der [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)]-Bereitstellung zu, und laden Sie die Gruppe mit dieser Methode herunter.



## Examples
 Im folgenden Codebeispiel wird veranschaulicht, wie eine Assembly bei Bedarf geladen wird, indem auf das <xref:System.AppDomain.AssemblyResolve>-Ereignis gelauscht wird.

 [!code-csharp[ClickOnceOnDemandCmdLine#2](~/samples/snippets/csharp/VS_Snippets_Winforms/ClickOnceOnDemandCmdLine/CS/Form1.cs#2)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Der <paramref name="groupName" />-Parameter ist NULL oder hat die Länge 0 (null).</exception>
        <altmember cref="Overload:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync" />
        <related type="Article" href="/visualstudio/deployment/walkthrough-downloading-satellite-assemblies-on-demand-with-the-clickonce-deployment-api">Exemplarische Vorgehensweise: Herunterladen von Satellitenassemblys bei Bedarf mit der API für die ClickOnce-Bereitstellung</related>
        <related type="Article" href="/visualstudio/deployment/clickonce-application-manifest">ClickOnce Application Manifest</related>
        <related type="Article" href="/visualstudio/deployment/accessing-local-and-remote-data-in-clickonce-applications">Zugreifen auf lokale und Remotedaten in einer ClickOnce-Anwendung</related>
        <related type="Article" href="/visualstudio/deployment/how-to-include-a-data-file-in-a-clickonce-application">Gewusst wie: Einschließen einer Datendatei in eine ClickOnce-Anwendung</related>
        <related type="Article" href="/visualstudio/deployment/clickonce-cache-overview">Architektur des ClickOnce-Cache</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="DownloadFileGroupAsync">
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Lädt bedarfsabhängig einen Satz optionaler Dateien im Hintergrund herunter.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DownloadFileGroupAsync">
      <MemberSignature Language="C#" Value="public void DownloadFileGroupAsync (string groupName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DownloadFileGroupAsync(string groupName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DownloadFileGroupAsync (groupName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DownloadFileGroupAsync(System::String ^ groupName);" />
      <MemberSignature Language="F#" Value="member this.DownloadFileGroupAsync : string -&gt; unit" Usage="applicationDeployment.DownloadFileGroupAsync groupName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="groupName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="groupName">Die genannte Gruppe von Dateien zum Herunterladen. Alle in einer [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)]-Anwendung als "optional" markierten Dateien erfordern einen Gruppennamen.</param>
        <summary>Lädt bedarfsabhängig einen Satz optionaler Dateien im Hintergrund herunter.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 In einer [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] Anwendung werden die Dateien, die im Anwendungs Manifest als "optional" markiert sind, während der Initialisierung oder Aktualisierung nicht heruntergeladen. Sie können die <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync%2A>-Methode verwenden, um alle Dateien, die zu einer benannten Gruppe gehören, bei Bedarf herunterzuladen, sodass Sie keine Netzwerkressourcen und keinen Speicherplatz belegen, bis Sie sicher sind, dass der Benutzer Sie benötigt. Diese Vorgehensweise funktioniert nicht nur bei statischen Dateien, sondern auch bei Assemblys, die von einer Anwendung benötigt werden oder nicht. Beispielsweise müssen bestimmte Benutzer möglicherweise ein Datenanalyse Paket, das in der Anwendung enthalten ist, täglich verwenden, während andere Benutzer Sie niemals aufrufen können.

 Wenn Sie Assemblys Bedarfs gesteuert herunterladen möchten, fügen Sie einen Ereignislistener an das <xref:System.AppDomain.AssemblyResolve>-Ereignis <xref:System.AppDomain.CurrentDomain%2A>auf Ein Beispiel finden Sie unter Exemplarische Vorgehensweise [: Herunterladen von Assemblys bei Bedarf mit der ClickOnce-Bereitstellungs-API](/visualstudio/deployment/walkthrough-downloading-assemblies-on-demand-with-the-clickonce-deployment-api)

 Alle Assemblys werden in den [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] Anwendungscache heruntergeladen.

 Alle statischen Dateien werden in das Datenverzeichnis der [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] Anwendung heruntergeladen und sind daher auf die aktuelle Version der Anwendung isoliert. Nehmen wir an, dass der Benutzer nach dem Herunterladen einer Datei Gruppe eine neue Version der Anwendung installiert, aber später auf die vorherige Version der Anwendung zurückgreift. In diesem Fall enthält die vorherige Version weiterhin die Kopien der Dateien, die Sie ursprünglich heruntergeladen haben. Weitere Informationen zum Zugreifen auf statische Dateien finden Sie unter [zugreifen auf lokale und Remote Daten in ClickOnce-Anwendungen](/visualstudio/deployment/accessing-local-and-remote-data-in-clickonce-applications).

 Sie können mehrere Dateigruppen gleichzeitig mit <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync%2A>herunterladen. Sie können zwischen diesen unterschieden werden, indem Sie die <xref:System.Deployment.Application.DeploymentProgressChangedEventArgs.Group%2A>-Eigenschaft der <xref:System.Deployment.Application.DeploymentProgressChangedEventArgs>-Klasse verwenden, die an das <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupProgressChanged>-Ereignis übermittelt wird. Wenn Sie einen komplexeren Zustand übergeben müssen, können Sie <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync%2A> verwenden, um ein `state` Objekt zu übergeben.

 <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroup%2A> funktioniert in teilweise vertrauenswürdigen Anwendungen, d. h. in jeder [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] Anwendung, die mit eingeschränkten Berechtigungen ausgeführt wird. Wenn Sie jedoch versuchen, Assemblys dynamisch zu laden, ist für Ihre Anwendung volle Vertrauenswürdigkeit erforderlich.

 Das Bedarfs gesteuerte herunterladen von Datendateien wird derzeit nicht unterstützt.

 Sie können nur eine einzelne Datei mit dem Dateinamen herunterladen. Um eine einzelne Datei herunterzuladen, weisen Sie Ihr einen Gruppennamen in der [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)]-Bereitstellung zu, und laden Sie die Gruppe mit dieser Methode herunter.

 Rufen Sie die <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsyncCancel%2A>-Methode auf, um einen asynchronen Download abzubrechen.

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Der <paramref name="groupName" />-Parameter ist NULL oder hat die Länge 0 (null).</exception>
        <exception cref="T:System.InvalidOperationException">Sie können nicht mehr als einen Download von <paramref name="groupName" /> gleichzeitig initiieren.</exception>
        <altmember cref="M:System.Deployment.Application.ApplicationDeployment.DownloadFileGroup(System.String)" />
        <related type="Article" href="/visualstudio/deployment/walkthrough-downloading-satellite-assemblies-on-demand-with-the-clickonce-deployment-api">Exemplarische Vorgehensweise: Herunterladen von Satellitenassemblys bei Bedarf mit der API für die ClickOnce-Bereitstellung</related>
        <related type="Article" href="/visualstudio/deployment/clickonce-application-manifest">ClickOnce Application Manifest</related>
        <related type="Article" href="/visualstudio/deployment/accessing-local-and-remote-data-in-clickonce-applications">Zugreifen auf lokale und Remotedaten in einer ClickOnce-Anwendung</related>
        <related type="Article" href="/visualstudio/deployment/how-to-include-a-data-file-in-a-clickonce-application">Gewusst wie: Einschließen einer Datendatei in eine ClickOnce-Anwendung</related>
        <related type="Article" href="/visualstudio/deployment/clickonce-cache-overview">Architektur des ClickOnce-Cache</related>
      </Docs>
    </Member>
    <Member MemberName="DownloadFileGroupAsync">
      <MemberSignature Language="C#" Value="public void DownloadFileGroupAsync (string groupName, object userState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DownloadFileGroupAsync(string groupName, object userState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DownloadFileGroupAsync (groupName As String, userState As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DownloadFileGroupAsync(System::String ^ groupName, System::Object ^ userState);" />
      <MemberSignature Language="F#" Value="member this.DownloadFileGroupAsync : string * obj -&gt; unit" Usage="applicationDeployment.DownloadFileGroupAsync (groupName, userState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="groupName" Type="System.String" />
        <Parameter Name="userState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="groupName">Die genannte Gruppe von Dateien zum Herunterladen. Alle in einer [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)]-Anwendung als "optional" markierten Dateien erfordern einen Gruppennamen.</param>
        <param name="userState">Ein beliebiges Objekt, das Zustandsinformationen für den asynchronen Vorgang enthält.</param>
        <summary>Lädt bedarfsabhängig einen Satz optionaler Dateien im Hintergrund herunter und übergibt den Ereignisrückrufen die Informationen vom Anwendungszustand.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 In einer [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] Anwendung werden die Dateien, die im Anwendungs Manifest als "optional" markiert sind, während der Initialisierung oder Aktualisierung nicht heruntergeladen. Sie können die <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync%2A>-Methode verwenden, um alle Dateien, die zu einer benannten Gruppe gehören, bei Bedarf herunterzuladen, sodass Sie keine Netzwerkressourcen und keinen Speicherplatz belegen, bis Sie sicher sind, dass der Benutzer Sie benötigt. Diese Vorgehensweise funktioniert nicht nur bei statischen Dateien, sondern auch bei Assemblys, die von einer Anwendung benötigt werden oder nicht. Beispielsweise müssen bestimmte Benutzer möglicherweise ein Datenanalyse Paket, das in der Anwendung enthalten ist, täglich verwenden, während andere Benutzer Sie niemals aufrufen können. Wenn Sie Assemblys Bedarfs gesteuert herunterladen möchten, fügen Sie einen Ereignislistener an das <xref:System.AppDomain.AssemblyResolve>-Ereignis <xref:System.AppDomain.CurrentDomain%2A>auf

 Sie können mehrere Dateigruppen gleichzeitig herunterladen, indem Sie die <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync%2A>-Methode verwenden. Sie können zwischen diesen unterschieden werden, indem Sie die <xref:System.Deployment.Application.DeploymentProgressChangedEventArgs.Group%2A>-Eigenschaft der <xref:System.Deployment.Application.DeploymentProgressChangedEventArgs>-Klasse verwenden, die an das <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupProgressChanged>-Ereignis übermittelt wird. Wenn Sie einen komplexeren Status übergeben müssen, können Sie

 <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync%2A>, um ein `state` Objekt zu übergeben.

 Alle statischen Dateien werden in das Datenverzeichnis der [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] Anwendung heruntergeladen und sind daher auf die aktuelle Version der Anwendung isoliert. Weitere Informationen zum Zugreifen auf statische Dateien finden Sie unter [zugreifen auf lokale und Remote Daten in ClickOnce-Anwendungen](/visualstudio/deployment/accessing-local-and-remote-data-in-clickonce-applications). erforderlich. Nehmen wir an, dass der Benutzer eine neue Version der Anwendung installiert, nachdem eine Anwendung eine Datei Gruppe heruntergeladen hat, aber der spätere Benutzer greift auf die vorherige Version der Anwendung zurück. In diesem Fall enthält die vorherige Version weiterhin die Kopien der Dateien, die Sie ursprünglich heruntergeladen haben.

 <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroup%2A> funktioniert in teilweise vertrauenswürdigen Anwendungen, d. h. in jeder [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] Anwendung, die mit eingeschränkten Berechtigungen ausgeführt wird. Wenn Sie jedoch versuchen, Assemblys dynamisch zu laden, ist für Ihre Anwendung volle Vertrauenswürdigkeit erforderlich.

 Das Bedarfs gesteuerte herunterladen von Datendateien wird derzeit nicht unterstützt.

 Rufen Sie die <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsyncCancel%2A>-Methode auf, um einen asynchronen Download abzubrechen.

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Der <paramref name="groupName" />-Parameter ist NULL oder hat die Länge 0 (null).</exception>
        <exception cref="T:System.InvalidOperationException">Sie können nicht mehr als einen Download von <paramref name="groupName" /> gleichzeitig initiieren.</exception>
        <altmember cref="M:System.Deployment.Application.ApplicationDeployment.DownloadFileGroup(System.String)" />
        <related type="Article" href="/visualstudio/deployment/walkthrough-downloading-satellite-assemblies-on-demand-with-the-clickonce-deployment-api">Exemplarische Vorgehensweise: Herunterladen von Satellitenassemblys bei Bedarf mit der API für die ClickOnce-Bereitstellung</related>
        <related type="Article" href="/visualstudio/deployment/clickonce-application-manifest">ClickOnce Application Manifest</related>
        <related type="Article" href="/visualstudio/deployment/accessing-local-and-remote-data-in-clickonce-applications">Zugreifen auf lokale und Remotedaten in einer ClickOnce-Anwendung</related>
        <related type="Article" href="/visualstudio/deployment/how-to-include-a-data-file-in-a-clickonce-application">Gewusst wie: Einschließen einer Datendatei in eine ClickOnce-Anwendung</related>
        <related type="Article" href="/visualstudio/deployment/clickonce-cache-overview">Architektur des ClickOnce-Cache</related>
      </Docs>
    </Member>
    <Member MemberName="DownloadFileGroupAsyncCancel">
      <MemberSignature Language="C#" Value="public void DownloadFileGroupAsyncCancel (string groupName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DownloadFileGroupAsyncCancel(string groupName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsyncCancel(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DownloadFileGroupAsyncCancel (groupName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DownloadFileGroupAsyncCancel(System::String ^ groupName);" />
      <MemberSignature Language="F#" Value="member this.DownloadFileGroupAsyncCancel : string -&gt; unit" Usage="applicationDeployment.DownloadFileGroupAsyncCancel groupName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="groupName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="groupName">Die genannte Gruppe von Dateien zum Herunterladen. Alle in einer [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)]-Anwendung als "optional" markierten Dateien erfordern einen Gruppennamen.</param>
        <summary>Bricht einen asynchronen Dateidownload ab.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="groupName" /> darf nicht <see langword="null" /> sein.</exception>
      </Docs>
    </Member>
    <Member MemberName="DownloadFileGroupCompleted">
      <MemberSignature Language="C#" Value="public event System.Deployment.Application.DownloadFileGroupCompletedEventHandler DownloadFileGroupCompleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Deployment.Application.DownloadFileGroupCompletedEventHandler DownloadFileGroupCompleted" />
      <MemberSignature Language="DocId" Value="E:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupCompleted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DownloadFileGroupCompleted As DownloadFileGroupCompletedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Deployment::Application::DownloadFileGroupCompletedEventHandler ^ DownloadFileGroupCompleted;" />
      <MemberSignature Language="F#" Value="member this.DownloadFileGroupCompleted : System.Deployment.Application.DownloadFileGroupCompletedEventHandler " Usage="member this.DownloadFileGroupCompleted : System.Deployment.Application.DownloadFileGroupCompletedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Deployment.Application.DownloadFileGroupCompletedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt im Hauptanwendungsthread auf, wenn ein Dateidownload abgeschlossen ist.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Das <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupCompleted>-Ereignis wird im Hauptanwendungs Thread aufgerufen. Es ist Thread sicher, die Windows Forms Steuerelemente der Anwendung direkt innerhalb dieses Rückrufs aufzurufen.

 Überprüfen Sie die <xref:System.ComponentModel.AsyncCompletedEventArgs.Error%2A>-Eigenschaft des <xref:System.ComponentModel.AsyncCompletedEventArgs>, die für diesen Rückruf bereitgestellt wird. Wenn diese Eigenschaft `null`ist, war der Download erfolgreich. Wenn dies `null`nicht der Fall ist, ist die Installation nicht erfolgreich, und Sie finden weitere Informationen über den Installationsfehler über die <xref:System.ComponentModel.AsyncCompletedEventArgs.Error%2A>-Eigenschaft.



## Examples
 Im folgenden Codebeispiel wird eine Gruppe von Hilfedateien im Hintergrund heruntergeladen. Das Beispiel erfordert, dass Sie eine Windows Forms Anwendung bereitstellen, die ein <xref:System.Windows.Forms.StatusStrip> Steuerelement enthält, und dass dieses Steuerelement ein <xref:System.Windows.Forms.ToolStripStatusLabel>-Steuerelement mit dem Namen `downloadStatus`enthält.

 [!code-cpp[ClickOnceAPI#8](~/samples/snippets/cpp/VS_Snippets_Winforms/ClickOnceAPI/cpp/form1.cpp#8)]
 [!code-csharp[ClickOnceAPI#8](~/samples/snippets/csharp/VS_Snippets_Winforms/ClickOnceAPI/CS/Form1.cs#8)]
 [!code-vb[ClickOnceAPI#8](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ClickOnceAPI/VB/Form1.vb#8)]

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DownloadFileGroupProgressChanged">
      <MemberSignature Language="C#" Value="public event System.Deployment.Application.DeploymentProgressChangedEventHandler DownloadFileGroupProgressChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Deployment.Application.DeploymentProgressChangedEventHandler DownloadFileGroupProgressChanged" />
      <MemberSignature Language="DocId" Value="E:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupProgressChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DownloadFileGroupProgressChanged As DeploymentProgressChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Deployment::Application::DeploymentProgressChangedEventHandler ^ DownloadFileGroupProgressChanged;" />
      <MemberSignature Language="F#" Value="member this.DownloadFileGroupProgressChanged : System.Deployment.Application.DeploymentProgressChangedEventHandler " Usage="member this.DownloadFileGroupProgressChanged : System.Deployment.Application.DeploymentProgressChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Deployment.Application.DeploymentProgressChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt auf, wenn Statusinformationen über einen Dateidownloadvorgang verfügbar sind, der durch einen Aufruf von <see cref="Overload:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync" /> initiiert wurde.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Das <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupProgressChanged>-Ereignis wird im Hauptanwendungs Thread aufgerufen. Es ist Thread sicher, die Windows Forms Steuerelemente der Anwendung direkt innerhalb dieses Rückrufs aufzurufen.

 Verwenden Sie die Informationen, die in <xref:System.Deployment.Application.DeploymentProgressChangedEventArgs> bereitgestellt werden, um den Benutzern Statusinformationen mitzuteilen.



## Examples
 Im folgenden Codebeispiel wird eine Gruppe von Hilfedateien im Hintergrund heruntergeladen. Das Beispiel erfordert, dass Sie eine Windows Forms Anwendung bereitstellen, die ein <xref:System.Windows.Forms.StatusStrip> Steuerelement enthält, und dass dieses Steuerelement ein <xref:System.Windows.Forms.ToolStripStatusLabel>-Steuerelement mit dem Namen `downloadStatus`enthält.

 [!code-cpp[ClickOnceAPI#8](~/samples/snippets/cpp/VS_Snippets_Winforms/ClickOnceAPI/cpp/form1.cpp#8)]
 [!code-csharp[ClickOnceAPI#8](~/samples/snippets/csharp/VS_Snippets_Winforms/ClickOnceAPI/CS/Form1.cs#8)]
 [!code-vb[ClickOnceAPI#8](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ClickOnceAPI/VB/Form1.vb#8)]

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsFileGroupDownloaded">
      <MemberSignature Language="C#" Value="public bool IsFileGroupDownloaded (string groupName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsFileGroupDownloaded(string groupName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Deployment.Application.ApplicationDeployment.IsFileGroupDownloaded(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsFileGroupDownloaded (groupName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsFileGroupDownloaded(System::String ^ groupName);" />
      <MemberSignature Language="F#" Value="member this.IsFileGroupDownloaded : string -&gt; bool" Usage="applicationDeployment.IsFileGroupDownloaded groupName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="groupName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="groupName">Die genannte Gruppe von Dateien zum Herunterladen. Alle in einer [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)]-Anwendung als "optional" markierten Dateien erfordern einen Gruppennamen.</param>
        <summary>Überprüft, ob die genannte Dateigruppe bereits zum Clientcomputer heruntergeladen wurde.</summary>
        <returns><see langword="true" />, wenn die Dateigruppe bereits für die aktuelle Version dieser Anwendung heruntergeladen wurde, andernfalls <see langword="false" />. Wenn eine neue Version der Anwendung installiert wurde und die neue Version in der Dateigruppe keine Dateien hinzugefügt, entfernt oder geändert hat, gibt <see cref="M:System.Deployment.Application.ApplicationDeployment.IsFileGroupDownloaded(System.String)" /><see langword="true" /> zurück.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Deployment.Application.ApplicationDeployment.IsFileGroupDownloaded%2A> funktioniert in einer teilweise vertrauenswürdigen Anwendung ohne Sicherheitsanforderungen.

 Wenn Sie eine Anwendung aktualisieren, werden von [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] alle bedarfsgesteuerten Datendateien aus der vorherigen Version in das Datenverzeichnis der neuen Version kopiert. Wenn Sie eine neue Version dieser Dateien herunterladen, entfernen Sie alle Daten, die Sie beibehalten möchten, aus der alten Version, und verschieben Sie Sie in die neue Version.



## Examples
 Im folgenden Codebeispiel werden alle Dateien in der `HelpFiles` Gruppe auf den Datenträger heruntergeladen.

 [!code-cpp[ClickOnceAPI#8](~/samples/snippets/cpp/VS_Snippets_Winforms/ClickOnceAPI/cpp/form1.cpp#8)]
 [!code-csharp[ClickOnceAPI#8](~/samples/snippets/csharp/VS_Snippets_Winforms/ClickOnceAPI/CS/Form1.cs#8)]
 [!code-vb[ClickOnceAPI#8](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ClickOnceAPI/VB/Form1.vb#8)]

 ]]></format>
        </remarks>
        <exception cref="T:System.Deployment.Application.InvalidDeploymentException"><paramref name="groupName" /> ist keine im Anwendungsmanifest definierte Dateigruppe.</exception>
        <altmember cref="M:System.Deployment.Application.ApplicationDeployment.DownloadFileGroup(System.String)" />
        <altmember cref="Overload:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync" />
      </Docs>
    </Member>
    <Member MemberName="IsFirstRun">
      <MemberSignature Language="C#" Value="public bool IsFirstRun { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsFirstRun" />
      <MemberSignature Language="DocId" Value="P:System.Deployment.Application.ApplicationDeployment.IsFirstRun" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsFirstRun As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsFirstRun { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsFirstRun : bool" Usage="System.Deployment.Application.ApplicationDeployment.IsFirstRun" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob dies das erste Mal ist, dass diese Anwendung auf dem Clientcomputer ausgeführt wird.</summary>
        <value><see langword="true" />, wenn diese Version der Anwendung vorher nie auf dem Clientcomputer ausgeführt wurde; andernfalls <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Verwenden Sie <xref:System.Deployment.Application.ApplicationDeployment.IsFirstRun%2A>, um zu bestimmen, ob Sie bei der erstmaligen Ausführung der Anwendung einmalige Initialisierungs Vorgänge ausführen müssen.

 Gehen Sie nicht davon aus, dass eine <xref:System.Deployment.Application.ApplicationDeployment.IsFirstRun%2A> Einstellung von `true` angibt, dass diese Instanz einer Anwendung der erste ist, um die Benutzeroberfläche für den Benutzer anzuzeigen. Aufgrund der Art und Weise, wie das System Prozesse plant, kann die <xref:System.Deployment.Application.ApplicationDeployment.IsFirstRun%2A>-Eigenschaft einer Instanz der Anwendung auf `true`festgelegt werden, aber eine andere Instanz ist möglicherweise die erste, die auf dem Bildschirm dargestellt werden soll. Der Wert dieser Eigenschaft wird zurückgesetzt, sobald der Benutzer ein Upgrade von einer Version auf die nächste durchführt. Wenn Sie nur zum ersten Mal eine Version der Anwendung ausführen möchten, müssen Sie einen zusätzlichen Test durchführen, z. b. überprüfen, ob eine Datei vorhanden ist, die Sie erstmalig erstellt haben, oder ein Flag mithilfe von **Anwendungseinstellungen**speichern.



## Examples
 Im folgenden Codebeispiel wird <xref:System.Deployment.Application.ApplicationDeployment.IsFirstRun%2A> verwendet, um zu entscheiden, ob ein Update für die Datei Gruppe `HelpFiles`überprüft werden soll. Wenn eine oder mehrere der Dateien aktualisiert wurden, wird <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroup%2A> aufgerufen, um die neuen Versionen zu erhalten.

 [!code-csharp[ClickOnceAPI#9](~/samples/snippets/csharp/VS_Snippets_Winforms/ClickOnceAPI/CS/Form1.cs#9)]
 [!code-vb[ClickOnceAPI#9](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ClickOnceAPI/VB/Form1.vb#9)]

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsNetworkDeployed">
      <MemberSignature Language="C#" Value="public static bool IsNetworkDeployed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool IsNetworkDeployed" />
      <MemberSignature Language="DocId" Value="P:System.Deployment.Application.ApplicationDeployment.IsNetworkDeployed" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property IsNetworkDeployed As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool IsNetworkDeployed { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsNetworkDeployed : bool" Usage="System.Deployment.Application.ApplicationDeployment.IsNetworkDeployed" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob die aktuelle Anwendung eine [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)]-Anwendung ist.</summary>
        <value><see langword="true" />, wenn es sich um eine [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)]-Anwendung handelt, andernfalls <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Wenn Sie möchten, dass Ihre Anwendung sowohl innerhalb als auch außerhalb einer [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] Bereitstellung ausgeführt wird (z. b. Wenn Sie die Anwendung vor der Bereitstellung auf dem lokalen Computer debuggen müssen), testen Sie <xref:System.Deployment.Application.ApplicationDeployment.IsNetworkDeployed%2A>, bevor Sie auf die <xref:System.Deployment.Application.ApplicationDeployment.CurrentDeployment%2A> Eigenschaft zugreifen.

 <xref:System.Deployment.Application.ApplicationDeployment.IsNetworkDeployed%2A> gibt `true` zurück, unabhängig davon, ob die Anwendung online installiert oder gehostet wird und unabhängig davon, ob Sie von einer Website, einer Dateifreigabe oder einer CD-ROM installiert wurde.



## Examples
 Im folgenden Codebeispiel wird <xref:System.Deployment.Application.ApplicationDeployment.CurrentDeployment%2A> abgerufen, indem zuerst <xref:System.Deployment.Application.ApplicationDeployment.IsNetworkDeployed%2A> verwendet wird, um sicherzustellen, dass der Verweis nicht `null`ist.

 [!code-cpp[ClickOnceAPI#2](~/samples/snippets/cpp/VS_Snippets_Winforms/ClickOnceAPI/cpp/form1.cpp#2)]
 [!code-csharp[ClickOnceAPI#2](~/samples/snippets/csharp/VS_Snippets_Winforms/ClickOnceAPI/CS/Form1.cs#2)]

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TimeOfLastUpdateCheck">
      <MemberSignature Language="C#" Value="public DateTime TimeOfLastUpdateCheck { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime TimeOfLastUpdateCheck" />
      <MemberSignature Language="DocId" Value="P:System.Deployment.Application.ApplicationDeployment.TimeOfLastUpdateCheck" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TimeOfLastUpdateCheck As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DateTime TimeOfLastUpdateCheck { DateTime get(); };" />
      <MemberSignature Language="F#" Value="member this.TimeOfLastUpdateCheck : DateTime" Usage="System.Deployment.Application.ApplicationDeployment.TimeOfLastUpdateCheck" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft das Datum und die Uhrzeit ab, zu der [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] zuletzt nach einem Anwendungsupdate gesucht hat.</summary>
        <value>Der <see cref="T:System.DateTime" /> der letzten Updateprüfung.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Eine [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] Anwendung kann für Abonnement Updates konfiguriert werden. In diesem Szenario fragt [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] den Bereitstellungs Speicherort einer Anwendung automatisch in Intervallen ab, die im Bereitstellungs Manifest definiert sind, und bestimmt, ob ein Update verfügbar ist. <xref:System.Deployment.Application.ApplicationDeployment.TimeOfLastUpdateCheck%2A> gibt den Zeitpunkt der letzten Update Überprüfung zurück, unabhängig davon, ob er durch ein Abonnement initiiert wurde, oder durch eine explizite Überprüfung mithilfe der Methode <xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdate%2A>, <xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdateAsync%2A>, <xref:System.Deployment.Application.ApplicationDeployment.CheckForDetailedUpdate%2A>, <xref:System.Deployment.Application.ApplicationDeployment.Update%2A>oder <xref:System.Deployment.Application.ApplicationDeployment.UpdateAsync%2A>.

 Wenn seit der Installation der Anwendung keine Update Überprüfung durchgeführt wurde, gibt <xref:System.Deployment.Application.ApplicationDeployment.TimeOfLastUpdateCheck%2A> die Installationszeit zurück.



## Examples
 Im folgenden Codebeispiel wird überprüft, ob eine [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] Anwendung in den letzten drei Tagen auf verfügbare Updates überprüft wurde.

 [!code-cpp[ClickOnceAPI#3](~/samples/snippets/cpp/VS_Snippets_Winforms/ClickOnceAPI/cpp/form1.cpp#3)]
 [!code-csharp[ClickOnceAPI#3](~/samples/snippets/csharp/VS_Snippets_Winforms/ClickOnceAPI/CS/Form1.cs#3)]
 [!code-vb[ClickOnceAPI#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ClickOnceAPI/VB/Form1.vb#3)]

 ]]></format>
        </remarks>
        <related type="Article" href="/visualstudio/deployment/choosing-a-clickonce-update-strategy">Auswählen einer Strategie für die ClickOnce-Aktualisierung</related>
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public bool Update ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Update() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Deployment.Application.ApplicationDeployment.Update" />
      <MemberSignature Language="VB.NET" Value="Public Function Update () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Update();" />
      <MemberSignature Language="F#" Value="member this.Update : unit -&gt; bool" Usage="applicationDeployment.Update " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Lädt die neueste Version dieser Anwendung synchron herunter und installiert sie.</summary>
        <returns><see langword="true" />, wenn eine Anwendung aktualisiert wurde, andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Eine Anwendung wird als aktualisiert betrachtet, wenn Sie eine neue Version der Anwendung an dem durch <xref:System.Deployment.Application.ApplicationDeployment.UpdateLocation%2A>angegebenen Speicherort veröffentlichen und die Versionsnummer im Bereitstellungs Manifest der Anwendung höher ist als die Versionsnummer der Anwendung, die zurzeit auf dem Computer des Benutzers installiert ist.

 Der <xref:System.Deployment.Application.ApplicationDeployment.Update%2A>-Aufrufe wird blockiert, bis das Update auf den Client Computer heruntergeladen und im [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] Cache installiert wurde. Während dieses Zeitraums reagiert die Anwendung nicht auf den Benutzer. Wenn Sie die Reaktionsfähigkeit der Anwendung aufrechterhalten oder während des Downloads einen Fortschrittsbericht anzeigen möchten, verwenden Sie stattdessen die <xref:System.Deployment.Application.ApplicationDeployment.UpdateAsync%2A>-Methode.

 <xref:System.Deployment.Application.ApplicationDeployment.Update%2A> lädt alle Dateien herunter, die im Anwendungs Manifest nicht als "optional" markiert sind. Sie können optionale Dateien bei Bedarf herunterladen, indem Sie die <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroup%2A> oder die <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync%2A>-Methode verwenden.

 [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] werden die Anwendung möglicherweise bereits automatisch aktualisiert, wenn Sie die <xref:System.Deployment.Application.ApplicationDeployment.Update%2A>-Methode aufzurufen. Wenn dies der Fall ist, lösen Aufrufe dieser Methode eine <xref:System.InvalidOperationException>aus.

 Wenn Sie eine oder mehrere Dateien in der Bereitstellung aktualisiert haben, aber das Anwendungs Manifest nicht aktualisiert haben, erhalten Sie eine <xref:System.Deployment.Application.InvalidDeploymentException>. In den meisten Fällen wird dieses Problem durch die erneute Bereitstellung Ihrer [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] Anwendung gelöst. Diese Ausnahme wird auch angezeigt, wenn eine Signatur eines öffentlichen Schlüssels für ein Bereitstellungs Manifest oder ein Anwendungs Manifest ungültig oder nicht vorhanden ist.

 Ein Update kann auf dem lokalen Computer eine höhere Vertrauens Ebene als die vorherige Version der Anwendung anfordern. Wenn die Anwendung die Bereitstellung einer vertrauenswürdigen Anwendung verwendet, wird das Bereitstellungs Manifest vom Common Language Runtime (CLR)-Vertrauensstellungs-Manager untersucht, um zu bestimmen, ob eine gültige Vertrauens Wenn das Bereitstellungs Manifest keine gültige Vertrauens Lizenz enthält, wird die Installation von [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] beendet, und es wird eine <xref:System.Deployment.Application.TrustNotGrantedException>ausgelöst. Die <xref:System.Deployment.Application.ApplicationDeployment.Update%2A>-Methode zeigt nie eine Eingabeaufforderung an, in der der Benutzer gefragt wird, ob die Anwendung die Berechtigung zum Ausführen erteilen soll.



## Examples
 Im folgenden Codebeispiel wird auf ein Anwendungs Update geprüft. Wenn ein Update verfügbar ist, wird es synchron installiert.

 [!code-cpp[ClickOnceAPI#6](~/samples/snippets/cpp/VS_Snippets_Winforms/ClickOnceAPI/cpp/form1.cpp#6)]
 [!code-csharp[ClickOnceAPI#6](~/samples/snippets/csharp/VS_Snippets_Winforms/ClickOnceAPI/CS/Form1.cs#6)]
 [!code-vb[ClickOnceAPI#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ClickOnceAPI/VB/Form1.vb#6)]

 ]]></format>
        </remarks>
        <exception cref="T:System.Deployment.Application.TrustNotGrantedException">Die Anwendung darf die angeforderte Berechtigungsstufe auf dem lokalen Computer nicht ausführen.</exception>
        <exception cref="T:System.Deployment.Application.InvalidDeploymentException">Die [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)]-Bereitstellung ist beschädigt. Tipps zur Diagnose und der Behebung des Problems finden Sie unter [Problembehandlung bei ClickOnce-Bereitstellungen](/visualstudio/deployment/troubleshooting-clickonce-deployments).</exception>
        <exception cref="T:System.Deployment.Application.DeploymentDownloadException">Die neue Bereitstellung konnte nicht vom Speicherort im Netzwerk heruntergeladen werden.</exception>
        <exception cref="T:System.InvalidOperationException">Die Anwendung wird gerade aktualisiert.</exception>
        <altmember cref="M:System.Deployment.Application.ApplicationDeployment.UpdateAsync" />
        <altmember cref="M:System.Deployment.Application.ApplicationDeployment.CheckForUpdateAsync" />
        <altmember cref="M:System.Deployment.Application.ApplicationDeployment.CheckForUpdate" />
        <altmember cref="M:System.Deployment.Application.ApplicationDeployment.CheckForDetailedUpdate" />
        <related type="Article" href="/visualstudio/deployment/choosing-a-clickonce-update-strategy">Auswählen einer Strategie für die ClickOnce-Aktualisierung</related>
        <related type="Article" href="/visualstudio/deployment/securing-clickonce-applications">ClickOnce-Bereitstellung und Sicherheit</related>
      </Docs>
    </Member>
    <Member MemberName="UpdateAsync">
      <MemberSignature Language="C#" Value="public void UpdateAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UpdateAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Deployment.Application.ApplicationDeployment.UpdateAsync" />
      <MemberSignature Language="VB.NET" Value="Public Sub UpdateAsync ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UpdateAsync();" />
      <MemberSignature Language="F#" Value="member this.UpdateAsync : unit -&gt; unit" Usage="applicationDeployment.UpdateAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Lädt die neueste Version dieser Anwendung asynchron herunter und installiert sie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Eine Anwendung wird als aktualisiert betrachtet, wenn Sie eine neue Version der Anwendung an dem durch <xref:System.Deployment.Application.ApplicationDeployment.UpdateLocation%2A>angegebenen Speicherort veröffentlichen und die Versionsnummer im Bereitstellungs Manifest der Anwendung höher ist als die Versionsnummer der Anwendung, die zurzeit auf dem Computer des Benutzers installiert ist.

 Beim Herunterladen des Updates wird von [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] der <xref:System.Deployment.Application.ApplicationDeployment.UpdateProgressChanged>-Ereignishandler im Hauptanwendungs Thread ausgegeben, um Sie über den Status des Downloads zu informieren. Wenn die asynchrone Aktualisierung abgeschlossen ist oder eine Ausnahme auftritt, wird [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] das <xref:System.Deployment.Application.ApplicationDeployment.UpdateCompleted>-Ereignis im Hauptanwendungs Thread auslöst. Überprüfen Sie die <xref:System.ComponentModel.AsyncCompletedEventArgs> für dieses Ereignis, um zu bestimmen, ob das Update erfolgreich ausgeführt wurde.

 Wenn <xref:System.Deployment.Application.ApplicationDeployment.UpdateAsync%2A> eine Ausnahme auslöst, ruft [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] <xref:System.Deployment.Application.ApplicationDeployment.UpdateCompleted> auf und legt die <xref:System.ComponentModel.AsyncCompletedEventArgs.Error%2A>-Eigenschaft von <xref:System.ComponentModel.AsyncCompletedEventArgs> auf die ausgelöste Ausnahme fest.

 <xref:System.Deployment.Application.ApplicationDeployment.UpdateAsync%2A> werden alle Dateien in einer Bereitstellung heruntergeladen, die im Anwendungs Manifest nicht als "optional" gekennzeichnet sind. Sie können optionale Dateien bei Bedarf herunterladen, indem Sie die <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroup%2A> oder die <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync%2A>-Methode verwenden.

 [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] werden die Anwendung möglicherweise bereits automatisch aktualisiert, wenn Sie die <xref:System.Deployment.Application.ApplicationDeployment.UpdateAsync%2A>-Methode aufzurufen. Wenn dies der Fall ist, lösen Aufrufe dieser Methode eine <xref:System.InvalidOperationException>aus.

 Wenn Sie eine oder mehrere Dateien in der Bereitstellung aktualisiert haben, aber das Anwendungs Manifest nicht aktualisiert haben, erhalten Sie eine <xref:System.Deployment.Application.InvalidDeploymentException>. In den meisten Fällen wird dieses Problem durch die Neuerstellung des Anwendungs Manifests gelöst. Diese Ausnahme wird auch angezeigt, wenn eine Signatur eines öffentlichen Schlüssels für ein Bereitstellungs Manifest oder ein Anwendungs Manifest ungültig oder nicht vorhanden ist.

 Ein Update kann auf dem lokalen Computer eine höhere Vertrauens Ebene als die vorherige Version der Anwendung anfordern. Wenn die Anwendung die Bereitstellung einer vertrauenswürdigen Anwendung verwendet, wird das Bereitstellungs Manifest vom Common Language Runtime (CLR)-Vertrauensstellungs-Manager untersucht, um zu bestimmen, ob eine gültige Vertrauens Wenn das Bereitstellungs Manifest keine gültige Vertrauens Lizenz enthält, wird die Installation von [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] beendet, und es wird eine <xref:System.Deployment.Application.TrustNotGrantedException>ausgelöst. <xref:System.Deployment.Application.ApplicationDeployment.UpdateAsync%2A> zeigt nie eine Eingabeaufforderung an, in der der Benutzer gefragt wird, ob er der Anwendung die Berechtigung zum Ausführen erteilen möchte.



## Examples
 Im folgenden Codebeispiel wird bestimmt, ob ein neues Update zur Ladezeit der Anwendung verfügbar ist. Wenn ein erforderliches Update verfügbar ist, wird das Update asynchron installiert. Das Beispiel erfordert, dass Sie eine Windows Forms Anwendung bereitstellen, die ein <xref:System.Windows.Forms.StatusStrip> Steuerelement enthält, und dass dieses Steuerelement ein <xref:System.Windows.Forms.ToolStripStatusLabel>-Steuerelement mit dem Namen `downloadStatus`enthält.

 [!code-cpp[ClickOnceAPI#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ClickOnceAPI/cpp/form1.cpp#1)]
 [!code-csharp[ClickOnceAPI#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ClickOnceAPI/CS/Form1.cs#1)]
 [!code-vb[ClickOnceAPI#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ClickOnceAPI/VB/Form1.vb#1)]

 ]]></format>
        </remarks>
        <exception cref="T:System.Deployment.Application.TrustNotGrantedException">Die Anwendung darf die angeforderte Berechtigungsstufe auf dem lokalen Computer nicht ausführen.</exception>
        <exception cref="T:System.Deployment.Application.InvalidDeploymentException">Die [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)]-Bereitstellung ist beschädigt. Tipps zur Diagnose und der Behebung des Problems finden Sie unter [Problembehandlung bei ClickOnce-Bereitstellungen](/visualstudio/deployment/troubleshooting-clickonce-deployments).</exception>
        <exception cref="T:System.Deployment.Application.DeploymentDownloadException">Die neue Bereitstellung konnte nicht vom Speicherort im Netzwerk heruntergeladen werden.</exception>
        <altmember cref="E:System.Deployment.Application.ApplicationDeployment.UpdateCompleted" />
        <related type="Article" href="/visualstudio/deployment/choosing-a-clickonce-update-strategy">Auswählen einer Strategie für die ClickOnce-Aktualisierung</related>
        <related type="Article" href="/visualstudio/deployment/securing-clickonce-applications">ClickOnce-Bereitstellung und Sicherheit</related>
      </Docs>
    </Member>
    <Member MemberName="UpdateAsyncCancel">
      <MemberSignature Language="C#" Value="public void UpdateAsyncCancel ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UpdateAsyncCancel() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Deployment.Application.ApplicationDeployment.UpdateAsyncCancel" />
      <MemberSignature Language="VB.NET" Value="Public Sub UpdateAsyncCancel ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UpdateAsyncCancel();" />
      <MemberSignature Language="F#" Value="member this.UpdateAsyncCancel : unit -&gt; unit" Usage="applicationDeployment.UpdateAsyncCancel " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Bricht ein asynchrones, von <see cref="M:System.Deployment.Application.ApplicationDeployment.UpdateAsync" /> initiiertes Update ab.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Deployment.Application.ApplicationDeployment.UpdateAsyncCancel%2A> bricht nur ein Update ab, das durch einen-<xref:System.Deployment.Application.ApplicationDeployment.UpdateAsync%2A>aufgerufen wurde. ein Update, das als Teil eines Abonnements gestartet wurde, wird nicht abgebrochen.

 ]]></format>
        </remarks>
        <related type="Article" href="/visualstudio/deployment/choosing-a-clickonce-update-strategy">Auswählen einer Strategie für die ClickOnce-Aktualisierung</related>
      </Docs>
    </Member>
    <Member MemberName="UpdateCompleted">
      <MemberSignature Language="C#" Value="public event System.ComponentModel.AsyncCompletedEventHandler UpdateCompleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.ComponentModel.AsyncCompletedEventHandler UpdateCompleted" />
      <MemberSignature Language="DocId" Value="E:System.Deployment.Application.ApplicationDeployment.UpdateCompleted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event UpdateCompleted As AsyncCompletedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::ComponentModel::AsyncCompletedEventHandler ^ UpdateCompleted;" />
      <MemberSignature Language="F#" Value="member this.UpdateCompleted : System.ComponentModel.AsyncCompletedEventHandler " Usage="member this.UpdateCompleted : System.ComponentModel.AsyncCompletedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.AsyncCompletedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, wenn [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] das Update der Anwendung aufgrund eines Aufrufs von <see cref="M:System.Deployment.Application.ApplicationDeployment.UpdateAsync" /> beendet hat.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Das <xref:System.Deployment.Application.ApplicationDeployment.UpdateCompleted>-Ereignis wird im Hauptanwendungs Thread aufgerufen. Sie können die Windows Forms Steuerelemente der Anwendung direkt innerhalb dieses Rückrufs aufzurufen, ohne eine Ausnahme auszulösen.

 Überprüfen Sie die <xref:System.ComponentModel.AsyncCompletedEventArgs.Error%2A>-Eigenschaft des <xref:System.ComponentModel.AsyncCompletedEventArgs>, die für diesen Rückruf bereitgestellt wird. Wenn diese Eigenschaft `null`ist, war die Installation erfolgreich. Wenn dies `null`nicht der Fall ist, ist die Installation nicht erfolgreich, und Sie finden weitere Informationen zu diesem Installationsfehler über die <xref:System.ComponentModel.AsyncCompletedEventArgs.Error%2A>-Eigenschaft. Nachdem das Update heruntergeladen wurde, müssen Sie die <xref:System.Windows.Forms.Application.Restart%2A>-Methode für das <xref:System.Windows.Forms.Application> abrufen, um die neuere Version der Anwendung zu verwenden.

 Wenn die Installation des Updates durch einen <xref:System.Deployment.Application.ApplicationDeployment.UpdateAsyncCancel%2A>abgebrochen wurde, wird die <xref:System.ComponentModel.AsyncCompletedEventArgs.Cancelled%2A>-Eigenschaft der <xref:System.ComponentModel.AsyncCompletedEventArgs>-Klasse `true`.

 Um diesen Ereignishandler verwenden zu können, muss die Anwendung sowohl den <xref:System.Deployment.Application> als auch <xref:System.ComponentModel> Namespaces importieren.



## Examples
 Im folgenden Codebeispiel wird zur Ladezeit der Anwendung bestimmt, ob ein neues Update verfügbar ist. Wenn ein erforderliches Update verfügbar ist, wird das Update asynchron installiert. Das Beispiel erfordert, dass Sie eine Windows Forms Anwendung bereitstellen, die ein <xref:System.Windows.Forms.StatusStrip> Steuerelement enthält, und dass dieses Steuerelement ein <xref:System.Windows.Forms.ToolStripStatusLabel>-Steuerelement mit dem Namen `downloadStatus`enthält.

 [!code-cpp[ClickOnceAPI#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ClickOnceAPI/cpp/form1.cpp#1)]
 [!code-csharp[ClickOnceAPI#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ClickOnceAPI/CS/Form1.cs#1)]
 [!code-vb[ClickOnceAPI#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ClickOnceAPI/VB/Form1.vb#1)]

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdatedApplicationFullName">
      <MemberSignature Language="C#" Value="public string UpdatedApplicationFullName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UpdatedApplicationFullName" />
      <MemberSignature Language="DocId" Value="P:System.Deployment.Application.ApplicationDeployment.UpdatedApplicationFullName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UpdatedApplicationFullName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ UpdatedApplicationFullName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UpdatedApplicationFullName : string" Usage="System.Deployment.Application.ApplicationDeployment.UpdatedApplicationFullName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den vollständigen Namen der Anwendung nach dem Update ab.</summary>
        <value>Ein <see cref="T:System.String" />, der den vollständigen Namen der Anwendung enthält.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdatedVersion">
      <MemberSignature Language="C#" Value="public Version UpdatedVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Version UpdatedVersion" />
      <MemberSignature Language="DocId" Value="P:System.Deployment.Application.ApplicationDeployment.UpdatedVersion" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UpdatedVersion As Version" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Version ^ UpdatedVersion { Version ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UpdatedVersion : Version" Usage="System.Deployment.Application.ApplicationDeployment.UpdatedVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Version</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Version des zuletzt heruntergeladenen Updates ab.</summary>
        <value>Die <see cref="T:System.Version" />, die die Version des Updates beschreibt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Deployment.Application.ApplicationDeployment.UpdatedVersion%2A> unterscheidet sich von <xref:System.Deployment.Application.ApplicationDeployment.CurrentVersion%2A>, wenn ein neues Update installiert wurde, Sie aber noch nicht <xref:System.Windows.Forms.Application.Restart%2A> auf dem <xref:System.Windows.Forms.Application>aufgerufen haben. Wenn das Bereitstellungs Manifest der Anwendung für automatische Updates konfiguriert ist, können Sie diese beiden Werte vergleichen, um zu bestimmen, ob die Anwendung neu gestartet werden soll.

 Wenn die Anwendung nicht aktualisiert wurde, gibt <xref:System.Deployment.Application.ApplicationDeployment.UpdatedVersion%2A> denselben Wert wie <xref:System.Deployment.Application.ApplicationDeployment.CurrentVersion%2A>zurück.



## Examples
 Im folgenden Codebeispiel wird eine-Methode definiert, die bestimmt, ob die Anwendung von [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] aktualisiert wurde.

 [!code-cpp[ClickOnceAPI#4](~/samples/snippets/cpp/VS_Snippets_Winforms/ClickOnceAPI/cpp/form1.cpp#4)]
 [!code-csharp[ClickOnceAPI#4](~/samples/snippets/csharp/VS_Snippets_Winforms/ClickOnceAPI/CS/Form1.cs#4)]
 [!code-vb[ClickOnceAPI#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ClickOnceAPI/VB/Form1.vb#4)]

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateLocation">
      <MemberSignature Language="C#" Value="public Uri UpdateLocation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri UpdateLocation" />
      <MemberSignature Language="DocId" Value="P:System.Deployment.Application.ApplicationDeployment.UpdateLocation" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UpdateLocation As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ UpdateLocation { Uri ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UpdateLocation : Uri" Usage="System.Deployment.Application.ApplicationDeployment.UpdateLocation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Website oder die Dateifreigabe ab, von der sich diese Anwendung selbst aktualisiert.</summary>
        <value>Der Updatepfad ausgedrückt als eine HTTP-, HTTPS- oder Datei-URL oder als Windows-Netzwerkdateipfad (UNC).</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Deployment.Application.ApplicationDeployment.UpdateLocation%2A> können sich von der Website unterscheiden, die zum ersten herunterladen der Anwendung verwendet wird, wenn die Bereitstellung der Anwendung für die Verwendung der Update Umleitung konfiguriert ist.

 Dieser Wert kann nur im Bereitstellungs Manifest der Anwendung geändert werden.

 ]]></format>
        </remarks>
        <related type="Article" href="/visualstudio/deployment/how-to-specify-an-alternate-location-for-deployment-updates">Gewusst wie: Angeben eines anderen Speicherorts für Bereitstellungsaktualisierungen</related>
      </Docs>
    </Member>
    <Member MemberName="UpdateProgressChanged">
      <MemberSignature Language="C#" Value="public event System.Deployment.Application.DeploymentProgressChangedEventHandler UpdateProgressChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Deployment.Application.DeploymentProgressChangedEventHandler UpdateProgressChanged" />
      <MemberSignature Language="DocId" Value="E:System.Deployment.Application.ApplicationDeployment.UpdateProgressChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event UpdateProgressChanged As DeploymentProgressChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Deployment::Application::DeploymentProgressChangedEventHandler ^ UpdateProgressChanged;" />
      <MemberSignature Language="F#" Value="member this.UpdateProgressChanged : System.Deployment.Application.DeploymentProgressChangedEventHandler " Usage="member this.UpdateProgressChanged : System.Deployment.Application.DeploymentProgressChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Deployment.Application.DeploymentProgressChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt auf, wenn [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] neue Statusinformationen für einen Updatevorgang hat, der durch einen Aufruf der <see cref="M:System.Deployment.Application.ApplicationDeployment.UpdateAsync" />-Methode initiiert wurde.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Das <xref:System.Deployment.Application.ApplicationDeployment.UpdateProgressChanged>-Ereignis wird im Hauptanwendungs Thread aufgerufen. Sie können die Windows Forms Steuerelemente der Anwendung direkt innerhalb dieses Rückrufs aufzurufen, ohne eine Ausnahme auszulösen.



## Examples
 Im folgenden Codebeispiel wird zur Ladezeit der Anwendung bestimmt, ob ein neues Update verfügbar ist. Wenn ein erforderliches Update verfügbar ist, wird das Update asynchron installiert.

 [!code-cpp[ClickOnceAPI#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ClickOnceAPI/cpp/form1.cpp#1)]
 [!code-csharp[ClickOnceAPI#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ClickOnceAPI/CS/Form1.cs#1)]
 [!code-vb[ClickOnceAPI#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ClickOnceAPI/VB/Form1.vb#1)]

 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
