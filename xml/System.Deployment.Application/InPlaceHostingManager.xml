<Type Name="InPlaceHostingManager" FullName="System.Deployment.Application.InPlaceHostingManager">
  <Metadata><Meta Name="ms.openlocfilehash" Value="b0c877240ac32d46c70ce3166c6866f92ceb7313" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69121386" /></Metadata><TypeSignature Language="C#" Value="public class InPlaceHostingManager : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit InPlaceHostingManager extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Deployment.Application.InPlaceHostingManager" />
  <TypeSignature Language="VB.NET" Value="Public Class InPlaceHostingManager&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class InPlaceHostingManager : IDisposable" />
  <TypeSignature Language="F#" Value="type InPlaceHostingManager = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Deployment</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Installiert oder aktualisiert eine ClickOnce-Bereitstellung auf einem Computer.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sie können verwenden <xref:System.Deployment.Application.InPlaceHostingManager> , um Programme zu schreiben [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] , mit denen Anwendungen Programm gesteuert installiert werden. Beispielsweise können Sie diese Klasse in einer kontrollierten System Verwaltungssoftware-Umgebung (SMS) oder in Fällen verwenden, in denen eine komplexe Installation erforderlich ist, die eine Reihe von Vorinstallations-oder nach Installations Vorgängen auf dem lokalen Computer ausführt. Im Allgemeinen möchten Sie die Member dieser Klasse in einer bestimmten Reihenfolge verwenden:  
  
1.  Erstellen Sie eine neue Instanz von <xref:System.Deployment.Application.InPlaceHostingManager>.  
  
2.  Laden Sie das Bereitstellungs Manifest <xref:System.Deployment.Application.InPlaceHostingManager.GetManifestAsync%2A>mithilfe von herunter.  
  
3.  Überprüfen Sie mithilfe <xref:System.Deployment.Application.InPlaceHostingManager.AssertApplicationRequirements%2A>von, ob die Anwendung mit den entsprechenden Berechtigungen ausgeführt werden kann.  
  
4.  Laden Sie die Anwendung <xref:System.Deployment.Application.InPlaceHostingManager.DownloadApplicationAsync%2A>mit herunter, und installieren Sie Sie.  
  
-   Wenn Sie einen dieser Parameter außerhalb der Reihenfolge aufzurufen, wird eine Ausnahme ausgelöst.  
  
 <xref:System.Deployment.Application.InPlaceHostingManager>kann eine [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] -Anwendung installieren, aber nicht ausführen. Einige Methoden in dieser Klasse, z <xref:System.Deployment.Application.InPlaceHostingManager.Execute%2A>. b., sind für die Verwendung beim Herunterladen einer Windows Presentation Foundation basierten Anwendung reserviert, die in einem Webbrowser ausgeführt wird.  
  
 Wenn Sie <xref:System.Deployment.Application.InPlaceHostingManager> zum herunterladen und Installieren von-Anwendungen verwenden möchten, müssen Sie sicherstellen, [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] dass das Zertifikat zum Signieren der zu installierenden Anwendungen bereits auf Client Computern als vertrauenswürdiger Verleger installiert ist. Weitere Informationen zu vertrauenswürdigen Verlegern finden Sie unter [Übersicht über die Bereitstellung vertrauenswürdiger Anwendungen](https://msdn.microsoft.com/library/b24a1702-8fbe-45b1-87a0-9618a0708f1d).  
  
> [!NOTE]
>  Zurzeit gibt es eine Produkt Einschränkung, <xref:System.Deployment.Application.InPlaceHostingManager> die verhindert, dass ordnungsgemäß funktioniert, wenn Sie Ihren Code mit Visual Studio debuggen. Wenn Sie die Anwendung mithilfe der Taste F5 in Visual Studio debuggen, löst das Beispiel beim aufzurufen <xref:System.Deployment.Application.InPlaceHostingManager.DownloadApplicationAsync%2A>von eine Geheimnis Ausnahme aus. Wenn Sie mit Visual Studio debuggen möchten, starten Sie die Anwendung ohne Debuggen, und fügen Sie den Debugger an. Alternativ können Sie einen anderen Debugger verwenden, z. b. WinDbg.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie <xref:System.Deployment.Application.InPlaceHostingManager> verwendet wird, [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] um eine-Anwendung Programm gesteuert auf einem Client Computer zu installieren.  
  
 [!code-csharp[System.Deployment.Application.InPlaceHostingManager#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Deployment.Application.InPlaceHostingManager/CS/Form1.cs#1)]
 [!code-vb[System.Deployment.Application.InPlaceHostingManager#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Deployment.Application.InPlaceHostingManager/VB/Form1.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Erstellt eine neue Instanz von <see cref="T:System.Deployment.Application.InPlaceHostingManager" />, um die angegebene Anwendung herunterzuladen und zu installieren.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public InPlaceHostingManager (Uri deploymentManifest);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri deploymentManifest) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Deployment.Application.InPlaceHostingManager.#ctor(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (deploymentManifest As Uri)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; InPlaceHostingManager(Uri ^ deploymentManifest);" />
      <MemberSignature Language="F#" Value="new System.Deployment.Application.InPlaceHostingManager : Uri -&gt; System.Deployment.Application.InPlaceHostingManager" Usage="new System.Deployment.Application.InPlaceHostingManager deploymentManifest" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="deploymentManifest" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="deploymentManifest">Ein <see cref="T:System.Uri" /> (Uniform Resource Identifier) für das Bereitstellungsmanifest einer [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)]-Anwendung.</param>
        <summary>Erstellt eine neue Instanz von <see cref="T:System.Deployment.Application.InPlaceHostingManager" />, um die angegebene im Browser gehostete Anwendung herunterzuladen und zu installieren.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieser Konstruktor wird verwendet, wenn Sie eine Windows Presentation Foundation basierte Anwendung, die in einem Webbrowser gehostet wird, herunterladen möchten. Verwenden Sie den <xref:System.Deployment.Application.InPlaceHostingManager.%23ctor%2A> -Konstruktor mit dem `launchInHostProcess` -Parameter [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)], um Windows Forms-basierte Anwendungen herunterzuladen, die `false`mithilfe von bereitgestellt werden.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.PlatformNotSupportedException"><see cref="T:System.Deployment.Application.InPlaceHostingManager" /> kann nur unter Windows XP oder höheren Versionen des Windows-Betriebssystems verwendet werden.</exception>
        <exception cref="T:System.ArgumentNullException"><see langword="null" /> kann für das <paramref name="deploymentManifest" />-Argument nicht übergeben werden.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="deploymentManifest" /> verwendet ein URI-Schema, das von [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] nicht unterstützt wird.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public InPlaceHostingManager (Uri deploymentManifest, bool launchInHostProcess);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri deploymentManifest, bool launchInHostProcess) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Deployment.Application.InPlaceHostingManager.#ctor(System.Uri,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (deploymentManifest As Uri, launchInHostProcess As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; InPlaceHostingManager(Uri ^ deploymentManifest, bool launchInHostProcess);" />
      <MemberSignature Language="F#" Value="new System.Deployment.Application.InPlaceHostingManager : Uri * bool -&gt; System.Deployment.Application.InPlaceHostingManager" Usage="new System.Deployment.Application.InPlaceHostingManager (deploymentManifest, launchInHostProcess)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="deploymentManifest" Type="System.Uri" />
        <Parameter Name="launchInHostProcess" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="deploymentManifest">Der URI (Uniform Resource Identifier) für das Bereitstellungsmanifest der zu installierenden Anwendung.</param>
        <param name="launchInHostProcess">Gibt an, ob diese Anwendung in einem Host ausgeführt wird, z. B. einem Webbrowser. Legen Sie diesen Wert für eine eigenständige Anwendung auf <see langword="false" /> fest.</param>
        <summary>Erstellt eine neue Instanz von <see cref="T:System.Deployment.Application.InPlaceHostingManager" />, um die angegebene Anwendung herunterzuladen und zu installieren. Diese kann eigenständig sein und auf Windows Forms beruhen oder aber in einem Webbrowser gehostet werden.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie Sie eine Instanz <xref:System.Deployment.Application.InPlaceHostingManager> von erstellen, die es Ihnen ermöglicht, mithilfe [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)]von bereitgestellte Windows Forms-basierte Anwendungen herunterzuladen.  
  
 [!code-csharp[System.Deployment.Application.InPlaceHostingManager#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Deployment.Application.InPlaceHostingManager/CS/Form1.cs#2)]
 [!code-vb[System.Deployment.Application.InPlaceHostingManager#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Deployment.Application.InPlaceHostingManager/VB/Form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.PlatformNotSupportedException"><see cref="T:System.Deployment.Application.InPlaceHostingManager" /> kann nur unter Windows XP oder höheren Versionen des Windows-Betriebssystems verwendet werden.</exception>
        <exception cref="T:System.ArgumentNullException"><see langword="null" /> kann für das <paramref name="deploymentManifest" />-Argument nicht übergeben werden.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="deploymentManifest" /> verwendet ein URI-Schema, das von [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] nicht unterstützt wird.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="AssertApplicationRequirements">
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Bestimmt, ob die ClickOnce-Anwendung die entsprechenden Berechtigungen und Plattformabhängigkeiten hat, die zur Ausführung auf dem lokalen Computer erforderlich sind.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AssertApplicationRequirements">
      <MemberSignature Language="C#" Value="public void AssertApplicationRequirements ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AssertApplicationRequirements() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Deployment.Application.InPlaceHostingManager.AssertApplicationRequirements" />
      <MemberSignature Language="VB.NET" Value="Public Sub AssertApplicationRequirements ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AssertApplicationRequirements();" />
      <MemberSignature Language="F#" Value="member this.AssertApplicationRequirements : unit -&gt; unit" Usage="inPlaceHostingManager.AssertApplicationRequirements " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Bestimmt, ob die [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)]-Anwendung die entsprechenden Berechtigungen und Plattformabhängigkeiten hat, die zur Ausführung auf dem lokalen Computer erforderlich sind.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sie müssen nach <xref:System.Deployment.Application.InPlaceHostingManager.AssertApplicationRequirements%2A> <xref:System.Deployment.Application.InPlaceHostingManager.GetManifestAsync%2A> dem erfolgreichen Rückgabe von aufgerufen werden. Sie dürfen nicht aufzurufen <xref:System.Deployment.Application.InPlaceHostingManager.DownloadApplicationAsync%2A> , es sei denn, Sie können aufzurufen. <xref:System.Deployment.Application.InPlaceHostingManager.AssertApplicationRequirements%2A>  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die Verwendung von <xref:System.Deployment.Application.InPlaceHostingManager.AssertApplicationRequirements%2A>veranschaulicht, die im Text eines erfolgreichen <xref:System.Deployment.Application.InPlaceHostingManager.GetManifestCompleted> Ereignis Handlers aufgerufen wird.  
  
 [!code-csharp[System.Deployment.Application.InPlaceHostingManager#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Deployment.Application.InPlaceHostingManager/CS/Form1.cs#3)]
 [!code-vb[System.Deployment.Application.InPlaceHostingManager#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Deployment.Application.InPlaceHostingManager/VB/Form1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Wird ausgelöst, wenn diese Methode vor der <see cref="M:System.Deployment.Application.InPlaceHostingManager.GetManifestAsync" />-Methode aufgerufen wird.</exception>
      </Docs>
    </Member>
    <Member MemberName="AssertApplicationRequirements">
      <MemberSignature Language="C#" Value="public void AssertApplicationRequirements (bool grantApplicationTrust);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AssertApplicationRequirements(bool grantApplicationTrust) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Deployment.Application.InPlaceHostingManager.AssertApplicationRequirements(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AssertApplicationRequirements (grantApplicationTrust As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AssertApplicationRequirements(bool grantApplicationTrust);" />
      <MemberSignature Language="F#" Value="member this.AssertApplicationRequirements : bool -&gt; unit" Usage="inPlaceHostingManager.AssertApplicationRequirements grantApplicationTrust" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="grantApplicationTrust" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="grantApplicationTrust">Wenn der Wert <see langword="true" /> ist, versucht die Anwendung, ihre Berechtigungen auf die erforderliche Ebene zu erhöhen.</param>
        <summary>Bestimmt, ob die [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)]-Anwendung die entsprechenden Berechtigungen und Plattformabhängigkeiten hat, die zur Ausführung auf dem lokalen Computer erforderlich sind.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn `grantApplicationTrust`den Wert <xref:System.Deployment.Application.InPlaceHostingManager> hat, gewährt der Anwendung erweiterte Berechtigungen, wenn Sie benötigt werden. `true` Dies ist nur möglich, <xref:System.Deployment.Application.InPlaceHostingManager> wenn diese Berechtigungen erteilen kann. Wenn beispielsweise eine [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] -Anwendung als Teil eines größeren Pakets installiert wird und dem Installer volle Vertrauenswürdigkeit erteilt wurde, <xref:System.Deployment.Application.InPlaceHostingManager> kann der Anwendung die [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] volle Vertrauenswürdigkeit gewährt werden. Wenn `grantApplicationTrust` ist`false`, wird der Anwendung keine Berechtigungen erteilt.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CancelAsync">
      <MemberSignature Language="C#" Value="public void CancelAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CancelAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Deployment.Application.InPlaceHostingManager.CancelAsync" />
      <MemberSignature Language="VB.NET" Value="Public Sub CancelAsync ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CancelAsync();" />
      <MemberSignature Language="F#" Value="member this.CancelAsync : unit -&gt; unit" Usage="inPlaceHostingManager.CancelAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Bricht einen asynchronen Downloadvorgang ab.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Deployment.Application.InPlaceHostingManager.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="inPlaceHostingManager.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt alle vom <see cref="T:System.Deployment.Application.InPlaceHostingManager" /> verwendeten Ressourcen frei.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Rufen Sie <xref:System.Deployment.Application.InPlaceHostingManager.Dispose%2A> auf, wenn Sie <xref:System.Deployment.Application.InPlaceHostingManager> nicht mehr benötigen. Die <xref:System.Deployment.Application.InPlaceHostingManager.Dispose%2A>-Methode bewirkt, dass <xref:System.Deployment.Application.InPlaceHostingManager> nicht mehr verwendet werden kann. Nach dem <xref:System.Deployment.Application.InPlaceHostingManager.Dispose%2A>Aufrufen von müssen Sie alle Verweise auf den <xref:System.Deployment.Application.InPlaceHostingManager> freigeben, damit der Garbage Collector den Speicher freigeben kann <xref:System.Deployment.Application.InPlaceHostingManager> , den der belegt hat. Weitere Informationen finden Sie unter [Bereinigen von nicht verwalteten Ressourcen](~/docs/standard/garbage-collection/unmanaged.md) und [Implementieren einer](~/docs/standard/garbage-collection/implementing-dispose.md)verwerfen-Methode.  
  
> [!NOTE]
>  Rufen Sie immer <xref:System.Deployment.Application.InPlaceHostingManager.Dispose%2A> auf, bevor Sie den letzten Verweis auf das <xref:System.Deployment.Application.InPlaceHostingManager> freigeben. Andernfalls bleiben die verwendeten Ressourcen reserviert, bis die Garbage Collection die <xref:System.Deployment.Application.InPlaceHostingManager>-Methode des `Finalize`-Objekts aufruft.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DownloadApplicationAsync">
      <MemberSignature Language="C#" Value="public void DownloadApplicationAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DownloadApplicationAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Deployment.Application.InPlaceHostingManager.DownloadApplicationAsync" />
      <MemberSignature Language="VB.NET" Value="Public Sub DownloadApplicationAsync ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DownloadApplicationAsync();" />
      <MemberSignature Language="F#" Value="member this.DownloadApplicationAsync : unit -&gt; unit" Usage="inPlaceHostingManager.DownloadApplicationAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Lädt ein Anwendungsupdate im Hintergrund herunter.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sie müssen diese Methode aufrufen, nachdem <xref:System.Deployment.Application.InPlaceHostingManager.AssertApplicationRequirements%2A>Sie aufgerufen haben.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die Verwendung von <xref:System.Deployment.Application.InPlaceHostingManager.DownloadApplicationAsync%2A>veranschaulicht, die am Ende eines erfolgreichen <xref:System.Deployment.Application.InPlaceHostingManager.GetManifestCompleted> Ereignis Handlers aufruft.  
  
 In den folgenden Codebeispielen wird davon ausgegangen, dass Sie bereits eine Instanz von <xref:System.Deployment.Application.InPlaceHostingManager> mit `iphm`dem Namen definiert und erstellt haben.  
  
 [!code-csharp[System.Deployment.Application.InPlaceHostingManager#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Deployment.Application.InPlaceHostingManager/CS/Form1.cs#3)]
 [!code-vb[System.Deployment.Application.InPlaceHostingManager#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Deployment.Application.InPlaceHostingManager/VB/Form1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Wird ausgelöst, wenn diese Methode vor der <see cref="M:System.Deployment.Application.InPlaceHostingManager.GetManifestAsync" />-Methode und der <see cref="M:System.Deployment.Application.InPlaceHostingManager.AssertApplicationRequirements" />-Methode aufgerufen wird.</exception>
      </Docs>
    </Member>
    <Member MemberName="DownloadApplicationCompleted">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Deployment.Application.DownloadApplicationCompletedEventArgs&gt; DownloadApplicationCompleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Deployment.Application.DownloadApplicationCompletedEventArgs&gt; DownloadApplicationCompleted" />
      <MemberSignature Language="DocId" Value="E:System.Deployment.Application.InPlaceHostingManager.DownloadApplicationCompleted" />
      <MemberSignature Language="VB.NET" Value="Public Event DownloadApplicationCompleted As EventHandler(Of DownloadApplicationCompletedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Deployment::Application::DownloadApplicationCompletedEventArgs ^&gt; ^ DownloadApplicationCompleted;" />
      <MemberSignature Language="F#" Value="member this.DownloadApplicationCompleted : EventHandler&lt;System.Deployment.Application.DownloadApplicationCompletedEventArgs&gt; " Usage="member this.DownloadApplicationCompleted : System.EventHandler&lt;System.Deployment.Application.DownloadApplicationCompletedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Deployment.Application.DownloadApplicationCompletedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt auf, wenn die Anwendung vollständig auf den lokalen Computer heruntergeladen wurde.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn Sie eine Windows Forms basierte Anwendung installieren, müssen Sie die Benutzer anweisen, die Anwendung selbst zu starten. Sie können Windows Forms-basierte Anwendungen nicht Programm gesteuert starten, indem <xref:System.Deployment.Application.InPlaceHostingManager.Execute%2A> Sie die-Methode verwenden.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird ein Handler für das <xref:System.Deployment.Application.InPlaceHostingManager.DownloadApplicationCompleted> -Ereignis veranschaulicht.  
  
 [!code-csharp[System.Deployment.Application.InPlaceHostingManager#7](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Deployment.Application.InPlaceHostingManager/CS/Form1.cs#7)]
 [!code-vb[System.Deployment.Application.InPlaceHostingManager#7](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Deployment.Application.InPlaceHostingManager/VB/Form1.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DownloadProgressChanged">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Deployment.Application.DownloadProgressChangedEventArgs&gt; DownloadProgressChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Deployment.Application.DownloadProgressChangedEventArgs&gt; DownloadProgressChanged" />
      <MemberSignature Language="DocId" Value="E:System.Deployment.Application.InPlaceHostingManager.DownloadProgressChanged" />
      <MemberSignature Language="VB.NET" Value="Public Event DownloadProgressChanged As EventHandler(Of DownloadProgressChangedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Deployment::Application::DownloadProgressChangedEventArgs ^&gt; ^ DownloadProgressChanged;" />
      <MemberSignature Language="F#" Value="member this.DownloadProgressChanged : EventHandler&lt;System.Deployment.Application.DownloadProgressChangedEventArgs&gt; " Usage="member this.DownloadProgressChanged : System.EventHandler&lt;System.Deployment.Application.DownloadProgressChangedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Deployment.Application.DownloadProgressChangedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, wenn es eine Änderung im Status eines Downloads einer Anwendung oder eines Manifests gibt.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 In einer Konsolenanwendung werden den Threads von einem Thread Pool Ereignisse zugewiesen. Daher erhalten Sie möglicherweise Status Aktualisierungs Ereignisse in falscher Reihenfolge, wobei ein nachfolgendes Ereignis eine Abnahme im Vergleich zu einem vorherigen Ereignis anzeigt. Dieses Verhalten wird in einer Windows Forms basierten Anwendung nicht angezeigt, weil Ereignisse in Windows Forms sequenziell aus der Nachrichten Warteschlange der Benutzeroberfläche (UI) verarbeitet werden.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie ein <xref:System.Windows.Forms.ToolStripProgressBar> aktualisiert wird, das in <xref:System.Windows.Forms.StatusStrip>einem enthalten ist.  
  
 [!code-csharp[System.Deployment.Application.InPlaceHostingManager#6](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Deployment.Application.InPlaceHostingManager/CS/Form1.cs#6)]
 [!code-vb[System.Deployment.Application.InPlaceHostingManager#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Deployment.Application.InPlaceHostingManager/VB/Form1.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Execute">
      <MemberSignature Language="C#" Value="public System.Runtime.Remoting.ObjectHandle Execute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Runtime.Remoting.ObjectHandle Execute() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Deployment.Application.InPlaceHostingManager.Execute" />
      <MemberSignature Language="VB.NET" Value="Public Function Execute () As ObjectHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Runtime::Remoting::ObjectHandle ^ Execute();" />
      <MemberSignature Language="F#" Value="member this.Execute : unit -&gt; System.Runtime.Remoting.ObjectHandle" Usage="inPlaceHostingManager.Execute " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.ObjectHandle</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Startet die [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)]-Anwendung nur dann, wenn es sich dabei um eine Windows Presentation Foundation-basierte Anwendung handelt, die in einem Webbrowser ausgeführt wird.</summary>
        <returns>Ein <see cref="T:System.Runtime.Remoting.ObjectHandle" />, das der gestarteten Anwendung entspricht.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode gilt nur für Windows Presentation Foundation-basierte Anwendungen, die in einem Webbrowser gehostet werden können (d. h., Ihre Bereitstellungs Manifeste definieren das `hostInBrowser` XML-Element).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetManifestAsync">
      <MemberSignature Language="C#" Value="public void GetManifestAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void GetManifestAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Deployment.Application.InPlaceHostingManager.GetManifestAsync" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetManifestAsync ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GetManifestAsync();" />
      <MemberSignature Language="F#" Value="member this.GetManifestAsync : unit -&gt; unit" Usage="inPlaceHostingManager.GetManifestAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Lädt das Bereitstellungsmanifest der [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)]-Anwendung im Hintergrund herunter und löst ein Ereignis aus, wenn der Vorgang abgeschlossen wurde oder ein Fehler aufgetreten ist.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Um die Benachrichtigung zu erhalten, wann dieses Ereignis abgeschlossen ist, erstellen Sie einen <xref:System.Deployment.Application.InPlaceHostingManager.GetManifestCompleted> Ereignishandler für das-Ereignis. Wenn dieses Ereignis aufgerufen wird und kein Fehler von <xref:System.Deployment.Application.GetManifestCompletedEventArgs>angegeben wird, sollten Sie als nächstes aufrufen <xref:System.Deployment.Application.InPlaceHostingManager.AssertApplicationRequirements%2A> , um zu überprüfen, ob die Anwendung über die Berechtigung zum Ausführen auf dem lokalen Computer verfügt.  
  
   
  
## Examples  
 Die folgenden Codebeispiele veranschaulichen, wie die <xref:System.Deployment.Application.InPlaceHostingManager.GetManifestAsync%2A> -Methode aufgerufen wird. Der Handler für den <xref:System.Deployment.Application.InPlaceHostingManager.GetManifestCompleted> Ereignis Rückruf überprüft, ob der Download des Manifests erfolgreich abgeschlossen wurde. wenn dies der Fall ist, wird der Benutzer mit zusätzlichen Informationen über die Anwendung aufgefordert. Wenn der Benutzer zustimmt, die Installation fortzusetzen, ruft <xref:System.Deployment.Application.InPlaceHostingManager.DownloadApplicationAsync%2A>der Handler auf.  
  
 In den folgenden Codebeispielen wird davon ausgegangen, dass Sie bereits eine Instanz von <xref:System.Deployment.Application.InPlaceHostingManager> mit `iphm`dem Namen definiert und erstellt haben.  
  
 [!code-csharp[System.Deployment.Application.InPlaceHostingManager#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Deployment.Application.InPlaceHostingManager/CS/Form1.cs#3)]
 [!code-vb[System.Deployment.Application.InPlaceHostingManager#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Deployment.Application.InPlaceHostingManager/VB/Form1.vb#3)]  
  
 [!code-csharp[System.Deployment.Application.InPlaceHostingManager#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Deployment.Application.InPlaceHostingManager/CS/Form1.cs#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetManifestCompleted">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Deployment.Application.GetManifestCompletedEventArgs&gt; GetManifestCompleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Deployment.Application.GetManifestCompletedEventArgs&gt; GetManifestCompleted" />
      <MemberSignature Language="DocId" Value="E:System.Deployment.Application.InPlaceHostingManager.GetManifestCompleted" />
      <MemberSignature Language="VB.NET" Value="Public Event GetManifestCompleted As EventHandler(Of GetManifestCompletedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Deployment::Application::GetManifestCompletedEventArgs ^&gt; ^ GetManifestCompleted;" />
      <MemberSignature Language="F#" Value="member this.GetManifestCompleted : EventHandler&lt;System.Deployment.Application.GetManifestCompletedEventArgs&gt; " Usage="member this.GetManifestCompleted : System.EventHandler&lt;System.Deployment.Application.GetManifestCompletedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Deployment.Application.GetManifestCompletedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt auf, wenn das Bereitstellungsmanifest auf den lokalen Computer heruntergeladen wurde.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Überprüfen <xref:System.ComponentModel.AsyncCompletedEventArgs.Error%2A> Sie mithilfe <xref:System.Deployment.Application.GetManifestCompletedEventArgs> der-Eigenschaft <xref:System.Deployment.Application.InPlaceHostingManager.GetManifestAsync%2A> von, ob erfolgreich abgeschlossen wurde oder einen Fehler zurückgegeben hat. Wenn <xref:System.ComponentModel.AsyncCompletedEventArgs.Error%2A> NULL ist, <xref:System.Deployment.Application.InPlaceHostingManager.GetManifestAsync%2A> wurde erfolgreich abgeschlossen, und Sie können <xref:System.Deployment.Application.InPlaceHostingManager.AssertApplicationRequirements%2A>aufzurufen.  
  
   
  
## Examples  
 Die folgenden Codebeispiele veranschaulichen, wie die <xref:System.Deployment.Application.InPlaceHostingManager.GetManifestAsync%2A> -Methode aufgerufen wird. Der Handler für den <xref:System.Deployment.Application.InPlaceHostingManager.GetManifestCompleted> Ereignis Rückruf überprüft, ob der Download des Manifests erfolgreich abgeschlossen wurde. wenn dies der Fall ist, wird der Benutzer mit zusätzlichen Informationen über die Anwendung aufgefordert. Wenn der Benutzer zustimmt, die Installation fortzusetzen, ruft <xref:System.Deployment.Application.InPlaceHostingManager.DownloadApplicationAsync%2A>der Handler auf.  
  
 In den folgenden Codebeispielen wird davon ausgegangen, dass Sie bereits eine Instanz von <xref:System.Deployment.Application.InPlaceHostingManager> mit `iphm`dem Namen definiert und erstellt haben.  
  
 [!code-csharp[System.Deployment.Application.InPlaceHostingManager#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Deployment.Application.InPlaceHostingManager/CS/Form1.cs#2)]
 [!code-vb[System.Deployment.Application.InPlaceHostingManager#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Deployment.Application.InPlaceHostingManager/VB/Form1.vb#2)]  
  
 [!code-csharp[System.Deployment.Application.InPlaceHostingManager#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Deployment.Application.InPlaceHostingManager/CS/Form1.cs#3)]
 [!code-vb[System.Deployment.Application.InPlaceHostingManager#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Deployment.Application.InPlaceHostingManager/VB/Form1.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UninstallCustomAddIn">
      <MemberSignature Language="C#" Value="public static void UninstallCustomAddIn (string subscriptionId);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void UninstallCustomAddIn(string subscriptionId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Deployment.Application.InPlaceHostingManager.UninstallCustomAddIn(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub UninstallCustomAddIn (subscriptionId As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void UninstallCustomAddIn(System::String ^ subscriptionId);" />
      <MemberSignature Language="F#" Value="static member UninstallCustomAddIn : string -&gt; unit" Usage="System.Deployment.Application.InPlaceHostingManager.UninstallCustomAddIn subscriptionId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="subscriptionId">Eine Zeichenfolge mit einem Abonnementbezeichner, der das zu entfernende Add-In angibt.</param>
        <summary>Entfernt eine zuvor installierte benutzerdefinierte Komponente einer Anwendung.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><paramref name="subscriptionId" /> ist keine gültige Abonnementidentität oder enthält keinen Namen, kein öffentliches Schlüsseltoken, keine Prozessorarchitektur und keine Versionsnummer.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="subscriptionId" /> ist <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="UninstallCustomUXApplication">
      <MemberSignature Language="C#" Value="public static void UninstallCustomUXApplication (string subscriptionId);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void UninstallCustomUXApplication(string subscriptionId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Deployment.Application.InPlaceHostingManager.UninstallCustomUXApplication(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub UninstallCustomUXApplication (subscriptionId As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void UninstallCustomUXApplication(System::String ^ subscriptionId);" />
      <MemberSignature Language="F#" Value="static member UninstallCustomUXApplication : string -&gt; unit" Usage="System.Deployment.Application.InPlaceHostingManager.UninstallCustomUXApplication subscriptionId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="subscriptionId">Eine Zeichenfolge mit einem Abonnementbezeichner, der die zu entfernende [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)]-Anwendung angibt.</param>
        <summary>Entfernt eine [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)]-Anwendung, die das &lt;customUX&gt;-Element enthält.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode deinstalliert eine zuvor installierte [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] Anwendung, die das `<customUX>` -Element im [ &lt;EntryPoint&gt; -Element](/visualstudio/deployment/entrypoint-element-clickonce-application)verwendet.  
  
 Benutzerdefinierte Installationsprogramme, die keinen Eintrag "Software" für die [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] Anwendung erstellen, müssen den in der <xref:System.Deployment.Application.GetManifestCompletedEventArgs.SubscriptionIdentity%2A> -Eigenschaft gefundenen Abonnement Bezeichner während der Installation speichern.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
