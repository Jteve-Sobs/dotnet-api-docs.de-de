<Type Name="InPlaceHostingManager" FullName="System.Deployment.Application.InPlaceHostingManager">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="318b3adb922726e41d39a80b9e59598efbc9e92e" />
    <Meta Name="ms.sourcegitcommit" Value="4b4804968da1dfdf71c501075a5b66957b54f2e8" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="04/27/2018" />
    <Meta Name="ms.locfileid" Value="32037169" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class InPlaceHostingManager : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit InPlaceHostingManager extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Deployment.Application.InPlaceHostingManager" />
  <TypeSignature Language="VB.NET" Value="Public Class InPlaceHostingManager&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class InPlaceHostingManager : IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Deployment</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Installiert oder aktualisiert eine ClickOnce-Bereitstellung auf einem Computer.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sie können <xref:System.Deployment.Application.InPlaceHostingManager> zum Schreiben von Programmen die Installation [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] Anwendungen programmgesteuert. Beispielsweise können Sie diese Klasse in einer kontrollierten System Management-softwareumgebung (SMS) oder in Situationen, in dem Sie eine komplexe Installation benötigen, die eine Anzahl von Vorgängen von vor bzw. nach der Installation auf dem lokalen Computer ausführt. Im Allgemeinen sollten Sie die Member dieser Klasse in einer bestimmten Reihenfolge zu verwenden:  
  
1.  Erstellen Sie eine neue Instanz von <xref:System.Deployment.Application.InPlaceHostingManager>.  
  
2.  Laden Sie das Bereitstellungsmanifest herunter, indem <xref:System.Deployment.Application.InPlaceHostingManager.GetManifestAsync%2A>.  
  
3.  Überprüfen Sie, die die Anwendung mit den entsprechenden Berechtigungen ausgeführt werden kann <xref:System.Deployment.Application.InPlaceHostingManager.AssertApplicationRequirements%2A>.  
  
4.  Herunterladen und installieren Sie die Anwendung mit <xref:System.Deployment.Application.InPlaceHostingManager.DownloadApplicationAsync%2A>.  
  
-   Wenn Sie eines dieser Parameter außerhalb der Reihenfolge aufrufen, werden diese eine Ausnahme ausgelöst.  
  
 <xref:System.Deployment.Application.InPlaceHostingManager> Installieren einer [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] Anwendung, aber nicht ausgeführt werden kann. Einige Methoden in dieser Klasse, z. B. <xref:System.Deployment.Application.InPlaceHostingManager.Execute%2A>, für die Verwendung reserviert sind, wenn eine Windows Presentation Foundation-basierte Anwendung herunterladen, die in einem Webbrowser ausgeführt wird.  
  
 Mit <xref:System.Deployment.Application.InPlaceHostingManager> zum Herunterladen und Installieren von Anwendungen, Sie müssen sicherstellen, dass das Zertifikat zum Signieren der [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] Anwendungen, die Sie installieren möchten, ist bereits als vertrauenswürdiger Herausgeber auf Clientcomputern installiert. Weitere Informationen zu vertrauenswürdigen Herausgebern finden Sie unter [Trusted Application Deployment Overview](http://msdn.microsoft.com/library/b24a1702-8fbe-45b1-87a0-9618a0708f1d).  
  
> [!NOTE]
>  Es besteht derzeit eine Produkt-Einschränkung, die verhindert, dass <xref:System.Deployment.Application.InPlaceHostingManager> nicht mehr ordnungsgemäß funktionieren beim Debuggen von Code mithilfe von Visual Studio. Wenn Sie Ihre Anwendung in Visual Studio debuggen, indem Sie mit der F5-Taste, löst das Beispiel unverständliche Ausnahmen beim Aufrufen von <xref:System.Deployment.Application.InPlaceHostingManager.DownloadApplicationAsync%2A>. Zum Debuggen mit Visual Studio und fügen Sie den Debugger Starten der Anwendung ohne Debugfunktion. Alternativ können Sie einen anderen Debugger, wie WinDbg verwenden.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie <xref:System.Deployment.Application.InPlaceHostingManager> zum Installieren einer [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] Anwendung programmgesteuert auf einem Clientcomputer.  
  
 [!code-csharp[System.Deployment.Application.InPlaceHostingManager#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Deployment.Application.InPlaceHostingManager/CS/Form1.cs#1)]
 [!code-vb[System.Deployment.Application.InPlaceHostingManager#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Deployment.Application.InPlaceHostingManager/VB/Form1.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Erstellt eine neue Instanz von <see cref="T:System.Deployment.Application.InPlaceHostingManager" />, um die angegebene Anwendung herunterzuladen und zu installieren.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public InPlaceHostingManager (Uri deploymentManifest);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri deploymentManifest) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Deployment.Application.InPlaceHostingManager.#ctor(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (deploymentManifest As Uri)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; InPlaceHostingManager(Uri ^ deploymentManifest);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="deploymentManifest" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="deploymentManifest">Ein <see cref="T:System.Uri" /> (Uniform Resource Identifier) für das Bereitstellungsmanifest einer [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)]-Anwendung.</param>
        <summary>Erstellt eine neue Instanz von <see cref="T:System.Deployment.Application.InPlaceHostingManager" />, um die angegebene im Browser gehostete Anwendung herunterzuladen und zu installieren.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieser Konstruktor wird verwendet, wenn eine Windows Presentation Foundation-basierte Anwendung herunterladen, die in einem Webbrowser gehostet werden sollen. Zum Herunterladen von Windows Forms-basierten Anwendungen, die mit bereitgestellt werden [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)], verwenden Sie die <xref:System.Deployment.Application.InPlaceHostingManager.%23ctor%2A> Konstruktor mit der `launchInHostProcess` Parameter festgelegt wird, um `false`.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.PlatformNotSupportedException">
          <see cref="T:System.Deployment.Application.InPlaceHostingManager" /> kann nur unter Windows XP oder höheren Versionen des Windows-Betriebssystems verwendet werden.</exception>
        <exception cref="T:System.ArgumentNullException">
          <see langword="null" /> kann für das <paramref name="deploymentManifest" />-Argument nicht übergeben werden.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="deploymentManifest" /> verwendet ein URI-Schema, das von [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] nicht unterstützt wird.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public InPlaceHostingManager (Uri deploymentManifest, bool launchInHostProcess);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri deploymentManifest, bool launchInHostProcess) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Deployment.Application.InPlaceHostingManager.#ctor(System.Uri,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (deploymentManifest As Uri, launchInHostProcess As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; InPlaceHostingManager(Uri ^ deploymentManifest, bool launchInHostProcess);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="deploymentManifest" Type="System.Uri" />
        <Parameter Name="launchInHostProcess" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="deploymentManifest">Der URI (Uniform Resource Identifier) für das Bereitstellungsmanifest der zu installierenden Anwendung.</param>
        <param name="launchInHostProcess">Gibt an, ob diese Anwendung in einem Host ausgeführt wird, z. B. einem Webbrowser. Legen Sie diesen Wert für eine eigenständige Anwendung auf <see langword="false" /> fest.</param>
        <summary>Erstellt eine neue Instanz von <see cref="T:System.Deployment.Application.InPlaceHostingManager" />, um die angegebene Anwendung herunterzuladen und zu installieren. Diese kann eigenständig sein und auf Windows Forms beruhen oder aber in einem Webbrowser gehostet werden.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie zum Erstellen einer Instanz des <xref:System.Deployment.Application.InPlaceHostingManager> , mit der Sie das Herunterladen von Windows Forms-basierten Anwendungen bereitgestellt, mit [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)].  
  
 [!code-csharp[System.Deployment.Application.InPlaceHostingManager#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Deployment.Application.InPlaceHostingManager/CS/Form1.cs#2)]
 [!code-vb[System.Deployment.Application.InPlaceHostingManager#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Deployment.Application.InPlaceHostingManager/VB/Form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.PlatformNotSupportedException">
          <see cref="T:System.Deployment.Application.InPlaceHostingManager" /> kann nur unter Windows XP oder höheren Versionen des Windows-Betriebssystems verwendet werden.</exception>
        <exception cref="T:System.ArgumentNullException">
          <see langword="null" /> kann für das <paramref name="deploymentManifest" />-Argument nicht übergeben werden.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="deploymentManifest" /> verwendet ein URI-Schema, das von [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] nicht unterstützt wird.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="AssertApplicationRequirements">
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Bestimmt, ob die ClickOnce-Anwendung die entsprechenden Berechtigungen und Plattformabhängigkeiten hat, die zur Ausführung auf dem lokalen Computer erforderlich sind.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AssertApplicationRequirements">
      <MemberSignature Language="C#" Value="public void AssertApplicationRequirements ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AssertApplicationRequirements() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Deployment.Application.InPlaceHostingManager.AssertApplicationRequirements" />
      <MemberSignature Language="VB.NET" Value="Public Sub AssertApplicationRequirements ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AssertApplicationRequirements();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Bestimmt, ob die [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)]-Anwendung die entsprechenden Berechtigungen und Plattformabhängigkeiten hat, die zur Ausführung auf dem lokalen Computer erforderlich sind.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Rufen Sie <xref:System.Deployment.Application.InPlaceHostingManager.AssertApplicationRequirements%2A> nach <xref:System.Deployment.Application.InPlaceHostingManager.GetManifestAsync%2A> erfolgreich zurückgegeben. Sie müssen nicht aufrufen, <xref:System.Deployment.Application.InPlaceHostingManager.DownloadApplicationAsync%2A> es sei denn, Sie rufen <xref:System.Deployment.Application.InPlaceHostingManager.AssertApplicationRequirements%2A>, und wird ohne Fehler zurückgegeben.  
  
   
  
## Examples  
 Das folgende Codebeispiel veranschaulicht die Verwendung von <xref:System.Deployment.Application.InPlaceHostingManager.AssertApplicationRequirements%2A>, der es aufgerufen wird, im Text einer erfolgreichen <xref:System.Deployment.Application.InPlaceHostingManager.GetManifestCompleted> -Ereignishandler.  
  
 [!code-csharp[System.Deployment.Application.InPlaceHostingManager#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Deployment.Application.InPlaceHostingManager/CS/Form1.cs#3)]
 [!code-vb[System.Deployment.Application.InPlaceHostingManager#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Deployment.Application.InPlaceHostingManager/VB/Form1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Wird ausgelöst, wenn diese Methode vor der <see cref="M:System.Deployment.Application.InPlaceHostingManager.GetManifestAsync" />-Methode aufgerufen wird.</exception>
      </Docs>
    </Member>
    <Member MemberName="AssertApplicationRequirements">
      <MemberSignature Language="C#" Value="public void AssertApplicationRequirements (bool grantApplicationTrust);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AssertApplicationRequirements(bool grantApplicationTrust) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Deployment.Application.InPlaceHostingManager.AssertApplicationRequirements(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AssertApplicationRequirements (grantApplicationTrust As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AssertApplicationRequirements(bool grantApplicationTrust);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="grantApplicationTrust" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="grantApplicationTrust">Wenn der Wert <see langword="true" /> ist, versucht die Anwendung, ihre Berechtigungen auf die erforderliche Ebene zu erhöhen.</param>
        <summary>Bestimmt, ob die [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)]-Anwendung die entsprechenden Berechtigungen und Plattformabhängigkeiten hat, die zur Ausführung auf dem lokalen Computer erforderlich sind.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn `grantApplicationTrust` ist `true`, <xref:System.Deployment.Application.InPlaceHostingManager> gewährt die Anwendung Erweiterte Berechtigungen auf, wenn diese erforderlich sind. Dies ist nur möglich, wenn <xref:System.Deployment.Application.InPlaceHostingManager> ist in der Lage, diese Berechtigungen zu gewähren. Z. B. wenn ein [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] Anwendung als Teil eines umfangreicheren Pakets installiert wird und das Installationsprogramm volle Vertrauenswürdigkeit erteilt wurde <xref:System.Deployment.Application.InPlaceHostingManager> wird in der Lage, erteilen Sie die [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] Anwendung volle Vertrauenswürdigkeit. Wenn `grantApplicationTrust` ist `false`, wird die Anwendung keine Berechtigungen gewährt werden.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CancelAsync">
      <MemberSignature Language="C#" Value="public void CancelAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CancelAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Deployment.Application.InPlaceHostingManager.CancelAsync" />
      <MemberSignature Language="VB.NET" Value="Public Sub CancelAsync ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CancelAsync();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Bricht einen asynchronen Downloadvorgang ab.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Deployment.Application.InPlaceHostingManager.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt alle vom <see cref="T:System.Deployment.Application.InPlaceHostingManager" /> verwendeten Ressourcen frei.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Rufen Sie <xref:System.Deployment.Application.InPlaceHostingManager.Dispose%2A> auf, wenn Sie <xref:System.Deployment.Application.InPlaceHostingManager> nicht mehr benötigen. Die <xref:System.Deployment.Application.InPlaceHostingManager.Dispose%2A>-Methode bewirkt, dass <xref:System.Deployment.Application.InPlaceHostingManager> nicht mehr verwendet werden kann. Nach dem Aufruf <xref:System.Deployment.Application.InPlaceHostingManager.Dispose%2A>, müssen Sie alle Verweise auf Freigeben der <xref:System.Deployment.Application.InPlaceHostingManager> , damit der Garbage Collector den Arbeitsspeicher freigeben kann, die die <xref:System.Deployment.Application.InPlaceHostingManager> belegt wurde. Weitere Informationen finden Sie unter [Bereinigen von nicht verwalteten Ressourcen](~/docs/standard/garbage-collection/unmanaged.md) und [Implementieren einer Dispose-Methode](~/docs/standard/garbage-collection/implementing-dispose.md).  
  
> [!NOTE]
>  Rufen Sie immer <xref:System.Deployment.Application.InPlaceHostingManager.Dispose%2A> auf, bevor Sie den letzten Verweis auf das <xref:System.Deployment.Application.InPlaceHostingManager> freigeben. Andernfalls bleiben die verwendeten Ressourcen reserviert, bis die Garbage Collection die <xref:System.Deployment.Application.InPlaceHostingManager>-Methode des `Finalize`-Objekts aufruft.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DownloadApplicationAsync">
      <MemberSignature Language="C#" Value="public void DownloadApplicationAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DownloadApplicationAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Deployment.Application.InPlaceHostingManager.DownloadApplicationAsync" />
      <MemberSignature Language="VB.NET" Value="Public Sub DownloadApplicationAsync ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DownloadApplicationAsync();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Lädt ein Anwendungsupdate im Hintergrund herunter.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Rufen Sie diese Methode nach dem Aufruf <xref:System.Deployment.Application.InPlaceHostingManager.AssertApplicationRequirements%2A>.  
  
   
  
## Examples  
 Das folgende Codebeispiel veranschaulicht die Verwendung von <xref:System.Deployment.Application.InPlaceHostingManager.DownloadApplicationAsync%2A>, der es aufgerufen wird, am Ende einer erfolgreichen <xref:System.Deployment.Application.InPlaceHostingManager.GetManifestCompleted> -Ereignishandler.  
  
 Die folgenden Codebeispiele wird davon ausgegangen, dass Sie bereits definiert und eine Instanz von erstellt <xref:System.Deployment.Application.InPlaceHostingManager> mit dem Namen `iphm`.  
  
 [!code-csharp[System.Deployment.Application.InPlaceHostingManager#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Deployment.Application.InPlaceHostingManager/CS/Form1.cs#3)]
 [!code-vb[System.Deployment.Application.InPlaceHostingManager#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Deployment.Application.InPlaceHostingManager/VB/Form1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Wird ausgelöst, wenn diese Methode vor der <see cref="M:System.Deployment.Application.InPlaceHostingManager.GetManifestAsync" />-Methode und der <see cref="M:System.Deployment.Application.InPlaceHostingManager.AssertApplicationRequirements" />-Methode aufgerufen wird.</exception>
      </Docs>
    </Member>
    <Member MemberName="DownloadApplicationCompleted">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Deployment.Application.DownloadApplicationCompletedEventArgs&gt; DownloadApplicationCompleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Deployment.Application.DownloadApplicationCompletedEventArgs&gt; DownloadApplicationCompleted" />
      <MemberSignature Language="DocId" Value="E:System.Deployment.Application.InPlaceHostingManager.DownloadApplicationCompleted" />
      <MemberSignature Language="VB.NET" Value="Public Event DownloadApplicationCompleted As EventHandler(Of DownloadApplicationCompletedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Deployment::Application::DownloadApplicationCompletedEventArgs ^&gt; ^ DownloadApplicationCompleted;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Deployment.Application.DownloadApplicationCompletedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt auf, wenn die Anwendung vollständig auf den lokalen Computer heruntergeladen wurde.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bei der Installation einer Windows Forms-basierten Anwendung müssen Sie die Benutzer anweisen, die Anwendung selbst zu starten. Sie können nicht Windows Forms-basierte Anwendungen programmgesteuert gestartet, mit der <xref:System.Deployment.Application.InPlaceHostingManager.Execute%2A> Methode.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, einen Handler für das <xref:System.Deployment.Application.InPlaceHostingManager.DownloadApplicationCompleted> Ereignis.  
  
 [!code-csharp[System.Deployment.Application.InPlaceHostingManager#7](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Deployment.Application.InPlaceHostingManager/CS/Form1.cs#7)]
 [!code-vb[System.Deployment.Application.InPlaceHostingManager#7](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Deployment.Application.InPlaceHostingManager/VB/Form1.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DownloadProgressChanged">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Deployment.Application.DownloadProgressChangedEventArgs&gt; DownloadProgressChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Deployment.Application.DownloadProgressChangedEventArgs&gt; DownloadProgressChanged" />
      <MemberSignature Language="DocId" Value="E:System.Deployment.Application.InPlaceHostingManager.DownloadProgressChanged" />
      <MemberSignature Language="VB.NET" Value="Public Event DownloadProgressChanged As EventHandler(Of DownloadProgressChangedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Deployment::Application::DownloadProgressChangedEventArgs ^&gt; ^ DownloadProgressChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Deployment.Application.DownloadProgressChangedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, wenn es eine Änderung im Status eines Downloads einer Anwendung oder eines Manifests gibt.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ereignisse werden in einer Konsolenanwendung aus einem Threadpool Threads zugewiesen. Aus diesem Grund erhalten Sie möglicherweise Update Fortschrittsereignisse außerhalb der Reihenfolge, mit der ein nachfolgendes Ereignis eine Verringerung der im Vergleich zu einem vorherigen Ereignis angezeigt. Ein solches Verhalten in einer Windows Forms-basierten Anwendung wird nicht angezeigt werden, da Ereignisse in Windows Forms aus der Nachrichtenwarteschlange Thread der Benutzeroberfläche (UI) des nacheinander verarbeitet werden.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie beim Aktualisieren einer <xref:System.Windows.Forms.ToolStripProgressBar> enthaltenen innerhalb einer <xref:System.Windows.Forms.StatusStrip>.  
  
 [!code-csharp[System.Deployment.Application.InPlaceHostingManager#6](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Deployment.Application.InPlaceHostingManager/CS/Form1.cs#6)]
 [!code-vb[System.Deployment.Application.InPlaceHostingManager#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Deployment.Application.InPlaceHostingManager/VB/Form1.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Execute">
      <MemberSignature Language="C#" Value="public System.Runtime.Remoting.ObjectHandle Execute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Runtime.Remoting.ObjectHandle Execute() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Deployment.Application.InPlaceHostingManager.Execute" />
      <MemberSignature Language="VB.NET" Value="Public Function Execute () As ObjectHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Runtime::Remoting::ObjectHandle ^ Execute();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.ObjectHandle</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Startet die [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)]-Anwendung nur dann, wenn es sich dabei um eine Windows Presentation Foundation-basierte Anwendung handelt, die in einem Webbrowser ausgeführt wird.</summary>
        <returns>Ein <see cref="T:System.Runtime.Remoting.ObjectHandle" />, das der gestarteten Anwendung entspricht.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode gilt nur für Windows Presentation Foundation-basierten Anwendungen, die in einem Webbrowser gehostet werden können (das heißt, ihre Bereitstellungsmanifeste definieren die `hostInBrowser` XML-Element).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetManifestAsync">
      <MemberSignature Language="C#" Value="public void GetManifestAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void GetManifestAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Deployment.Application.InPlaceHostingManager.GetManifestAsync" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetManifestAsync ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GetManifestAsync();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Lädt das Bereitstellungsmanifest der [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)]-Anwendung im Hintergrund herunter und löst ein Ereignis aus, wenn der Vorgang abgeschlossen wurde oder ein Fehler aufgetreten ist.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Erstellen Sie zum Empfangen der Benachrichtigung über den Abschluss dieses Ereignis einen Ereignishandler für das <xref:System.Deployment.Application.InPlaceHostingManager.GetManifestCompleted> Ereignis. Wenn dieses Ereignis wird aufgerufen, und kein Fehler wird von <xref:System.Deployment.Application.GetManifestCompletedEventArgs>, rufen Sie als Nächstes <xref:System.Deployment.Application.InPlaceHostingManager.AssertApplicationRequirements%2A> um sicherzustellen, dass die Anwendung die Berechtigung zum Ausführen auf dem lokalen Computer hat.  
  
   
  
## Examples  
 Die folgenden Codebeispiele veranschaulichen, wie zum Aufrufen der <xref:System.Deployment.Application.InPlaceHostingManager.GetManifestAsync%2A> Methode. Der Handler für das <xref:System.Deployment.Application.InPlaceHostingManager.GetManifestCompleted> Ereignis Rückruf geprüft, wenn das manifest Download erfolgreich abgeschlossen wurde, und wenn dies der Fall ist, wird der Benutzer mit zusätzlichen Informationen über die Anwendung aufgefordert. Wenn der Benutzer zustimmt, um die Installation fortzusetzen, ruft der Handler <xref:System.Deployment.Application.InPlaceHostingManager.DownloadApplicationAsync%2A>.  
  
 Die folgenden Codebeispiele wird davon ausgegangen, dass Sie bereits definiert und eine Instanz von erstellt <xref:System.Deployment.Application.InPlaceHostingManager> mit dem Namen `iphm`.  
  
 [!code-csharp[System.Deployment.Application.InPlaceHostingManager#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Deployment.Application.InPlaceHostingManager/CS/Form1.cs#3)]
 [!code-vb[System.Deployment.Application.InPlaceHostingManager#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Deployment.Application.InPlaceHostingManager/VB/Form1.vb#3)]  
  
 [!code-csharp[System.Deployment.Application.InPlaceHostingManager#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Deployment.Application.InPlaceHostingManager/CS/Form1.cs#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetManifestCompleted">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Deployment.Application.GetManifestCompletedEventArgs&gt; GetManifestCompleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Deployment.Application.GetManifestCompletedEventArgs&gt; GetManifestCompleted" />
      <MemberSignature Language="DocId" Value="E:System.Deployment.Application.InPlaceHostingManager.GetManifestCompleted" />
      <MemberSignature Language="VB.NET" Value="Public Event GetManifestCompleted As EventHandler(Of GetManifestCompletedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Deployment::Application::GetManifestCompletedEventArgs ^&gt; ^ GetManifestCompleted;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Deployment.Application.GetManifestCompletedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt auf, wenn das Bereitstellungsmanifest auf den lokalen Computer heruntergeladen wurde.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.ComponentModel.AsyncCompletedEventArgs.Error%2A> Eigenschaft <xref:System.Deployment.Application.GetManifestCompletedEventArgs> zu überprüfen, ob <xref:System.Deployment.Application.InPlaceHostingManager.GetManifestAsync%2A> wurde erfolgreich abgeschlossen oder ein Fehler zurückgegeben. Wenn <xref:System.ComponentModel.AsyncCompletedEventArgs.Error%2A> ist null, <xref:System.Deployment.Application.InPlaceHostingManager.GetManifestAsync%2A> wurde erfolgreich abgeschlossen, und Sie können Aufrufen <xref:System.Deployment.Application.InPlaceHostingManager.AssertApplicationRequirements%2A>.  
  
   
  
## Examples  
 Die folgenden Codebeispiele veranschaulichen, wie zum Aufrufen der <xref:System.Deployment.Application.InPlaceHostingManager.GetManifestAsync%2A> Methode. Der Handler für das <xref:System.Deployment.Application.InPlaceHostingManager.GetManifestCompleted> Ereignis Rückruf geprüft, wenn das manifest Download erfolgreich abgeschlossen wurde, und wenn dies der Fall ist, wird der Benutzer mit zusätzlichen Informationen über die Anwendung aufgefordert. Wenn der Benutzer zustimmt, um die Installation fortzusetzen, ruft der Handler <xref:System.Deployment.Application.InPlaceHostingManager.DownloadApplicationAsync%2A>.  
  
 Die folgenden Codebeispiele wird davon ausgegangen, dass Sie bereits definiert und eine Instanz von erstellt <xref:System.Deployment.Application.InPlaceHostingManager> mit dem Namen `iphm`.  
  
 [!code-csharp[System.Deployment.Application.InPlaceHostingManager#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Deployment.Application.InPlaceHostingManager/CS/Form1.cs#2)]
 [!code-vb[System.Deployment.Application.InPlaceHostingManager#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Deployment.Application.InPlaceHostingManager/VB/Form1.vb#2)]  
  
 [!code-csharp[System.Deployment.Application.InPlaceHostingManager#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Deployment.Application.InPlaceHostingManager/CS/Form1.cs#3)]
 [!code-vb[System.Deployment.Application.InPlaceHostingManager#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Deployment.Application.InPlaceHostingManager/VB/Form1.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UninstallCustomAddIn">
      <MemberSignature Language="C#" Value="public static void UninstallCustomAddIn (string subscriptionId);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void UninstallCustomAddIn(string subscriptionId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Deployment.Application.InPlaceHostingManager.UninstallCustomAddIn(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub UninstallCustomAddIn (subscriptionId As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void UninstallCustomAddIn(System::String ^ subscriptionId);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="subscriptionId">Eine Zeichenfolge mit einem Abonnementbezeichner, der das zu entfernende Add-In angibt.</param>
        <summary>Entfernt eine zuvor installierte benutzerdefinierte Komponente einer Anwendung.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="subscriptionId" /> ist keine gültige Abonnementidentität oder enthält keinen Namen, kein öffentliches Schlüsseltoken, keine Prozessorarchitektur und keine Versionsnummer.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="subscriptionId" /> ist <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="UninstallCustomUXApplication">
      <MemberSignature Language="C#" Value="public static void UninstallCustomUXApplication (string subscriptionId);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void UninstallCustomUXApplication(string subscriptionId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Deployment.Application.InPlaceHostingManager.UninstallCustomUXApplication(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub UninstallCustomUXApplication (subscriptionId As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void UninstallCustomUXApplication(System::String ^ subscriptionId);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="subscriptionId">Eine Zeichenfolge mit einem Abonnementbezeichner, der die zu entfernende [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)]-Anwendung angibt.</param>
        <summary>Entfernt eine [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)]-Anwendung, die das &lt;customUX&gt;-Element enthält.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode deinstalliert eine zuvor installierte [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] Anwendung, verwendet der `<customUX>` Element in der [ &lt;EntryPoint&gt; Element](http://msdn.microsoft.com/library/10ad3083-10c1-4189-a870-9bba2eab244f).  
  
 Benutzerdefinierte Installationsprogramme, die nicht für einen Software -Eintrag erstellen, führen Sie die [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] Anwendung muss gespeichert werden die Abonnement-ID finden der <xref:System.Deployment.Application.GetManifestCompletedEventArgs.SubscriptionIdentity%2A> Eigenschaft während der Installation.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>