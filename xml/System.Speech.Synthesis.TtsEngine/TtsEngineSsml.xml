<Type Name="TtsEngineSsml" FullName="System.Speech.Synthesis.TtsEngine.TtsEngineSsml">
  <Metadata><Meta Name="ms.openlocfilehash" Value="dbad2dca24ef75d7daaf78123cc3f2703d98b961" /><Meta Name="ms.sourcegitcommit" Value="48fd27f6aa659b18a958a72b9c956a9db49f2d96" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="03/12/2020" /><Meta Name="ms.locfileid" Value="79191059" /></Metadata><TypeSignature Language="C#" Value="public abstract class TtsEngineSsml" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit TtsEngineSsml extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Speech.Synthesis.TtsEngine.TtsEngineSsml" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class TtsEngineSsml" />
  <TypeSignature Language="C++ CLI" Value="public ref class TtsEngineSsml abstract" />
  <TypeSignature Language="F#" Value="type TtsEngineSsml = class" />
  <AssemblyInfo>
    <AssemblyName>System.Speech</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="426fc-101">Abstrakte Basisklasse, die durch alle Text zu Sprachesynthese-Engines implementiert wird.</span><span class="sxs-lookup"><span data-stu-id="426fc-101">Abstract base class to be implemented by all text to speech synthesis engines.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="426fc-102">Um einen benutzerdefinierten Text für die Sprach-Engine zu erstellen, muss eine Anwendung immer eine Klasse implementieren, die von der abstrakten Basisklasse <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml>abgeleitet ist.</span><span class="sxs-lookup"><span data-stu-id="426fc-102">To construct a custom text to speech engine, an application must always implement a class derived from the abstract base class <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml>.</span></span>  
  
 <span data-ttu-id="426fc-103">Eine ordnungsgemäß registrierte Implementierung von <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml> kann dann als eine Synthesizer-Stimme verwendet werden, indem <xref:System.Speech.Synthesis> auf dem Namespace basierende Anwendungen verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="426fc-103">A properly registered implementation of <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml> can then be used as a synthesizer voice by <xref:System.Speech.Synthesis> name space based applications.</span></span>  
  
 <span data-ttu-id="426fc-104">Objekte, die von <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml> erben, müssen die folgenden Member überschreiben: <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.%23ctor%2A>, <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.AddLexicon%2A>, <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.RemoveLexicon%2A>, <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.GetOutputFormat%2A> und <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.Speak%2A>.</span><span class="sxs-lookup"><span data-stu-id="426fc-104">Objects inheriting from <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml> must override the following members: <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.%23ctor%2A>, <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.AddLexicon%2A>, <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.RemoveLexicon%2A>, <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.GetOutputFormat%2A> and <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.Speak%2A>.</span></span>  
  
 <span data-ttu-id="426fc-105">Das wichtigste Element der <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml> Klasse, die implementiert werden soll, ist die <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.Speak%2A>-Methode.</span><span class="sxs-lookup"><span data-stu-id="426fc-105">The most important member of the <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml> class to be implemented is the <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.Speak%2A> method.</span></span>  
  
 <span data-ttu-id="426fc-106">Die <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.Speak%2A>-Methode wird vom Text Parser der Infrastruktur aufgerufen, der empfängt:</span><span class="sxs-lookup"><span data-stu-id="426fc-106">The <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.Speak%2A> method is called by the infrastructures text parser receiving:</span></span>  
  
1.  <span data-ttu-id="426fc-107">Ein Verweis auf die <xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite>-Schnittstelle, die Zugriff auf Systemdienste bereitstellt, z. b. das einreihen und Schreiben von Audioausgaben.</span><span class="sxs-lookup"><span data-stu-id="426fc-107">A reference to the <xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite> interface, which provides access to system services such as even queuing and writing audio output.</span></span>  
  
2.  <span data-ttu-id="426fc-108">Ein Array aus <xref:System.Speech.Synthesis.TtsEngine.TextFragment>-Instanz, die von der Sprachsynthese-Markup Sprache (SSML)-Eingabe erzeugt wird.</span><span class="sxs-lookup"><span data-stu-id="426fc-108">An array of <xref:System.Speech.Synthesis.TtsEngine.TextFragment> instance produced from Speech Synthesis Markup Language (SSML) input.</span></span> <span data-ttu-id="426fc-109">Zusätzlich zu dem Text, der als Sprache gerendert werden soll, speichert die Verarbeitung von SSML Informationen zu den angeforderten Attributen der Sprache in einer <xref:System.Speech.Synthesis.TtsEngine.FragmentState>-Instanz, die den einzelnen eingehenden <xref:System.Speech.Synthesis.TtsEngine.TextFragment> Objekten zugeordnet ist.</span><span class="sxs-lookup"><span data-stu-id="426fc-109">In addition to text to be rendered as speech, the parsing of the SSML stores information about the requested attributes of the speech in a <xref:System.Speech.Synthesis.TtsEngine.FragmentState> instance associated with each incoming <xref:System.Speech.Synthesis.TtsEngine.TextFragment> object.</span></span>  
  
 <span data-ttu-id="426fc-110">Eine Sprachsynthesizer-Anwendung kann optional Anforderungen für ein angegebenes Ausgabeformat vornehmen, indem Sie <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.GetOutputFormat%2A> implementiert, die von der Plattform aufgerufen werden, wenn Sie versucht, die richtige Audioausgabe bereitzustellen.</span><span class="sxs-lookup"><span data-stu-id="426fc-110">A speech synthesizer application can optionally make requests for a specified output format by implementing <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.GetOutputFormat%2A> to be called by the platform when it tries to provide the correct audio output.</span></span>  
  
 <span data-ttu-id="426fc-111">Ein Implementierer kann auch Unterstützung für die Verwaltung externer Definitionen von pronsierungen oder lexikonen durch die Implementierung von <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.AddLexicon%2A> und <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.RemoveLexicon%2A>bereitstellen.</span><span class="sxs-lookup"><span data-stu-id="426fc-111">An implementer can also provide support for managing external definitions of pronunciations, or lexicons, by their implementation of <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.AddLexicon%2A> and <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.RemoveLexicon%2A>.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected TtsEngineSsml (string registryKey);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(string registryKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (registryKey As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; TtsEngineSsml(System::String ^ registryKey);" />
      <MemberSignature Language="F#" Value="new System.Speech.Synthesis.TtsEngine.TtsEngineSsml : string -&gt; System.Speech.Synthesis.TtsEngine.TtsEngineSsml" Usage="new System.Speech.Synthesis.TtsEngine.TtsEngineSsml registryKey" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="registryKey" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="registryKey"><span data-ttu-id="426fc-112">Vollständiger Name des Registrierungsschlüssels für das Sprachen-Token, das mit der <see cref="T:System.Speech.Synthesis.TtsEngine.TtsEngineSsml" />-Implementierung zugeordnet wird.</span><span class="sxs-lookup"><span data-stu-id="426fc-112">Full name of the registry key for the Voice Token associated with the <see cref="T:System.Speech.Synthesis.TtsEngine.TtsEngineSsml" /> implementation.</span></span> <span data-ttu-id="426fc-113">Engine.</span><span class="sxs-lookup"><span data-stu-id="426fc-113">engine.</span></span></param>
        <summary><span data-ttu-id="426fc-114">Erstellt eine neue Instanz von <see cref="T:System.Speech.Synthesis.TtsEngine.TtsEngineSsml" /> auf Grundlage eines entsprechenden Stimmentokenregistrierungsschlüssels.</span><span class="sxs-lookup"><span data-stu-id="426fc-114">Constructs a new instance of <see cref="T:System.Speech.Synthesis.TtsEngine.TtsEngineSsml" /> based on an appropriate Voice Token registry key.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="426fc-115">Aufrufe dieses Konstruktors werden in der Regel von <xref:System.Speech.Synthesis> basierten Anwendungen generiert, die eine Synthesizer-Stimme auswählen, die von einer Instanz von <xref:System.Speech.Synthesis.SpeechSynthesizer>verwendet werden soll.</span><span class="sxs-lookup"><span data-stu-id="426fc-115">Calls to this constructor are typically generated by <xref:System.Speech.Synthesis> based applications selecting a synthesizer voice to be used by an instance of <xref:System.Speech.Synthesis.SpeechSynthesizer>.</span></span>  
  
 <span data-ttu-id="426fc-116">Eine <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml> muss unter HKEY_LOCAL_MACHINE \software\microsoft\sprachlos \voices\anmeldet werden.</span><span class="sxs-lookup"><span data-stu-id="426fc-116">A <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml> must be register under HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Speech\Voices\Tokens.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddLexicon">
      <MemberSignature Language="C#" Value="public abstract void AddLexicon (Uri uri, string mediaType, System.Speech.Synthesis.TtsEngine.ITtsEngineSite site);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddLexicon(class System.Uri uri, string mediaType, class System.Speech.Synthesis.TtsEngine.ITtsEngineSite site) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.AddLexicon(System.Uri,System.String,System.Speech.Synthesis.TtsEngine.ITtsEngineSite)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub AddLexicon (uri As Uri, mediaType As String, site As ITtsEngineSite)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void AddLexicon(Uri ^ uri, System::String ^ mediaType, System::Speech::Synthesis::TtsEngine::ITtsEngineSite ^ site);" />
      <MemberSignature Language="F#" Value="abstract member AddLexicon : Uri * string * System.Speech.Synthesis.TtsEngine.ITtsEngineSite -&gt; unit" Usage="ttsEngineSsml.AddLexicon (uri, mediaType, site)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="System.Uri" />
        <Parameter Name="mediaType" Type="System.String" />
        <Parameter Name="site" Type="System.Speech.Synthesis.TtsEngine.ITtsEngineSite" />
      </Parameters>
      <Docs>
        <param name="uri"><span data-ttu-id="426fc-117">Eine gültige Instanz von <see langword="System.Uri" />, die den Speicherort der Lexikoninformationen angibt.</span><span class="sxs-lookup"><span data-stu-id="426fc-117">A valid instance of <see langword="System.Uri" /> indicating the location of the lexicon information.</span></span></param>
        <param name="mediaType"><span data-ttu-id="426fc-118">Eine Zeichenfolge mit dem Medientyp des Lexikons.</span><span class="sxs-lookup"><span data-stu-id="426fc-118">A string containing the media type of the lexicon.</span></span> <span data-ttu-id="426fc-119">Bei Medientypen wird die Groß-/Kleinschreibung nicht beachtet.</span><span class="sxs-lookup"><span data-stu-id="426fc-119">Media types are case insensitive.</span></span></param>
        <param name="site"><span data-ttu-id="426fc-120">Ein Verweis auf eine <see cref="T:System.Speech.Synthesis.TtsEngine.ITtsEngineSite" />-Schnittstelle, die verwendet wird, um mit der Plattforminfrastruktur zu interagieren.</span><span class="sxs-lookup"><span data-stu-id="426fc-120">A reference to an <see cref="T:System.Speech.Synthesis.TtsEngine.ITtsEngineSite" /> interface used to interact with the platform infrastructure.</span></span></param>
        <summary><span data-ttu-id="426fc-121">Fügt der <see langword="Synthesizer" /><see langword="Voice" /> ein Lexikon hinzu, das von der aktuellen <see cref="T:System.Speech.Synthesis.TtsEngine.TtsEngineSsml" /> Instanz implementiert wird.</span><span class="sxs-lookup"><span data-stu-id="426fc-121">Adds a lexicon to the <see langword="Synthesizer" /><see langword="Voice" /> implemented by the current <see cref="T:System.Speech.Synthesis.TtsEngine.TtsEngineSsml" /> instance.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="426fc-122">Ein Aussprache Lexikon ist eine Auflistung von Wörtern oder Ausdrücken und deren mit einem entsprechenden Ausrufe Alphabet angegebenen Ausdrücke.</span><span class="sxs-lookup"><span data-stu-id="426fc-122">A pronunciation lexicon is a collection of words or phrases together with their pronunciations specified using an appropriate pronunciation alphabet.</span></span>  
  
 <span data-ttu-id="426fc-123">Diese Methode wird in der Regel von der Platt Form Infrastruktur als Reaktion auf eine <xref:System.Speech.Synthesis> basierten Anwendungen aufgerufen, die <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.AddLexicon%2A> aufrufen und die von der aktuellen <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml> Instanz implementierte Synthesizer-Sprache verwenden.</span><span class="sxs-lookup"><span data-stu-id="426fc-123">This method is typically called by the platform infrastructure in response to a <xref:System.Speech.Synthesis> based applications calling <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.AddLexicon%2A> and using the synthesizer voice implemented by the current <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml> instance.</span></span>  
  
 <span data-ttu-id="426fc-124">Der Wert von `mediaType` ist in der Regel eine MIME-Spezifikation, da die SSML-Spezifikation MIME für Medien Spezifikationen verwendet.</span><span class="sxs-lookup"><span data-stu-id="426fc-124">The value of `mediaType` is typically a MIME specification, as the SSML specification uses MIME for media specifications.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="426fc-125">Bei der Implementierung von <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.AddLexicon%2A> wird die <xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite> Schnittstelle verwendet, die zum Laden eines Lexikon aus einer Ressource verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="426fc-125">The implementation of <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.AddLexicon%2A> uses the <xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite> interface passed in to load a lexicon from a resource.</span></span> <span data-ttu-id="426fc-126">Anschließend wird eine `System.IO.Stream` in der Lexikon in einer `System.Collections.Generic.Dictionary` Instanz gespeichert, die vom Lexikon-URI indiziert wird.</span><span class="sxs-lookup"><span data-stu-id="426fc-126">It then stores a `System.IO.Stream` to the lexicon in a `System.Collections.Generic.Dictionary` instance, indexed by the lexicon URI.</span></span>  
  
```  
public static Dictionary<Uri, Stream> _aLexicons = new Dictionary<Uri, Stream>();  
  
 public void AddLexicon(Uri uri, string mediaType, ITtsEngineSite site) {  
    Stream stream = site.LoadResource(uri, mediaType);  
    _aLexicons.Add(uri, stream);  
}  
  
 public void RemoveLexicon(Uri uri, ITtsEngineSite site) {  
     Stream stream;  
     if (_aLexicons.TryGetValue(uri, out stream)) {  
         stream.Close();  
         _aLexicons.Remove(uri);  
     }  
}  
  
```  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="426fc-127">Es liegt in der Verantwortung der Implementierung, das in <paramref name="uri" />gespeicherte Lexikon vollständig zu kennen und zu verarbeiten.</span><span class="sxs-lookup"><span data-stu-id="426fc-127">It is the responsibility of the implementation to be fully familiar with and be able to process the lexicon stored at <paramref name="uri" />.</span></span> <span data-ttu-id="426fc-128">Die-Implementierung muss auch die Lebensdauer aller von ihr Hinzufügungen nachverfolgen und verwalten.</span><span class="sxs-lookup"><span data-stu-id="426fc-128">The implementation must also keep track and manage the lifetimes of all lexicons it adds.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="GetOutputFormat">
      <MemberSignature Language="C#" Value="public abstract IntPtr GetOutputFormat (System.Speech.Synthesis.TtsEngine.SpeakOutputFormat speakOutputFormat, IntPtr targetWaveFormat);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance native int GetOutputFormat(valuetype System.Speech.Synthesis.TtsEngine.SpeakOutputFormat speakOutputFormat, native int targetWaveFormat) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.GetOutputFormat(System.Speech.Synthesis.TtsEngine.SpeakOutputFormat,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetOutputFormat (speakOutputFormat As SpeakOutputFormat, targetWaveFormat As IntPtr) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract IntPtr GetOutputFormat(System::Speech::Synthesis::TtsEngine::SpeakOutputFormat speakOutputFormat, IntPtr targetWaveFormat);" />
      <MemberSignature Language="F#" Value="abstract member GetOutputFormat : System.Speech.Synthesis.TtsEngine.SpeakOutputFormat * nativeint -&gt; nativeint" Usage="ttsEngineSsml.GetOutputFormat (speakOutputFormat, targetWaveFormat)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="speakOutputFormat" Type="System.Speech.Synthesis.TtsEngine.SpeakOutputFormat" />
        <Parameter Name="targetWaveFormat" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="speakOutputFormat"><span data-ttu-id="426fc-129">Gültiger Member der <see cref="T:System.Speech.Synthesis.TtsEngine.SpeakOutputFormat" />-Enumeration, der den Typ des angeforderten Audioausgabeformats angibt.</span><span class="sxs-lookup"><span data-stu-id="426fc-129">Valid member of the <see cref="T:System.Speech.Synthesis.TtsEngine.SpeakOutputFormat" /> enumeration indicating the type of requested audio output format.</span></span></param>
        <param name="targetWaveFormat"><span data-ttu-id="426fc-130">Ein Zeiger auf <see langword="struct" />, das Detaileinstellung für den Audioformattyp enthält, der vom <paramref name="speakOutputFormat" />-Argument angefordert wurde.</span><span class="sxs-lookup"><span data-stu-id="426fc-130">A pointer to a <see langword="struct" /> containing detail setting for the audio format type requested by the <paramref name="speakOutputFormat" /> argument.</span></span></param>
        <summary><span data-ttu-id="426fc-131">Gibt die am besten passende Audioausgabe zurück, die von einer Antwort die angegebene Synthetisier-Engine auf eine Anforderung an die Synthetisier-Engine für die Unterstützung eines bestimmten Ausgabeformats unterstützt wird.</span><span class="sxs-lookup"><span data-stu-id="426fc-131">Returns the best matching audio output supported by a given synthesize engine response to a request to the synthesizer engine for the support of a particular output format.</span></span></summary>
        <returns><span data-ttu-id="426fc-132">Gibt eine gültige <see cref="T:System.IntPtr" />-Instanz zurück, die auf ein <see langword="struct" /> verweist, das ausführliche Informationen über das Ausgabeformat enthält.</span><span class="sxs-lookup"><span data-stu-id="426fc-132">Returns a valid <see cref="T:System.IntPtr" /> instance referring to a <see langword="struct" /> containing detailed information about the output format.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="426fc-133">Die Struktur, die als `targetWaveFormat` verwendet und von der-Methode zurückgegeben wird, muss mit der unter SAPI verfügbaren `WAVEFORMATEX` kompatibel sein, und der zurückgegebene Wert sollte mithilfe `CoTaskMemAlloc`zugeordnet werden.</span><span class="sxs-lookup"><span data-stu-id="426fc-133">The structure used as `targetWaveFormat` and returned by the method should compatible with the `WAVEFORMATEX` available under SAPI, and the returned value should be allocated using `CoTaskMemAlloc`.</span></span>  
  
 <span data-ttu-id="426fc-134">Die `struct` muss Funktionen bereitstellen, die folgenden Funktionen entsprechen:</span><span class="sxs-lookup"><span data-stu-id="426fc-134">The `struct` must provide functionality equivalent to:</span></span>  
  
```  
internal struct WaveFormat  
{  
    public Int16 FormatTag;  
    public Int16 Channels;  
    public int SamplesPerSec;  
    public int AvgBytesPerSec;  
    public Int16 BlockAlign;  
    public Int16 BitsPerSample;  
    public Int16 Size;  
}  
```  
  
   
  
## Examples  
 <span data-ttu-id="426fc-135">Die nachfolgende Beispiel Implementierung überprüft die ausgewählten Eingaben und verwendet diese, wenn Sie sich innerhalb von Toleranzen befinden; andernfalls werden die Standardwerte verwendet.</span><span class="sxs-lookup"><span data-stu-id="426fc-135">The sample implementation below validates selected inputs, using them if they are within tolerances, otherwise using default values.</span></span>  
  
```  
public IntPtr GetOutputFormat(SpeakOutputFormat format, IntPtr targetWaveFormat) {  
    WaveFormat waveFormat = new WaveFormat();  
    WaveFormat rq=new WaveFormat();  
    Marshal.PtrToStructure(targetWaveFormat,rq);  
  
    waveFormat.AvgBytesPerSec = AvgBytesPerSec Min < rq.AvgBytesPerSec && rq.AvgBytesPerSec < AvgBytesPerSecMax? rq.AvgBytesPerSec : 3200;  
    waveFormat.BitsPerSample = BitsPerSampleMin < rq.AvgBytesPerSec && rq.BitsPerSample < BitsPerSampleMax ? rq.AvgBytesPerSec : 3200; 16;  
    waveFormat.BlockAlign = 2;  
    waveFormat.Channels = 1;  
    waveFormat.FormatTag = 1;  
    waveFormat.SamplesPerSec = 16000;  
    waveFormat.Size = 0;  
  
    IntPtr wfx = Marshal.AllocCoTaskMem(Marshal.SizeOf(waveFormat));  
    Marshal.StructureToPtr(waveFormat, wfx, false);  
  
    //Console.WriteLine ("GetOutputFormat called");  
    return wfx;  
}  
internal struct WaveFormat {  
    public Int16 FormatTag;  
    public Int16 Channels;  
    public int SamplesPerSec;  
    public int AvgBytesPerSec;  
    public Int16 BlockAlign;  
    public Int16 BitsPerSample;  
    public Int16 Size;  
}  
```  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="426fc-136">Das Objekt, das von <see cref="T:System.Speech.Synthesis.TtsEngine.TtsEngineSsml" /> erbt, sollte das angeforderte Ausgabeformat wie <paramref name="targetWaveFormat" /> überprüfen und das nächstgelegene Format zurückgeben, das unterstützt wird.</span><span class="sxs-lookup"><span data-stu-id="426fc-136">Object inheriting from <see cref="T:System.Speech.Synthesis.TtsEngine.TtsEngineSsml" /> should examine the requested output format as specified by <paramref name="targetWaveFormat" /> and return the closest format that it supports.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="RemoveLexicon">
      <MemberSignature Language="C#" Value="public abstract void RemoveLexicon (Uri uri, System.Speech.Synthesis.TtsEngine.ITtsEngineSite site);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveLexicon(class System.Uri uri, class System.Speech.Synthesis.TtsEngine.ITtsEngineSite site) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.RemoveLexicon(System.Uri,System.Speech.Synthesis.TtsEngine.ITtsEngineSite)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub RemoveLexicon (uri As Uri, site As ITtsEngineSite)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void RemoveLexicon(Uri ^ uri, System::Speech::Synthesis::TtsEngine::ITtsEngineSite ^ site);" />
      <MemberSignature Language="F#" Value="abstract member RemoveLexicon : Uri * System.Speech.Synthesis.TtsEngine.ITtsEngineSite -&gt; unit" Usage="ttsEngineSsml.RemoveLexicon (uri, site)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="System.Uri" />
        <Parameter Name="site" Type="System.Speech.Synthesis.TtsEngine.ITtsEngineSite" />
      </Parameters>
      <Docs>
        <param name="uri"><span data-ttu-id="426fc-137">Eine gültige Instanz von <see langword="System.Uri" />, die den Speicherort der Lexikoninformationen angibt.</span><span class="sxs-lookup"><span data-stu-id="426fc-137">A valid instance of <see langword="System.Uri" /> indicating the location of the lexicon information.</span></span></param>
        <param name="site"><span data-ttu-id="426fc-138">Ein Verweis auf eine <see cref="T:System.Speech.Synthesis.TtsEngine.ITtsEngineSite" />-Schnittstelle, die durch die Plattforminfrastruktur übergeben wird, um Zugriff auf Infrastrukturressourcenn zu ermöglichen.</span><span class="sxs-lookup"><span data-stu-id="426fc-138">A reference to an <see cref="T:System.Speech.Synthesis.TtsEngine.ITtsEngineSite" /> interface passed in by the platform infrastructure to allow access to the infrastructure resources.</span></span></param>
        <summary><span data-ttu-id="426fc-139">Entfernt ein Lexikon, das gerade durch <see langword="Synthesizer" /><see langword="Voice" /> geladen wird, das von der aktuellen <see cref="T:System.Speech.Synthesis.TtsEngine.TtsEngineSsml" />-Instanz implementiert wird.</span><span class="sxs-lookup"><span data-stu-id="426fc-139">Removes a lexicon currently loaded by the <see langword="Synthesizer" /><see langword="Voice" /> implemented by the current <see cref="T:System.Speech.Synthesis.TtsEngine.TtsEngineSsml" /> instance.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="426fc-140">Ein Aussprache Lexikon ist eine Auflistung von Wörtern oder Ausdrücken und deren mit einem entsprechenden Ausrufe Alphabet angegebenen Ausdrücke.</span><span class="sxs-lookup"><span data-stu-id="426fc-140">A pronunciation lexicon is a collection of words or phrases together with their pronunciations specified using an appropriate pronunciation alphabet.</span></span>  
  
 <span data-ttu-id="426fc-141">Diese Methode wird in der Regel als Reaktion auf eine <xref:System.Speech.Synthesis> basierten Anwendungen aufgerufen, die <xref:System.Speech.Synthesis.SpeechSynthesizer.RemoveLexicon%2A> aufrufen und die von der aktuellen <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml> Instanz implementierte Synthesizer-Sprache verwenden.</span><span class="sxs-lookup"><span data-stu-id="426fc-141">This method is typically called in response to a <xref:System.Speech.Synthesis> based applications calling <xref:System.Speech.Synthesis.SpeechSynthesizer.RemoveLexicon%2A> and using the synthesizer voice implemented by the current <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml> instance.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="426fc-142">Bei der Implementierung von <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.RemoveLexicon%2A> wird der Lexikon-URI verwendet, um eine Instanz `System.Collections.Generic.Dictionary` für die `System.IO.Stream`abzufragen, den Stream zu schließen und den URI zu entfernen, der auf das Lexikon verweist.</span><span class="sxs-lookup"><span data-stu-id="426fc-142">The implementation of <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.RemoveLexicon%2A> uses the lexicon URI to query an instance `System.Collections.Generic.Dictionary` for the `System.IO.Stream`, closes the stream and removes the uri referring to the lexicon.</span></span>  
  
```  
public static Dictionary<Uri, Stream> _aLexicons = new Dictionary<Uri, Stream>();  
  
 public void AddLexicon(Uri uri, string mediaType, ITtsEngineSite site) {  
    Stream stream = site.LoadResource(uri, mediaType);  
    _aLexicons.Add(uri, stream);  
}  
  
 public void RemoveLexicon(Uri uri, ITtsEngineSite site) {  
     Stream stream;  
     if (_aLexicons.TryGetValue(uri, out stream)) {  
         stream.Close();  
         _aLexicons.Remove(uri);  
     }  
}  
```  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="426fc-143">Es liegt in der Verantwortung der Implementierung, das in <paramref name="uri" />gespeicherte Lexikon vollständig zu kennen und zu verarbeiten.</span><span class="sxs-lookup"><span data-stu-id="426fc-143">It is the responsibility of the implementation to be fully familiar with and be able to process the lexicon stored at <paramref name="uri" />.</span></span> <span data-ttu-id="426fc-144">Die-Implementierung muss auch die Lebensdauer aller zu entfernenden Lexika nachverfolgen und verwalten.</span><span class="sxs-lookup"><span data-stu-id="426fc-144">The implementation must also keep track and manage the lifetimes of all lexicons it removes.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="Speak">
      <MemberSignature Language="C#" Value="public abstract void Speak (System.Speech.Synthesis.TtsEngine.TextFragment[] fragment, IntPtr waveHeader, System.Speech.Synthesis.TtsEngine.ITtsEngineSite site);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Speak(class System.Speech.Synthesis.TtsEngine.TextFragment[] fragment, native int waveHeader, class System.Speech.Synthesis.TtsEngine.ITtsEngineSite site) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.Speak(System.Speech.Synthesis.TtsEngine.TextFragment[],System.IntPtr,System.Speech.Synthesis.TtsEngine.ITtsEngineSite)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Speak (fragment As TextFragment(), waveHeader As IntPtr, site As ITtsEngineSite)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Speak(cli::array &lt;System::Speech::Synthesis::TtsEngine::TextFragment ^&gt; ^ fragment, IntPtr waveHeader, System::Speech::Synthesis::TtsEngine::ITtsEngineSite ^ site);" />
      <MemberSignature Language="F#" Value="abstract member Speak : System.Speech.Synthesis.TtsEngine.TextFragment[] * nativeint * System.Speech.Synthesis.TtsEngine.ITtsEngineSite -&gt; unit" Usage="ttsEngineSsml.Speak (fragment, waveHeader, site)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fragment" Type="System.Speech.Synthesis.TtsEngine.TextFragment[]" />
        <Parameter Name="waveHeader" Type="System.IntPtr" />
        <Parameter Name="site" Type="System.Speech.Synthesis.TtsEngine.ITtsEngineSite" />
      </Parameters>
      <Docs>
        <param name="fragment"><span data-ttu-id="426fc-145">Ein Array von <see cref="T:System.Speech.Synthesis.TtsEngine.TextFragment" /> Instanzen, die den in Sprache umzuwandelnden Text enthalten.</span><span class="sxs-lookup"><span data-stu-id="426fc-145">An array of <see cref="T:System.Speech.Synthesis.TtsEngine.TextFragment" /> instances containing the text to be rendered into speech.</span></span></param>
        <param name="waveHeader"><span data-ttu-id="426fc-146">Ein <see cref="T:System.IntPtr" />, das auf eine Struktur zeigt, die Audioausgabeformat enthält.</span><span class="sxs-lookup"><span data-stu-id="426fc-146">An <see cref="T:System.IntPtr" /> pointing to a structure containing audio output format.</span></span></param>
        <param name="site"><span data-ttu-id="426fc-147">Ein Verweis auf eine <see cref="T:System.Speech.Synthesis.TtsEngine.ITtsEngineSite" />-Schnittstelle, die durch die Plattforminfrastruktur übergeben wird, um Zugriff auf Infrastrukturressourcenn zu ermöglichen.</span><span class="sxs-lookup"><span data-stu-id="426fc-147">A reference to an <see cref="T:System.Speech.Synthesis.TtsEngine.ITtsEngineSite" /> interface passed in by the platform infrastructure to allow access to the infrastructure resources.</span></span></param>
        <summary><span data-ttu-id="426fc-148">Rendert angegebenes <see cref="T:System.Speech.Synthesis.TtsEngine.TextFragment" />-Array im angegebenen Ausgabeformat.</span><span class="sxs-lookup"><span data-stu-id="426fc-148">Renders specified <see cref="T:System.Speech.Synthesis.TtsEngine.TextFragment" /> array in the specified output format.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="426fc-149">Die Struktur, die als `waveHeader` verwendet und von der-Methode zurückgegeben wird, sollte mit der unter SAPI verfügbaren `WAVEFORMATEX` kompatibel sein.</span><span class="sxs-lookup"><span data-stu-id="426fc-149">The structure used as `waveHeader` and returned by the method should compatible with the `WAVEFORMATEX` available under SAPI.</span></span>  
  
 <span data-ttu-id="426fc-150">Die `struct` muss Funktionen bereitstellen, die folgenden Funktionen entsprechen:</span><span class="sxs-lookup"><span data-stu-id="426fc-150">The `struct` must provide functionality equivalent to:</span></span>  
  
```  
internal struct WaveFormat  
{  
    public Int16 FormatTag;  
    public Int16 Channels;  
    public int SamplesPerSec;  
    public int AvgBytesPerSec;  
    public Int16 BlockAlign;  
    public Int16 BitsPerSample;  
    public Int16 Size;  
}  
```  
  
   
  
## Examples  
 <span data-ttu-id="426fc-151">Das folgende Beispiel ist Teil einer benutzerdefinierten Sprachsynthese Implementierung, die von <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml>erbt und die Verwendung von <xref:System.Speech.Synthesis.TtsEngine.TextFragment>, <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo>, <xref:System.Speech.Synthesis.TtsEngine.FragmentState>und <xref:System.Speech.Synthesis.TtsEngine.TtsEventId></span><span class="sxs-lookup"><span data-stu-id="426fc-151">The example below is part of a custom speech synthesis implementation inheriting from <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml>, and using the use of <xref:System.Speech.Synthesis.TtsEngine.TextFragment>, <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo>, <xref:System.Speech.Synthesis.TtsEngine.FragmentState>, and <xref:System.Speech.Synthesis.TtsEngine.TtsEventId></span></span>  
  
 <span data-ttu-id="426fc-152">Die Implementierung von <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.Speak%2A></span><span class="sxs-lookup"><span data-stu-id="426fc-152">The implementation of <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.Speak%2A></span></span>  
  
1.  <span data-ttu-id="426fc-153">Empfängt ein Array von <xref:System.Speech.Synthesis.TtsEngine.TextFragment>-Instanzen und erstellt ein neues Array von <xref:System.Speech.Synthesis.TtsEngine.TextFragment>-Instanzen, die an die `Speak`-Methode in einer zugrunde liegenden Synthese-Engine weitergegeben werden.</span><span class="sxs-lookup"><span data-stu-id="426fc-153">Receives an array of <xref:System.Speech.Synthesis.TtsEngine.TextFragment> instances and creates a new array of <xref:System.Speech.Synthesis.TtsEngine.TextFragment> instances to be passed to the `Speak` method on an underlying synthesis engine.</span></span>  
  
2.  <span data-ttu-id="426fc-154">Wenn der <xref:System.Speech.Synthesis.TtsEngine.TtsEngineAction> Enumerationswert, der in der <xref:System.Speech.Synthesis.TtsEngine.FragmentState.Action%2A>-Eigenschaft des <xref:System.Speech.Synthesis.TtsEngine.FragmentState> gefunden wird, der von der <xref:System.Speech.Synthesis.TtsEngine.TextFragment.State%2A>-Eigenschaft jeder <xref:System.Speech.Synthesis.TtsEngine.TextFragment> Instanz zurückgegeben wird, <xref:System.Speech.Synthesis.TtsEngine.TtsEngineAction.Speak>ist, wird die Implementierung</span><span class="sxs-lookup"><span data-stu-id="426fc-154">If the <xref:System.Speech.Synthesis.TtsEngine.TtsEngineAction> enumeration value by found from the <xref:System.Speech.Synthesis.TtsEngine.FragmentState.Action%2A> property on the <xref:System.Speech.Synthesis.TtsEngine.FragmentState> returned by the <xref:System.Speech.Synthesis.TtsEngine.TextFragment.State%2A> property of each <xref:System.Speech.Synthesis.TtsEngine.TextFragment> instance is <xref:System.Speech.Synthesis.TtsEngine.TtsEngineAction.Speak>, the implementation</span></span>  
  
    -   <span data-ttu-id="426fc-155">Übersetzt Amerikanismus in britishisms in den zu sprechenden Text.</span><span class="sxs-lookup"><span data-stu-id="426fc-155">Translates Americanism to Britishisms in the text to be spoken.</span></span>  
  
    -   <span data-ttu-id="426fc-156">Wenn die <xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite.EventInterest%2A>-Eigenschaft der <xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite> Schnittstellen, die der-Implementierung bereitgestellt werden, den <xref:System.Speech.Synthesis.TtsEngine.TtsEventId.WordBoundary>-Ereignistyp unterstützt, wird eine <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo> Instanz verwendet, um ein Ereignis zu erstellen, mit dem eine Synthesizer-Status Messung erstellt wird</span><span class="sxs-lookup"><span data-stu-id="426fc-156">If the <xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite.EventInterest%2A> property on the <xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite> interfaces provided to the implementation support the <xref:System.Speech.Synthesis.TtsEngine.TtsEventId.WordBoundary> event type, a <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo> instance is used to create an event to drive a synthesizer progress meter is created.</span></span>  
  
3.  <span data-ttu-id="426fc-157">Anschließend wird ein sprachrenderingmodul mit dem geänderten <xref:System.Speech.Synthesis.TtsEngine.TextFragment> Array aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="426fc-157">A speech rendering engine is then called with the modified <xref:System.Speech.Synthesis.TtsEngine.TextFragment> array.</span></span>  
  
```  
private const int WordBoundaryFlag = 1 << (int)TtsEventId.WordBoundary;  
private readonly char[] spaces = new char[] { ' ', '\t', '\r', '\n' };  
internal struct UsVsUk  
{  
  internal string UK;  
  internal string US;  
}  
  
override public void Speak (TextFragment [] frags, IntPtr wfx, ITtsEngineSite site)  
{  
  TextFragment [] newFrags=new TextFragment[frags.Length];  
  
  for (int i=0;i<frags.Length;i++){  
    newFrags[i].State=frags[i].State;  
    //truncate  
    newFrags[i].TextToSpeak = frags[i].TextToSpeak.Substring(frags[i].TextOffset,  
                               frags[i].TextLength);  
    newFrags[i].TextLength = newFrags[i].TextToSpeak.Length;  
    newFrags[i].TextOffset = 0;  
    if (newFrags[i].State.Action == TtsEngineAction.Speak) {  
      //Us to UK conversion  
      foreach (UsVsUk term in TransList) {  
      newFrags[i].TextToSpeak.Replace(term.US, term.UK);  
      }  
      //Generate progress meter events if supported  
      if ((site.EventInterest & WordBoundaryFlag) != 0) {  
      string[] subs = newFrags[i].TextToSpeak.Split(spaces);  
  
      foreach (string s in subs) {  
        int offset = newFrags[i].TextOffset;  
        SpeechEventInfo spEvent = new SpeechEventInfo((Int16)TtsEventId.WordBoundary,   
                (Int16)EventParameterType.Undefined,   
                 s.Length, new IntPtr(offset));  
        offset += s.Length;  
        if (s.Trim().Length > 0) {  
          SpeechEventInfo[] events = new SpeechEventInfo[1];  
          events[0] = spEvent;  
          site.AddEvents(events, 1);  
        }  
      }  
      }  
    }  
  }  
    _baseSynthesize.Speak(newFrags, wfx, site);  
  
}  
```  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="426fc-158">Der benutzerdefinierte Sprachsynthesizer implementiert mithilfe von <see cref="T:System.Speech.Synthesis.TtsEngine.TtsEngineSsml" /> und <see cref="M:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.Speak(System.Speech.Synthesis.TtsEngine.TextFragment[],System.IntPtr,System.Speech.Synthesis.TtsEngine.ITtsEngineSite)" /> funktioniert als Filter oder Vermittler zwischen Synthesizer-Anwendungen, die mithilfe der Platt Form Infrastruktur über die Member des <see cref="N:System.Speech.Synthesis" /> Namespace und den zugrunde liegenden System Sprachsynthese-Engines erstellt werden.</span><span class="sxs-lookup"><span data-stu-id="426fc-158">Custom speech synthesizer implements using <see cref="T:System.Speech.Synthesis.TtsEngine.TtsEngineSsml" /> and <see cref="M:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.Speak(System.Speech.Synthesis.TtsEngine.TextFragment[],System.IntPtr,System.Speech.Synthesis.TtsEngine.ITtsEngineSite)" /> work as filters or intermediaries between synthesizer applications constructed using the platform infrastructure through the members of the <see cref="N:System.Speech.Synthesis" /> namespace and underlying system speech synthesis engines.</span></span>  
  
<span data-ttu-id="426fc-159">Eine <see cref="M:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.Speak(System.Speech.Synthesis.TtsEngine.TextFragment[],System.IntPtr,System.Speech.Synthesis.TtsEngine.ITtsEngineSite)" />-Implementierung:</span><span class="sxs-lookup"><span data-stu-id="426fc-159">A <see cref="M:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.Speak(System.Speech.Synthesis.TtsEngine.TextFragment[],System.IntPtr,System.Speech.Synthesis.TtsEngine.ITtsEngineSite)" /> implementation:</span></span> 
<span data-ttu-id="426fc-160">1.</span><span class="sxs-lookup"><span data-stu-id="426fc-160">1.</span></span>  <span data-ttu-id="426fc-161">Fängt die Aspekte der eingehenden <see cref="T:System.Speech.Synthesis.TtsEngine.TextFragment" /> Objekte ab oder ändert Sie.</span><span class="sxs-lookup"><span data-stu-id="426fc-161">Traps or modify aspects of the incoming <see cref="T:System.Speech.Synthesis.TtsEngine.TextFragment" /> objects</span></span> 
<span data-ttu-id="426fc-162">2.</span><span class="sxs-lookup"><span data-stu-id="426fc-162">2.</span></span>  <span data-ttu-id="426fc-163">Generiert alle notwendigen Ereignisse mithilfe des Website Verweises auf eine <see cref="T:System.Speech.Synthesis.TtsEngine.ITtsEngineSite" /> Instanz.</span><span class="sxs-lookup"><span data-stu-id="426fc-163">Generates any necessary events using the site reference to a <see cref="T:System.Speech.Synthesis.TtsEngine.ITtsEngineSite" /> instance</span></span> 
<span data-ttu-id="426fc-164">3.</span><span class="sxs-lookup"><span data-stu-id="426fc-164">3.</span></span>  <span data-ttu-id="426fc-165">Generiert die tatsächliche Sprache mit synthetischer Sprache.</span><span class="sxs-lookup"><span data-stu-id="426fc-165">Generates the actual synthesized speech.</span></span>  
  
<span data-ttu-id="426fc-166">Die sprach Generierung erfolgt in der Regel durch den Aufruf von " <c>sprechen</c> " in einem der vom Betriebssystem bereitgestellten sprachrenderingengines.</span><span class="sxs-lookup"><span data-stu-id="426fc-166">Generation of speech is most typically done by calling <c>Speak</c> on one of the speech rendering engines provided by the operating system.</span></span>  
  
<span data-ttu-id="426fc-167">Wenn eines der verfügbaren sprachrenderingengines nicht verwendet wird, muss ein-Objekt, das von <see cref="T:System.Speech.Synthesis.TtsEngine.TtsEngineSsml" /> erbt, eine eigene sprachrenderingengine erstellen.</span><span class="sxs-lookup"><span data-stu-id="426fc-167">If one of the available speech rendering engines is not used, a object inheriting from <see cref="T:System.Speech.Synthesis.TtsEngine.TtsEngineSsml" /> must create its own speech rendering engine.</span></span>  
  
<span data-ttu-id="426fc-168">Zugriff auf die <c>Sprech</c> Methode auf, die mithilfe der Registrierung und Reflektion abgerufen wurde.</span><span class="sxs-lookup"><span data-stu-id="426fc-168">Access to the <c>Speak</c> method on obtained using the registry and reflection.</span></span> <span data-ttu-id="426fc-169">.</span><span class="sxs-lookup"><span data-stu-id="426fc-169">.</span></span>  
  
<span data-ttu-id="426fc-170">Wenn Sie von <see cref="T:System.Speech.Synthesis.TtsEngine.TtsEngineSsml" />erben, müssen Sie die folgenden Member überschreiben: <see cref="M:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.#ctor(System.String)" />, <see cref="M:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.AddLexicon(System.Uri,System.String,System.Speech.Synthesis.TtsEngine.ITtsEngineSite)" />, <see cref="M:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.RemoveLexicon(System.Uri,System.Speech.Synthesis.TtsEngine.ITtsEngineSite)" />, <see cref="M:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.GetOutputFormat(System.Speech.Synthesis.TtsEngine.SpeakOutputFormat,System.IntPtr)" />und <see cref="M:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.Speak(System.Speech.Synthesis.TtsEngine.TextFragment[],System.IntPtr,System.Speech.Synthesis.TtsEngine.ITtsEngineSite)" />.</span><span class="sxs-lookup"><span data-stu-id="426fc-170">When you inherit from <see cref="T:System.Speech.Synthesis.TtsEngine.TtsEngineSsml" />, you must override the following members: <see cref="M:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.#ctor(System.String)" />, <see cref="M:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.AddLexicon(System.Uri,System.String,System.Speech.Synthesis.TtsEngine.ITtsEngineSite)" />, <see cref="M:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.RemoveLexicon(System.Uri,System.Speech.Synthesis.TtsEngine.ITtsEngineSite)" />, <see cref="M:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.GetOutputFormat(System.Speech.Synthesis.TtsEngine.SpeakOutputFormat,System.IntPtr)" />, and <see cref="M:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.Speak(System.Speech.Synthesis.TtsEngine.TextFragment[],System.IntPtr,System.Speech.Synthesis.TtsEngine.ITtsEngineSite)" />.</span></span></para></block>
      </Docs>
    </Member>
  </Members>
</Type>
