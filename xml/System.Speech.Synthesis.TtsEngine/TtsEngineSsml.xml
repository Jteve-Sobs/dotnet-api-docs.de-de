<Type Name="TtsEngineSsml" FullName="System.Speech.Synthesis.TtsEngine.TtsEngineSsml">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="2dd79a74db6eb6211a32e44ea8b840a4f9b244fe" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39998192" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class TtsEngineSsml" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit TtsEngineSsml extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Speech.Synthesis.TtsEngine.TtsEngineSsml" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class TtsEngineSsml" />
  <TypeSignature Language="C++ CLI" Value="public ref class TtsEngineSsml abstract" />
  <TypeSignature Language="F#" Value="type TtsEngineSsml = class" />
  <AssemblyInfo>
    <AssemblyName>System.Speech</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="4019e-101">Abstrakte Basisklasse, die durch alle Text zu Sprachesynthese-Engines implementiert wird.</span>
      <span class="sxs-lookup">
        <span data-stu-id="4019e-101">Abstract base class to be implemented by all text to speech synthesis engines.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4019e-102">Um eine benutzerdefinierte Sprachsynthese-Engine zu erstellen, muss eine Anwendung immer eine von der abstrakten Klasse abgeleitete Klasse implementieren <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml>.</span><span class="sxs-lookup"><span data-stu-id="4019e-102">To construct a custom text to speech engine, an application must always implement a class derived from the abstract base class <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml>.</span></span>  
  
 <span data-ttu-id="4019e-103">Eine korrekt registrierte Implementierung <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml> kann dann verwendet werden, als eine Stimme Synthesizer von <xref:System.Speech.Synthesis> Namespace-basierte Anwendungen.</span><span class="sxs-lookup"><span data-stu-id="4019e-103">A properly registered implementation of <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml> can then be used as a synthesizer voice by <xref:System.Speech.Synthesis> name space based applications.</span></span>  
  
 <span data-ttu-id="4019e-104">Objekte, die Vererbung von <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml> müssen die folgenden Member überschreiben: <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.%23ctor%2A>, <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.AddLexicon%2A>, <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.RemoveLexicon%2A>, <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.GetOutputFormat%2A> und <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.Speak%2A>.</span><span class="sxs-lookup"><span data-stu-id="4019e-104">Objects inheriting from <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml> must override the following members: <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.%23ctor%2A>, <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.AddLexicon%2A>, <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.RemoveLexicon%2A>, <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.GetOutputFormat%2A> and <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.Speak%2A>.</span></span>  
  
 <span data-ttu-id="4019e-105">Das wichtigste Mitglied der <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml> -Klasse, die implementiert werden, ist die <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.Speak%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="4019e-105">The most important member of the <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml> class to be implemented is the <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.Speak%2A> method.</span></span>  
  
 <span data-ttu-id="4019e-106">Die <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.Speak%2A> Methode wird aufgerufen, mit dem Empfangen von Infrastrukturen-Text-Parser:</span><span class="sxs-lookup"><span data-stu-id="4019e-106">The <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.Speak%2A> method is called by the infrastructures text parser receiving:</span></span>  
  
1.  <span data-ttu-id="4019e-107">Ein Verweis auf die <xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite> Schnittstelle, die Zugriff auf die Systemdienste wie z. B. auch queuing und Schreiben von Audioausgabe bereitstellt.</span><span class="sxs-lookup"><span data-stu-id="4019e-107">A reference to the <xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite> interface, which provides access to system services such as even queuing and writing audio output.</span></span>  
  
2.  <span data-ttu-id="4019e-108">Ein Array von <xref:System.Speech.Synthesis.TtsEngine.TextFragment> Instanz, der aus der Speech Synthesis Markup Language (SSML) Eingabe erzeugt wurde.</span><span class="sxs-lookup"><span data-stu-id="4019e-108">An array of <xref:System.Speech.Synthesis.TtsEngine.TextFragment> instance produced from Speech Synthesis Markup Language (SSML) input.</span></span> <span data-ttu-id="4019e-109">Zusätzlich zu Text als Sprache gerendert werden, die Analyse von der SSML, speichert Informationen über die angeforderten Attribute von der Sprache in eine <xref:System.Speech.Synthesis.TtsEngine.FragmentState> -Instanz für jede eingehende <xref:System.Speech.Synthesis.TtsEngine.TextFragment> Objekt.</span><span class="sxs-lookup"><span data-stu-id="4019e-109">In addition to text to be rendered as speech, the parsing of the SSML stores information about the requested attributes of the speech in a <xref:System.Speech.Synthesis.TtsEngine.FragmentState> instance associated with each incoming <xref:System.Speech.Synthesis.TtsEngine.TextFragment> object.</span></span>  
  
 <span data-ttu-id="4019e-110">Anforderungen für einen angegebenen Ausgabeformat kann optional durch das Implementieren von eine Sprache Synthesizer-Anwendung machen <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.GetOutputFormat%2A> von der Plattform aufgerufen werden, wenn versucht wird, geben Sie den richtigen Audioausgabe.</span><span class="sxs-lookup"><span data-stu-id="4019e-110">A speech synthesizer application can optionally make requests for a specified output format by implementing <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.GetOutputFormat%2A> to be called by the platform when it tries to provide the correct audio output.</span></span>  
  
 <span data-ttu-id="4019e-111">Eine Implementierung bieten auch Unterstützung für die Verwaltung von externen Definitionen der Aussprache oder Lexika, durch die Implementierung von <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.AddLexicon%2A> und <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.RemoveLexicon%2A>.</span><span class="sxs-lookup"><span data-stu-id="4019e-111">An implementer can also provide support for managing external definitions of pronunciations, or lexicons, by their implementation of <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.AddLexicon%2A> and <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.RemoveLexicon%2A>.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected TtsEngineSsml (string registryKey);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(string registryKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (registryKey As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; TtsEngineSsml(System::String ^ registryKey);" />
      <MemberSignature Language="F#" Value="new System.Speech.Synthesis.TtsEngine.TtsEngineSsml : string -&gt; System.Speech.Synthesis.TtsEngine.TtsEngineSsml" Usage="new System.Speech.Synthesis.TtsEngine.TtsEngineSsml registryKey" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="registryKey" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="registryKey">
          <span data-ttu-id="4019e-112">Vollständiger Name des Registrierungsschlüssels für das Sprachen-Token, das mit der <see cref="T:System.Speech.Synthesis.TtsEngine.TtsEngineSsml" />-Implementierung zugeordnet wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4019e-112">Full name of the registry key for the Voice Token associated with the <see cref="T:System.Speech.Synthesis.TtsEngine.TtsEngineSsml" /> implementation.</span>
          </span>
          <span data-ttu-id="4019e-113">Engine.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4019e-113">engine.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4019e-114">Erstellt eine neue Instanz von <see cref="T:System.Speech.Synthesis.TtsEngine.TtsEngineSsml" /> auf Grundlage eines entsprechenden Stimmentokenregistrierungsschlüssels.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4019e-114">Constructs a new instance of <see cref="T:System.Speech.Synthesis.TtsEngine.TtsEngineSsml" /> based on an appropriate Voice Token registry key.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4019e-115">Aufrufe dieses Konstruktors werden in der Regel generiert, indem <xref:System.Speech.Synthesis> -basierte Anwendungen, die eine Stimme Synthesizer auswählen, die von einer Instanz von verwendet werden <xref:System.Speech.Synthesis.SpeechSynthesizer>.</span><span class="sxs-lookup"><span data-stu-id="4019e-115">Calls to this constructor are typically generated by <xref:System.Speech.Synthesis> based applications selecting a synthesizer voice to be used by an instance of <xref:System.Speech.Synthesis.SpeechSynthesizer>.</span></span>  
  
 <span data-ttu-id="4019e-116">Ein <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml> muss die Registrierung unter HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Speech\Voices\Tokens sein.</span><span class="sxs-lookup"><span data-stu-id="4019e-116">A <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml> must be register under HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Speech\Voices\Tokens.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddLexicon">
      <MemberSignature Language="C#" Value="public abstract void AddLexicon (Uri uri, string mediaType, System.Speech.Synthesis.TtsEngine.ITtsEngineSite site);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddLexicon(class System.Uri uri, string mediaType, class System.Speech.Synthesis.TtsEngine.ITtsEngineSite site) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.AddLexicon(System.Uri,System.String,System.Speech.Synthesis.TtsEngine.ITtsEngineSite)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void AddLexicon(Uri ^ uri, System::String ^ mediaType, System::Speech::Synthesis::TtsEngine::ITtsEngineSite ^ site);" />
      <MemberSignature Language="F#" Value="abstract member AddLexicon : Uri * string * System.Speech.Synthesis.TtsEngine.ITtsEngineSite -&gt; unit" Usage="ttsEngineSsml.AddLexicon (uri, mediaType, site)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="System.Uri" />
        <Parameter Name="mediaType" Type="System.String" />
        <Parameter Name="site" Type="System.Speech.Synthesis.TtsEngine.ITtsEngineSite" />
      </Parameters>
      <Docs>
        <param name="uri">
          <span data-ttu-id="4019e-117">Eine gültige Instanz von <see langword="System.Uri" />, die den Speicherort der Lexikoninformationen angibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4019e-117">A valid instance of <see langword="System.Uri" /> indicating the location of the lexicon information.</span>
          </span>
        </param>
        <param name="mediaType">
          <span data-ttu-id="4019e-118">Eine Zeichenfolge mit dem Medientyp des Lexikons.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4019e-118">A string containing the media type of the lexicon.</span>
          </span>
          <span data-ttu-id="4019e-119">Bei Medientypen wird die Groß-/Kleinschreibung nicht beachtet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4019e-119">Media types are case insensitive.</span>
          </span>
        </param>
        <param name="site">
          <span data-ttu-id="4019e-120">Ein Verweis auf eine <see cref="T:System.Speech.Synthesis.TtsEngine.ITtsEngineSite" />-Schnittstelle, die verwendet wird, um mit der Plattforminfrastruktur zu interagieren.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4019e-120">A reference to an <see cref="T:System.Speech.Synthesis.TtsEngine.ITtsEngineSite" /> interface used to interact with the platform infrastructure.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4019e-121">Fügt der <see langword="Synthesizer" /><see langword="Voice" /> ein Lexikon hinzu, das von der aktuellen <see cref="T:System.Speech.Synthesis.TtsEngine.TtsEngineSsml" /> Instanz implementiert wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4019e-121">Adds a lexicon to the <see langword="Synthesizer" /><see langword="Voice" /> implemented by the current <see cref="T:System.Speech.Synthesis.TtsEngine.TtsEngineSsml" /> instance.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4019e-122">Ein Lexikon Aussprache ist eine Auflistung von Wörtern oder Ausdrücken sowie deren Aussprache mithilfe eines entsprechenden Aussprache Alphabets angegeben.</span><span class="sxs-lookup"><span data-stu-id="4019e-122">A pronunciation lexicon is a collection of words or phrases together with their pronunciations specified using an appropriate pronunciation alphabet.</span></span>  
  
 <span data-ttu-id="4019e-123">Diese Methode wird in der Regel aufgerufen, durch die Plattforminfrastruktur als Reaktion auf eine <xref:System.Speech.Synthesis> -basierte Anwendungen Aufrufen <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.AddLexicon%2A> und Verwenden von Stimme Synthesizer implementiert, die von der aktuellen <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml> Instanz.</span><span class="sxs-lookup"><span data-stu-id="4019e-123">This method is typically called by the platform infrastructure in response to a <xref:System.Speech.Synthesis> based applications calling <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.AddLexicon%2A> and using the synthesizer voice implemented by the current <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml> instance.</span></span>  
  
 <span data-ttu-id="4019e-124">Der Wert des `mediaType` ist in der Regel eine MIME-Spezifikation, wie die SSML-Spezifikation MIME für Medienspezifikationen verwendet.</span><span class="sxs-lookup"><span data-stu-id="4019e-124">The value of `mediaType` is typically a MIME specification, as the SSML specification uses MIME for media specifications.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4019e-125">Die Implementierung der <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.AddLexicon%2A> verwendet die <xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite> Schnittstelle übergeben ein Lexikon aus einer Ressource zu laden.</span><span class="sxs-lookup"><span data-stu-id="4019e-125">The implementation of <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.AddLexicon%2A> uses the <xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite> interface passed in to load a lexicon from a resource.</span></span> <span data-ttu-id="4019e-126">Es speichert ein `System.IO.Stream` auf das Lexikon in eine `System.Collections.Generic.Dictionary` ab, das durch das Lexikon URI-Instanz.</span><span class="sxs-lookup"><span data-stu-id="4019e-126">It then stores a `System.IO.Stream` to the lexicon in a `System.Collections.Generic.Dictionary` instance, indexed by the lexicon URI.</span></span>  
  
```  
public static Dictionary<Uri, Stream> _aLexicons = new Dictionary<Uri, Stream>();  
  
 public void AddLexicon(Uri uri, string mediaType, ITtsEngineSite site) {  
    Stream stream = site.LoadResource(uri, mediaType);  
    _aLexicons.Add(uri, stream);  
}  
  
 public void RemoveLexicon(Uri uri, ITtsEngineSite site) {  
     Stream stream;  
     if (_aLexicons.TryGetValue(uri, out stream)) {  
         stream.Close();  
         _aLexicons.Remove(uri);  
     }  
}  
  
```  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="4019e-127">
            <para>Es ist die Verantwortung für die Implementierung, die mit vollständig vertraut sein, und das Lexikon gespeichert verarbeiten können <paramref name="uri" />. Die Implementierung muss auch nachverfolgen und verwalten die Lebensdauer der alle Lexika, die hinzugefügt werden.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="4019e-127">
              <para>It is the responsibility of the implementation to be fully familiar with and be able to process the lexicon stored at <paramref name="uri" />. The implementation must also keep track and manage the lifetimes of all lexicons it adds.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="GetOutputFormat">
      <MemberSignature Language="C#" Value="public abstract IntPtr GetOutputFormat (System.Speech.Synthesis.TtsEngine.SpeakOutputFormat speakOutputFormat, IntPtr targetWaveFormat);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance native int GetOutputFormat(valuetype System.Speech.Synthesis.TtsEngine.SpeakOutputFormat speakOutputFormat, native int targetWaveFormat) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.GetOutputFormat(System.Speech.Synthesis.TtsEngine.SpeakOutputFormat,System.IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract IntPtr GetOutputFormat(System::Speech::Synthesis::TtsEngine::SpeakOutputFormat speakOutputFormat, IntPtr targetWaveFormat);" />
      <MemberSignature Language="F#" Value="abstract member GetOutputFormat : System.Speech.Synthesis.TtsEngine.SpeakOutputFormat * nativeint -&gt; nativeint" Usage="ttsEngineSsml.GetOutputFormat (speakOutputFormat, targetWaveFormat)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="speakOutputFormat" Type="System.Speech.Synthesis.TtsEngine.SpeakOutputFormat" />
        <Parameter Name="targetWaveFormat" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="speakOutputFormat">
          <span data-ttu-id="4019e-128">Gültiger Member der <see cref="T:System.Speech.Synthesis.TtsEngine.SpeakOutputFormat" />-Enumeration, der den Typ des angeforderten Audioausgabeformats angibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4019e-128">Valid member of the <see cref="T:System.Speech.Synthesis.TtsEngine.SpeakOutputFormat" /> enumeration indicating the type of requested audio output format.</span>
          </span>
        </param>
        <param name="targetWaveFormat">
          <span data-ttu-id="4019e-129">Ein Zeiger auf <see langword="struct" />, das Detaileinstellung für den Audioformattyp enthält, der vom <c>speakOutputFormat</c>-Argument angefordert wurde.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4019e-129">A pointer to a <see langword="struct" /> containing detail setting for the audio format type requested by the <c>speakOutputFormat</c> argument.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4019e-130">Gibt die am besten passende Audioausgabe zurück, die von einer Antwort die angegebene Synthetisier-Engine auf eine Anforderung an die Synthetisier-Engine für die Unterstützung eines bestimmten Ausgabeformats unterstützt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4019e-130">Returns the best matching audio output supported by a given synthesize engine response to a request to the synthesizer engine for the support of a particular output format.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4019e-131">Gibt eine gültige <see langword="IntPtr" />-Instanz zurück, die auf ein <see langword="struct" /> verweist, das ausführliche Informationen über das Ausgabeformat enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4019e-131">Returns a valid <see langword="IntPtr" /> instance referring to a <see langword="struct" /> containing detailed information about the output format.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4019e-132">Die Struktur als `targetWaveFormat` und zurückgegeben, indem die Methode sollte kompatibel mit der `WAVEFORMATEX` unter SAPI, und der zurückgegebene Wert mit zugewiesen werden soll `CoTaskMemAlloc`.</span><span class="sxs-lookup"><span data-stu-id="4019e-132">The structure used as `targetWaveFormat` and returned by the method should compatible with the `WAVEFORMATEX` available under SAPI, and the returned value should be allocated using `CoTaskMemAlloc`.</span></span>  
  
 <span data-ttu-id="4019e-133">Die `struct` muss gleich Funktionen enthalten:</span><span class="sxs-lookup"><span data-stu-id="4019e-133">The `struct` must provide functionality equivalent to:</span></span>  
  
```  
internal struct WaveFormat  
{  
    public Int16 FormatTag;  
    public Int16 Channels;  
    public int SamplesPerSec;  
    public int AvgBytesPerSec;  
    public Int16 BlockAlign;  
    public Int16 BitsPerSample;  
    public Int16 Size;  
}  
```  
  
   
  
## Examples  
 <span data-ttu-id="4019e-134">Die folgenden beispielimplementierung überprüft ausgewählte Eingaben verwenden, deren Verwendung, wenn sie innerhalb der Toleranz sind, andernfalls unter Verwendung von Standardwerten.</span><span class="sxs-lookup"><span data-stu-id="4019e-134">The sample implementation below validates selected inputs, using them if they are within tolerances, otherwise using default values.</span></span>  
  
```  
public IntPtr GetOutputFormat(SpeakOutputFormat format, IntPtr targetWaveFormat) {  
    WaveFormat waveFormat = new WaveFormat();  
    WaveFormat rq=new WaveFormat();  
    Marshal.PtrToStructure(targetWaveFormat,rq);  
  
    waveFormat.AvgBytesPerSec = AvgBytesPerSec Min < rq.AvgBytesPerSec && rq.AvgBytesPerSec < AvgBytesPerSecMax? rq.AvgBytesPerSec : 3200;  
    waveFormat.BitsPerSample = BitsPerSampleMin < rq.AvgBytesPerSec && rq.BitsPerSample < BitsPerSampleMax ? rq.AvgBytesPerSec : 3200; 16;  
    waveFormat.BlockAlign = 2;  
    waveFormat.Channels = 1;  
    waveFormat.FormatTag = 1;  
    waveFormat.SamplesPerSec = 16000;  
    waveFormat.Size = 0;  
  
    IntPtr wfx = Marshal.AllocCoTaskMem(Marshal.SizeOf(waveFormat));  
    Marshal.StructureToPtr(waveFormat, wfx, false);  
  
    //Console.WriteLine ("GetOutputFormat called");  
    return wfx;  
}  
internal struct WaveFormat {  
    public Int16 FormatTag;  
    public Int16 Channels;  
    public int SamplesPerSec;  
    public int AvgBytesPerSec;  
    public Int16 BlockAlign;  
    public Int16 BitsPerSample;  
    public Int16 Size;  
}  
```  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="4019e-135">
            <para>-Objekt erben von <see cref="T:System.Speech.Synthesis.TtsEngine.TtsEngineSsml" /> sollte überprüfen, gemäß der angegebenen Ausgabeformat <paramref name="targetWaveFormat" /> und Zurückgeben der nächsten Format, das es unterstützt.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="4019e-135">
              <para>Object inheriting from <see cref="T:System.Speech.Synthesis.TtsEngine.TtsEngineSsml" /> should examine the requested output format as specified by <paramref name="targetWaveFormat" /> and return the closest format that it supports.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="RemoveLexicon">
      <MemberSignature Language="C#" Value="public abstract void RemoveLexicon (Uri uri, System.Speech.Synthesis.TtsEngine.ITtsEngineSite site);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveLexicon(class System.Uri uri, class System.Speech.Synthesis.TtsEngine.ITtsEngineSite site) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.RemoveLexicon(System.Uri,System.Speech.Synthesis.TtsEngine.ITtsEngineSite)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void RemoveLexicon(Uri ^ uri, System::Speech::Synthesis::TtsEngine::ITtsEngineSite ^ site);" />
      <MemberSignature Language="F#" Value="abstract member RemoveLexicon : Uri * System.Speech.Synthesis.TtsEngine.ITtsEngineSite -&gt; unit" Usage="ttsEngineSsml.RemoveLexicon (uri, site)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="System.Uri" />
        <Parameter Name="site" Type="System.Speech.Synthesis.TtsEngine.ITtsEngineSite" />
      </Parameters>
      <Docs>
        <param name="uri">
          <span data-ttu-id="4019e-136">Eine gültige Instanz von <see langword="System.Uri" />, die den Speicherort der Lexikoninformationen angibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4019e-136">A valid instance of <see langword="System.Uri" /> indicating the location of the lexicon information.</span>
          </span>
        </param>
        <param name="site">
          <span data-ttu-id="4019e-137">Ein Verweis auf eine <see cref="T:System.Speech.Synthesis.TtsEngine.ITtsEngineSite" />-Schnittstelle, die durch die Plattforminfrastruktur übergeben wird, um Zugriff auf Infrastrukturressourcenn zu ermöglichen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4019e-137">A reference to an <see cref="T:System.Speech.Synthesis.TtsEngine.ITtsEngineSite" /> interface passed in by the platform infrastructure to allow access to the infrastructure resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4019e-138">Entfernt ein Lexikon, das gerade durch <see langword="Synthesizer" /><see langword="Voice" /> geladen wird, das von der aktuellen <see cref="T:System.Speech.Synthesis.TtsEngine.TtsEngineSsml" />-Instanz implementiert wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4019e-138">Removes a lexicon currently loaded by the <see langword="Synthesizer" /><see langword="Voice" /> implemented by the current <see cref="T:System.Speech.Synthesis.TtsEngine.TtsEngineSsml" /> instance.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4019e-139">Ein Lexikon Aussprache ist eine Auflistung von Wörtern oder Ausdrücken sowie deren Aussprache mithilfe eines entsprechenden Aussprache Alphabets angegeben.</span><span class="sxs-lookup"><span data-stu-id="4019e-139">A pronunciation lexicon is a collection of words or phrases together with their pronunciations specified using an appropriate pronunciation alphabet.</span></span>  
  
 <span data-ttu-id="4019e-140">Diese Methode wird in der Regel aufgerufen, als Reaktion auf eine <xref:System.Speech.Synthesis> -basierte Anwendungen Aufrufen <xref:System.Speech.Synthesis.SpeechSynthesizer.RemoveLexicon%2A> und Verwenden von Stimme Synthesizer implementiert, die von der aktuellen <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml> Instanz.</span><span class="sxs-lookup"><span data-stu-id="4019e-140">This method is typically called in response to a <xref:System.Speech.Synthesis> based applications calling <xref:System.Speech.Synthesis.SpeechSynthesizer.RemoveLexicon%2A> and using the synthesizer voice implemented by the current <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml> instance.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4019e-141">Die Implementierung der <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.RemoveLexicon%2A> Lexikons URI verwendet, um eine Instanz abzufragen `System.Collections.Generic.Dictionary` für die `System.IO.Stream`, schließt den Stream und den Uri, der auf das Lexikon entfernt.</span><span class="sxs-lookup"><span data-stu-id="4019e-141">The implementation of <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.RemoveLexicon%2A> uses the lexicon URI to query an instance `System.Collections.Generic.Dictionary` for the `System.IO.Stream`, closes the stream and removes the uri referring to the lexicon.</span></span>  
  
```  
public static Dictionary<Uri, Stream> _aLexicons = new Dictionary<Uri, Stream>();  
  
 public void AddLexicon(Uri uri, string mediaType, ITtsEngineSite site) {  
    Stream stream = site.LoadResource(uri, mediaType);  
    _aLexicons.Add(uri, stream);  
}  
  
 public void RemoveLexicon(Uri uri, ITtsEngineSite site) {  
     Stream stream;  
     if (_aLexicons.TryGetValue(uri, out stream)) {  
         stream.Close();  
         _aLexicons.Remove(uri);  
     }  
}  
```  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="4019e-142">
            <para>Es ist die Verantwortung für die Implementierung, die mit vollständig vertraut sein, und das Lexikon gespeichert verarbeiten können <paramref name="uri" />. Die Implementierung muss auch nachverfolgen und verwalten die Lebensdauer der alle Lexika, die sie entfernt.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="4019e-142">
              <para>It is the responsibility of the implementation to be fully familiar with and be able to process the lexicon stored at <paramref name="uri" />. The implementation must also keep track and manage the lifetimes of all lexicons it removes.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Speak">
      <MemberSignature Language="C#" Value="public abstract void Speak (System.Speech.Synthesis.TtsEngine.TextFragment[] fragment, IntPtr waveHeader, System.Speech.Synthesis.TtsEngine.ITtsEngineSite site);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Speak(class System.Speech.Synthesis.TtsEngine.TextFragment[] fragment, native int waveHeader, class System.Speech.Synthesis.TtsEngine.ITtsEngineSite site) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.Speak(System.Speech.Synthesis.TtsEngine.TextFragment[],System.IntPtr,System.Speech.Synthesis.TtsEngine.ITtsEngineSite)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Speak (fragment As TextFragment(), waveHeader As IntPtr, site As ITtsEngineSite)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Speak(cli::array &lt;System::Speech::Synthesis::TtsEngine::TextFragment ^&gt; ^ fragment, IntPtr waveHeader, System::Speech::Synthesis::TtsEngine::ITtsEngineSite ^ site);" />
      <MemberSignature Language="F#" Value="abstract member Speak : System.Speech.Synthesis.TtsEngine.TextFragment[] * nativeint * System.Speech.Synthesis.TtsEngine.ITtsEngineSite -&gt; unit" Usage="ttsEngineSsml.Speak (fragment, waveHeader, site)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fragment" Type="System.Speech.Synthesis.TtsEngine.TextFragment[]" />
        <Parameter Name="waveHeader" Type="System.IntPtr" />
        <Parameter Name="site" Type="System.Speech.Synthesis.TtsEngine.ITtsEngineSite" />
      </Parameters>
      <Docs>
        <param name="fragment">
          <span data-ttu-id="4019e-143">Ein Array von <see cref="T:System.Speech.Synthesis.TtsEngine.TextFragment" /> Instanzen, die den in Sprache umzuwandelnden Text enthalten.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4019e-143">An array of <see cref="T:System.Speech.Synthesis.TtsEngine.TextFragment" /> instances containing the text to be rendered into speech.</span>
          </span>
        </param>
        <param name="waveHeader">
          <span data-ttu-id="4019e-144">Ein <see langword="IntPtr" />, das auf eine Struktur zeigt, die Audioausgabeformat enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4019e-144">An <see langword="IntPtr" /> pointing to a structure containing audio output format.</span>
          </span>
        </param>
        <param name="site">
          <span data-ttu-id="4019e-145">Ein Verweis auf eine <see cref="T:System.Speech.Synthesis.TtsEngine.ITtsEngineSite" />-Schnittstelle, die durch die Plattforminfrastruktur übergeben wird, um Zugriff auf Infrastrukturressourcenn zu ermöglichen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4019e-145">A reference to an <see cref="T:System.Speech.Synthesis.TtsEngine.ITtsEngineSite" /> interface passed in by the platform infrastructure to allow access to the infrastructure resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4019e-146">Rendert angegebenes <see cref="T:System.Speech.Synthesis.TtsEngine.TextFragment" />-Array im angegebenen Ausgabeformat.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4019e-146">Renders specified <see cref="T:System.Speech.Synthesis.TtsEngine.TextFragment" /> array in the specified output format.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4019e-147">Die Struktur als `waveHeader` und zurückgegeben, indem die Methode sollte kompatibel mit der `WAVEFORMATEX` unter SAPI verfügbar sind.</span><span class="sxs-lookup"><span data-stu-id="4019e-147">The structure used as `waveHeader` and returned by the method should compatible with the `WAVEFORMATEX` available under SAPI.</span></span>  
  
 <span data-ttu-id="4019e-148">Die `struct` muss gleich Funktionen enthalten:</span><span class="sxs-lookup"><span data-stu-id="4019e-148">The `struct` must provide functionality equivalent to:</span></span>  
  
```  
internal struct WaveFormat  
{  
    public Int16 FormatTag;  
    public Int16 Channels;  
    public int SamplesPerSec;  
    public int AvgBytesPerSec;  
    public Int16 BlockAlign;  
    public Int16 BitsPerSample;  
    public Int16 Size;  
}  
```  
  
   
  
## Examples  
 <span data-ttu-id="4019e-149">Im folgenden Beispiel ist Teil der eine benutzerdefinierte Spracherkennung Sprachsynthese-Implementierung, die Vererbung von <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml>, und verwenden die Verwendung von <xref:System.Speech.Synthesis.TtsEngine.TextFragment>, <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo>, <xref:System.Speech.Synthesis.TtsEngine.FragmentState>, und <xref:System.Speech.Synthesis.TtsEngine.TtsEventId></span><span class="sxs-lookup"><span data-stu-id="4019e-149">The example below is part of a custom speech synthesis implementation inheriting from <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml>, and using the use of <xref:System.Speech.Synthesis.TtsEngine.TextFragment>, <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo>, <xref:System.Speech.Synthesis.TtsEngine.FragmentState>, and <xref:System.Speech.Synthesis.TtsEngine.TtsEventId></span></span>  
  
 <span data-ttu-id="4019e-150">Die Implementierung von <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.Speak%2A></span><span class="sxs-lookup"><span data-stu-id="4019e-150">The implementation of <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.Speak%2A></span></span>  
  
1.  <span data-ttu-id="4019e-151">Empfängt ein Array von <xref:System.Speech.Synthesis.TtsEngine.TextFragment> Instanzen und erstellt ein neues Array von <xref:System.Speech.Synthesis.TtsEngine.TextFragment> Instanzen übergeben werden soll die `Speak` Methode für eine zugrunde liegende Sprachsynthese-Engine.</span><span class="sxs-lookup"><span data-stu-id="4019e-151">Receives an array of <xref:System.Speech.Synthesis.TtsEngine.TextFragment> instances and creates a new array of <xref:System.Speech.Synthesis.TtsEngine.TextFragment> instances to be passed to the `Speak` method on an underlying synthesis engine.</span></span>  
  
2.  <span data-ttu-id="4019e-152">Wenn die <xref:System.Speech.Synthesis.TtsEngine.TtsEngineAction> Enumerationswert von gefunden wird, aus der <xref:System.Speech.Synthesis.TtsEngine.FragmentState.Action%2A> Eigenschaft für die <xref:System.Speech.Synthesis.TtsEngine.FragmentState> zurückgegebenes der <xref:System.Speech.Synthesis.TtsEngine.TextFragment.State%2A> Eigenschaft der einzelnen <xref:System.Speech.Synthesis.TtsEngine.TextFragment> Instanz ist <xref:System.Speech.Synthesis.TtsEngine.TtsEngineAction.Speak>, die Implementierung</span><span class="sxs-lookup"><span data-stu-id="4019e-152">If the <xref:System.Speech.Synthesis.TtsEngine.TtsEngineAction> enumeration value by found from the <xref:System.Speech.Synthesis.TtsEngine.FragmentState.Action%2A> property on the <xref:System.Speech.Synthesis.TtsEngine.FragmentState> returned by the <xref:System.Speech.Synthesis.TtsEngine.TextFragment.State%2A> property of each <xref:System.Speech.Synthesis.TtsEngine.TextFragment> instance is <xref:System.Speech.Synthesis.TtsEngine.TtsEngineAction.Speak>, the implementation</span></span>  
  
    -   <span data-ttu-id="4019e-153">Übersetzt Americanism zu Britishisms in der zu sprechende Text.</span><span class="sxs-lookup"><span data-stu-id="4019e-153">Translates Americanism to Britishisms in the text to be spoken.</span></span>  
  
    -   <span data-ttu-id="4019e-154">Wenn die <xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite.EventInterest%2A> Eigenschaft für die <xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite> Schnittstellen bereitgestellt, um die implementierungsunterstützung der <xref:System.Speech.Synthesis.TtsEngine.TtsEventId.WordBoundary> Ereignistyp, eine <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo> Instanz wird verwendet, um ein Ereignis, das Laufwerk zu erstellen, wird eine Statusanzeige Synthesizer erstellt.</span><span class="sxs-lookup"><span data-stu-id="4019e-154">If the <xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite.EventInterest%2A> property on the <xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite> interfaces provided to the implementation support the <xref:System.Speech.Synthesis.TtsEngine.TtsEventId.WordBoundary> event type, a <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo> instance is used to create an event to drive a synthesizer progress meter is created.</span></span>  
  
3.  <span data-ttu-id="4019e-155">Eine Rendering-Engine von Speech wird dann aufgerufen, mit dem geänderten <xref:System.Speech.Synthesis.TtsEngine.TextFragment> Array.</span><span class="sxs-lookup"><span data-stu-id="4019e-155">A speech rendering engine is then called with the modified <xref:System.Speech.Synthesis.TtsEngine.TextFragment> array.</span></span>  
  
```  
private const int WordBoundaryFlag = 1 << (int)TtsEventId.WordBoundary;  
private readonly char[] spaces = new char[] { ' ', '\t', '\r', '\n' };  
internal struct UsVsUk  
{  
  internal string UK;  
  internal string US;  
}  
  
override public void Speak (TextFragment [] frags, IntPtr wfx, ITtsEngineSite site)  
{  
  TextFragment [] newFrags=new TextFragment[frags.Length];  
  
  for (int i=0;i<frags.Length;i++){  
    newFrags[i].State=frags[i].State;  
    //truncate  
    newFrags[i].TextToSpeak = frags[i].TextToSpeak.Substring(frags[i].TextOffset,  
                               frags[i].TextLength);  
    newFrags[i].TextLength = newFrags[i].TextToSpeak.Length;  
    newFrags[i].TextOffset = 0;  
    if (newFrags[i].State.Action == TtsEngineAction.Speak) {  
      //Us to UK conversion  
      foreach (UsVsUk term in TransList) {  
      newFrags[i].TextToSpeak.Replace(term.US, term.UK);  
      }  
      //Generate progress meter events if supported  
      if ((site.EventInterest & WordBoundaryFlag) != 0) {  
      string[] subs = newFrags[i].TextToSpeak.Split(spaces);  
  
      foreach (string s in subs) {  
        int offset = newFrags[i].TextOffset;  
        SpeechEventInfo spEvent = new SpeechEventInfo((Int16)TtsEventId.WordBoundary,   
                (Int16)EventParameterType.Undefined,   
                 s.Length, new IntPtr(offset));  
        offset += s.Length;  
        if (s.Trim().Length > 0) {  
          SpeechEventInfo[] events = new SpeechEventInfo[1];  
          events[0] = spEvent;  
          site.AddEvents(events, 1);  
        }  
      }  
      }  
    }  
  }  
    _baseSynthesize.Speak(newFrags, wfx, site);  
  
}  
```  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="4019e-156">
            <para>Benutzerdefinierte Spracherkennung Synthesizer implementiert mit <see cref="T:System.Speech.Synthesis.TtsEngine.TtsEngineSsml" /> und <see cref="M:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.Speak(System.Speech.Synthesis.TtsEngine.TextFragment[],System.IntPtr,System.Speech.Synthesis.TtsEngine.ITtsEngineSite)" /> als Filter oder Vermittler zwischen Synthesizer-Anwendungen erstellt, mit der Plattforminfrastruktur, durch die Mitglieder der <see cref="N:System.Speech.Synthesis" /> Namespace und der zugrunde liegende System sprachesynthese-Engines.  Ein <see cref="M:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.Speak(System.Speech.Synthesis.TtsEngine.TextFragment[],System.IntPtr,System.Speech.Synthesis.TtsEngine.ITtsEngineSite)" /> Implementierung: 1.  Fängt, oder ändern Sie die Aspekte der eingehenden <see cref="T:System.Speech.Synthesis.TtsEngine.TextFragment" /> Objekte 2.  Generiert alle erforderlichen Ereignisse, die mit der Website-Verweis auf eine <see cref="T:System.Speech.Synthesis.TtsEngine.ITtsEngineSite" /> 3-Instanz.  Wird der tatsächliche gebildeter Sprache generiert.  Generation der Sprache erfolgt i. d. r. durch Aufrufen von <c>Speak</c> auf einem der die Sprache, der rendering-Engines, die vom Betriebssystem bereitgestellt.  Wenn eine zur Verfügung-spracherkennungs-Rendering-Engine kein Objekt, das erben von verwendet wird, <see cref="T:System.Speech.Synthesis.TtsEngine.TtsEngineSsml" /> müssen eine eigene Rendering-Engine von Speech erstellen.  Der Zugriff auf die <c>Speak</c> Methode zur Verwendung von der Registrierung und Reflektion abgerufen.  Beim Erben von <see cref="T:System.Speech.Synthesis.TtsEngine.TtsEngineSsml" />, müssen Sie die folgenden Member überschreiben: <see cref="M:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.#ctor(System.String)" />, <see cref="M:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.AddLexicon(System.Uri,System.String,System.Speech.Synthesis.TtsEngine.ITtsEngineSite)" />, <see cref="M:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.RemoveLexicon(System.Uri,System.Speech.Synthesis.TtsEngine.ITtsEngineSite)" />, <see cref="M:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.GetOutputFormat(System.Speech.Synthesis.TtsEngine.SpeakOutputFormat,System.IntPtr)" />, und <see cref="M:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.Speak(System.Speech.Synthesis.TtsEngine.TextFragment[],System.IntPtr,System.Speech.Synthesis.TtsEngine.ITtsEngineSite)" />.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="4019e-156">
              <para>Custom speech synthesizer implements using <see cref="T:System.Speech.Synthesis.TtsEngine.TtsEngineSsml" /> and <see cref="M:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.Speak(System.Speech.Synthesis.TtsEngine.TextFragment[],System.IntPtr,System.Speech.Synthesis.TtsEngine.ITtsEngineSite)" /> work as filters or intermediaries between synthesizer applications constructed using the platform infrastructure through the members of the <see cref="N:System.Speech.Synthesis" /> namespace and underlying system speech synthesis engines.  A <see cref="M:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.Speak(System.Speech.Synthesis.TtsEngine.TextFragment[],System.IntPtr,System.Speech.Synthesis.TtsEngine.ITtsEngineSite)" /> implementation:  1.  Traps or modify aspects of the incoming <see cref="T:System.Speech.Synthesis.TtsEngine.TextFragment" /> objects  2.  Generates any necessary events using the site reference to a <see cref="T:System.Speech.Synthesis.TtsEngine.ITtsEngineSite" /> instance  3.  Generates the actual synthesized speech.  Generation of speech is most typically done by calling <c>Speak</c> on one of the speech rendering engines provided by the operating system.  If one of the available speech rendering engines is not used, a object inheriting from <see cref="T:System.Speech.Synthesis.TtsEngine.TtsEngineSsml" /> must create its own speech rendering engine.  Access to the <c>Speak</c> method on obtained using the registry and reflection. .  When you inherit from <see cref="T:System.Speech.Synthesis.TtsEngine.TtsEngineSsml" />, you must override the following members: <see cref="M:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.#ctor(System.String)" />, <see cref="M:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.AddLexicon(System.Uri,System.String,System.Speech.Synthesis.TtsEngine.ITtsEngineSite)" />, <see cref="M:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.RemoveLexicon(System.Uri,System.Speech.Synthesis.TtsEngine.ITtsEngineSite)" />, <see cref="M:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.GetOutputFormat(System.Speech.Synthesis.TtsEngine.SpeakOutputFormat,System.IntPtr)" />, and <see cref="M:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.Speak(System.Speech.Synthesis.TtsEngine.TextFragment[],System.IntPtr,System.Speech.Synthesis.TtsEngine.ITtsEngineSite)" />.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
  </Members>
</Type>