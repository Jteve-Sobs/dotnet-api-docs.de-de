<Type Name="FragmentState" FullName="System.Speech.Synthesis.TtsEngine.FragmentState">
  <Metadata><Meta Name="ms.openlocfilehash" Value="30bfbabbc4eaec2896d3a32c4ac0548f699e8c03" /><Meta Name="ms.sourcegitcommit" Value="756d085f27705e86604f1bba5f2086ee23761acf" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="01/30/2019" /><Meta Name="ms.locfileid" Value="55395976" /></Metadata><TypeSignature Language="C#" Value="public struct FragmentState : IEquatable&lt;System.Speech.Synthesis.TtsEngine.FragmentState&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit FragmentState extends System.ValueType implements class System.IEquatable`1&lt;valuetype System.Speech.Synthesis.TtsEngine.FragmentState&gt;" />
  <TypeSignature Language="DocId" Value="T:System.Speech.Synthesis.TtsEngine.FragmentState" />
  <TypeSignature Language="VB.NET" Value="Public Structure FragmentState&#xA;Implements IEquatable(Of FragmentState)" />
  <TypeSignature Language="C++ CLI" Value="public value class FragmentState : IEquatable&lt;System::Speech::Synthesis::TtsEngine::FragmentState&gt;" />
  <TypeSignature Language="F#" Value="type FragmentState = struct" />
  <AssemblyInfo>
    <AssemblyName>System.Speech</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IEquatable&lt;System.Speech.Synthesis.TtsEngine.FragmentState&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.ImmutableObject(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Stellt detaillierte Informationen zu einem <see langword="TextFragment" /> bereit.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Speech.Synthesis.TtsEngine.FragmentState> -Instanzen werden abgerufen, von der <xref:System.Speech.Synthesis.TtsEngine.TextFragment.State%2A> auf <xref:System.Speech.Synthesis.TtsEngine.TextFragment> Objekte.  
  
 Die Informationen in <xref:System.Speech.Synthesis.TtsEngine.FragmentState> erhalten Sie durch die Analyse von der Attributen versehen von Sprache-Text in die synthetisieren Spracherkennung Markup Language (SSML) als Eingabe zu einer sprachesynthese-Engine verwendet.  
  
 Ein <xref:System.Speech.Synthesis.TtsEngine.FragmentState> -Objekt kann vorhanden sein, für jede Anforderung des Synthesizers-Aktion gemäß seiner <xref:System.Speech.Synthesis.TtsEngine.FragmentState.Action%2A> Eigenschaft. Allerdings kann die Bedeutung von Membern für verschiedene Aktionen ändern. Weitere Informationen zu Aktionen zu synthetisieren, finden Sie unter <xref:System.Speech.Synthesis.TtsEngine.TtsEngineAction> für Weitere Informationen zum Angeben von Synthesizer-Aktionen.  
  
-   Spezifikation und die Kontrolle über die Qualität der gesprochenen Ausgabe erfolgt größtenteils über den <xref:System.Speech.Synthesis.TtsEngine.FragmentState.Prosody%2A>, <xref:System.Speech.Synthesis.TtsEngine.FragmentState.Emphasis%2A>, und <xref:System.Speech.Synthesis.TtsEngine.FragmentState.Duration%2A>  
  
-   Phonetische, Sprache und Sprachwissenschaftler Strukturinformationen steht über <xref:System.Speech.Synthesis.TtsEngine.FragmentState.LangId%2A>, <xref:System.Speech.Synthesis.TtsEngine.FragmentState.Phoneme%2A>, und <xref:System.Speech.Synthesis.TtsEngine.FragmentState.SayAs%2A>.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FragmentState (System.Speech.Synthesis.TtsEngine.TtsEngineAction action, int langId, int emphasis, int duration, System.Speech.Synthesis.TtsEngine.SayAs sayAs, System.Speech.Synthesis.TtsEngine.Prosody prosody, char[] phonemes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Speech.Synthesis.TtsEngine.TtsEngineAction action, int32 langId, int32 emphasis, int32 duration, class System.Speech.Synthesis.TtsEngine.SayAs sayAs, class System.Speech.Synthesis.TtsEngine.Prosody prosody, char[] phonemes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.TtsEngine.FragmentState.#ctor(System.Speech.Synthesis.TtsEngine.TtsEngineAction,System.Int32,System.Int32,System.Int32,System.Speech.Synthesis.TtsEngine.SayAs,System.Speech.Synthesis.TtsEngine.Prosody,System.Char[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FragmentState(System::Speech::Synthesis::TtsEngine::TtsEngineAction action, int langId, int emphasis, int duration, System::Speech::Synthesis::TtsEngine::SayAs ^ sayAs, System::Speech::Synthesis::TtsEngine::Prosody ^ prosody, cli::array &lt;char&gt; ^ phonemes);" />
      <MemberSignature Language="F#" Value="new System.Speech.Synthesis.TtsEngine.FragmentState : System.Speech.Synthesis.TtsEngine.TtsEngineAction * int * int * int * System.Speech.Synthesis.TtsEngine.SayAs * System.Speech.Synthesis.TtsEngine.Prosody * char[] -&gt; System.Speech.Synthesis.TtsEngine.FragmentState" Usage="new System.Speech.Synthesis.TtsEngine.FragmentState (action, langId, emphasis, duration, sayAs, prosody, phonemes)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="action" Type="System.Speech.Synthesis.TtsEngine.TtsEngineAction" />
        <Parameter Name="langId" Type="System.Int32" />
        <Parameter Name="emphasis" Type="System.Int32" />
        <Parameter Name="duration" Type="System.Int32" />
        <Parameter Name="sayAs" Type="System.Speech.Synthesis.TtsEngine.SayAs" />
        <Parameter Name="prosody" Type="System.Speech.Synthesis.TtsEngine.Prosody" />
        <Parameter Name="phonemes" Type="System.Char[]" />
      </Parameters>
      <Docs>
        <param name="action">Ein Mitglied der <see cref="T:System.Speech.Synthesis.TtsEngine.TtsEngineAction" />-Enumeration, die eine Sprachesyntheseaktion angibt.</param>
        <param name="langId">Die ID der verwendeten Sprache. Entspricht dem XML-Attribut <c>xml:lang</c>.</param>
        <param name="emphasis">Die Betonung für Sprachausgaben oder Pausen.</param>
        <param name="duration">Die zum Sprechen des <see langword="TextFragment" /> zugewiesene Zeit.</param>
        <param name="sayAs">Ein Mitglied der <see cref="T:System.Speech.Synthesis.TtsEngine.SayAs" />-Klasse, die den Typ des Texts des <see langword="TextFragment" /> und den Detailgrad angibt, der für genaue Rendering des enthaltenen Textes erforderlich ist.  
  
Entspricht dem XML-Tag <c>&lt;say-as&gt;</c> in der SSML-Spezifikation. 
Das Argument kann <see langword="null." /> sein</param>
        <param name="prosody">Ein <see cref="T:System.Speech.Synthesis.TtsEngine.Prosody" />-Objekt, das Eigenschaften der Spracheausgabe wie Tonhöhe, Sprechrate und -Lautstärke angibt.  
  
Entspricht dem XML-Tag <c>&lt;prosody&gt;</c> in der SSML-Spezifikation.</param>
        <param name="phonemes">Ein Array von <see langword="char" />-Objekten, die mithilfe der internationalen Lautalphabet (IPA)-Spezifikation die Lautaussprache für den Text bereitgestellten, der im <see cref="T:System.Speech.Synthesis.TtsEngine.TextFragment" /> enthalten ist.  
  
Entspricht dem XML-Tag <c>&lt;phoneme&gt;</c> in der SSML-Spezifikation.  
  
Dieses Argument kann <see langword="null" /> sein.</param>
        <summary>Erstellt eine neue Instanz von <see langword="FragmentState" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 In der Regel Anwendungen werden nicht direkt erstellt <xref:System.Speech.Synthesis.TtsEngine.FragmentState> Objekte. Stattdessen <xref:System.Speech.Synthesis.TtsEngine.FragmentState> Instanzen werden erstellt, von Anwendungen, die mit den Elementen der <xref:System.Speech.Synthesis> Namespace.  
  
 Wenn die <xref:System.Speech.Synthesis.TtsEngine.TtsEngineAction> vom angegebenen Wert der `action` Argument ist <xref:System.Speech.Synthesis.TtsEngine.TtsEngineAction.Silence>, der Wert der `emphasis` Argument ist:  
  
-   Bei einem positiven Wert ist, die Zeit in Millisekunden angehalten  
  
-   Wenn negative ein Mitglied der <xref:System.Speech.Synthesis.TtsEngine.EmphasisBreak> Enumeration  
  
 Wenn die <xref:System.Speech.Synthesis.TtsEngine.TtsEngineAction> vom angegebenen Wert der `action` Argument ist kein <xref:System.Speech.Synthesis.TtsEngine.TtsEngineAction.Silence> `emphasis` Argument muss vom Typ <xref:System.Speech.Synthesis.TtsEngine.EmphasisWord>.  
  
 Wenn der Wert des der `duration` Argument und die <xref:System.Speech.Synthesis.TtsEngine.Prosody.Duration%2A> Eigenschaft oder der <xref:System.Speech.Synthesis.TtsEngine.Prosody> angegebene Objekt der `prosody` Argument unterscheiden, den Wert auf die <xref:System.Speech.Synthesis.TtsEngine.Prosody> Objekt wird verwendet.  
  
 ]]></format>
        </remarks>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=58363">Internationalen Lautalphabet</related>
      </Docs>
    </Member>
    <Member MemberName="Action">
      <MemberSignature Language="C#" Value="public System.Speech.Synthesis.TtsEngine.TtsEngineAction Action { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Speech.Synthesis.TtsEngine.TtsEngineAction Action" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Synthesis.TtsEngine.FragmentState.Action" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Action As TtsEngineAction" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Speech::Synthesis::TtsEngine::TtsEngineAction Action { System::Speech::Synthesis::TtsEngine::TtsEngineAction get(); };" />
      <MemberSignature Language="F#" Value="member this.Action : System.Speech.Synthesis.TtsEngine.TtsEngineAction" Usage="System.Speech.Synthesis.TtsEngine.FragmentState.Action" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Speech.Synthesis.TtsEngine.TtsEngineAction</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gibt die angeforderte Sprachsynthetisieraktion zurück.</summary>
        <value>Ein Member von <see cref="T:System.Speech.Synthesis.TtsEngine.TtsEngineAction" />, der Sprachesyntheseaktion angibt, die durch die SSML-Eingabe angefordert wird.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Duration">
      <MemberSignature Language="C#" Value="public int Duration { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Duration" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Synthesis.TtsEngine.FragmentState.Duration" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Duration As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Duration { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Duration : int" Usage="System.Speech.Synthesis.TtsEngine.FragmentState.Duration" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gibt die gewünschte Zeit für das Rendern von <see cref="T:System.Speech.Synthesis.TtsEngine.TextFragment" /> zurück</summary>
        <value>Gibt <see langword="int" /> zurück, das einen Wert in Millisekunden der gewünschten Zeit für das Rendern von <see cref="T:System.Speech.Synthesis.TtsEngine.TextFragment" /> enthält.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Emphasis">
      <MemberSignature Language="C#" Value="public int Emphasis { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Emphasis" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Synthesis.TtsEngine.FragmentState.Emphasis" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Emphasis As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Emphasis { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Emphasis : int" Usage="System.Speech.Synthesis.TtsEngine.FragmentState.Emphasis" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gibt Informationen zurück, wie ein <see cref="T:System.Speech.Synthesis.TtsEngine.TextFragment" /> hervorgehoben werden kann.</summary>
        <value>Gibt einen <see langword="int" />-Wert zurück, der angibt, wie ein <see cref="T:System.Speech.Synthesis.TtsEngine.TextFragment" /> hervorgehoben wird.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die Interpretation der den Rückgabewert von <xref:System.Speech.Synthesis.TtsEngine.FragmentState.Emphasis%2A> hängt von der <xref:System.Speech.Synthesis.TtsEngine.TtsEngineAction> von zurückgegebene Wert die <xref:System.Speech.Synthesis.TtsEngine.FragmentState.Action%2A> Eigenschaft auf dem aktuellen <xref:System.Speech.Synthesis.TtsEngine.FragmentState>.  
  
1.  Wenn der Wert des <xref:System.Speech.Synthesis.TtsEngine.FragmentState.Action%2A> ist <xref:System.Speech.Synthesis.TtsEngine.TtsEngineAction.Silence>  
  
    -   Wenn <xref:System.Speech.Synthesis.TtsEngine.FragmentState.Emphasis%2A> positiv ist, wird der zurückgegebene Wert als die Länge der Pause in Millisekunden interpretiert werden soll.  
  
    -   Wenn <xref:System.Speech.Synthesis.TtsEngine.FragmentState.Emphasis%2A> ist negativ, der zurückgegebene Wert interpretiert werden soll, als ein Mitglied der <xref:System.Speech.Synthesis.TtsEngine.EmphasisBreak>.  
  
     Schwerpunkt-Informationen, die vom <xref:System.Speech.Synthesis.TtsEngine.FragmentState.Emphasis%2A> Wenn die Eigenschaft <xref:System.Speech.Synthesis.TtsEngine.FragmentState.Action%2A> ist <xref:System.Speech.Synthesis.TtsEngine.TtsEngineAction.Silence> entspricht die Attribute des der `<break>` Element der SSML-Eingabe für eine Sprache synthetisier-Engine.  
  
2.  Für alle anderen Werte von <xref:System.Speech.Synthesis.TtsEngine.FragmentState.Action%2A>, <xref:System.Speech.Synthesis.TtsEngine.FragmentState.Emphasis%2A> Werte interpretiert werden soll, als <xref:System.Speech.Synthesis.TtsEngine.EmphasisWord>.  
  
     Schwerpunkt-Informationen, die vom <xref:System.Speech.Synthesis.TtsEngine.FragmentState.Emphasis%2A> nach gesprochenen Wörtern entspricht, auf die Attribute der `<emphasis>` Element der SSML-Eingabe für eine Sprache synthetisier-Engine.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Equals">
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Bestimmt, ob die aktuelle Instanz von <see cref="T:System.Speech.Synthesis.TtsEngine.FragmentState" /> denselben <see cref="T:System.Speech.Synthesis.TtsEngine.TextFragment" />-Zustand wie eine andere <see cref="T:System.Speech.Synthesis.TtsEngine.TextFragment" />-Instanz oder ein [Objekt](https://msdn.microsoft.com/library/vstudio/system.object\(v=vs.110\).aspx) beschreibt, das zu <see cref="T:System.Speech.Synthesis.TtsEngine.TextFragment" /> umgewandelt werden kann.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.TtsEngine.FragmentState.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="fragmentState.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">Ein Objekt, das in eine Instanz von <see cref="T:System.Speech.Synthesis.TtsEngine.TextFragment" /> umgewandelt werden kann.</param>
        <summary>Bestimmt, ob ein gegebenes Objekt eine <see cref="T:System.Speech.Synthesis.TtsEngine.FragmentState" />-Instanz und gleich der aktuellen Instanz von <see cref="T:System.Speech.Synthesis.TtsEngine.FragmentState" /> ist.</summary>
        <returns>Gibt <see langword="true" /> zurück, wenn die aktuelle Instanz von <see cref="T:System.Speech.Synthesis.TtsEngine.TextFragment" /> und die von dem <see cref="T:System.Object" /> abgerufene, das vom <paramref name="obj" />-Argument bereitgestellt wurde, den gleichen <see cref="T:System.Speech.Synthesis.TtsEngine.TextFragment" /> Zustand beschreiben. Gibt <see langword="false" /> zurück, wenn das aktuelle <see cref="T:System.Speech.Synthesis.TtsEngine.TextFragment" /> und das <paramref name="obj" />-Argument nicht denselben <see cref="T:System.Speech.Synthesis.TtsEngine.TextFragment" />-Zustand unterstützen.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die Methode zurück, wenn "false" die [Objekt](https://msdn.microsoft.com/library/vstudio/system.object\(v=vs.110\).aspx) gebotenen die `obj` Argument kann nicht umgewandelt werden, um <xref:System.Speech.Synthesis.TtsEngine.TextFragment>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (System.Speech.Synthesis.TtsEngine.FragmentState other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(valuetype System.Speech.Synthesis.TtsEngine.FragmentState other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.TtsEngine.FragmentState.Equals(System.Speech.Synthesis.TtsEngine.FragmentState)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (other As FragmentState) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Equals(System::Speech::Synthesis::TtsEngine::FragmentState other);" />
      <MemberSignature Language="F#" Value="override this.Equals : System.Speech.Synthesis.TtsEngine.FragmentState -&gt; bool" Usage="fragmentState.Equals other" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Speech.Synthesis.TtsEngine.FragmentState" />
      </Parameters>
      <Docs>
        <param name="other">Eine Instanz von <see cref="T:System.Speech.Synthesis.TtsEngine.TextFragment" />, die</param>
        <summary>Bestimmt, ob die angegebene Instanz von <see cref="T:System.Speech.Synthesis.TtsEngine.FragmentState" /> und die aktuelle Instanz von <see cref="T:System.Speech.Synthesis.TtsEngine.FragmentState" /> gleich sind.</summary>
        <returns>Gibt <see langword="true" /> zurück, wenn sowohl die aktuelle Instanz von <see cref="T:System.Speech.Synthesis.TtsEngine.TextFragment" /> und diejenige Instanz, die vom <paramref name="other" />-Argument angegeben wird, den gleichen <see cref="T:System.Speech.Synthesis.TtsEngine.TextFragment" />-Zustand beschreiben. Gibt <see langword="false" /> zurück, wenn das aktuelle <see cref="T:System.Speech.Synthesis.TtsEngine.TextFragment" /> und das <paramref name="other" />-Argument nicht denselben <see cref="T:System.Speech.Synthesis.TtsEngine.TextFragment" />-Zustand unterstützen.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.TtsEngine.FragmentState.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="fragmentState.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt den Hashcode für diese Instanz zurück.</summary>
        <returns>Eine 32-Bit-Ganzzahl mit Vorzeichen. Diese ist der Hashcode für die Instanz.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.ValueType.GetHashCode" />
      </Docs>
    </Member>
    <Member MemberName="LangId">
      <MemberSignature Language="C#" Value="public int LangId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 LangId" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Synthesis.TtsEngine.FragmentState.LangId" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LangId As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int LangId { int get(); };" />
      <MemberSignature Language="F#" Value="member this.LangId : int" Usage="System.Speech.Synthesis.TtsEngine.FragmentState.LangId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gibt die Sprache zurück, die durch aktuelle <see cref="T:System.Speech.Synthesis.TtsEngine.FragmentState" /> unterstützt wird.</summary>
        <value>Gibt <see langword="int" /> zurück, das einen Bezeichner für die Sprache enthält, die von der aktuellen <see cref="T:System.Speech.Synthesis.TtsEngine.FragmentState" /> verwendet wird.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der Wert des <xref:System.Speech.Synthesis.TtsEngine.FragmentState.LangId%2A> sind diejenigen, die mit der Windows-Speech-API (SAPI) verwendet und aus generiert wird, die "`xml:lang`" Attribut in der SSML-Eingabe für eine Sprache synthetisier-Engine.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (System.Speech.Synthesis.TtsEngine.FragmentState state1, System.Speech.Synthesis.TtsEngine.FragmentState state2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(valuetype System.Speech.Synthesis.TtsEngine.FragmentState state1, valuetype System.Speech.Synthesis.TtsEngine.FragmentState state2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.TtsEngine.FragmentState.op_Equality(System.Speech.Synthesis.TtsEngine.FragmentState,System.Speech.Synthesis.TtsEngine.FragmentState)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (state1 As FragmentState, state2 As FragmentState) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::Speech::Synthesis::TtsEngine::FragmentState state1, System::Speech::Synthesis::TtsEngine::FragmentState state2);" />
      <MemberSignature Language="F#" Value="static member ( = ) : System.Speech.Synthesis.TtsEngine.FragmentState * System.Speech.Synthesis.TtsEngine.FragmentState -&gt; bool" Usage="state1 = state2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state1" Type="System.Speech.Synthesis.TtsEngine.FragmentState" />
        <Parameter Name="state2" Type="System.Speech.Synthesis.TtsEngine.FragmentState" />
      </Parameters>
      <Docs>
        <param name="state1">Eine Instanz von <see cref="T:System.Speech.Synthesis.TtsEngine.TextFragment" />, deren beschriebener Zustand mit der durch das <see cref="T:System.Speech.Synthesis.TtsEngine.TextFragment" />-Argument bereitgestellten Instanz von <paramref name="state2" /> verglichen wird.</param>
        <param name="state2">Eine Instanz von <see cref="T:System.Speech.Synthesis.TtsEngine.TextFragment" />, deren beschriebener Zustand mit der durch das <see cref="T:System.Speech.Synthesis.TtsEngine.TextFragment" />-Argument bereitgestellten Instanz von <paramref name="state1" /> verglichen wird.</param>
        <summary>Bestimmt, ob zwei Instanzen von <see cref="T:System.Speech.Synthesis.TtsEngine.FragmentState" /> den selben <see cref="T:System.Speech.Synthesis.TtsEngine.TextFragment" />-Zustand beschreiben.</summary>
        <returns>Gibt <see langword="true" /> zurück, wenn beide Instanzen von <see cref="T:System.Speech.Synthesis.TtsEngine.FragmentState" />, <paramref name="state1" /> und von <paramref name="state2" /> den gleichen <see cref="T:System.Speech.Synthesis.TtsEngine.TextFragment" />-Zustand beschreiben; andernfalls wird <see langword="false" /> zurückgegeben.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[Die entsprechende Methode für diesen Operator <xref:System.Speech.Synthesis.TtsEngine.FragmentState.Equals%28System.Speech.Synthesis.TtsEngine.FragmentState%29?displayProperty=nameWithType>.]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (System.Speech.Synthesis.TtsEngine.FragmentState state1, System.Speech.Synthesis.TtsEngine.FragmentState state2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(valuetype System.Speech.Synthesis.TtsEngine.FragmentState state1, valuetype System.Speech.Synthesis.TtsEngine.FragmentState state2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.TtsEngine.FragmentState.op_Inequality(System.Speech.Synthesis.TtsEngine.FragmentState,System.Speech.Synthesis.TtsEngine.FragmentState)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (state1 As FragmentState, state2 As FragmentState) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::Speech::Synthesis::TtsEngine::FragmentState state1, System::Speech::Synthesis::TtsEngine::FragmentState state2);" />
      <MemberSignature Language="F#" Value="static member op_Inequality : System.Speech.Synthesis.TtsEngine.FragmentState * System.Speech.Synthesis.TtsEngine.FragmentState -&gt; bool" Usage="System.Speech.Synthesis.TtsEngine.FragmentState.op_Inequality (state1, state2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state1" Type="System.Speech.Synthesis.TtsEngine.FragmentState" />
        <Parameter Name="state2" Type="System.Speech.Synthesis.TtsEngine.FragmentState" />
      </Parameters>
      <Docs>
        <param name="state1">Eine Instanz von <see cref="T:System.Speech.Synthesis.TtsEngine.TextFragment" />, deren beschriebener Zustand mit der durch das <see cref="T:System.Speech.Synthesis.TtsEngine.TextFragment" />-Argument bereitgestellten Instanz von <paramref name="state2" /> verglichen wird.</param>
        <param name="state2">Eine Instanz von <see cref="T:System.Speech.Synthesis.TtsEngine.TextFragment" />, deren beschriebener Zustand mit der durch das <see cref="T:System.Speech.Synthesis.TtsEngine.TextFragment" />-Argument bereitgestellten Instanz von <paramref name="state1" /> verglichen wird.</param>
        <summary>Bestimmt, ob zwei Instanzen von <see cref="T:System.Speech.Synthesis.TtsEngine.FragmentState" /> unterschiedlichen <see cref="T:System.Speech.Synthesis.TtsEngine.TextFragment" />-Zustand beschreiben.</summary>
        <returns>Gibt <see langword="true" /> zurück, wenn beide Instanzen von <see cref="T:System.Speech.Synthesis.TtsEngine.FragmentState" />, <paramref name="state1" /> und <paramref name="state2" /> nicht den gleichen <see cref="T:System.Speech.Synthesis.TtsEngine.TextFragment" />-Zustand beschreiben; andernfalls wird <see langword="false" /> zurückgegeben.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[Die entsprechende Methode für diesen Operator <xref:System.Speech.Synthesis.TtsEngine.FragmentState.Equals%28System.Speech.Synthesis.TtsEngine.FragmentState%29?displayProperty=nameWithType>.]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Phoneme">
      <MemberSignature Language="C#" Value="public char[] Phoneme { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance char[] Phoneme" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Synthesis.TtsEngine.FragmentState.Phoneme" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Phoneme As Char()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;char&gt; ^ Phoneme { cli::array &lt;char&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Phoneme : char[]" Usage="System.Speech.Synthesis.TtsEngine.FragmentState.Phoneme" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Char[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gibt phonetische Informationen für <see cref="T:System.Speech.Synthesis.TtsEngine.TextFragment" /> zurück</summary>
        <value>To be added.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die zurückgegebenen Informationen der <xref:System.Speech.Synthesis.TtsEngine.FragmentState.Phoneme%2A> Eigenschaft entspricht der `<phoneme>` XML-Tag der SSML-Eingabe zu einer sprachesynthese-Engine.  
  
 Das Array von `char` zurückgegebenen Objekte <xref:System.Speech.Synthesis.TtsEngine.FragmentState.Phoneme%2A> Eigenschaft drückt Aussprache, die mit dem internationalen Lautalphabet (IPA) aus.  
  
 ]]></format>
        </remarks>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=58363">Internationalen Lautalphabet</related>
      </Docs>
    </Member>
    <Member MemberName="Prosody">
      <MemberSignature Language="C#" Value="public System.Speech.Synthesis.TtsEngine.Prosody Prosody { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Speech.Synthesis.TtsEngine.Prosody Prosody" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Synthesis.TtsEngine.FragmentState.Prosody" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Prosody As Prosody" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Speech::Synthesis::TtsEngine::Prosody ^ Prosody { System::Speech::Synthesis::TtsEngine::Prosody ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Prosody : System.Speech.Synthesis.TtsEngine.Prosody" Usage="System.Speech.Synthesis.TtsEngine.FragmentState.Prosody" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Speech.Synthesis.TtsEngine.Prosody</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gibt ausführliche Informationen über die Tonhöhe, Sprechgeschwindigkeit und Lautstärke der Sprachausgabe zurück.</summary>
        <value>Gibt eine gültige Instanz von <see cref="T:System.Speech.Synthesis.TtsEngine.Prosody" /> zurück, die Tonhöhe, Sprechgeschwindigkeit, Lautstärkeeinstellungen und Änderungen dieser Einstellungen für die Sprachausgabe enthalten.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die zurückgegebenen Informationen <xref:System.Speech.Synthesis.TtsEngine.Prosody> entspricht der `<prosody>` XML-Tag in der SSML-Spezifikation  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SayAs">
      <MemberSignature Language="C#" Value="public System.Speech.Synthesis.TtsEngine.SayAs SayAs { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Speech.Synthesis.TtsEngine.SayAs SayAs" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Synthesis.TtsEngine.FragmentState.SayAs" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SayAs As SayAs" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Speech::Synthesis::TtsEngine::SayAs ^ SayAs { System::Speech::Synthesis::TtsEngine::SayAs ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SayAs : System.Speech.Synthesis.TtsEngine.SayAs" Usage="System.Speech.Synthesis.TtsEngine.FragmentState.SayAs" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Speech.Synthesis.TtsEngine.SayAs</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gibt Informationen über den Kontext für die Generation der Sprache aus dem Text zurück.</summary>
        <value>Gibt eine <see cref="T:System.Speech.Synthesis.TtsEngine.SayAs" />-Wertinstanz zurück, wenn das SSML, das von einer Sprachsynthese-Engine verwendet wird, ausführliche Informationen zum Kontext enthält, mit dem Sprache generiert werden soll; andernfalls wird <see langword="null" /> zurückgegeben.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die zurückgegebenen Informationen <xref:System.Speech.Synthesis.TtsEngine.FragmentState.SayAs%2A> entspricht der `<say-as>` Tag und seine Attribute in der SSML-Spezifikation, und kann angeben:  
  
-   Der Inhaltstyp (z. B. Währung, Datum oder Adresse) oder die Language-Konstrukt, dargestellt durch <xref:System.Speech.Synthesis.TtsEngine.TextFragment.TextToSpeak%2A> Eigenschaft eine <xref:System.Speech.Synthesis.TtsEngine.TextFragment>.  
  
-   Optional Informationen zur Formatierung, behandeln den Inhalt von dargestellten Typ <xref:System.Speech.Synthesis.TtsEngine.TextFragment.TextToSpeak%2A> Eigenschaft eine <xref:System.Speech.Synthesis.TtsEngine.TextFragment>, z. B. eine Date-Syntax.  
  
-   Die Details zum Generieren von Sprache aus verwendet werden die <xref:System.Speech.Synthesis.TtsEngine.TextFragment.TextToSpeak%2A> Eigenschaft eine <xref:System.Speech.Synthesis.TtsEngine.TextFragment>, z. B., ob Satzzeichen explizit gerendert.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>