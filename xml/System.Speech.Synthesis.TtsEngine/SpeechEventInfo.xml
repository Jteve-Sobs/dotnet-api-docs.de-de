<Type Name="SpeechEventInfo" FullName="System.Speech.Synthesis.TtsEngine.SpeechEventInfo">
  <Metadata><Meta Name="ms.openlocfilehash" Value="bb15c9f9e25ccc9aa12350be66bb1cb4b991d148" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86590020" /></Metadata><TypeSignature Language="C#" Value="public struct SpeechEventInfo : IEquatable&lt;System.Speech.Synthesis.TtsEngine.SpeechEventInfo&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit SpeechEventInfo extends System.ValueType implements class System.IEquatable`1&lt;valuetype System.Speech.Synthesis.TtsEngine.SpeechEventInfo&gt;" />
  <TypeSignature Language="DocId" Value="T:System.Speech.Synthesis.TtsEngine.SpeechEventInfo" />
  <TypeSignature Language="VB.NET" Value="Public Structure SpeechEventInfo&#xA;Implements IEquatable(Of SpeechEventInfo)" />
  <TypeSignature Language="C++ CLI" Value="public value class SpeechEventInfo : IEquatable&lt;System::Speech::Synthesis::TtsEngine::SpeechEventInfo&gt;" />
  <TypeSignature Language="F#" Value="type SpeechEventInfo = struct" />
  <AssemblyInfo>
    <AssemblyName>System.Speech</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IEquatable&lt;System.Speech.Synthesis.TtsEngine.SpeechEventInfo&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.ComponentModel.ImmutableObject(true)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.ComponentModel.ImmutableObject(true)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="11deb-101">Wird verwendet, um den Typ des Ereignisses und dessen Argumente anzugeben (falls vorhanden), die als Teil des Renderings von Text zu Sprache durch eine benutzerdefinierte Sprachsynthese-Engine generiert werden.</span><span class="sxs-lookup"><span data-stu-id="11deb-101">Used to specify the type of event, and its arguments (if any)  to be generated as part of the rendering of text to speech by a custom synthetic speech engine.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="11deb-102">Eine benutzerdefinierte Sprachsynthese-Engine fordert die Generierung von Ereignissen unter der Sprachplattform an, indem eine entsprechende <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo> Instanz für <xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite.AddEvents%2A> den Member des Engine-Standort Objekts bereitgestellt wird, das <xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite> an die Implementierungen von <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.Speak%2A> , und weitergeleitet wird <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.AddLexicon%2A> <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.RemoveLexicon%2A> .</span><span class="sxs-lookup"><span data-stu-id="11deb-102">A custom speech synthesis engine requests the generation of events under the Speech Platform by providing an appropriate <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo> instance to <xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite.AddEvents%2A> member of the <xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite> engine site object passed to implementations of <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.Speak%2A>, <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.AddLexicon%2A>, and <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.RemoveLexicon%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="11deb-103">Das folgende Beispiel ist Teil einer benutzerdefinierten Sprachsynthese Implementierung <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml> , die von verwendet wird, und verwendet die Verwendung von <xref:System.Speech.Synthesis.TtsEngine.TextFragment> , <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo> , <xref:System.Speech.Synthesis.TtsEngine.FragmentState> und. <xref:System.Speech.Synthesis.TtsEngine.TtsEventId></span><span class="sxs-lookup"><span data-stu-id="11deb-103">The example below is part of a custom speech synthesis implementation inheriting from <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml>, and using the use of <xref:System.Speech.Synthesis.TtsEngine.TextFragment>, <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo>, <xref:System.Speech.Synthesis.TtsEngine.FragmentState>, and <xref:System.Speech.Synthesis.TtsEngine.TtsEventId></span></span>  
  
 <span data-ttu-id="11deb-104">Die Implementierung von <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.Speak%2A></span><span class="sxs-lookup"><span data-stu-id="11deb-104">The implementation of <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.Speak%2A></span></span>  
  
1.  <span data-ttu-id="11deb-105">Empfängt ein Array von <xref:System.Speech.Synthesis.TtsEngine.TextFragment> -Instanzen und erstellt ein neues Array von- <xref:System.Speech.Synthesis.TtsEngine.TextFragment> Instanzen, die an die- `Speak` Methode in einer zugrunde liegenden Synthese-Engine weitergeleitet werden sollen.</span><span class="sxs-lookup"><span data-stu-id="11deb-105">Receives an array of <xref:System.Speech.Synthesis.TtsEngine.TextFragment> instances and creates a new array of <xref:System.Speech.Synthesis.TtsEngine.TextFragment> instances to be passed to the `Speak` method on an underlying synthesis engine.</span></span>  
  
2.  <span data-ttu-id="11deb-106">Wenn der <xref:System.Speech.Synthesis.TtsEngine.TtsEngineAction> Enumerationswert, der von der-Eigenschaft <xref:System.Speech.Synthesis.TtsEngine.FragmentState.Action%2A> <xref:System.Speech.Synthesis.TtsEngine.FragmentState> der zurückgegeben wird, die von der- <xref:System.Speech.Synthesis.TtsEngine.TextFragment.State%2A> Eigenschaft jeder Instanz zurückgegeben <xref:System.Speech.Synthesis.TtsEngine.TextFragment> <xref:System.Speech.Synthesis.TtsEngine.TtsEngineAction.Speak> wurde, ist,</span><span class="sxs-lookup"><span data-stu-id="11deb-106">If the <xref:System.Speech.Synthesis.TtsEngine.TtsEngineAction> enumeration value by found from the <xref:System.Speech.Synthesis.TtsEngine.FragmentState.Action%2A> property on the <xref:System.Speech.Synthesis.TtsEngine.FragmentState> returned by the <xref:System.Speech.Synthesis.TtsEngine.TextFragment.State%2A> property of each <xref:System.Speech.Synthesis.TtsEngine.TextFragment> instance is <xref:System.Speech.Synthesis.TtsEngine.TtsEngineAction.Speak>, the implementation</span></span>  
  
    -   <span data-ttu-id="11deb-107">Übersetzt Amerikanismus in britishisms in den zu sprechenden Text.</span><span class="sxs-lookup"><span data-stu-id="11deb-107">Translates Americanism to Britishisms in the text to be spoken.</span></span>  
  
    -   <span data-ttu-id="11deb-108">Wenn die- <xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite.EventInterest%2A> Eigenschaft für die <xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite> Schnittstellen, die für die Implementierung bereitgestellt werden <xref:System.Speech.Synthesis.TtsEngine.TtsEventId.WordBoundary> , den Ereignistyp unterstützt, wird eine- <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo> Instanz verwendet, um ein Ereignis zu erstellen</span><span class="sxs-lookup"><span data-stu-id="11deb-108">If the <xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite.EventInterest%2A> property on the <xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite> interfaces provided to the implementation support the <xref:System.Speech.Synthesis.TtsEngine.TtsEventId.WordBoundary> event type, a <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo> instance is used to create an event to drive a synthesizer progress meter is created.</span></span>  
  
3.  <span data-ttu-id="11deb-109">Anschließend wird ein sprachrenderingmodul mit dem geänderten <xref:System.Speech.Synthesis.TtsEngine.TextFragment> Array aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="11deb-109">A speech rendering engine is then called with the modified <xref:System.Speech.Synthesis.TtsEngine.TextFragment> array.</span></span>  
  
```  
private const int WordBoundaryFlag = 1 << (int)TtsEventId.WordBoundary;  
private readonly char[] spaces = new char[] { ' ', '\t', '\r', '\n' };  
internal struct UsVsUk  
{  
  internal string UK;  
  internal string US;  
}  
  
override public void Speak (TextFragment [] frags, IntPtr wfx, ITtsEngineSite site)  
{  
  TextFragment [] newFrags=new TextFragment[frags.Length];  
  
  for (int i=0;i<frags.Length;i++){  
    newFrags[i].State=frags[i].State;  
    //truncate  
    newFrags[i].TextToSpeak = frags[i].TextToSpeak.Substring(frags[i].TextOffset,  
                               frags[i].TextLength);  
    newFrags[i].TextLength = newFrags[i].TextToSpeak.Length;  
    newFrags[i].TextOffset = 0;  
    if (newFrags[i].State.Action == TtsEngineAction.Speak) {  
      //Us to UK conversion  
      foreach (UsVsUk term in TransList) {  
      newFrags[i].TextToSpeak.Replace(term.US, term.UK);  
      }  
      //Generate progress meter events if supported  
      if ((site.EventInterest & WordBoundaryFlag) != 0) {  
      string[] subs = newFrags[i].TextToSpeak.Split(spaces);  
  
      foreach (string s in subs) {  
        int offset = newFrags[i].TextOffset;  
        SpeechEventInfo spEvent = new SpeechEventInfo((Int16)TtsEventId.WordBoundary,   
                (Int16)EventParameterType.Undefined,   
                 s.Length, new IntPtr(offset));  
        offset += s.Length;  
        if (s.Trim().Length > 0) {  
          SpeechEventInfo[] events = new SpeechEventInfo[1];  
          events[0] = spEvent;  
          site.AddEvents(events, 1);  
        }  
      }  
      }  
    }  
  }  
  
  _baseSynthesize.Speak(newFrags, wfx, site);  
  
}  
```  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SpeechEventInfo (short eventId, short parameterType, int param1, IntPtr param2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int16 eventId, int16 parameterType, int32 param1, native int param2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.#ctor(System.Int16,System.Int16,System.Int32,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (eventId As Short, parameterType As Short, param1 As Integer, param2 As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SpeechEventInfo(short eventId, short parameterType, int param1, IntPtr param2);" />
      <MemberSignature Language="F#" Value="new System.Speech.Synthesis.TtsEngine.SpeechEventInfo : int16 * int16 * int * nativeint -&gt; System.Speech.Synthesis.TtsEngine.SpeechEventInfo" Usage="new System.Speech.Synthesis.TtsEngine.SpeechEventInfo (eventId, parameterType, param1, param2)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="eventId" Type="System.Int16" />
        <Parameter Name="parameterType" Type="System.Int16" />
        <Parameter Name="param1" Type="System.Int32" />
        <Parameter Name="param2" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="eventId"><span data-ttu-id="11deb-110">Eine Instanz von <see cref="T:System.Speech.Synthesis.TtsEngine.TtsEventId" /> die die Sorte des Spracheplattformereignisses angibt, das das <see cref="T:System.Speech.Synthesis.TtsEngine.SpeechEventInfo" /> Objekt behandeln kann.</span><span class="sxs-lookup"><span data-stu-id="11deb-110">An instance of <see cref="T:System.Speech.Synthesis.TtsEngine.TtsEventId" /> indicating the sort of Speech platform event the <see cref="T:System.Speech.Synthesis.TtsEngine.SpeechEventInfo" /> object is to handle.</span></span></param>
        <param name="parameterType"><span data-ttu-id="11deb-111">Eine Instanz von <see cref="T:System.Speech.Synthesis.TtsEngine.EventParameterType" />, die angibt, wie der <see langword="System.IntPtr" /> Verweis von <paramref name="param2" /> interpretiert werden soll und, als natürliche Folge, die Verwendung von <paramref name="param1" />.</span><span class="sxs-lookup"><span data-stu-id="11deb-111">An instance of <see cref="T:System.Speech.Synthesis.TtsEngine.EventParameterType" /> indicating how the <see langword="System.IntPtr" /> reference of <paramref name="param2" /> is to be interpreted, and, by implication, the use of <paramref name="param1" />.</span></span></param>
        <param name="param1"><span data-ttu-id="11deb-112">Ein ganzzahliger Wert, der zur Spracheplattform übergebenden wird, wenn das Ereignis generiert wird, das von der Instanz der <see cref="T:System.Speech.Synthesis.TtsEngine.SpeechEventInfo" /> aufgefordert wird, konstruiert zu werden.</span><span class="sxs-lookup"><span data-stu-id="11deb-112">An integer value to be passed to the Speech platform when the event requested by the instance of <see cref="T:System.Speech.Synthesis.TtsEngine.SpeechEventInfo" /> to be constructed is generated.</span></span>  
  
<span data-ttu-id="11deb-113">Die genaue Bedeutung dieser ganzen Zahl wird implizit durch den Wert von <paramref name="parameterType" /> bestimmt.</span><span class="sxs-lookup"><span data-stu-id="11deb-113">The exact meaning of this integer is implicitly determined by the value of <paramref name="parameterType" />.</span></span></param>
        <param name="param2"><span data-ttu-id="11deb-114">Eine <see langword="System.IntPtr" />-Instanz, die ein Objekt verweist.</span><span class="sxs-lookup"><span data-stu-id="11deb-114">A <see langword="System.IntPtr" /> instance referencing an object.</span></span> <span data-ttu-id="11deb-115">der zur Spracheplattform übergebenden wird, wenn das Ereignis generiert wird, das von der Instanz der <see cref="T:System.Speech.Synthesis.TtsEngine.SpeechEventInfo" /> aufgefordert wird, konstruiert zu werden.</span><span class="sxs-lookup"><span data-stu-id="11deb-115">to be passed to the Speech platform when the event requested by the instance of <see cref="T:System.Speech.Synthesis.TtsEngine.SpeechEventInfo" /> to be constructed is generated.</span></span>  
  
<span data-ttu-id="11deb-116">Der Typ, der referenziert werden muss, wird explizit durch den Wert <paramref name="parameterType" /> definiert.</span><span class="sxs-lookup"><span data-stu-id="11deb-116">The type which must be referenced is explicitly defined by the value <paramref name="parameterType" />.</span></span> <span data-ttu-id="11deb-117">Der Wert <see langword="System.IntPtr.Zero" />.</span><span class="sxs-lookup"><span data-stu-id="11deb-117">The value <see langword="System.IntPtr.Zero" />.</span></span></param>
        <summary><span data-ttu-id="11deb-118">Konstruiert ein entsprechendes <see cref="T:System.Speech.Synthesis.TtsEngine.SpeechEventInfo" />-Element.</span><span class="sxs-lookup"><span data-stu-id="11deb-118">Constructs an appropriate <see cref="T:System.Speech.Synthesis.TtsEngine.SpeechEventInfo" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="11deb-119">Zulässige Werte `parameterType` , die für, `param1` und `param2` und ihre Bedeutung verwendet werden, werden durch den Typ des angeforderten Ereignisses vorgegeben, wie vom Member von angegeben, der <xref:System.Speech.Synthesis.TtsEngine.TtsEventId> für verwendet wird `eventId` .</span><span class="sxs-lookup"><span data-stu-id="11deb-119">Permitted values used for `parameterType`, `param1`, and `param2` and their meaning is dictated by the type of event being requested, as specified by the member of <xref:System.Speech.Synthesis.TtsEngine.TtsEventId> used for `eventId`.</span></span>  
  
 <span data-ttu-id="11deb-120">Ausführliche Informationen zu den entsprechenden Werten für `parameterType` , `param1` und finden Sie in der `param2` Dokumentation zu. <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.EventId%2A></span><span class="sxs-lookup"><span data-stu-id="11deb-120">For detailed information on appropriate values for `parameterType`, `param1`, and `param2`, see documentation for <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.EventId%2A></span></span>  
  
 <span data-ttu-id="11deb-121">Der Typ der Ereignisse, die von der sprach Platt Form Infrastruktur behandelt werden können, kann über die- <xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite.EventInterest%2A> Eigenschaft auf der Standort Implementierung der Synthesizer-Engine abgerufen werden <xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite> .</span><span class="sxs-lookup"><span data-stu-id="11deb-121">The type of the events which can be handled by the Speech platform infrastructure can be obtained through the <xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite.EventInterest%2A> property on the synthesizer engine site implementation of <xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="11deb-122">Das folgende Beispiel ist Teil einer benutzerdefinierten Sprachsynthese Implementierung <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml> , die von verwendet wird, und verwendet die Verwendung von <xref:System.Speech.Synthesis.TtsEngine.TextFragment> , <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo> , <xref:System.Speech.Synthesis.TtsEngine.FragmentState> und. <xref:System.Speech.Synthesis.TtsEngine.TtsEventId></span><span class="sxs-lookup"><span data-stu-id="11deb-122">The example below is part of a custom speech synthesis implementation inheriting from <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml>, and using the use of <xref:System.Speech.Synthesis.TtsEngine.TextFragment>, <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo>, <xref:System.Speech.Synthesis.TtsEngine.FragmentState>, and <xref:System.Speech.Synthesis.TtsEngine.TtsEventId></span></span>  
  
 <span data-ttu-id="11deb-123">Die Implementierung von <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.Speak%2A></span><span class="sxs-lookup"><span data-stu-id="11deb-123">The implementation of <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.Speak%2A></span></span>  
  
1.  <span data-ttu-id="11deb-124">Empfängt ein Array von <xref:System.Speech.Synthesis.TtsEngine.TextFragment> -Instanzen und erstellt ein neues Array von- <xref:System.Speech.Synthesis.TtsEngine.TextFragment> Instanzen, die an die- `Speak` Methode in einer zugrunde liegenden Synthese-Engine weitergeleitet werden sollen.</span><span class="sxs-lookup"><span data-stu-id="11deb-124">Receives an array of <xref:System.Speech.Synthesis.TtsEngine.TextFragment> instances and creates a new array of <xref:System.Speech.Synthesis.TtsEngine.TextFragment> instances to be passed to the `Speak` method on an underlying synthesis engine.</span></span>  
  
2.  <span data-ttu-id="11deb-125">Wenn der <xref:System.Speech.Synthesis.TtsEngine.TtsEngineAction> Enumerationswert, der von der-Eigenschaft <xref:System.Speech.Synthesis.TtsEngine.FragmentState.Action%2A> <xref:System.Speech.Synthesis.TtsEngine.FragmentState> der zurückgegeben wird, die von der- <xref:System.Speech.Synthesis.TtsEngine.TextFragment.State%2A> Eigenschaft jeder Instanz zurückgegeben <xref:System.Speech.Synthesis.TtsEngine.TextFragment> <xref:System.Speech.Synthesis.TtsEngine.TtsEngineAction.Speak> wurde, ist,</span><span class="sxs-lookup"><span data-stu-id="11deb-125">If the <xref:System.Speech.Synthesis.TtsEngine.TtsEngineAction> enumeration value by found from the <xref:System.Speech.Synthesis.TtsEngine.FragmentState.Action%2A> property on the <xref:System.Speech.Synthesis.TtsEngine.FragmentState> returned by the <xref:System.Speech.Synthesis.TtsEngine.TextFragment.State%2A> property of each <xref:System.Speech.Synthesis.TtsEngine.TextFragment> instance is <xref:System.Speech.Synthesis.TtsEngine.TtsEngineAction.Speak>, the implementation</span></span>  
  
    -   <span data-ttu-id="11deb-126">Übersetzt Amerikanismus in britishisms in den zu sprechenden Text.</span><span class="sxs-lookup"><span data-stu-id="11deb-126">Translates Americanism to Britishisms in the text to be spoken.</span></span>  
  
    -   <span data-ttu-id="11deb-127">Wenn die- <xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite.EventInterest%2A> Eigenschaft für die <xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite> Schnittstellen, die für die Implementierung bereitgestellt werden <xref:System.Speech.Synthesis.TtsEngine.TtsEventId.WordBoundary> , den Ereignistyp unterstützt, wird eine- <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo> Instanz verwendet, um ein Ereignis zu erstellen</span><span class="sxs-lookup"><span data-stu-id="11deb-127">If the <xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite.EventInterest%2A> property on the <xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite> interfaces provided to the implementation support the <xref:System.Speech.Synthesis.TtsEngine.TtsEventId.WordBoundary> event type, a <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo> instance is used to create an event to drive a synthesizer progress meter is created.</span></span>  
  
3.  <span data-ttu-id="11deb-128">Anschließend wird ein sprachrenderingmodul mit dem geänderten <xref:System.Speech.Synthesis.TtsEngine.TextFragment> Array aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="11deb-128">A speech rendering engine is then called with the modified <xref:System.Speech.Synthesis.TtsEngine.TextFragment> array.</span></span>  
  
```  
private const int WordBoundaryFlag = 1 << (int)TtsEventId.WordBoundary;  
private readonly char[] spaces = new char[] { ' ', '\t', '\r', '\n' };  
internal struct UsVsUk  
{  
  internal string UK;  
  internal string US;  
}  
  
override public void Speak (TextFragment [] frags, IntPtr wfx, ITtsEngineSite site)  
{  
  TextFragment [] newFrags=new TextFragment[frags.Length];  
  
  for (int i=0;i<frags.Length;i++){  
    newFrags[i].State=frags[i].State;  
    //truncate  
    newFrags[i].TextToSpeak = frags[i].TextToSpeak.Substring(frags[i].TextOffset,  
                               frags[i].TextLength);  
    newFrags[i].TextLength = newFrags[i].TextToSpeak.Length;  
    newFrags[i].TextOffset = 0;  
    if (newFrags[i].State.Action == TtsEngineAction.Speak) {  
      //Us to UK conversion  
      foreach (UsVsUk term in TransList) {  
      newFrags[i].TextToSpeak.Replace(term.US, term.UK);  
      }  
      //Generate progress meter events if supported  
      if ((site.EventInterest & WordBoundaryFlag) != 0) {  
      string[] subs = newFrags[i].TextToSpeak.Split(spaces);  
  
      foreach (string s in subs) {  
        int offset = newFrags[i].TextOffset;  
        SpeechEventInfo spEvent = new SpeechEventInfo((Int16)TtsEventId.WordBoundary,   
                (Int16)EventParameterType.Undefined,   
                 s.Length, new IntPtr(offset));  
        offset += s.Length;  
        if (s.Trim().Length > 0) {  
          SpeechEventInfo[] events = new SpeechEventInfo[1];  
          events[0] = spEvent;  
          site.AddEvents(events, 1);  
        }  
      }  
      }  
    }  
  }  
  
  _baseSynthesize.Speak(newFrags, wfx, site);  
  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Equals">
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="11deb-129">Bestimmt, ob eine <c>SpeechEventInfo</c>-Instanz gleich einem anderen Objekt ist.</span><span class="sxs-lookup"><span data-stu-id="11deb-129">Determines whether a <c>SpeechEventInfo</c> instance is equal to another object.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="speechEventInfo.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="11deb-130">Das auszuwertende Objekt.</span><span class="sxs-lookup"><span data-stu-id="11deb-130">The object to evaluate.</span></span></param>
        <summary><span data-ttu-id="11deb-131">Bestimmt, ob ein angegebenes Objekt eine Instanz von <c>SpeechEventInfo</c> und gleich der aktuellen Instanz von <c>SpeechEventInfo</c> ist.</span><span class="sxs-lookup"><span data-stu-id="11deb-131">Determines whether a specified object is an instance of <c>SpeechEventInfo</c> and equal to the current instance of <c>SpeechEventInfo</c>.</span></span></summary>
        <returns><span data-ttu-id="11deb-132"><see langword="true" />, wenn <paramref name="obj" /> gleich dem aktuellen <see cref="T:System.Speech.Synthesis.TtsEngine.SpeechEventInfo" />-Objekt ist; andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="11deb-132"><see langword="true" /> if <paramref name="obj" /> is equal to the current <see cref="T:System.Speech.Synthesis.TtsEngine.SpeechEventInfo" /> object; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (System.Speech.Synthesis.TtsEngine.SpeechEventInfo other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(valuetype System.Speech.Synthesis.TtsEngine.SpeechEventInfo other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.Equals(System.Speech.Synthesis.TtsEngine.SpeechEventInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (other As SpeechEventInfo) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Equals(System::Speech::Synthesis::TtsEngine::SpeechEventInfo other);" />
      <MemberSignature Language="F#" Value="override this.Equals : System.Speech.Synthesis.TtsEngine.SpeechEventInfo -&gt; bool" Usage="speechEventInfo.Equals other" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Speech.Synthesis.TtsEngine.SpeechEventInfo" />
      </Parameters>
      <Docs>
        <param name="other"><span data-ttu-id="11deb-133">Das auszuwertende <see cref="T:System.Speech.Synthesis.TtsEngine.SpeechEventInfo" />-Objekt.</span><span class="sxs-lookup"><span data-stu-id="11deb-133">The <see cref="T:System.Speech.Synthesis.TtsEngine.SpeechEventInfo" /> object to evaluate.</span></span></param>
        <summary><span data-ttu-id="11deb-134">Bestimmt, ob ein angegebenes <c>SpeechEventInfo</c>-Objekt gleich der aktuellen Instanz von <c>SpeechEventInfo</c> ist.</span><span class="sxs-lookup"><span data-stu-id="11deb-134">Determines whether a specified <c>SpeechEventInfo</c> object is equal to the current instance of <c>SpeechEventInfo</c>.</span></span></summary>
        <returns><span data-ttu-id="11deb-135"><see langword="true" />, wenn <paramref name="other" /> gleich dem aktuellen <see cref="T:System.Speech.Synthesis.TtsEngine.SpeechEventInfo" />-Objekt ist; andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="11deb-135"><see langword="true" /> if <paramref name="other" /> is equal to the current <see cref="T:System.Speech.Synthesis.TtsEngine.SpeechEventInfo" /> object; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EventId">
      <MemberSignature Language="C#" Value="public short EventId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int16 EventId" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.EventId" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EventId As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property short EventId { short get(); };" />
      <MemberSignature Language="F#" Value="member this.EventId : int16" Usage="System.Speech.Synthesis.TtsEngine.SpeechEventInfo.EventId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="11deb-136">Ermittelt und bestimmt das Sprachplattformereignis, das eine Instanz von <see cref="T:System.Speech.Synthesis.TtsEngine.SpeechEventInfo" /> normalerweise anfordert.</span><span class="sxs-lookup"><span data-stu-id="11deb-136">Gets and set the Speech platform event which an instance of <see cref="T:System.Speech.Synthesis.TtsEngine.SpeechEventInfo" /> is used to request.</span></span></summary>
        <value><span data-ttu-id="11deb-137">Gibt einen Member von <see cref="T:System.Speech.Synthesis.TtsEngine.TtsEventId" /> als <see langword="short" /> zurück und gibt den Ereignistyp an, den das Objekt generieren <see cref="T:System.Speech.Synthesis.TtsEngine.SpeechEventInfo" /> soll.</span><span class="sxs-lookup"><span data-stu-id="11deb-137">Returns a member of <see cref="T:System.Speech.Synthesis.TtsEngine.TtsEventId" /> as a <see langword="short" />, indicating the event type the <see cref="T:System.Speech.Synthesis.TtsEngine.SpeechEventInfo" /> object is to generate.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="11deb-138">Das folgende Beispiel ist Teil einer benutzerdefinierten Sprachsynthese Implementierung <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml> , die von verwendet wird, und verwendet die Verwendung von <xref:System.Speech.Synthesis.TtsEngine.TextFragment> , <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo> , <xref:System.Speech.Synthesis.TtsEngine.FragmentState> und. <xref:System.Speech.Synthesis.TtsEngine.TtsEventId></span><span class="sxs-lookup"><span data-stu-id="11deb-138">The example below is part of a custom speech synthesis implementation inheriting from <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml>, and using the use of <xref:System.Speech.Synthesis.TtsEngine.TextFragment>, <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo>, <xref:System.Speech.Synthesis.TtsEngine.FragmentState>, and <xref:System.Speech.Synthesis.TtsEngine.TtsEventId></span></span>  
  
 <span data-ttu-id="11deb-139">Die Implementierung von <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.Speak%2A></span><span class="sxs-lookup"><span data-stu-id="11deb-139">The implementation of <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.Speak%2A></span></span>  
  
1.  <span data-ttu-id="11deb-140">Empfängt ein Array von <xref:System.Speech.Synthesis.TtsEngine.TextFragment> -Instanzen und erstellt ein neues Array von- <xref:System.Speech.Synthesis.TtsEngine.TextFragment> Instanzen, die an die- `Speak` Methode in einer zugrunde liegenden Synthese-Engine weitergeleitet werden sollen.</span><span class="sxs-lookup"><span data-stu-id="11deb-140">Receives an array of <xref:System.Speech.Synthesis.TtsEngine.TextFragment> instances and creates a new array of <xref:System.Speech.Synthesis.TtsEngine.TextFragment> instances to be passed to the `Speak` method on an underlying synthesis engine.</span></span>  
  
2.  <span data-ttu-id="11deb-141">Wenn der <xref:System.Speech.Synthesis.TtsEngine.TtsEngineAction> Enumerationswert, der von der-Eigenschaft <xref:System.Speech.Synthesis.TtsEngine.FragmentState.Action%2A> <xref:System.Speech.Synthesis.TtsEngine.FragmentState> der zurückgegeben wird, die von der- <xref:System.Speech.Synthesis.TtsEngine.TextFragment.State%2A> Eigenschaft jeder Instanz zurückgegeben <xref:System.Speech.Synthesis.TtsEngine.TextFragment> <xref:System.Speech.Synthesis.TtsEngine.TtsEngineAction.Speak> wurde, ist,</span><span class="sxs-lookup"><span data-stu-id="11deb-141">If the <xref:System.Speech.Synthesis.TtsEngine.TtsEngineAction> enumeration value by found from the <xref:System.Speech.Synthesis.TtsEngine.FragmentState.Action%2A> property on the <xref:System.Speech.Synthesis.TtsEngine.FragmentState> returned by the <xref:System.Speech.Synthesis.TtsEngine.TextFragment.State%2A> property of each <xref:System.Speech.Synthesis.TtsEngine.TextFragment> instance is <xref:System.Speech.Synthesis.TtsEngine.TtsEngineAction.Speak>, the implementation</span></span>  
  
    -   <span data-ttu-id="11deb-142">Übersetzt Amerikanismus in britishisms in den zu sprechenden Text.</span><span class="sxs-lookup"><span data-stu-id="11deb-142">Translates Americanism to Britishisms in the text to be spoken.</span></span>  
  
    -   <span data-ttu-id="11deb-143">Wenn die- <xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite.EventInterest%2A> Eigenschaft für die <xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite> Schnittstellen, die für die Implementierung bereitgestellt werden <xref:System.Speech.Synthesis.TtsEngine.TtsEventId.WordBoundary> , den Ereignistyp unterstützt, wird eine- <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo> Instanz verwendet, um ein Ereignis zu erstellen</span><span class="sxs-lookup"><span data-stu-id="11deb-143">If the <xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite.EventInterest%2A> property on the <xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite> interfaces provided to the implementation support the <xref:System.Speech.Synthesis.TtsEngine.TtsEventId.WordBoundary> event type, a <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo> instance is used to create an event to drive a synthesizer progress meter is created.</span></span>  
  
         <span data-ttu-id="11deb-144">Die Parameter für <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo> , einschließlich, <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.EventId%2A> werden verwendet, um das durch die-Methode generierte Ereignis zu protokollieren `LogSpeechEvent` .</span><span class="sxs-lookup"><span data-stu-id="11deb-144">The parameters on <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo>, including <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.EventId%2A> are used to log the event generated through the `LogSpeechEvent` method.</span></span>  
  
3.  <span data-ttu-id="11deb-145">Anschließend wird ein sprachrenderingmodul mit dem geänderten <xref:System.Speech.Synthesis.TtsEngine.TextFragment> Array aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="11deb-145">A speech rendering engine is then called with the modified <xref:System.Speech.Synthesis.TtsEngine.TextFragment> array.</span></span>  
  
```  
private const int WordBoundaryFlag = 1 << (int)TtsEventId.WordBoundary;  
private readonly char[] spaces = new char[] { ' ', '\t', '\r', '\n' };  
internal struct UsVsUk  
{  
  internal string UK;  
  internal string US;  
}  
  
override public void Speak (TextFragment [] frags, IntPtr wfx, ITtsEngineSite site)  
{  
  TextFragment [] newFrags=new TextFragment[frags.Length];  
  
  for (int i=0;i<frags.Length;i++){  
    newFrags[i].State=frags[i].State;  
    //truncate  
    newFrags[i].TextToSpeak = frags[i].TextToSpeak.Substring(frags[i].TextOffset,  
                               frags[i].TextLength);  
    newFrags[i].TextLength = newFrags[i].TextToSpeak.Length;  
    newFrags[i].TextOffset = 0;  
    if (newFrags[i].State.Action == TtsEngineAction.Speak) {  
      //Us to UK conversion  
      foreach (UsVsUk term in TransList) {  
      newFrags[i].TextToSpeak.Replace(term.US, term.UK);  
      }  
      //Generate progress meter events if supported  
      if ((site.EventInterest & WordBoundaryFlag) != 0) {  
      string[] subs = newFrags[i].TextToSpeak.Split(spaces);  
  
      foreach (string s in subs) {  
        int offset = newFrags[i].TextOffset;  
        SpeechEventInfo spEvent = new SpeechEventInfo((Int16)TtsEventId.WordBoundary,   
                (Int16)EventParameterType.Undefined,   
                 s.Length, new IntPtr(offset));  
         LogSpeechEvent(spEvent.EventId,   
                        spEvent.ParameterType,   
                        spEvent.Param1,  
                        spEvent.Param2);  
        offset += s.Length;  
        if (s.Trim().Length > 0) {  
          SpeechEventInfo[] events = new SpeechEventInfo[1];  
          events[0] = spEvent;  
          site.AddEvents(events, 1);  
        }  
      }  
      }  
    }  
  }  
  
  _baseSynthesize.Speak(newFrags, wfx, site);  
  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="speechEventInfo.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="11deb-146">Stellt einen Hashcode für ein <c>SpeechEventInfo</c>-Objekt bereit.</span><span class="sxs-lookup"><span data-stu-id="11deb-146">Provides a hash code for a <c>SpeechEventInfo</c> object.</span></span></summary>
        <returns><span data-ttu-id="11deb-147">Ein Hashcode für ein <see cref="T:System.Speech.Synthesis.TtsEngine.SpeechEventInfo" />-Objekt.</span><span class="sxs-lookup"><span data-stu-id="11deb-147">A hash code for a <see cref="T:System.Speech.Synthesis.TtsEngine.SpeechEventInfo" /> object.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (System.Speech.Synthesis.TtsEngine.SpeechEventInfo event1, System.Speech.Synthesis.TtsEngine.SpeechEventInfo event2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(valuetype System.Speech.Synthesis.TtsEngine.SpeechEventInfo event1, valuetype System.Speech.Synthesis.TtsEngine.SpeechEventInfo event2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.op_Equality(System.Speech.Synthesis.TtsEngine.SpeechEventInfo,System.Speech.Synthesis.TtsEngine.SpeechEventInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (event1 As SpeechEventInfo, event2 As SpeechEventInfo) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::Speech::Synthesis::TtsEngine::SpeechEventInfo event1, System::Speech::Synthesis::TtsEngine::SpeechEventInfo event2);" />
      <MemberSignature Language="F#" Value="static member ( = ) : System.Speech.Synthesis.TtsEngine.SpeechEventInfo * System.Speech.Synthesis.TtsEngine.SpeechEventInfo -&gt; bool" Usage="event1 = event2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="event1" Type="System.Speech.Synthesis.TtsEngine.SpeechEventInfo" />
        <Parameter Name="event2" Type="System.Speech.Synthesis.TtsEngine.SpeechEventInfo" />
      </Parameters>
      <Docs>
        <param name="event1"><span data-ttu-id="11deb-148">Das <see cref="T:System.Speech.Synthesis.TtsEngine.SpeechEventInfo" />-Objekt, das mit <paramref name="event2" /> verglichen werden soll.</span><span class="sxs-lookup"><span data-stu-id="11deb-148">The <see cref="T:System.Speech.Synthesis.TtsEngine.SpeechEventInfo" /> object to compare to <paramref name="event2" />.</span></span></param>
        <param name="event2"><span data-ttu-id="11deb-149">Das <see cref="T:System.Speech.Synthesis.TtsEngine.SpeechEventInfo" />-Objekt, das mit <paramref name="event1" /> verglichen werden soll.</span><span class="sxs-lookup"><span data-stu-id="11deb-149">The <see cref="T:System.Speech.Synthesis.TtsEngine.SpeechEventInfo" /> object to compare to <paramref name="event1" />.</span></span></param>
        <summary><span data-ttu-id="11deb-150">Bestimmt, ob zwei Instanzen von <c>SpeechEventInfo</c> gleich sind.</span><span class="sxs-lookup"><span data-stu-id="11deb-150">Determines whether two instances of <c>SpeechEventInfo</c> are equal.</span></span></summary>
        <returns><span data-ttu-id="11deb-151"><see langword="true" />, wenn <paramref name="event1" /> mit <paramref name="event2" /> übereinstimmt; andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="11deb-151"><see langword="true" /> if <paramref name="event1" /> is the same as <paramref name="event2" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[<span data-ttu-id="11deb-152">Die äquivalente-Methode für diesen Operator ist <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.Equals%28System.Speech.Synthesis.TtsEngine.SpeechEventInfo%29?displayProperty=nameWithType> .</span><span class="sxs-lookup"><span data-stu-id="11deb-152">The equivalent method for this operator is <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.Equals%28System.Speech.Synthesis.TtsEngine.SpeechEventInfo%29?displayProperty=nameWithType>.</span></span>]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (System.Speech.Synthesis.TtsEngine.SpeechEventInfo event1, System.Speech.Synthesis.TtsEngine.SpeechEventInfo event2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(valuetype System.Speech.Synthesis.TtsEngine.SpeechEventInfo event1, valuetype System.Speech.Synthesis.TtsEngine.SpeechEventInfo event2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.op_Inequality(System.Speech.Synthesis.TtsEngine.SpeechEventInfo,System.Speech.Synthesis.TtsEngine.SpeechEventInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (event1 As SpeechEventInfo, event2 As SpeechEventInfo) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::Speech::Synthesis::TtsEngine::SpeechEventInfo event1, System::Speech::Synthesis::TtsEngine::SpeechEventInfo event2);" />
      <MemberSignature Language="F#" Value="static member op_Inequality : System.Speech.Synthesis.TtsEngine.SpeechEventInfo * System.Speech.Synthesis.TtsEngine.SpeechEventInfo -&gt; bool" Usage="System.Speech.Synthesis.TtsEngine.SpeechEventInfo.op_Inequality (event1, event2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="event1" Type="System.Speech.Synthesis.TtsEngine.SpeechEventInfo" />
        <Parameter Name="event2" Type="System.Speech.Synthesis.TtsEngine.SpeechEventInfo" />
      </Parameters>
      <Docs>
        <param name="event1"><span data-ttu-id="11deb-153">Das <see cref="T:System.Speech.Synthesis.TtsEngine.SpeechEventInfo" />-Objekt, das mit <paramref name="event2" /> verglichen werden soll.</span><span class="sxs-lookup"><span data-stu-id="11deb-153">The <see cref="T:System.Speech.Synthesis.TtsEngine.SpeechEventInfo" /> object to compare to <paramref name="event2" />.</span></span></param>
        <param name="event2"><span data-ttu-id="11deb-154">Das <see cref="T:System.Speech.Synthesis.TtsEngine.SpeechEventInfo" />-Objekt, das mit <paramref name="event1" /> verglichen werden soll.</span><span class="sxs-lookup"><span data-stu-id="11deb-154">The <see cref="T:System.Speech.Synthesis.TtsEngine.SpeechEventInfo" /> object to compare to <paramref name="event1" />.</span></span></param>
        <summary><span data-ttu-id="11deb-155">Bestimmt, ob zwei Instanzen von <c>SpeechEventInfo</c> ungleich sind.</span><span class="sxs-lookup"><span data-stu-id="11deb-155">Determines whether two instances of <c>SpeechEventInfo</c> are not equal.</span></span></summary>
        <returns><span data-ttu-id="11deb-156"><see langword="true" />, wenn <paramref name="event1" /> sich von <paramref name="event2" /> unterscheidet; andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="11deb-156"><see langword="true" /> if <paramref name="event1" /> is different from <paramref name="event2" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[<span data-ttu-id="11deb-157">Die äquivalente-Methode für diesen Operator ist <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.Equals%28System.Speech.Synthesis.TtsEngine.SpeechEventInfo%29?displayProperty=nameWithType> .</span><span class="sxs-lookup"><span data-stu-id="11deb-157">The equivalent method for this operator is <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.Equals%28System.Speech.Synthesis.TtsEngine.SpeechEventInfo%29?displayProperty=nameWithType>.</span></span>]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Param1">
      <MemberSignature Language="C#" Value="public int Param1 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Param1" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.Param1" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Param1 As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Param1 { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Param1 : int" Usage="System.Speech.Synthesis.TtsEngine.SpeechEventInfo.Param1" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="11deb-158">Ermittelt und bestimmt den an die Sprachplattform zu übergebenden <see langword="integer" />-Wert (<paramref name="param1" /> im Konstruktor), um ein Ereignis zu generieren, dass die aktuelle Instanz von <see cref="T:System.Speech.Synthesis.TtsEngine.SpeechEventInfo" /> normalerweise anfordert.</span><span class="sxs-lookup"><span data-stu-id="11deb-158">Gets and set the <see langword="integer" /> value (<paramref name="param1" /> in the constructor) to be passed to the Speech platform to generate an event the current instance of <see cref="T:System.Speech.Synthesis.TtsEngine.SpeechEventInfo" /> is used to request.</span></span></summary>
        <value><span data-ttu-id="11deb-159">Gibt <see langword="integer" /> zurück, das zur Sprachplattform übergeben wird, wenn das Ereignis, das von der aktuellen Instanz von <see cref="T:System.Speech.Synthesis.TtsEngine.SpeechEventInfo" /> angegeben wird, generiert wird.</span><span class="sxs-lookup"><span data-stu-id="11deb-159">Returns the <see langword="integer" /> to be passed to Speech platform when the event specified by the current instance of <see cref="T:System.Speech.Synthesis.TtsEngine.SpeechEventInfo" /> is generated.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="11deb-160">Die Anforderungen und Bedeutung der <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.Param1%2A> -Eigenschaft von <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo> werden durch die Werte der-Eigenschaft <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.EventId%2A> und der-Eigenschaft der-Instanz eindeutig bestimmt <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.ParameterType%2A> <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo> .</span><span class="sxs-lookup"><span data-stu-id="11deb-160">The requirements and meaning of <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.Param1%2A> property of <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo> are uniquely determined by the values of the <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.EventId%2A> and <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.ParameterType%2A> properties the <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo> instance.</span></span>  
  
 <span data-ttu-id="11deb-161">Ausführliche Informationen zur Verwendung von finden Sie in der <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.Param1%2A> Dokumentation zu <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.EventId%2A> .</span><span class="sxs-lookup"><span data-stu-id="11deb-161">For detailed information on how use <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.Param1%2A>, see documentation for <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.EventId%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="11deb-162">Das folgende Beispiel ist Teil einer benutzerdefinierten Sprachsynthese Implementierung <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml> , die von verwendet wird, und verwendet die Verwendung von <xref:System.Speech.Synthesis.TtsEngine.TextFragment> , <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo> , <xref:System.Speech.Synthesis.TtsEngine.FragmentState> und. <xref:System.Speech.Synthesis.TtsEngine.TtsEventId></span><span class="sxs-lookup"><span data-stu-id="11deb-162">The example below is part of a custom speech synthesis implementation inheriting from <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml>, and using the use of <xref:System.Speech.Synthesis.TtsEngine.TextFragment>, <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo>, <xref:System.Speech.Synthesis.TtsEngine.FragmentState>, and <xref:System.Speech.Synthesis.TtsEngine.TtsEventId></span></span>  
  
 <span data-ttu-id="11deb-163">Die Implementierung von <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.Speak%2A></span><span class="sxs-lookup"><span data-stu-id="11deb-163">The implementation of <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.Speak%2A></span></span>  
  
1.  <span data-ttu-id="11deb-164">Empfängt ein Array von <xref:System.Speech.Synthesis.TtsEngine.TextFragment> -Instanzen und erstellt ein neues Array von- <xref:System.Speech.Synthesis.TtsEngine.TextFragment> Instanzen, die an die- `Speak` Methode in einer zugrunde liegenden Synthese-Engine weitergeleitet werden sollen.</span><span class="sxs-lookup"><span data-stu-id="11deb-164">Receives an array of <xref:System.Speech.Synthesis.TtsEngine.TextFragment> instances and creates a new array of <xref:System.Speech.Synthesis.TtsEngine.TextFragment> instances to be passed to the `Speak` method on an underlying synthesis engine.</span></span>  
  
2.  <span data-ttu-id="11deb-165">Wenn der <xref:System.Speech.Synthesis.TtsEngine.TtsEngineAction> Enumerationswert, der von der-Eigenschaft <xref:System.Speech.Synthesis.TtsEngine.FragmentState.Action%2A> <xref:System.Speech.Synthesis.TtsEngine.FragmentState> der zurückgegeben wird, die von der- <xref:System.Speech.Synthesis.TtsEngine.TextFragment.State%2A> Eigenschaft jeder Instanz zurückgegeben <xref:System.Speech.Synthesis.TtsEngine.TextFragment> <xref:System.Speech.Synthesis.TtsEngine.TtsEngineAction.Speak> wurde, ist,</span><span class="sxs-lookup"><span data-stu-id="11deb-165">If the <xref:System.Speech.Synthesis.TtsEngine.TtsEngineAction> enumeration value by found from the <xref:System.Speech.Synthesis.TtsEngine.FragmentState.Action%2A> property on the <xref:System.Speech.Synthesis.TtsEngine.FragmentState> returned by the <xref:System.Speech.Synthesis.TtsEngine.TextFragment.State%2A> property of each <xref:System.Speech.Synthesis.TtsEngine.TextFragment> instance is <xref:System.Speech.Synthesis.TtsEngine.TtsEngineAction.Speak>, the implementation</span></span>  
  
    -   <span data-ttu-id="11deb-166">Übersetzt Amerikanismus in britishisms in den zu sprechenden Text.</span><span class="sxs-lookup"><span data-stu-id="11deb-166">Translates Americanism to Britishisms in the text to be spoken.</span></span>  
  
    -   <span data-ttu-id="11deb-167">Wenn die- <xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite.EventInterest%2A> Eigenschaft für die <xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite> Schnittstellen, die für die Implementierung bereitgestellt werden <xref:System.Speech.Synthesis.TtsEngine.TtsEventId.WordBoundary> , den Ereignistyp unterstützt, wird eine- <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo> Instanz verwendet, um ein Ereignis zu erstellen</span><span class="sxs-lookup"><span data-stu-id="11deb-167">If the <xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite.EventInterest%2A> property on the <xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite> interfaces provided to the implementation support the <xref:System.Speech.Synthesis.TtsEngine.TtsEventId.WordBoundary> event type, a <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo> instance is used to create an event to drive a synthesizer progress meter is created.</span></span>  
  
         <span data-ttu-id="11deb-168">Die Parameter für <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo> , einschließlich, <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.Param1%2A> werden verwendet, um das durch die-Methode generierte Ereignis zu protokollieren `LogSpeechEvent` .</span><span class="sxs-lookup"><span data-stu-id="11deb-168">The parameters on <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo>, including <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.Param1%2A> are used to log the event generated through the `LogSpeechEvent` method.</span></span>  
  
3.  <span data-ttu-id="11deb-169">Anschließend wird ein sprachrenderingmodul mit dem geänderten <xref:System.Speech.Synthesis.TtsEngine.TextFragment> Array aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="11deb-169">A speech rendering engine is then called with the modified <xref:System.Speech.Synthesis.TtsEngine.TextFragment> array.</span></span>  
  
```  
private const int WordBoundaryFlag = 1 << (int)TtsEventId.WordBoundary;  
private readonly char[] spaces = new char[] { ' ', '\t', '\r', '\n' };  
internal struct UsVsUk  
{  
  internal string UK;  
  internal string US;  
}  
  
override public void Speak (TextFragment [] frags, IntPtr wfx, ITtsEngineSite site)  
{  
  TextFragment [] newFrags=new TextFragment[frags.Length];  
  
  for (int i=0;i<frags.Length;i++){  
    newFrags[i].State=frags[i].State;  
    //truncate  
    newFrags[i].TextToSpeak = frags[i].TextToSpeak.Substring(frags[i].TextOffset,  
                               frags[i].TextLength);  
    newFrags[i].TextLength = newFrags[i].TextToSpeak.Length;  
    newFrags[i].TextOffset = 0;  
    if (newFrags[i].State.Action == TtsEngineAction.Speak) {  
      //Us to UK conversion  
      foreach (UsVsUk term in TransList) {  
      newFrags[i].TextToSpeak.Replace(term.US, term.UK);  
      }  
      //Generate progress meter events if supported  
      if ((site.EventInterest & WordBoundaryFlag) != 0) {  
      string[] subs = newFrags[i].TextToSpeak.Split(spaces);  
  
      foreach (string s in subs) {  
        int offset = newFrags[i].TextOffset;  
        SpeechEventInfo spEvent = new SpeechEventInfo((Int16)TtsEventId.WordBoundary,   
                (Int16)EventParameterType.Undefined,   
                 s.Length, new IntPtr(offset));  
         LogSpeechEvent(spEvent.EventId,   
                        spEvent.ParameterType,   
                        spEvent.Param1,  
                        spEvent.Param2);  
        offset += s.Length;  
        if (s.Trim().Length > 0) {  
          SpeechEventInfo[] events = new SpeechEventInfo[1];  
          events[0] = spEvent;  
          site.AddEvents(events, 1);  
        }  
      }  
      }  
    }  
  }  
  
  _baseSynthesize.Speak(newFrags, wfx, site);  
  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Param2">
      <MemberSignature Language="C#" Value="public IntPtr Param2 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int Param2" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.Param2" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Param2 As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property IntPtr Param2 { IntPtr get(); };" />
      <MemberSignature Language="F#" Value="member this.Param2 : nativeint" Usage="System.Speech.Synthesis.TtsEngine.SpeechEventInfo.Param2" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="11deb-170">Ermittelt und bestimmt die <see langword="System.IntPtr" />-Instanz (<paramref name="param2" /> im Konstruktor), die auf das an die Sprachplattform zu übergebende Objekt verweist, um ein Ereignis zu generieren, das die aktuelle Instanz von <see cref="T:System.Speech.Synthesis.TtsEngine.SpeechEventInfo" /> normalerweise anfordert.</span><span class="sxs-lookup"><span data-stu-id="11deb-170">Gets and set the <see langword="System.IntPtr" /> instance (<paramref name="param2" /> in the constructor) referencing the object to be passed to the Speech platform to generate an event the current instance of <see cref="T:System.Speech.Synthesis.TtsEngine.SpeechEventInfo" /> is used to request.</span></span></summary>
        <value><span data-ttu-id="11deb-171">Gibt <see langword="System.IntPtr" /> zurück, das auf das Objekt verweist, das an die Sprachplattform übergeben werden soll, wenn das Ereignis, das von der aktuellen Instanz von <see cref="T:System.Speech.Synthesis.TtsEngine.SpeechEventInfo" /> angegeben wird, generiert wird.</span><span class="sxs-lookup"><span data-stu-id="11deb-171">Returns the <see langword="System.IntPtr" /> referencing the object to be passed to Speech platform when the event specified by the current instance of <see cref="T:System.Speech.Synthesis.TtsEngine.SpeechEventInfo" /> is generated.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="11deb-172">Die Anforderungen für den `System.IntPtr` Verweis auf die <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.Param2%2A> -Eigenschaft von <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo> werden von den Werten der-Eigenschaft <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.EventId%2A> und der-Eigenschaft der-Instanz eindeutig bestimmt <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.ParameterType%2A> <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo> .</span><span class="sxs-lookup"><span data-stu-id="11deb-172">The requirements on the `System.IntPtr` reference of the <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.Param2%2A> property of <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo> are uniquely determined by the values of the <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.EventId%2A> and <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.ParameterType%2A> properties the <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo> instance.</span></span>  
  
 <span data-ttu-id="11deb-173">Ausführliche Informationen zur Verwendung von finden Sie in der <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.Param2%2A> Dokumentation zu <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.EventId%2A> .</span><span class="sxs-lookup"><span data-stu-id="11deb-173">For detailed information on how use <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.Param2%2A>, see documentation for <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.EventId%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="11deb-174">Das folgende Beispiel ist Teil einer benutzerdefinierten Sprachsynthese Implementierung <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml> , die von verwendet wird, und verwendet die Verwendung von <xref:System.Speech.Synthesis.TtsEngine.TextFragment> , <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo> , <xref:System.Speech.Synthesis.TtsEngine.FragmentState> und. <xref:System.Speech.Synthesis.TtsEngine.TtsEventId></span><span class="sxs-lookup"><span data-stu-id="11deb-174">The example below is part of a custom speech synthesis implementation inheriting from <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml>, and using the use of <xref:System.Speech.Synthesis.TtsEngine.TextFragment>, <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo>, <xref:System.Speech.Synthesis.TtsEngine.FragmentState>, and <xref:System.Speech.Synthesis.TtsEngine.TtsEventId></span></span>  
  
 <span data-ttu-id="11deb-175">Die Implementierung von <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.Speak%2A></span><span class="sxs-lookup"><span data-stu-id="11deb-175">The implementation of <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.Speak%2A></span></span>  
  
1.  <span data-ttu-id="11deb-176">Empfängt ein Array von <xref:System.Speech.Synthesis.TtsEngine.TextFragment> -Instanzen und erstellt ein neues Array von- <xref:System.Speech.Synthesis.TtsEngine.TextFragment> Instanzen, die an die- `Speak` Methode in einer zugrunde liegenden Synthese-Engine weitergeleitet werden sollen.</span><span class="sxs-lookup"><span data-stu-id="11deb-176">Receives an array of <xref:System.Speech.Synthesis.TtsEngine.TextFragment> instances and creates a new array of <xref:System.Speech.Synthesis.TtsEngine.TextFragment> instances to be passed to the `Speak` method on an underlying synthesis engine.</span></span>  
  
2.  <span data-ttu-id="11deb-177">Wenn der <xref:System.Speech.Synthesis.TtsEngine.TtsEngineAction> Enumerationswert, der von der-Eigenschaft <xref:System.Speech.Synthesis.TtsEngine.FragmentState.Action%2A> <xref:System.Speech.Synthesis.TtsEngine.FragmentState> der zurückgegeben wird, die von der- <xref:System.Speech.Synthesis.TtsEngine.TextFragment.State%2A> Eigenschaft jeder Instanz zurückgegeben <xref:System.Speech.Synthesis.TtsEngine.TextFragment> <xref:System.Speech.Synthesis.TtsEngine.TtsEngineAction.Speak> wurde, ist,</span><span class="sxs-lookup"><span data-stu-id="11deb-177">If the <xref:System.Speech.Synthesis.TtsEngine.TtsEngineAction> enumeration value by found from the <xref:System.Speech.Synthesis.TtsEngine.FragmentState.Action%2A> property on the <xref:System.Speech.Synthesis.TtsEngine.FragmentState> returned by the <xref:System.Speech.Synthesis.TtsEngine.TextFragment.State%2A> property of each <xref:System.Speech.Synthesis.TtsEngine.TextFragment> instance is <xref:System.Speech.Synthesis.TtsEngine.TtsEngineAction.Speak>, the implementation</span></span>  
  
    -   <span data-ttu-id="11deb-178">Übersetzt Amerikanismus in britishisms in den zu sprechenden Text.</span><span class="sxs-lookup"><span data-stu-id="11deb-178">Translates Americanism to Britishisms in the text to be spoken.</span></span>  
  
    -   <span data-ttu-id="11deb-179">Wenn die- <xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite.EventInterest%2A> Eigenschaft für die <xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite> Schnittstellen, die für die Implementierung bereitgestellt werden <xref:System.Speech.Synthesis.TtsEngine.TtsEventId.WordBoundary> , den Ereignistyp unterstützt, wird eine- <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo> Instanz verwendet, um ein Ereignis zu erstellen</span><span class="sxs-lookup"><span data-stu-id="11deb-179">If the <xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite.EventInterest%2A> property on the <xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite> interfaces provided to the implementation support the <xref:System.Speech.Synthesis.TtsEngine.TtsEventId.WordBoundary> event type, a <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo> instance is used to create an event to drive a synthesizer progress meter is created.</span></span>  
  
         <span data-ttu-id="11deb-180">Die Parameter für <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo> , einschließlich, <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.Param2%2A> werden verwendet, um das durch die-Methode generierte Ereignis zu protokollieren `LogSpeechEvent` .</span><span class="sxs-lookup"><span data-stu-id="11deb-180">The parameters on <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo>, including <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.Param2%2A> are used to log the event generated through the `LogSpeechEvent` method.</span></span>  
  
3.  <span data-ttu-id="11deb-181">Anschließend wird ein sprachrenderingmodul mit dem geänderten <xref:System.Speech.Synthesis.TtsEngine.TextFragment> Array aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="11deb-181">A speech rendering engine is then called with the modified <xref:System.Speech.Synthesis.TtsEngine.TextFragment> array.</span></span>  
  
```  
private const int WordBoundaryFlag = 1 << (int)TtsEventId.WordBoundary;  
private readonly char[] spaces = new char[] { ' ', '\t', '\r', '\n' };  
internal struct UsVsUk  
{  
  internal string UK;  
  internal string US;  
}  
  
override public void Speak (TextFragment [] frags, IntPtr wfx, ITtsEngineSite site)  
{  
  TextFragment [] newFrags=new TextFragment[frags.Length];  
  
  for (int i=0;i<frags.Length;i++){  
    newFrags[i].State=frags[i].State;  
    //truncate  
    newFrags[i].TextToSpeak = frags[i].TextToSpeak.Substring(frags[i].TextOffset,  
                               frags[i].TextLength);  
    newFrags[i].TextLength = newFrags[i].TextToSpeak.Length;  
    newFrags[i].TextOffset = 0;  
    if (newFrags[i].State.Action == TtsEngineAction.Speak) {  
      //Us to UK conversion  
      foreach (UsVsUk term in TransList) {  
      newFrags[i].TextToSpeak.Replace(term.US, term.UK);  
      }  
      //Generate progress meter events if supported  
      if ((site.EventInterest & WordBoundaryFlag) != 0) {  
      string[] subs = newFrags[i].TextToSpeak.Split(spaces);  
  
      foreach (string s in subs) {  
        int offset = newFrags[i].TextOffset;  
        SpeechEventInfo spEvent = new SpeechEventInfo((Int16)TtsEventId.WordBoundary,   
                (Int16)EventParameterType.Undefined,   
                 s.Length, new IntPtr(offset));  
         LogSpeechEvent(spEvent.EventId,   
                        spEvent.ParameterType,   
                        spEvent.Param1,  
                        spEvent.Param2);  
        offset += s.Length;  
        if (s.Trim().Length > 0) {  
          SpeechEventInfo[] events = new SpeechEventInfo[1];  
          events[0] = spEvent;  
          site.AddEvents(events, 1);  
        }  
      }  
      }  
    }  
  }  
  
  _baseSynthesize.Speak(newFrags, wfx, site);  
  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ParameterType">
      <MemberSignature Language="C#" Value="public short ParameterType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int16 ParameterType" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.ParameterType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ParameterType As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property short ParameterType { short get(); };" />
      <MemberSignature Language="F#" Value="member this.ParameterType : int16" Usage="System.Speech.Synthesis.TtsEngine.SpeechEventInfo.ParameterType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="11deb-182">Gibt den Datentyp des Objekts zurück, auf das auf durch <see cref="T:System.IntPtr" /> gezeigt wird, der durch den <see cref="P:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.Param2" />-Parameter auf dem aktuellen <see cref="T:System.Speech.Synthesis.TtsEngine.SpeechEventInfo" />-Objekt zurückgegeben wird.</span><span class="sxs-lookup"><span data-stu-id="11deb-182">Returns the data type of the object pointed to by the <see cref="T:System.IntPtr" /> returned by the <see cref="P:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.Param2" /> parameter on the current <see cref="T:System.Speech.Synthesis.TtsEngine.SpeechEventInfo" /> object.</span></span></summary>
        <value><span data-ttu-id="11deb-183">Ein <see langword="short" />-Wert entsprechend einem Member der <see cref="T:System.Speech.Synthesis.TtsEngine.EventParameterType" />- Enumeration, die den Datentyp des Objekts angibt, auf das durch den <see cref="T:System.IntPtr" />, gezeigt wird, der durch <see cref="P:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.Param2" />-Parameter zurückgegeben wurde und als zweites Argument für den Konstruktor des aktuellen <see cref="T:System.Speech.Synthesis.TtsEngine.SpeechEventInfo" />-Objekts verwendet wurde.</span><span class="sxs-lookup"><span data-stu-id="11deb-183">A <see langword="short" /> value corresponding to a member of the <see cref="T:System.Speech.Synthesis.TtsEngine.EventParameterType" /> enumeration and indicating the data type of the object pointed to by the <see cref="T:System.IntPtr" /> returned by the <see cref="P:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.Param2" /> parameter and used as the second argument for the constructor of the current <see cref="T:System.Speech.Synthesis.TtsEngine.SpeechEventInfo" /> object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="11deb-184">Die Anforderungen für den `System.IntPtr` Verweis auf die <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.Param2%2A> -Eigenschaft von <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo> werden von den Werten der-Eigenschaft <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.EventId%2A> und der-Eigenschaft der-Instanz eindeutig bestimmt <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.ParameterType%2A> <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo> .</span><span class="sxs-lookup"><span data-stu-id="11deb-184">The requirements on the `System.IntPtr` reference of the <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.Param2%2A> property of <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo> are uniquely determined by the values of the <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.EventId%2A> and <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.ParameterType%2A> properties the <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo> instance.</span></span>  
  
 <span data-ttu-id="11deb-185">Ausführliche Informationen zur Verwendung von finden Sie in der <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.Param2%2A> Dokumentation zu <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.EventId%2A> .</span><span class="sxs-lookup"><span data-stu-id="11deb-185">For detailed information on how use <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.Param2%2A>, see documentation for <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.EventId%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="11deb-186">Das folgende Beispiel ist Teil einer benutzerdefinierten Sprachsynthese Implementierung <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml> , die von verwendet wird, und verwendet die Verwendung von <xref:System.Speech.Synthesis.TtsEngine.TextFragment> , <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo> , <xref:System.Speech.Synthesis.TtsEngine.FragmentState> und. <xref:System.Speech.Synthesis.TtsEngine.TtsEventId></span><span class="sxs-lookup"><span data-stu-id="11deb-186">The example below is part of a custom speech synthesis implementation inheriting from <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml>, and using the use of <xref:System.Speech.Synthesis.TtsEngine.TextFragment>, <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo>, <xref:System.Speech.Synthesis.TtsEngine.FragmentState>, and <xref:System.Speech.Synthesis.TtsEngine.TtsEventId></span></span>  
  
 <span data-ttu-id="11deb-187">Die Implementierung von <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.Speak%2A></span><span class="sxs-lookup"><span data-stu-id="11deb-187">The implementation of <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.Speak%2A></span></span>  
  
1.  <span data-ttu-id="11deb-188">Empfängt ein Array von <xref:System.Speech.Synthesis.TtsEngine.TextFragment> -Instanzen und erstellt ein neues Array von- <xref:System.Speech.Synthesis.TtsEngine.TextFragment> Instanzen, die an die- `Speak` Methode in einer zugrunde liegenden Synthese-Engine weitergeleitet werden sollen.</span><span class="sxs-lookup"><span data-stu-id="11deb-188">Receives an array of <xref:System.Speech.Synthesis.TtsEngine.TextFragment> instances and creates a new array of <xref:System.Speech.Synthesis.TtsEngine.TextFragment> instances to be passed to the `Speak` method on an underlying synthesis engine.</span></span>  
  
2.  <span data-ttu-id="11deb-189">Wenn der <xref:System.Speech.Synthesis.TtsEngine.TtsEngineAction> Enumerationswert, der von der-Eigenschaft <xref:System.Speech.Synthesis.TtsEngine.FragmentState.Action%2A> <xref:System.Speech.Synthesis.TtsEngine.FragmentState> der zurückgegeben wird, die von der- <xref:System.Speech.Synthesis.TtsEngine.TextFragment.State%2A> Eigenschaft jeder Instanz zurückgegeben <xref:System.Speech.Synthesis.TtsEngine.TextFragment> <xref:System.Speech.Synthesis.TtsEngine.TtsEngineAction.Speak> wurde, ist,</span><span class="sxs-lookup"><span data-stu-id="11deb-189">If the <xref:System.Speech.Synthesis.TtsEngine.TtsEngineAction> enumeration value by found from the <xref:System.Speech.Synthesis.TtsEngine.FragmentState.Action%2A> property on the <xref:System.Speech.Synthesis.TtsEngine.FragmentState> returned by the <xref:System.Speech.Synthesis.TtsEngine.TextFragment.State%2A> property of each <xref:System.Speech.Synthesis.TtsEngine.TextFragment> instance is <xref:System.Speech.Synthesis.TtsEngine.TtsEngineAction.Speak>, the implementation</span></span>  
  
    -   <span data-ttu-id="11deb-190">Übersetzt Amerikanismus in britishisms in den zu sprechenden Text.</span><span class="sxs-lookup"><span data-stu-id="11deb-190">Translates Americanism to Britishisms in the text to be spoken.</span></span>  
  
    -   <span data-ttu-id="11deb-191">Wenn die- <xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite.EventInterest%2A> Eigenschaft für die <xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite> Schnittstellen, die für die Implementierung bereitgestellt werden <xref:System.Speech.Synthesis.TtsEngine.TtsEventId.WordBoundary> , den Ereignistyp unterstützt, wird eine- <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo> Instanz verwendet, um ein Ereignis zu erstellen</span><span class="sxs-lookup"><span data-stu-id="11deb-191">If the <xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite.EventInterest%2A> property on the <xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite> interfaces provided to the implementation support the <xref:System.Speech.Synthesis.TtsEngine.TtsEventId.WordBoundary> event type, a <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo> instance is used to create an event to drive a synthesizer progress meter is created.</span></span>  
  
         <span data-ttu-id="11deb-192">Die Parameter für <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo> , einschließlich, <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.ParameterType%2A> werden verwendet, um das durch die-Methode generierte Ereignis zu protokollieren `LogSpeechEvent` .</span><span class="sxs-lookup"><span data-stu-id="11deb-192">The parameters on <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo>, including <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.ParameterType%2A> are used to log the event generated through the `LogSpeechEvent` method.</span></span>  
  
3.  <span data-ttu-id="11deb-193">Anschließend wird ein sprachrenderingmodul mit dem geänderten <xref:System.Speech.Synthesis.TtsEngine.TextFragment> Array aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="11deb-193">A speech rendering engine is then called with the modified <xref:System.Speech.Synthesis.TtsEngine.TextFragment> array.</span></span>  
  
```  
private const int WordBoundaryFlag = 1 << (int)TtsEventId.WordBoundary;  
private readonly char[] spaces = new char[] { ' ', '\t', '\r', '\n' };  
internal struct UsVsUk  
{  
  internal string UK;  
  internal string US;  
}  
  
override public void Speak (TextFragment [] frags, IntPtr wfx, ITtsEngineSite site)  
{  
  TextFragment [] newFrags=new TextFragment[frags.Length];  
  
  for (int i=0;i<frags.Length;i++){  
    newFrags[i].State=frags[i].State;  
    //truncate  
    newFrags[i].TextToSpeak = frags[i].TextToSpeak.Substring(frags[i].TextOffset,  
                               frags[i].TextLength);  
    newFrags[i].TextLength = newFrags[i].TextToSpeak.Length;  
    newFrags[i].TextOffset = 0;  
    if (newFrags[i].State.Action == TtsEngineAction.Speak) {  
      //Us to UK conversion  
      foreach (UsVsUk term in TransList) {  
      newFrags[i].TextToSpeak.Replace(term.US, term.UK);  
      }  
      //Generate progress meter events if supported  
      if ((site.EventInterest & WordBoundaryFlag) != 0) {  
      string[] subs = newFrags[i].TextToSpeak.Split(spaces);  
  
      foreach (string s in subs) {  
        int offset = newFrags[i].TextOffset;  
        SpeechEventInfo spEvent = new SpeechEventInfo((Int16)TtsEventId.WordBoundary,   
                (Int16)EventParameterType.Undefined,   
                 s.Length, new IntPtr(offset));  
         LogSpeechEvent(spEvent.EventId,   
                        spEvent.ParameterType,   
                        spEvent.Param1,  
                        spEvent.Param2);  
        offset += s.Length;  
        if (s.Trim().Length > 0) {  
          SpeechEventInfo[] events = new SpeechEventInfo[1];  
          events[0] = spEvent;  
          site.AddEvents(events, 1);  
        }  
      }  
      }  
    }  
  }  
  
  _baseSynthesize.Speak(newFrags, wfx, site);  
  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
