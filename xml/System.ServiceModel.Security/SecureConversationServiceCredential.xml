<Type Name="SecureConversationServiceCredential" FullName="System.ServiceModel.Security.SecureConversationServiceCredential">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="fc877fc4133501b86d3550e57af5fff851e60669" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class SecureConversationServiceCredential" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit SecureConversationServiceCredential extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Security.SecureConversationServiceCredential" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SecureConversationServiceCredential" />
  <TypeSignature Language="C++ CLI" Value="public ref class SecureConversationServiceCredential sealed" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="89dcb-101">Stellt Einstellungen für Anmeldeinformationen für einen sicheren Konversationsdienst bereit.</span>
      <span class="sxs-lookup">
        <span data-stu-id="89dcb-101">Provides credential settings for a secure conversation service.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="89dcb-102">Zu sicheren Konversationen gehört der Austausch mehrerer Nachrichten und die Verwendung eines Sicherheitskontexttoken (Security Context Token, SCT), um die Sicherheit zu gewährleisten.</span><span class="sxs-lookup"><span data-stu-id="89dcb-102">Secure conversations involve the exchange of multiple messages and use a Security Context Token (SCT) to ensure security.</span></span> <span data-ttu-id="89dcb-103">Das SCT wird während der Lebensdauer der Kommunikationssitzung von den kommunizierenden Parteien gemeinsam genutzt.</span><span class="sxs-lookup"><span data-stu-id="89dcb-103">The SCT is shared among the communicating parties for the lifetime of a communications session.</span></span> <span data-ttu-id="89dcb-104">Ein Dienst kann zwei verschiedene Arten von SCTs ausgeben:</span><span class="sxs-lookup"><span data-stu-id="89dcb-104">A service can issue two different kinds of SCTs:</span></span>  
  
-   <span data-ttu-id="89dcb-105">Das erste ist ein sitzungsbasiertes SCT, das eine eindeutige Kennung enthält. Meldungen enthalten lediglich die Kennung, und der Dienst verwaltet einen Cache für die Statuszuordnung, der die SCT-Kennungen und Inhalte (wie Ansprüche, Sicherheitsschlüssel usw.) zuordnet.</span><span class="sxs-lookup"><span data-stu-id="89dcb-105">The first is a session-based SCT that contains a unique id. Messages carry only the id, and the service maintains a state-mapping cache that maps between the SCT ids and contents (such as claims, security keys, and so on).</span></span> <span data-ttu-id="89dcb-106">Ein gut konzipierter Client muss einen SCT-Abbruch senden, um den Dienst bei der Optimierung der Cacheressourcen zu unterstützen.</span><span class="sxs-lookup"><span data-stu-id="89dcb-106">A well-behaved client must send an SCT cancellation to help the service optimize the cache resources.</span></span> <span data-ttu-id="89dcb-107">Wenn Sie diese Klasse durch Aufruf von <xref:System.ServiceModel.Channels.SecurityBindingElement.CreateSecureConversationBindingElement%2A> instantiieren, wenn der `requireCancellation`-Parameter auf `true` gesetzt ist, wird das SCT auf diese Art und Weise ausgegeben.</span><span class="sxs-lookup"><span data-stu-id="89dcb-107">If you instantiate this class by calling <xref:System.ServiceModel.Channels.SecurityBindingElement.CreateSecureConversationBindingElement%2A> with the `requireCancellation` parameter equal to `true`, the SCT is issued in this manner.</span></span>  
  
-   <span data-ttu-id="89dcb-108">Das zweite ist ein in sich abgeschlossenes SCT, das sich in einem Cookie auf dem Client befindet.</span><span class="sxs-lookup"><span data-stu-id="89dcb-108">The second is a self-contained SCT that resides in a cookie on the client.</span></span> <span data-ttu-id="89dcb-109">Dieses SCT enthält die gesamten Statusinformationen und erfordert daher weder eine Statusverwaltung durch den Dienst noch einen SCT-Abbruch durch den Client.</span><span class="sxs-lookup"><span data-stu-id="89dcb-109">This SCT contains the entire state information, so requires neither state management from the service nor SCT cancellation from the client.</span></span> <span data-ttu-id="89dcb-110">Dies wird manchmal als "Cookiemodus"-SCT bezeichnet.</span><span class="sxs-lookup"><span data-stu-id="89dcb-110">This is sometimes called a "cookie-mode" SCT.</span></span> <span data-ttu-id="89dcb-111">Da das SCT die gesamten Statusinformationen enthält, ist es größer als im sitzungsbasierten Fall.</span><span class="sxs-lookup"><span data-stu-id="89dcb-111">Because the SCT contains the entire state information, its size is larger than in the session-based case.</span></span> <span data-ttu-id="89dcb-112">Mit sitzungsbasierten SCTs speichert der Dienst einen Großteil der Statusinformationen.</span><span class="sxs-lookup"><span data-stu-id="89dcb-112">With session-based SCTs, the service stores much of the state information.</span></span> <span data-ttu-id="89dcb-113">Da das SCT jedoch in sich abgeschlossen ist, kann es während der gesamten Lebensdauer des Dienstes verwendet werden und bleibt auch beim Herunterfahren und Neustart des Dienstes bestehen.</span><span class="sxs-lookup"><span data-stu-id="89dcb-113">However, because it is self-contained, it can be used across service lifetime and persists across service shutdown and restart.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="SecurityContextClaimTypes">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.Collection&lt;Type&gt; SecurityContextClaimTypes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.Collection`1&lt;class System.Type&gt; SecurityContextClaimTypes" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.SecureConversationServiceCredential.SecurityContextClaimTypes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SecurityContextClaimTypes As Collection(Of Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::Collection&lt;Type ^&gt; ^ SecurityContextClaimTypes { System::Collections::ObjectModel::Collection&lt;Type ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.Collection&lt;System.Type&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="89dcb-114">Ruft eine Auflistung der <see cref="T:System.Type" />-Ansprüche für die Cookieserialisierung ab.</span>
          <span class="sxs-lookup">
            <span data-stu-id="89dcb-114">Gets a collection of the <see cref="T:System.Type" /> claims for cookie serialization.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="89dcb-115">Eine Auflistung der <see cref="T:System.Type" />-Ansprüche für die Cookieserialisierung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="89dcb-115">A collection of the <see cref="T:System.Type" /> claims for cookie serialization.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="89dcb-116">Um Ansprüche in SCT-Cookies zu serialisieren, verwendet [!INCLUDE[indigo1](~/includes/indigo1-md.md)]<xref:System.Runtime.Serialization.DataContractSerializer> als Standard.</span><span class="sxs-lookup"><span data-stu-id="89dcb-116">To serialize claims into SCT cookies, [!INCLUDE[indigo1](~/includes/indigo1-md.md)] uses <xref:System.Runtime.Serialization.DataContractSerializer> as the default.</span></span> <span data-ttu-id="89dcb-117">Da die Anspruchsressource erweiterbar ist, können Sie mit [!INCLUDE[indigo2](~/includes/indigo2-md.md)] eine Liste bekannter Ressourcentypen bereitstellen.</span><span class="sxs-lookup"><span data-stu-id="89dcb-117">Because the Claim resource is extensible, [!INCLUDE[indigo2](~/includes/indigo2-md.md)] allows you to provide a list of known resource types.</span></span> <span data-ttu-id="89dcb-118">Dadurch wird der <xref:System.Runtime.Serialization.DataContractSerializer> während der Deserialisierung der Ansprüche im Cookie unterstützt, sodass die ursprünglichen stark typisierten Objekte zurückgegeben werden können.</span><span class="sxs-lookup"><span data-stu-id="89dcb-118">This assists the <xref:System.Runtime.Serialization.DataContractSerializer> during deserialization of the claims in the cookie so that it can return the original strongly-typed objects.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="89dcb-119">Der folgende Code zeigt, wie diese Eigenschaft abgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="89dcb-119">The following code shows how to get this property.</span></span>  
  
 [!code-csharp[S_UE_SecureConversationServiceCredential#2](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_secureconversationservicecredential/cs/source.cs#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SecurityStateEncoder">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Security.SecurityStateEncoder SecurityStateEncoder { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Security.SecurityStateEncoder SecurityStateEncoder" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.SecureConversationServiceCredential.SecurityStateEncoder" />
      <MemberSignature Language="VB.NET" Value="Public Property SecurityStateEncoder As SecurityStateEncoder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::Security::SecurityStateEncoder ^ SecurityStateEncoder { System::ServiceModel::Security::SecurityStateEncoder ^ get(); void set(System::ServiceModel::Security::SecurityStateEncoder ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Security.SecurityStateEncoder</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="89dcb-120">Ruft einen benutzerdefinierten <see cref="T:System.ServiceModel.Security.SecurityStateEncoder" /> zum Codieren und Decodieren der Cookieserialisierung ab oder legt diesen fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="89dcb-120">Gets or sets a customized <see cref="T:System.ServiceModel.Security.SecurityStateEncoder" /> for encoding and decoding cookie serialization.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="89dcb-121">Ein <see cref="T:System.ServiceModel.Security.SecurityStateEncoder" />-Objekt, das eine Anpassung von <see cref="T:System.ServiceModel.Security.DataProtectionSecurityStateEncoder" /> ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="89dcb-121">A <see cref="T:System.ServiceModel.Security.SecurityStateEncoder" /> object, which is a customization of <see cref="T:System.ServiceModel.Security.DataProtectionSecurityStateEncoder" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="89dcb-122">Im "Cookiemodus" gibt ein Dienst ein Sicherheitskontexttoken (SCT) in Form eines Cookies an den Client aus, sodass kein Sicherheitsstatus verwaltet werden muss.</span><span class="sxs-lookup"><span data-stu-id="89dcb-122">In "cookie mode", a service issues the client a security context token (SCT) in the form of a cookie to the client so that it does not have to maintain any security state.</span></span> <span data-ttu-id="89dcb-123">Der Client sendet das Cookie in der Anforderungsmeldung zurück, sodass der Dienst weiß, wie der Schutz der Anforderungsmeldung aufgehoben werden kann und wie die Meldung geprüft werden kann.</span><span class="sxs-lookup"><span data-stu-id="89dcb-123">The client sends the cookie back in the request message so that the service knows how to unprotect and verify the request message.</span></span> <span data-ttu-id="89dcb-124">Da das SCT oft über ein nicht sicheres Netzwerk gesendet wird, muss es geschützt werden.</span><span class="sxs-lookup"><span data-stu-id="89dcb-124">Because the SCT is often transmitted over a non-secure network, it must be protected.</span></span>  
  
 <span data-ttu-id="89dcb-125">Standardmäßig verwendet [!INCLUDE[indigo1](~/includes/indigo1-md.md)] die <xref:System.ServiceModel.Security.DataProtectionSecurityStateEncoder>-Klasse, um das Cookie mit der Data Protection API (DPAPI) zu schützen.</span><span class="sxs-lookup"><span data-stu-id="89dcb-125">By default, [!INCLUDE[indigo1](~/includes/indigo1-md.md)] uses the <xref:System.ServiceModel.Security.DataProtectionSecurityStateEncoder> class to protect the cookie using the Data Protection API (DPAPI).</span></span> <span data-ttu-id="89dcb-126">Damit DPAPI in einer Webfarmumgebung funktioniert, müssen alle Backenddienste mit demselben Domänenbenutzerkonto ausgeführt werden.</span><span class="sxs-lookup"><span data-stu-id="89dcb-126">For DPAPI to work in a Web farm environment, all the backend services must run as the same domain user account.</span></span> <span data-ttu-id="89dcb-127">Anders ausgedrückt: bei einem WebHosted-Dienst muss der Internet Information Services (IIS)-Workerprozess so konfiguriert werden, dass er als Domänenbenutzer ausgeführt wird.</span><span class="sxs-lookup"><span data-stu-id="89dcb-127">In other words, if the service is Web hosted, then the Internet Information Services (IIS) worker process must be configured to run as a domain user.</span></span>  
  
 <span data-ttu-id="89dcb-128">Mit dieser Eigenschaft können Sie einen angepassten <xref:System.ServiceModel.Security.SecurityStateEncoder> zum Verschlüsseln und Entschlüsseln des Cookies verwenden und sind nicht auf DPAPI angewiesen.</span><span class="sxs-lookup"><span data-stu-id="89dcb-128">This property enables you to use a customized <xref:System.ServiceModel.Security.SecurityStateEncoder> to encrypt and decrypt the cookie and not depend on DPAPI.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="89dcb-129">Der folgende Code zeigt, wie diese Eigenschaft festgelegt wird.</span><span class="sxs-lookup"><span data-stu-id="89dcb-129">The following code shows how to set this property.</span></span>  
  
 [!code-csharp[S_UE_SecureConversationServiceCredential#1](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_secureconversationservicecredential/cs/source.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>