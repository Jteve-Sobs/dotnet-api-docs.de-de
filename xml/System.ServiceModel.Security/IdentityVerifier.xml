<Type Name="IdentityVerifier" FullName="System.ServiceModel.Security.IdentityVerifier">
  <TypeSignature Language="C#" Value="public abstract class IdentityVerifier" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit IdentityVerifier extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Security.IdentityVerifier" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class IdentityVerifier" />
  <TypeSignature Language="C++ CLI" Value="public ref class IdentityVerifier abstract" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="12744-101">Eine <see langword="abstract" />-Basisklasse, die implementiert werden kann, um eine erwartete Identität anhand eines Autorisierungskontexts zu prüfen, der einen Remoteendpunkt repräsentiert, oder um eine Identität aus einer Endpunktadresse zu erstellen.</span><span class="sxs-lookup"><span data-stu-id="12744-101">An <see langword="abstract" /> base class that can be implemented to verify an expected identity against an authorization context that represents a remote endpoint, or to create an identity from an endpoint address.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="12744-102">Die WCF-Infrastruktur-Aufrufe der <xref:System.ServiceModel.Security.IdentityVerifier.TryGetIdentity%2A> Methode zuerst an, um die Identität des Diensts aus der Nachricht abzurufen.</span><span class="sxs-lookup"><span data-stu-id="12744-102">The WCF infrastructure calls the <xref:System.ServiceModel.Security.IdentityVerifier.TryGetIdentity%2A> method first to retrieve the service's identity from the message.</span></span> <span data-ttu-id="12744-103">Danach ruft die Infrastruktur die <xref:System.ServiceModel.Security.IdentityVerifier.CheckAccess%2A>-Methode mit der zurückgegebenen <xref:System.ServiceModel.EndpointIdentity> und dem zurückgegebenen <xref:System.IdentityModel.Policy.AuthorizationContext> auf.</span><span class="sxs-lookup"><span data-stu-id="12744-103">Next, the infrastructure calls the <xref:System.ServiceModel.Security.IdentityVerifier.CheckAccess%2A> method with the returned <xref:System.ServiceModel.EndpointIdentity> and <xref:System.IdentityModel.Policy.AuthorizationContext>.</span></span>  
  
 <span data-ttu-id="12744-104">Weitere Informationen zur Implementierung der Klasse finden Sie unter [Vorgehensweise: Erstellen einer benutzerdefinierten Clientidentitätsüberprüfung](~/docs/framework/wcf/extending/how-to-create-a-custom-client-identity-verifier.md).</span><span class="sxs-lookup"><span data-stu-id="12744-104">For more information about implementing the class, see [How to: Create a Custom Client Identity Verifier](~/docs/framework/wcf/extending/how-to-create-a-custom-client-identity-verifier.md).</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected IdentityVerifier ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.IdentityVerifier.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; IdentityVerifier();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="12744-105">Erstellt eine Instanz dieser Klasse.</span><span class="sxs-lookup"><span data-stu-id="12744-105">Creates an instance of this class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckAccess">
      <MemberSignature Language="C#" Value="public abstract bool CheckAccess (System.ServiceModel.EndpointIdentity identity, System.IdentityModel.Policy.AuthorizationContext authContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CheckAccess(class System.ServiceModel.EndpointIdentity identity, class System.IdentityModel.Policy.AuthorizationContext authContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.IdentityVerifier.CheckAccess(System.ServiceModel.EndpointIdentity,System.IdentityModel.Policy.AuthorizationContext)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function CheckAccess (identity As EndpointIdentity, authContext As AuthorizationContext) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool CheckAccess(System::ServiceModel::EndpointIdentity ^ identity, System::IdentityModel::Policy::AuthorizationContext ^ authContext);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="identity" Type="System.ServiceModel.EndpointIdentity" />
        <Parameter Name="authContext" Type="System.IdentityModel.Policy.AuthorizationContext" />
      </Parameters>
      <Docs>
        <param name="identity"><span data-ttu-id="12744-106">Die zu überprüfende <see cref="T:System.ServiceModel.EndpointIdentity" />.</span><span class="sxs-lookup"><span data-stu-id="12744-106">The <see cref="T:System.ServiceModel.EndpointIdentity" /> to verify.</span></span></param>
        <param name="authContext"><span data-ttu-id="12744-107">Das <see cref="T:System.IdentityModel.Policy.AuthorizationContext" />, gegen den die <c>Identität</c> getestet werden soll.</span><span class="sxs-lookup"><span data-stu-id="12744-107">The <see cref="T:System.IdentityModel.Policy.AuthorizationContext" /> to test the <c>identity</c> against.</span></span></param>
        <summary><span data-ttu-id="12744-108">Implementiert eine Methode, um eine Identität zu überprüfen.</span><span class="sxs-lookup"><span data-stu-id="12744-108">Implements a method to verify an identity.</span></span></summary>
        <returns>
          <span data-ttu-id="12744-109"><see langword="true" />, wenn die Identität überprüft wird, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="12744-109"><see langword="true" /> if the identity is verified; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="12744-110">Der Standardwert ist <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="12744-110">The default is <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateDefault">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.Security.IdentityVerifier CreateDefault ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ServiceModel.Security.IdentityVerifier CreateDefault() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.IdentityVerifier.CreateDefault" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateDefault () As IdentityVerifier" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ServiceModel::Security::IdentityVerifier ^ CreateDefault();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Security.IdentityVerifier</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="12744-111">Erstellt eine Standardinstanz dieser Klasse.</span><span class="sxs-lookup"><span data-stu-id="12744-111">Creates a default instance of this class.</span></span></summary>
        <returns><span data-ttu-id="12744-112">Eine Standardinstanz von <see cref="T:System.ServiceModel.Security.IdentityVerifier" />.</span><span class="sxs-lookup"><span data-stu-id="12744-112">A default instance of <see cref="T:System.ServiceModel.Security.IdentityVerifier" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGetIdentity">
      <MemberSignature Language="C#" Value="public abstract bool TryGetIdentity (System.ServiceModel.EndpointAddress reference, out System.ServiceModel.EndpointIdentity identity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool TryGetIdentity(class System.ServiceModel.EndpointAddress reference, [out] class System.ServiceModel.EndpointIdentity&amp; identity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.IdentityVerifier.TryGetIdentity(System.ServiceModel.EndpointAddress,System.ServiceModel.EndpointIdentity@)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function TryGetIdentity (reference As EndpointAddress, ByRef identity As EndpointIdentity) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool TryGetIdentity(System::ServiceModel::EndpointAddress ^ reference, [Runtime::InteropServices::Out] System::ServiceModel::EndpointIdentity ^ % identity);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reference" Type="System.ServiceModel.EndpointAddress" />
        <Parameter Name="identity" Type="System.ServiceModel.EndpointIdentity&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="reference"><span data-ttu-id="12744-113">Die beim Erstellen der Identität zu verwendende <see cref="T:System.ServiceModel.EndpointAddress" />.</span><span class="sxs-lookup"><span data-stu-id="12744-113">The <see cref="T:System.ServiceModel.EndpointAddress" /> to use for creating the identity.</span></span></param>
        <param name="identity"><span data-ttu-id="12744-114"><see cref="T:System.ServiceModel.EndpointIdentity" />, die zurückgegeben wird.</span><span class="sxs-lookup"><span data-stu-id="12744-114">The <see cref="T:System.ServiceModel.EndpointIdentity" /> that is returned.</span></span></param>
        <summary><span data-ttu-id="12744-115">Es wird versucht, eine Identität aus einem Endpunkt zu erstellen.</span><span class="sxs-lookup"><span data-stu-id="12744-115">Tries to create an identity from an endpoint.</span></span></summary>
        <returns>
          <span data-ttu-id="12744-116"><see langword="true" />, wenn die Identität zurückgegeben wird, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="12744-116"><see langword="true" /> if the identity is returned; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="12744-117">Der Standardwert ist <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="12744-117">The default is <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="12744-118">Die standardmäßige <xref:System.ServiceModel.Security.IdentityVerifier> erstellt eine <xref:System.ServiceModel.DnsEndpointIdentity> basierend auf dem Hostnamen in <xref:System.ServiceModel.EndpointAddress.Uri%2A>, wenn keine explizite <xref:System.ServiceModel.EndpointIdentity> als Teil der <xref:System.ServiceModel.EndpointAddress> angegeben wurde.</span><span class="sxs-lookup"><span data-stu-id="12744-118">The default <xref:System.ServiceModel.Security.IdentityVerifier> creates a <xref:System.ServiceModel.DnsEndpointIdentity> based on the hostname portion of <xref:System.ServiceModel.EndpointAddress.Uri%2A> if an explicit <xref:System.ServiceModel.EndpointIdentity> has not been specified as part of the <xref:System.ServiceModel.EndpointAddress>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>