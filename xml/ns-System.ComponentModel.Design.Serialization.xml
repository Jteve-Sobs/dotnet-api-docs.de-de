<Namespace Name="System.ComponentModel.Design.Serialization">
  <Metadata><Meta Name="ms.openlocfilehash" Value="a00e1219743debba9734b13b4ea4797337e29dbe" /><Meta Name="ms.sourcegitcommit" Value="397961a0164281b579f68064c3bb66c071f374d9" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="07/14/2020" /><Meta Name="ms.locfileid" Value="68907606" /></Metadata><Docs>
    <summary>Der <see cref="N:System.ComponentModel.Design.Serialization" />-Namespace stellt Typen bereit, die die Anpassung und Steuerung der Serialisierung zur Entwurfszeit unterstützen.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die Klassen in diesem Namespace können in die folgenden Kategorien unterteilt werden:  
  
-   Serialisierungsattribute, die verwendet werden können, um das für einen bestimmten Typ zu verwendende Serialisierungsprogramm anzugeben: <xref:System.ComponentModel.Design.Serialization.DesignerSerializerAttribute> , um das für einen bestimmten Typ zu verwendende Serialisierungsprogramm anzugeben, und <xref:System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute> , um das Basisserialisierungsprogramm anzugeben, das für den Stamm Designer verwendet werden soll.  
  
-   Klassen, die von einem Designer implementiert werden können, um die Serialisierung anzupassen: <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderHost> , zum Laden eines Designer Dokuments aus einem serialisierten Zustand und <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService> zum Laden eines Designer Dokuments, wenn externe Komponenten und Asynchrones Laden beteiligt sind.  
  
-   Schnittstellen, die ein Designer zum Verwalten des Serialisierungsprozesses verwenden kann: <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager> , um benutzerdefinierte Serialisierungsprogramme zu registrieren oder abzurufen; <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationProvider> , um ein Serialisierungsprogramm für eine verfügbar zu machen, <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager> und <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationService> , das Methoden zum Aufrufen der Serialisierung und Deserialisierung bereitstellt.  
  
-   Eine Schnittstelle, die implementiert werden kann, um den Ladevorgang eines Designers anzupassen: <xref:System.ComponentModel.Design.Serialization.DesignerLoader> .  
  
-   Eine Schnittstelle, die verwendet werden kann, um das erneute Laden eines Designers zu optimieren: <xref:System.ComponentModel.Design.Serialization.ICodeDomDesignerReload> .  
  
-   Andere Hilfsklassen: <xref:System.ComponentModel.Design.Serialization.INameCreationService> , eine Schnittstelle zum Erstellen eindeutiger Namen für-Objekte; <xref:System.ComponentModel.Design.Serialization.ContextStack> , eine Datenstruktur, die für die Freigabe von serialisierungskontexsinformationen mit Serialisierern nützlich ist, und ein <xref:System.ComponentModel.Design.Serialization.InstanceDescriptor> Objekt, das ein serialisierbares Objekt beschreiben kann.  
  
 ]]></format>
    </remarks>
  </Docs>
</Namespace>