<Namespace Name="System.ComponentModel.Design.Serialization">
  <Metadata><Meta Name="ms.openlocfilehash" Value="a00e1219743debba9734b13b4ea4797337e29dbe" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70522731" /></Metadata><Docs>
    <summary>Der <see cref="N:System.ComponentModel.Design.Serialization" />-Namespace stellt Typen bereit, die die Anpassung und Steuerung der Serialisierung zur Entwurfszeit unterstützen.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die Klassen in diesem Namespace können in die folgenden Kategorien unterteilt werden:  
  
-   Serialisierungsattribute, die verwendet werden können, um das für einen bestimmten Typ zu verwendende <xref:System.ComponentModel.Design.Serialization.DesignerSerializerAttribute>Serialisierungsprogramm anzugeben:, um das für einen bestimmten Typ zu verwendende Serialisierungsprogramm anzugeben, und <xref:System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute>, um das Basisserialisierungsprogramm anzugeben, das für den Stamm Designer verwendet werden soll.  
  
-   Klassen, die von einem Designer implementiert werden können, um <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderHost>die Serialisierung anzupassen:, zum Laden eines Designer Dokuments aus einem <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService>serialisierten Zustand und zum Laden eines Designer Dokuments, wenn externe Komponenten und Asynchrones Laden beteiligt sind.  
  
-   Schnittstellen, die ein Designer zum Verwalten des Serialisierungsprozesses verwenden kann: <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager>, um benutzerdefinierte Serialisierungsprogrammen zu registrieren oder abzurufen. , um ein Serialisierungsprogramm <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager>für verfügbar zu machen, <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationService>und, das Methoden zum Aufrufen der Serialisierung und Deserialisierung bereitstellt. <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationProvider>  
  
-   Eine Schnittstelle, die implementiert werden kann, um den Ladevorgang eines Designers <xref:System.ComponentModel.Design.Serialization.DesignerLoader>anzupassen:.  
  
-   Eine Schnittstelle, die verwendet werden kann, um das erneute Laden eines Designers <xref:System.ComponentModel.Design.Serialization.ICodeDomDesignerReload>zu optimieren:.  
  
-   Andere Hilfsklassen: <xref:System.ComponentModel.Design.Serialization.INameCreationService>, eine Schnittstelle zum Erstellen eindeutiger Namen für-Objekte. , eine Datenstruktur, die für die Freigabe von serialisierungskontexsinformationen <xref:System.ComponentModel.Design.Serialization.InstanceDescriptor>mit Serialisierern nützlich ist, und ein Objekt, das ein serialisierbares Objekt beschreiben kann. <xref:System.ComponentModel.Design.Serialization.ContextStack>  
  
 ]]></format>
    </remarks>
  </Docs>
</Namespace>