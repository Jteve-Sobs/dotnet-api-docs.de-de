<Type Name="SoapFormatter" FullName="System.Runtime.Serialization.Formatters.Soap.SoapFormatter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="dd3a05764a7f1d0ab75afd066361104ec9d78550" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86755684" /></Metadata><TypeSignature Language="C#" Value="public sealed class SoapFormatter : System.Runtime.Remoting.Messaging.IRemotingFormatter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit SoapFormatter extends System.Object implements class System.Runtime.Remoting.Messaging.IRemotingFormatter, class System.Runtime.Serialization.IFormatter" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.Serialization.Formatters.Soap.SoapFormatter" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SoapFormatter&#xA;Implements IRemotingFormatter" />
  <TypeSignature Language="C++ CLI" Value="public ref class SoapFormatter sealed : System::Runtime::Remoting::Messaging::IRemotingFormatter" />
  <TypeSignature Language="F#" Value="type SoapFormatter = class&#xA;    interface IRemotingFormatter&#xA;    interface IFormatter" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Serialization.Formatters.Soap</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Runtime.Remoting.Messaging.IRemotingFormatter</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.IFormatter</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Serialisiert und deserialisiert ein Objekt oder ein vollständiges Diagramm verbundener Objekte im SOAP-Format.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Ab .NET Framework 2,0 ist diese Klasse veraltet.

[!INCLUDE[binaryformatter](~/includes/binaryformatter.md)]
  
 Die <xref:System.Runtime.Serialization.Formatters.Soap.SoapFormatter> <xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter> Klassen und implementieren die- <xref:System.Runtime.Remoting.Messaging.IRemotingFormatter> Schnittstelle zur Unterstützung von Remote Prozedur aufrufen (Remote Procedure Calls, RPCs) und die- <xref:System.Runtime.Serialization.IFormatter> Schnittstelle (geerbt von <xref:System.Runtime.Remoting.Messaging.IRemotingFormatter> ) zur Unterstützung der Serialisierung eines Diagramms von Objekten. Die- <xref:System.Runtime.Serialization.Formatters.Soap.SoapFormatter> Klasse unterstützt auch RPCs mit- <xref:System.Runtime.Serialization.Formatters.ISoapMessage> Objekten, ohne die-Funktionalität zu verwenden <xref:System.Runtime.Remoting.Messaging.IRemotingFormatter> .  
  
 Bei RPCs ermöglicht die- <xref:System.Runtime.Remoting.Messaging.IRemotingFormatter> Schnittstelle die Angabe von zwei separaten Objekt Diagrammen: das Diagramm der zu serialisierenden Objekte und ein zusätzliches Diagramm, das ein Array von Header Objekten enthält, die Informationen über den Remote Funktionsaufruf übermitteln (z. b. Transaktions-ID oder eine Methoden Signatur). Bei einer ordnungsgemäßen Serialisierung muss das Stamm Objekt des ersten Diagramms ein Objekt sein, das entweder die- <xref:System.Runtime.Remoting.Messaging.IMethodCallMessage> Schnittstelle oder die- <xref:System.Runtime.Remoting.Messaging.IMethodReturnMessage> Schnittstelle implementiert.  
  
 Während der Deserialisierung eines RPC wird ein Delegat <xref:System.Runtime.Remoting.Messaging.HeaderHandler> für die- <xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter.Deserialize%2A> Methode des Formatierers angegeben. Die Remoting-Infrastruktur verwendet den-Delegaten <xref:System.Runtime.Remoting.Messaging.HeaderHandler> zum Entwickeln eines Objekts, das die- <xref:System.Runtime.Serialization.ISerializable> Schnittstelle unterstützt. Dieses Objekt enthält die in den Headern gespeicherten Informationen und wird zum Stamm des vom Deserialisierungsprogramm zurückgegebenen Diagramms.  
  
 Der <xref:System.Runtime.Serialization.Formatters.Soap.SoapFormatter> kann auch RPCs verarbeiten, die mit Objekten erstellt werden, die die- <xref:System.Runtime.Serialization.Formatters.ISoapMessage> Schnittstelle implementieren. Um einen RPC ohne Verwendung der- <xref:System.Runtime.Remoting.Messaging.IRemotingFormatter> Funktion zu erstellen, platzieren Sie ein Objekt, das die-Schnittstelle unterstützt, <xref:System.Runtime.Serialization.Formatters.ISoapMessage> im Stamm eines zu serialisierenden Diagramms. Zum Deserialisieren eines auf diese Weise erstellten RPC <xref:System.Runtime.Serialization.Formatters.Soap.SoapFormatter.TopObject%2A> muss die-Eigenschaft auf ein anderes Objekt festgelegt werden, das die <xref:System.Runtime.Serialization.Formatters.ISoapMessage> -Schnittstelle unterstützt, und enthält die relevanten Remote Aufruf Informationen.  
  
## <a name="timespan-serialization"></a>TimeSpan-Serialisierung  
 TimeSpan-Objekte werden gemäß dem ISO 8601:1998 section 5.5.3.2.1 "Alternative"-Standard serialisiert.  
  
## <a name="version-information"></a>Versionsinformationen  
 <xref:System.Runtime.Serialization.Formatters.Soap.SoapFormatter>Unterstützt die Serialisierungskompatibilität zwischen den Versionen der .NET Framework nicht. Die Serialisierung zwischen den Typen 1,1 und 2,0 im Framework schlägt häufig fehl. Die folgenden Aktionen können ausgeführt werden, um dieses Problem zu beheben:  
  
-   Konvertieren Sie, um den zu verwenden <xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter> , der die Kompatibilität zwischen 1,1 und 2,0 bereitstellt.  
  
-   Konvertieren Sie vorhandene persistente Daten in das neue Format.  
  
-   Konvertieren Sie alle Producer und Consumer der serialisierten Daten in Version 2,0.  
  
-   Vermeiden Sie die Verwendung von Typen, die von 1,1 zu 2,0 geändert wurden.  
  
   
  
## Examples  
 [!code-cpp[SoapFormatter Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapFormatter Example/CPP/soapformatter.cpp#1)]
 [!code-csharp[SoapFormatter Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapFormatter Example/CS/soapformatter.cs#1)]
 [!code-vb[SoapFormatter Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapFormatter Example/VB/soapformatter.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Formatters.Soap</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Runtime.Serialization.Formatters.Soap.SoapFormatter" />-Klasse.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SoapFormatter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.Formatters.Soap.SoapFormatter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SoapFormatter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Formatters.Soap</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Runtime.Serialization.Formatters.Soap.SoapFormatter" />-Klasse mit Standardeigenschaftswerten.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 In der folgenden Tabelle werden die anfänglichen Eigenschaftenwerte für eine <xref:System.Runtime.Serialization.Formatters.Soap.SoapFormatter>-Instanz aufgeführt.  
  
|Eigenschaft|Wert|  
|--------------|-----------|  
|<xref:System.Runtime.Serialization.Formatters.Soap.SoapFormatter.SurrogateSelector%2A>|`null`|  
|<xref:System.Runtime.Serialization.Formatters.Soap.SoapFormatter.Context%2A>|Ein neues <xref:System.Runtime.Serialization.StreamingContext> , das initialisiert wird, um anzugeben, dass die serialisierten Daten an einen beliebigen anderen Kontext übertragen oder von diesem empfangen werden können.|  
  
   
  
## Examples  
 [!code-cpp[SoapFormatter Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapFormatter Example/CPP/soapformatter.cpp#1)]
 [!code-csharp[SoapFormatter Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapFormatter Example/CS/soapformatter.cs#1)]
 [!code-vb[SoapFormatter Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapFormatter Example/VB/soapformatter.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SoapFormatter (System.Runtime.Serialization.ISurrogateSelector selector, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Serialization.ISurrogateSelector selector, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.Formatters.Soap.SoapFormatter.#ctor(System.Runtime.Serialization.ISurrogateSelector,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (selector As ISurrogateSelector, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SoapFormatter(System::Runtime::Serialization::ISurrogateSelector ^ selector, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="new System.Runtime.Serialization.Formatters.Soap.SoapFormatter : System.Runtime.Serialization.ISurrogateSelector * System.Runtime.Serialization.StreamingContext -&gt; System.Runtime.Serialization.Formatters.Soap.SoapFormatter" Usage="new System.Runtime.Serialization.Formatters.Soap.SoapFormatter (selector, context)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Formatters.Soap</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="selector" Type="System.Runtime.Serialization.ISurrogateSelector" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="selector">Der <see cref="T:System.Runtime.Serialization.ISurrogateSelector" />, der mit der neuen Instanz von <see cref="T:System.Runtime.Serialization.Formatters.Soap.SoapFormatter" /> verwendet werden soll. Kann <see langword="null" /> sein.</param>
        <param name="context">Der <see cref="T:System.Runtime.Serialization.StreamingContext" />, der die Quelle und das Ziel der Serialisierung enthält. Wenn der <paramref name="context" />-Parameter <see langword="null" /> ist, wird der <see cref="P:System.Runtime.Serialization.Formatters.Soap.SoapFormatter.Context" /> standardmäßig auf <see cref="F:System.Runtime.Serialization.StreamingContextStates.CrossMachine" /> festgelegt.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Runtime.Serialization.Formatters.Soap.SoapFormatter" />-Klasse mit den angegebenen <see cref="T:System.Runtime.Serialization.ISurrogateSelector" /> und dem angegebenen <see cref="T:System.Runtime.Serialization.StreamingContext" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 -Objekte werden in den angegebenen serialisiert bzw. deserialisiert <xref:System.IO.Stream> .  
  
 Der Serialisierungs-oder Deserialisierungsprozess verwendet den angegebenen <xref:System.Runtime.Serialization.ISurrogateSelector> , um nach Surrogates zu suchen, die für die zu deserialisierenden Objekttypen registriert sind. Surrogates sind Hilfsprogramme, die Objekte spezifischer Klassen serialisieren und deserialisieren. Der Standardwert <xref:System.Runtime.Serialization.ISurrogateSelector> kann die Serialisierung von Objekten, die von abgeleitet werden, <xref:System.MarshalByRefObject> für Remoting-Zwecke nicht verarbeiten. In einer remotingsituation ersetzt das angegebene <xref:System.Runtime.Serialization.ISurrogateSelector> das von abgeleitete Objekt durch <xref:System.MarshalByRefObject> ein- <xref:System.Runtime.Remoting.ObjRef> Objekt, das vom angegebenen Ersatzselektor serialisiert wird. Wenn Sie also Remote Objekte verwenden möchten, legen Sie den- `selector` Parameter auf eine Instanz von fest <xref:System.Runtime.Remoting.Messaging.RemotingSurrogateSelector> . Wenn Sie keine Surrogates benötigen, legen Sie den- `selector` Parameter auf fest `null` .  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Runtime.Serialization.StreamingContext" />
      </Docs>
    </Member>
    <Member MemberName="AssemblyFormat">
      <MemberSignature Language="C#" Value="public System.Runtime.Serialization.Formatters.FormatterAssemblyStyle AssemblyFormat { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Runtime.Serialization.Formatters.FormatterAssemblyStyle AssemblyFormat" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Serialization.Formatters.Soap.SoapFormatter.AssemblyFormat" />
      <MemberSignature Language="VB.NET" Value="Public Property AssemblyFormat As FormatterAssemblyStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Runtime::Serialization::Formatters::FormatterAssemblyStyle AssemblyFormat { System::Runtime::Serialization::Formatters::FormatterAssemblyStyle get(); void set(System::Runtime::Serialization::Formatters::FormatterAssemblyStyle value); };" />
      <MemberSignature Language="F#" Value="member this.AssemblyFormat : System.Runtime.Serialization.Formatters.FormatterAssemblyStyle with get, set" Usage="System.Runtime.Serialization.Formatters.Soap.SoapFormatter.AssemblyFormat" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Formatters.Soap</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Serialization.Formatters.FormatterAssemblyStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft das Verhalten des Deserialisierungsprogramms bezüglich des Suchens und Ladens von Assemblys ab oder legt dieses fest.</summary>
        <value>Einer der <see cref="T:System.Runtime.Serialization.Formatters.FormatterAssemblyStyle" />-Werte, der das Deserialisierungsverhalten angibt.</value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Runtime.Serialization.Formatters.FormatterAssemblyStyle" />
      </Docs>
    </Member>
    <Member MemberName="Binder">
      <MemberSignature Language="C#" Value="public System.Runtime.Serialization.SerializationBinder Binder { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Runtime.Serialization.SerializationBinder Binder" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Serialization.Formatters.Soap.SoapFormatter.Binder" />
      <MemberSignature Language="VB.NET" Value="Public Property Binder As SerializationBinder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Runtime::Serialization::SerializationBinder ^ Binder { System::Runtime::Serialization::SerializationBinder ^ get(); void set(System::Runtime::Serialization::SerializationBinder ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Binder : System.Runtime.Serialization.SerializationBinder with get, set" Usage="System.Runtime.Serialization.Formatters.Soap.SoapFormatter.Binder" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Runtime.Serialization.IFormatter.Binder</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Formatters.Soap</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Serialization.SerializationBinder</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den <see cref="T:System.Runtime.Serialization.SerializationBinder" /> ab, der die Bindung eines serialisierten Objekts an einen Typ steuert, oder legt diesen fest.</summary>
        <value>Der mit diesem <see cref="T:System.Runtime.Serialization.SerializationBinder" /> verwendete <see cref="T:System.Runtime.Serialization.Formatters.Soap.SoapFormatter" />.</value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Runtime.Serialization.SerializationBinder" />
      </Docs>
    </Member>
    <Member MemberName="Context">
      <MemberSignature Language="C#" Value="public System.Runtime.Serialization.StreamingContext Context { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Runtime.Serialization.StreamingContext Context" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Serialization.Formatters.Soap.SoapFormatter.Context" />
      <MemberSignature Language="VB.NET" Value="Public Property Context As StreamingContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Runtime::Serialization::StreamingContext Context { System::Runtime::Serialization::StreamingContext get(); void set(System::Runtime::Serialization::StreamingContext value); };" />
      <MemberSignature Language="F#" Value="member this.Context : System.Runtime.Serialization.StreamingContext with get, set" Usage="System.Runtime.Serialization.Formatters.Soap.SoapFormatter.Context" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Runtime.Serialization.IFormatter.Context</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Formatters.Soap</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Serialization.StreamingContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den <see cref="T:System.Runtime.Serialization.StreamingContext" /> ab, der mit diesem <see cref="T:System.Runtime.Serialization.Formatters.Soap.SoapFormatter" /> verwendet wird, oder legt diesen fest.</summary>
        <value>Der mit diesem <see cref="T:System.Runtime.Serialization.StreamingContext" /> verwendete <see cref="T:System.Runtime.Serialization.Formatters.Soap.SoapFormatter" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Runtime.Serialization.StreamingContext>Bietet eine Enumeration, die die Quelle und das Ziel für einen angegebenen serialisierten Stream beschreibt, sowie eine Möglichkeit für die Serialisierung, diesen Kontext und einen zusätzlichen, vom Aufrufer definierten Kontext beizubehalten.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Runtime.Serialization.StreamingContext" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Deserialize">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Formatters.Soap</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Deserialisiert einen Stream in ein Objektdiagramm.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

[!INCLUDE [untrusted-data-method-note](~/includes/untrusted-data-method-note.md)]
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Deserialize">
      <MemberSignature Language="C#" Value="public object Deserialize (System.IO.Stream serializationStream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Deserialize(class System.IO.Stream serializationStream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.Formatters.Soap.SoapFormatter.Deserialize(System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Public Function Deserialize (serializationStream As Stream) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ Deserialize(System::IO::Stream ^ serializationStream);" />
      <MemberSignature Language="F#" Value="abstract member Deserialize : System.IO.Stream -&gt; obj&#xA;override this.Deserialize : System.IO.Stream -&gt; obj" Usage="soapFormatter.Deserialize serializationStream" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.IFormatter.Deserialize(System.IO.Stream)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Formatters.Soap</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serializationStream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="serializationStream">Der Stream, der die zu deserialisierenden Daten enthält.</param>
        <summary>Deserialisiert die Daten im bereitgestellten Stream und stellt das Diagramm von Objekten wieder her.</summary>
        <returns>Das oberste Objekt des deserialisierten Diagramms (Stammobjekt).</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bei erfolgreicher Deserialisierung muss sich die aktuelle Position im Stream am Anfang des Objekt Diagramms befinden.  
  
[!INCLUDE [untrusted-data-method-note](~/includes/untrusted-data-method-note.md)]
  
## Examples  
 [!code-cpp[SoapFormatter Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapFormatter Example/CPP/soapformatter.cpp#1)]
 [!code-csharp[SoapFormatter Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapFormatter Example/CS/soapformatter.cs#1)]
 [!code-vb[SoapFormatter Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapFormatter Example/VB/soapformatter.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="serializationStream" /> ist <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Deserialize">
      <MemberSignature Language="C#" Value="public object Deserialize (System.IO.Stream serializationStream, System.Runtime.Remoting.Messaging.HeaderHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Deserialize(class System.IO.Stream serializationStream, class System.Runtime.Remoting.Messaging.HeaderHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.Formatters.Soap.SoapFormatter.Deserialize(System.IO.Stream,System.Runtime.Remoting.Messaging.HeaderHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Function Deserialize (serializationStream As Stream, handler As HeaderHandler) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ Deserialize(System::IO::Stream ^ serializationStream, System::Runtime::Remoting::Messaging::HeaderHandler ^ handler);" />
      <MemberSignature Language="F#" Value="abstract member Deserialize : System.IO.Stream * System.Runtime.Remoting.Messaging.HeaderHandler -&gt; obj&#xA;override this.Deserialize : System.IO.Stream * System.Runtime.Remoting.Messaging.HeaderHandler -&gt; obj" Usage="soapFormatter.Deserialize (serializationStream, handler)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Remoting.Messaging.IRemotingFormatter.Deserialize(System.IO.Stream,System.Runtime.Remoting.Messaging.HeaderHandler)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Formatters.Soap</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serializationStream" Type="System.IO.Stream" />
        <Parameter Name="handler" Type="System.Runtime.Remoting.Messaging.HeaderHandler" />
      </Parameters>
      <Docs>
        <param name="serializationStream">Der Stream, der die zu deserialisierenden Daten enthält.</param>
        <param name="handler">Delegat zum Behandeln aller im Stream gefundenen Header. Kann <see langword="null" /> sein.</param>
        <summary>Deserialisiert den Stream in ein Objektdiagramm, wobei sämtliche Header im betreffenden Stream durch den angegebenen <see cref="T:System.Runtime.Remoting.Messaging.HeaderHandler" /> behandelt werden.</summary>
        <returns>Das oberste Objekt des deserialisierten Diagramms (Stammobjekt).</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Header werden nur für bestimmte Remoting-Anwendungen verwendet. Der- <xref:System.Runtime.Remoting.Messaging.HeaderHandler> Parameter ist eine von zwei Methoden zum Zurückgeben von Headern aus einem Datenstrom im SOAP-RPC-Format (Remote Procedure-Aufruf). Die andere Möglichkeit ist die Verwendung der- <xref:System.Runtime.Serialization.Formatters.Soap.SoapFormatter.TopObject%2A> Eigenschaft.  
  
 Bei erfolgreicher Deserialisierung muss sich die aktuelle Position im Stream am Anfang des Objekt Diagramms befinden.  
  
## <a name="timespan-serialization"></a>TimeSpan-Serialisierung  
 TimeSpan-Objekte werden gemäß dem ISO 8601:1998 section 5.5.3.2.1 "Alternative"-Standard serialisiert.  

[!INCLUDE [untrusted-data-method-note](~/includes/untrusted-data-method-note.md)]
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="serializationStream" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.Runtime.Serialization.SerializationException"><paramref name="serializationStream" /> unterstützt die Suche. Seine Länge ist 0.</exception>
      </Docs>
    </Member>
    <Member MemberName="FilterLevel">
      <MemberSignature Language="C#" Value="public System.Runtime.Serialization.Formatters.TypeFilterLevel FilterLevel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Runtime.Serialization.Formatters.TypeFilterLevel FilterLevel" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Serialization.Formatters.Soap.SoapFormatter.FilterLevel" />
      <MemberSignature Language="VB.NET" Value="Public Property FilterLevel As TypeFilterLevel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Runtime::Serialization::Formatters::TypeFilterLevel FilterLevel { System::Runtime::Serialization::Formatters::TypeFilterLevel get(); void set(System::Runtime::Serialization::Formatters::TypeFilterLevel value); };" />
      <MemberSignature Language="F#" Value="member this.FilterLevel : System.Runtime.Serialization.Formatters.TypeFilterLevel with get, set" Usage="System.Runtime.Serialization.Formatters.Soap.SoapFormatter.FilterLevel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Formatters.Soap</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName Language="C#">[System.Runtime.InteropServices.ComVisible(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.ComVisible(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Serialization.Formatters.TypeFilterLevel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft das <see cref="T:System.Runtime.Serialization.Formatters.TypeFilterLevel" /> der automatischen Deserialisierung für .NET Framework Remoting ab oder legt dieses fest.</summary>
        <value>Das <see cref="T:System.Runtime.Serialization.Formatters.TypeFilterLevel" />, das die aktuelle Ebene der automatischen Deserialisierung darstellt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Unterstützte Werte sind <xref:System.Runtime.Serialization.Formatters.TypeFilterLevel.Low> und <xref:System.Runtime.Serialization.Formatters.TypeFilterLevel.Full> (die Standardeinstellung). Weitere Informationen zu Deserialisierungsebenen finden Sie unter [Automatische Deserialisierung in .NET-Remoting](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/5dxse167(v=vs.100)).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Serialize">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Formatters.Soap</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Serialisiert ein Objekt oder ein Diagramm verbundener Objekte.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Serialize">
      <MemberSignature Language="C#" Value="public void Serialize (System.IO.Stream serializationStream, object graph);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Serialize(class System.IO.Stream serializationStream, object graph) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.Formatters.Soap.SoapFormatter.Serialize(System.IO.Stream,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Serialize (serializationStream As Stream, graph As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Serialize(System::IO::Stream ^ serializationStream, System::Object ^ graph);" />
      <MemberSignature Language="F#" Value="abstract member Serialize : System.IO.Stream * obj -&gt; unit&#xA;override this.Serialize : System.IO.Stream * obj -&gt; unit" Usage="soapFormatter.Serialize (serializationStream, graph)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.IFormatter.Serialize(System.IO.Stream,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Formatters.Soap</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serializationStream" Type="System.IO.Stream" />
        <Parameter Name="graph" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="serializationStream">Der Stream, in den das Formatierungsprogramm die zu serialisierenden Daten schreibt.</param>
        <param name="graph">Das Objekt oder der Stamm des Objektdiagramms, das serialisiert werden soll. Alle untergeordneten Objekte dieses Stammobjekts werden automatisch serialisiert.</param>
        <summary>Serialisiert ein Objekt oder ein Objektdiagramm mit dem angegebenen Stamm in den angegebenen <see cref="T:System.IO.Stream" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 TimeSpan-Objekte werden gemäß dem ISO 8601:1998 section 5.5.3.2.1 "Alternative"-Standard serialisiert.  
  
   
  
## Examples  
 [!code-cpp[SoapFormatter Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapFormatter Example/CPP/soapformatter.cpp#1)]
 [!code-csharp[SoapFormatter Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapFormatter Example/CS/soapformatter.cs#1)]
 [!code-vb[SoapFormatter Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapFormatter Example/VB/soapformatter.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="serializationStream" /> ist <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Serialize">
      <MemberSignature Language="C#" Value="public void Serialize (System.IO.Stream serializationStream, object graph, System.Runtime.Remoting.Messaging.Header[] headers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Serialize(class System.IO.Stream serializationStream, object graph, class System.Runtime.Remoting.Messaging.Header[] headers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.Formatters.Soap.SoapFormatter.Serialize(System.IO.Stream,System.Object,System.Runtime.Remoting.Messaging.Header[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub Serialize (serializationStream As Stream, graph As Object, headers As Header())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Serialize(System::IO::Stream ^ serializationStream, System::Object ^ graph, cli::array &lt;System::Runtime::Remoting::Messaging::Header ^&gt; ^ headers);" />
      <MemberSignature Language="F#" Value="abstract member Serialize : System.IO.Stream * obj * System.Runtime.Remoting.Messaging.Header[] -&gt; unit&#xA;override this.Serialize : System.IO.Stream * obj * System.Runtime.Remoting.Messaging.Header[] -&gt; unit" Usage="soapFormatter.Serialize (serializationStream, graph, headers)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Remoting.Messaging.IRemotingFormatter.Serialize(System.IO.Stream,System.Object,System.Runtime.Remoting.Messaging.Header[])</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Formatters.Soap</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serializationStream" Type="System.IO.Stream" />
        <Parameter Name="graph" Type="System.Object" />
        <Parameter Name="headers" Type="System.Runtime.Remoting.Messaging.Header[]" />
      </Parameters>
      <Docs>
        <param name="serializationStream">Der Stream, in den das Formatierungsprogramm die zu serialisierenden Daten schreibt.</param>
        <param name="graph">Das Objekt oder der Stamm des Objektdiagramms, das serialisiert werden soll. Alle untergeordneten Objekte dieses Stammobjekts werden automatisch serialisiert.</param>
        <param name="headers">Remoteheader, die in die Serialisierung eingeschlossen werden sollen. Kann <see langword="null" /> sein.</param>
        <summary>Serialisiert ein Objekt oder ein Objektdiagramm mit dem angegeben Stammobjekt im SOAP-RPC-Format (Remote Procedure Call, Remoteprozeduraufruf) in den angegebenen <see cref="T:System.IO.Stream" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Header werden nur für bestimmte Remoting-Anwendungen verwendet.  
  
 TimeSpan-Objekte werden gemäß dem ISO 8601:1998 section 5.5.3.2.1 "Alternative"-Standard serialisiert.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="serializationStream" /> ist <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="SurrogateSelector">
      <MemberSignature Language="C#" Value="public System.Runtime.Serialization.ISurrogateSelector SurrogateSelector { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Runtime.Serialization.ISurrogateSelector SurrogateSelector" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Serialization.Formatters.Soap.SoapFormatter.SurrogateSelector" />
      <MemberSignature Language="VB.NET" Value="Public Property SurrogateSelector As ISurrogateSelector" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Runtime::Serialization::ISurrogateSelector ^ SurrogateSelector { System::Runtime::Serialization::ISurrogateSelector ^ get(); void set(System::Runtime::Serialization::ISurrogateSelector ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SurrogateSelector : System.Runtime.Serialization.ISurrogateSelector with get, set" Usage="System.Runtime.Serialization.Formatters.Soap.SoapFormatter.SurrogateSelector" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Runtime.Serialization.IFormatter.SurrogateSelector</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Formatters.Soap</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Serialization.ISurrogateSelector</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den <see cref="T:System.Runtime.Serialization.SurrogateSelector" /> ab, der die Typersetzung während der Serialisierung und Deserialisierung steuert, oder legt diesen fest.</summary>
        <value>Der mit diesem <see cref="T:System.Runtime.Serialization.SurrogateSelector" /> verwendete <see cref="T:System.Runtime.Serialization.Formatters.Soap.SoapFormatter" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wird von verwendet <xref:System.Runtime.Remoting> , um <xref:System.Runtime.Remoting.ObjRef> Instanzen für-Objekte zu generieren <xref:System.MarshalByRefObject> .  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TopObject">
      <MemberSignature Language="C#" Value="public System.Runtime.Serialization.Formatters.ISoapMessage TopObject { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Runtime.Serialization.Formatters.ISoapMessage TopObject" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Serialization.Formatters.Soap.SoapFormatter.TopObject" />
      <MemberSignature Language="VB.NET" Value="Public Property TopObject As ISoapMessage" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Runtime::Serialization::Formatters::ISoapMessage ^ TopObject { System::Runtime::Serialization::Formatters::ISoapMessage ^ get(); void set(System::Runtime::Serialization::Formatters::ISoapMessage ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TopObject : System.Runtime.Serialization.Formatters.ISoapMessage with get, set" Usage="System.Runtime.Serialization.Formatters.Soap.SoapFormatter.TopObject" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Formatters.Soap</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Serialization.Formatters.ISoapMessage</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die <see cref="T:System.Runtime.Serialization.Formatters.ISoapMessage" /> ab, in die das oberste SOAP-Objekt deserialisiert wird, oder legt diese fest.</summary>
        <value>Die <see cref="T:System.Runtime.Serialization.Formatters.ISoapMessage" />, in die das oberste SOAP-Objekt deserialisiert wird.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Eigenschaft wird für das SOAP-Format für Remote Prozedur Aufrufe (RPC) verwendet und gibt an, dass der oberste SOAP-Datensatz eine Remote aufgerufene Methode und kein Common Language Runtime Objekttyp ist.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TypeFormat">
      <MemberSignature Language="C#" Value="public System.Runtime.Serialization.Formatters.FormatterTypeStyle TypeFormat { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Runtime.Serialization.Formatters.FormatterTypeStyle TypeFormat" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Serialization.Formatters.Soap.SoapFormatter.TypeFormat" />
      <MemberSignature Language="VB.NET" Value="Public Property TypeFormat As FormatterTypeStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Runtime::Serialization::Formatters::FormatterTypeStyle TypeFormat { System::Runtime::Serialization::Formatters::FormatterTypeStyle get(); void set(System::Runtime::Serialization::Formatters::FormatterTypeStyle value); };" />
      <MemberSignature Language="F#" Value="member this.TypeFormat : System.Runtime.Serialization.Formatters.FormatterTypeStyle with get, set" Usage="System.Runtime.Serialization.Formatters.Soap.SoapFormatter.TypeFormat" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Formatters.Soap</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Serialization.Formatters.FormatterTypeStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft das Format für das Layout von Typbeschreibungen im serialisierten Stream ab oder legt dieses fest.</summary>
        <value>Das Format, in dem Typbeschreibungen im serialisierten Stream dargestellt werden.</value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Runtime.Serialization.Formatters.FormatterTypeStyle" />
      </Docs>
    </Member>
  </Members>
</Type>
