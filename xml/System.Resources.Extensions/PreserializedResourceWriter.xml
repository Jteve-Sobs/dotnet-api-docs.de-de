<Type Name="PreserializedResourceWriter" FullName="System.Resources.Extensions.PreserializedResourceWriter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="55cf0c444450b62058972546fff2a21b7e789fcd" /><Meta Name="ms.sourcegitcommit" Value="8b09499854b5b7b909802126edc1f1fca0054c10" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="02/01/2020" /><Meta Name="ms.locfileid" Value="76958454" /></Metadata><TypeSignature Language="C#" Value="public sealed class PreserializedResourceWriter : System.Resources.IResourceWriter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit PreserializedResourceWriter extends System.Object implements class System.IDisposable, class System.Resources.IResourceWriter" />
  <TypeSignature Language="DocId" Value="T:System.Resources.Extensions.PreserializedResourceWriter" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class PreserializedResourceWriter&#xA;Implements IResourceWriter" />
  <TypeSignature Language="C++ CLI" Value="public ref class PreserializedResourceWriter sealed : System::Resources::IResourceWriter" />
  <TypeSignature Language="F#" Value="type PreserializedResourceWriter = class&#xA;    interface IDisposable&#xA;    interface IResourceWriter" />
  <AssemblyInfo>
    <AssemblyName>System.Resources.Extensions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Resources.IResourceWriter</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Stellt APIs zur Verfügung, die <see cref="T:System.Resources.ResourceWriter" /> ähneln und vorserialisierte Ressourcendaten schreiben können.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PreserializedResourceWriter (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.Extensions.PreserializedResourceWriter.#ctor(System.IO.Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PreserializedResourceWriter(System::IO::Stream ^ stream);" />
      <MemberSignature Language="F#" Value="new System.Resources.Extensions.PreserializedResourceWriter : System.IO.Stream -&gt; System.Resources.Extensions.PreserializedResourceWriter" Usage="new System.Resources.Extensions.PreserializedResourceWriter stream" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Resources.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="stream">Der Ausgabestream.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Resources.Extensions.PreserializedResourceWriter" />-Klasse, die die Ressourcen in den angegebenen Stream schreibt.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><paramref name="stream" /> kann nicht geschrieben werden.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="stream" /> ist <see langword="null" /></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PreserializedResourceWriter (string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.Extensions.PreserializedResourceWriter.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (fileName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PreserializedResourceWriter(System::String ^ fileName);" />
      <MemberSignature Language="F#" Value="new System.Resources.Extensions.PreserializedResourceWriter : string -&gt; System.Resources.Extensions.PreserializedResourceWriter" Usage="new System.Resources.Extensions.PreserializedResourceWriter fileName" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Resources.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fileName">Der Name der Ausgabedatei.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Resources.Extensions.PreserializedResourceWriter" />-Klasse, die die Ressourcen in die angegebene Datei schreibt.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Der Jointyp (<paramref name="fileName" />) lautet <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="AddActivatorResource">
      <MemberSignature Language="C#" Value="public void AddActivatorResource (string name, System.IO.Stream value, string typeName, bool closeAfterWrite = false);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddActivatorResource(string name, class System.IO.Stream value, string typeName, bool closeAfterWrite) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.Extensions.PreserializedResourceWriter.AddActivatorResource(System.String,System.IO.Stream,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddActivatorResource (name As String, value As Stream, typeName As String, Optional closeAfterWrite As Boolean = false)" />
      <MemberSignature Language="F#" Value="member this.AddActivatorResource : string * System.IO.Stream * string * bool -&gt; unit" Usage="preserializedResourceWriter.AddActivatorResource (name, value, typeName, closeAfterWrite)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Resources.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.IO.Stream" />
        <Parameter Name="typeName" Type="System.String" />
        <Parameter Name="closeAfterWrite" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="name">Der Name der Ressource.</param>
        <param name="value">Der Wert der Ressource im <see cref="T:System.IO.Stream" />-Format, das vom Konstruktor des Typs verstanden wird.</param>
        <param name="typeName">Der durch die Assembly qualifizierte Typname der Ressource.</param>
        <param name="closeAfterWrite">Ein optionaler Wert, der angibt, ob der Stream nach dem Schreiben von Ressourcen geschlossen (<see langword="true" />) werden oder geöffnet bleiben (<see langword="false" />, der Standardwert) soll.</param>
        <summary>Fügt eine Ressource des angegebenen Typs hinzu, der durch einen <see cref="T:System.IO.Stream" />-Wert dargestellt wird, der beim Lesen der Ressource an den Konstruktor des Typs übergeben wird.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="name" />, <paramref name="typeName" /> oder <paramref name="value" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">Der Objekttyp ist <see cref="T:System.IO.Stream" />, aber er ist nicht suchbar.</exception>
      </Docs>
    </Member>
    <Member MemberName="AddBinaryFormattedResource">
      <MemberSignature Language="C#" Value="public void AddBinaryFormattedResource (string name, byte[] value, string typeName = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddBinaryFormattedResource(string name, unsigned int8[] value, string typeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.Extensions.PreserializedResourceWriter.AddBinaryFormattedResource(System.String,System.Byte[],System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddBinaryFormattedResource (name As String, value As Byte(), Optional typeName As String = null)" />
      <MemberSignature Language="F#" Value="member this.AddBinaryFormattedResource : string * byte[] * string -&gt; unit" Usage="preserializedResourceWriter.AddBinaryFormattedResource (name, value, typeName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Resources.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.Byte[]" />
        <Parameter Name="typeName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Der Name der Ressource.</param>
        <param name="value">Ein Bytearray mit dem Wert der Ressource im <c>Byte[]</c>-Format, das von <see cref="T:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter" /> erkannt wird.</param>
        <param name="typeName">Der optionale, durch die Assembly qualifizierte Typname der Ressource. Standardwert: <see langword="null" />.</param>
        <summary>Fügt eine Ressource des angegebenen Typs hinzu, dargestellt durch ein Bytearray, das beim Lesen der Ressource an <see cref="T:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter" /> übergeben wird.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="name" /> oder <paramref name="value" /> ist <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="AddResource">
      <MemberSignature Language="C#" Value="public void AddResource (string name, byte[] value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddResource(string name, unsigned int8[] value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.Extensions.PreserializedResourceWriter.AddResource(System.String,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddResource (name As String, value As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AddResource(System::String ^ name, cli::array &lt;System::Byte&gt; ^ value);" />
      <MemberSignature Language="F#" Value="abstract member AddResource : string * byte[] -&gt; unit&#xA;override this.AddResource : string * byte[] -&gt; unit" Usage="preserializedResourceWriter.AddResource (name, value)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Resources.IResourceWriter.AddResource(System.String,System.Byte[])</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Resources.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="name">Der Name der Ressource.</param>
        <param name="value">Das Bytearray, das als Ressource hinzugefügt werden soll.</param>
        <summary>Fügt der Liste von Ressourcen, die in eine Datei geschrieben werden sollen, ein Bytearray als benannte Ressource hinzu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

Die Ressourcen werden erst geschrieben, wenn <xref:System.Resources.Extensions.PreserializedResourceWriter.Generate> aufgerufen wird.

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Der Name ist <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Die Ressourcenliste ist <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="AddResource">
      <MemberSignature Language="C#" Value="public void AddResource (string name, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddResource(string name, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.Extensions.PreserializedResourceWriter.AddResource(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddResource (name As String, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AddResource(System::String ^ name, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member AddResource : string * obj -&gt; unit&#xA;override this.AddResource : string * obj -&gt; unit" Usage="preserializedResourceWriter.AddResource (name, value)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Resources.IResourceWriter.AddResource(System.String,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Resources.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="name">Der Name der Ressource.</param>
        <param name="value">Das Objekt, das als Ressource hinzugefügt werden soll.</param>
        <summary>Fügt der Liste von Ressourcen, die in eine Datei geschrieben werden sollen, ein Objekt als benannte Ressource hinzu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

Die Ressourcen werden erst geschrieben, wenn <xref:System.Resources.Extensions.PreserializedResourceWriter.Generate> aufgerufen wird.

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Der Name ist <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Die Ressourcenliste ist <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">Der Stream ist nicht suchbar.</exception>
      </Docs>
    </Member>
    <Member MemberName="AddResource">
      <MemberSignature Language="C#" Value="public void AddResource (string name, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddResource(string name, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.Extensions.PreserializedResourceWriter.AddResource(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddResource (name As String, value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AddResource(System::String ^ name, System::String ^ value);" />
      <MemberSignature Language="F#" Value="abstract member AddResource : string * string -&gt; unit&#xA;override this.AddResource : string * string -&gt; unit" Usage="preserializedResourceWriter.AddResource (name, value)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Resources.IResourceWriter.AddResource(System.String,System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Resources.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Der Name der Ressource.</param>
        <param name="value">Die Zeichenfolge, die als Ressource hinzugefügt werden soll.</param>
        <summary>Fügt der Liste von Ressourcen, die in eine Datei geschrieben werden sollen, eine Zeichenfolge als benannte Ressource hinzu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

Die Ressourcen werden erst geschrieben, wenn <xref:System.Resources.Extensions.PreserializedResourceWriter.Generate> aufgerufen wird.

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Der Name ist <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Die Ressourcenliste ist <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="AddResource">
      <MemberSignature Language="C#" Value="public void AddResource (string name, System.IO.Stream value, bool closeAfterWrite = false);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddResource(string name, class System.IO.Stream value, bool closeAfterWrite) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.Extensions.PreserializedResourceWriter.AddResource(System.String,System.IO.Stream,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddResource (name As String, value As Stream, Optional closeAfterWrite As Boolean = false)" />
      <MemberSignature Language="F#" Value="member this.AddResource : string * System.IO.Stream * bool -&gt; unit" Usage="preserializedResourceWriter.AddResource (name, value, closeAfterWrite)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Resources.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.IO.Stream" />
        <Parameter Name="closeAfterWrite" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="name">Der Name der Ressource.</param>
        <param name="value">Der Stream, der als Ressource hinzugefügt werden soll.</param>
        <param name="closeAfterWrite">Ein optionaler Wert, der angibt, ob der Stream nach dem Schreiben von Ressourcen geschlossen (<see langword="true" />) werden oder geöffnet bleiben (<see langword="false" />, der Standardwert) soll.</param>
        <summary>Fügt der Liste von Ressourcen, die in eine Datei geschrieben werden sollen, ein <see cref="T:System.IO.Stream" />-Element als benannte Ressource hinzu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

Die Ressourcen werden erst geschrieben, wenn <xref:System.Resources.Extensions.PreserializedResourceWriter.Generate> aufgerufen wird.

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddResource">
      <MemberSignature Language="C#" Value="public void AddResource (string name, string value, string typeName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddResource(string name, string value, string typeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.Extensions.PreserializedResourceWriter.AddResource(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddResource (name As String, value As String, typeName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddResource(System::String ^ name, System::String ^ value, System::String ^ typeName);" />
      <MemberSignature Language="F#" Value="member this.AddResource : string * string * string -&gt; unit" Usage="preserializedResourceWriter.AddResource (name, value, typeName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Resources.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="typeName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Der Name der Ressource.</param>
        <param name="value">Der Wert der Ressource im Zeichenfolgenformat, das vom <see cref="T:System.ComponentModel.TypeConverter" />-Element des Typs verstanden wird.</param>
        <param name="typeName">Der durch die Assembly qualifizierte Typname der Ressource.</param>
        <summary>Fügt eine Ressource des angegebenen Typs hinzu, der durch einen Zeichenfolgenwert dargestellt wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  

## Remarks

Wenn der Typ ein primitiver Typ ist, wird der Wert <xref:System.ComponentModel.TypeConverter> vom Writer in diesen primitiven Typ konvertiert und in den Ressourcen im Binärformat gespeichert. Wenn der Typ kein primitiver Typ ist, wird der Zeichen folgen Wert in den Ressourcen als Zeichenfolge gespeichert und beim Lesen der Ressource in eine <xref:System.ComponentModel.TypeConverter> für den Typ konvertiert. Diese Konvertierung wird ausgeführt, um zu vermeiden, dass beim Schreiben von Ressourcen beliebige Typen aktiviert werden.

         ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddTypeConverterResource">
      <MemberSignature Language="C#" Value="public void AddTypeConverterResource (string name, byte[] value, string typeName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddTypeConverterResource(string name, unsigned int8[] value, string typeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.Extensions.PreserializedResourceWriter.AddTypeConverterResource(System.String,System.Byte[],System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddTypeConverterResource (name As String, value As Byte(), typeName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddTypeConverterResource(System::String ^ name, cli::array &lt;System::Byte&gt; ^ value, System::String ^ typeName);" />
      <MemberSignature Language="F#" Value="member this.AddTypeConverterResource : string * byte[] * string -&gt; unit" Usage="preserializedResourceWriter.AddTypeConverterResource (name, value, typeName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Resources.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.Byte[]" />
        <Parameter Name="typeName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Der Name der Ressource.</param>
        <param name="value">Ein Bytearray, das den Wert der Ressource in einem Format enthält, das vom <see cref="T:System.ComponentModel.TypeConverter" />-Element des Typs verstanden wird.</param>
        <param name="typeName">Der durch die Assembly qualifizierte Typname der Ressource.</param>
        <summary>Fügt eine Ressource des angegebenen Typs hinzu, dargestellt durch ein Bytearray, das beim Lesen der Ressource an das <see cref="T:System.ComponentModel.TypeConverter" />-Element des Typs übergeben wird.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.Extensions.PreserializedResourceWriter.Close" />
      <MemberSignature Language="VB.NET" Value="Public Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Close();" />
      <MemberSignature Language="F#" Value="abstract member Close : unit -&gt; unit&#xA;override this.Close : unit -&gt; unit" Usage="preserializedResourceWriter.Close " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Resources.IResourceWriter.Close</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Resources.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ruft <see cref="M:System.Resources.Extensions.PreserializedResourceWriter.Dispose" /> auf, um den Ressourcenwriter zu verwerfen.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">Die Ressourcenliste ist <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.Extensions.PreserializedResourceWriter.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="preserializedResourceWriter.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Resources.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ruft <see cref="M:System.Resources.Extensions.PreserializedResourceWriter.Generate" /> auf, um alle Ressourcen im Standardformat des Systems in den Ausgabestream zu schreiben.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">Die Ressourcenliste ist <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Generate">
      <MemberSignature Language="C#" Value="public void Generate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Generate() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.Extensions.PreserializedResourceWriter.Generate" />
      <MemberSignature Language="VB.NET" Value="Public Sub Generate ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Generate();" />
      <MemberSignature Language="F#" Value="abstract member Generate : unit -&gt; unit&#xA;override this.Generate : unit -&gt; unit" Usage="preserializedResourceWriter.Generate " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Resources.IResourceWriter.Generate</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Resources.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Schreibt alle Ressourcen in den Ausgabestream.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  

## Remarks

Wenn die dem Writer hinzugefügten Ressourcen im Standardformat des Systems dargestellt werden können, das vom <xref:System.Resources.ResourceReader>interpretiert wird, werden Sie als solche geschrieben. Wenn für die Ressourcen eine andere Lauf Zeit Deserialisierung erforderlich ist, als vom System Standardformat (<xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter>) unterstützt, dann schreiben wir Sie mit dem Format, das von <xref:System.Resources.Extensions.DeserializingResourceReader>interpretiert wird.

Wenn während der Objektserialisierung oder während der e/a-Vorgänge eine Ausnahme auftritt, wird die resources-Datei geschlossen und gelöscht, da Sie höchstwahrscheinlich ungültig ist.

         ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Die Ressourcenliste ist <see langword="null" />.</exception>
      </Docs>
    </Member>
  </Members>
</Type>
