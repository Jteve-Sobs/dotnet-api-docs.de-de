<Type Name="SoundPlayer" FullName="System.Media.SoundPlayer">
  <Metadata><Meta Name="ms.openlocfilehash" Value="0f2e7e82415aef1b3f14711e21b3cb608dac5d06" /><Meta Name="ms.sourcegitcommit" Value="8dc7427b3f8ede13c290b671feeb1dc33978e582" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="02/06/2020" /><Meta Name="ms.locfileid" Value="77043350" /></Metadata><TypeSignature Language="C#" Value="public class SoundPlayer : System.ComponentModel.Component, System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable SoundPlayer extends System.ComponentModel.Component implements class System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="DocId" Value="T:System.Media.SoundPlayer" />
  <TypeSignature Language="VB.NET" Value="Public Class SoundPlayer&#xA;Inherits Component&#xA;Implements ISerializable" />
  <TypeSignature Language="C++ CLI" Value="public ref class SoundPlayer : System::ComponentModel::Component, System::Runtime::Serialization::ISerializable" />
  <TypeSignature Language="F#" Value="type SoundPlayer = class&#xA;    inherit Component&#xA;    interface ISerializable" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Windows.Extensions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.Component</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.ISerializable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.ComponentModel.ToolboxItem(false)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Steuert die Wiedergabe eines Sounds aus einer WAV-Datei.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Media.SoundPlayer>-Klasse stellt eine einfache Schnittstelle zum Laden und Wiedergeben einer WAV-Datei bereit. Die <xref:System.Media.SoundPlayer>-Klasse unterstützt das Laden einer WAV-Datei aus einem Dateipfad, einer URL, einer <xref:System.IO.Stream>, die eine WAV-Datei enthält, oder einer eingebetteten Ressource, die eine WAV-Datei enthält.  
  
 Um einen Sound mit der <xref:System.Media.SoundPlayer>-Klasse wiederzugeben, konfigurieren Sie eine <xref:System.Media.SoundPlayer> mit einem Pfad zur WAV-Datei, und nennen Sie eine der Wiedergabe Methoden. Sie können die zu Wiedergabe enden WAV-Datei mithilfe eines Konstruktors oder durch Festlegen der <xref:System.Media.SoundPlayer.SoundLocation%2A>-oder <xref:System.Media.SoundPlayer.Stream%2A>-Eigenschaft identifizieren. Die Datei kann vor der Wiedergabe mit einer der Load-Methoden geladen werden, oder der Ladevorgang kann verzögert werden, bis eine der Wiedergabe Methoden aufgerufen wird. Eine <xref:System.Media.SoundPlayer>, die zum Laden einer WAV-Datei aus einer <xref:System.IO.Stream> oder URL konfiguriert ist, muss die WAV-Datei in den Arbeitsspeicher laden, bevor die Wiedergabe beginnt.  
  
 Eine WAV-Datei kann synchron oder asynchron geladen oder wiedergegeben werden. Wenn Sie eine synchrone Lade-oder Wiedergabemethode aufrufen, wartet der aufrufende Thread, bis die Methode zurückkehrt, was dazu führen kann, dass das Zeichnen und andere Ereignisse unterbrochen werden. Wenn Sie eine asynchrone Lade-oder Wiedergabemethode aufrufen, kann der aufrufende Thread ohne Unterbrechung fortgesetzt werden. Weitere Informationen zu asynchronen Methoden aufrufen finden Sie unter Gewusst [wie: Ausführen eines Vorgangs im Hintergrund](~/docs/framework/winforms/controls/how-to-run-an-operation-in-the-background.md).  
  
 Wenn eine <xref:System.Media.SoundPlayer> das Laden einer WAV-Datei abgeschlossen hat, löst Sie das <xref:System.Media.SoundPlayer.LoadCompleted>-Ereignis aus. Sie können die <xref:System.ComponentModel.AsyncCompletedEventArgs> in Ihrem Ereignishandler überprüfen, um zu ermitteln, ob die Last erfolgreich oder fehlerhaft war. Das <xref:System.Media.SoundPlayer.SoundLocationChanged>-Ereignis wird ausgelöst, wenn die Audioquelle auf einen neuen Dateipfad oder eine neue URL festgelegt ist. Das <xref:System.Media.SoundPlayer.StreamChanged>-Ereignis wird ausgelöst, wenn die Audioquelle auf einen neuen <xref:System.IO.Stream>festgelegt ist. Weitere Informationen zum Behandeln von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 Weitere Informationen zu <xref:System.Media.SoundPlayer>finden Sie unter [Übersicht über die SoundPlayer-Klasse](~/docs/framework/winforms/controls/soundplayer-class-overview.md).  
  
> [!NOTE]
>  Die <xref:System.Media.SoundPlayer> Klasse kann keine anderen Dateitypen, wie z. b. WMA oder. MP3, wiedergeben. Wenn Sie andere Dateitypen wiedergeben möchten, können Sie das Windows Media Player-Steuerelement verwenden. Weitere Informationen finden Sie unter [Verwenden des Windows Media Player-Steuer Elements in einer .NET Framework-Lösung](https://go.microsoft.com/fwlink/?LinkId=131267) und [Windows Media Player-Objektmodell Referenz C# für Visual Basic .net und](https://go.microsoft.com/fwlink/?LinkId=131269) im Windows Media Player SDK.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die Verwendung der <xref:System.Media.SoundPlayer>-Klasse für die Wiedergabe von WAV-Dateien aus einem lokalen Pfad oder einem Uniform Resource Identifier (URI) veranschaulicht.  
  
 [!code-cpp[System.Windows.Forms.Sound#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Sound/CPP/soundtestform.cpp#1)]
 [!code-csharp[System.Windows.Forms.Sound#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Sound/CS/soundtestform.cs#1)]
 [!code-vb[System.Windows.Forms.Sound#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Sound/VB/soundtestform.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Media.SystemSounds" />
    <related type="Article" href="~/docs/framework/winforms/controls/soundplayer-class-overview.md">Übersicht über die SoundPlayer-Klasse (Windows Forms)</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initialisiert eine neue Instanz der Klasse <see cref="T:System.Media.SoundPlayer" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SoundPlayer ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Media.SoundPlayer.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SoundPlayer();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der Klasse <see cref="T:System.Media.SoundPlayer" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieser Konstruktor initialisiert eine <xref:System.Media.SoundPlayer> ohne Audioquelle. Bis die Konfiguration mit einem Audioquellpfad erfolgt ist, wird der <xref:System.Media.SoundPlayer> einen Signal abspielen, wenn eine der Wiedergabe Methoden aufgerufen wird.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/soundplayer-class-overview.md">Übersicht über die SoundPlayer-Klasse (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SoundPlayer (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Media.SoundPlayer.#ctor(System.IO.Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SoundPlayer(System::IO::Stream ^ stream);" />
      <MemberSignature Language="F#" Value="new System.Media.SoundPlayer : System.IO.Stream -&gt; System.Media.SoundPlayer" Usage="new System.Media.SoundPlayer stream" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="stream">Ein <see cref="T:System.IO.Stream" /> zu einer WAV-Datei.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Media.SoundPlayer" />-Klasse und fügt die WAV-Datei im angegebenen <see cref="T:System.IO.Stream" /> an.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Das <xref:System.IO.Stream>, das an den `stream`-Parameter übergeben wird, sollte ein <xref:System.IO.Stream> sein, das eine WAV-Datei enthält. Die Daten, die von der <xref:System.IO.Stream.Read%2A>-Methode der <xref:System.IO.Stream> zurückgegeben werden, sollten die Daten in einer WAV-Datei sein.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/soundplayer-class-overview.md">Übersicht über die SoundPlayer-Klasse (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SoundPlayer (string soundLocation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string soundLocation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Media.SoundPlayer.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (soundLocation As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SoundPlayer(System::String ^ soundLocation);" />
      <MemberSignature Language="F#" Value="new System.Media.SoundPlayer : string -&gt; System.Media.SoundPlayer" Usage="new System.Media.SoundPlayer soundLocation" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="soundLocation" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="soundLocation">Der Speicherort einer zu ladenden WAV-Datei.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Media.SoundPlayer" />-Klasse und fügt die angegebene WAV-Datei an.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die an den `soundLocation`-Parameter übergebenen Zeichenfolge kann entweder ein Dateipfad oder eine URL zu einer WAV-Datei sein. Wenn der Pfad oder die URL ungültig ist, wird der <xref:System.Media.SoundPlayer> weiterhin erstellt, bei nachfolgenden Aufrufen einer Lade-oder Wiedergabemethode tritt jedoch ein Fehler auf.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.UriFormatException">Der von der <paramref name="soundLocation" /> angegebene URL-Wert kann nicht aufgelöst werden.</exception>
        <related type="Article" href="~/docs/framework/winforms/controls/soundplayer-class-overview.md">Übersicht über die SoundPlayer-Klasse (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected SoundPlayer (System.Runtime.Serialization.SerializationInfo serializationInfo, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Serialization.SerializationInfo serializationInfo, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Media.SoundPlayer.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; SoundPlayer(System::Runtime::Serialization::SerializationInfo ^ serializationInfo, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="new System.Media.SoundPlayer : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; System.Media.SoundPlayer" Usage="new System.Media.SoundPlayer (serializationInfo, context)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="serializationInfo" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="serializationInfo">Die für die Deserialisierung zu verwendende <see cref="T:System.Runtime.Serialization.SerializationInfo" />-Klasse.</param>
        <param name="context">Das für die Deserialisierung zu verwendende Ziel.</param>
        <summary>Initialisiert eine neue Instanz der Klasse <see cref="T:System.Media.SoundPlayer" />.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.UriFormatException">Die in der <see cref="P:System.Media.SoundPlayer.SoundLocation" /> angegebene <paramref name="serializationInfo" /> kann nicht aufgelöst werden.</exception>
        <related type="Article" href="~/docs/framework/winforms/controls/soundplayer-class-overview.md">Übersicht über die SoundPlayer-Klasse (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="IsLoadCompleted">
      <MemberSignature Language="C#" Value="public bool IsLoadCompleted { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsLoadCompleted" />
      <MemberSignature Language="DocId" Value="P:System.Media.SoundPlayer.IsLoadCompleted" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsLoadCompleted As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsLoadCompleted { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsLoadCompleted : bool" Usage="System.Media.SoundPlayer.IsLoadCompleted" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob das Laden einer WAV-Datei ordnungsgemäß abgeschlossen wurde.</summary>
        <value><see langword="true" />, wenn die WAV-Datei geladen wurde; <see langword="false" />, wenn die WAV-Datei noch nicht geladen wurde.</value>
        <remarks>To be added.</remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/soundplayer-class-overview.md">Übersicht über die SoundPlayer-Klasse (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Media.SoundPlayer.Load" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load();" />
      <MemberSignature Language="F#" Value="member this.Load : unit -&gt; unit" Usage="soundPlayer.Load " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Lädt einen Sound synchron.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Media.SoundPlayer.Load%2A>-Methode verwendet den aktuellen Thread, um eine WAV-Datei zu laden. Dadurch wird verhindert, dass der Thread andere Nachrichten verarbeitet, bis der Ladevorgang beendet ist.  
  
> [!CAUTION]
>  Die <xref:System.Media.SoundPlayer.Load%2A>-Methode kann beim Laden einer großen WAV-Datei zu einer Verzögerung führen. Außerdem werden das Zeichnen und andere Ereignisse blockiert, bis der Ladevorgang abgeschlossen ist. Verwenden Sie die <xref:System.Media.SoundPlayer.LoadAsync%2A>-Methode zum asynchronen Laden eines Sounds, sodass der aufrufende Thread ohne Unterbrechung fortgesetzt werden kann.  
  
 Diese Methode löst das <xref:System.Media.SoundPlayer.LoadCompleted>-Ereignis aus, wenn der Ladevorgang abgeschlossen ist, auch wenn die Last nicht erfolgreich war.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Media.SoundPlayer.LoadAsync%2A>-Methode verwendet wird, um eine WAV-Datei an eine Instanz der <xref:System.Media.SoundPlayer>-Klasse anzufügen. Dieses Codebeispiel ist Teil eines größeren Beispiels, das für die <xref:System.Media.SoundPlayer>-Klasse bereitgestellt wird.  
  
 [!code-cpp[System.Windows.Forms.Sound#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Sound/CPP/soundtestform.cpp#2)]
 [!code-csharp[System.Windows.Forms.Sound#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Sound/CS/soundtestform.cs#2)]
 [!code-vb[System.Windows.Forms.Sound#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Sound/VB/soundtestform.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ServiceProcess.TimeoutException">Die beim Ladevorgang verstrichene Zeit übersteigt die vom <see cref="P:System.Media.SoundPlayer.LoadTimeout" /> angegebene Zeitspanne (in Millisekunden).</exception>
        <exception cref="T:System.IO.FileNotFoundException">Die durch <see cref="P:System.Media.SoundPlayer.SoundLocation" /> angegebene Datei kann nicht gefunden werden.</exception>
        <permission cref="T:System.Net.WebPermission">für den Zugriff auf http-Internet Ressourcen. Zugehörige Enumeration: <see cref="F:System.Net.NetworkAccess.Connect" /></permission>
        <altmember cref="M:System.Media.SoundPlayer.LoadAsync" />
        <altmember cref="E:System.Media.SoundPlayer.LoadCompleted" />
        <related type="Article" href="~/docs/framework/winforms/controls/soundplayer-class-overview.md">Übersicht über die SoundPlayer-Klasse (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="LoadAsync">
      <MemberSignature Language="C#" Value="public void LoadAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void LoadAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Media.SoundPlayer.LoadAsync" />
      <MemberSignature Language="VB.NET" Value="Public Sub LoadAsync ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void LoadAsync();" />
      <MemberSignature Language="F#" Value="member this.LoadAsync : unit -&gt; unit" Usage="soundPlayer.LoadAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Lädt eine WAV-Datei aus einem Stream oder von einer Webressource mithilfe eines neuen Threads.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn eine <xref:System.Media.SoundPlayer> so konfiguriert ist, dass eine WAV-Datei aus einer <xref:System.IO.Stream> oder Webressource geladen wird, beginnt diese Methode mit dem Laden einer WAV-Datei aus dem Speicherort mithilfe eines neuen Threads.  
  
 Diese Methode löst das <xref:System.Media.SoundPlayer.LoadCompleted>-Ereignis aus, wenn der Ladevorgang abgeschlossen ist, auch wenn die Last nicht erfolgreich war.  
  
 Wenn eine <xref:System.Media.SoundPlayer> so konfiguriert ist, dass eine WAV-Datei aus einem lokalen Dateipfad geladen wird, führt diese Methode keine Aktion aus, da das Laden verzögert wird, bis die Wiedergabe beginnt.  
  
 Weitere Informationen zum asynchronen Laden finden Sie unter Gewusst [wie: Asynchrones Laden eines Sounds in einem Windows Form](~/docs/framework/winforms/controls/how-to-load-a-sound-asynchronously-within-a-windows-form.md).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Media.SoundPlayer.LoadAsync%2A>-Methode verwendet wird, um eine WAV-Datei asynchron für die Verwendung durch eine Instanz der <xref:System.Media.SoundPlayer>-Klasse zu laden. Dieses Codebeispiel ist Teil eines größeren Beispiels, das für die <xref:System.Media.SoundPlayer>-Klasse bereitgestellt wird.  
  
 [!code-cpp[System.Windows.Forms.Sound#3](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Sound/CPP/soundtestform.cpp#3)]
 [!code-csharp[System.Windows.Forms.Sound#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Sound/CS/soundtestform.cs#3)]
 [!code-vb[System.Windows.Forms.Sound#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Sound/VB/soundtestform.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ServiceProcess.TimeoutException">Die beim Ladevorgang verstrichene Zeit übersteigt die vom <see cref="P:System.Media.SoundPlayer.LoadTimeout" /> angegebene Zeitspanne (in Millisekunden).</exception>
        <exception cref="T:System.IO.FileNotFoundException">Die durch <see cref="P:System.Media.SoundPlayer.SoundLocation" /> angegebene Datei kann nicht gefunden werden.</exception>
        <altmember cref="M:System.Media.SoundPlayer.Load" />
        <altmember cref="E:System.Media.SoundPlayer.LoadCompleted" />
        <related type="Article" href="~/docs/framework/winforms/controls/soundplayer-class-overview.md">Übersicht über die SoundPlayer-Klasse (Windows Forms)</related>
        <related type="Article" href="https://msdn.microsoft.com/library/3b6a9296-1d5e-4d52-a4ba-94366d6fe302">Gewusst wie: Asynchrones Laden eines Sounds in einem Windows Form</related>
      </Docs>
    </Member>
    <Member MemberName="LoadCompleted">
      <MemberSignature Language="C#" Value="public event System.ComponentModel.AsyncCompletedEventHandler LoadCompleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.ComponentModel.AsyncCompletedEventHandler LoadCompleted" />
      <MemberSignature Language="DocId" Value="E:System.Media.SoundPlayer.LoadCompleted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event LoadCompleted As AsyncCompletedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::ComponentModel::AsyncCompletedEventHandler ^ LoadCompleted;" />
      <MemberSignature Language="F#" Value="member this.LoadCompleted : System.ComponentModel.AsyncCompletedEventHandler " Usage="member this.LoadCompleted : System.ComponentModel.AsyncCompletedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.AsyncCompletedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt nach dem ordnungsgemäßen oder fehlgeschlagenen Laden einer WAV-Datei ein.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieses Ereignis wird ausgelöst, wenn das Laden einer WAV-Datei beendet ist. Die Ereignis Argumente geben an, ob die Last des Sounds erfolgreich oder fehlerhaft abgeschlossen wurde.  
  
 Weitere Informationen zum Behandeln von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die Verwendung des <xref:System.Media.SoundPlayer.OnLoadCompleted%2A> Ereignis Handlers veranschaulicht, um eine Benachrichtigung zu erhalten, dass der Inhalt einer WAV-Datei geladen wurde. Dieses Codebeispiel ist Teil eines größeren Beispiels, das für die <xref:System.Media.SoundPlayer>-Klasse bereitgestellt wird.  
  
 [!code-cpp[System.Windows.Forms.Sound#8](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Sound/CPP/soundtestform.cpp#8)]
 [!code-csharp[System.Windows.Forms.Sound#8](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Sound/CS/soundtestform.cs#8)]
 [!code-vb[System.Windows.Forms.Sound#8](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Sound/VB/soundtestform.vb#8)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.AsyncCompletedEventHandler" />
        <related type="Article" href="~/docs/framework/winforms/controls/soundplayer-class-overview.md">Übersicht über die SoundPlayer-Klasse (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="LoadTimeout">
      <MemberSignature Language="C#" Value="public int LoadTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 LoadTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Media.SoundPlayer.LoadTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Property LoadTimeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int LoadTimeout { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.LoadTimeout : int with get, set" Usage="System.Media.SoundPlayer.LoadTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Zeitspanne (in Millisekunden) ab, in der die WAV-Datei geladen werden muss, oder legt diese fest.</summary>
        <value>Die Anzahl der Millisekunden, die gewartet werden soll. Der Standardwert ist 10000 (100 Sekunden).</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Nachdem diese Zeit abgelaufen ist, wird das Laden abgebrochen, und es wird eine <xref:System.ServiceProcess.TimeoutException> Ausnahme ausgelöst.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/soundplayer-class-overview.md">Übersicht über die SoundPlayer-Klasse (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="OnLoadCompleted">
      <MemberSignature Language="C#" Value="protected virtual void OnLoadCompleted (System.ComponentModel.AsyncCompletedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnLoadCompleted(class System.ComponentModel.AsyncCompletedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Media.SoundPlayer.OnLoadCompleted(System.ComponentModel.AsyncCompletedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnLoadCompleted (e As AsyncCompletedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnLoadCompleted(System::ComponentModel::AsyncCompletedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnLoadCompleted : System.ComponentModel.AsyncCompletedEventArgs -&gt; unit&#xA;override this.OnLoadCompleted : System.ComponentModel.AsyncCompletedEventArgs -&gt; unit" Usage="soundPlayer.OnLoadCompleted e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.ComponentModel.AsyncCompletedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.ComponentModel.AsyncCompletedEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Media.SoundPlayer.LoadCompleted" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode wird aufgerufen, wenn das Laden einer WAV-Datei beendet ist.  
  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 Mit der <xref:System.Media.SoundPlayer.OnLoadCompleted%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Wenn Sie <see cref="M:System.Media.SoundPlayer.OnLoadCompleted(System.ComponentModel.AsyncCompletedEventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Media.SoundPlayer.OnLoadCompleted(System.ComponentModel.AsyncCompletedEventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</para></block>
        <altmember cref="E:System.Media.SoundPlayer.LoadCompleted" />
        <related type="Article" href="~/docs/framework/winforms/controls/soundplayer-class-overview.md">Übersicht über die SoundPlayer-Klasse (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="OnSoundLocationChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnSoundLocationChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSoundLocationChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Media.SoundPlayer.OnSoundLocationChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSoundLocationChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSoundLocationChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnSoundLocationChanged : EventArgs -&gt; unit&#xA;override this.OnSoundLocationChanged : EventArgs -&gt; unit" Usage="soundPlayer.OnSoundLocationChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.EventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Media.SoundPlayer.SoundLocationChanged" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode wird aufgerufen, wenn ein neuer Audioquellpfad für diese <xref:System.Media.SoundPlayer> festgelegt wurde.  
  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter Gewusst wie: Bereitstellen von Ereignis Funktionen und [behandeln und Auswerfen von Ereignissen](~/docs/standard/events/index.md).  
  
 Mit der <xref:System.Media.SoundPlayer.OnSoundLocationChanged%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Wenn Sie <see cref="M:System.Media.SoundPlayer.OnSoundLocationChanged(System.EventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Media.SoundPlayer.OnSoundLocationChanged(System.EventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</para></block>
        <altmember cref="P:System.Media.SoundPlayer.SoundLocation" />
        <related type="Article" href="~/docs/framework/winforms/controls/soundplayer-class-overview.md">Übersicht über die SoundPlayer-Klasse (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="OnStreamChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnStreamChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnStreamChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Media.SoundPlayer.OnStreamChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnStreamChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnStreamChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnStreamChanged : EventArgs -&gt; unit&#xA;override this.OnStreamChanged : EventArgs -&gt; unit" Usage="soundPlayer.OnStreamChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.EventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Media.SoundPlayer.StreamChanged" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode wird aufgerufen, wenn eine neue <xref:System.IO.Stream> Audioquelle für diese <xref:System.Media.SoundPlayer> festgelegt wurde.  
  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 Mit der <xref:System.Media.SoundPlayer.OnStreamChanged%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Wenn Sie <see cref="M:System.Media.SoundPlayer.OnStreamChanged(System.EventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Media.SoundPlayer.OnStreamChanged(System.EventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</para></block>
        <altmember cref="P:System.Media.SoundPlayer.Stream" />
        <related type="Article" href="~/docs/framework/winforms/controls/soundplayer-class-overview.md">Übersicht über die SoundPlayer-Klasse (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="Play">
      <MemberSignature Language="C#" Value="public void Play ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Play() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Media.SoundPlayer.Play" />
      <MemberSignature Language="VB.NET" Value="Public Sub Play ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Play();" />
      <MemberSignature Language="F#" Value="member this.Play : unit -&gt; unit" Usage="soundPlayer.Play " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Lädt zunächst die WAV-Datei, sofern sie nicht bereits geladen ist, und gibt sie mithilfe eines neuen Threads wieder.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Media.SoundPlayer.Play%2A>-Methode gibt den Sound mithilfe eines neuen Threads wieder. Wenn Sie <xref:System.Media.SoundPlayer.Play%2A> aufgerufen haben, bevor die WAV-Datei in den Arbeitsspeicher geladen wurde, wird die WAV-Datei geladen, bevor die Wiedergabe gestartet wird. Sie können die <xref:System.Media.SoundPlayer.LoadAsync%2A>-oder <xref:System.Media.SoundPlayer.Load%2A>-Methode verwenden, um die WAV-Datei im Voraus in den Arbeitsspeicher zu laden. Nachdem eine WAV-Datei erfolgreich aus einer <xref:System.IO.Stream> oder URL geladen wurde, müssen zukünftige Aufrufe von Wiedergabe Methoden für die <xref:System.Media.SoundPlayer> die WAV-Datei erst dann erneut laden, wenn sich der Pfad für den Sound ändert.  
  
 Wenn die WAV-Datei nicht angegeben wurde oder die Datei nicht geladen werden kann, gibt die <xref:System.Media.SoundPlayer.Play%2A>-Methode den Standard Sound von Signal Tons wieder.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Media.SoundPlayer.Play%2A>-Methode verwendet wird, um eine WAV-Datei asynchron wiederzugeben. Dieses Codebeispiel ist Teil eines größeren Beispiels, das für die <xref:System.Media.SoundPlayer>-Klasse bereitgestellt wird.  
  
 [!code-cpp[System.Windows.Forms.Sound#5](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Sound/CPP/soundtestform.cpp#5)]
 [!code-csharp[System.Windows.Forms.Sound#5](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Sound/CS/soundtestform.cs#5)]
 [!code-vb[System.Windows.Forms.Sound#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Sound/VB/soundtestform.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ServiceProcess.TimeoutException">Die beim Ladevorgang verstrichene Zeit übersteigt die vom <see cref="P:System.Media.SoundPlayer.LoadTimeout" /> angegebene Zeitspanne (in Millisekunden).</exception>
        <exception cref="T:System.IO.FileNotFoundException">Die durch <see cref="P:System.Media.SoundPlayer.SoundLocation" /> angegebene Datei kann nicht gefunden werden.</exception>
        <exception cref="T:System.InvalidOperationException">Der WAV-Header ist fehlerhaft; die durch die <see cref="P:System.Media.SoundPlayer.SoundLocation" /> angegebene Datei ist keine PCM-WAV-Datei.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">zum Lesen von Dateien. Zugehörige Enumeration: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></permission>
        <permission cref="T:System.Security.Permissions.UIPermission">für den Zugriff auf nativen Code. Zugehörige Enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeSubWindows" /></permission>
        <altmember cref="M:System.Media.SoundPlayer.PlayLooping" />
        <altmember cref="M:System.Media.SoundPlayer.PlaySync" />
        <related type="Article" href="~/docs/framework/winforms/controls/soundplayer-class-overview.md">Übersicht über die SoundPlayer-Klasse (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="PlayLooping">
      <MemberSignature Language="C#" Value="public void PlayLooping ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void PlayLooping() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Media.SoundPlayer.PlayLooping" />
      <MemberSignature Language="VB.NET" Value="Public Sub PlayLooping ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PlayLooping();" />
      <MemberSignature Language="F#" Value="member this.PlayLooping : unit -&gt; unit" Usage="soundPlayer.PlayLooping " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Lädt zunächst die WAV-Datei, sofern sie nicht bereits geladen ist, und gibt sie mithilfe eines neuen Threads in einer Endlosschleife wieder.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Media.SoundPlayer.PlayLooping%2A>-Methode gibt den Sound mithilfe eines neuen Threads wieder und Schleifen ihn aus. Wenn Sie <xref:System.Media.SoundPlayer.PlayLooping%2A> aufgerufen haben, bevor die WAV-Datei in den Arbeitsspeicher geladen wurde, wird die WAV-Datei geladen, bevor die Wiedergabe gestartet wird. Sie können die <xref:System.Media.SoundPlayer.LoadAsync%2A>-oder <xref:System.Media.SoundPlayer.Load%2A>-Methode verwenden, um die WAV-Datei im Voraus in den Arbeitsspeicher zu laden. Nachdem eine WAV-Datei erfolgreich aus einer <xref:System.IO.Stream> oder URL geladen wurde, müssen zukünftige Aufrufe von Wiedergabe Methoden für die <xref:System.Media.SoundPlayer> die WAV-Datei erst dann erneut laden, wenn sich der Pfad für den Sound ändert.  
  
 Wenn die WAV-Datei nicht angegeben wurde oder die Datei nicht geladen werden kann, gibt die <xref:System.Media.SoundPlayer.PlayLooping%2A>-Methode den Standard Sound von Signal Tons wieder.  
  
 Weitere Informationen zu <xref:System.Media.SoundPlayer.PlayLooping%2A>finden Sie unter Gewusst [wie: Schleifen eines Sounds in einem Windows Form](~/docs/framework/winforms/controls/how-to-loop-a-sound-playing-on-a-windows-form.md).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Media.SoundPlayer.PlayLooping%2A>-Methode verwendet wird, um eine WAV-Datei wiederholt wiederzugeben. Die WAV-Methode wird wiedergegeben, bis die <xref:System.Media.SoundPlayer.Stop%2A>-Methode aufgerufen wird. Dieses Codebeispiel ist Teil eines größeren Beispiels, das für die <xref:System.Media.SoundPlayer>-Klasse bereitgestellt wird.  
  
 [!code-cpp[System.Windows.Forms.Sound#6](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Sound/CPP/soundtestform.cpp#6)]
 [!code-csharp[System.Windows.Forms.Sound#6](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Sound/CS/soundtestform.cs#6)]
 [!code-vb[System.Windows.Forms.Sound#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Sound/VB/soundtestform.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ServiceProcess.TimeoutException">Die beim Ladevorgang verstrichene Zeit übersteigt die vom <see cref="P:System.Media.SoundPlayer.LoadTimeout" /> angegebene Zeitspanne (in Millisekunden).</exception>
        <exception cref="T:System.IO.FileNotFoundException">Die durch <see cref="P:System.Media.SoundPlayer.SoundLocation" /> angegebene Datei kann nicht gefunden werden.</exception>
        <exception cref="T:System.InvalidOperationException">Der WAV-Header ist fehlerhaft; die durch die <see cref="P:System.Media.SoundPlayer.SoundLocation" /> angegebene Datei ist keine PCM-WAV-Datei.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">zum Lesen von Dateien. Zugehörige Enumeration: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></permission>
        <permission cref="T:System.Security.Permissions.UIPermission">für den Zugriff auf nativen Code. Zugehörige Enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeSubWindows" /></permission>
        <altmember cref="M:System.Media.SoundPlayer.Play" />
        <altmember cref="M:System.Media.SoundPlayer.PlaySync" />
        <related type="Article" href="~/docs/framework/winforms/controls/soundplayer-class-overview.md">Übersicht über die SoundPlayer-Klasse (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="PlaySync">
      <MemberSignature Language="C#" Value="public void PlaySync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void PlaySync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Media.SoundPlayer.PlaySync" />
      <MemberSignature Language="VB.NET" Value="Public Sub PlaySync ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PlaySync();" />
      <MemberSignature Language="F#" Value="member this.PlaySync : unit -&gt; unit" Usage="soundPlayer.PlaySync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Lädt zunächst die WAV-Datei, sofern sie nicht bereits geladen ist, und gibt sie wieder.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Media.SoundPlayer.PlaySync%2A>-Methode verwendet den aktuellen Thread, um eine WAV-Datei wiederzugeben, wodurch verhindert wird, dass der Thread andere Nachrichten verarbeitet, bis der Ladevorgang beendet ist. Sie können die <xref:System.Media.SoundPlayer.LoadAsync%2A>-oder <xref:System.Media.SoundPlayer.Load%2A>-Methode verwenden, um die WAV-Datei im Voraus in den Arbeitsspeicher zu laden. Nachdem eine WAV-Datei erfolgreich aus einer <xref:System.IO.Stream> oder URL geladen wurde, müssen zukünftige Aufrufe von Wiedergabe Methoden für die <xref:System.Media.SoundPlayer> die WAV-Datei erst dann erneut laden, wenn sich der Pfad für den Sound ändert.  
  
 Wenn die WAV-Datei nicht angegeben wurde oder die Datei nicht geladen werden kann, gibt die <xref:System.Media.SoundPlayer.PlaySync%2A>-Methode den Standard Sound von Signal Tons wieder.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Media.SoundPlayer.PlaySync%2A>-Methode verwendet wird, um eine WAV-Datei synchron wiederzugeben.  
  
 [!code-cpp[System.Windows.Forms.PlaySync#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.PlaySync/CPP/system.windows.forms.sound.playasync.cpp#1)]
 [!code-csharp[System.Windows.Forms.PlaySync#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.PlaySync/CS/system.windows.forms.sound.playasync.cs#1)]
 [!code-vb[System.Windows.Forms.PlaySync#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.PlaySync/VB/system.windows.forms.sound.playasync.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ServiceProcess.TimeoutException">Die beim Ladevorgang verstrichene Zeit übersteigt die vom <see cref="P:System.Media.SoundPlayer.LoadTimeout" /> angegebene Zeitspanne (in Millisekunden).</exception>
        <exception cref="T:System.IO.FileNotFoundException">Die durch <see cref="P:System.Media.SoundPlayer.SoundLocation" /> angegebene Datei kann nicht gefunden werden.</exception>
        <exception cref="T:System.InvalidOperationException">Der WAV-Header ist fehlerhaft; die durch die <see cref="P:System.Media.SoundPlayer.SoundLocation" /> angegebene Datei ist keine PCM-WAV-Datei.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">zum Lesen von Dateien. Zugehörige Enumeration: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></permission>
        <permission cref="T:System.Security.Permissions.UIPermission">für den Zugriff auf nativen Code. Zugehörige Enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeSubWindows" /></permission>
        <altmember cref="M:System.Media.SoundPlayer.Play" />
        <altmember cref="M:System.Media.SoundPlayer.PlayLooping" />
        <related type="Article" href="~/docs/framework/winforms/controls/soundplayer-class-overview.md">Übersicht über die SoundPlayer-Klasse (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="SoundLocation">
      <MemberSignature Language="C#" Value="public string SoundLocation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SoundLocation" />
      <MemberSignature Language="DocId" Value="P:System.Media.SoundPlayer.SoundLocation" />
      <MemberSignature Language="VB.NET" Value="Public Property SoundLocation As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SoundLocation { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SoundLocation : string with get, set" Usage="System.Media.SoundPlayer.SoundLocation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Dateipfad oder die URL der zu ladenden WAV-Datei ab oder legt diesen bzw. diese fest.</summary>
        <value>Der Dateipfad oder die URL, aus dem bzw. der eine WAV-Datei geladen werden soll, oder <see cref="F:System.String.Empty" />, wenn kein Dateipfad vorhanden ist. Der Standardwert lautet <see cref="F:System.String.Empty" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Eigenschaft wird auf <xref:System.String.Empty?displayProperty=nameWithType> festgelegt, wenn die <xref:System.Media.SoundPlayer.Stream%2A>-Eigenschaft auf einen <xref:System.IO.Stream>festgelegt ist.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Media.SoundPlayer.SoundLocation%2A>-Eigenschaft verwendet wird, um eine WAV-Datei Quelle einer Instanz der <xref:System.Media.SoundPlayer>-Klasse zuzuweisen. Dieses Codebeispiel ist Teil eines größeren Beispiels, das für die <xref:System.Media.SoundPlayer>-Klasse bereitgestellt wird.  
  
 [!code-cpp[System.Windows.Forms.Sound#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Sound/CPP/soundtestform.cpp#2)]
 [!code-csharp[System.Windows.Forms.Sound#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Sound/CS/soundtestform.cs#2)]
 [!code-vb[System.Windows.Forms.Sound#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Sound/VB/soundtestform.vb#2)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.FileIOPermission">zum Suchen nach Dateien. Zugehörige Enumeration: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></permission>
        <related type="Article" href="~/docs/framework/winforms/controls/soundplayer-class-overview.md">Übersicht über die SoundPlayer-Klasse (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="SoundLocationChanged">
      <MemberSignature Language="C#" Value="public event EventHandler SoundLocationChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler SoundLocationChanged" />
      <MemberSignature Language="DocId" Value="E:System.Media.SoundPlayer.SoundLocationChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SoundLocationChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ SoundLocationChanged;" />
      <MemberSignature Language="F#" Value="member this.SoundLocationChanged : EventHandler " Usage="member this.SoundLocationChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, wenn ein neuer Audioquellpfad für diesen <see cref="T:System.Media.SoundPlayer" /> festgelegt wurde.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieses Ereignis wird ausgelöst, wenn ein neuer Audioquellpfad für diesen <xref:System.Media.SoundPlayer> festgelegt wurde.  
  
 Weitere Informationen zum Behandeln von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Das folgende Codebeispiel veranschaulicht die Verwendung des <xref:System.Media.SoundPlayer.OnSoundLocationChanged%2A> Ereignis Handlers, um eine Benachrichtigung zu erhalten, wenn der <xref:System.Media.SoundPlayer> an eine andere WAV-Datei angefügt wurde. Dieses Codebeispiel ist Teil eines größeren Beispiels, das für die <xref:System.Media.SoundPlayer>-Klasse bereitgestellt wird.  
  
 [!code-cpp[System.Windows.Forms.Sound#9](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Sound/CPP/soundtestform.cpp#9)]
 [!code-csharp[System.Windows.Forms.Sound#9](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Sound/CS/soundtestform.cs#9)]
 [!code-vb[System.Windows.Forms.Sound#9](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Sound/VB/soundtestform.vb#9)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/soundplayer-class-overview.md">Übersicht über die SoundPlayer-Klasse (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="Stop">
      <MemberSignature Language="C#" Value="public void Stop ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Stop() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Media.SoundPlayer.Stop" />
      <MemberSignature Language="VB.NET" Value="Public Sub Stop ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Stop();" />
      <MemberSignature Language="F#" Value="member this.Stop : unit -&gt; unit" Usage="soundPlayer.Stop " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Beendet die laufende Wiedergabe des Sounds.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Media.SoundPlayer.Stop%2A>-Methode verwendet wird, um eine WAV-Datei anzuhalten, die gerade wiedergegeben wird. Dieses Codebeispiel ist Teil eines größeren Beispiels, das für die <xref:System.Media.SoundPlayer>-Klasse bereitgestellt wird.  
  
 [!code-cpp[System.Windows.Forms.Sound#7](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Sound/CPP/soundtestform.cpp#7)]
 [!code-csharp[System.Windows.Forms.Sound#7](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Sound/CS/soundtestform.cs#7)]
 [!code-vb[System.Windows.Forms.Sound#7](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Sound/VB/soundtestform.vb#7)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission">für den Zugriff auf nativen Code. Zugehörige Enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeSubWindows" /></permission>
        <related type="Article" href="~/docs/framework/winforms/controls/soundplayer-class-overview.md">Übersicht über die SoundPlayer-Klasse (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="Stream">
      <MemberSignature Language="C#" Value="public System.IO.Stream Stream { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IO.Stream Stream" />
      <MemberSignature Language="DocId" Value="P:System.Media.SoundPlayer.Stream" />
      <MemberSignature Language="VB.NET" Value="Public Property Stream As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::Stream ^ Stream { System::IO::Stream ^ get(); void set(System::IO::Stream ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Stream : System.IO.Stream with get, set" Usage="System.Media.SoundPlayer.Stream" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den <see cref="T:System.IO.Stream" /> ab, aus dem die WAV-Datei geladen werden soll, oder legt diesen fest.</summary>
        <value>Ein <see cref="T:System.IO.Stream" />, aus dem die WAV-Datei geladen werden soll, oder <see langword="null" />, wenn kein Stream verfügbar ist. Der Standardwert lautet <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Eigenschaft wird auf `null` festgelegt, wenn die <xref:System.Media.SoundPlayer.SoundLocation%2A>-Eigenschaft auf einen neuen und gültigen Sound Speicherort festgelegt ist.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.Stream" />
        <related type="Article" href="~/docs/framework/winforms/controls/soundplayer-class-overview.md">Übersicht über die SoundPlayer-Klasse (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="StreamChanged">
      <MemberSignature Language="C#" Value="public event EventHandler StreamChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler StreamChanged" />
      <MemberSignature Language="DocId" Value="E:System.Media.SoundPlayer.StreamChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event StreamChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ StreamChanged;" />
      <MemberSignature Language="F#" Value="member this.StreamChanged : EventHandler " Usage="member this.StreamChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, wenn eine neue <see cref="T:System.IO.Stream" />-Audioquelle für diesen <see cref="T:System.Media.SoundPlayer" /> festgelegt wurde.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieses Ereignis wird ausgelöst, wenn eine neue <xref:System.IO.Stream> Audioquelle für diese <xref:System.Media.SoundPlayer> festgelegt wurde.  
  
 Weitere Informationen zum Behandeln von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/soundplayer-class-overview.md">Übersicht über die SoundPlayer-Klasse (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.Serialization.ISerializable.GetObjectData">
      <MemberSignature Language="C#" Value="void ISerializable.GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.Serialization.ISerializable.GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Media.SoundPlayer.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Sub GetObjectData (info As SerializationInfo, context As StreamingContext) Implements ISerializable.GetObjectData" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.Serialization.ISerializable.GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context) = System::Runtime::Serialization::ISerializable::GetObjectData;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">Die mit Daten zu füllende <see cref="T:System.Runtime.Serialization.SerializationInfo" />.</param>
        <param name="context">Das Ziel (siehe <see cref="T:System.Runtime.Serialization.StreamingContext" />) für diese Serialisierung.</param>
        <summary>Eine Beschreibung dieses Members finden Sie unter der <see cref="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />-Methode.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieser Member ist eine explizite Schnittstellen-Memberimplementierung. Er kann nur verwendet werden, wenn die <xref:System.Media.SoundPlayer>-Instanz in eine <xref:System.Runtime.Serialization.ISerializable>-Schnittstelle umgewandelt wird.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Tag">
      <MemberSignature Language="C#" Value="public object Tag { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Tag" />
      <MemberSignature Language="DocId" Value="P:System.Media.SoundPlayer.Tag" />
      <MemberSignature Language="VB.NET" Value="Public Property Tag As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Tag { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Tag : obj with get, set" Usage="System.Media.SoundPlayer.Tag" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft das <see cref="T:System.Object" /> ab, das Daten über den <see cref="T:System.Media.SoundPlayer" /> enthält, oder legt dieses fest.</summary>
        <value>Ein <see cref="T:System.Object" />, das Daten über den <see cref="T:System.Media.SoundPlayer" /> enthält.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
