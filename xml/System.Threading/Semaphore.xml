<Type Name="Semaphore" FullName="System.Threading.Semaphore">
  <Metadata><Meta Name="ms.openlocfilehash" Value="4d612444124f1e9e0d4b84aef281ef295eb335ce" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69098838" /></Metadata><TypeSignature Language="C#" Value="public sealed class Semaphore : System.Threading.WaitHandle" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit Semaphore extends System.Threading.WaitHandle" />
  <TypeSignature Language="DocId" Value="T:System.Threading.Semaphore" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class Semaphore&#xA;Inherits WaitHandle" />
  <TypeSignature Language="C++ CLI" Value="public ref class Semaphore sealed : System::Threading::WaitHandle" />
  <TypeSignature Language="F#" Value="type Semaphore = class&#xA;    inherit WaitHandle" />
  <AssemblyInfo>
    <AssemblyName>System.Threading</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Threading.WaitHandle</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="c358d-101">Schränkt die Anzahl von Threads ein, die gleichzeitig auf eine Ressource oder einen Pool von Ressourcen zugreifen können.</span><span class="sxs-lookup"><span data-stu-id="c358d-101">Limits the number of threads that can access a resource or pool of resources concurrently.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c358d-102">Verwenden Sie <xref:System.Threading.Semaphore> die-Klasse, um den Zugriff auf einen Ressourcenpool zu steuern.</span><span class="sxs-lookup"><span data-stu-id="c358d-102">Use the <xref:System.Threading.Semaphore> class to control access to a pool of resources.</span></span> <span data-ttu-id="c358d-103">Threads geben das Semaphor ein, indem <xref:System.Threading.WaitHandle.WaitOne%2A> Sie die-Methode aufrufen, die <xref:System.Threading.WaitHandle> von der-Klasse geerbt wird, und das Semaphor freigeben, indem Sie die <xref:System.Threading.Semaphore.Release%2A> -Methode aufrufen.</span><span class="sxs-lookup"><span data-stu-id="c358d-103">Threads enter the semaphore by calling the <xref:System.Threading.WaitHandle.WaitOne%2A> method, which is inherited from the <xref:System.Threading.WaitHandle> class, and release the semaphore by calling the <xref:System.Threading.Semaphore.Release%2A> method.</span></span>  
  
 <span data-ttu-id="c358d-104">Die Anzahl in einem Semaphor wird jedes Mal dekrementiert, wenn ein Thread in das Semaphor eintritt, und erhöht sich, wenn ein Thread das Semaphor freigibt.</span><span class="sxs-lookup"><span data-stu-id="c358d-104">The count on a semaphore is decremented each time a thread enters the semaphore, and incremented when a thread releases the semaphore.</span></span> <span data-ttu-id="c358d-105">Wenn die Anzahl 0 (null) ist, werden nachfolgende Anforderungen blockiert, bis andere Threads das Semaphor freigeben.</span><span class="sxs-lookup"><span data-stu-id="c358d-105">When the count is zero, subsequent requests block until other threads release the semaphore.</span></span> <span data-ttu-id="c358d-106">Wenn alle Threads das Semaphor freigegeben haben, liegt die Anzahl bei dem maximalen Wert, der beim Erstellen des Semaphors angegeben wurde.</span><span class="sxs-lookup"><span data-stu-id="c358d-106">When all threads have released the semaphore, the count is at the maximum value specified when the semaphore was created.</span></span>  
  
 <span data-ttu-id="c358d-107">Es gibt keine garantierte Reihenfolge, z. b. FIFO oder LIFO, bei der blockierte Threads in das Semaphor eintreten.</span><span class="sxs-lookup"><span data-stu-id="c358d-107">There is no guaranteed order, such as FIFO or LIFO, in which blocked threads enter the semaphore.</span></span>  
  
 <span data-ttu-id="c358d-108">Ein Thread kann das Semaphor mehrmals eingeben, indem er die <xref:System.Threading.WaitHandle.WaitOne%2A> -Methode wiederholt aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="c358d-108">A thread can enter the semaphore multiple times, by calling the <xref:System.Threading.WaitHandle.WaitOne%2A> method repeatedly.</span></span> <span data-ttu-id="c358d-109">Um einige oder alle dieser Einträge freizugeben, kann der Thread die parameterlose <xref:System.Threading.Semaphore.Release> Methoden Überladung mehrmals aufrufen oder die <xref:System.Threading.Semaphore.Release%28System.Int32%29> -Methoden Überladung aufrufen, die die Anzahl der frei zugebende Einträge angibt.</span><span class="sxs-lookup"><span data-stu-id="c358d-109">To release some or all of these entries, the thread can call the parameterless <xref:System.Threading.Semaphore.Release> method overload multiple times, or it can call the <xref:System.Threading.Semaphore.Release%28System.Int32%29> method overload that specifies the number of entries to be released.</span></span>  
  
 <span data-ttu-id="c358d-110">Die <xref:System.Threading.Semaphore> -Klasse erzwingt keine Thread Identität bei Aufrufen <xref:System.Threading.WaitHandle.WaitOne%2A> von <xref:System.Threading.Semaphore.Release%2A>oder.</span><span class="sxs-lookup"><span data-stu-id="c358d-110">The <xref:System.Threading.Semaphore> class does not enforce thread identity on calls to <xref:System.Threading.WaitHandle.WaitOne%2A> or <xref:System.Threading.Semaphore.Release%2A>.</span></span> <span data-ttu-id="c358d-111">Es ist Aufgabe des Programmierers, sicherzustellen, dass Threads die Semaphor nicht zu oft freigeben.</span><span class="sxs-lookup"><span data-stu-id="c358d-111">It is the programmer's responsibility to ensure that threads do not release the semaphore too many times.</span></span> <span data-ttu-id="c358d-112">Angenommen, ein Semaphor hat einen maximalen Zähler von zwei und Thread A sowie Thread B wechseln beide in das Semaphor.</span><span class="sxs-lookup"><span data-stu-id="c358d-112">For example, suppose a semaphore has a maximum count of two, and that thread A and thread B both enter the semaphore.</span></span> <span data-ttu-id="c358d-113">Wenn ein Programmierfehler in Thread B bewirkt, dass der <xref:System.Threading.Semaphore.Release%2A> Aufruf zweimal aufgerufen wird, sind beide Aufrufe erfolgreich.</span><span class="sxs-lookup"><span data-stu-id="c358d-113">If a programming error in thread B causes it to call <xref:System.Threading.Semaphore.Release%2A> twice, both calls succeed.</span></span> <span data-ttu-id="c358d-114">Der Zähler des Semaphors ist voll, und wenn Thread A schließlich <xref:System.Threading.Semaphore.Release%2A> aufruft, wird eine <xref:System.Threading.SemaphoreFullException> ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="c358d-114">The count on the semaphore is full, and when thread A eventually calls <xref:System.Threading.Semaphore.Release%2A>, a <xref:System.Threading.SemaphoreFullException> is thrown.</span></span>  
  
 <span data-ttu-id="c358d-115">Semaphoren haben zwei Typen: lokale Semaphoren und benannte System Semaphoren.</span><span class="sxs-lookup"><span data-stu-id="c358d-115">Semaphores are of two types: local semaphores and named system semaphores.</span></span> <span data-ttu-id="c358d-116">Wenn Sie ein <xref:System.Threading.Semaphore> -Objekt mithilfe eines Konstruktors erstellen, der einen Namen akzeptiert, wird er einem Betriebssystem-Semaphor dieses Namens zugeordnet.</span><span class="sxs-lookup"><span data-stu-id="c358d-116">If you create a <xref:System.Threading.Semaphore> object using a constructor that accepts a name, it is associated with an operating-system semaphore of that name.</span></span> <span data-ttu-id="c358d-117">Benannte System Semaphoren sind im gesamten Betriebssystem sichtbar und können verwendet werden, um die Aktivitäten von Prozessen zu synchronisieren.</span><span class="sxs-lookup"><span data-stu-id="c358d-117">Named system semaphores are visible throughout the operating system, and can be used to synchronize the activities of processes.</span></span> <span data-ttu-id="c358d-118">Sie können mehrere <xref:System.Threading.Semaphore> Objekte erstellen, die das gleiche benannte System Semaphor darstellen, und Sie können die <xref:System.Threading.Semaphore.OpenExisting%2A> -Methode verwenden, um eine vorhandene benannte System Semaphore zu öffnen.</span><span class="sxs-lookup"><span data-stu-id="c358d-118">You can create multiple <xref:System.Threading.Semaphore> objects that represent the same named system semaphore, and you can use the <xref:System.Threading.Semaphore.OpenExisting%2A> method to open an existing named system semaphore.</span></span>  
  
 <span data-ttu-id="c358d-119">Ein lokales Semaphor ist nur innerhalb des Prozesses vorhanden.</span><span class="sxs-lookup"><span data-stu-id="c358d-119">A local semaphore exists only within your process.</span></span> <span data-ttu-id="c358d-120">Er kann von jedem Thread in einem Prozess verwendet werden, der einen Verweis auf das lokale <xref:System.Threading.Semaphore>-Objekt enthält.</span><span class="sxs-lookup"><span data-stu-id="c358d-120">It can be used by any thread in your process that has a reference to the local <xref:System.Threading.Semaphore> object.</span></span> <span data-ttu-id="c358d-121">Jedes <xref:System.Threading.Semaphore> -Objekt ist ein separates lokales Semaphor.</span><span class="sxs-lookup"><span data-stu-id="c358d-121">Each <xref:System.Threading.Semaphore> object is a separate local semaphore.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c358d-122">Im folgenden Codebeispiel wird ein Semaphor mit einer maximalen Anzahl von drei und einer anfänglichen Anzahl von 0 (null) erstellt.</span><span class="sxs-lookup"><span data-stu-id="c358d-122">The following code example creates a semaphore with a maximum count of three and an initial count of zero.</span></span> <span data-ttu-id="c358d-123">Im Beispiel werden fünf Threads gestartet, die blockieren, um auf das Semaphor zu warten.</span><span class="sxs-lookup"><span data-stu-id="c358d-123">The example starts five threads, which block waiting for the semaphore.</span></span> <span data-ttu-id="c358d-124">Der Haupt Thread verwendet die <xref:System.Threading.Semaphore.Release%28System.Int32%29> -Methoden Überladung, um die Anzahl der Semaphor auf den maximalen Wert zu erhöhen, sodass drei Threads in das Semaphor gelangen können.</span><span class="sxs-lookup"><span data-stu-id="c358d-124">The main thread uses the <xref:System.Threading.Semaphore.Release%28System.Int32%29> method overload to increase the semaphore count to its maximum, allowing three threads to enter the semaphore.</span></span> <span data-ttu-id="c358d-125">Jeder Thread verwendet die <xref:System.Threading.Thread.Sleep%2A?displayProperty=nameWithType> -Methode, um eine Sekunde zu warten, um die Arbeit zu simulieren, <xref:System.Threading.Semaphore.Release> und ruft dann die-Methoden Überladung auf, um das Semaphor freizugeben.</span><span class="sxs-lookup"><span data-stu-id="c358d-125">Each thread uses the <xref:System.Threading.Thread.Sleep%2A?displayProperty=nameWithType> method to wait for one second, to simulate work, and then calls the <xref:System.Threading.Semaphore.Release> method overload to release the semaphore.</span></span> <span data-ttu-id="c358d-126">Jedes Mal, wenn das Semaphor freigegeben wird, wird die vorherige Semaphor-Anzahl angezeigt.</span><span class="sxs-lookup"><span data-stu-id="c358d-126">Each time the semaphore is released, the previous semaphore count is displayed.</span></span> <span data-ttu-id="c358d-127">Konsolen Meldungen verfolgen die Verwendung von Semaphor.</span><span class="sxs-lookup"><span data-stu-id="c358d-127">Console messages track semaphore use.</span></span> <span data-ttu-id="c358d-128">Das simulierte Arbeitsintervall wird für jeden Thread geringfügig angehoben, damit die Ausgabe leichter lesbar ist.</span><span class="sxs-lookup"><span data-stu-id="c358d-128">The simulated work interval is increased slightly for each thread, to make the output easier to read.</span></span>  
  
 [!code-cpp[System.Threading.Semaphore2#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.Semaphore2/CPP/source.cpp#1)]
 [!code-csharp[System.Threading.Semaphore2#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.Semaphore2/CS/source.cs#1)]
 [!code-vb[System.Threading.Semaphore2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.Semaphore2/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe><span data-ttu-id="c358d-129">Dieser Typ ist threadsicher.</span><span class="sxs-lookup"><span data-stu-id="c358d-129">This type is thread safe.</span></span></threadsafe>
    <related type="Article" href="~/docs/standard/threading/index.md"><span data-ttu-id="c358d-130">Verwaltetes Threading</span><span class="sxs-lookup"><span data-stu-id="c358d-130">Managed Threading</span></span></related>
    <related type="Article" href="~/docs/standard/threading/semaphore-and-semaphoreslim.md"><span data-ttu-id="c358d-131">Semaphore</span><span class="sxs-lookup"><span data-stu-id="c358d-131">Semaphore</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="c358d-132">Initialisiert eine neue Instanz der <see cref="T:System.Threading.Semaphore" />-Klasse.</span><span class="sxs-lookup"><span data-stu-id="c358d-132">Initializes a new instance of the <see cref="T:System.Threading.Semaphore" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Semaphore (int initialCount, int maximumCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 initialCount, int32 maximumCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Semaphore.#ctor(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (initialCount As Integer, maximumCount As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Semaphore(int initialCount, int maximumCount);" />
      <MemberSignature Language="F#" Value="new System.Threading.Semaphore : int * int -&gt; System.Threading.Semaphore" Usage="new System.Threading.Semaphore (initialCount, maximumCount)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="initialCount" Type="System.Int32" />
        <Parameter Name="maximumCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="initialCount"><span data-ttu-id="c358d-133">Die anfängliche Anzahl von Anforderungen für das Semaphor, die gleichzeitig gewährt werden können.</span><span class="sxs-lookup"><span data-stu-id="c358d-133">The initial number of requests for the semaphore that can be granted concurrently.</span></span></param>
        <param name="maximumCount"><span data-ttu-id="c358d-134">Die maximale Anzahl von Anforderungen für das Semaphor, die gleichzeitig gewährt werden können.</span><span class="sxs-lookup"><span data-stu-id="c358d-134">The maximum number of requests for the semaphore that can be granted concurrently.</span></span></param>
        <summary><span data-ttu-id="c358d-135">Initialisiert eine neue Instanz der <see cref="T:System.Threading.Semaphore" />-Klasse und gibt die ursprüngliche Anzahl von Einträgen und die maximale Anzahl von gleichzeitigen Einträgen an.</span><span class="sxs-lookup"><span data-stu-id="c358d-135">Initializes a new instance of the <see cref="T:System.Threading.Semaphore" /> class, specifying the initial number of entries and the maximum number of concurrent entries.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c358d-136">Dieser Konstruktor initialisiert ein unbenanntes Semaphor.</span><span class="sxs-lookup"><span data-stu-id="c358d-136">This constructor initializes an unnamed semaphore.</span></span> <span data-ttu-id="c358d-137">Alle Threads, die eine Instanz eines solchen Semaphors verwenden, müssen Verweise auf die Instanz aufweisen.</span><span class="sxs-lookup"><span data-stu-id="c358d-137">All threads that use an instance of such a semaphore must have references to the instance.</span></span>  
  
 <span data-ttu-id="c358d-138">Wenn `initialCount` kleiner als `maximumCount`ist, entspricht der Effekt dem, wenn der aktuelle Thread (`maximumCount` minus `initialCount`) <xref:System.Threading.WaitHandle.WaitOne%2A> aufgerufen hat.</span><span class="sxs-lookup"><span data-stu-id="c358d-138">If `initialCount` is less than `maximumCount`, the effect is the same as if the current thread had called <xref:System.Threading.WaitHandle.WaitOne%2A> (`maximumCount` minus `initialCount`) times.</span></span> <span data-ttu-id="c358d-139">Wenn Sie keine Einträge für den Thread reservieren möchten, der das Semaphor erstellt, verwenden Sie die gleiche Zahl für `maximumCount` und. `initialCount`</span><span class="sxs-lookup"><span data-stu-id="c358d-139">If you do not want to reserve any entries for the thread that creates the semaphore, use the same number for `maximumCount` and `initialCount`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c358d-140">Im folgenden Beispiel wird ein Semaphor mit einer maximalen Anzahl von drei und einer anfänglichen Anzahl von 0 (null) erstellt.</span><span class="sxs-lookup"><span data-stu-id="c358d-140">The following example creates a semaphore with a maximum count of three and an initial count of zero.</span></span> <span data-ttu-id="c358d-141">Im Beispiel werden fünf Threads gestartet, die blockieren, um auf das Semaphor zu warten.</span><span class="sxs-lookup"><span data-stu-id="c358d-141">The example starts five threads, which block waiting for the semaphore.</span></span> <span data-ttu-id="c358d-142">Der Haupt Thread verwendet die <xref:System.Threading.Semaphore.Release%28System.Int32%29> -Methoden Überladung, um die Anzahl der Semaphor auf den maximalen Wert zu erhöhen, sodass drei Threads in das Semaphor gelangen können.</span><span class="sxs-lookup"><span data-stu-id="c358d-142">The main thread uses the <xref:System.Threading.Semaphore.Release%28System.Int32%29> method overload to increase the semaphore count to its maximum, allowing three threads to enter the semaphore.</span></span> <span data-ttu-id="c358d-143">Jeder Thread verwendet die <xref:System.Threading.Thread.Sleep%2A?displayProperty=nameWithType> -Methode, um eine Sekunde zu warten, um die Arbeit zu simulieren, <xref:System.Threading.Semaphore.Release> und ruft dann die-Methoden Überladung auf, um das Semaphor freizugeben.</span><span class="sxs-lookup"><span data-stu-id="c358d-143">Each thread uses the <xref:System.Threading.Thread.Sleep%2A?displayProperty=nameWithType> method to wait for one second, to simulate work, and then calls the <xref:System.Threading.Semaphore.Release> method overload to release the semaphore.</span></span> <span data-ttu-id="c358d-144">Jedes Mal, wenn das Semaphor freigegeben wird, wird die vorherige Semaphor-Anzahl angezeigt.</span><span class="sxs-lookup"><span data-stu-id="c358d-144">Each time the semaphore is released, the previous semaphore count is displayed.</span></span> <span data-ttu-id="c358d-145">Konsolen Meldungen verfolgen die Verwendung von Semaphor.</span><span class="sxs-lookup"><span data-stu-id="c358d-145">Console messages track semaphore use.</span></span> <span data-ttu-id="c358d-146">Das simulierte Arbeitsintervall wird für jeden Thread geringfügig angehoben, damit die Ausgabe leichter lesbar ist.</span><span class="sxs-lookup"><span data-stu-id="c358d-146">The simulated work interval is increased slightly for each thread, to make the output easier to read.</span></span>  
  
 [!code-cpp[System.Threading.Semaphore2#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.Semaphore2/CPP/source.cpp#1)]
 [!code-csharp[System.Threading.Semaphore2#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.Semaphore2/CS/source.cs#1)]
 [!code-vb[System.Threading.Semaphore2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.Semaphore2/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="c358d-147"><paramref name="initialCount" /> ist größer als <paramref name="maximumCount" />.</span><span class="sxs-lookup"><span data-stu-id="c358d-147"><paramref name="initialCount" /> is greater than <paramref name="maximumCount" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="c358d-148"><paramref name="maximumCount" /> ist kleiner als 1.</span><span class="sxs-lookup"><span data-stu-id="c358d-148"><paramref name="maximumCount" /> is less than 1.</span></span>  
  
<span data-ttu-id="c358d-149">- oder -</span><span class="sxs-lookup"><span data-stu-id="c358d-149">-or-</span></span> 
 <span data-ttu-id="c358d-150"><paramref name="initialCount" /> ist kleiner als 0.</span><span class="sxs-lookup"><span data-stu-id="c358d-150"><paramref name="initialCount" /> is less than 0.</span></span></exception>
        <related type="Article" href="~/docs/standard/threading/index.md"><span data-ttu-id="c358d-151">Verwaltetes Threading</span><span class="sxs-lookup"><span data-stu-id="c358d-151">Managed Threading</span></span></related>
        <related type="Article" href="~/docs/standard/threading/semaphore-and-semaphoreslim.md"><span data-ttu-id="c358d-152">Semaphore</span><span class="sxs-lookup"><span data-stu-id="c358d-152">Semaphore</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Semaphore (int initialCount, int maximumCount, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 initialCount, int32 maximumCount, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Semaphore.#ctor(System.Int32,System.Int32,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (initialCount As Integer, maximumCount As Integer, name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Semaphore(int initialCount, int maximumCount, System::String ^ name);" />
      <MemberSignature Language="F#" Value="new System.Threading.Semaphore : int * int * string -&gt; System.Threading.Semaphore" Usage="new System.Threading.Semaphore (initialCount, maximumCount, name)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="initialCount" Type="System.Int32" />
        <Parameter Name="maximumCount" Type="System.Int32" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="initialCount"><span data-ttu-id="c358d-153">Die anfängliche Anzahl von Anforderungen für das Semaphor, die gleichzeitig gewährt werden können.</span><span class="sxs-lookup"><span data-stu-id="c358d-153">The initial number of requests for the semaphore that can be granted concurrently.</span></span></param>
        <param name="maximumCount"><span data-ttu-id="c358d-154">Die maximale Anzahl von Anforderungen für das Semaphor, die gleichzeitig gewährt werden können.</span><span class="sxs-lookup"><span data-stu-id="c358d-154">The maximum number of requests for the semaphore that can be granted concurrently.</span></span></param>
        <param name="name"><span data-ttu-id="c358d-155">Der Name eines benannten Systemsemaphorobjekts.</span><span class="sxs-lookup"><span data-stu-id="c358d-155">The name of a named system semaphore object.</span></span></param>
        <summary><span data-ttu-id="c358d-156">Initialisiert eine neue Instanz der <see cref="T:System.Threading.Semaphore" />-Klasse, gibt die ursprüngliche Anzahl von Einträgen und die maximale Anzahl von gleichzeitigen Einträgen sowie optional den Namen eines Systemsemaphorobjekts an.</span><span class="sxs-lookup"><span data-stu-id="c358d-156">Initializes a new instance of the <see cref="T:System.Threading.Semaphore" /> class, specifying the initial number of entries and the maximum number of concurrent entries, and optionally specifying the name of a system semaphore object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c358d-157">Dieser Konstruktor initialisiert ein <xref:System.Threading.Semaphore> -Objekt, das ein benanntes System Semaphor darstellt.</span><span class="sxs-lookup"><span data-stu-id="c358d-157">This constructor initializes a <xref:System.Threading.Semaphore> object that represents a named system semaphore.</span></span> <span data-ttu-id="c358d-158">Sie können mehrere <xref:System.Threading.Semaphore> Objekte erstellen, die das gleiche benannte System Semaphor darstellen.</span><span class="sxs-lookup"><span data-stu-id="c358d-158">You can create multiple <xref:System.Threading.Semaphore> objects that represent the same named system semaphore.</span></span>  
  
 <span data-ttu-id="c358d-159">Wenn das benannte System Semaphor nicht vorhanden ist, wird es mit der anfänglichen Anzahl und der maximalen Anzahl erstellt, `initialCount` die `maximumCount`von und angegeben werden.</span><span class="sxs-lookup"><span data-stu-id="c358d-159">If the named system semaphore does not exist, it is created with the initial count and maximum count specified by `initialCount` and `maximumCount`.</span></span> <span data-ttu-id="c358d-160">Wenn das benannte System Semaphor bereits vorhanden ist `initialCount` und `maximumCount` nicht verwendet wird, verursachen ungültige Werte weiterhin Ausnahmen.</span><span class="sxs-lookup"><span data-stu-id="c358d-160">If the named system semaphore already exists, `initialCount` and `maximumCount` are not used, although invalid values still cause exceptions.</span></span> <span data-ttu-id="c358d-161">Wenn Sie bestimmen müssen, ob ein benanntes System Semaphor erstellt wurde, verwenden Sie <xref:System.Threading.Semaphore.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.String%2CSystem.Boolean%40%29> stattdessen die Konstruktorüberladung.</span><span class="sxs-lookup"><span data-stu-id="c358d-161">If you need to determine whether or not a named system semaphore was created, use the <xref:System.Threading.Semaphore.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.String%2CSystem.Boolean%40%29> constructor overload instead.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="c358d-162">Wenn Sie diese Konstruktorüberladung verwenden, empfiehlt es sich, die gleiche Zahl für `initialCount` und `maximumCount`anzugeben.</span><span class="sxs-lookup"><span data-stu-id="c358d-162">When you use this constructor overload, the recommended practice is to specify the same number for `initialCount` and `maximumCount`.</span></span> <span data-ttu-id="c358d-163">Wenn `initialCount` kleiner als `maximumCount`ist und ein benanntes System Semaphor erstellt wird, entspricht der Effekt dem, wenn der aktuelle Thread (`maximumCount` minus <xref:System.Threading.WaitHandle.WaitOne%2A> `initialCount`) aufgerufen hat.</span><span class="sxs-lookup"><span data-stu-id="c358d-163">If `initialCount` is less than `maximumCount`, and a named system semaphore is created, the effect is the same as if the current thread had called <xref:System.Threading.WaitHandle.WaitOne%2A> (`maximumCount` minus `initialCount`) times.</span></span> <span data-ttu-id="c358d-164">Bei dieser Konstruktorüberladung gibt es jedoch keine Möglichkeit, zu bestimmen, ob ein benanntes System Semaphor erstellt wurde.</span><span class="sxs-lookup"><span data-stu-id="c358d-164">However, with this constructor overload there is no way to determine whether a named system semaphore was created.</span></span>  
  
 <span data-ttu-id="c358d-165">Wenn Sie oder `null` eine leere Zeichenfolge für `name`angeben, wird ein lokales Semaphor erstellt, als ob Sie die <xref:System.Threading.Semaphore.%23ctor%28System.Int32%2CSystem.Int32%29> Konstruktorüberladung aufgerufen hätten.</span><span class="sxs-lookup"><span data-stu-id="c358d-165">If you specify `null` or an empty string for `name`, a local semaphore is created, as if you had called the <xref:System.Threading.Semaphore.%23ctor%28System.Int32%2CSystem.Int32%29> constructor overload.</span></span>  
  
 <span data-ttu-id="c358d-166">Da benannte Semaphoren im gesamten Betriebssystem sichtbar sind, können Sie verwendet werden, um die Ressourcenverwendung über Prozess Grenzen hinweg zu koordinieren.</span><span class="sxs-lookup"><span data-stu-id="c358d-166">Because named semaphores are visible throughout the operating system, they can be used to coordinate resource use across process boundaries.</span></span>  
  
 <span data-ttu-id="c358d-167">Wenn Sie herausfinden möchten, ob ein benanntes System Semaphor vorhanden ist <xref:System.Threading.Semaphore.OpenExisting%2A> , verwenden Sie die-Methode.</span><span class="sxs-lookup"><span data-stu-id="c358d-167">If you want to find out whether a named system semaphore exists, use the <xref:System.Threading.Semaphore.OpenExisting%2A> method.</span></span> <span data-ttu-id="c358d-168">Die <xref:System.Threading.Semaphore.OpenExisting%2A> -Methode versucht, ein vorhandenes benanntes Semaphor zu öffnen, und löst eine Ausnahme aus, wenn das System Semaphor nicht vorhanden ist.</span><span class="sxs-lookup"><span data-stu-id="c358d-168">The <xref:System.Threading.Semaphore.OpenExisting%2A> method attempts to open an existing named semaphore, and throws an exception if the system semaphore does not exist.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c358d-169">Im folgenden Codebeispiel wird das prozessübergreifende Verhalten eines benannten Semaphors veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="c358d-169">The following code example demonstrates the cross-process behavior of a named semaphore.</span></span> <span data-ttu-id="c358d-170">Das Beispiel erstellt ein benanntes Semaphor mit einer maximalen Anzahl von fünf und einer anfänglichen Anzahl von fünf.</span><span class="sxs-lookup"><span data-stu-id="c358d-170">The example creates a named semaphore with a maximum count of five and an initial count of five.</span></span> <span data-ttu-id="c358d-171">Das Programm führt drei Aufrufe an die <xref:System.Threading.WaitHandle.WaitOne%2A> -Methode aus.</span><span class="sxs-lookup"><span data-stu-id="c358d-171">The program makes three calls to the <xref:System.Threading.WaitHandle.WaitOne%2A> method.</span></span> <span data-ttu-id="c358d-172">Wenn Sie das kompilierte Beispiel aus zwei Befehls Fenstern ausführen, wird die zweite Kopie beim dritten <xref:System.Threading.WaitHandle.WaitOne%2A>-Vorgang blockiert.</span><span class="sxs-lookup"><span data-stu-id="c358d-172">Thus, if you run the compiled example from two command windows, the second copy will block on the third call to <xref:System.Threading.WaitHandle.WaitOne%2A>.</span></span> <span data-ttu-id="c358d-173">Geben Sie mindestens einen Eintrag in der ersten Kopie des Programms frei, um die Blockierung der zweiten aufzuheben.</span><span class="sxs-lookup"><span data-stu-id="c358d-173">Release one or more entries in the first copy of the program to unblock the second.</span></span>  
  
 [!code-cpp[System.Threading.Semaphore.ctor named 3#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.Semaphore.ctor named 3/CPP/source.cpp#1)]
 [!code-csharp[System.Threading.Semaphore.ctor named 3#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.Semaphore.ctor named 3/CS/source.cs#1)]
 [!code-vb[System.Threading.Semaphore.ctor named 3#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.Semaphore.ctor named 3/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="c358d-174"><paramref name="initialCount" /> ist größer als <paramref name="maximumCount" />.</span><span class="sxs-lookup"><span data-stu-id="c358d-174"><paramref name="initialCount" /> is greater than <paramref name="maximumCount" />.</span></span>  
  
<span data-ttu-id="c358d-175">- oder -</span><span class="sxs-lookup"><span data-stu-id="c358d-175">-or-</span></span> 
 <span data-ttu-id="c358d-176"><paramref name="name" /> ist länger als 260 Zeichen.</span><span class="sxs-lookup"><span data-stu-id="c358d-176"><paramref name="name" /> is longer than 260 characters.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="c358d-177"><paramref name="maximumCount" /> ist kleiner als 1.</span><span class="sxs-lookup"><span data-stu-id="c358d-177"><paramref name="maximumCount" /> is less than 1.</span></span>  
  
<span data-ttu-id="c358d-178">- oder -</span><span class="sxs-lookup"><span data-stu-id="c358d-178">-or-</span></span> 
 <span data-ttu-id="c358d-179"><paramref name="initialCount" /> ist kleiner als 0.</span><span class="sxs-lookup"><span data-stu-id="c358d-179"><paramref name="initialCount" /> is less than 0.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="c358d-180">Win32-Fehler.</span><span class="sxs-lookup"><span data-stu-id="c358d-180">A Win32 error occurred.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="c358d-181">Der benannte Semaphor ist vorhanden und verfügt über Zugriffssteuerungssicherheit, und der Benutzer verfügt nicht über <see cref="F:System.Security.AccessControl.SemaphoreRights.FullControl" />.</span><span class="sxs-lookup"><span data-stu-id="c358d-181">The named semaphore exists and has access control security, and the user does not have <see cref="F:System.Security.AccessControl.SemaphoreRights.FullControl" />.</span></span></exception>
        <exception cref="T:System.Threading.WaitHandleCannotBeOpenedException"><span data-ttu-id="c358d-182">Der benannte Semaphor kann nicht erstellt werden, möglicherweise, weil ein Wait-Handle eines anderen Typs den gleichen Namen hat.</span><span class="sxs-lookup"><span data-stu-id="c358d-182">The named semaphore cannot be created, perhaps because a wait handle of a different type has the same name.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="c358d-183">zum Aufrufen von nicht verwaltetem Code zum Erstellen eines benannten System Semaphors.</span><span class="sxs-lookup"><span data-stu-id="c358d-183">for calling unmanaged code to create a named system semaphore.</span></span> <span data-ttu-id="c358d-184">Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="c358d-184">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</span></span>  
  
<span data-ttu-id="c358d-185">Sicherheitsaktion: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</span><span class="sxs-lookup"><span data-stu-id="c358d-185">Security action: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</span></span></permission>
        <related type="Article" href="~/docs/standard/threading/index.md"><span data-ttu-id="c358d-186">Verwaltetes Threading</span><span class="sxs-lookup"><span data-stu-id="c358d-186">Managed Threading</span></span></related>
        <related type="Article" href="~/docs/standard/threading/semaphore-and-semaphoreslim.md"><span data-ttu-id="c358d-187">Semaphore</span><span class="sxs-lookup"><span data-stu-id="c358d-187">Semaphore</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Semaphore (int initialCount, int maximumCount, string name, out bool createdNew);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 initialCount, int32 maximumCount, string name, [out] bool&amp; createdNew) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Semaphore.#ctor(System.Int32,System.Int32,System.String,System.Boolean@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (initialCount As Integer, maximumCount As Integer, name As String, ByRef createdNew As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Semaphore(int initialCount, int maximumCount, System::String ^ name, [Runtime::InteropServices::Out] bool % createdNew);" />
      <MemberSignature Language="F#" Value="new System.Threading.Semaphore : int * int * string *  -&gt; System.Threading.Semaphore" Usage="new System.Threading.Semaphore (initialCount, maximumCount, name, createdNew)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="initialCount" Type="System.Int32" />
        <Parameter Name="maximumCount" Type="System.Int32" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="createdNew" Type="System.Boolean" RefType="out" />
      </Parameters>
      <Docs>
        <param name="initialCount"><span data-ttu-id="c358d-188">Die ursprüngliche Anzahl von Anforderungen für das Semaphor, die gleichzeitig ausgeführt werden können.</span><span class="sxs-lookup"><span data-stu-id="c358d-188">The initial number of requests for the semaphore that can be satisfied concurrently.</span></span></param>
        <param name="maximumCount"><span data-ttu-id="c358d-189">Die maximale Anzahl von Anforderungen für das Semaphor, die gleichzeitig ausgeführt werden können.</span><span class="sxs-lookup"><span data-stu-id="c358d-189">The maximum number of requests for the semaphore that can be satisfied concurrently.</span></span></param>
        <param name="name"><span data-ttu-id="c358d-190">Der Name eines benannten Systemsemaphorobjekts.</span><span class="sxs-lookup"><span data-stu-id="c358d-190">The name of a named system semaphore object.</span></span></param>
        <param name="createdNew"><span data-ttu-id="c358d-191">Enthält nach dem Beenden dieser Methode den Wert <see langword="true" />, wenn ein lokales Semaphor erstellt wurde (d. h., wenn <paramref name="name" /> gleich <see langword="null" /> oder eine leere Zeichenfolge ist) oder wenn das angegebene benannte Systemsemaphor erstellt wurde. Der Wert ist <see langword="false" />, wenn das angegebene benannte Systemsemaphor bereits vorhanden war.</span><span class="sxs-lookup"><span data-stu-id="c358d-191">When this method returns, contains <see langword="true" /> if a local semaphore was created (that is, if <paramref name="name" /> is <see langword="null" /> or an empty string) or if the specified named system semaphore was created; <see langword="false" /> if the specified named system semaphore already existed.</span></span> <span data-ttu-id="c358d-192">Dieser Parameter wird nicht initialisiert übergeben.</span><span class="sxs-lookup"><span data-stu-id="c358d-192">This parameter is passed uninitialized.</span></span></param>
        <summary><span data-ttu-id="c358d-193">Initialisiert eine neue Instanz der <see cref="T:System.Threading.Semaphore" />-Klasse, gibt die ursprüngliche Anzahl von Einträgen und die maximale Anzahl von gleichzeitigen Einträgen sowie optional den Namen eines Systemsemaphorobjekts an, gibt eine Variable an, die einen Wert empfängt, der angibt, ob ein neues Systemsemaphor erstellt wurde.</span><span class="sxs-lookup"><span data-stu-id="c358d-193">Initializes a new instance of the <see cref="T:System.Threading.Semaphore" /> class, specifying the initial number of entries and the maximum number of concurrent entries, optionally specifying the name of a system semaphore object, and specifying a variable that receives a value indicating whether a new system semaphore was created.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c358d-194">Dieser Konstruktor initialisiert ein <xref:System.Threading.Semaphore> -Objekt, das ein benanntes System Semaphor darstellt.</span><span class="sxs-lookup"><span data-stu-id="c358d-194">This constructor initializes a <xref:System.Threading.Semaphore> object that represents a named system semaphore.</span></span> <span data-ttu-id="c358d-195">Sie können mehrere <xref:System.Threading.Semaphore> Objekte erstellen, die das gleiche benannte System Semaphor darstellen.</span><span class="sxs-lookup"><span data-stu-id="c358d-195">You can create multiple <xref:System.Threading.Semaphore> objects that represent the same named system semaphore.</span></span>  
  
 <span data-ttu-id="c358d-196">Wenn das benannte System Semaphor nicht vorhanden ist, wird es mit der anfänglichen Anzahl und der maximalen Anzahl erstellt, `initialCount` die `maximumCount`von und angegeben werden.</span><span class="sxs-lookup"><span data-stu-id="c358d-196">If the named system semaphore does not exist, it is created with the initial count and maximum count specified by `initialCount` and `maximumCount`.</span></span> <span data-ttu-id="c358d-197">Wenn das benannte System Semaphor bereits vorhanden ist `initialCount` und `maximumCount` nicht verwendet wird, verursachen ungültige Werte weiterhin Ausnahmen.</span><span class="sxs-lookup"><span data-stu-id="c358d-197">If the named system semaphore already exists, `initialCount` and `maximumCount` are not used, although invalid values still cause exceptions.</span></span> <span data-ttu-id="c358d-198">Verwenden `createdNew` Sie, um zu bestimmen, ob das System Semaphor erstellt wurde.</span><span class="sxs-lookup"><span data-stu-id="c358d-198">Use `createdNew` to determine whether the system semaphore was created.</span></span>  
  
 <span data-ttu-id="c358d-199">Wenn `initialCount` kleiner als `maximumCount`und`maximumCount` `initialCount`ist, entspricht der Effekt dem, wenn der aktuelle Thread (minus) aufgerufen <xref:System.Threading.WaitHandle.WaitOne%2A> hat. `true` `createdNew`</span><span class="sxs-lookup"><span data-stu-id="c358d-199">If `initialCount` is less than `maximumCount`, and `createdNew` is `true`, the effect is the same as if the current thread had called <xref:System.Threading.WaitHandle.WaitOne%2A> (`maximumCount` minus `initialCount`) times.</span></span>  
  
 <span data-ttu-id="c358d-200">Wenn Sie oder `null` eine leere Zeichenfolge für `name`angeben, wird ein lokales Semaphor erstellt, als ob Sie die <xref:System.Threading.Semaphore.%23ctor%28System.Int32%2CSystem.Int32%29> Konstruktorüberladung aufgerufen hätten.</span><span class="sxs-lookup"><span data-stu-id="c358d-200">If you specify `null` or an empty string for `name`, a local semaphore is created, as if you had called the <xref:System.Threading.Semaphore.%23ctor%28System.Int32%2CSystem.Int32%29> constructor overload.</span></span> <span data-ttu-id="c358d-201">In diesem Fall `createdNew` ist immer `true`.</span><span class="sxs-lookup"><span data-stu-id="c358d-201">In this case, `createdNew` is always `true`.</span></span>  
  
 <span data-ttu-id="c358d-202">Da benannte Semaphoren im gesamten Betriebssystem sichtbar sind, können Sie verwendet werden, um die Ressourcenverwendung über Prozess Grenzen hinweg zu koordinieren.</span><span class="sxs-lookup"><span data-stu-id="c358d-202">Because named semaphores are visible throughout the operating system, they can be used to coordinate resource use across process boundaries.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c358d-203">Im folgenden Codebeispiel wird das prozessübergreifende Verhalten eines benannten Semaphors veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="c358d-203">The following code example demonstrates the cross-process behavior of a named semaphore.</span></span> <span data-ttu-id="c358d-204">Das Beispiel erstellt ein benanntes Semaphor mit einer maximalen Anzahl von fünf und einer anfänglichen Anzahl von zwei.</span><span class="sxs-lookup"><span data-stu-id="c358d-204">The example creates a named semaphore with a maximum count of five and an initial count of two.</span></span> <span data-ttu-id="c358d-205">Das heißt, es werden drei Einträge für den Thread reserviert, der den Konstruktor aufruft.</span><span class="sxs-lookup"><span data-stu-id="c358d-205">That is, it reserves three entries for the thread that calls the constructor.</span></span> <span data-ttu-id="c358d-206">Wenn `createNew` <xref:System.Threading.WaitHandle.WaitOne%2A> ist `false`, führt das Programm drei Aufrufe an die-Methode aus.</span><span class="sxs-lookup"><span data-stu-id="c358d-206">If `createNew` is `false`, the program makes three calls to the <xref:System.Threading.WaitHandle.WaitOne%2A> method.</span></span> <span data-ttu-id="c358d-207">Wenn Sie das kompilierte Beispiel aus zwei Befehls Fenstern ausführen, wird die zweite Kopie beim dritten <xref:System.Threading.WaitHandle.WaitOne%2A>-Vorgang blockiert.</span><span class="sxs-lookup"><span data-stu-id="c358d-207">Thus, if you run the compiled example from two command windows, the second copy will block on the third call to <xref:System.Threading.WaitHandle.WaitOne%2A>.</span></span> <span data-ttu-id="c358d-208">Geben Sie mindestens einen Eintrag in der ersten Kopie des Programms frei, um die Blockierung der zweiten aufzuheben.</span><span class="sxs-lookup"><span data-stu-id="c358d-208">Release one or more entries in the first copy of the program to unblock the second.</span></span>  
  
 [!code-cpp[System.Threading.Semaphore.ctor named 4#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.Semaphore.ctor named 4/CPP/source.cpp#1)]
 [!code-csharp[System.Threading.Semaphore.ctor named 4#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.Semaphore.ctor named 4/CS/source.cs#1)]
 [!code-vb[System.Threading.Semaphore.ctor named 4#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.Semaphore.ctor named 4/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="c358d-209"><paramref name="initialCount" /> ist größer als <paramref name="maximumCount" />.</span><span class="sxs-lookup"><span data-stu-id="c358d-209"><paramref name="initialCount" /> is greater than <paramref name="maximumCount" />.</span></span>  
  
<span data-ttu-id="c358d-210">- oder -</span><span class="sxs-lookup"><span data-stu-id="c358d-210">-or-</span></span> 
 <span data-ttu-id="c358d-211"><paramref name="name" /> ist länger als 260 Zeichen.</span><span class="sxs-lookup"><span data-stu-id="c358d-211"><paramref name="name" /> is longer than 260 characters.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="c358d-212"><paramref name="maximumCount" /> ist kleiner als 1.</span><span class="sxs-lookup"><span data-stu-id="c358d-212"><paramref name="maximumCount" /> is less than 1.</span></span>  
  
<span data-ttu-id="c358d-213">- oder -</span><span class="sxs-lookup"><span data-stu-id="c358d-213">-or-</span></span> 
 <span data-ttu-id="c358d-214"><paramref name="initialCount" /> ist kleiner als 0.</span><span class="sxs-lookup"><span data-stu-id="c358d-214"><paramref name="initialCount" /> is less than 0.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="c358d-215">Win32-Fehler.</span><span class="sxs-lookup"><span data-stu-id="c358d-215">A Win32 error occurred.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="c358d-216">Der benannte Semaphor ist vorhanden und verfügt über Zugriffssteuerungssicherheit, und der Benutzer verfügt nicht über <see cref="F:System.Security.AccessControl.SemaphoreRights.FullControl" />.</span><span class="sxs-lookup"><span data-stu-id="c358d-216">The named semaphore exists and has access control security, and the user does not have <see cref="F:System.Security.AccessControl.SemaphoreRights.FullControl" />.</span></span></exception>
        <exception cref="T:System.Threading.WaitHandleCannotBeOpenedException"><span data-ttu-id="c358d-217">Der benannte Semaphor kann nicht erstellt werden, möglicherweise, weil ein Wait-Handle eines anderen Typs den gleichen Namen hat.</span><span class="sxs-lookup"><span data-stu-id="c358d-217">The named semaphore cannot be created, perhaps because a wait handle of a different type has the same name.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="c358d-218">zum Aufrufen von nicht verwaltetem Code zum Erstellen eines benannten System Semaphors.</span><span class="sxs-lookup"><span data-stu-id="c358d-218">for calling unmanaged code to create a named system semaphore.</span></span> <span data-ttu-id="c358d-219">Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="c358d-219">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</span></span>  
  
<span data-ttu-id="c358d-220">Sicherheitsaktion: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</span><span class="sxs-lookup"><span data-stu-id="c358d-220">Security action: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</span></span></permission>
        <related type="Article" href="~/docs/standard/threading/index.md"><span data-ttu-id="c358d-221">Verwaltetes Threading</span><span class="sxs-lookup"><span data-stu-id="c358d-221">Managed Threading</span></span></related>
        <related type="Article" href="~/docs/standard/threading/semaphore-and-semaphoreslim.md"><span data-ttu-id="c358d-222">Semaphore</span><span class="sxs-lookup"><span data-stu-id="c358d-222">Semaphore</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Semaphore (int initialCount, int maximumCount, string name, out bool createdNew, System.Security.AccessControl.SemaphoreSecurity semaphoreSecurity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 initialCount, int32 maximumCount, string name, [out] bool&amp; createdNew, class System.Security.AccessControl.SemaphoreSecurity semaphoreSecurity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Semaphore.#ctor(System.Int32,System.Int32,System.String,System.Boolean@,System.Security.AccessControl.SemaphoreSecurity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Semaphore(int initialCount, int maximumCount, System::String ^ name, [Runtime::InteropServices::Out] bool % createdNew, System::Security::AccessControl::SemaphoreSecurity ^ semaphoreSecurity);" />
      <MemberSignature Language="F#" Value="new System.Threading.Semaphore : int * int * string *  * System.Security.AccessControl.SemaphoreSecurity -&gt; System.Threading.Semaphore" Usage="new System.Threading.Semaphore (initialCount, maximumCount, name, createdNew, semaphoreSecurity)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="initialCount" Type="System.Int32" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="maximumCount" Type="System.Int32" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="name" Type="System.String" Index="2" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="createdNew" Type="System.Boolean" RefType="out" Index="3" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="semaphoreSecurity" Type="System.Security.AccessControl.SemaphoreSecurity" Index="4" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="initialCount"><span data-ttu-id="c358d-223">Die ursprüngliche Anzahl von Anforderungen für das Semaphor, die gleichzeitig ausgeführt werden können.</span><span class="sxs-lookup"><span data-stu-id="c358d-223">The initial number of requests for the semaphore that can be satisfied concurrently.</span></span></param>
        <param name="maximumCount"><span data-ttu-id="c358d-224">Die maximale Anzahl von Anforderungen für das Semaphor, die gleichzeitig ausgeführt werden können.</span><span class="sxs-lookup"><span data-stu-id="c358d-224">The maximum number of requests for the semaphore that can be satisfied concurrently.</span></span></param>
        <param name="name"><span data-ttu-id="c358d-225">Der Name eines benannten Systemsemaphorobjekts.</span><span class="sxs-lookup"><span data-stu-id="c358d-225">The name of a named system semaphore object.</span></span></param>
        <param name="createdNew"><span data-ttu-id="c358d-226">Enthält nach dem Beenden dieser Methode den Wert <see langword="true" />, wenn ein lokales Semaphor erstellt wurde (d. h., wenn <paramref name="name" /> gleich <see langword="null" /> oder eine leere Zeichenfolge ist) oder wenn das angegebene benannte Systemsemaphor erstellt wurde. Der Wert ist <see langword="false" />, wenn das angegebene benannte Systemsemaphor bereits vorhanden war.</span><span class="sxs-lookup"><span data-stu-id="c358d-226">When this method returns, contains <see langword="true" /> if a local semaphore was created (that is, if <paramref name="name" /> is <see langword="null" /> or an empty string) or if the specified named system semaphore was created; <see langword="false" /> if the specified named system semaphore already existed.</span></span> <span data-ttu-id="c358d-227">Dieser Parameter wird nicht initialisiert übergeben.</span><span class="sxs-lookup"><span data-stu-id="c358d-227">This parameter is passed uninitialized.</span></span></param>
        <param name="semaphoreSecurity"><span data-ttu-id="c358d-228">Ein <see cref="T:System.Security.AccessControl.SemaphoreSecurity" />-Objekt, das die Zugriffssteuerungssicherheit darstellt, die auf das benannte Systemsemaphor angewendet werden soll.</span><span class="sxs-lookup"><span data-stu-id="c358d-228">A <see cref="T:System.Security.AccessControl.SemaphoreSecurity" /> object that represents the access control security to be applied to the named system semaphore.</span></span></param>
        <summary><span data-ttu-id="c358d-229">Initialisiert eine neue Instanz der <see cref="T:System.Threading.Semaphore" />-Klasse, gibt die ursprüngliche Anzahl von Einträgen und die maximale Anzahl von gleichzeitigen Einträgen an, gibt optional den Namen eines Systemsemaphorobjekts an, gibt eine Variable an, die einen Wert empfängt, der angibt, ob ein neues Systemsemaphor erstellt wurde, und gibt die Sicherheitszugriffssteuerung für das Systemsemaphor an.</span><span class="sxs-lookup"><span data-stu-id="c358d-229">Initializes a new instance of the <see cref="T:System.Threading.Semaphore" /> class, specifying the initial number of entries and the maximum number of concurrent entries, optionally specifying the name of a system semaphore object, specifying a variable that receives a value indicating whether a new system semaphore was created, and specifying security access control for the system semaphore.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c358d-230">Verwenden Sie diesen Konstruktor, um die Zugriffs Steuerungs Sicherheit auf ein benanntes System Semaphor anzuwenden, wenn es erstellt wird. Dadurch wird verhindert, dass anderer Code die Kontrolle über die Semaphor übernimmt.</span><span class="sxs-lookup"><span data-stu-id="c358d-230">Use this constructor to apply access control security to a named system semaphore when it is created, preventing other code from taking control of the semaphore.</span></span>  
  
 <span data-ttu-id="c358d-231">Dieser Konstruktor initialisiert ein <xref:System.Threading.Semaphore> -Objekt, das ein benanntes System Semaphor darstellt.</span><span class="sxs-lookup"><span data-stu-id="c358d-231">This constructor initializes a <xref:System.Threading.Semaphore> object that represents a named system semaphore.</span></span> <span data-ttu-id="c358d-232">Sie können mehrere <xref:System.Threading.Semaphore> Objekte erstellen, die das gleiche benannte System Semaphor darstellen.</span><span class="sxs-lookup"><span data-stu-id="c358d-232">You can create multiple <xref:System.Threading.Semaphore> objects that represent the same named system semaphore.</span></span>  
  
 <span data-ttu-id="c358d-233">Wenn das benannte System Semaphor nicht vorhanden ist, wird es mit der angegebenen Zugriffs Steuerungs Sicherheit erstellt.</span><span class="sxs-lookup"><span data-stu-id="c358d-233">If the named system semaphore does not exist, it is created with the specified access control security.</span></span> <span data-ttu-id="c358d-234">Wenn das benannte Semaphor vorhanden ist, wird die angegebene Zugriffs Steuerungs Sicherheit ignoriert.</span><span class="sxs-lookup"><span data-stu-id="c358d-234">If the named semaphore exists, the specified access control security is ignored.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c358d-235">Der Aufrufer hat die vollständige Kontrolle <xref:System.Threading.Semaphore> über das neu `semaphoreSecurity` erstellte Objekt, auch wenn er dem aktuellen Benutzer einige Zugriffsrechte gewährt oder ihm nicht zuweist.</span><span class="sxs-lookup"><span data-stu-id="c358d-235">The caller has full control over the newly created <xref:System.Threading.Semaphore> object even if `semaphoreSecurity` denies or fails to grant some access rights to the current user.</span></span> <span data-ttu-id="c358d-236">Wenn der aktuelle Benutzer jedoch versucht, ein anderes <xref:System.Threading.Semaphore> Objekt zu erhalten, das dasselbe benannte Semaphor repräsentiert, wird entweder ein Konstruktor oder die <xref:System.Threading.Semaphore.OpenExisting%2A> -Methode verwendet, dann wird die Windows-Zugriffs Steuerungs Sicherheit angewendet.</span><span class="sxs-lookup"><span data-stu-id="c358d-236">However, if the current user attempts to get another <xref:System.Threading.Semaphore> object to represent the same named semaphore, using either a constructor or the <xref:System.Threading.Semaphore.OpenExisting%2A> method, Windows access control security is applied.</span></span>  
  
 <span data-ttu-id="c358d-237">Wenn das benannte System Semaphor nicht vorhanden ist, wird es mit der anfänglichen Anzahl und der maximalen Anzahl erstellt, `initialCount` die `maximumCount`von und angegeben werden.</span><span class="sxs-lookup"><span data-stu-id="c358d-237">If the named system semaphore does not exist, it is created with the initial count and maximum count specified by `initialCount` and `maximumCount`.</span></span> <span data-ttu-id="c358d-238">Wenn das benannte System Semaphor bereits vorhanden ist `initialCount` und `maximumCount` nicht verwendet wird, verursachen ungültige Werte weiterhin Ausnahmen.</span><span class="sxs-lookup"><span data-stu-id="c358d-238">If the named system semaphore already exists, `initialCount` and `maximumCount` are not used, although invalid values still cause exceptions.</span></span> <span data-ttu-id="c358d-239">Verwenden Sie `createdNew` den-Parameter, um zu bestimmen, ob das System Semaphor von diesem Konstruktor erstellt wurde.</span><span class="sxs-lookup"><span data-stu-id="c358d-239">Use the `createdNew` parameter to determine whether the system semaphore was created by this constructor.</span></span>  
  
 <span data-ttu-id="c358d-240">Wenn `initialCount` kleiner als `maximumCount`und`maximumCount` `initialCount`ist, entspricht der Effekt dem, wenn der aktuelle Thread (minus) aufgerufen <xref:System.Threading.WaitHandle.WaitOne%2A> hat. `true` `createdNew`</span><span class="sxs-lookup"><span data-stu-id="c358d-240">If `initialCount` is less than `maximumCount`, and `createdNew` is `true`, the effect is the same as if the current thread had called <xref:System.Threading.WaitHandle.WaitOne%2A> (`maximumCount` minus `initialCount`) times.</span></span>  
  
 <span data-ttu-id="c358d-241">Wenn Sie oder `null` eine leere Zeichenfolge für `name`angeben, wird ein lokales Semaphor erstellt, als ob Sie die <xref:System.Threading.Semaphore.%23ctor%28System.Int32%2CSystem.Int32%29> Konstruktorüberladung aufgerufen hätten.</span><span class="sxs-lookup"><span data-stu-id="c358d-241">If you specify `null` or an empty string for `name`, a local semaphore is created, as if you had called the <xref:System.Threading.Semaphore.%23ctor%28System.Int32%2CSystem.Int32%29> constructor overload.</span></span> <span data-ttu-id="c358d-242">In diesem Fall `createdNew` ist immer `true`.</span><span class="sxs-lookup"><span data-stu-id="c358d-242">In this case, `createdNew` is always `true`.</span></span>  
  
 <span data-ttu-id="c358d-243">Da benannte Semaphoren im gesamten Betriebssystem sichtbar sind, können Sie verwendet werden, um die Ressourcenverwendung über Prozess Grenzen hinweg zu koordinieren.</span><span class="sxs-lookup"><span data-stu-id="c358d-243">Because named semaphores are visible throughout the operating system, they can be used to coordinate resource use across process boundaries.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c358d-244">Im folgenden Codebeispiel wird das prozessübergreifende Verhalten eines benannten Semaphors mit Zugriffs Steuerungs Sicherheit veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="c358d-244">The following code example demonstrates the cross-process behavior of a named semaphore with access control security.</span></span> <span data-ttu-id="c358d-245">Im Beispiel wird die <xref:System.Threading.Semaphore.OpenExisting%28System.String%29> -Methoden Überladung verwendet, um zu testen, ob ein benanntes Semaphor vorhanden ist.</span><span class="sxs-lookup"><span data-stu-id="c358d-245">The example uses the <xref:System.Threading.Semaphore.OpenExisting%28System.String%29> method overload to test for the existence of a named semaphore.</span></span> <span data-ttu-id="c358d-246">Wenn das Semaphor nicht vorhanden ist, wird es mit einer maximalen Anzahl von zwei und mit Zugriffs Steuerungs Sicherheit erstellt, die dem aktuellen Benutzer das Recht verweigert, das Semaphor zu verwenden, aber das Recht zum Lesen und Ändern von Berechtigungen für das Semaphor gewährt.</span><span class="sxs-lookup"><span data-stu-id="c358d-246">If the semaphore does not exist, it is created with a maximum count of two and with access control security that denies the current user the right to use the semaphore but grants the right to read and change permissions on the semaphore.</span></span> <span data-ttu-id="c358d-247">Wenn Sie das kompilierte Beispiel aus zwei Befehls Fenstern ausführen, löst die zweite Kopie eine Zugriffs Verletzungs Ausnahme beim Aufrufen der <xref:System.Threading.Semaphore.OpenExisting%28System.String%29> -Methode aus.</span><span class="sxs-lookup"><span data-stu-id="c358d-247">If you run the compiled example from two command windows, the second copy will throw an access violation exception on the call to the <xref:System.Threading.Semaphore.OpenExisting%28System.String%29> method.</span></span> <span data-ttu-id="c358d-248">Die Ausnahme wird abgefangen, und das Beispiel verwendet die <xref:System.Threading.Semaphore.OpenExisting%28System.String%2CSystem.Security.AccessControl.SemaphoreRights%29> -Methoden Überladung, um das Semaphor mit den rechten zu öffnen, die zum Lesen und Ändern der Berechtigungen erforderlich sind.</span><span class="sxs-lookup"><span data-stu-id="c358d-248">The exception is caught, and the example uses the <xref:System.Threading.Semaphore.OpenExisting%28System.String%2CSystem.Security.AccessControl.SemaphoreRights%29> method overload to open the semaphore with the rights needed to read and change the permissions.</span></span>  
  
 <span data-ttu-id="c358d-249">Nachdem die Berechtigungen geändert wurden, wird das Semaphor mit den Rechten geöffnet, die für die Eingabe und Freigabe erforderlich sind.</span><span class="sxs-lookup"><span data-stu-id="c358d-249">After the permissions are changed, the semaphore is opened with the rights required to enter and release.</span></span> <span data-ttu-id="c358d-250">Wenn Sie das kompilierte Beispiel aus einem dritten Befehlsfenster ausführen, wird es mithilfe der neuen Berechtigungen ausgeführt.</span><span class="sxs-lookup"><span data-stu-id="c358d-250">If you run the compiled example from a third command window, it runs using the new permissions.</span></span>  
  
 [!code-cpp[System.Threading.Semaphore.ctor named 5a#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.Semaphore.ctor named 5a/CPP/source.cpp#1)]
 [!code-csharp[System.Threading.Semaphore.ctor named 5a#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.Semaphore.ctor named 5a/CS/source.cs#1)]
 [!code-vb[System.Threading.Semaphore.ctor named 5a#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.Semaphore.ctor named 5a/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="c358d-251"><paramref name="initialCount" /> ist größer als <paramref name="maximumCount" />.</span><span class="sxs-lookup"><span data-stu-id="c358d-251"><paramref name="initialCount" /> is greater than <paramref name="maximumCount" />.</span></span>  
  
<span data-ttu-id="c358d-252">- oder -</span><span class="sxs-lookup"><span data-stu-id="c358d-252">-or-</span></span> 
 <span data-ttu-id="c358d-253"><paramref name="name" /> ist länger als 260 Zeichen.</span><span class="sxs-lookup"><span data-stu-id="c358d-253"><paramref name="name" /> is longer than 260 characters.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="c358d-254"><paramref name="maximumCount" /> ist kleiner als 1.</span><span class="sxs-lookup"><span data-stu-id="c358d-254"><paramref name="maximumCount" /> is less than 1.</span></span>  
  
<span data-ttu-id="c358d-255">- oder -</span><span class="sxs-lookup"><span data-stu-id="c358d-255">-or-</span></span> 
 <span data-ttu-id="c358d-256"><paramref name="initialCount" /> ist kleiner als 0.</span><span class="sxs-lookup"><span data-stu-id="c358d-256"><paramref name="initialCount" /> is less than 0.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="c358d-257">Der benannte Semaphor ist vorhanden und verfügt über Zugriffssteuerungssicherheit, und der Benutzer verfügt nicht über <see cref="F:System.Security.AccessControl.SemaphoreRights.FullControl" />.</span><span class="sxs-lookup"><span data-stu-id="c358d-257">The named semaphore exists and has access control security, and the user does not have <see cref="F:System.Security.AccessControl.SemaphoreRights.FullControl" />.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="c358d-258">Win32-Fehler.</span><span class="sxs-lookup"><span data-stu-id="c358d-258">A Win32 error occurred.</span></span></exception>
        <exception cref="T:System.Threading.WaitHandleCannotBeOpenedException"><span data-ttu-id="c358d-259">Der benannte Semaphor kann nicht erstellt werden, möglicherweise, weil ein Wait-Handle eines anderen Typs den gleichen Namen hat.</span><span class="sxs-lookup"><span data-stu-id="c358d-259">The named semaphore cannot be created, perhaps because a wait handle of a different type has the same name.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="c358d-260">zum Aufrufen von nicht verwaltetem Code zum Erstellen eines benannten System Semaphors.</span><span class="sxs-lookup"><span data-stu-id="c358d-260">for calling unmanaged code to create a named system semaphore.</span></span> <span data-ttu-id="c358d-261">Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="c358d-261">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</span></span> <span data-ttu-id="c358d-262">Sicherheitsaktion: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</span><span class="sxs-lookup"><span data-stu-id="c358d-262">Security action: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</span></span></permission>
        <related type="Article" href="~/docs/standard/threading/index.md"><span data-ttu-id="c358d-263">Verwaltetes Threading</span><span class="sxs-lookup"><span data-stu-id="c358d-263">Managed Threading</span></span></related>
        <related type="Article" href="~/docs/standard/threading/semaphore-and-semaphoreslim.md"><span data-ttu-id="c358d-264">Semaphore</span><span class="sxs-lookup"><span data-stu-id="c358d-264">Semaphore</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetAccessControl">
      <MemberSignature Language="C#" Value="public System.Security.AccessControl.SemaphoreSecurity GetAccessControl ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Security.AccessControl.SemaphoreSecurity GetAccessControl() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Semaphore.GetAccessControl" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAccessControl () As SemaphoreSecurity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Security::AccessControl::SemaphoreSecurity ^ GetAccessControl();" />
      <MemberSignature Language="F#" Value="member this.GetAccessControl : unit -&gt; System.Security.AccessControl.SemaphoreSecurity" Usage="semaphore.GetAccessControl " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.AccessControl.SemaphoreSecurity</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c358d-265">Ruft die Zugriffssteuerungssicherheit für ein benanntes Systemsemaphor ab.</span><span class="sxs-lookup"><span data-stu-id="c358d-265">Gets the access control security for a named system semaphore.</span></span></summary>
        <returns><span data-ttu-id="c358d-266">Ein <see cref="T:System.Security.AccessControl.SemaphoreSecurity" />-Objekt, das die Zugriffssteuerungssicherheit für das benannte Systemsemaphor darstellt.</span><span class="sxs-lookup"><span data-stu-id="c358d-266">A <see cref="T:System.Security.AccessControl.SemaphoreSecurity" /> object that represents the access control security for the named system semaphore.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c358d-267">Die <xref:System.Threading.Semaphore.GetAccessControl%2A> -Methode verwendet die folgende Kombination von-Flags (kombiniert mithilfe des bitweisen OR-Vorgangs), um <xref:System.Security.AccessControl.AccessControlSections.Access?displayProperty=nameWithType>nach Berechtigungen zu <xref:System.Security.AccessControl.AccessControlSections.Group?displayProperty=nameWithType>suchen:, <xref:System.Security.AccessControl.AccessControlSections.Owner?displayProperty=nameWithType>und.</span><span class="sxs-lookup"><span data-stu-id="c358d-267">The <xref:System.Threading.Semaphore.GetAccessControl%2A> method uses the following combination of flags (combined using the bitwise OR operation) to search for permissions: <xref:System.Security.AccessControl.AccessControlSections.Access?displayProperty=nameWithType>, <xref:System.Security.AccessControl.AccessControlSections.Owner?displayProperty=nameWithType>, and <xref:System.Security.AccessControl.AccessControlSections.Group?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="c358d-268">Der Benutzer muss über <xref:System.Security.AccessControl.SemaphoreRights.ReadPermissions?displayProperty=nameWithType> Rechte zum Abrufen dieser Methode verfügen, und das Semaphor muss mit <xref:System.Security.AccessControl.SemaphoreRights.ReadPermissions?displayProperty=nameWithType> Rechten geöffnet worden sein.</span><span class="sxs-lookup"><span data-stu-id="c358d-268">The user must have <xref:System.Security.AccessControl.SemaphoreRights.ReadPermissions?displayProperty=nameWithType> rights to call this method, and the semaphore must have been opened with <xref:System.Security.AccessControl.SemaphoreRights.ReadPermissions?displayProperty=nameWithType> rights.</span></span>  
  
 <span data-ttu-id="c358d-269">Bei einem lokalen Semaphor ist die Zugriffs Steuerungs Sicherheit irrelevant.</span><span class="sxs-lookup"><span data-stu-id="c358d-269">On a local semaphore, access control security is irrelevant.</span></span> <span data-ttu-id="c358d-270">Wenn das <xref:System.Threading.Semaphore> -Objekt kein benanntes System Semaphor darstellt, gibt diese Methode <xref:System.Security.AccessControl.SemaphoreSecurity> ein-Objekt zurück, das allen Benutzern alle Rechte gewährt.</span><span class="sxs-lookup"><span data-stu-id="c358d-270">If the <xref:System.Threading.Semaphore> object does not represent a named system semaphore, this method returns a <xref:System.Security.AccessControl.SemaphoreSecurity> object that grants all rights to any user.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c358d-271">Im folgenden Codebeispiel wird das prozessübergreifende Verhalten eines benannten Semaphors mit Zugriffs Steuerungs Sicherheit veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="c358d-271">The following code example demonstrates the cross-process behavior of a named semaphore with access control security.</span></span> <span data-ttu-id="c358d-272">Im Beispiel wird die <xref:System.Threading.Semaphore.OpenExisting%28System.String%29> -Methoden Überladung verwendet, um zu testen, ob ein benanntes Semaphor vorhanden ist.</span><span class="sxs-lookup"><span data-stu-id="c358d-272">The example uses the <xref:System.Threading.Semaphore.OpenExisting%28System.String%29> method overload to test for the existence of a named semaphore.</span></span>  
  
 <span data-ttu-id="c358d-273">Wenn das Semaphor nicht vorhanden ist, wird es mit einer maximalen Anzahl von zwei und mit Zugriffs Steuerungs Sicherheit erstellt, die dem aktuellen Benutzer das Recht verweigert, das Semaphor zu verwenden, aber das Recht zum Lesen und Ändern von Berechtigungen für das Semaphor gewährt.</span><span class="sxs-lookup"><span data-stu-id="c358d-273">If the semaphore does not exist, it is created with a maximum count of two and with access control security that denies the current user the right to use the semaphore, but grants the right to read and change permissions on the semaphore.</span></span>  
  
 <span data-ttu-id="c358d-274">Wenn Sie das kompilierte Beispiel aus zwei Befehls Fenstern ausführen, löst die zweite Kopie eine Zugriffs Verletzungs Ausnahme beim Aufrufen der <xref:System.Threading.Semaphore.OpenExisting%28System.String%29> -Methode aus.</span><span class="sxs-lookup"><span data-stu-id="c358d-274">If you run the compiled example from two command windows, the second copy will throw an access violation exception on the call to the <xref:System.Threading.Semaphore.OpenExisting%28System.String%29> method.</span></span> <span data-ttu-id="c358d-275">Die Ausnahme wird abgefangen, und das Beispiel verwendet die <xref:System.Threading.Semaphore.OpenExisting%28System.String%2CSystem.Security.AccessControl.SemaphoreRights%29> -Methoden Überladung, um das Semaphor mit den rechten zu öffnen, die zum Lesen und Ändern der Berechtigungen erforderlich sind.</span><span class="sxs-lookup"><span data-stu-id="c358d-275">The exception is caught, and the example uses the <xref:System.Threading.Semaphore.OpenExisting%28System.String%2CSystem.Security.AccessControl.SemaphoreRights%29> method overload to open the semaphore with the rights needed to read and change the permissions.</span></span> <span data-ttu-id="c358d-276">Die Zugriffs Steuerungs Sicherheit für das System Semaphor wird mithilfe der <xref:System.Threading.Semaphore.GetAccessControl%2A> -Methode abgerufen.</span><span class="sxs-lookup"><span data-stu-id="c358d-276">The access control security for the system semaphore is obtained using the <xref:System.Threading.Semaphore.GetAccessControl%2A> method.</span></span>  
  
 <span data-ttu-id="c358d-277">Nachdem die Berechtigungen geändert wurden, wird das Semaphor mit den Rechten geöffnet, die für die Eingabe und Freigabe erforderlich sind.</span><span class="sxs-lookup"><span data-stu-id="c358d-277">After the permissions are changed, the semaphore is opened with the rights required to enter and release.</span></span> <span data-ttu-id="c358d-278">Wenn Sie das kompilierte Beispiel aus einem dritten Befehlsfenster ausführen, wird es mithilfe der neuen Berechtigungen ausgeführt.</span><span class="sxs-lookup"><span data-stu-id="c358d-278">If you run the compiled example from a third command window, it runs using the new permissions.</span></span>  
  
 [!code-cpp[System.Threading.Semaphore.ctor named 5a#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.Semaphore.ctor named 5a/CPP/source.cpp#1)]
 [!code-csharp[System.Threading.Semaphore.ctor named 5a#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.Semaphore.ctor named 5a/CS/source.cs#1)]
 [!code-vb[System.Threading.Semaphore.ctor named 5a#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.Semaphore.ctor named 5a/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="c358d-279">Das aktuelle <see cref="T:System.Threading.Semaphore" />-Objekt stellt einen benannten Systemsemaphor dar, und der Benutzer verfügt nicht über <see cref="F:System.Security.AccessControl.SemaphoreRights.ReadPermissions" />-Berechtigung.</span><span class="sxs-lookup"><span data-stu-id="c358d-279">The current <see cref="T:System.Threading.Semaphore" /> object represents a named system semaphore, and the user does not have <see cref="F:System.Security.AccessControl.SemaphoreRights.ReadPermissions" /> rights.</span></span>  
  
<span data-ttu-id="c358d-280">- oder -</span><span class="sxs-lookup"><span data-stu-id="c358d-280">-or-</span></span> 
<span data-ttu-id="c358d-281">Das aktuelle <see cref="T:System.Threading.Semaphore" />-Objekt stellt einen benannten Systemsemaphor dar und wurde nicht mit <see cref="F:System.Security.AccessControl.SemaphoreRights.ReadPermissions" />-Berechtigung geöffnet.</span><span class="sxs-lookup"><span data-stu-id="c358d-281">The current <see cref="T:System.Threading.Semaphore" /> object represents a named system semaphore and was not opened with <see cref="F:System.Security.AccessControl.SemaphoreRights.ReadPermissions" /> rights.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="c358d-282">Wird nicht für Windows 98 oder Windows Millennium Edition unterstützt.</span><span class="sxs-lookup"><span data-stu-id="c358d-282">Not supported for Windows 98 or Windows Millennium Edition.</span></span></exception>
        <related type="Article" href="~/docs/standard/threading/index.md"><span data-ttu-id="c358d-283">Verwaltetes Threading</span><span class="sxs-lookup"><span data-stu-id="c358d-283">Managed Threading</span></span></related>
        <related type="Article" href="~/docs/standard/threading/semaphore-and-semaphoreslim.md"><span data-ttu-id="c358d-284">Semaphore</span><span class="sxs-lookup"><span data-stu-id="c358d-284">Semaphore</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="OpenExisting">
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="c358d-285">Öffnet eine bestimmte benannte Semaphore, wenn sie bereits vorhanden ist.</span><span class="sxs-lookup"><span data-stu-id="c358d-285">Opens a specified named semaphore, if it already exists.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="OpenExisting">
      <MemberSignature Language="C#" Value="public static System.Threading.Semaphore OpenExisting (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Semaphore OpenExisting(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Semaphore.OpenExisting(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OpenExisting (name As String) As Semaphore" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Threading::Semaphore ^ OpenExisting(System::String ^ name);" />
      <MemberSignature Language="F#" Value="static member OpenExisting : string -&gt; System.Threading.Semaphore" Usage="System.Threading.Semaphore.OpenExisting name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Semaphore</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="c358d-286">Der Name des zu öffnenden Systemsemaphors.</span><span class="sxs-lookup"><span data-stu-id="c358d-286">The name of the system semaphore to open.</span></span></param>
        <summary><span data-ttu-id="c358d-287">Öffnet die bestimmte benannte Semaphore, wenn sie bereits vorhanden ist.</span><span class="sxs-lookup"><span data-stu-id="c358d-287">Opens the specified named semaphore, if it already exists.</span></span></summary>
        <returns><span data-ttu-id="c358d-288">Ein Objekt, das das benannte Systemsemaphor darstellt.</span><span class="sxs-lookup"><span data-stu-id="c358d-288">An object that represents the named system semaphore.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c358d-289">Die <xref:System.Threading.Semaphore.OpenExisting%2A> -Methode versucht, die angegebene benannte Semaphore zu öffnen.</span><span class="sxs-lookup"><span data-stu-id="c358d-289">The <xref:System.Threading.Semaphore.OpenExisting%2A> method tries to open the specified named semaphore.</span></span> <span data-ttu-id="c358d-290">Wenn das System Semaphor nicht vorhanden ist, löst diese Methode eine Ausnahme aus, statt das System Semaphor zu erstellen.</span><span class="sxs-lookup"><span data-stu-id="c358d-290">If the system semaphore does not exist, this method throws an exception instead of creating the system semaphore.</span></span> <span data-ttu-id="c358d-291">Um das System Semaphor zu erstellen, wenn es nicht bereits vorhanden ist, verwenden Sie <xref:System.Threading.Semaphore.%23ctor%2A> einen der-Konstruktoren `name` mit einem-Parameter.</span><span class="sxs-lookup"><span data-stu-id="c358d-291">To create the system semaphore when it does not already exist, use one of the <xref:System.Threading.Semaphore.%23ctor%2A> constructors that has a `name` parameter.</span></span>  
  
 <span data-ttu-id="c358d-292">Mehrere Aufrufe dieser Methode, die denselben Wert für `name` verwenden, geben nicht notwendigerweise dasselbe <xref:System.Threading.Semaphore> Objekt zurück, auch wenn die zurückgegebenen Objekte dasselbe benannte System Semaphor darstellen.</span><span class="sxs-lookup"><span data-stu-id="c358d-292">Multiple calls to this method that use the same value for `name` do not necessarily return the same <xref:System.Threading.Semaphore> object, even though the objects that are returned represent the same named system semaphore.</span></span>  
  
 <span data-ttu-id="c358d-293">Diese Methoden Überladung entspricht dem Aufrufen der <xref:System.Threading.Semaphore.OpenExisting%2A> -Methoden Überladung <xref:System.Security.AccessControl.SemaphoreRights.Synchronize?displayProperty=nameWithType> und <xref:System.Security.AccessControl.SemaphoreRights.Modify?displayProperty=nameWithType> der Angabe von-und-rechten in Kombination mit der bitweisen OR-Operation.</span><span class="sxs-lookup"><span data-stu-id="c358d-293">This method overload is equivalent to calling the <xref:System.Threading.Semaphore.OpenExisting%2A> method overload and specifying <xref:System.Security.AccessControl.SemaphoreRights.Synchronize?displayProperty=nameWithType> and <xref:System.Security.AccessControl.SemaphoreRights.Modify?displayProperty=nameWithType> rights, combined by using the bitwise OR operation.</span></span>  
  
 <span data-ttu-id="c358d-294">Wenn Sie <xref:System.Security.AccessControl.SemaphoreRights.Synchronize?displayProperty=nameWithType> das-Flag angeben, kann ein Thread in das Semaphor eintreten <xref:System.Security.AccessControl.SemaphoreRights.Modify?displayProperty=nameWithType> , und die Angabe des-Flags <xref:System.Threading.Semaphore.Release%2A> ermöglicht einem Thread, die-Methode aufzurufen.</span><span class="sxs-lookup"><span data-stu-id="c358d-294">Specifying the <xref:System.Security.AccessControl.SemaphoreRights.Synchronize?displayProperty=nameWithType> flag allows a thread to enter the semaphore, and specifying the <xref:System.Security.AccessControl.SemaphoreRights.Modify?displayProperty=nameWithType> flag allows a thread to call the <xref:System.Threading.Semaphore.Release%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c358d-295">Im folgenden Codebeispiel wird das prozessübergreifende Verhalten eines benannten Semaphors mit Zugriffs Steuerungs Sicherheit veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="c358d-295">The following code example demonstrates the cross-process behavior of a named semaphore with access control security.</span></span> <span data-ttu-id="c358d-296">Im Beispiel wird die <xref:System.Threading.Semaphore.OpenExisting%28System.String%29> -Methoden Überladung verwendet, um zu testen, ob ein benanntes Semaphor vorhanden ist.</span><span class="sxs-lookup"><span data-stu-id="c358d-296">The example uses the <xref:System.Threading.Semaphore.OpenExisting%28System.String%29> method overload to test for the existence of a named semaphore.</span></span>  
  
 <span data-ttu-id="c358d-297">Wenn das Semaphor nicht vorhanden ist, wird es mit einer maximalen Anzahl von zwei und mit der Zugriffs Steuerungs Sicherheit erstellt, die dem aktuellen Benutzer das Recht verweigert, das Semaphor zu verwenden, das jedoch dem Recht gewährt, Lese-und Änderungs Berechtigungen für das Semaphor zu erteilen.</span><span class="sxs-lookup"><span data-stu-id="c358d-297">If the semaphore does not exist, it is created with a maximum count of two and with access control security that denies the current user the right to use the semaphore, but which grants the right to read and change permissions on the semaphore.</span></span>  
  
 <span data-ttu-id="c358d-298">Wenn Sie das kompilierte Beispiel aus zwei Befehls Fenstern ausführen, löst die zweite Kopie beim Aufrufen der <xref:System.Threading.Semaphore.OpenExisting%28System.String%29> -Methoden Überladung eine Zugriffs Verletzungs Ausnahme aus.</span><span class="sxs-lookup"><span data-stu-id="c358d-298">If you run the compiled example from two command windows, the second copy will throw an access violation exception on the call to the <xref:System.Threading.Semaphore.OpenExisting%28System.String%29> method overload.</span></span> <span data-ttu-id="c358d-299">Die Ausnahme wird abgefangen, und das Beispiel verwendet die <xref:System.Threading.Semaphore.OpenExisting%28System.String%2CSystem.Security.AccessControl.SemaphoreRights%29> -Methoden Überladung, um das Semaphor mit den rechten zu öffnen, die zum Lesen und Ändern der Berechtigungen erforderlich sind.</span><span class="sxs-lookup"><span data-stu-id="c358d-299">The exception is caught, and the example uses the <xref:System.Threading.Semaphore.OpenExisting%28System.String%2CSystem.Security.AccessControl.SemaphoreRights%29> method overload to open the semaphore with the rights needed to read and change the permissions.</span></span>  
  
 <span data-ttu-id="c358d-300">Nachdem die Berechtigungen geändert wurden, wird das Semaphor mit den zum eingeben und Freigeben erforderlichen Rechten geöffnet.</span><span class="sxs-lookup"><span data-stu-id="c358d-300">After the permissions are changed, the semaphore is opened with the rights required to enter and release it.</span></span> <span data-ttu-id="c358d-301">Wenn Sie das kompilierte Beispiel aus einem dritten Befehlsfenster ausführen, wird es mithilfe der neuen Berechtigungen ausgeführt.</span><span class="sxs-lookup"><span data-stu-id="c358d-301">If you run the compiled example from a third command window, it runs using the new permissions.</span></span>  
  
 [!code-cpp[System.Threading.Semaphore.ctor named 5a#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.Semaphore.ctor named 5a/CPP/source.cpp#1)]
 [!code-csharp[System.Threading.Semaphore.ctor named 5a#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.Semaphore.ctor named 5a/CS/source.cs#1)]
 [!code-vb[System.Threading.Semaphore.ctor named 5a#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.Semaphore.ctor named 5a/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="c358d-302"><paramref name="name" /> ist eine leere Zeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="c358d-302"><paramref name="name" /> is an empty string.</span></span>  
  
<span data-ttu-id="c358d-303">- oder -</span><span class="sxs-lookup"><span data-stu-id="c358d-303">-or-</span></span> 
 <span data-ttu-id="c358d-304"><paramref name="name" /> ist länger als 260 Zeichen.</span><span class="sxs-lookup"><span data-stu-id="c358d-304"><paramref name="name" /> is longer than 260 characters.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c358d-305"><paramref name="name" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c358d-305"><paramref name="name" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Threading.WaitHandleCannotBeOpenedException"><span data-ttu-id="c358d-306">Das benannte Semaphor ist nicht vorhanden.</span><span class="sxs-lookup"><span data-stu-id="c358d-306">The named semaphore does not exist.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="c358d-307">Win32-Fehler.</span><span class="sxs-lookup"><span data-stu-id="c358d-307">A Win32 error occurred.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="c358d-308">Der benannte Semaphor ist vorhanden, aber der Benutzer verfügt nicht über den Sicherheitszugriff, der für die Verwendung erforderlich ist.</span><span class="sxs-lookup"><span data-stu-id="c358d-308">The named semaphore exists, but the user does not have the security access required to use it.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="c358d-309">zum Aufrufen von nicht verwaltetem Code zum Öffnen eines benannten System Semaphors.</span><span class="sxs-lookup"><span data-stu-id="c358d-309">for calling unmanaged code to open a named system semaphore.</span></span> <span data-ttu-id="c358d-310">Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="c358d-310">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</span></span>  
  
<span data-ttu-id="c358d-311">Sicherheitsaktion: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</span><span class="sxs-lookup"><span data-stu-id="c358d-311">Security action: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</span></span></permission>
        <related type="Article" href="~/docs/standard/threading/index.md"><span data-ttu-id="c358d-312">Verwaltetes Threading</span><span class="sxs-lookup"><span data-stu-id="c358d-312">Managed Threading</span></span></related>
        <related type="Article" href="~/docs/standard/threading/semaphore-and-semaphoreslim.md"><span data-ttu-id="c358d-313">Semaphore</span><span class="sxs-lookup"><span data-stu-id="c358d-313">Semaphore</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="OpenExisting">
      <MemberSignature Language="C#" Value="public static System.Threading.Semaphore OpenExisting (string name, System.Security.AccessControl.SemaphoreRights rights);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Semaphore OpenExisting(string name, valuetype System.Security.AccessControl.SemaphoreRights rights) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Semaphore.OpenExisting(System.String,System.Security.AccessControl.SemaphoreRights)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OpenExisting (name As String, rights As SemaphoreRights) As Semaphore" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Threading::Semaphore ^ OpenExisting(System::String ^ name, System::Security::AccessControl::SemaphoreRights rights);" />
      <MemberSignature Language="F#" Value="static member OpenExisting : string * System.Security.AccessControl.SemaphoreRights -&gt; System.Threading.Semaphore" Usage="System.Threading.Semaphore.OpenExisting (name, rights)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Semaphore</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="rights" Type="System.Security.AccessControl.SemaphoreRights" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="c358d-314">Der Name des zu öffnenden Systemsemaphors.</span><span class="sxs-lookup"><span data-stu-id="c358d-314">The name of the system semaphore to open.</span></span></param>
        <param name="rights"><span data-ttu-id="c358d-315">Eine bitweise Kombination von Enumerationswerten, die die gewünschten Sicherheitszugriffsrechte darstellen.</span><span class="sxs-lookup"><span data-stu-id="c358d-315">A bitwise combination of the enumeration values that represent the desired security access.</span></span></param>
        <summary><span data-ttu-id="c358d-316">Öffnet die angegebene benannte Semaphore, wenn sie bereits vorhanden ist, mit dem gewünschten Sicherheitszugriff.</span><span class="sxs-lookup"><span data-stu-id="c358d-316">Opens the specified named semaphore, if it already exists, with the desired security access.</span></span></summary>
        <returns><span data-ttu-id="c358d-317">Ein Objekt, das das benannte Systemsemaphor darstellt.</span><span class="sxs-lookup"><span data-stu-id="c358d-317">An object that represents the named system semaphore.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c358d-318">Der `rights` -Parameter muss das <xref:System.Security.AccessControl.SemaphoreRights.Synchronize?displayProperty=nameWithType> -Flag enthalten, damit Threads in das Semaphor eintreten können <xref:System.Security.AccessControl.SemaphoreRights.Modify?displayProperty=nameWithType> , und das-Flag, mit <xref:System.Threading.Semaphore.Release%2A> dem Threads die-Methode aufrufen können.</span><span class="sxs-lookup"><span data-stu-id="c358d-318">The `rights` parameter must include the <xref:System.Security.AccessControl.SemaphoreRights.Synchronize?displayProperty=nameWithType> flag to allow threads to enter the semaphore, and the <xref:System.Security.AccessControl.SemaphoreRights.Modify?displayProperty=nameWithType> flag to allow threads to call the <xref:System.Threading.Semaphore.Release%2A> method.</span></span>  
  
 <span data-ttu-id="c358d-319">Die <xref:System.Threading.Semaphore.OpenExisting%2A> -Methode versucht, eine vorhandene benannte Semaphore zu öffnen.</span><span class="sxs-lookup"><span data-stu-id="c358d-319">The <xref:System.Threading.Semaphore.OpenExisting%2A> method tries to open an existing named semaphore.</span></span> <span data-ttu-id="c358d-320">Wenn das System Semaphor nicht vorhanden ist, löst diese Methode eine Ausnahme aus, statt das System Semaphor zu erstellen.</span><span class="sxs-lookup"><span data-stu-id="c358d-320">If the system semaphore does not exist, this method throws an exception instead of creating the system semaphore.</span></span> <span data-ttu-id="c358d-321">Um das System Semaphor zu erstellen, wenn es nicht bereits vorhanden ist, verwenden Sie <xref:System.Threading.Semaphore.%23ctor%2A> einen der-Konstruktoren `name` mit einem-Parameter.</span><span class="sxs-lookup"><span data-stu-id="c358d-321">To create the system semaphore when it does not already exist, use one of the <xref:System.Threading.Semaphore.%23ctor%2A> constructors that has a `name` parameter.</span></span>  
  
 <span data-ttu-id="c358d-322">Mehrere Aufrufe dieser Methode, die denselben Wert für `name` verwenden, geben nicht notwendigerweise dasselbe <xref:System.Threading.Semaphore> Objekt zurück, auch wenn die zurückgegebenen Objekte dasselbe benannte System Semaphor darstellen.</span><span class="sxs-lookup"><span data-stu-id="c358d-322">Multiple calls to this method that use the same value for `name` do not necessarily return the same <xref:System.Threading.Semaphore> object, even though the objects that are returned represent the same named system semaphore.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c358d-323">Im folgenden Codebeispiel wird das prozessübergreifende Verhalten eines benannten Semaphors mit Zugriffs Steuerungs Sicherheit veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="c358d-323">The following code example demonstrates the cross-process behavior of a named semaphore with access control security.</span></span> <span data-ttu-id="c358d-324">Im Beispiel wird die <xref:System.Threading.Semaphore.OpenExisting%28System.String%29> -Methoden Überladung verwendet, um zu testen, ob ein benanntes Semaphor vorhanden ist.</span><span class="sxs-lookup"><span data-stu-id="c358d-324">The example uses the <xref:System.Threading.Semaphore.OpenExisting%28System.String%29> method overload to test for the existence of a named semaphore.</span></span>  
  
 <span data-ttu-id="c358d-325">Wenn das Semaphor nicht vorhanden ist, wird es mit einer maximalen Anzahl von zwei und mit Zugriffs Steuerungs Sicherheit erstellt, die dem aktuellen Benutzer das Recht verweigert, das Semaphor zu verwenden, aber das Recht zum Lesen und Ändern von Berechtigungen für das Semaphor gewährt.</span><span class="sxs-lookup"><span data-stu-id="c358d-325">If the semaphore does not exist, it is created with a maximum count of two and with access control security that denies the current user the right to use the semaphore, but grants the right to read and change permissions on the semaphore.</span></span>  
  
 <span data-ttu-id="c358d-326">Wenn Sie das kompilierte Beispiel aus zwei Befehls Fenstern ausführen, löst die zweite Kopie eine Zugriffs Verletzungs Ausnahme beim Aufrufen der <xref:System.Threading.Semaphore.OpenExisting%28System.String%29> -Methode aus.</span><span class="sxs-lookup"><span data-stu-id="c358d-326">If you run the compiled example from two command windows, the second copy will throw an access violation exception on the call to the <xref:System.Threading.Semaphore.OpenExisting%28System.String%29> method.</span></span> <span data-ttu-id="c358d-327">Die Ausnahme wird abgefangen, und das Beispiel verwendet die <xref:System.Threading.Semaphore.OpenExisting%28System.String%2CSystem.Security.AccessControl.SemaphoreRights%29> -Methoden Überladung, um das Semaphor mit den rechten zu öffnen, die zum Lesen und Ändern der Berechtigungen erforderlich sind.</span><span class="sxs-lookup"><span data-stu-id="c358d-327">The exception is caught, and the example uses the <xref:System.Threading.Semaphore.OpenExisting%28System.String%2CSystem.Security.AccessControl.SemaphoreRights%29> method overload to open the semaphore with the rights needed to read and change the permissions.</span></span>  
  
 <span data-ttu-id="c358d-328">Nachdem die Berechtigungen geändert wurden, wird das Semaphor mit den zum eingeben und Freigeben erforderlichen Rechten geöffnet.</span><span class="sxs-lookup"><span data-stu-id="c358d-328">After the permissions are changed, the semaphore is opened with the rights required to enter and release it.</span></span> <span data-ttu-id="c358d-329">Wenn Sie das kompilierte Beispiel aus einem dritten Befehlsfenster ausführen, wird es mithilfe der neuen Berechtigungen ausgeführt.</span><span class="sxs-lookup"><span data-stu-id="c358d-329">If you run the compiled example from a third command window, it runs using the new permissions.</span></span>  
  
 [!code-cpp[System.Threading.Semaphore.ctor named 5a#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.Semaphore.ctor named 5a/CPP/source.cpp#1)]
 [!code-csharp[System.Threading.Semaphore.ctor named 5a#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.Semaphore.ctor named 5a/CS/source.cs#1)]
 [!code-vb[System.Threading.Semaphore.ctor named 5a#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.Semaphore.ctor named 5a/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="c358d-330"><paramref name="name" /> ist eine leere Zeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="c358d-330"><paramref name="name" /> is an empty string.</span></span>  
  
<span data-ttu-id="c358d-331">- oder -</span><span class="sxs-lookup"><span data-stu-id="c358d-331">-or-</span></span> 
 <span data-ttu-id="c358d-332"><paramref name="name" /> ist länger als 260 Zeichen.</span><span class="sxs-lookup"><span data-stu-id="c358d-332"><paramref name="name" /> is longer than 260 characters.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c358d-333"><paramref name="name" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c358d-333"><paramref name="name" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Threading.WaitHandleCannotBeOpenedException"><span data-ttu-id="c358d-334">Das benannte Semaphor ist nicht vorhanden.</span><span class="sxs-lookup"><span data-stu-id="c358d-334">The named semaphore does not exist.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="c358d-335">Win32-Fehler.</span><span class="sxs-lookup"><span data-stu-id="c358d-335">A Win32 error occurred.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="c358d-336">Das benannte Semaphor ist vorhanden, der Benutzer verfügt jedoch nicht über die gewünschten Sicherheitszugriffsrechte.</span><span class="sxs-lookup"><span data-stu-id="c358d-336">The named semaphore exists, but the user does not have the desired security access rights.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="c358d-337">zum Aufrufen von nicht verwaltetem Code zum Erstellen eines benannten System Semaphors.</span><span class="sxs-lookup"><span data-stu-id="c358d-337">for calling unmanaged code to create a named system semaphore.</span></span> <span data-ttu-id="c358d-338">Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="c358d-338">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</span></span>  
  
<span data-ttu-id="c358d-339">Sicherheitsaktion: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</span><span class="sxs-lookup"><span data-stu-id="c358d-339">Security action: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</span></span></permission>
        <related type="Article" href="~/docs/standard/threading/index.md"><span data-ttu-id="c358d-340">Verwaltetes Threading</span><span class="sxs-lookup"><span data-stu-id="c358d-340">Managed Threading</span></span></related>
        <related type="Article" href="~/docs/standard/threading/semaphore-and-semaphoreslim.md"><span data-ttu-id="c358d-341">Semaphore</span><span class="sxs-lookup"><span data-stu-id="c358d-341">Semaphore</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Release">
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="c358d-342">Beendet das Semaphor.</span><span class="sxs-lookup"><span data-stu-id="c358d-342">Exits the semaphore.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Release">
      <MemberSignature Language="C#" Value="public int Release ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Release() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Semaphore.Release" />
      <MemberSignature Language="VB.NET" Value="Public Function Release () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Release();" />
      <MemberSignature Language="F#" Value="member this.Release : unit -&gt; int" Usage="semaphore.Release " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netstandard-2.1">
          <AttributeName>System.Runtime.ConstrainedExecution.PrePrepareMethod</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c358d-343">Beendet das Semaphor und gibt die vorherige Anzahl zurück.</span><span class="sxs-lookup"><span data-stu-id="c358d-343">Exits the semaphore and returns the previous count.</span></span></summary>
        <returns><span data-ttu-id="c358d-344">Die Anzahl für das Semaphor vor dem Aufruf der <see cref="Overload:System.Threading.Semaphore.Release" />-Methode.</span><span class="sxs-lookup"><span data-stu-id="c358d-344">The count on the semaphore before the <see cref="Overload:System.Threading.Semaphore.Release" /> method was called.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c358d-345">Threads verwenden normalerweise <xref:System.Threading.WaitHandle.WaitOne%2A> die-Methode, um das Semaphor einzugeben, und Sie verwenden diese Methoden Überladung normalerweise zum Beenden.</span><span class="sxs-lookup"><span data-stu-id="c358d-345">Threads typically use the <xref:System.Threading.WaitHandle.WaitOne%2A> method to enter the semaphore, and they typically use this method overload to exit.</span></span>  
  
 <span data-ttu-id="c358d-346">Wenn ein <xref:System.Threading.SemaphoreFullException> von der <xref:System.Threading.Semaphore.Release%2A> -Methode ausgelöst wird, weist dies nicht unbedingt auf ein Problem mit dem aufrufenden Thread hin.</span><span class="sxs-lookup"><span data-stu-id="c358d-346">If a <xref:System.Threading.SemaphoreFullException> is thrown by the <xref:System.Threading.Semaphore.Release%2A> method, it does not necessarily indicate a problem with the calling thread.</span></span> <span data-ttu-id="c358d-347">Ein Programmierfehler in einem anderen Thread hat möglicherweise bewirkt, dass dieser Thread das Semaphor mehrmals beendet hat, als er eingegeben hat.</span><span class="sxs-lookup"><span data-stu-id="c358d-347">A programming error in another thread might have caused that thread to exit the semaphore more times than it entered.</span></span>  
  
 <span data-ttu-id="c358d-348">Wenn das aktuelle <xref:System.Threading.Semaphore> -Objekt ein benanntes System Semaphor darstellt, muss <xref:System.Security.AccessControl.SemaphoreRights.Modify?displayProperty=nameWithType> der Benutzer über Rechte verfügen, und das Semaphor <xref:System.Security.AccessControl.SemaphoreRights.Modify?displayProperty=nameWithType> muss mit-Rechten geöffnet worden sein.</span><span class="sxs-lookup"><span data-stu-id="c358d-348">If the current <xref:System.Threading.Semaphore> object represents a named system semaphore, the user must have <xref:System.Security.AccessControl.SemaphoreRights.Modify?displayProperty=nameWithType> rights and the semaphore must have been opened with <xref:System.Security.AccessControl.SemaphoreRights.Modify?displayProperty=nameWithType> rights.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c358d-349">Im folgenden Codebeispiel wird ein Semaphor mit einer maximalen Anzahl von drei und einer anfänglichen Anzahl von 0 (null) erstellt.</span><span class="sxs-lookup"><span data-stu-id="c358d-349">The following code example creates a semaphore with a maximum count of three and an initial count of zero.</span></span> <span data-ttu-id="c358d-350">Im Beispiel werden fünf Threads gestartet, die blockieren, um auf das Semaphor zu warten.</span><span class="sxs-lookup"><span data-stu-id="c358d-350">The example starts five threads, which block waiting for the semaphore.</span></span> <span data-ttu-id="c358d-351">Der Haupt Thread verwendet die <xref:System.Threading.Semaphore.Release%28System.Int32%29> -Methoden Überladung, um die Anzahl der Semaphor auf den maximalen Wert zu erhöhen, sodass drei Threads in das Semaphor gelangen können.</span><span class="sxs-lookup"><span data-stu-id="c358d-351">The main thread uses the <xref:System.Threading.Semaphore.Release%28System.Int32%29> method overload to increase the semaphore count to its maximum, allowing three threads to enter the semaphore.</span></span> <span data-ttu-id="c358d-352">Jeder Thread verwendet die <xref:System.Threading.Thread.Sleep%2A?displayProperty=nameWithType> -Methode, um eine Sekunde zu warten, um die Arbeit zu simulieren, <xref:System.Threading.Semaphore.Release> und ruft dann die-Methoden Überladung auf, um das Semaphor freizugeben.</span><span class="sxs-lookup"><span data-stu-id="c358d-352">Each thread uses the <xref:System.Threading.Thread.Sleep%2A?displayProperty=nameWithType> method to wait for one second, to simulate work, and then calls the <xref:System.Threading.Semaphore.Release> method overload to release the semaphore.</span></span>  
  
 <span data-ttu-id="c358d-353">Jedes Mal, wenn das Semaphor freigegeben wird, wird die vorherige Semaphor-Anzahl angezeigt.</span><span class="sxs-lookup"><span data-stu-id="c358d-353">Each time the semaphore is released, the previous semaphore count is displayed.</span></span> <span data-ttu-id="c358d-354">Konsolen Meldungen verfolgen die Verwendung von Semaphor.</span><span class="sxs-lookup"><span data-stu-id="c358d-354">Console messages track semaphore use.</span></span> <span data-ttu-id="c358d-355">Das simulierte Arbeitsintervall wird für jeden Thread geringfügig angehoben, damit die Ausgabe leichter lesbar ist.</span><span class="sxs-lookup"><span data-stu-id="c358d-355">The simulated work interval is increased slightly for each thread, to make the output easier to read.</span></span>  
  
 [!code-cpp[System.Threading.Semaphore2#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.Semaphore2/CPP/source.cpp#1)]
 [!code-csharp[System.Threading.Semaphore2#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.Semaphore2/CS/source.cs#1)]
 [!code-vb[System.Threading.Semaphore2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.Semaphore2/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Threading.SemaphoreFullException"><span data-ttu-id="c358d-356">Die Anzahl für das Semaphor weist bereits den maximalen Wert auf.</span><span class="sxs-lookup"><span data-stu-id="c358d-356">The semaphore count is already at the maximum value.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="c358d-357">Bei einem benannten Semaphor ist ein Win32-Fehler aufgetreten.</span><span class="sxs-lookup"><span data-stu-id="c358d-357">A Win32 error occurred with a named semaphore.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="c358d-358">Das aktuelle Semaphor stellt ein benanntes Systemsemaphor dar. Der Benutzer verfügt jedoch nicht über <see cref="F:System.Security.AccessControl.SemaphoreRights.Modify" />.</span><span class="sxs-lookup"><span data-stu-id="c358d-358">The current semaphore represents a named system semaphore, but the user does not have <see cref="F:System.Security.AccessControl.SemaphoreRights.Modify" />.</span></span>  
  
<span data-ttu-id="c358d-359">- oder -</span><span class="sxs-lookup"><span data-stu-id="c358d-359">-or-</span></span> 
<span data-ttu-id="c358d-360">Das aktuelle Semaphor stellt ein benanntes Systemsemaphor dar, es wurde jedoch nicht mit <see cref="F:System.Security.AccessControl.SemaphoreRights.Modify" /> geöffnet.</span><span class="sxs-lookup"><span data-stu-id="c358d-360">The current semaphore represents a named system semaphore, but it was not opened with <see cref="F:System.Security.AccessControl.SemaphoreRights.Modify" />.</span></span></exception>
        <related type="Article" href="~/docs/standard/threading/index.md"><span data-ttu-id="c358d-361">Verwaltetes Threading</span><span class="sxs-lookup"><span data-stu-id="c358d-361">Managed Threading</span></span></related>
        <related type="Article" href="~/docs/standard/threading/semaphore-and-semaphoreslim.md"><span data-ttu-id="c358d-362">Semaphore</span><span class="sxs-lookup"><span data-stu-id="c358d-362">Semaphore</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Release">
      <MemberSignature Language="C#" Value="public int Release (int releaseCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Release(int32 releaseCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Semaphore.Release(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Release (releaseCount As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Release(int releaseCount);" />
      <MemberSignature Language="F#" Value="member this.Release : int -&gt; int" Usage="semaphore.Release releaseCount" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="releaseCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="releaseCount"><span data-ttu-id="c358d-363">Die Anzahl von Malen, die das Semaphor freigegeben werden soll.</span><span class="sxs-lookup"><span data-stu-id="c358d-363">The number of times to exit the semaphore.</span></span></param>
        <summary><span data-ttu-id="c358d-364">Gibt das Semaphor eine festgelegte Anzahl von Malen frei und gibt den vorherigen Zähler zurück.</span><span class="sxs-lookup"><span data-stu-id="c358d-364">Exits the semaphore a specified number of times and returns the previous count.</span></span></summary>
        <returns><span data-ttu-id="c358d-365">Die Anzahl für das Semaphor vor dem Aufruf der <see cref="Overload:System.Threading.Semaphore.Release" />-Methode.</span><span class="sxs-lookup"><span data-stu-id="c358d-365">The count on the semaphore before the <see cref="Overload:System.Threading.Semaphore.Release" /> method was called.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c358d-366">Wenn ein Thread mehrmals in das Semaphor gelangt ist, lässt diese Methoden Überladung zu, dass die gesamte Semaphor-Anzahl mit einem-Befehl wieder hergestellt wird.</span><span class="sxs-lookup"><span data-stu-id="c358d-366">If a thread has entered the semaphore multiple times, this method overload allows the entire semaphore count to be restored with one call.</span></span>  
  
 <span data-ttu-id="c358d-367">Wenn ein <xref:System.Threading.SemaphoreFullException> von der <xref:System.Threading.Semaphore.Release%2A> -Methode ausgelöst wird, weist dies nicht unbedingt auf ein Problem mit dem aufrufenden Thread hin.</span><span class="sxs-lookup"><span data-stu-id="c358d-367">If a <xref:System.Threading.SemaphoreFullException> is thrown by the <xref:System.Threading.Semaphore.Release%2A> method, it does not necessarily indicate a problem with the calling thread.</span></span> <span data-ttu-id="c358d-368">Ein Programmierfehler in einem anderen Thread hat möglicherweise bewirkt, dass dieser Thread das Semaphor mehrmals beendet hat, als er eingegeben hat.</span><span class="sxs-lookup"><span data-stu-id="c358d-368">A programming error in another thread might have caused that thread to exit the semaphore more times than it entered.</span></span>  
  
 <span data-ttu-id="c358d-369">Wenn das aktuelle <xref:System.Threading.Semaphore> -Objekt ein benanntes System Semaphor darstellt, muss <xref:System.Security.AccessControl.SemaphoreRights.Modify?displayProperty=nameWithType> der Benutzer über Rechte verfügen, und das Semaphor <xref:System.Security.AccessControl.SemaphoreRights.Modify?displayProperty=nameWithType> muss mit-Rechten geöffnet worden sein.</span><span class="sxs-lookup"><span data-stu-id="c358d-369">If the current <xref:System.Threading.Semaphore> object represents a named system semaphore, the user must have <xref:System.Security.AccessControl.SemaphoreRights.Modify?displayProperty=nameWithType> rights and the semaphore must have been opened with <xref:System.Security.AccessControl.SemaphoreRights.Modify?displayProperty=nameWithType> rights.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c358d-370">Im folgenden Codebeispiel wird ein Semaphor mit einer maximalen Anzahl von drei und einer anfänglichen Anzahl von 0 (null) erstellt.</span><span class="sxs-lookup"><span data-stu-id="c358d-370">The following code example creates a semaphore with a maximum count of three and an initial count of zero.</span></span> <span data-ttu-id="c358d-371">Im Beispiel werden fünf Threads gestartet, die blockieren, um auf das Semaphor zu warten.</span><span class="sxs-lookup"><span data-stu-id="c358d-371">The example starts five threads, which block waiting for the semaphore.</span></span> <span data-ttu-id="c358d-372">Der Haupt Thread verwendet die <xref:System.Threading.Semaphore.Release%28System.Int32%29> -Methoden Überladung, um die Anzahl der Semaphor auf den maximalen Wert zu erhöhen, sodass drei Threads in das Semaphor gelangen können.</span><span class="sxs-lookup"><span data-stu-id="c358d-372">The main thread uses the <xref:System.Threading.Semaphore.Release%28System.Int32%29> method overload to increase the semaphore count to its maximum, allowing three threads to enter the semaphore.</span></span> <span data-ttu-id="c358d-373">Jeder Thread verwendet die <xref:System.Threading.Thread.Sleep%2A?displayProperty=nameWithType> -Methode, um eine Sekunde zu warten, um die Arbeit zu simulieren, <xref:System.Threading.Semaphore.Release> und ruft dann die-Methoden Überladung auf, um das Semaphor freizugeben.</span><span class="sxs-lookup"><span data-stu-id="c358d-373">Each thread uses the <xref:System.Threading.Thread.Sleep%2A?displayProperty=nameWithType> method to wait for one second, to simulate work, and then calls the <xref:System.Threading.Semaphore.Release> method overload to release the semaphore.</span></span>  
  
 <span data-ttu-id="c358d-374">Jedes Mal, wenn das Semaphor freigegeben wird, wird die vorherige Semaphor-Anzahl angezeigt.</span><span class="sxs-lookup"><span data-stu-id="c358d-374">Each time the semaphore is released, the previous semaphore count is displayed.</span></span> <span data-ttu-id="c358d-375">Konsolen Meldungen verfolgen die Verwendung von Semaphor.</span><span class="sxs-lookup"><span data-stu-id="c358d-375">Console messages track semaphore use.</span></span> <span data-ttu-id="c358d-376">Das simulierte Arbeitsintervall wird für jeden Thread geringfügig angehoben, damit die Ausgabe leichter lesbar ist.</span><span class="sxs-lookup"><span data-stu-id="c358d-376">The simulated work interval is increased slightly for each thread, to make the output easier to read.</span></span>  
  
 [!code-cpp[System.Threading.Semaphore2#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.Semaphore2/CPP/source.cpp#1)]
 [!code-csharp[System.Threading.Semaphore2#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.Semaphore2/CS/source.cs#1)]
 [!code-vb[System.Threading.Semaphore2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.Semaphore2/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="c358d-377"><paramref name="releaseCount" /> ist kleiner als 1.</span><span class="sxs-lookup"><span data-stu-id="c358d-377"><paramref name="releaseCount" /> is less than 1.</span></span></exception>
        <exception cref="T:System.Threading.SemaphoreFullException"><span data-ttu-id="c358d-378">Die Anzahl für das Semaphor weist bereits den maximalen Wert auf.</span><span class="sxs-lookup"><span data-stu-id="c358d-378">The semaphore count is already at the maximum value.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="c358d-379">Bei einem benannten Semaphor ist ein Win32-Fehler aufgetreten.</span><span class="sxs-lookup"><span data-stu-id="c358d-379">A Win32 error occurred with a named semaphore.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="c358d-380">Das aktuelle Semaphor stellt ein benanntes Systemsemaphor dar. Der Benutzer verfügt jedoch nicht über <see cref="F:System.Security.AccessControl.SemaphoreRights.Modify" />-Rechte.</span><span class="sxs-lookup"><span data-stu-id="c358d-380">The current semaphore represents a named system semaphore, but the user does not have <see cref="F:System.Security.AccessControl.SemaphoreRights.Modify" /> rights.</span></span>  
  
<span data-ttu-id="c358d-381">- oder -</span><span class="sxs-lookup"><span data-stu-id="c358d-381">-or-</span></span> 
<span data-ttu-id="c358d-382">Das aktuelle Semaphor stellt ein benanntes Systemsemaphor dar, es wurde jedoch nicht mit <see cref="F:System.Security.AccessControl.SemaphoreRights.Modify" />-Rechten geöffnet.</span><span class="sxs-lookup"><span data-stu-id="c358d-382">The current semaphore represents a named system semaphore, but it was not opened with <see cref="F:System.Security.AccessControl.SemaphoreRights.Modify" /> rights.</span></span></exception>
        <related type="Article" href="~/docs/standard/threading/index.md"><span data-ttu-id="c358d-383">Verwaltetes Threading</span><span class="sxs-lookup"><span data-stu-id="c358d-383">Managed Threading</span></span></related>
        <related type="Article" href="~/docs/standard/threading/semaphore-and-semaphoreslim.md"><span data-ttu-id="c358d-384">Semaphore</span><span class="sxs-lookup"><span data-stu-id="c358d-384">Semaphore</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="SetAccessControl">
      <MemberSignature Language="C#" Value="public void SetAccessControl (System.Security.AccessControl.SemaphoreSecurity semaphoreSecurity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetAccessControl(class System.Security.AccessControl.SemaphoreSecurity semaphoreSecurity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Semaphore.SetAccessControl(System.Security.AccessControl.SemaphoreSecurity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetAccessControl(System::Security::AccessControl::SemaphoreSecurity ^ semaphoreSecurity);" />
      <MemberSignature Language="F#" Value="member this.SetAccessControl : System.Security.AccessControl.SemaphoreSecurity -&gt; unit" Usage="semaphore.SetAccessControl semaphoreSecurity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="semaphoreSecurity" Type="System.Security.AccessControl.SemaphoreSecurity" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="semaphoreSecurity"><span data-ttu-id="c358d-385">Ein <see cref="T:System.Security.AccessControl.SemaphoreSecurity" />-Objekt, das die Zugriffssteuerungssicherheit darstellt, die auf das benannte Systemsemaphor angewendet werden soll.</span><span class="sxs-lookup"><span data-stu-id="c358d-385">A <see cref="T:System.Security.AccessControl.SemaphoreSecurity" /> object that represents the access control security to be applied to the named system semaphore.</span></span></param>
        <summary><span data-ttu-id="c358d-386">Legt die Zugriffssteuerungssicherheit für ein benanntes Systemsemaphor fest.</span><span class="sxs-lookup"><span data-stu-id="c358d-386">Sets the access control security for a named system semaphore.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c358d-387">Sie können die Zugriffs Steuerungs Sicherheit nur für <xref:System.Threading.Semaphore> Objekte festlegen, die benannte System Semaphoren darstellen.</span><span class="sxs-lookup"><span data-stu-id="c358d-387">You can set access control security only on <xref:System.Threading.Semaphore> objects that represent named system semaphores.</span></span>  
  
 <span data-ttu-id="c358d-388">Der Benutzer muss über <xref:System.Security.AccessControl.SemaphoreRights.ChangePermissions?displayProperty=nameWithType> Rechte zum Abrufen dieser Methode verfügen, und das Semaphor muss mit <xref:System.Security.AccessControl.SemaphoreRights.ChangePermissions?displayProperty=nameWithType> Rechten geöffnet worden sein.</span><span class="sxs-lookup"><span data-stu-id="c358d-388">The user must have <xref:System.Security.AccessControl.SemaphoreRights.ChangePermissions?displayProperty=nameWithType> rights to call this method, and the semaphore must have been opened with <xref:System.Security.AccessControl.SemaphoreRights.ChangePermissions?displayProperty=nameWithType> rights.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c358d-389">Im folgenden Codebeispiel wird das prozessübergreifende Verhalten eines benannten Semaphors mit Zugriffs Steuerungs Sicherheit veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="c358d-389">The following code example demonstrates the cross-process behavior of a named semaphore with access control security.</span></span> <span data-ttu-id="c358d-390">Im Beispiel wird die <xref:System.Threading.Semaphore.OpenExisting%28System.String%29> -Methoden Überladung verwendet, um zu testen, ob ein benanntes Semaphor vorhanden ist.</span><span class="sxs-lookup"><span data-stu-id="c358d-390">The example uses the <xref:System.Threading.Semaphore.OpenExisting%28System.String%29> method overload to test for the existence of a named semaphore.</span></span>  
  
 <span data-ttu-id="c358d-391">Wenn das Semaphor nicht vorhanden ist, wird es mit einer maximalen Anzahl von zwei und mit Zugriffs Steuerungs Sicherheit erstellt, die dem aktuellen Benutzer das Recht verweigert, das Semaphor zu verwenden, aber das Recht zum Lesen und Ändern von Berechtigungen für das Semaphor gewährt.</span><span class="sxs-lookup"><span data-stu-id="c358d-391">If the semaphore does not exist, it is created with a maximum count of two and with access control security that denies the current user the right to use the semaphore but grants the right to read and change permissions on the semaphore.</span></span>  
  
 <span data-ttu-id="c358d-392">Wenn Sie das kompilierte Beispiel aus zwei Befehls Fenstern ausführen, löst die zweite Kopie eine Zugriffs Verletzungs Ausnahme beim Aufrufen der <xref:System.Threading.Semaphore.OpenExisting%28System.String%29> -Methode aus.</span><span class="sxs-lookup"><span data-stu-id="c358d-392">If you run the compiled example from two command windows, the second copy will throw an access violation exception on the call to the <xref:System.Threading.Semaphore.OpenExisting%28System.String%29> method.</span></span> <span data-ttu-id="c358d-393">Die Ausnahme wird abgefangen, und das Beispiel verwendet die <xref:System.Threading.Semaphore.OpenExisting%28System.String%2CSystem.Security.AccessControl.SemaphoreRights%29> -Methoden Überladung, um das Semaphor mit den rechten zu öffnen, die zum Lesen und Ändern der Berechtigungen erforderlich sind.</span><span class="sxs-lookup"><span data-stu-id="c358d-393">The exception is caught, and the example uses the <xref:System.Threading.Semaphore.OpenExisting%28System.String%2CSystem.Security.AccessControl.SemaphoreRights%29> method overload to open the semaphore with the rights needed to read and change the permissions.</span></span>  
  
 <span data-ttu-id="c358d-394">Nachdem die Berechtigungen mithilfe der <xref:System.Threading.Semaphore.SetAccessControl%2A> -Methode geändert wurden, wird das Semaphor mit den Rechten geöffnet, die für die Eingabe und Freigabe erforderlich sind.</span><span class="sxs-lookup"><span data-stu-id="c358d-394">After the permissions are changed, using the <xref:System.Threading.Semaphore.SetAccessControl%2A> method, the semaphore is opened with the rights required to enter and release.</span></span> <span data-ttu-id="c358d-395">Wenn Sie das kompilierte Beispiel aus einem dritten Befehlsfenster ausführen, wird es mithilfe der neuen Berechtigungen ausgeführt.</span><span class="sxs-lookup"><span data-stu-id="c358d-395">If you run the compiled example from a third command window, it runs using the new permissions.</span></span>  
  
 [!code-cpp[System.Threading.Semaphore.ctor named 5a#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.Semaphore.ctor named 5a/CPP/source.cpp#1)]
 [!code-csharp[System.Threading.Semaphore.ctor named 5a#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.Semaphore.ctor named 5a/CS/source.cs#1)]
 [!code-vb[System.Threading.Semaphore.ctor named 5a#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.Semaphore.ctor named 5a/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c358d-396"><paramref name="semaphoreSecurity" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c358d-396"><paramref name="semaphoreSecurity" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="c358d-397">Der Benutzer verfügt nicht über <see cref="F:System.Security.AccessControl.SemaphoreRights.ChangePermissions" />-Rechte.</span><span class="sxs-lookup"><span data-stu-id="c358d-397">The user does not have <see cref="F:System.Security.AccessControl.SemaphoreRights.ChangePermissions" /> rights.</span></span>  
  
<span data-ttu-id="c358d-398">- oder -</span><span class="sxs-lookup"><span data-stu-id="c358d-398">-or-</span></span> 
<span data-ttu-id="c358d-399">Das Semaphor wurde nicht mit <see cref="F:System.Security.AccessControl.SemaphoreRights.ChangePermissions" />-Rechten geöffnet.</span><span class="sxs-lookup"><span data-stu-id="c358d-399">The semaphore was not opened with <see cref="F:System.Security.AccessControl.SemaphoreRights.ChangePermissions" /> rights.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="c358d-400">Das aktuelle <see cref="T:System.Threading.Semaphore" />-Objekt stellt kein benanntes Systemsemaphor dar.</span><span class="sxs-lookup"><span data-stu-id="c358d-400">The current <see cref="T:System.Threading.Semaphore" /> object does not represent a named system semaphore.</span></span></exception>
        <related type="Article" href="~/docs/standard/threading/index.md"><span data-ttu-id="c358d-401">Verwaltetes Threading</span><span class="sxs-lookup"><span data-stu-id="c358d-401">Managed Threading</span></span></related>
        <related type="Article" href="~/docs/standard/threading/semaphore-and-semaphoreslim.md"><span data-ttu-id="c358d-402">Semaphore</span><span class="sxs-lookup"><span data-stu-id="c358d-402">Semaphore</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="TryOpenExisting">
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="c358d-403">Öffnet eine bestimmte benannte Semaphore, wenn sie bereits vorhanden ist, und gibt einen Wert zurück, der angibt, ob der Vorgang erfolgreich war.</span><span class="sxs-lookup"><span data-stu-id="c358d-403">Opens a specified named semaphore, if it already exists, and returns a value that indicates whether the operation succeeded.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="TryOpenExisting">
      <MemberSignature Language="C#" Value="public static bool TryOpenExisting (string name, out System.Threading.Semaphore result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryOpenExisting(string name, [out] class System.Threading.Semaphore&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Semaphore.TryOpenExisting(System.String,System.Threading.Semaphore@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryOpenExisting (name As String, ByRef result As Semaphore) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryOpenExisting(System::String ^ name, [Runtime::InteropServices::Out] System::Threading::Semaphore ^ % result);" />
      <MemberSignature Language="F#" Value="static member TryOpenExisting : string *  -&gt; bool" Usage="System.Threading.Semaphore.TryOpenExisting (name, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="result" Type="System.Threading.Semaphore" RefType="out" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="c358d-404">Der Name des zu öffnenden Systemsemaphors.</span><span class="sxs-lookup"><span data-stu-id="c358d-404">The name of the system semaphore to open.</span></span></param>
        <param name="result"><span data-ttu-id="c358d-405">Enthält nach Beenden der Methode ein <see cref="T:System.Threading.Semaphore" />-Objekt, das das benannte Semaphor darstellt, wenn der Aufruf erfolgreich ausgeführt wurde, oder <see langword="null" />, wenn der Aufruf fehlgeschlagen ist.</span><span class="sxs-lookup"><span data-stu-id="c358d-405">When this method returns, contains a <see cref="T:System.Threading.Semaphore" /> object that represents the named semaphore if the call succeeded, or <see langword="null" /> if the call failed.</span></span> <span data-ttu-id="c358d-406">Dieser Parameter wird nicht initialisiert behandelt.</span><span class="sxs-lookup"><span data-stu-id="c358d-406">This parameter is treated as uninitialized.</span></span></param>
        <summary><span data-ttu-id="c358d-407">Öffnet das angegebene benannte Semaphor, wenn es bereits vorhanden ist, und gibt einen Wert zurück, der angibt, ob der Vorgang erfolgreich war.</span><span class="sxs-lookup"><span data-stu-id="c358d-407">Opens the specified named semaphore, if it already exists, and returns a value that indicates whether the operation succeeded.</span></span></summary>
        <returns><span data-ttu-id="c358d-408"><see langword="true" />, wenn das benannte Semaphor erfolgreich geöffnet wurde; andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c358d-408"><see langword="true" /> if the named semaphore was opened successfully; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c358d-409">Wenn das benannte Semaphor nicht vorhanden ist, wird es von dieser Methode nicht erstellt.</span><span class="sxs-lookup"><span data-stu-id="c358d-409">If the named semaphore does not exist, this method does not create it.</span></span> <span data-ttu-id="c358d-410">Um das System Semaphor zu erstellen, wenn es nicht bereits vorhanden ist, verwenden Sie <xref:System.Threading.Semaphore.%23ctor%2A> einen der-Konstruktoren `name` mit einem-Parameter.</span><span class="sxs-lookup"><span data-stu-id="c358d-410">To create the system semaphore when it does not already exist, use one of the <xref:System.Threading.Semaphore.%23ctor%2A> constructors that has a `name` parameter.</span></span>  
  
 <span data-ttu-id="c358d-411">Wenn Sie unsicher sind, ob ein benanntes Semaphor vorhanden ist, verwenden Sie diese <xref:System.Threading.Semaphore.OpenExisting%28System.String%29> Methoden Überladung anstelle der-Methoden Überladung, die eine Ausnahme auslöst, wenn das Semaphor nicht vorhanden ist.</span><span class="sxs-lookup"><span data-stu-id="c358d-411">If you are uncertain whether a named semaphore exists, use this method overload instead of the <xref:System.Threading.Semaphore.OpenExisting%28System.String%29> method overload, which throws an exception if the semaphore does not exist.</span></span>  
  
 <span data-ttu-id="c358d-412">Diese Methoden Überladung entspricht dem Aufrufen der <xref:System.Threading.Semaphore.TryOpenExisting%2A> -Methoden Überladung <xref:System.Security.AccessControl.SemaphoreRights.Synchronize?displayProperty=nameWithType> und <xref:System.Security.AccessControl.SemaphoreRights.Modify?displayProperty=nameWithType> der Angabe von-und-rechten in Kombination mit der bitweisen OR-Operation.</span><span class="sxs-lookup"><span data-stu-id="c358d-412">This method overload is equivalent to calling the <xref:System.Threading.Semaphore.TryOpenExisting%2A> method overload and specifying <xref:System.Security.AccessControl.SemaphoreRights.Synchronize?displayProperty=nameWithType> and <xref:System.Security.AccessControl.SemaphoreRights.Modify?displayProperty=nameWithType> rights, combined by using the bitwise OR operation.</span></span> <span data-ttu-id="c358d-413">Wenn Sie <xref:System.Security.AccessControl.SemaphoreRights.Synchronize?displayProperty=nameWithType> das-Flag angeben, kann ein Thread in das Semaphor eintreten <xref:System.Security.AccessControl.SemaphoreRights.Modify?displayProperty=nameWithType> , und die Angabe des-Flags <xref:System.Threading.Semaphore.Release%2A> ermöglicht einem Thread, die-Methode aufzurufen.</span><span class="sxs-lookup"><span data-stu-id="c358d-413">Specifying the <xref:System.Security.AccessControl.SemaphoreRights.Synchronize?displayProperty=nameWithType> flag allows a thread to enter the semaphore, and specifying the   <xref:System.Security.AccessControl.SemaphoreRights.Modify?displayProperty=nameWithType> flag allows a thread to call the <xref:System.Threading.Semaphore.Release%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="c358d-414"><paramref name="name" /> ist eine leere Zeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="c358d-414"><paramref name="name" /> is an empty string.</span></span>  
  
<span data-ttu-id="c358d-415">- oder -</span><span class="sxs-lookup"><span data-stu-id="c358d-415">-or-</span></span> 
 <span data-ttu-id="c358d-416"><paramref name="name" /> ist länger als 260 Zeichen.</span><span class="sxs-lookup"><span data-stu-id="c358d-416"><paramref name="name" /> is longer than 260 characters.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c358d-417"><paramref name="name" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c358d-417"><paramref name="name" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="c358d-418">Win32-Fehler.</span><span class="sxs-lookup"><span data-stu-id="c358d-418">A Win32 error occurred.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="c358d-419">Der benannte Semaphor ist vorhanden, aber der Benutzer verfügt nicht über den Sicherheitszugriff, der für die Verwendung erforderlich ist.</span><span class="sxs-lookup"><span data-stu-id="c358d-419">The named semaphore exists, but the user does not have the security access required to use it.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="TryOpenExisting">
      <MemberSignature Language="C#" Value="public static bool TryOpenExisting (string name, System.Security.AccessControl.SemaphoreRights rights, out System.Threading.Semaphore result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryOpenExisting(string name, valuetype System.Security.AccessControl.SemaphoreRights rights, [out] class System.Threading.Semaphore&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Semaphore.TryOpenExisting(System.String,System.Security.AccessControl.SemaphoreRights,System.Threading.Semaphore@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryOpenExisting (name As String, rights As SemaphoreRights, ByRef result As Semaphore) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryOpenExisting(System::String ^ name, System::Security::AccessControl::SemaphoreRights rights, [Runtime::InteropServices::Out] System::Threading::Semaphore ^ % result);" />
      <MemberSignature Language="F#" Value="static member TryOpenExisting : string * System.Security.AccessControl.SemaphoreRights *  -&gt; bool" Usage="System.Threading.Semaphore.TryOpenExisting (name, rights, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="rights" Type="System.Security.AccessControl.SemaphoreRights" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="result" Type="System.Threading.Semaphore" RefType="out" Index="2" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="c358d-420">Der Name des zu öffnenden Systemsemaphors.</span><span class="sxs-lookup"><span data-stu-id="c358d-420">The name of the system semaphore to open.</span></span></param>
        <param name="rights"><span data-ttu-id="c358d-421">Eine bitweise Kombination von Enumerationswerten, die die gewünschten Sicherheitszugriffsrechte darstellen.</span><span class="sxs-lookup"><span data-stu-id="c358d-421">A bitwise combination of the enumeration values that represent the desired security access.</span></span></param>
        <param name="result"><span data-ttu-id="c358d-422">Enthält nach Beenden der Methode ein <see cref="T:System.Threading.Semaphore" />-Objekt, das das benannte Semaphor darstellt, wenn der Aufruf erfolgreich ausgeführt wurde, oder <see langword="null" />, wenn der Aufruf fehlgeschlagen ist.</span><span class="sxs-lookup"><span data-stu-id="c358d-422">When this method returns, contains a <see cref="T:System.Threading.Semaphore" /> object that represents the named semaphore if the call succeeded, or <see langword="null" /> if the call failed.</span></span> <span data-ttu-id="c358d-423">Dieser Parameter wird nicht initialisiert behandelt.</span><span class="sxs-lookup"><span data-stu-id="c358d-423">This parameter is treated as uninitialized.</span></span></param>
        <summary><span data-ttu-id="c358d-424">Öffnet das angegebene benannte Semaphor, wenn es bereits mit dem gewünschten Sicherheitszugriff vorhanden ist und gibt einen Wert zurück, der angibt, ob der Vorgang erfolgreich war.</span><span class="sxs-lookup"><span data-stu-id="c358d-424">Opens the specified named semaphore, if it already exists, with the desired security access, and returns a value that indicates whether the operation succeeded.</span></span></summary>
        <returns><span data-ttu-id="c358d-425"><see langword="true" />, wenn das benannte Semaphor erfolgreich geöffnet wurde; andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c358d-425"><see langword="true" /> if the named semaphore was opened successfully; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c358d-426">Wenn das benannte Semaphor nicht vorhanden ist, wird es von dieser Methode nicht erstellt.</span><span class="sxs-lookup"><span data-stu-id="c358d-426">If the named semaphore does not exist, this method does not create it.</span></span> <span data-ttu-id="c358d-427">Um das System Semaphor zu erstellen, wenn es nicht bereits vorhanden ist, verwenden Sie <xref:System.Threading.Semaphore.%23ctor%2A> einen der-Konstruktoren `name` mit einem-Parameter.</span><span class="sxs-lookup"><span data-stu-id="c358d-427">To create the system semaphore when it does not already exist, use one of the <xref:System.Threading.Semaphore.%23ctor%2A> constructors that has a `name` parameter.</span></span>  
  
 <span data-ttu-id="c358d-428">Wenn Sie unsicher sind, ob ein benanntes Semaphor vorhanden ist, verwenden Sie diese <xref:System.Threading.Semaphore.OpenExisting%28System.String%2CSystem.Security.AccessControl.SemaphoreRights%29> Methoden Überladung anstelle der-Methoden Überladung, die eine Ausnahme auslöst, wenn das Semaphor nicht vorhanden ist.</span><span class="sxs-lookup"><span data-stu-id="c358d-428">If you are uncertain whether a named semaphore exists, use this method overload instead of the <xref:System.Threading.Semaphore.OpenExisting%28System.String%2CSystem.Security.AccessControl.SemaphoreRights%29> method overload, which throws an exception if the semaphore does not exist.</span></span>  
  
 <span data-ttu-id="c358d-429">Der `rights` -Parameter muss das <xref:System.Security.AccessControl.SemaphoreRights.Synchronize?displayProperty=nameWithType> -Flag enthalten, damit Threads in das Semaphor eintreten können <xref:System.Security.AccessControl.SemaphoreRights.Modify?displayProperty=nameWithType> , und das-Flag, mit <xref:System.Threading.Semaphore.Release%2A> dem Threads die-Methode aufrufen können.</span><span class="sxs-lookup"><span data-stu-id="c358d-429">The `rights` parameter must include the <xref:System.Security.AccessControl.SemaphoreRights.Synchronize?displayProperty=nameWithType> flag to allow threads to enter the semaphore, and the <xref:System.Security.AccessControl.SemaphoreRights.Modify?displayProperty=nameWithType> flag to allow threads to call the <xref:System.Threading.Semaphore.Release%2A> method.</span></span>  
  
 <span data-ttu-id="c358d-430">Mehrere Aufrufe dieser Methode, die denselben Wert für `name` verwenden, geben nicht notwendigerweise dasselbe <xref:System.Threading.Semaphore> Objekt zurück, auch wenn die zurückgegebenen Objekte dasselbe benannte System Semaphor darstellen.</span><span class="sxs-lookup"><span data-stu-id="c358d-430">Multiple calls to this method that use the same value for `name` do not necessarily return the same <xref:System.Threading.Semaphore> object, even though the objects that are returned represent the same named system semaphore.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="c358d-431"><paramref name="name" /> ist eine leere Zeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="c358d-431"><paramref name="name" /> is an empty string.</span></span>  
  
<span data-ttu-id="c358d-432">- oder -</span><span class="sxs-lookup"><span data-stu-id="c358d-432">-or-</span></span> 
 <span data-ttu-id="c358d-433"><paramref name="name" /> ist länger als 260 Zeichen.</span><span class="sxs-lookup"><span data-stu-id="c358d-433"><paramref name="name" /> is longer than 260 characters.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c358d-434"><paramref name="name" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c358d-434"><paramref name="name" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="c358d-435">Win32-Fehler.</span><span class="sxs-lookup"><span data-stu-id="c358d-435">A Win32 error occurred.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="c358d-436">Der benannte Semaphor ist vorhanden, aber der Benutzer verfügt nicht über den Sicherheitszugriff, der für die Verwendung erforderlich ist.</span><span class="sxs-lookup"><span data-stu-id="c358d-436">The named semaphore exists, but the user does not have the security access required to use it.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>
