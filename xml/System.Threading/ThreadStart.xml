<Type Name="ThreadStart" FullName="System.Threading.ThreadStart">
  <Metadata><Meta Name="ms.openlocfilehash" Value="e7eac3c5e7deb75c9b54ed92d2ca3399f7371fe4" /><Meta Name="ms.sourcegitcommit" Value="11d168140aa8fade0768c2a9dde3e3bcacfdfb7d" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="05/27/2020" /><Meta Name="ms.locfileid" Value="83967286" /></Metadata><TypeSignature Language="C#" Value="public delegate void ThreadStart();" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed ThreadStart extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.Threading.ThreadStart" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Sub ThreadStart()" />
  <TypeSignature Language="C++ CLI" Value="public delegate void ThreadStart();" />
  <TypeSignature Language="F#" Value="type ThreadStart = delegate of unit -&gt; unit" />
  <AssemblyInfo>
    <AssemblyName>System.Threading.Thread</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="netstandard" FromVersion="2.1.0.0" To="System.Threading.Thread" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Parameters />
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <summary><span data-ttu-id="a0498-101">Stellt die Methode dar, die in einem <see cref="T:System.Threading.Thread" /> ausgeführt wird.</span><span class="sxs-lookup"><span data-stu-id="a0498-101">Represents the method that executes on a <see cref="T:System.Threading.Thread" />.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0498-102">Wenn ein verwalteter Thread erstellt wird, wird die Methode, die auf dem Thread ausgeführt wird, durch einen <xref:System.Threading.ThreadStart> Delegaten oder einen <xref:System.Threading.ParameterizedThreadStart> Delegaten dargestellt, der an den <xref:System.Threading.Thread.%23ctor%2A>-Konstruktor übergeben wird.</span><span class="sxs-lookup"><span data-stu-id="a0498-102">When a managed thread is created, the method that executes on the thread is represented by a <xref:System.Threading.ThreadStart> delegate or a <xref:System.Threading.ParameterizedThreadStart> delegate that is passed to the <xref:System.Threading.Thread.%23ctor%2A> constructor.</span></span> <span data-ttu-id="a0498-103">Der Thread beginnt erst mit der Ausführung, wenn die <xref:System.Threading.Thread.Start%2A?displayProperty=nameWithType>-Methode aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="a0498-103">The thread does not begin executing until the <xref:System.Threading.Thread.Start%2A?displayProperty=nameWithType> method is called.</span></span> <span data-ttu-id="a0498-104">Die Ausführung beginnt in der ersten Zeile der Methode, die durch den <xref:System.Threading.ThreadStart> oder <xref:System.Threading.ParameterizedThreadStart> Delegaten dargestellt wird.</span><span class="sxs-lookup"><span data-stu-id="a0498-104">Execution begins at the first line of the method represented by the <xref:System.Threading.ThreadStart> or <xref:System.Threading.ParameterizedThreadStart> delegate.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a0498-105">Visual Basic und C# Benutzer können den <xref:System.Threading.ThreadStart>-oder <xref:System.Threading.ParameterizedThreadStart> Delegatkonstruktor weglassen, wenn ein Thread erstellt wird.</span><span class="sxs-lookup"><span data-stu-id="a0498-105">Visual Basic and C# users can omit the <xref:System.Threading.ThreadStart> or <xref:System.Threading.ParameterizedThreadStart> delegate constructor when creating a thread.</span></span> <span data-ttu-id="a0498-106">Verwenden Sie in Visual Basic den `AddressOf`-Operator, wenn Sie die Methode an den <xref:System.Threading.Thread.%23ctor%2A>-Konstruktor übergeben. beispielsweise `Dim t As New Thread(AddressOf ThreadProc)`.</span><span class="sxs-lookup"><span data-stu-id="a0498-106">In Visual Basic, use the `AddressOf` operator when passing your method to the <xref:System.Threading.Thread.%23ctor%2A> constructor; for example, `Dim t As New Thread(AddressOf ThreadProc)`.</span></span> <span data-ttu-id="a0498-107">Geben C#Sie in einfach den Namen der Thread Prozedur an.</span><span class="sxs-lookup"><span data-stu-id="a0498-107">In C#, simply specify the name of the thread procedure.</span></span> <span data-ttu-id="a0498-108">Der Compiler wählt den korrekten Delegatkonstruktor aus.</span><span class="sxs-lookup"><span data-stu-id="a0498-108">The compiler selects the correct delegate constructor.</span></span>  
>  
>  <span data-ttu-id="a0498-109">Für C++, beginnend mit .NET Framework 2,0, erfordert das Erstellen eines <xref:System.Threading.ThreadStart> Delegaten für eine statische Methode nur einen Parameter: die Adresse der Rückruf Methode, die durch den Klassennamen qualifiziert ist.</span><span class="sxs-lookup"><span data-stu-id="a0498-109">For C++, starting with .NET Framework 2.0, creating a <xref:System.Threading.ThreadStart> delegate for a static method requires only one parameter: the address of the callback method, qualified by the class name.</span></span> <span data-ttu-id="a0498-110">In früheren Versionen waren bei der Erstellung eines Delegaten für eine statische Methode zwei Parameter erforderlich: NULL (null) und die Methoden Adresse.</span><span class="sxs-lookup"><span data-stu-id="a0498-110">In earlier versions two parameters were required when creating a delegate for a static method: zero (null) and the method address.</span></span> <span data-ttu-id="a0498-111">Für eine Instanzmethode benötigen alle Versionen zwei Parameter: die Instanzvariable und die Methoden Adresse.</span><span class="sxs-lookup"><span data-stu-id="a0498-111">For an instance method, all versions require two parameters: the instance variable and the method address.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a0498-112">Das folgende Codebeispiel zeigt die Syntax zum Erstellen und Verwenden eines <xref:System.Threading.ThreadStart> Delegaten mit einer Instanzmethode und mit einer statischen Methode.</span><span class="sxs-lookup"><span data-stu-id="a0498-112">The following code example shows the syntax for creating and using a <xref:System.Threading.ThreadStart> delegate with an instance method and with a static method.</span></span>  
  
 <span data-ttu-id="a0498-113">Ein weiteres einfaches Beispiel, das veranschaulicht, wie ein <xref:System.Threading.ThreadStart> Delegat erstellt wird, finden Sie in der <xref:System.Threading.Thread.Start?displayProperty=nameWithType>-Methoden Überladung.</span><span class="sxs-lookup"><span data-stu-id="a0498-113">For another simple example that demonstrates how to create a <xref:System.Threading.ThreadStart> delegate, see the <xref:System.Threading.Thread.Start?displayProperty=nameWithType> method overload.</span></span> <span data-ttu-id="a0498-114">Weitere Informationen zur Thread Erstellung finden Sie [unter Erstellen von Threads und übergeben von Daten zur Startzeit](/dotnet/standard/threading/creating-threads-and-passing-data-at-start-time).</span><span class="sxs-lookup"><span data-stu-id="a0498-114">For more information about thread creation, see [Creating Threads and Passing Data at Start Time](/dotnet/standard/threading/creating-threads-and-passing-data-at-start-time).</span></span>  
  
 [!code-cpp[System.Threading.ThreadStart2#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.ThreadStart2/CPP/source.cpp#1)]
 [!code-csharp[System.Threading.ThreadStart2#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.ThreadStart2/CS/source.cs#1)]
 [!code-vb[System.Threading.ThreadStart2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.ThreadStart2/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Threading.ParameterizedThreadStart" />
    <altmember cref="T:System.Threading.Thread" />
    <altmember cref="Overload:System.Threading.Thread.Start" />
    <altmember cref="T:System.AppDomain" />
    <related type="Article" href="/dotnet/standard/threading/creating-threads-and-passing-data-at-start-time"><span data-ttu-id="a0498-115">Erstellen von Threads und Übergeben von Daten zur Startzeit</span><span class="sxs-lookup"><span data-stu-id="a0498-115">Creating threads and passing data at start time</span></span></related>
  </Docs>
</Type>
