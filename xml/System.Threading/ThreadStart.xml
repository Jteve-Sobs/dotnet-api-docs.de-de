<Type Name="ThreadStart" FullName="System.Threading.ThreadStart">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="b1ca673d0079e2d61ed596ffc41116b10e31787b" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37608889" />
  </Metadata>
  <TypeSignature Language="C#" Value="public delegate void ThreadStart();" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed ThreadStart extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.Threading.ThreadStart" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Sub ThreadStart()" />
  <TypeSignature Language="C++ CLI" Value="public delegate void ThreadStart();" />
  <TypeSignature Language="F#" Value="type ThreadStart = delegate of unit -&gt; unit" />
  <AssemblyInfo>
    <AssemblyName>System.Threading.Thread</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Parameters />
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <summary>
      <span data-ttu-id="76c7c-101">Stellt die Methode dar, die in einem <see cref="T:System.Threading.Thread" /> ausgeführt wird.</span>
      <span class="sxs-lookup">
        <span data-stu-id="76c7c-101">Represents the method that executes on a <see cref="T:System.Threading.Thread" />.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76c7c-102">Wenn ein verwalteter Thread erstellt wird, wird die Methode, die auf dem Thread ausgeführt wird. durch dargestellt eine <xref:System.Threading.ThreadStart> delegieren oder eine <xref:System.Threading.ParameterizedThreadStart> Delegat, der an die <xref:System.Threading.Thread.%23ctor%2A> Konstruktor.</span><span class="sxs-lookup"><span data-stu-id="76c7c-102">When a managed thread is created, the method that executes on the thread is represented by a <xref:System.Threading.ThreadStart> delegate or a <xref:System.Threading.ParameterizedThreadStart> delegate that is passed to the <xref:System.Threading.Thread.%23ctor%2A> constructor.</span></span> <span data-ttu-id="76c7c-103">Der Thread beginnt nicht ausgeführt werden, bis die <xref:System.Threading.Thread.Start%2A?displayProperty=nameWithType> Methode wird aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="76c7c-103">The thread does not begin executing until the <xref:System.Threading.Thread.Start%2A?displayProperty=nameWithType> method is called.</span></span> <span data-ttu-id="76c7c-104">Die Ausführung beginnt, in der ersten Zeile der Methode, dargestellt durch die <xref:System.Threading.ThreadStart> oder <xref:System.Threading.ParameterizedThreadStart> delegieren.</span><span class="sxs-lookup"><span data-stu-id="76c7c-104">Execution begins at the first line of the method represented by the <xref:System.Threading.ThreadStart> or <xref:System.Threading.ParameterizedThreadStart> delegate.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="76c7c-105">Visual Basic und C#-Benutzer können Auslassen der <xref:System.Threading.ThreadStart> oder <xref:System.Threading.ParameterizedThreadStart> Konstruktor beim Erstellen eines Threads.</span><span class="sxs-lookup"><span data-stu-id="76c7c-105">Visual Basic and C# users can omit the <xref:System.Threading.ThreadStart> or <xref:System.Threading.ParameterizedThreadStart> delegate constructor when creating a thread.</span></span> <span data-ttu-id="76c7c-106">Verwenden Sie in Visual Basic die `AddressOf` Operator beim Übergeben der Methode, um die <xref:System.Threading.Thread.%23ctor%2A> Konstruktor, z. B. `Dim t As New Thread(AddressOf ThreadProc)`.</span><span class="sxs-lookup"><span data-stu-id="76c7c-106">In Visual Basic, use the `AddressOf` operator when passing your method to the <xref:System.Threading.Thread.%23ctor%2A> constructor; for example, `Dim t As New Thread(AddressOf ThreadProc)`.</span></span> <span data-ttu-id="76c7c-107">Geben Sie einfach den Namen der Threadprozedur, in c#.</span><span class="sxs-lookup"><span data-stu-id="76c7c-107">In C#, simply specify the name of the thread procedure.</span></span> <span data-ttu-id="76c7c-108">Der Compiler wählt die richtige Konstruktor.</span><span class="sxs-lookup"><span data-stu-id="76c7c-108">The compiler selects the correct delegate constructor.</span></span>  
  
 <span data-ttu-id="76c7c-109">[C++]</span><span class="sxs-lookup"><span data-stu-id="76c7c-109">[C++]</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="76c7c-110">In Version 2.0 von .NET Framework erstellen eine <xref:System.Threading.ThreadStart> Delegat für eine statische Methode in C++ nur ein Parameter erforderlich: die Adresse der Rückrufmethode darstellt, mit dem Klassennamen qualifiziert.</span><span class="sxs-lookup"><span data-stu-id="76c7c-110">In version 2.0 of the .NET Framework, creating a <xref:System.Threading.ThreadStart> delegate for a static method in C++ requires only one parameter: the address of the callback method, qualified by the class name.</span></span> <span data-ttu-id="76c7c-111">In früheren Versionen waren zwei Parameter erforderlich beim Erstellen eines Delegaten für eine statische Methode: 0 (Null) und die Adresse der Methode.</span><span class="sxs-lookup"><span data-stu-id="76c7c-111">In earlier versions two parameters were required when creating a delegate for a static method: zero (null) and the method address.</span></span> <span data-ttu-id="76c7c-112">Für eine Instanzmethode, alle Versionen, die zwei Parameter erforderlich: die Instanzvariable und die Adresse der Methode.</span><span class="sxs-lookup"><span data-stu-id="76c7c-112">For an instance method, all versions require two parameters: the instance variable and the method address.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="76c7c-113">Das folgende Codebeispiel zeigt die Syntax zum Erstellen und Verwenden einer <xref:System.Threading.ThreadStart> delegieren und mit einer statischen Methode eine Instanzmethode handeln.</span><span class="sxs-lookup"><span data-stu-id="76c7c-113">The following code example shows the syntax for creating and using a <xref:System.Threading.ThreadStart> delegate with an instance method and with a static method.</span></span>  
  
 <span data-ttu-id="76c7c-114">Für einen anderen einfachen Beispiel zur Veranschaulichung der Vorgehensweise: Erstellen einer <xref:System.Threading.ThreadStart> delegieren, finden Sie unter den <xref:System.Threading.Thread.Start?displayProperty=nameWithType> -methodenüberladung.</span><span class="sxs-lookup"><span data-stu-id="76c7c-114">For another simple example that demonstrates how to create a <xref:System.Threading.ThreadStart> delegate, see the <xref:System.Threading.Thread.Start?displayProperty=nameWithType> method overload.</span></span> <span data-ttu-id="76c7c-115">Weitere Informationen zum Erstellen von Threads finden Sie unter [Erstellen von Threads und übergeben von Daten zur Startzeit](~/docs/standard/threading/creating-threads-and-passing-data-at-start-time.md).</span><span class="sxs-lookup"><span data-stu-id="76c7c-115">For more information about thread creation, see [Creating Threads and Passing Data at Start Time](~/docs/standard/threading/creating-threads-and-passing-data-at-start-time.md).</span></span>  
  
 [!code-cpp[System.Threading.ThreadStart2#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.ThreadStart2/CPP/source.cpp#1)]
 [!code-csharp[System.Threading.ThreadStart2#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.ThreadStart2/CS/source.cs#1)]
 [!code-vb[System.Threading.ThreadStart2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.ThreadStart2/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Threading.ParameterizedThreadStart" />
    <altmember cref="T:System.Threading.Thread" />
    <altmember cref="Overload:System.Threading.Thread.Start" />
    <altmember cref="T:System.AppDomain" />
  </Docs>
</Type>