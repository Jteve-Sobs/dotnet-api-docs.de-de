<Type Name="TimerCallback" FullName="System.Threading.TimerCallback">
  <TypeSignature Language="C#" Value="public delegate void TimerCallback(object state);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed TimerCallback extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.Threading.TimerCallback" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Sub TimerCallback(state As Object)" />
  <TypeSignature Language="C++ CLI" Value="public delegate void TimerCallback(System::Object ^ state);" />
  <AssemblyInfo>
    <AssemblyName>System.Threading.Timer</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Parameters>
    <Parameter Name="state" Type="System.Object" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="state"><span data-ttu-id="72418-101">Ein Objekt mit anwendungsspezifischen Informationen, die für die von diesem Delegaten aufgerufene Methode relevant sind, oder <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="72418-101">An object containing application-specific information relevant to the method invoked by this delegate, or <see langword="null" />.</span></span></param>
    <summary><span data-ttu-id="72418-102">Stellt die Methode dar, die Aufrufe von einem <see cref="T:System.Threading.Timer" /> behandelt.</span><span class="sxs-lookup"><span data-stu-id="72418-102">Represents the method that handles calls from a <see cref="T:System.Threading.Timer" />.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72418-103">Verwenden einer `TimerCallback` Delegaten an die Methode, die aufgerufen wird, indem Sie eine <xref:System.Threading.Timer>.</span><span class="sxs-lookup"><span data-stu-id="72418-103">Use a `TimerCallback` delegate to specify the method that is called by a <xref:System.Threading.Timer>.</span></span> <span data-ttu-id="72418-104">Diese Methode wird nicht in dem Thread ausgeführt, die den Zeitgeber erstellt; Er führt in einem separaten Thread des Threadpools, die vom System bereitgestellt wird.</span><span class="sxs-lookup"><span data-stu-id="72418-104">This method does not execute in the thread that created the timer; it executes in a separate thread pool thread that is provided by the system.</span></span> <span data-ttu-id="72418-105">Die `TimerCallback` Delegat ruft die Methode einmal nach Ablauf der Start- und fortgesetzt wird, um es einmal pro Zeitgeberintervall bis aufzurufen der <xref:System.Threading.Timer.Dispose%2A> -Methode aufgerufen wird, oder bis die <xref:System.Threading.Timer.Change%2A?displayProperty=nameWithType> -Methode aufgerufen wird und der Intervallwert <xref:System.Threading.Timeout.Infinite>.</span><span class="sxs-lookup"><span data-stu-id="72418-105">The `TimerCallback` delegate invokes the method once after the start time elapses, and continues to invoke it once per timer interval until the <xref:System.Threading.Timer.Dispose%2A> method is called, or until the <xref:System.Threading.Timer.Change%2A?displayProperty=nameWithType> method is called with the interval value <xref:System.Threading.Timeout.Infinite>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="72418-106">Rückrufe können nach dem Auftreten der <xref:System.Threading.Timer.Dispose> methodenüberladung aufgerufen wurde, da der Zeitgeber Rückrufe für die Ausführung von Threads im Threadpool Warteschlangen.</span><span class="sxs-lookup"><span data-stu-id="72418-106">Callbacks can occur after the <xref:System.Threading.Timer.Dispose> method overload has been called, because the timer queues callbacks for execution by thread pool threads.</span></span> <span data-ttu-id="72418-107">Sie können die <xref:System.Threading.Timer.Dispose%28System.Threading.WaitHandle%29> methodenüberladung warten, bis alle Rückrufe abgeschlossen haben.</span><span class="sxs-lookup"><span data-stu-id="72418-107">You can use the <xref:System.Threading.Timer.Dispose%28System.Threading.WaitHandle%29> method overload to wait until all callbacks have completed.</span></span>  
  
 <span data-ttu-id="72418-108">Der Zeitgeberdelegat wird angegeben, wenn der Zeitgeber erstellt wird und kann nicht geändert werden.</span><span class="sxs-lookup"><span data-stu-id="72418-108">The timer delegate is specified when the timer is constructed, and cannot be changed.</span></span> <span data-ttu-id="72418-109">Die Startzeit für eine `Timer` übergeben der `dueTime` Parameter von der `Timer` Konstruktoren und der Punkt übergeben der `period` Parameter.</span><span class="sxs-lookup"><span data-stu-id="72418-109">The start time for a `Timer` is passed in the `dueTime` parameter of the `Timer` constructors, and the period is passed in the `period` parameter.</span></span> <span data-ttu-id="72418-110">Ein Beispiel für die Erstellung und Verwendung einer `TimerCallback` delegieren, finden Sie unter <xref:System.Threading.Timer?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="72418-110">For an example that demonstrates creating and using a `TimerCallback` delegate, see <xref:System.Threading.Timer?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="72418-111">Im folgenden Codebeispiel wird veranschaulicht, wie zum Erstellen von Delegaten verwendet wird, mit der `Timer` Klasse.</span><span class="sxs-lookup"><span data-stu-id="72418-111">The following code example shows how to create the delegate used with the `Timer` class.</span></span>  
  
 [!code-cpp[System.Threading.Timer#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.Timer/CPP/source.cpp#1)]
 [!code-csharp[System.Threading.Timer#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.Timer/CS/source.cs#1)]
 [!code-vb[System.Threading.Timer#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.Timer/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Threading.Timer" />
    <altmember cref="T:System.Threading.ThreadPool" />
  </Docs>
</Type>