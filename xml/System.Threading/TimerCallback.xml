<Type Name="TimerCallback" FullName="System.Threading.TimerCallback">
  <Metadata><Meta Name="ms.openlocfilehash" Value="0b0b8efe4aa1165c6984fc5c20495271f9061b35" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70486176" /></Metadata><TypeSignature Language="C#" Value="public delegate void TimerCallback(object state);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed TimerCallback extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.Threading.TimerCallback" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Sub TimerCallback(state As Object)" />
  <TypeSignature Language="C++ CLI" Value="public delegate void TimerCallback(System::Object ^ state);" />
  <TypeSignature Language="F#" Value="type TimerCallback = delegate of obj -&gt; unit" />
  <AssemblyInfo>
    <AssemblyName>System.Threading.Timer</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;dotnet-uwp-10.0">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Parameters>
    <Parameter Name="state" Type="System.Object" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="state">Ein Objekt mit anwendungsspezifischen Informationen, die für die von diesem Delegaten aufgerufene Methode relevant sind, oder <see langword="null" />.</param>
    <summary>Stellt die Methode dar, die Aufrufe von einem <see cref="T:System.Threading.Timer" /> behandelt.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie `TimerCallback` einen Delegaten, um die Methode anzugeben, die <xref:System.Threading.Timer>von einem aufgerufen wird. Diese Methode wird nicht in dem Thread ausgeführt, der den Timer erstellt hat. Sie wird in einem separaten Thread Pool Thread ausgeführt, der vom System bereitgestellt wird. Der `TimerCallback` -Delegat ruft die Methode einmal nach Ablauf der Startzeit auf und ruft Sie weiterhin einmal pro Zeit Geber Intervall auf <xref:System.Threading.Timer.Dispose%2A> , bis die-Methode aufgerufen wird <xref:System.Threading.Timer.Change%2A?displayProperty=nameWithType> , oder bis die-Methode mit <xref:System.Threading.Timeout.Infinite>dem Intervall Wert aufgerufen wird.  
  
> [!NOTE]
>  Rückrufe können nach dem Aufrufen <xref:System.Threading.Timer.Dispose> der Methoden Überladung auftreten, da der Timer für die Ausführung durch Thread Pool-Threads Rückrufe anfordert. Sie können die <xref:System.Threading.Timer.Dispose%28System.Threading.WaitHandle%29> -Methoden Überladung verwenden, um zu warten, bis alle Rückrufe abgeschlossen sind.  
  
 Der Timer-Delegat wird angegeben, wenn der Timer erstellt wird, und kann nicht geändert werden. Die Startzeit für eine `Timer` wird `dueTime` im-Parameter der `Timer` Konstruktoren übergeben `period` , und der Zeitraum wird im-Parameter übergeben. Ein Beispiel, das das Erstellen und Verwenden eines `TimerCallback` Delegaten veranschaulicht <xref:System.Threading.Timer?displayProperty=nameWithType>, finden Sie unter.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie der Delegat erstellt wird `Timer` , der mit der-Klasse verwendet wird.  
  
 [!code-cpp[System.Threading.Timer#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.Timer/CPP/source.cpp#1)]
 [!code-csharp[System.Threading.Timer#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.Timer/CS/source.cs#1)]
 [!code-vb[System.Threading.Timer#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.Timer/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Threading.Timer" />
    <altmember cref="T:System.Threading.ThreadPool" />
    <related type="Article" href="~/docs/standard/threading/timers.md">Timer</related>
  </Docs>
</Type>
