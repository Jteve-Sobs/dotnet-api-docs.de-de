<Type Name="Timer" FullName="System.Threading.Timer">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="67fe19429800288028bf5585c9bd4f03134790db" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30530814" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class Timer : MarshalByRefObject, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit Timer extends System.MarshalByRefObject implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Threading.Timer" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class Timer&#xA;Inherits MarshalByRefObject&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class Timer sealed : MarshalByRefObject, IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Threading.Timer</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
    <BaseTypeName FrameworkAlternate="netframework-4.5">System.MarshalByRefObject</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="1bda9-101">Stellt einen Mechanismus zum Ausführen einer Methode für einen Threadpoolthread in angegebenen Intervallen bereit.</span>
      <span class="sxs-lookup">
        <span data-stu-id="1bda9-101">Provides a mechanism for executing a method on a thread pool thread at specified intervals.</span>
      </span>
      <span data-ttu-id="1bda9-102">Diese Klasse kann nicht vererbt werden.</span>
      <span class="sxs-lookup">
        <span data-stu-id="1bda9-102">This class cannot be inherited.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1bda9-103">Verwenden einer <xref:System.Threading.TimerCallback> Delegaten an die Methode, Sie möchten, die <xref:System.Threading.Timer> ausgeführt.</span><span class="sxs-lookup"><span data-stu-id="1bda9-103">Use a <xref:System.Threading.TimerCallback> delegate to specify the method you want the <xref:System.Threading.Timer> to execute.</span></span> <span data-ttu-id="1bda9-104">Die Signatur der <xref:System.Threading.TimerCallback> Delegat ist:</span><span class="sxs-lookup"><span data-stu-id="1bda9-104">The signature of the <xref:System.Threading.TimerCallback> delegate is:</span></span>  
  
```csharp  
void TimerCallback(Object state)  
```  
  
```cpp  
void TimerCallback(Object state)  
```  
  
```vb  
Sub TimerCallback(state As Object)  
```  
  
 <span data-ttu-id="1bda9-105">Der Zeitgeberdelegat wird angegeben, wenn der Zeitgeber erstellt wird und kann nicht geändert werden.</span><span class="sxs-lookup"><span data-stu-id="1bda9-105">The timer delegate is specified when the timer is constructed, and cannot be changed.</span></span> <span data-ttu-id="1bda9-106">Die Methode wird nicht auf dem Thread ausgeführt, die den Zeitgeber erstellt; Sie führt für eine <xref:System.Threading.ThreadPool> vom System bereitgestellten Thread.</span><span class="sxs-lookup"><span data-stu-id="1bda9-106">The method does not execute on the thread that created the timer; it executes on a <xref:System.Threading.ThreadPool> thread supplied by the system.</span></span>  
  
> [!TIP]
> <span data-ttu-id="1bda9-107">.NET enthält vier Klassen, die mit dem Namen `Timer`, die jeweils von der anderen Funktionen bietet:</span><span class="sxs-lookup"><span data-stu-id="1bda9-107">.NET includes four classes named `Timer`, each of which offers different functionality:</span></span>  
>
> - <span data-ttu-id="1bda9-108"><xref:System.Timers.Timer?displayProperty=nameWithType>, der löst ein Ereignis aus und führt den Code in eine oder mehrere Ereignissenken in regelmäßigen Abständen.</span><span class="sxs-lookup"><span data-stu-id="1bda9-108"><xref:System.Timers.Timer?displayProperty=nameWithType>, which fires an event and executes the code in one or more event sinks at regular intervals.</span></span> <span data-ttu-id="1bda9-109">Die Klasse dient zur Verwendung als ein serverbasiertes oder Dienstkomponente in einer Multithreadumgebung; Er verfügt über keine Benutzeroberfläche und nicht zur Laufzeit sichtbar ist.</span><span class="sxs-lookup"><span data-stu-id="1bda9-109">The class is intended for use as a server-based or service component in a multithreaded environment; it has no user interface and is not visible at runtime.</span></span>
> - <span data-ttu-id="1bda9-110"><xref:System.Threading.Timer?displayProperty=nameWithType>, der eine Rückrufmethode für die einzelnen auf ein Thread des Threadpools in regelmäßigen Abständen ausgeführt.</span><span class="sxs-lookup"><span data-stu-id="1bda9-110"><xref:System.Threading.Timer?displayProperty=nameWithType>, which executes a single callback method on a thread pool thread at regular intervals.</span></span> <span data-ttu-id="1bda9-111">Die Rückrufmethode wird definiert, wenn der Zeitgeber instanziiert wird und kann nicht geändert werden.</span><span class="sxs-lookup"><span data-stu-id="1bda9-111">The callback method is defined when the timer is instantiated and cannot be changed.</span></span> <span data-ttu-id="1bda9-112">Wie die <xref:System.Timers.Timer?displayProperty=nameWithType> -Klasse, diese Klasse dient zur Verwendung als eine serverbasierte oder-Dienst-Komponente in einer Multithreadumgebung; er hat keine Benutzeroberfläche und nicht zur Laufzeit sichtbar ist.</span><span class="sxs-lookup"><span data-stu-id="1bda9-112">Like the <xref:System.Timers.Timer?displayProperty=nameWithType> class, this class is intended for use as a server-based or service component in a multithreaded environment; it has no user interface and is not visible at runtime.</span></span>
> - <span data-ttu-id="1bda9-113"><xref:System.Windows.Forms.Timer?displayProperty=nameWithType> (Nur (.NET Framework), eine Windows Forms-Komponente, löst ein Ereignis aus und führt den Code in eine oder mehrere Ereignissenken in regelmäßigen Abständen.</span><span class="sxs-lookup"><span data-stu-id="1bda9-113"><xref:System.Windows.Forms.Timer?displayProperty=nameWithType> (.NET Framework only), a Windows Forms component that fires an event and executes the code in one or more event sinks at regular intervals.</span></span> <span data-ttu-id="1bda9-114">Die Komponente weist keine Benutzeroberfläche und dient zur Verwendung in einem Singlethread-Umgebung. Er führt die UI-Thread.</span><span class="sxs-lookup"><span data-stu-id="1bda9-114">The component has no user interface and is designed for use in a single-threaded environment; it executes on the UI thread.</span></span>
> - <span data-ttu-id="1bda9-115"><xref:System.Web.UI.Timer?displayProperty=nameWithType> (Nur (.NET Framework), ein ASP.NET-Komponente, die Webseite für asynchrone oder synchrone Postbacks in regelmäßigen Intervallen ausführt.</span><span class="sxs-lookup"><span data-stu-id="1bda9-115"><xref:System.Web.UI.Timer?displayProperty=nameWithType> (.NET Framework only), an ASP.NET component that performs asynchronous or synchronous web page postbacks at a regular interval.</span></span>
  
 <span data-ttu-id="1bda9-116">Wenn Sie einen Zeitgeber erstellen, können Sie angeben, dass eine Zeitspanne wartet, bevor die erste Ausführung der Methode (due Zeit), und eine Zeitspanne zwischen nachfolgende Ausführungen (Punkt) gewartet.</span><span class="sxs-lookup"><span data-stu-id="1bda9-116">When you create a timer, you can specify an amount of time to wait before the first execution of the method (due time), and an amount of time to wait between subsequent executions (period).</span></span> <span data-ttu-id="1bda9-117">Die <xref:System.Threading.Timer> -Klasse verfügt über die Auflösung der Systemuhr.</span><span class="sxs-lookup"><span data-stu-id="1bda9-117">The <xref:System.Threading.Timer> class has the same resolution as the system clock.</span></span> <span data-ttu-id="1bda9-118">Dies bedeutet, dass der Zeitraum ist kleiner als die Auflösung der Systemuhr, die <xref:System.Threading.TimerCallback> Delegat wird ausgeführt, in Intervallen von der Auflösung der Systemuhr, also etwa 15 Millisekunden auf Windows 7 und Windows 8 definiert.</span><span class="sxs-lookup"><span data-stu-id="1bda9-118">This means that if the period is less than the resolution of the system clock, the <xref:System.Threading.TimerCallback> delegate will execute at intervals defined by the resolution of the system clock, which is approximately 15 milliseconds on Windows 7 and Windows 8 systems.</span></span> <span data-ttu-id="1bda9-119">Sie können den Gesamtbetrag ändern Zeit und Zeitraum oder deaktivieren Sie den Zeitgeber, mithilfe der <xref:System.Threading.Timer.Change%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="1bda9-119">You can change the due time and period, or disable the timer, by using the <xref:System.Threading.Timer.Change%2A> method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1bda9-120">Solange Sie verwenden eine <xref:System.Threading.Timer>, müssen Sie einen Verweis darauf behalten.</span><span class="sxs-lookup"><span data-stu-id="1bda9-120">As long as you are using a <xref:System.Threading.Timer>, you must keep a reference to it.</span></span> <span data-ttu-id="1bda9-121">Wie bei der ein verwaltetes Objekt ein <xref:System.Threading.Timer> Garbage Collection ist, wenn keine Verweise darauf vorhanden sind.</span><span class="sxs-lookup"><span data-stu-id="1bda9-121">As with any managed object, a <xref:System.Threading.Timer> is subject to garbage collection when there are no references to it.</span></span> <span data-ttu-id="1bda9-122">Die Tatsache, die eine <xref:System.Threading.Timer> ist noch aktiv verhindert nicht, dass es gesammelt werden.</span><span class="sxs-lookup"><span data-stu-id="1bda9-122">The fact that a <xref:System.Threading.Timer> is still active does not prevent it from being collected.</span></span>  
  
 <span data-ttu-id="1bda9-123">Wenn ein Zeitgeber nicht mehr benötigt wird, verwenden Sie die <xref:System.Threading.Timer.Dispose%2A> Methode zum Freigeben der Ressourcen frei, die den Zeitgeber.</span><span class="sxs-lookup"><span data-stu-id="1bda9-123">When a timer is no longer needed, use the <xref:System.Threading.Timer.Dispose%2A> method to free the resources held by the timer.</span></span> <span data-ttu-id="1bda9-124">Beachten Sie, dass die Rückrufe auftreten können, nachdem die <xref:System.Threading.Timer.Dispose> methodenüberladung aufgerufen wurde, da der Zeitgeber Rückrufe für die Ausführung von Threads im Threadpool Warteschlangen.</span><span class="sxs-lookup"><span data-stu-id="1bda9-124">Note that callbacks can occur after the <xref:System.Threading.Timer.Dispose> method overload has been called, because the timer queues callbacks for execution by thread pool threads.</span></span> <span data-ttu-id="1bda9-125">Sie können die <xref:System.Threading.Timer.Dispose%28System.Threading.WaitHandle%29> methodenüberladung warten, bis alle Rückrufe abgeschlossen haben.</span><span class="sxs-lookup"><span data-stu-id="1bda9-125">You can use the <xref:System.Threading.Timer.Dispose%28System.Threading.WaitHandle%29> method overload to wait until all callbacks have completed.</span></span>  
  
 <span data-ttu-id="1bda9-126">Die Rückrufmethode, die vom Zeitgeber ausgeführte sollte wiedereintrittsfähig, sein, da der Aufruf für <xref:System.Threading.ThreadPool> Threads.</span><span class="sxs-lookup"><span data-stu-id="1bda9-126">The callback method executed by the timer should be reentrant, because it is called on <xref:System.Threading.ThreadPool> threads.</span></span> <span data-ttu-id="1bda9-127">Der Rückruf kann gleichzeitig auf zwei Threads im Threadpool ausgeführt werden, wenn das Zeitgeberintervall kleiner als der Zeitaufwand für den Rückruf ausgeführt wird oder alle Threads im Threadpool verwendet werden, und der Rückruf mehrere Male in die Warteschlange gestellt wird.</span><span class="sxs-lookup"><span data-stu-id="1bda9-127">The callback can be executed simultaneously on two thread pool threads if the timer interval is less than the time required to execute the callback, or if all thread pool threads are in use and the callback is queued multiple times.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1bda9-128"><xref:System.Threading.Timer?displayProperty=nameWithType> ist ein einfacher, kleine Zeitgeber, der Rückrufmethoden verwendet und von Threads im Threadpool bereitgestellt wird.</span><span class="sxs-lookup"><span data-stu-id="1bda9-128"><xref:System.Threading.Timer?displayProperty=nameWithType> is a simple, lightweight timer that uses callback methods and is served by thread pool threads.</span></span> <span data-ttu-id="1bda9-129">Es ist für die Verwendung mit Windows Forms, abgeraten, da die Rückrufe nicht auf dem Benutzeroberflächenthread auftreten.</span><span class="sxs-lookup"><span data-stu-id="1bda9-129">It is not recommended for use with Windows Forms, because its callbacks do not occur on the user interface thread.</span></span> <span data-ttu-id="1bda9-130"><xref:System.Windows.Forms.Timer?displayProperty=nameWithType> ist die bessere Wahl für die Verwendung mit Windows Forms.</span><span class="sxs-lookup"><span data-stu-id="1bda9-130"><xref:System.Windows.Forms.Timer?displayProperty=nameWithType> is a better choice for use with Windows Forms.</span></span> <span data-ttu-id="1bda9-131">Serverbasierte timerfunktionalität, Sie können erwägen, mit <xref:System.Timers.Timer?displayProperty=nameWithType>, die Ereignisse auslöst, und verfügt über zusätzliche Funktionen.</span><span class="sxs-lookup"><span data-stu-id="1bda9-131">For server-based timer functionality, you might consider using <xref:System.Timers.Timer?displayProperty=nameWithType>, which raises events and has additional features.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1bda9-132">Das folgende Beispiel definiert eine `StatusChecker` Klasse, eine `CheckStatus` Methode, deren Signatur dem entspricht, als das <xref:System.Threading.TimerCallback> delegieren.</span><span class="sxs-lookup"><span data-stu-id="1bda9-132">The following example defines a `StatusChecker` class  that includes a `CheckStatus` method whose signature is the same as the <xref:System.Threading.TimerCallback> delegate.</span></span> <span data-ttu-id="1bda9-133">Die `state` Argument der `CheckStatus` Methode ist ein <xref:System.Threading.AutoResetEvent> -Objekt, das verwendet wird, so synchronisieren Sie Thread der Anwendung und der Thread des Threadpools, die den Rückrufdelegaten ausgeführt wird.</span><span class="sxs-lookup"><span data-stu-id="1bda9-133">The  `state` argument of the `CheckStatus` method is an <xref:System.Threading.AutoResetEvent> object that is used to synchronize the application thread and the thread pool thread that executes the callback delegate.</span></span> <span data-ttu-id="1bda9-134">Die `StatusChecker` Klasse enthält auch zwei Zustandsvariablen:</span><span class="sxs-lookup"><span data-stu-id="1bda9-134">The `StatusChecker` class also includes two state variables:</span></span>  
  
 `invokeCount`  
 <span data-ttu-id="1bda9-135">Gibt die Anzahl der Häufigkeit, mit der die Rückrufmethode aufgerufen wurde.</span><span class="sxs-lookup"><span data-stu-id="1bda9-135">Indicates the number of times the callback method has been invoked.</span></span>  
  
 `maxCount`  
 <span data-ttu-id="1bda9-136">Bestimmt die maximale Anzahl der Häufigkeit, mit der die Rückrufmethode aufgerufen werden soll.</span><span class="sxs-lookup"><span data-stu-id="1bda9-136">Determines the maximum number of times the callback method should be invoked.</span></span>  
  
 <span data-ttu-id="1bda9-137">Thread der Anwendung erstellt, das dem Timer wartet eine Sekunde und führt dann die `CheckStatus` Rückrufmethode alle 250 Millisekunden.</span><span class="sxs-lookup"><span data-stu-id="1bda9-137">The application thread creates the timer, which waits one second and then executes  the `CheckStatus` callback method every 250 milliseconds.</span></span> <span data-ttu-id="1bda9-138">Klicken Sie dann der Anwendungsthread blockiert, bis die <xref:System.Threading.AutoResetEvent> -Objekt signalisiert wird.</span><span class="sxs-lookup"><span data-stu-id="1bda9-138">The application thread then blocks until the <xref:System.Threading.AutoResetEvent> object is signaled.</span></span> <span data-ttu-id="1bda9-139">Bei der `CheckStatus` Rückrufmethode `maxCount` Zeiten, ruft er die `AutoResetEvent.Set` Methode zum Festlegen des Status von der <xref:System.Threading.AutoResetEvent> -Objekt signalisiert.</span><span class="sxs-lookup"><span data-stu-id="1bda9-139">When the `CheckStatus` callback method executes `maxCount` times, it calls the `AutoResetEvent.Set` method to set the state of the <xref:System.Threading.AutoResetEvent> object to signaled.</span></span> <span data-ttu-id="1bda9-140">Der erstmals in diesem Fall der Anwendungsthread Ruft die <xref:System.Threading.Timer.Change%28System.Int32%2CSystem.Int32%29> Methode, damit die Rückrufmethode jetzt jede halbe Sekunde ausgeführt wird.</span><span class="sxs-lookup"><span data-stu-id="1bda9-140">The first time this happens, the application thread calls the <xref:System.Threading.Timer.Change%28System.Int32%2CSystem.Int32%29> method so that the callback method now executes every half second.</span></span> <span data-ttu-id="1bda9-141">Es noch einmal blockiert, bis die <xref:System.Threading.AutoResetEvent> -Objekt signalisiert wird.</span><span class="sxs-lookup"><span data-stu-id="1bda9-141">It once again blocks until the <xref:System.Threading.AutoResetEvent> object is signaled.</span></span> <span data-ttu-id="1bda9-142">In diesem Fall wird der Zeitgeber zerstört, durch Aufrufen seiner <xref:System.Threading.Timer.Dispose%2A> -Methode, und die Anwendung beendet wird.</span><span class="sxs-lookup"><span data-stu-id="1bda9-142">When this happens, the timer is destroyed by calling its <xref:System.Threading.Timer.Dispose%2A> method, and the application terminates.</span></span>  
  
 [!code-cpp[System.Threading.Timer#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.Timer/CPP/source.cpp#1)]
 [!code-csharp[System.Threading.Timer#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.Timer/CS/source.cs#1)]
 [!code-vb[System.Threading.Timer#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.Timer/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe>
      <span data-ttu-id="1bda9-143">Dieser Typ ist threadsicher.</span>
      <span class="sxs-lookup">
        <span data-stu-id="1bda9-143">This type is thread safe.</span>
      </span>
    </threadsafe>
    <altmember cref="T:System.Threading.TimerCallback" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="1bda9-144">Initialisiert eine neue Instanz der <see langword="Timer" />-Klasse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bda9-144">Initializes a new instance of the <see langword="Timer" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Timer (System.Threading.TimerCallback callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Threading.TimerCallback callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Timer.#ctor(System.Threading.TimerCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (callback As TimerCallback)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Timer(System::Threading::TimerCallback ^ callback);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Timer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="callback" Type="System.Threading.TimerCallback" />
      </Parameters>
      <Docs>
        <param name="callback">
          <span data-ttu-id="1bda9-145">Ein <see cref="T:System.Threading.TimerCallback" />-Delegat, der die auszuführende Methode darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bda9-145">A <see cref="T:System.Threading.TimerCallback" /> delegate representing a method to be executed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1bda9-146">Initialisiert eine neue Instanz der <see cref="T:System.Threading.Timer" />-Klasse mit einem unendlichen Zeitraum und einer unendlichen Vorlaufzeit, wobei das neu erstellte <see cref="T:System.Threading.Timer" />-Objekt als Zustandsobjekt verwendet wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bda9-146">Initializes a new instance of the <see cref="T:System.Threading.Timer" /> class with an infinite period and an infinite due time, using the newly created <see cref="T:System.Threading.Timer" /> object as the state object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1bda9-147">Wenn Sie verwenden möchten, rufen Sie diesen Konstruktor die <xref:System.Threading.Timer> Objekt selbst als Zustandsobjekt.</span><span class="sxs-lookup"><span data-stu-id="1bda9-147">Call this constructor when you want to use the <xref:System.Threading.Timer> object itself as the state object.</span></span> <span data-ttu-id="1bda9-148">Verwenden Sie nach dem Erstellen des Zeitgebers die <xref:System.Threading.Timer.Change%2A> Methode, um das Intervall und die Vorlaufzeit einzurichten.</span><span class="sxs-lookup"><span data-stu-id="1bda9-148">After creating the timer, use the <xref:System.Threading.Timer.Change%2A> method to set the interval and due time.</span></span>  
  
 <span data-ttu-id="1bda9-149">Dieser Konstruktor gibt eine unendliche Vorlaufzeit vor dem ersten Rückruf und ein unendliches Intervall zwischen den Rückrufen, um zu verhindern, dass den erste Rückruf auftritt, bevor Sie die <xref:System.Threading.Timer> das Zustandsobjekt, das Objekt zugewiesen ist.</span><span class="sxs-lookup"><span data-stu-id="1bda9-149">This constructor specifies an infinite due time before the first callback and an infinite interval between callbacks, in order to prevent the first callback from occurring before the <xref:System.Threading.Timer> object is assigned to the state object.</span></span>  
  
 <span data-ttu-id="1bda9-150">Die für die angegebene Methode `callback` sollte wiedereintrittsfähig, sein, da der Aufruf für <xref:System.Threading.ThreadPool> Threads.</span><span class="sxs-lookup"><span data-stu-id="1bda9-150">The method specified for `callback` should be reentrant, because it is called on <xref:System.Threading.ThreadPool> threads.</span></span> <span data-ttu-id="1bda9-151">Die Methode kann gleichzeitig auf zwei Threads im Threadpool ausgeführt werden, wenn das Zeitgeberintervall kleiner als der Zeitaufwand für die Methode ausgeführt wird oder alle Threads im Threadpool verwendet werden und die-Methode mehrere Male in die Warteschlange gestellt wird.</span><span class="sxs-lookup"><span data-stu-id="1bda9-151">The method can be executed simultaneously on two thread pool threads if the timer interval is less than the time required to execute the method, or if all thread pool threads are in use and the method is queued multiple times.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1bda9-152">Das folgende Codebeispiel erstellt einen neuen Zeitgeber unter Verwendung von des Zeitgebers selbst als Zustandsobjekt.</span><span class="sxs-lookup"><span data-stu-id="1bda9-152">The following code example creates a new timer, using the timer itself as the state object.</span></span> <span data-ttu-id="1bda9-153">Die <xref:System.Threading.Timer.Change%2A> Methode wird verwendet, um den Timer zu starten.</span><span class="sxs-lookup"><span data-stu-id="1bda9-153">The <xref:System.Threading.Timer.Change%2A> method is used to start the timer.</span></span> <span data-ttu-id="1bda9-154">Bei der Zeitgeberrückruf wird wird das Zustandsobjekt verwendet, um den Zeitgeber zu deaktivieren.</span><span class="sxs-lookup"><span data-stu-id="1bda9-154">When the timer callback occurs, the state object is used to turn the timer off.</span></span>  
  
 [!code-csharp[TimerSelfCtor#1](~/samples/snippets/csharp/VS_Snippets_Misc/timerSelfCtor/CS/source.cs#1)]
 [!code-vb[TimerSelfCtor#1](~/samples/snippets/visualbasic/VS_Snippets_Misc/timerSelfCtor/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Timer (System.Threading.TimerCallback callback, object state, int dueTime, int period);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Threading.TimerCallback callback, object state, int32 dueTime, int32 period) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Timer.#ctor(System.Threading.TimerCallback,System.Object,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (callback As TimerCallback, state As Object, dueTime As Integer, period As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Timer(System::Threading::TimerCallback ^ callback, System::Object ^ state, int dueTime, int period);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Timer</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="callback" Type="System.Threading.TimerCallback" />
        <Parameter Name="state" Type="System.Object" />
        <Parameter Name="dueTime" Type="System.Int32" />
        <Parameter Name="period" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="callback">
          <span data-ttu-id="1bda9-155">Ein <see cref="T:System.Threading.TimerCallback" />-Delegat, der die auszuführende Methode darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bda9-155">A <see cref="T:System.Threading.TimerCallback" /> delegate representing a method to be executed.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="1bda9-156">Ein Objekt, das die von der Rückrufmethode zu verwendenden Informationen enthält, oder <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bda9-156">An object containing information to be used by the callback method, or <see langword="null" />.</span>
          </span>
        </param>
        <param name="dueTime">
          <span data-ttu-id="1bda9-157">Die in Millisekunden angegebene Zeitspanne, die gewartet werden soll, bis <c>callback</c> aufgerufen wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bda9-157">The amount of time to delay before <c>callback</c> is invoked, in milliseconds.</span>
          </span>
          <span data-ttu-id="1bda9-158">Geben Sie <see cref="F:System.Threading.Timeout.Infinite" /> an, um das Starten des Zeitgebers zu verhindern.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bda9-158">Specify <see cref="F:System.Threading.Timeout.Infinite" /> to prevent the timer from starting.</span>
          </span>
          <span data-ttu-id="1bda9-159">Geben Sie 0 (null) an, um den Timer sofort zu starten.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bda9-159">Specify zero (0) to start the timer immediately.</span>
          </span>
        </param>
        <param name="period">
          <span data-ttu-id="1bda9-160">Das in Millisekunden angegebene Zeitintervall zwischen den Aufrufen von <c>callback</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bda9-160">The time interval between invocations of <c>callback</c>, in milliseconds.</span>
          </span>
          <span data-ttu-id="1bda9-161">Geben Sie <see cref="F:System.Threading.Timeout.Infinite" /> an, um periodisches Signalisieren zu deaktivieren.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bda9-161">Specify <see cref="F:System.Threading.Timeout.Infinite" /> to disable periodic signaling.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1bda9-162">Initialisiert eine neue Instanz der <see langword="Timer" />-Klasse unter Verwendung einer 32-Bit-Ganzzahl mit Vorzeichen zum Angeben des Zeitintervalls.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bda9-162">Initializes a new instance of the <see langword="Timer" /> class, using a 32-bit signed integer to specify the time interval.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1bda9-163">Der Delegat, der gemäß der `callback` Parameter wird aufgerufen, einmal nach `dueTime` verstrichen ist, und anschließend jedes Mal die `period` Zeit Intervall verstrichen ist.</span><span class="sxs-lookup"><span data-stu-id="1bda9-163">The delegate specified by the `callback` parameter is invoked once after `dueTime` elapses, and thereafter each time the `period` time interval elapses.</span></span>  
  
 <span data-ttu-id="1bda9-164">Wenn `dueTime` ist 0 (null), `callback` wird sofort aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="1bda9-164">If `dueTime` is zero (0), `callback` is invoked immediately.</span></span> <span data-ttu-id="1bda9-165">Wenn `dueTime` ist <xref:System.Threading.Timeout.Infinite?displayProperty=nameWithType>, `callback` nicht aufgerufen; der Timer deaktiviert ist, jedoch können erneut aktiviert werden, durch Aufrufen der <xref:System.Threading.Timer.Change%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="1bda9-165">If `dueTime` is <xref:System.Threading.Timeout.Infinite?displayProperty=nameWithType>, `callback` is not invoked; the timer is disabled, but can be re-enabled by calling the <xref:System.Threading.Timer.Change%2A> method.</span></span>  
  
 <span data-ttu-id="1bda9-166">Da die <xref:System.Threading.Timer> -Klasse verfügt über derselben Auflösung wie der Systemuhr, also etwa 15 Millisekunden auf Windows 7 und Windows 8 die `callback` Delegaten ausführt, in Intervallen von der Auflösung der Systemuhr definiert werden, wenn `period`ist kleiner als die Auflösung der Systemuhr.</span><span class="sxs-lookup"><span data-stu-id="1bda9-166">Because the <xref:System.Threading.Timer> class has the same resolution as the system clock, which is approximately 15 milliseconds on Windows 7 and Windows 8 systems, the `callback` delegate executes at intervals defined by the resolution of the system clock if `period` is less than the resolution of the system clock.</span></span> <span data-ttu-id="1bda9-167">Wenn `period` ist 0 (null) oder <xref:System.Threading.Timeout.Infinite?displayProperty=nameWithType> und `dueTime` nicht <xref:System.Threading.Timeout.Infinite?displayProperty=nameWithType>, `callback` wird aufgerufen, einmal; das periodische Verhalten des Zeitgebers ist deaktiviert, aber können erneut aktiviert werden mithilfe der <xref:System.Threading.Timer.Change%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="1bda9-167">If `period` is zero (0) or <xref:System.Threading.Timeout.Infinite?displayProperty=nameWithType> and `dueTime` is not <xref:System.Threading.Timeout.Infinite?displayProperty=nameWithType>, `callback` is invoked once; the periodic behavior of the timer is disabled, but can be re-enabled using the <xref:System.Threading.Timer.Change%2A> method.</span></span>  
  
 <span data-ttu-id="1bda9-168">Die für die angegebene Methode `callback` sollte wiedereintrittsfähig, sein, da der Aufruf für <xref:System.Threading.ThreadPool> Threads.</span><span class="sxs-lookup"><span data-stu-id="1bda9-168">The method specified for `callback` should be reentrant, because it is called on <xref:System.Threading.ThreadPool> threads.</span></span> <span data-ttu-id="1bda9-169">Die Methode kann gleichzeitig auf zwei Threads im Threadpool ausgeführt werden, wenn das Zeitgeberintervall kleiner als der Zeitaufwand für die Methode ausgeführt wird oder alle Threads im Threadpool verwendet werden und die-Methode mehrere Male in die Warteschlange gestellt wird.</span><span class="sxs-lookup"><span data-stu-id="1bda9-169">The method can be executed simultaneously on two thread pool threads if the timer interval is less than the time required to execute the method, or if all thread pool threads are in use and the method is queued multiple times.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1bda9-170">Das folgende Codebeispiel veranschaulicht das Erstellen einer `TimerCallback` delegieren und initialisieren Sie eine neue Instanz der dem `Timer` Klasse.</span><span class="sxs-lookup"><span data-stu-id="1bda9-170">The following code example shows how to create a `TimerCallback` delegate and initialize a new instance of the `Timer` class.</span></span>  
  
 [!code-cpp[System.Threading.Timer#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.Timer/CPP/source.cpp#1)]
 [!code-csharp[System.Threading.Timer#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.Timer/CS/source.cs#1)]
 [!code-vb[System.Threading.Timer#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.Timer/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="1bda9-171">Der <paramref name="dueTime" />-Parameter oder der <paramref name="period" />-Parameter ist negativ und ungleich <see cref="F:System.Threading.Timeout.Infinite" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bda9-171">The <paramref name="dueTime" /> or <paramref name="period" /> parameter is negative and is not equal to <see cref="F:System.Threading.Timeout.Infinite" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1bda9-172">Der <paramref name="callback" />-Parameter ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bda9-172">The <paramref name="callback" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Timer (System.Threading.TimerCallback callback, object state, long dueTime, long period);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Threading.TimerCallback callback, object state, int64 dueTime, int64 period) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Timer.#ctor(System.Threading.TimerCallback,System.Object,System.Int64,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (callback As TimerCallback, state As Object, dueTime As Long, period As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Timer(System::Threading::TimerCallback ^ callback, System::Object ^ state, long dueTime, long period);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Timer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="callback" Type="System.Threading.TimerCallback" />
        <Parameter Name="state" Type="System.Object" />
        <Parameter Name="dueTime" Type="System.Int64" />
        <Parameter Name="period" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="callback">
          <span data-ttu-id="1bda9-173">Ein <see cref="T:System.Threading.TimerCallback" />-Delegat, der die auszuführende Methode darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bda9-173">A <see cref="T:System.Threading.TimerCallback" /> delegate representing a method to be executed.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="1bda9-174">Ein Objekt, das die von der Rückrufmethode zu verwendenden Informationen enthält, oder <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bda9-174">An object containing information to be used by the callback method, or <see langword="null" />.</span>
          </span>
        </param>
        <param name="dueTime">
          <span data-ttu-id="1bda9-175">Die in Millisekunden angegebene Zeitspanne, die gewartet werden soll, bis <c>callback</c> aufgerufen wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bda9-175">The amount of time to delay before <c>callback</c> is invoked, in milliseconds.</span>
          </span>
          <span data-ttu-id="1bda9-176">Geben Sie <see cref="F:System.Threading.Timeout.Infinite" /> an, um das Starten des Zeitgebers zu verhindern.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bda9-176">Specify <see cref="F:System.Threading.Timeout.Infinite" /> to prevent the timer from starting.</span>
          </span>
          <span data-ttu-id="1bda9-177">Geben Sie 0 (null) an, um den Timer sofort zu starten.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bda9-177">Specify zero (0) to start the timer immediately.</span>
          </span>
        </param>
        <param name="period">
          <span data-ttu-id="1bda9-178">Das in Millisekunden angegebene Zeitintervall zwischen den Aufrufen von <c>callback</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bda9-178">The time interval between invocations of <c>callback</c>, in milliseconds.</span>
          </span>
          <span data-ttu-id="1bda9-179">Geben Sie <see cref="F:System.Threading.Timeout.Infinite" /> an, um periodisches Signalisieren zu deaktivieren.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bda9-179">Specify <see cref="F:System.Threading.Timeout.Infinite" /> to disable periodic signaling.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1bda9-180">Initialisiert eine neue Instanz der <see langword="Timer" />-Klasse unter Verwendung von 64-Bit-Ganzzahlen mit Vorzeichen zum Messen von Zeitintervallen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bda9-180">Initializes a new instance of the <see langword="Timer" /> class, using 64-bit signed integers to measure time intervals.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1bda9-181">Der Delegat, der gemäß der `callback` Parameter wird aufgerufen, einmal nach `dueTime` verstrichen ist, und anschließend jedes Mal die `period` Zeit Intervall verstrichen ist.</span><span class="sxs-lookup"><span data-stu-id="1bda9-181">The delegate specified by the `callback` parameter is invoked once after `dueTime` elapses, and thereafter each time the `period` time interval elapses.</span></span>  
  
 <span data-ttu-id="1bda9-182">Wenn `dueTime` ist 0 (null), `callback` wird sofort aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="1bda9-182">If `dueTime` is zero (0), `callback` is invoked immediately.</span></span> <span data-ttu-id="1bda9-183">Wenn `dueTime` ist <xref:System.Threading.Timeout.Infinite?displayProperty=nameWithType>, `callback` nicht aufgerufen; der Timer deaktiviert ist, jedoch können erneut aktiviert werden, durch Aufrufen der <xref:System.Threading.Timer.Change%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="1bda9-183">If `dueTime` is <xref:System.Threading.Timeout.Infinite?displayProperty=nameWithType>, `callback` is not invoked; the timer is disabled, but can be re-enabled by calling the <xref:System.Threading.Timer.Change%2A> method.</span></span>  
  
 <span data-ttu-id="1bda9-184">Da die <xref:System.Threading.Timer> -Klasse verfügt über derselben Auflösung wie der Systemuhr, also etwa 15 Millisekunden auf Windows 7 und Windows 8 die `callback` Delegaten ausführt, in Intervallen von der Auflösung der Systemuhr definiert werden, wenn `period`ist kleiner als die Auflösung der Systemuhr.</span><span class="sxs-lookup"><span data-stu-id="1bda9-184">Because the <xref:System.Threading.Timer> class has the same resolution as the system clock, which is approximately 15 milliseconds on Windows 7 and Windows 8 systems, the `callback` delegate executes at intervals defined by the resolution of the system clock if `period` is less than the resolution of the system clock.</span></span> <span data-ttu-id="1bda9-185">Wenn `period` ist 0 (null) oder <xref:System.Threading.Timeout.Infinite?displayProperty=nameWithType> und `dueTime` nicht <xref:System.Threading.Timeout.Infinite?displayProperty=nameWithType>, `callback` wird aufgerufen, einmal; das periodische Verhalten des Zeitgebers ist deaktiviert, aber können erneut aktiviert werden mithilfe der <xref:System.Threading.Timer.Change%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="1bda9-185">If `period` is zero (0) or <xref:System.Threading.Timeout.Infinite?displayProperty=nameWithType> and `dueTime` is not <xref:System.Threading.Timeout.Infinite?displayProperty=nameWithType>, `callback` is invoked once; the periodic behavior of the timer is disabled, but can be re-enabled using the <xref:System.Threading.Timer.Change%2A> method.</span></span>  
  
 <span data-ttu-id="1bda9-186">Die für die angegebene Methode `callback` sollte wiedereintrittsfähig, sein, da der Aufruf für <xref:System.Threading.ThreadPool> Threads.</span><span class="sxs-lookup"><span data-stu-id="1bda9-186">The method specified for `callback` should be reentrant, because it is called on <xref:System.Threading.ThreadPool> threads.</span></span> <span data-ttu-id="1bda9-187">Die Methode kann gleichzeitig auf zwei Threads im Threadpool ausgeführt werden, wenn das Zeitgeberintervall kleiner als der Zeitaufwand für die Methode ausgeführt wird oder alle Threads im Threadpool verwendet werden und die-Methode mehrere Male in die Warteschlange gestellt wird.</span><span class="sxs-lookup"><span data-stu-id="1bda9-187">The method can be executed simultaneously on two thread pool threads if the timer interval is less than the time required to execute the method, or if all thread pool threads are in use and the method is queued multiple times.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="1bda9-188">Der <paramref name="dueTime" />-Parameter oder der <paramref name="period" />-Parameter ist negativ und ungleich <see cref="F:System.Threading.Timeout.Infinite" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bda9-188">The <paramref name="dueTime" /> or <paramref name="period" /> parameter is negative and is not equal to <see cref="F:System.Threading.Timeout.Infinite" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="1bda9-189">Der <paramref name="dueTime" />-Parameter oder der <paramref name="period" />-Parameter ist größer als 4.294.967.294.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bda9-189">The <paramref name="dueTime" /> or <paramref name="period" /> parameter is greater than 4294967294.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Timer (System.Threading.TimerCallback callback, object state, TimeSpan dueTime, TimeSpan period);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Threading.TimerCallback callback, object state, valuetype System.TimeSpan dueTime, valuetype System.TimeSpan period) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Timer.#ctor(System.Threading.TimerCallback,System.Object,System.TimeSpan,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (callback As TimerCallback, state As Object, dueTime As TimeSpan, period As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Timer(System::Threading::TimerCallback ^ callback, System::Object ^ state, TimeSpan dueTime, TimeSpan period);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Timer</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="callback" Type="System.Threading.TimerCallback" />
        <Parameter Name="state" Type="System.Object" />
        <Parameter Name="dueTime" Type="System.TimeSpan" />
        <Parameter Name="period" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="callback">
          <span data-ttu-id="1bda9-190">Ein Delegat, der eine auszuführende Methode darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bda9-190">A delegate representing a method to be executed.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="1bda9-191">Ein Objekt, das die von der Rückrufmethode zu verwendenden Informationen enthält, oder <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bda9-191">An object containing information to be used by the callback method, or <see langword="null" />.</span>
          </span>
        </param>
        <param name="dueTime">
          <span data-ttu-id="1bda9-192">Die Zeitspanne, die gewartet werden soll, bis der <c>callback</c>-Parameter die zugehörigen Methoden aufruft.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bda9-192">The amount of time to delay before the <c>callback</c> parameter invokes its methods.</span>
          </span>
          <span data-ttu-id="1bda9-193">Geben Sie „-1“ Millisekunde an, um das Starten des Timers zu verhindern.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bda9-193">Specify negative one (-1) milliseconds to prevent the timer from starting.</span>
          </span>
          <span data-ttu-id="1bda9-194">Geben Sie 0 (null) an, um den Timer sofort zu starten.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bda9-194">Specify zero (0) to start the timer immediately.</span>
          </span>
        </param>
        <param name="period">
          <span data-ttu-id="1bda9-195">Das Zeitintervall zwischen Aufrufen der Methoden, auf die durch <c>callback</c> verwiesen wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bda9-195">The time interval between invocations of the methods referenced by <c>callback</c>.</span>
          </span>
          <span data-ttu-id="1bda9-196">Geben Sie -1 Millisekunde an, um periodisches Signalisieren zu deaktivieren.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bda9-196">Specify negative one (-1) milliseconds to disable periodic signaling.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1bda9-197">Initialisiert eine neue Instanz der <see langword="Timer" />-Klasse unter Verwendung von <see cref="T:System.TimeSpan" />-Werten zum Messen von Zeitintervallen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bda9-197">Initializes a new instance of the <see langword="Timer" /> class, using <see cref="T:System.TimeSpan" /> values to measure time intervals.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1bda9-198">Der Delegat, der gemäß der `callback` Parameter wird aufgerufen, einmal nach `dueTime` verstrichen ist, und anschließend jedes Mal die `period` Zeit Intervall verstrichen ist.</span><span class="sxs-lookup"><span data-stu-id="1bda9-198">The delegate specified by the `callback` parameter is invoked once after `dueTime` elapses, and thereafter each time the `period` time interval elapses.</span></span>  
  
 <span data-ttu-id="1bda9-199">Wenn `dueTime` ist 0 (null), `callback` wird sofort aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="1bda9-199">If `dueTime` is zero (0), `callback` is invoked immediately.</span></span> <span data-ttu-id="1bda9-200">Wenn `dueTime` wird die negative Eins (1) Millisekunden `callback` nicht aufgerufen; der Timer deaktiviert ist, jedoch können erneut aktiviert werden, durch Aufrufen der <xref:System.Threading.Timer.Change%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="1bda9-200">If `dueTime` is negative one (-1) milliseconds, `callback` is not invoked; the timer is disabled, but can be re-enabled by calling the <xref:System.Threading.Timer.Change%2A> method.</span></span>  
  
 <span data-ttu-id="1bda9-201">Da die <xref:System.Threading.Timer> -Klasse verfügt über derselben Auflösung wie der Systemuhr, also etwa 15 Millisekunden auf Windows 7 und Windows 8 die `callback` Delegaten ausführt, in Intervallen von der Auflösung der Systemuhr definiert werden, wenn `period`ist kleiner als die Auflösung der Systemuhr.</span><span class="sxs-lookup"><span data-stu-id="1bda9-201">Because the <xref:System.Threading.Timer> class has the same resolution as the system clock, which is approximately 15 milliseconds on Windows 7 and Windows 8 systems, the `callback` delegate executes at intervals defined by the resolution of the system clock if `period` is less than the resolution of the system clock.</span></span> <span data-ttu-id="1bda9-202">Wenn `period` ist 0 (null) oder negative (-1) Millisekunde an, und `dueTime` positiv ist, `callback` wird aufgerufen, einmal; das periodische Verhalten des Zeitgebers ist deaktiviert, aber können erneut aktiviert werden mithilfe der <xref:System.Threading.Timer.Change%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="1bda9-202">If `period` is zero (0) or negative one (-1) milliseconds and `dueTime` is positive, `callback` is invoked once; the periodic behavior of the timer is disabled, but can be re-enabled using the <xref:System.Threading.Timer.Change%2A> method.</span></span>  
  
 <span data-ttu-id="1bda9-203">Die für die angegebene Methode `callback` sollte wiedereintrittsfähig, sein, da der Aufruf für <xref:System.Threading.ThreadPool> Threads.</span><span class="sxs-lookup"><span data-stu-id="1bda9-203">The method specified for `callback` should be reentrant, because it is called on <xref:System.Threading.ThreadPool> threads.</span></span> <span data-ttu-id="1bda9-204">Die Methode kann gleichzeitig auf zwei Threads im Threadpool ausgeführt werden, wenn das Zeitgeberintervall kleiner als der Zeitaufwand für die Methode ausgeführt wird oder alle Threads im Threadpool verwendet werden und die-Methode mehrere Male in die Warteschlange gestellt wird.</span><span class="sxs-lookup"><span data-stu-id="1bda9-204">The method can be executed simultaneously on two thread pool threads if the timer interval is less than the time required to execute the method, or if all thread pool threads are in use and the method is queued multiple times.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1bda9-205">Das folgende Codebeispiel veranschaulicht das Erstellen einer `TimerCallback` delegieren und initialisieren Sie eine neue Instanz der dem `Timer` Klasse.</span><span class="sxs-lookup"><span data-stu-id="1bda9-205">The following code example shows how to create a `TimerCallback` delegate and initialize a new instance of the `Timer` class.</span></span>  
  
 [!code-cpp[System.Threading.Timer2#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.Timer2/CPP/source2.cpp#1)]
 [!code-csharp[System.Threading.Timer2#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.Timer2/CS/source2.cs#1)]
 [!code-vb[System.Threading.Timer2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.Timer2/VB/source2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="1bda9-206">Die Anzahl der Millisekunden im Wert von <paramref name="dueTime" /> oder <paramref name="period" /> ist negativ und ungleich <see cref="F:System.Threading.Timeout.Infinite" /> oder größer als <see cref="F:System.Int32.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bda9-206">The number of milliseconds in the value of <paramref name="dueTime" /> or <paramref name="period" /> is negative and not equal to <see cref="F:System.Threading.Timeout.Infinite" />, or is greater than <see cref="F:System.Int32.MaxValue" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1bda9-207">Der <paramref name="callback" />-Parameter ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bda9-207">The <paramref name="callback" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Timer (System.Threading.TimerCallback callback, object state, uint dueTime, uint period);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Threading.TimerCallback callback, object state, unsigned int32 dueTime, unsigned int32 period) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Timer.#ctor(System.Threading.TimerCallback,System.Object,System.UInt32,System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (callback As TimerCallback, state As Object, dueTime As UInteger, period As UInteger)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Timer(System::Threading::TimerCallback ^ callback, System::Object ^ state, System::UInt32 dueTime, System::UInt32 period);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Timer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="callback" Type="System.Threading.TimerCallback" />
        <Parameter Name="state" Type="System.Object" />
        <Parameter Name="dueTime" Type="System.UInt32" />
        <Parameter Name="period" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="callback">
          <span data-ttu-id="1bda9-208">Ein Delegat, der eine auszuführende Methode darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bda9-208">A delegate representing a method to be executed.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="1bda9-209">Ein Objekt, das die von der Rückrufmethode zu verwendenden Informationen enthält, oder <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bda9-209">An object containing information to be used by the callback method, or <see langword="null" />.</span>
          </span>
        </param>
        <param name="dueTime">
          <span data-ttu-id="1bda9-210">Die in Millisekunden angegebene Zeitspanne, die gewartet werden soll, bis <c>callback</c> aufgerufen wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bda9-210">The amount of time to delay before <c>callback</c> is invoked, in milliseconds.</span>
          </span>
          <span data-ttu-id="1bda9-211">Geben Sie <see cref="F:System.Threading.Timeout.Infinite" /> an, um das Starten des Zeitgebers zu verhindern.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bda9-211">Specify <see cref="F:System.Threading.Timeout.Infinite" /> to prevent the timer from starting.</span>
          </span>
          <span data-ttu-id="1bda9-212">Geben Sie 0 (null) an, um den Timer sofort zu starten.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bda9-212">Specify zero (0) to start the timer immediately.</span>
          </span>
        </param>
        <param name="period">
          <span data-ttu-id="1bda9-213">Das in Millisekunden angegebene Zeitintervall zwischen den Aufrufen von <c>callback</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bda9-213">The time interval between invocations of <c>callback</c>, in milliseconds.</span>
          </span>
          <span data-ttu-id="1bda9-214">Geben Sie <see cref="F:System.Threading.Timeout.Infinite" /> an, um periodisches Signalisieren zu deaktivieren.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bda9-214">Specify <see cref="F:System.Threading.Timeout.Infinite" /> to disable periodic signaling.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1bda9-215">Initialisiert eine neue Instanz der <see langword="Timer" />-Klasse unter Verwendung von 32-Bit-Ganzzahlen ohne Vorzeichen zum Messen von Zeitintervallen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bda9-215">Initializes a new instance of the <see langword="Timer" /> class, using 32-bit unsigned integers to measure time intervals.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1bda9-216">Der Delegat, der gemäß der `callback` Parameter wird aufgerufen, einmal nach `dueTime` verstrichen ist, und anschließend jedes Mal die `period` Zeit Intervall verstrichen ist.</span><span class="sxs-lookup"><span data-stu-id="1bda9-216">The delegate specified by the `callback` parameter is invoked once after `dueTime` elapses, and thereafter each time the `period` time interval elapses.</span></span>  
  
 <span data-ttu-id="1bda9-217">Wenn `dueTime` ist 0 (null), `callback` wird sofort aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="1bda9-217">If `dueTime` is zero (0), `callback` is invoked immediately.</span></span> <span data-ttu-id="1bda9-218">Wenn `dueTime` ist <xref:System.Threading.Timeout.Infinite?displayProperty=nameWithType>, `callback` nicht aufgerufen; der Timer deaktiviert ist, jedoch können erneut aktiviert werden, durch Aufrufen der <xref:System.Threading.Timer.Change%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="1bda9-218">If `dueTime` is <xref:System.Threading.Timeout.Infinite?displayProperty=nameWithType>, `callback` is not invoked; the timer is disabled, but can be re-enabled by calling the <xref:System.Threading.Timer.Change%2A> method.</span></span>  
  
 <span data-ttu-id="1bda9-219">Da die <xref:System.Threading.Timer> -Klasse verfügt über derselben Auflösung wie der Systemuhr, also etwa 15 Millisekunden auf Windows 7 und Windows 8 die `callback` Delegaten ausführt, in Intervallen von der Auflösung der Systemuhr definiert werden, wenn `period`ist kleiner als die Auflösung der Systemuhr.</span><span class="sxs-lookup"><span data-stu-id="1bda9-219">Because the <xref:System.Threading.Timer> class has the same resolution as the system clock, which is approximately 15 milliseconds on Windows 7 and Windows 8 systems, the `callback` delegate executes at intervals defined by the resolution of the system clock if `period` is less than the resolution of the system clock.</span></span> <span data-ttu-id="1bda9-220">Wenn `period` ist 0 (null) oder <xref:System.Threading.Timeout.Infinite?displayProperty=nameWithType> und `dueTime` nicht <xref:System.Threading.Timeout.Infinite?displayProperty=nameWithType>, `callback` wird aufgerufen, einmal; das periodische Verhalten des Zeitgebers ist deaktiviert, aber können erneut aktiviert werden mithilfe der <xref:System.Threading.Timer.Change%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="1bda9-220">If `period` is zero (0) or <xref:System.Threading.Timeout.Infinite?displayProperty=nameWithType> and `dueTime` is not <xref:System.Threading.Timeout.Infinite?displayProperty=nameWithType>, `callback` is invoked once; the periodic behavior of the timer is disabled, but can be re-enabled using the <xref:System.Threading.Timer.Change%2A> method.</span></span>  
  
 <span data-ttu-id="1bda9-221">Die für die angegebene Methode `callback` sollte wiedereintrittsfähig, sein, da der Aufruf für <xref:System.Threading.ThreadPool> Threads.</span><span class="sxs-lookup"><span data-stu-id="1bda9-221">The method specified for `callback` should be reentrant, because it is called on <xref:System.Threading.ThreadPool> threads.</span></span> <span data-ttu-id="1bda9-222">Die Methode kann gleichzeitig auf zwei Threads im Threadpool ausgeführt werden, wenn das Zeitgeberintervall kleiner als der Zeitaufwand für die Methode ausgeführt wird oder alle Threads im Threadpool verwendet werden und die-Methode mehrere Male in die Warteschlange gestellt wird.</span><span class="sxs-lookup"><span data-stu-id="1bda9-222">The method can be executed simultaneously on two thread pool threads if the timer interval is less than the time required to execute the method, or if all thread pool threads are in use and the method is queued multiple times.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="1bda9-223">Der <paramref name="dueTime" />-Parameter oder der <paramref name="period" />-Parameter ist negativ und ungleich <see cref="F:System.Threading.Timeout.Infinite" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bda9-223">The <paramref name="dueTime" /> or <paramref name="period" /> parameter is negative and is not equal to <see cref="F:System.Threading.Timeout.Infinite" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1bda9-224">Der <paramref name="callback" />-Parameter ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bda9-224">The <paramref name="callback" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Change">
      <AssemblyInfo>
        <AssemblyName>System.Threading.Timer</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="1bda9-225">Ändert die Startzeit und das Intervall zwischen Methodenaufrufen für einen Zeitgeber.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bda9-225">Changes the start time and the interval between method invocations for a timer.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Change">
      <MemberSignature Language="C#" Value="public bool Change (int dueTime, int period);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Change(int32 dueTime, int32 period) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Timer.Change(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Change (dueTime As Integer, period As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Change(int dueTime, int period);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Timer</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dueTime" Type="System.Int32" />
        <Parameter Name="period" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="dueTime">
          <span data-ttu-id="1bda9-226">Die in Millisekunden angegebene Zeitspanne, die gewartet werden soll, bis die beim Erstellen von <see cref="T:System.Threading.Timer" /> angegebene Rückrufmethode aufgerufen wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bda9-226">The amount of time to delay before the invoking the callback method specified when the <see cref="T:System.Threading.Timer" /> was constructed, in milliseconds.</span>
          </span>
          <span data-ttu-id="1bda9-227">Geben Sie <see cref="F:System.Threading.Timeout.Infinite" /> an, um den Neustart des Zeitgebers zu verhindern.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bda9-227">Specify <see cref="F:System.Threading.Timeout.Infinite" /> to prevent the timer from restarting.</span>
          </span>
          <span data-ttu-id="1bda9-228">Geben Sie 0 (null) an, um den Timer sofort neu zu starten.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bda9-228">Specify zero (0) to restart the timer immediately.</span>
          </span>
        </param>
        <param name="period">
          <span data-ttu-id="1bda9-229">Das Zeitintervall zwischen den Aufrufen der beim Erstellen von <see cref="T:System.Threading.Timer" /> angegebenen Rückrufmethode in Millisekunden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bda9-229">The time interval between invocations of the callback method specified when the <see cref="T:System.Threading.Timer" /> was constructed, in milliseconds.</span>
          </span>
          <span data-ttu-id="1bda9-230">Geben Sie <see cref="F:System.Threading.Timeout.Infinite" /> an, um periodisches Signalisieren zu deaktivieren.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bda9-230">Specify <see cref="F:System.Threading.Timeout.Infinite" /> to disable periodic signaling.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1bda9-231">Ändert die Startzeit und das Intervall zwischen Methodenaufrufen für einen Timer unter Verwendung von 32-Bit-Ganzzahlen mit Vorzeichen zum Messen von Zeitintervallen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bda9-231">Changes the start time and the interval between method invocations for a timer, using 32-bit signed integers to measure time intervals.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1bda9-232">
            <see langword="true" />, wenn der Timer erfolgreich aktualisiert wurde, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bda9-232">
              <see langword="true" /> if the timer was successfully updated; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1bda9-233">Die Rückrufmethode wird aufgerufen, einmal nach `dueTime` verstrichen ist und danach jeweils den Zeitpunkt des vom angegebenen Zeitintervalls `period` abläuft.</span><span class="sxs-lookup"><span data-stu-id="1bda9-233">The callback method is invoked once after `dueTime` elapses, and thereafter each time the time interval specified by `period` elapses.</span></span>  
  
 <span data-ttu-id="1bda9-234">Wenn `dueTime` ist 0 (null), wird die Rückrufmethode sofort aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="1bda9-234">If `dueTime` is zero (0), the callback method is invoked immediately.</span></span> <span data-ttu-id="1bda9-235">Wenn `dueTime` ist <xref:System.Threading.Timeout.Infinite?displayProperty=nameWithType>, die Rückrufmethode wird nie aufgerufen; der Timer deaktiviert ist, aber können erneut aktiviert werden, durch den Aufruf <xref:System.Threading.Timer.Change%2A> und geben einen positiven Wert für `dueTime`.</span><span class="sxs-lookup"><span data-stu-id="1bda9-235">If `dueTime` is <xref:System.Threading.Timeout.Infinite?displayProperty=nameWithType>, the callback method is never invoked; the timer is disabled, but can be re-enabled by calling <xref:System.Threading.Timer.Change%2A> and specifying a positive value for `dueTime`.</span></span>  
  
 <span data-ttu-id="1bda9-236">Wenn `period` ist 0 (null) oder <xref:System.Threading.Timeout.Infinite?displayProperty=nameWithType>, und `dueTime` nicht <xref:System.Threading.Timeout.Infinite?displayProperty=nameWithType>, die Rückrufmethode wird einmal aufgerufen; das periodische Verhalten des Zeitgebers ist deaktiviert, aber können erneut aktiviert werden, durch den Aufruf <xref:System.Threading.Timer.Change%2A> und geben einen positiven Wert für `period`.</span><span class="sxs-lookup"><span data-stu-id="1bda9-236">If `period` is zero (0) or <xref:System.Threading.Timeout.Infinite?displayProperty=nameWithType>, and `dueTime` is not <xref:System.Threading.Timeout.Infinite?displayProperty=nameWithType>, the callback method is invoked once; the periodic behavior of the timer is disabled, but can be re-enabled by calling <xref:System.Threading.Timer.Change%2A> and specifying a positive value for `period`.</span></span>  
  
 <span data-ttu-id="1bda9-237">Die <xref:System.Threading.Timer.Change%2A> Methode kann aufgerufen werden, aus der <xref:System.Threading.TimerCallback> delegieren.</span><span class="sxs-lookup"><span data-stu-id="1bda9-237">The <xref:System.Threading.Timer.Change%2A> method can be called from the <xref:System.Threading.TimerCallback> delegate.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1bda9-238">Im folgenden Codebeispiel wird veranschaulicht, wie zum Starten einer `Timer` und nach einer festgelegten Anzahl von aufrufen, ändern Sie den Zeitraum.</span><span class="sxs-lookup"><span data-stu-id="1bda9-238">The following code example demonstrates how to start a `Timer` and, after a set number of invocations, change its period.</span></span>  
  
 [!code-cpp[System.Threading.Timer#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.Timer/CPP/source.cpp#1)]
 [!code-csharp[System.Threading.Timer#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.Timer/CS/source.cs#1)]
 [!code-vb[System.Threading.Timer#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.Timer/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="1bda9-239">Der <see cref="T:System.Threading.Timer" /> wurde bereits freigegeben.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bda9-239">The <see cref="T:System.Threading.Timer" /> has already been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="1bda9-240">Der <paramref name="dueTime" />-Parameter oder der <paramref name="period" />-Parameter ist negativ und ungleich <see cref="F:System.Threading.Timeout.Infinite" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bda9-240">The <paramref name="dueTime" /> or <paramref name="period" /> parameter is negative and is not equal to <see cref="F:System.Threading.Timeout.Infinite" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Change">
      <MemberSignature Language="C#" Value="public bool Change (long dueTime, long period);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Change(int64 dueTime, int64 period) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Timer.Change(System.Int64,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Function Change (dueTime As Long, period As Long) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Change(long dueTime, long period);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Timer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dueTime" Type="System.Int64" />
        <Parameter Name="period" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="dueTime">
          <span data-ttu-id="1bda9-241">Die in Millisekunden angegebene Zeitspanne, die gewartet werden soll, bis die beim Erstellen von <see cref="T:System.Threading.Timer" /> angegebene Rückrufmethode aufgerufen wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bda9-241">The amount of time to delay before the invoking the callback method specified when the <see cref="T:System.Threading.Timer" /> was constructed, in milliseconds.</span>
          </span>
          <span data-ttu-id="1bda9-242">Geben Sie <see cref="F:System.Threading.Timeout.Infinite" /> an, um den Neustart des Zeitgebers zu verhindern.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bda9-242">Specify <see cref="F:System.Threading.Timeout.Infinite" /> to prevent the timer from restarting.</span>
          </span>
          <span data-ttu-id="1bda9-243">Geben Sie 0 (null) an, um den Timer sofort neu zu starten.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bda9-243">Specify zero (0) to restart the timer immediately.</span>
          </span>
        </param>
        <param name="period">
          <span data-ttu-id="1bda9-244">Das Zeitintervall zwischen den Aufrufen der beim Erstellen von <see cref="T:System.Threading.Timer" /> angegebenen Rückrufmethode in Millisekunden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bda9-244">The time interval between invocations of the callback method specified when the <see cref="T:System.Threading.Timer" /> was constructed, in milliseconds.</span>
          </span>
          <span data-ttu-id="1bda9-245">Geben Sie <see cref="F:System.Threading.Timeout.Infinite" /> an, um periodisches Signalisieren zu deaktivieren.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bda9-245">Specify <see cref="F:System.Threading.Timeout.Infinite" /> to disable periodic signaling.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1bda9-246">Ändert die Startzeit und das Intervall zwischen Methodenaufrufen für einen Timer unter Verwendung von 64-Bit-Ganzzahlen mit Vorzeichen zum Messen von Zeitintervallen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bda9-246">Changes the start time and the interval between method invocations for a timer, using 64-bit signed integers to measure time intervals.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1bda9-247">
            <see langword="true" />, wenn der Timer erfolgreich aktualisiert wurde, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bda9-247">
              <see langword="true" /> if the timer was successfully updated; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1bda9-248">Die Rückrufmethode wird aufgerufen, einmal nach `dueTime` verstrichen ist und danach jeweils den Zeitpunkt des vom angegebenen Zeitintervalls `period` abläuft.</span><span class="sxs-lookup"><span data-stu-id="1bda9-248">The callback method is invoked once after `dueTime` elapses, and thereafter each time the time interval specified by `period` elapses.</span></span>  
  
 <span data-ttu-id="1bda9-249">Wenn `dueTime` ist 0 (null), wird die Rückrufmethode sofort aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="1bda9-249">If `dueTime` is zero (0), the callback method is invoked immediately.</span></span> <span data-ttu-id="1bda9-250">Wenn `dueTime` ist <xref:System.Threading.Timeout.Infinite?displayProperty=nameWithType>, die Rückrufmethode wird nie aufgerufen; der Timer deaktiviert ist, aber können erneut aktiviert werden, durch den Aufruf <xref:System.Threading.Timer.Change%2A> und geben einen positiven Wert für `dueTime`.</span><span class="sxs-lookup"><span data-stu-id="1bda9-250">If `dueTime` is <xref:System.Threading.Timeout.Infinite?displayProperty=nameWithType>, the callback method is never invoked; the timer is disabled, but can be re-enabled by calling <xref:System.Threading.Timer.Change%2A> and specifying a positive value for `dueTime`.</span></span>  
  
 <span data-ttu-id="1bda9-251">Wenn `period` ist 0 (null) oder <xref:System.Threading.Timeout.Infinite?displayProperty=nameWithType>, und `dueTime` nicht <xref:System.Threading.Timeout.Infinite?displayProperty=nameWithType>, die Rückrufmethode wird einmal aufgerufen; das periodische Verhalten des Zeitgebers ist deaktiviert, aber können erneut aktiviert werden, durch den Aufruf <xref:System.Threading.Timer.Change%2A> und geben einen positiven Wert für `period`.</span><span class="sxs-lookup"><span data-stu-id="1bda9-251">If `period` is zero (0) or <xref:System.Threading.Timeout.Infinite?displayProperty=nameWithType>, and `dueTime` is not <xref:System.Threading.Timeout.Infinite?displayProperty=nameWithType>, the callback method is invoked once; the periodic behavior of the timer is disabled, but can be re-enabled by calling <xref:System.Threading.Timer.Change%2A> and specifying a positive value for `period`.</span></span>  
  
 <span data-ttu-id="1bda9-252">Die <xref:System.Threading.Timer.Change%2A> Methode kann aufgerufen werden, aus der <xref:System.Threading.TimerCallback> delegieren.</span><span class="sxs-lookup"><span data-stu-id="1bda9-252">The <xref:System.Threading.Timer.Change%2A> method can be called from the <xref:System.Threading.TimerCallback> delegate.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="1bda9-253">Der <see cref="T:System.Threading.Timer" /> wurde bereits freigegeben.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bda9-253">The <see cref="T:System.Threading.Timer" /> has already been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="1bda9-254">Der <paramref name="dueTime" />-Parameter oder der <paramref name="period" />-Parameter ist kleiner als -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bda9-254">The <paramref name="dueTime" /> or <paramref name="period" /> parameter is less than -1.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="1bda9-255">Der <paramref name="dueTime" />-Parameter oder der <paramref name="period" />-Parameter ist größer als 4.294.967.294.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bda9-255">The <paramref name="dueTime" /> or <paramref name="period" /> parameter is greater than 4294967294.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Change">
      <MemberSignature Language="C#" Value="public bool Change (TimeSpan dueTime, TimeSpan period);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Change(valuetype System.TimeSpan dueTime, valuetype System.TimeSpan period) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Timer.Change(System.TimeSpan,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Function Change (dueTime As TimeSpan, period As TimeSpan) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Change(TimeSpan dueTime, TimeSpan period);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Timer</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dueTime" Type="System.TimeSpan" />
        <Parameter Name="period" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="dueTime">
          <span data-ttu-id="1bda9-256">Eine <see cref="T:System.TimeSpan" /> zum Darstellen der Zeitspanne, die gewartet werden soll, bis die beim Erstellen von <see cref="T:System.Threading.Timer" /> angegebene Rückrufmethode aufgerufen wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bda9-256">A <see cref="T:System.TimeSpan" /> representing the amount of time to delay before invoking the callback method specified when the <see cref="T:System.Threading.Timer" /> was constructed.</span>
          </span>
          <span data-ttu-id="1bda9-257">Geben Sie „-1“ Millisekunde an, um das erneute Starten des Timers zu verhindern.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bda9-257">Specify negative one (-1) milliseconds to prevent the timer from restarting.</span>
          </span>
          <span data-ttu-id="1bda9-258">Geben Sie 0 (null) an, um den Timer sofort neu zu starten.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bda9-258">Specify zero (0) to restart the timer immediately.</span>
          </span>
        </param>
        <param name="period">
          <span data-ttu-id="1bda9-259">Das Zeitintervall zwischen den Aufrufen der beim Erstellen von <see cref="T:System.Threading.Timer" /> angegebenen Rückrufmethode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bda9-259">The time interval between invocations of the callback method specified when the <see cref="T:System.Threading.Timer" /> was constructed.</span>
          </span>
          <span data-ttu-id="1bda9-260">Geben Sie -1 Millisekunde an, um periodisches Signalisieren zu deaktivieren.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bda9-260">Specify negative one (-1) milliseconds to disable periodic signaling.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1bda9-261">Ändert die Startzeit und das Intervall zwischen Methodenaufrufen für einen Zeitgeber unter Verwendung von <see cref="T:System.TimeSpan" />-Werten zum Messen von Zeitintervallen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bda9-261">Changes the start time and the interval between method invocations for a timer, using <see cref="T:System.TimeSpan" /> values to measure time intervals.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1bda9-262">
            <see langword="true" />, wenn der Timer erfolgreich aktualisiert wurde, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bda9-262">
              <see langword="true" /> if the timer was successfully updated; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1bda9-263">Die Rückrufmethode wird aufgerufen, einmal nach `dueTime` verstrichen ist und danach jeweils den Zeitpunkt des vom angegebenen Zeitintervalls `period` abläuft.</span><span class="sxs-lookup"><span data-stu-id="1bda9-263">The callback method is invoked once after `dueTime` elapses, and thereafter each time the time interval specified by `period` elapses.</span></span>  
  
 <span data-ttu-id="1bda9-264">Wenn `dueTime` ist 0 (null), wird die Rückrufmethode sofort aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="1bda9-264">If `dueTime` is zero (0), the callback method is invoked immediately.</span></span> <span data-ttu-id="1bda9-265">Wenn `dueTime` ist (-1) Millisekunden, die Rückrufmethode wird nie aufgerufen; der Timer deaktiviert ist, aber können erneut aktiviert werden, durch den Aufruf <xref:System.Threading.Timer.Change%2A> und geben einen positiven Wert für `dueTime`.</span><span class="sxs-lookup"><span data-stu-id="1bda9-265">If `dueTime` is negative one (-1) milliseconds, the callback method is never invoked; the timer is disabled, but can be re-enabled by calling <xref:System.Threading.Timer.Change%2A> and specifying a positive value for `dueTime`.</span></span>  
  
 <span data-ttu-id="1bda9-266">Wenn `period` ist 0 (null) oder negative Eins (1) Millisekunden und `dueTime` positiv ist, wird die Rückrufmethode wird einmal aufgerufen, das periodische Verhalten des Zeitgebers ist deaktiviert, jedoch kann erneut aktiviert werden, durch den Aufruf <xref:System.Threading.Timer.Change%2A> und Angabe eines Werts, der größer als 0 (null) für `period`.</span><span class="sxs-lookup"><span data-stu-id="1bda9-266">If `period` is zero (0) or negative one (-1) milliseconds, and `dueTime` is positive, the callback method is invoked once; the periodic behavior of the timer is disabled, but can be re-enabled by calling <xref:System.Threading.Timer.Change%2A> and specifying a value greater than zero for `period`.</span></span>  
  
 <span data-ttu-id="1bda9-267">Die <xref:System.Threading.Timer.Change%2A> Methode kann aufgerufen werden, aus der <xref:System.Threading.TimerCallback> delegieren.</span><span class="sxs-lookup"><span data-stu-id="1bda9-267">The <xref:System.Threading.Timer.Change%2A> method can be called from the <xref:System.Threading.TimerCallback> delegate.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1bda9-268">Im folgenden Codebeispiel wird veranschaulicht, wie zum Starten einer `Timer` und nach einer festgelegten Anzahl von aufrufen, ändern Sie den Zeitraum.</span><span class="sxs-lookup"><span data-stu-id="1bda9-268">The following code example demonstrates how to start a `Timer` and, after a set number of invocations, change its period.</span></span>  
  
 [!code-cpp[System.Threading.Timer2#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.Timer2/CPP/source2.cpp#1)]
 [!code-csharp[System.Threading.Timer2#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.Timer2/CS/source2.cs#1)]
 [!code-vb[System.Threading.Timer2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.Timer2/VB/source2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="1bda9-269">Der <see cref="T:System.Threading.Timer" /> wurde bereits freigegeben.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bda9-269">The <see cref="T:System.Threading.Timer" /> has already been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="1bda9-270">Der <paramref name="dueTime" />-Parameter oder der <paramref name="period" />-Parameter, angegeben in Millisekunden, ist kleiner als -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bda9-270">The <paramref name="dueTime" /> or <paramref name="period" /> parameter, in milliseconds, is less than -1.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="1bda9-271">Der <paramref name="dueTime" />-Parameter oder der <paramref name="period" />-Parameter, angegeben in Millisekunden, ist größer als 4294967294.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bda9-271">The <paramref name="dueTime" /> or <paramref name="period" /> parameter, in milliseconds, is greater than 4294967294.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Change">
      <MemberSignature Language="C#" Value="public bool Change (uint dueTime, uint period);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Change(unsigned int32 dueTime, unsigned int32 period) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Timer.Change(System.UInt32,System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Change (dueTime As UInteger, period As UInteger) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Change(System::UInt32 dueTime, System::UInt32 period);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Timer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dueTime" Type="System.UInt32" />
        <Parameter Name="period" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="dueTime">
          <span data-ttu-id="1bda9-272">Die in Millisekunden angegebene Zeitspanne, die gewartet werden soll, bis die beim Erstellen von <see cref="T:System.Threading.Timer" /> angegebene Rückrufmethode aufgerufen wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bda9-272">The amount of time to delay before the invoking the callback method specified when the <see cref="T:System.Threading.Timer" /> was constructed, in milliseconds.</span>
          </span>
          <span data-ttu-id="1bda9-273">Geben Sie <see cref="F:System.Threading.Timeout.Infinite" /> an, um den Neustart des Zeitgebers zu verhindern.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bda9-273">Specify <see cref="F:System.Threading.Timeout.Infinite" /> to prevent the timer from restarting.</span>
          </span>
          <span data-ttu-id="1bda9-274">Geben Sie 0 (null) an, um den Timer sofort neu zu starten.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bda9-274">Specify zero (0) to restart the timer immediately.</span>
          </span>
        </param>
        <param name="period">
          <span data-ttu-id="1bda9-275">Das Zeitintervall zwischen den Aufrufen der beim Erstellen von <see cref="T:System.Threading.Timer" /> angegebenen Rückrufmethode in Millisekunden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bda9-275">The time interval between invocations of the callback method specified when the <see cref="T:System.Threading.Timer" /> was constructed, in milliseconds.</span>
          </span>
          <span data-ttu-id="1bda9-276">Geben Sie <see cref="F:System.Threading.Timeout.Infinite" /> an, um periodisches Signalisieren zu deaktivieren.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bda9-276">Specify <see cref="F:System.Threading.Timeout.Infinite" /> to disable periodic signaling.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1bda9-277">Ändert die Startzeit und das Intervall zwischen Methodenaufrufen für einen Timer unter Verwendung von 32-Bit-Ganzzahlen ohne Vorzeichen zum Messen von Zeitintervallen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bda9-277">Changes the start time and the interval between method invocations for a timer, using 32-bit unsigned integers to measure time intervals.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1bda9-278">
            <see langword="true" />, wenn der Timer erfolgreich aktualisiert wurde, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bda9-278">
              <see langword="true" /> if the timer was successfully updated; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1bda9-279">Die Rückrufmethode wird aufgerufen, einmal nach `dueTime` verstrichen ist und danach jeweils den Zeitpunkt des vom angegebenen Zeitintervalls `period` abläuft.</span><span class="sxs-lookup"><span data-stu-id="1bda9-279">The callback method is invoked once after `dueTime` elapses, and thereafter each time the time interval specified by `period` elapses.</span></span>  
  
 <span data-ttu-id="1bda9-280">Wenn `dueTime` ist 0 (null), wird die Rückrufmethode sofort aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="1bda9-280">If `dueTime` is zero (0), the callback method is invoked immediately.</span></span> <span data-ttu-id="1bda9-281">Wenn `dueTime` ist <xref:System.Threading.Timeout.Infinite?displayProperty=nameWithType>, die Rückrufmethode wird nie aufgerufen; der Timer deaktiviert ist, aber können erneut aktiviert werden, durch den Aufruf <xref:System.Threading.Timer.Change%2A> und geben einen positiven Wert für `dueTime`.</span><span class="sxs-lookup"><span data-stu-id="1bda9-281">If `dueTime` is <xref:System.Threading.Timeout.Infinite?displayProperty=nameWithType>, the callback method is never invoked; the timer is disabled, but can be re-enabled by calling <xref:System.Threading.Timer.Change%2A> and specifying a positive value for `dueTime`.</span></span>  
  
 <span data-ttu-id="1bda9-282">Wenn `period` ist 0 (null) oder <xref:System.Threading.Timeout.Infinite?displayProperty=nameWithType>, und `dueTime` nicht <xref:System.Threading.Timeout.Infinite?displayProperty=nameWithType>, die Rückrufmethode wird einmal aufgerufen; das periodische Verhalten des Zeitgebers ist deaktiviert, aber können erneut aktiviert werden, durch den Aufruf <xref:System.Threading.Timer.Change%2A> und geben einen positiven Wert für `period`.</span><span class="sxs-lookup"><span data-stu-id="1bda9-282">If `period` is zero (0) or <xref:System.Threading.Timeout.Infinite?displayProperty=nameWithType>, and `dueTime` is not <xref:System.Threading.Timeout.Infinite?displayProperty=nameWithType>, the callback method is invoked once; the periodic behavior of the timer is disabled, but can be re-enabled by calling <xref:System.Threading.Timer.Change%2A> and specifying a positive value for `period`.</span></span>  
  
 <span data-ttu-id="1bda9-283">Die <xref:System.Threading.Timer.Change%2A> Methode kann aufgerufen werden, aus der <xref:System.Threading.TimerCallback> delegieren.</span><span class="sxs-lookup"><span data-stu-id="1bda9-283">The <xref:System.Threading.Timer.Change%2A> method can be called from the <xref:System.Threading.TimerCallback> delegate.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="1bda9-284">Der <see cref="T:System.Threading.Timer" /> wurde bereits freigegeben.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bda9-284">The <see cref="T:System.Threading.Timer" /> has already been disposed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.Threading.Timer</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="1bda9-285">Gibt alle von der aktuellen Instanz von <see cref="T:System.Threading.Timer" /> verwendeten Ressourcen frei.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bda9-285">Releases all resources used by the current instance of <see cref="T:System.Threading.Timer" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Timer.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Timer</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="1bda9-286">Gibt alle von der aktuellen Instanz von <see cref="T:System.Threading.Timer" /> verwendeten Ressourcen frei.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bda9-286">Releases all resources used by the current instance of <see cref="T:System.Threading.Timer" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1bda9-287">Aufrufen von `Dispose` können Ressourcen von der <xref:System.Threading.Timer> neu für andere Zwecke reserviert werden.</span><span class="sxs-lookup"><span data-stu-id="1bda9-287">Calling `Dispose` allows the resources used by the <xref:System.Threading.Timer> to be reallocated for other purposes.</span></span> <span data-ttu-id="1bda9-288">Weitere Informationen zu `Dispose`, finden Sie unter [Bereinigen von nicht verwalteten Ressourcen](~/docs/standard/garbage-collection/unmanaged.md).</span><span class="sxs-lookup"><span data-stu-id="1bda9-288">For more information about `Dispose`, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1bda9-289">Rückrufe können nach dem Auftreten der <xref:System.Threading.Timer.Dispose> methodenüberladung aufgerufen wurde, da der Zeitgeber Rückrufe für die Ausführung von Threads im Threadpool Warteschlangen.</span><span class="sxs-lookup"><span data-stu-id="1bda9-289">Callbacks can occur after the <xref:System.Threading.Timer.Dispose> method overload has been called, because the timer queues callbacks for execution by thread pool threads.</span></span> <span data-ttu-id="1bda9-290">Sie können die <xref:System.Threading.Timer.Dispose%28System.Threading.WaitHandle%29> methodenüberladung warten, bis alle Rückrufe abgeschlossen haben.</span><span class="sxs-lookup"><span data-stu-id="1bda9-290">You can use the <xref:System.Threading.Timer.Dispose%28System.Threading.WaitHandle%29> method overload to wait until all callbacks have completed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1bda9-291">Im folgenden Codebeispiel wird veranschaulicht, wie die reservierten Ressourcen freizugeben eine `Timer`.</span><span class="sxs-lookup"><span data-stu-id="1bda9-291">The following code example shows how to free the resources held by a `Timer`.</span></span>  
  
 [!code-cpp[System.Threading.Timer#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.Timer/CPP/source.cpp#1)]
 [!code-csharp[System.Threading.Timer#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.Timer/CS/source.cs#1)]
 [!code-vb[System.Threading.Timer#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.Timer/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public bool Dispose (System.Threading.WaitHandle notifyObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Dispose(class System.Threading.WaitHandle notifyObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Timer.Dispose(System.Threading.WaitHandle)" />
      <MemberSignature Language="VB.NET" Value="Public Function Dispose (notifyObject As WaitHandle) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Dispose(System::Threading::WaitHandle ^ notifyObject);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Timer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="notifyObject" Type="System.Threading.WaitHandle" />
      </Parameters>
      <Docs>
        <param name="notifyObject">
          <span data-ttu-id="1bda9-292">Das zu signalisierende <see cref="T:System.Threading.WaitHandle" />, wenn der <see langword="Timer" /> freigegeben wurde.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bda9-292">The <see cref="T:System.Threading.WaitHandle" /> to be signaled when the <see langword="Timer" /> has been disposed of.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1bda9-293">Gibt alle von der aktuellen Instanz von <see cref="T:System.Threading.Timer" /> verwendeten Ressourcen frei, und signalisiert das Freigeben des Zeitgebers.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bda9-293">Releases all resources used by the current instance of <see cref="T:System.Threading.Timer" /> and signals when the timer has been disposed of.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1bda9-294">
            <see langword="true" />, wenn die Funktion erfolgreich ausgeführt wird, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bda9-294">
              <see langword="true" /> if the function succeeds; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1bda9-295">Aufrufen von `Dispose` können Ressourcen von der <xref:System.Threading.Timer> neu für andere Zwecke reserviert werden.</span><span class="sxs-lookup"><span data-stu-id="1bda9-295">Calling `Dispose` allows the resources used by the <xref:System.Threading.Timer> to be reallocated for other purposes.</span></span> <span data-ttu-id="1bda9-296">Weitere Informationen zu `Dispose`, finden Sie unter [Bereinigen von nicht verwalteten Ressourcen](~/docs/standard/garbage-collection/unmanaged.md).</span><span class="sxs-lookup"><span data-stu-id="1bda9-296">For more information about `Dispose`, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md).</span></span>  
  
 <span data-ttu-id="1bda9-297">Wenn diese Methode abgeschlossen ist, er kennzeichnet die <xref:System.Threading.WaitHandle> gemäß der `notifyObject` Parameter. Verwenden Sie diese Überladung von der <xref:System.Threading.Timer.Dispose%2A> Methode, wenn Sie möchten in der Lage zu blockieren, bis Sie sicher sind, dass der Zeitgeber verworfen wurde.</span><span class="sxs-lookup"><span data-stu-id="1bda9-297">When this method completes, it signals the <xref:System.Threading.WaitHandle> specified by the `notifyObject` parameter.Use this overload of the <xref:System.Threading.Timer.Dispose%2A> method if you want to be able to block until you are certain that the timer has been disposed.</span></span> <span data-ttu-id="1bda9-298">Der Zeitgeber wird nicht freigegeben, bis alle derzeit in der Warteschlange Rückrufe abgeschlossen haben.</span><span class="sxs-lookup"><span data-stu-id="1bda9-298">The timer is not disposed until all currently queued callbacks have completed.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1bda9-299">Wenn der Rückruf verwendet die <xref:System.Threading.Timer.Change%2A> -Methode zum Festlegen der `dueTime` Parameter auf 0 (null), die eine Racebedingung auftreten kann beim der <xref:System.Threading.Timer.Dispose%28System.Threading.WaitHandle%29> -methodenüberladung aufgerufen wird:, wenn der Zeitgeber einen neuen Rückruf vor Warteschlangen die <xref:System.Threading.Timer.Dispose%28System.Threading.WaitHandle%29> methodenüberladung erkennt, die es keine Rückrufe in der Warteschlange, <xref:System.Threading.Timer.Dispose%28System.Threading.WaitHandle%29> weiterhin blockieren; andernfalls wird der Zeitgeber freigegeben, während der neue Rückruf in die Warteschlange gestellt wird, und eine <xref:System.ObjectDisposedException> wird ausgelöst, wenn der neue Rückruf aufgerufen die <xref:System.Threading.Timer.Change%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="1bda9-299">If the callback uses the <xref:System.Threading.Timer.Change%2A> method to set the `dueTime` parameter to zero, a race condition can occur when the <xref:System.Threading.Timer.Dispose%28System.Threading.WaitHandle%29> method overload is called: If the timer queues a new callback before the <xref:System.Threading.Timer.Dispose%28System.Threading.WaitHandle%29> method overload detects that there are no callbacks queued, <xref:System.Threading.Timer.Dispose%28System.Threading.WaitHandle%29> continues to block; otherwise, the timer is disposed while the new callback is being queued, and an <xref:System.ObjectDisposedException> is thrown when the new callback calls the <xref:System.Threading.Timer.Change%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1bda9-300">Der <paramref name="notifyObject" />-Parameter ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bda9-300">The <paramref name="notifyObject" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>