<Type Name="EventWaitHandleAcl" FullName="System.Threading.EventWaitHandleAcl">
  <Metadata><Meta Name="ms.openlocfilehash" Value="271f719f5059512f4cd1b542f1d4c9840f57c76a" /><Meta Name="ms.sourcegitcommit" Value="9506e50ec7beb4fa30206b9840dc546b035a6600" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="07/23/2020" /><Meta Name="ms.locfileid" Value="86986010" /></Metadata><TypeSignature Language="C#" Value="public static class EventWaitHandleAcl" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit EventWaitHandleAcl extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Threading.EventWaitHandleAcl" />
  <TypeSignature Language="VB.NET" Value="Public Class EventWaitHandleAcl" />
  <TypeSignature Language="C++ CLI" Value="public ref class EventWaitHandleAcl abstract sealed" />
  <TypeSignature Language="F#" Value="type EventWaitHandleAcl = class" />
  <AssemblyInfo>
    <AssemblyName>System.Threading.AccessControl</AssemblyName>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="0eb7c-101">Bietet eine Windows-spezifische Erweiterungsmethode zum Erstellen von <see cref="T:System.Threading.EventWaitHandle" />-Objekten mit spezifischer ACL-Sicherheit (Access Control List, Zugriffssteuerungsliste).</span><span class="sxs-lookup"><span data-stu-id="0eb7c-101">Provides a Windows-specific extension method for creating <see cref="T:System.Threading.EventWaitHandle" /> objects with specific access control list (ACL) security.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Threading.EventWaitHandle? Create (bool initialState, System.Threading.EventResetMode mode, string name, out bool createdNew, System.Security.AccessControl.EventWaitHandleSecurity eventSecurity);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.EventWaitHandle Create(bool initialState, valuetype System.Threading.EventResetMode mode, string name, [out] bool&amp; createdNew, class System.Security.AccessControl.EventWaitHandleSecurity eventSecurity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.EventWaitHandleAcl.Create(System.Boolean,System.Threading.EventResetMode,System.String,System.Boolean@,System.Security.AccessControl.EventWaitHandleSecurity)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (initialState As Boolean, mode As EventResetMode, name As String, ByRef createdNew As Boolean, eventSecurity As EventWaitHandleSecurity) As EventWaitHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Threading::EventWaitHandle ^ Create(bool initialState, System::Threading::EventResetMode mode, System::String ^ name, [Runtime::InteropServices::Out] bool % createdNew, System::Security::AccessControl::EventWaitHandleSecurity ^ eventSecurity);" />
      <MemberSignature Language="F#" Value="static member Create : bool * System.Threading.EventResetMode * string * bool * System.Security.AccessControl.EventWaitHandleSecurity -&gt; System.Threading.EventWaitHandle" Usage="System.Threading.EventWaitHandleAcl.Create (initialState, mode, name, createdNew, eventSecurity)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.AccessControl</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.EventWaitHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="initialState" Type="System.Boolean" />
        <Parameter Name="mode" Type="System.Threading.EventResetMode" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="createdNew" Type="System.Boolean" RefType="out" />
        <Parameter Name="eventSecurity" Type="System.Security.AccessControl.EventWaitHandleSecurity" />
      </Parameters>
      <Docs>
        <param name="initialState"><span data-ttu-id="0eb7c-102"><see langword="true" /> zum Festlegen des anfänglichen Zustands auf „signalisiert“, wenn das benannte Ereignis als Ergebnis dieses Aufrufs erstellt wird; <see langword="false" /> zum Festlegen auf „nicht signalisiert“.</span><span class="sxs-lookup"><span data-stu-id="0eb7c-102"><see langword="true" /> to set the initial state to signaled if the named event is created as a result of this call; <see langword="false" /> to set it to non-signaled.</span></span></param>
        <param name="mode"><span data-ttu-id="0eb7c-103">Dies ist einer der Enummerationswerte, der bestimmt, ob das Ereignis automatisch oder manuell zurückgesetzt wird.</span><span class="sxs-lookup"><span data-stu-id="0eb7c-103">One of the enum values that determines whether the event resets automatically or manually.</span></span></param>
        <param name="name"><span data-ttu-id="0eb7c-104">Dies ist der Name, wenn das Ereignis für andere Prozesse freigegeben werden soll; andernfalls <see langword="null" /> oder eine leere Zeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="0eb7c-104">The name, if the event is to be shared with other processes; otherwise, <see langword="null" /> or an empty string.</span></span></param>
        <param name="createdNew"><span data-ttu-id="0eb7c-105">Wenn diese Methode zurückgegeben wird, wird dieses Argument immer auf <see langword="true" /> festgelegt, wenn ein lokales Ereignis erstellt wird (d. h. wenn <paramref name="name" /> entweder <see langword="null" /> oder dem Feld <see cref="F:System.String.Empty" /> entspricht).</span><span class="sxs-lookup"><span data-stu-id="0eb7c-105">When this method returns, this argument is always set to <see langword="true" /> if a local event is created; that is, when <paramref name="name" /> is <see langword="null" /> or <see cref="F:System.String.Empty" />.</span></span> <span data-ttu-id="0eb7c-106">Wenn <paramref name="name" /> über einen gültigen und nicht leeren Wert verfügt, wird dieses Argument auf <see langword="true" /> festgelegt, wenn das Systemereignis erstellt wird, oder es wird auf <see langword="false" /> festgelegt, wenn ein vorhandenes Systemereignis mit diesem Namen gefunden wird.</span><span class="sxs-lookup"><span data-stu-id="0eb7c-106">If <paramref name="name" /> has a valid, non-empty value, this argument is set to <see langword="true" /> when the system event is created, or it is set to <see langword="false" /> if an existing system event is found with that name.</span></span></param>
        <param name="eventSecurity"><span data-ttu-id="0eb7c-107">Dies ist die optional anzuwendende Windows-Zugriffssteuerungssicherheit.</span><span class="sxs-lookup"><span data-stu-id="0eb7c-107">The optional Windows access control security to apply.</span></span></param>
        <summary><span data-ttu-id="0eb7c-108">Hiermit wird eine <see cref="T:System.Threading.EventWaitHandle" />-Instanz abgerufen oder erstellt, sodass optional eine <see cref="T:System.Security.AccessControl.EventWaitHandleSecurity" />-Instanz angegeben werden kann, um eine Festlegung bei der Ereigniserstellung zu ermöglichen.</span><span class="sxs-lookup"><span data-stu-id="0eb7c-108">Gets or creates an <see cref="T:System.Threading.EventWaitHandle" /> instance, allowing a <see cref="T:System.Security.AccessControl.EventWaitHandleSecurity" /> instance to be optionally specified to set it during the event creation.</span></span></summary>
        <returns><span data-ttu-id="0eb7c-109">Dies ist ein Objekt, das wie angefordert ein Ereignis-Wait-Handle darstellt.</span><span class="sxs-lookup"><span data-stu-id="0eb7c-109">An object that represents an event wait handle as requested.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="0eb7c-110">Wenn eine erfolgreich `name` ist und das System Ereignis bereits vorhanden ist, wird das vorhandene Ereignis zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="0eb7c-110">If a `name` is passed and the system event already exists, the existing event is returned.</span></span> <span data-ttu-id="0eb7c-111">Wenn `name` `null` den Wert oder <xref:System.String.Empty> hat, wird ein neues Prozess lokales Ereignis erstellt.</span><span class="sxs-lookup"><span data-stu-id="0eb7c-111">If `name` is `null` or <xref:System.String.Empty>, a new process-local event is created.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="0eb7c-112">Nur .NET Framework: Die Länge <paramref name="name" /> überschreitet MAX_PATH (260 Zeichen).</span><span class="sxs-lookup"><span data-stu-id="0eb7c-112">.NET Framework only: The <paramref name="name" /> length is beyond MAX_PATH (260 characters).</span></span>

<span data-ttu-id="0eb7c-113">- oder -</span><span class="sxs-lookup"><span data-stu-id="0eb7c-113">-or-</span></span>

<span data-ttu-id="0eb7c-114">Nur .NET Framework: Der Wert der Enumeration <paramref name="mode" /> lag außerhalb des zulässigen Bereichs.</span><span class="sxs-lookup"><span data-stu-id="0eb7c-114">.NET Framework only: The <paramref name="mode" /> enum value was out of legal range.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="0eb7c-115">Der Enumerationswert <paramref name="mode" /> lag außerhalb des zulässigen Bereichs.</span><span class="sxs-lookup"><span data-stu-id="0eb7c-115">The <paramref name="mode" /> enum value was out of legal range.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="0eb7c-116">Ein Teil des in <paramref name="name" /> angegebenen Pfads wurde nicht gefunden.</span><span class="sxs-lookup"><span data-stu-id="0eb7c-116">Could not find a part of the path specified in <paramref name="name" />.</span></span></exception>
        <exception cref="T:System.Threading.WaitHandleCannotBeOpenedException"><span data-ttu-id="0eb7c-117">Ein systemweites Synchronisierungsereignis mit der Angabe für <paramref name="name" /> wurde nicht gefunden.</span><span class="sxs-lookup"><span data-stu-id="0eb7c-117">A system-wide synchronization event with the provided <paramref name="name" /> was not found.</span></span>
<span data-ttu-id="0eb7c-118">Weitere Möglichkeit: Eine <see cref="T:System.Threading.EventWaitHandle" />-Klasse mit einem systemweiten Wert für <paramref name="name" /> kann nicht erstellt werden.</span><span class="sxs-lookup"><span data-stu-id="0eb7c-118">-or- An <see cref="T:System.Threading.EventWaitHandle" /> with system-wide name <paramref name="name" /> cannot be created.</span></span> <span data-ttu-id="0eb7c-119">Eine <see cref="T:System.Threading.EventWaitHandle" />-Klasse eines anderen Typs kann denselben Namen aufweisen.</span><span class="sxs-lookup"><span data-stu-id="0eb7c-119">An <see cref="T:System.Threading.EventWaitHandle" /> of a different type might have the same name.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>
