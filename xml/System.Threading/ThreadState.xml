<Type Name="ThreadState" FullName="System.Threading.ThreadState">
  <Metadata><Meta Name="ms.openlocfilehash" Value="091d316ec58a7025e2b2fb8f1c5aeae7df0683be" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70463016" /></Metadata><TypeSignature Language="C#" Value="public enum ThreadState" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed ThreadState extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.Threading.ThreadState" />
  <TypeSignature Language="VB.NET" Value="Public Enum ThreadState" />
  <TypeSignature Language="C++ CLI" Value="public enum class ThreadState" />
  <TypeSignature Language="F#" Value="type ThreadState = " />
  <AssemblyInfo>
    <AssemblyName>System.Threading.Thread</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1">
      <AttributeName>System.Flags</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="6b139-101">Gibt die Ausführungszustände eines <see cref="T:System.Threading.Thread" /> an.</span><span class="sxs-lookup"><span data-stu-id="6b139-101">Specifies the execution states of a <see cref="T:System.Threading.Thread" />.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  <span data-ttu-id="6b139-102">Die `ThreadState` -Enumeration definiert einen Satz mit allen möglichen Ausführungs Zuständen für Threads.</span><span class="sxs-lookup"><span data-stu-id="6b139-102">The `ThreadState` enumeration defines a set of all possible execution states for threads.</span></span> <span data-ttu-id="6b139-103">Dies ist nur in einigen Debugszenarien von Interesse.</span><span class="sxs-lookup"><span data-stu-id="6b139-103">It's of interest only in a few debugging scenarios.</span></span> <span data-ttu-id="6b139-104">Der Code sollte nie den Thread Zustand verwenden, um die Aktivitäten von Threads zu synchronisieren.</span><span class="sxs-lookup"><span data-stu-id="6b139-104">Your code should never use the thread state to synchronize the activities of threads.</span></span>  
  
  <span data-ttu-id="6b139-105">Nachdem ein Thread erstellt wurde, befindet er sich in mindestens einem der Zustände, bis er beendet wird.</span><span class="sxs-lookup"><span data-stu-id="6b139-105">Once a thread is created, it's in at least one of the states until it terminates.</span></span> <span data-ttu-id="6b139-106">Threads, die in der Common Language Runtime erstellt werden, <xref:System.Threading.ThreadState.Unstarted> befinden sich anfänglich im Zustand, während externe oder nicht verwaltete Threads, die in die Laufzeit kommen <xref:System.Threading.ThreadState.Running> , sich bereits im Zustand befinden.</span><span class="sxs-lookup"><span data-stu-id="6b139-106">Threads created within the common language runtime are initially in the <xref:System.Threading.ThreadState.Unstarted> state, while external, or unmanaged, threads that come into the runtime are already in the <xref:System.Threading.ThreadState.Running> state.</span></span> <span data-ttu-id="6b139-107">Der Übergang eines Threads vom <xref:System.Threading.ThreadState.Unstarted> Zustand in den <xref:System.Threading.ThreadState.Running> Zustand erfolgt durch Aufrufen <xref:System.Threading.Thread.Start%2A?displayProperty=nameWithType>von.</span><span class="sxs-lookup"><span data-stu-id="6b139-107">A thread is transitioned from the <xref:System.Threading.ThreadState.Unstarted> state into the <xref:System.Threading.ThreadState.Running> state by calling <xref:System.Threading.Thread.Start%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="6b139-108">Sobald ein Thread den Zustand <xref:System.Threading.ThreadState.Unstarted> als Folge eines Aufrufs von <xref:System.Threading.Thread.Start%2A>verlässt, kann er nicht mehr in den Zustand <xref:System.Threading.ThreadState.Unstarted> zurückkehren.</span><span class="sxs-lookup"><span data-stu-id="6b139-108">Once a thread leaves the <xref:System.Threading.ThreadState.Unstarted> state as the result of a call to <xref:System.Threading.Thread.Start%2A>, it can never return to the <xref:System.Threading.ThreadState.Unstarted> state.</span></span>  

  <span data-ttu-id="6b139-109">Ein Thread kann zu einem bestimmten Zeitpunkt mehr als einen Status aufweisen.</span><span class="sxs-lookup"><span data-stu-id="6b139-109">A thread can be in more than one state at a given time.</span></span> <span data-ttu-id="6b139-110">Wenn ein Thread Beispiels <xref:System.Threading.Monitor.Wait%2A?displayProperty=nameWithType>Weise bei einem Aufruf von blockiert ist und ein anderer Thread für den blockierten Thread aufruft <xref:System.Threading.Thread.Abort%2A?displayProperty=nameWithType> , befindet sich der blockierte Thread gleichzeitig in den <xref:System.Threading.ThreadState.WaitSleepJoin> Zuständen <xref:System.Threading.ThreadState.AbortRequested> und.</span><span class="sxs-lookup"><span data-stu-id="6b139-110">For example, if a thread is blocked on a call to <xref:System.Threading.Monitor.Wait%2A?displayProperty=nameWithType>, and another thread calls <xref:System.Threading.Thread.Abort%2A?displayProperty=nameWithType> on the blocked thread, the blocked thread will be in both the <xref:System.Threading.ThreadState.WaitSleepJoin> and <xref:System.Threading.ThreadState.AbortRequested> states at the same time.</span></span> <span data-ttu-id="6b139-111">Wenn in diesem Fall der Thread vom-Rückruf <xref:System.Threading.Monitor.Wait%2A?displayProperty=nameWithType> zurückkehrt oder unterbrochen wird, empfängt er die <xref:System.Threading.ThreadAbortException> , um mit der Abbruch zu beginnen.</span><span class="sxs-lookup"><span data-stu-id="6b139-111">In this case, as soon as the thread returns from the call to <xref:System.Threading.Monitor.Wait%2A?displayProperty=nameWithType> or is interrupted, it will receive the <xref:System.Threading.ThreadAbortException> to begin aborting.</span></span> <span data-ttu-id="6b139-112">Nicht alle Kombinationen `ThreadState` von Werten sind gültig. ein Thread kann z. b. nicht in <xref:System.Threading.ThreadState.Aborted> den <xref:System.Threading.ThreadState.Unstarted> Zuständen und sein.</span><span class="sxs-lookup"><span data-stu-id="6b139-112">Not all combinations of `ThreadState` values are valid; for example, a thread cannot be in both the <xref:System.Threading.ThreadState.Aborted> and <xref:System.Threading.ThreadState.Unstarted> states.</span></span>  

  <span data-ttu-id="6b139-113">Ein Thread kann den Zustand <xref:System.Threading.ThreadState.Stopped> nie verlassen.</span><span class="sxs-lookup"><span data-stu-id="6b139-113">A thread can never leave the <xref:System.Threading.ThreadState.Stopped> state.</span></span>  
  
> [!IMPORTANT]
> <span data-ttu-id="6b139-114">Es gibt zwei Thread Zustands Enumerationen: <xref:System.Threading.ThreadState?displayProperty=nameWithType> und <xref:System.Diagnostics.ThreadState?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="6b139-114">There are two thread state enumerations: <xref:System.Threading.ThreadState?displayProperty=nameWithType> and <xref:System.Diagnostics.ThreadState?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="6b139-115">In der folgenden Tabelle werden die Aktionen angezeigt, die eine Zustandsänderung bewirken.</span><span class="sxs-lookup"><span data-stu-id="6b139-115">The following table shows the actions that cause a change of state.</span></span>  
  
|<span data-ttu-id="6b139-116">Aktion</span><span class="sxs-lookup"><span data-stu-id="6b139-116">Action</span></span>|<span data-ttu-id="6b139-117">ThreadState</span><span class="sxs-lookup"><span data-stu-id="6b139-117">ThreadState</span></span>|  
|------------|-----------------|  
|<span data-ttu-id="6b139-118">Innerhalb des Common Language Runtime wird ein Thread erstellt.</span><span class="sxs-lookup"><span data-stu-id="6b139-118">A thread is created within the common language runtime.</span></span>|<xref:System.Threading.ThreadState.Unstarted>|  
|<span data-ttu-id="6b139-119">Ein anderer Thread ruft <xref:System.Threading.Thread.Start%2A?displayProperty=nameWithType> die-Methode für den neuen Thread auf, und der Aufruf gibt zurück.</span><span class="sxs-lookup"><span data-stu-id="6b139-119">Another thread calls the <xref:System.Threading.Thread.Start%2A?displayProperty=nameWithType> method on the new thread, and the call returns.</span></span><br /><br /> <span data-ttu-id="6b139-120">Die <xref:System.Threading.Thread.Start%2A> Methode wird erst zurückgegeben, wenn die Ausführung des neuen Threads gestartet wurde.</span><span class="sxs-lookup"><span data-stu-id="6b139-120">The <xref:System.Threading.Thread.Start%2A> method does not return until the new thread has started running.</span></span> <span data-ttu-id="6b139-121">Während des Aufrufens <xref:System.Threading.Thread.Start%2A>von gibt es keine Möglichkeit, zu ermitteln, zu welchem Zeitpunkt der neue Thread gestartet wird.</span><span class="sxs-lookup"><span data-stu-id="6b139-121">There is no way to know at what point the new thread will start running, during the call to <xref:System.Threading.Thread.Start%2A>.</span></span>|<xref:System.Threading.ThreadState.Running>|  
|<span data-ttu-id="6b139-122">Der Thread ruft auf.<xref:System.Threading.Thread.Sleep%2A></span><span class="sxs-lookup"><span data-stu-id="6b139-122">The thread calls <xref:System.Threading.Thread.Sleep%2A></span></span>|<xref:System.Threading.ThreadState.WaitSleepJoin>|  
|<span data-ttu-id="6b139-123">Der Thread ruft <xref:System.Threading.Monitor.Wait%2A?displayProperty=nameWithType> auf einem anderen Objekt auf.</span><span class="sxs-lookup"><span data-stu-id="6b139-123">The thread calls <xref:System.Threading.Monitor.Wait%2A?displayProperty=nameWithType> on another object.</span></span>|<xref:System.Threading.ThreadState.WaitSleepJoin>|  
|<span data-ttu-id="6b139-124">Der Thread ruft <xref:System.Threading.Thread.Join%2A> auf einem anderen Thread auf.</span><span class="sxs-lookup"><span data-stu-id="6b139-124">The thread calls <xref:System.Threading.Thread.Join%2A> on another thread.</span></span>|<xref:System.Threading.ThreadState.WaitSleepJoin>|  
|<span data-ttu-id="6b139-125">Weitere Thread Aufrufe<xref:System.Threading.Thread.Interrupt%2A></span><span class="sxs-lookup"><span data-stu-id="6b139-125">Another thread calls <xref:System.Threading.Thread.Interrupt%2A></span></span>|<xref:System.Threading.ThreadState.Running>|  
|<span data-ttu-id="6b139-126">Weitere Thread Aufrufe<xref:System.Threading.Thread.Suspend%2A></span><span class="sxs-lookup"><span data-stu-id="6b139-126">Another thread calls <xref:System.Threading.Thread.Suspend%2A></span></span>|<xref:System.Threading.ThreadState.SuspendRequested>|  
|<span data-ttu-id="6b139-127">Der Thread reagiert auf eine <xref:System.Threading.Thread.Suspend%2A>-Anforderung.</span><span class="sxs-lookup"><span data-stu-id="6b139-127">The thread responds to a <xref:System.Threading.Thread.Suspend%2A> request.</span></span>|<xref:System.Threading.ThreadState.Suspended>|  
|<span data-ttu-id="6b139-128">Weitere Thread Aufrufe<xref:System.Threading.Thread.Resume%2A></span><span class="sxs-lookup"><span data-stu-id="6b139-128">Another thread calls <xref:System.Threading.Thread.Resume%2A></span></span>|<xref:System.Threading.ThreadState.Running>|  
|<span data-ttu-id="6b139-129">Weitere Thread Aufrufe<xref:System.Threading.Thread.Abort%2A></span><span class="sxs-lookup"><span data-stu-id="6b139-129">Another thread calls <xref:System.Threading.Thread.Abort%2A></span></span>|<xref:System.Threading.ThreadState.AbortRequested>|  
|<span data-ttu-id="6b139-130">Der Thread antwortet auf eine <xref:System.Threading.Thread.Abort%2A> -Anforderung.</span><span class="sxs-lookup"><span data-stu-id="6b139-130">The thread responds to an <xref:System.Threading.Thread.Abort%2A> request.</span></span>|<xref:System.Threading.ThreadState.Stopped>|  
|<span data-ttu-id="6b139-131">Ein Thread wird beendet.</span><span class="sxs-lookup"><span data-stu-id="6b139-131">A thread is terminated.</span></span>|<xref:System.Threading.ThreadState.Stopped>|  
  
 <span data-ttu-id="6b139-132">Zusätzlich zu den oben aufgeführten Zuständen gibt es auch den <xref:System.Threading.ThreadState.Background> Status, der angibt, ob der Thread im Hintergrund oder im Vordergrund ausgeführt wird.</span><span class="sxs-lookup"><span data-stu-id="6b139-132">In addition to the states noted above, there is also the <xref:System.Threading.ThreadState.Background> state, which indicates whether the thread is running in the background or foreground.</span></span> <span data-ttu-id="6b139-133">Weitere Informationen finden Sie im Artikel zu [Vordergrund- und Hintergrundthreads](~/docs/standard/threading/foreground-and-background-threads.md).</span><span class="sxs-lookup"><span data-stu-id="6b139-133">For more information, see [Foreground and Background Threads](~/docs/standard/threading/foreground-and-background-threads.md).</span></span>  
   
 <span data-ttu-id="6b139-134">Die <xref:System.Threading.Thread.ThreadState%2A?displayProperty=nameWithType> -Eigenschaft eines Threads stellt den aktuellen Zustand eines Threads bereit.</span><span class="sxs-lookup"><span data-stu-id="6b139-134">The <xref:System.Threading.Thread.ThreadState%2A?displayProperty=nameWithType> property of a thread provides the current state of a thread.</span></span> <span data-ttu-id="6b139-135">Anwendungen müssen eine Bitmaske verwenden, um zu bestimmen, ob ein Thread ausgeführt wird.</span><span class="sxs-lookup"><span data-stu-id="6b139-135">Applications must use a bit mask to determine whether a thread is running.</span></span> <span data-ttu-id="6b139-136">Da der Wert für <xref:System.Threading.ThreadState.Running> 0 (null) ist, testen Sie anhand des folgenden Codes, ob ein Thread ausgeführt wird:</span><span class="sxs-lookup"><span data-stu-id="6b139-136">Since the value for <xref:System.Threading.ThreadState.Running> is zero (0), test whether a thread is running by the following code:</span></span>

```csharp
(myThread.ThreadState & (ThreadState.Stopped | ThreadState.Unstarted)) == 0
```

```vb
(myThread.ThreadState And (ThreadState.Stopped Or ThreadState.Unstarted)) = 0
```
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Threading.Thread" />
  </Docs>
  <Members>
    <Member MemberName="Aborted">
      <MemberSignature Language="C#" Value="Aborted" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Threading.ThreadState Aborted = int32(256)" />
      <MemberSignature Language="DocId" Value="F:System.Threading.ThreadState.Aborted" />
      <MemberSignature Language="VB.NET" Value="Aborted" />
      <MemberSignature Language="C++ CLI" Value="Aborted" />
      <MemberSignature Language="F#" Value="Aborted = 256" Usage="System.Threading.ThreadState.Aborted" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Thread</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.ThreadState</ReturnType>
      </ReturnValue>
      <MemberValue>256</MemberValue>
      <Docs>
        <summary><span data-ttu-id="6b139-137">Der Threadzustand schließt <see cref="F:System.Threading.ThreadState.AbortRequested" /> ein, und der Thread ist jetzt deaktiviert. Der Zustand hat sich jedoch noch nicht in <see cref="F:System.Threading.ThreadState.Stopped" /> geändert.</span><span class="sxs-lookup"><span data-stu-id="6b139-137">The thread state includes <see cref="F:System.Threading.ThreadState.AbortRequested" /> and the thread is now dead, but its state has not yet changed to <see cref="F:System.Threading.ThreadState.Stopped" />.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="AbortRequested">
      <MemberSignature Language="C#" Value="AbortRequested" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Threading.ThreadState AbortRequested = int32(128)" />
      <MemberSignature Language="DocId" Value="F:System.Threading.ThreadState.AbortRequested" />
      <MemberSignature Language="VB.NET" Value="AbortRequested" />
      <MemberSignature Language="C++ CLI" Value="AbortRequested" />
      <MemberSignature Language="F#" Value="AbortRequested = 128" Usage="System.Threading.ThreadState.AbortRequested" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Thread</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.ThreadState</ReturnType>
      </ReturnValue>
      <MemberValue>128</MemberValue>
      <Docs>
        <summary><span data-ttu-id="6b139-138">Die <see cref="M:System.Threading.Thread.Abort(System.Object)" />-Methode wurde für den Thread aufgerufen, doch der Thread hat noch nicht die ausstehende <see cref="T:System.Threading.ThreadAbortException" /> empfangen, die ihn zu beenden versucht.</span><span class="sxs-lookup"><span data-stu-id="6b139-138">The <see cref="M:System.Threading.Thread.Abort(System.Object)" /> method has been invoked on the thread, but the thread has not yet received the pending <see cref="T:System.Threading.ThreadAbortException" /> that will attempt to terminate it.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="Background">
      <MemberSignature Language="C#" Value="Background" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Threading.ThreadState Background = int32(4)" />
      <MemberSignature Language="DocId" Value="F:System.Threading.ThreadState.Background" />
      <MemberSignature Language="VB.NET" Value="Background" />
      <MemberSignature Language="C++ CLI" Value="Background" />
      <MemberSignature Language="F#" Value="Background = 4" Usage="System.Threading.ThreadState.Background" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Thread</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.ThreadState</ReturnType>
      </ReturnValue>
      <MemberValue>4</MemberValue>
      <Docs>
        <summary><span data-ttu-id="6b139-139">Der Thread wird nicht als Vordergrundthread, sondern als Hintergrundthread ausgeführt.</span><span class="sxs-lookup"><span data-stu-id="6b139-139">The thread is being executed as a background thread, as opposed to a foreground thread.</span></span> <span data-ttu-id="6b139-140">Dieser Zustand wird durch Festlegen der <see cref="P:System.Threading.Thread.IsBackground" />-Eigenschaft gesteuert.</span><span class="sxs-lookup"><span data-stu-id="6b139-140">This state is controlled by setting the <see cref="P:System.Threading.Thread.IsBackground" /> property.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="Running">
      <MemberSignature Language="C#" Value="Running" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Threading.ThreadState Running = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.Threading.ThreadState.Running" />
      <MemberSignature Language="VB.NET" Value="Running" />
      <MemberSignature Language="C++ CLI" Value="Running" />
      <MemberSignature Language="F#" Value="Running = 0" Usage="System.Threading.ThreadState.Running" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Thread</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.ThreadState</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary><span data-ttu-id="6b139-141">Der Thread wurde gestartet und noch nicht beendet.</span><span class="sxs-lookup"><span data-stu-id="6b139-141">The thread has been started and not yet stopped.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="Stopped">
      <MemberSignature Language="C#" Value="Stopped" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Threading.ThreadState Stopped = int32(16)" />
      <MemberSignature Language="DocId" Value="F:System.Threading.ThreadState.Stopped" />
      <MemberSignature Language="VB.NET" Value="Stopped" />
      <MemberSignature Language="C++ CLI" Value="Stopped" />
      <MemberSignature Language="F#" Value="Stopped = 16" Usage="System.Threading.ThreadState.Stopped" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Thread</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.ThreadState</ReturnType>
      </ReturnValue>
      <MemberValue>16</MemberValue>
      <Docs>
        <summary><span data-ttu-id="6b139-142">Der Thread wurde beendet.</span><span class="sxs-lookup"><span data-stu-id="6b139-142">The thread has stopped.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="StopRequested">
      <MemberSignature Language="C#" Value="StopRequested" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Threading.ThreadState StopRequested = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.Threading.ThreadState.StopRequested" />
      <MemberSignature Language="VB.NET" Value="StopRequested" />
      <MemberSignature Language="C++ CLI" Value="StopRequested" />
      <MemberSignature Language="F#" Value="StopRequested = 1" Usage="System.Threading.ThreadState.StopRequested" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Thread</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.ThreadState</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary><span data-ttu-id="6b139-143">Es besteht eine Anforderung für die Beendigung des Threads.</span><span class="sxs-lookup"><span data-stu-id="6b139-143">The thread is being requested to stop.</span></span> <span data-ttu-id="6b139-144">Dies ist ausschließlich für die interne Verwendung vorgesehen.</span><span class="sxs-lookup"><span data-stu-id="6b139-144">This is for internal use only.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="Suspended">
      <MemberSignature Language="C#" Value="Suspended" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Threading.ThreadState Suspended = int32(64)" />
      <MemberSignature Language="DocId" Value="F:System.Threading.ThreadState.Suspended" />
      <MemberSignature Language="VB.NET" Value="Suspended" />
      <MemberSignature Language="C++ CLI" Value="Suspended" />
      <MemberSignature Language="F#" Value="Suspended = 64" Usage="System.Threading.ThreadState.Suspended" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Thread</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.ThreadState</ReturnType>
      </ReturnValue>
      <MemberValue>64</MemberValue>
      <Docs>
        <summary><span data-ttu-id="6b139-145">Der Thread wurde unterbrochen.</span><span class="sxs-lookup"><span data-stu-id="6b139-145">The thread has been suspended.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="SuspendRequested">
      <MemberSignature Language="C#" Value="SuspendRequested" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Threading.ThreadState SuspendRequested = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.Threading.ThreadState.SuspendRequested" />
      <MemberSignature Language="VB.NET" Value="SuspendRequested" />
      <MemberSignature Language="C++ CLI" Value="SuspendRequested" />
      <MemberSignature Language="F#" Value="SuspendRequested = 2" Usage="System.Threading.ThreadState.SuspendRequested" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Thread</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.ThreadState</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary><span data-ttu-id="6b139-146">Es besteht eine Anforderung für die Unterbrechung des Threads.</span><span class="sxs-lookup"><span data-stu-id="6b139-146">The thread is being requested to suspend.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="Unstarted">
      <MemberSignature Language="C#" Value="Unstarted" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Threading.ThreadState Unstarted = int32(8)" />
      <MemberSignature Language="DocId" Value="F:System.Threading.ThreadState.Unstarted" />
      <MemberSignature Language="VB.NET" Value="Unstarted" />
      <MemberSignature Language="C++ CLI" Value="Unstarted" />
      <MemberSignature Language="F#" Value="Unstarted = 8" Usage="System.Threading.ThreadState.Unstarted" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Thread</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.ThreadState</ReturnType>
      </ReturnValue>
      <MemberValue>8</MemberValue>
      <Docs>
        <summary><span data-ttu-id="6b139-147">Die <see cref="M:System.Threading.Thread.Start" />-Methode wurde für den Thread nicht aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="6b139-147">The <see cref="M:System.Threading.Thread.Start" /> method has not been invoked on the thread.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="WaitSleepJoin">
      <MemberSignature Language="C#" Value="WaitSleepJoin" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Threading.ThreadState WaitSleepJoin = int32(32)" />
      <MemberSignature Language="DocId" Value="F:System.Threading.ThreadState.WaitSleepJoin" />
      <MemberSignature Language="VB.NET" Value="WaitSleepJoin" />
      <MemberSignature Language="C++ CLI" Value="WaitSleepJoin" />
      <MemberSignature Language="F#" Value="WaitSleepJoin = 32" Usage="System.Threading.ThreadState.WaitSleepJoin" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Thread</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.ThreadState</ReturnType>
      </ReturnValue>
      <MemberValue>32</MemberValue>
      <Docs>
        <summary><span data-ttu-id="6b139-148">Der Thread ist blockiert.</span><span class="sxs-lookup"><span data-stu-id="6b139-148">The thread is blocked.</span></span> <span data-ttu-id="6b139-149">Die Ursache hierfür könnte sein, dass <see cref="M:System.Threading.Thread.Sleep(System.Int32)" /> oder <see cref="M:System.Threading.Thread.Join" /> aufgerufen wurde, dass eine Sperre angefordert wurde, z.B. durch Aufrufen von <see cref="M:System.Threading.Monitor.Enter(System.Object)" /> oder <see cref="M:System.Threading.Monitor.Wait(System.Object,System.Int32,System.Boolean)" />, oder dass auf ein Threadsynchronisierungsobjekt wie <see cref="T:System.Threading.ManualResetEvent" /> gewartet wird.</span><span class="sxs-lookup"><span data-stu-id="6b139-149">This could be the result of calling <see cref="M:System.Threading.Thread.Sleep(System.Int32)" /> or <see cref="M:System.Threading.Thread.Join" />, of requesting a lock - for example, by calling <see cref="M:System.Threading.Monitor.Enter(System.Object)" /> or <see cref="M:System.Threading.Monitor.Wait(System.Object,System.Int32,System.Boolean)" /> - or of waiting on a thread synchronization object such as <see cref="T:System.Threading.ManualResetEvent" />.</span></span></summary>
      </Docs>
    </Member>
  </Members>
</Type>
