<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="Barrier.xml" source-language="en-US" target-language="de-DE">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac548531a8658006e7834fae9bbf6c23d5474a09270.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">48531a8658006e7834fae9bbf6c23d5474a09270</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Threading.Barrier">
          <source>Enables multiple tasks to cooperatively work on an algorithm in parallel through multiple phases.</source>
          <target state="translated">Ermöglicht es mehreren Aufgaben, parallel über mehrere Phasen gemeinsam an einem Algorithmus zu arbeiten.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Threading.Barrier">
          <source>A group of tasks cooperate by moving through a series of phases, where each in the group signals it has arrived at the <ph id="ph1">&lt;xref:System.Threading.Barrier&gt;</ph> in a given phase and implicitly waits for all others to arrive.</source>
          <target state="translated">Eine Gruppe von Aufgaben kooperieren umgezogen durch eine Reihe von Phasen, wobei jede signalisiert, dass in der Gruppe "erreicht hat die <ph id="ph1">&lt;xref:System.Threading.Barrier&gt;</ph> in einer bestimmten Phase und implizit alle anderen wartet.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Threading.Barrier">
          <source>The same <ph id="ph1">&lt;xref:System.Threading.Barrier&gt;</ph> can be used for multiple phases.</source>
          <target state="translated">Die gleiche <ph id="ph1">&lt;xref:System.Threading.Barrier&gt;</ph> für mehrere Phasen verwendet werden kann.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Threading.Barrier">
          <source>The following example shows how to use a barrier:</source>
          <target state="translated">Im folgende Beispiel wird gezeigt, wie mit einer Barriere:</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Threading.Barrier">
          <source>All public and protected members of <ph id="ph1">&lt;see cref="T:System.Threading.Barrier" /&gt;</ph> are thread-safe and may be used concurrently from multiple threads, with the exception of Dispose, which must only be used when all other operations on the <ph id="ph2">&lt;see cref="T:System.Threading.Barrier" /&gt;</ph> have completed.</source>
          <target state="translated">Alle öffentlichen und geschützten Member der <ph id="ph1">&lt;see cref="T:System.Threading.Barrier" /&gt;</ph> sind threadsicher und können gleichzeitig von mehreren Threads, mit Ausnahme von Dispose, das nur zu Transportservers verwendet werden verwendet, wenn alle Vorgänge für die <ph id="ph2">&lt;see cref="T:System.Threading.Barrier" /&gt;</ph> abgeschlossen haben.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="T:System.Threading.Barrier">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Threading.Barrier" /&gt;</ph> class.</source>
          <target state="translated">Initialisiert eine neue Instanz der <ph id="ph1">&lt;see cref="T:System.Threading.Barrier" /&gt;</ph>-Klasse.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.Threading.Barrier.#ctor(System.Int32)">
          <source>The number of participating threads.</source>
          <target state="translated">Die Anzahl teilnehmender Threads.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.Threading.Barrier.#ctor(System.Int32)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Threading.Barrier" /&gt;</ph> class.</source>
          <target state="translated">Initialisiert eine neue Instanz der <ph id="ph1">&lt;see cref="T:System.Threading.Barrier" /&gt;</ph>-Klasse.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.Threading.Barrier.#ctor(System.Int32)">
          <source><ph id="ph1">&lt;paramref name="participantCount" /&gt;</ph> is less than 0 or greater than 32,767.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="participantCount" /&gt;</ph> ist kleiner als 0 oder größer als 32.767.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.Threading.Barrier.#ctor(System.Int32,System.Action{System.Threading.Barrier})">
          <source>The number of participating threads.</source>
          <target state="translated">Die Anzahl teilnehmender Threads.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.Threading.Barrier.#ctor(System.Int32,System.Action{System.Threading.Barrier})">
          <source>The <ph id="ph1">&lt;see cref="T:System.Action`1" /&gt;</ph> to be executed after each phase.</source>
          <target state="translated">Das nach jeder Phase auszuführende <ph id="ph1">&lt;see cref="T:System.Action`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Threading.Barrier.#ctor(System.Int32,System.Action{System.Threading.Barrier})">
          <source>null (Nothing in Visual Basic) may be passed to indicate no action is taken.</source>
          <target state="translated">NULL (Nothing in Visual Basic) kann übergeben werden. Damit wird angegeben, dass keine Aktion ausgeführt wird.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Threading.Barrier.#ctor(System.Int32,System.Action{System.Threading.Barrier})">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Threading.Barrier" /&gt;</ph> class.</source>
          <target state="translated">Initialisiert eine neue Instanz der <ph id="ph1">&lt;see cref="T:System.Threading.Barrier" /&gt;</ph>-Klasse.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Barrier.#ctor(System.Int32,System.Action{System.Threading.Barrier})">
          <source>The <ph id="ph1">`postPhaseAction`</ph> delegate will be executed after all participants have arrived at the barrier in one phase.</source>
          <target state="translated">Die <ph id="ph1">`postPhaseAction`</ph> Delegat ausgeführt wird, nachdem alle Teilnehmer die Barriere in einer Phase erreicht haben.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Barrier.#ctor(System.Int32,System.Action{System.Threading.Barrier})">
          <source>The participants will not be released to the next phase until the postPhaseAction delegate has completed execution.</source>
          <target state="translated">Der Teilnehmer werden nicht freigegeben werden, auf die nächste Phase, bis der PostPhaseAction Delegat Ausführung abgeschlossen ist.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Threading.Barrier.#ctor(System.Int32,System.Action{System.Threading.Barrier})">
          <source><ph id="ph1">&lt;paramref name="participantCount" /&gt;</ph> is less than 0 or greater than 32,767.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="participantCount" /&gt;</ph> ist kleiner als 0 oder größer als 32.767.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Threading.Barrier.AddParticipant">
          <source>Notifies the <ph id="ph1">&lt;see cref="T:System.Threading.Barrier" /&gt;</ph> that there will be an additional participant.</source>
          <target state="translated">Benachrichtigt <ph id="ph1">&lt;see cref="T:System.Threading.Barrier" /&gt;</ph> über das Vorhandensein eines weiteren Teilnehmers.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Threading.Barrier.AddParticipant">
          <source>The phase number of the barrier in which the new participants will first participate.</source>
          <target state="translated">Die Phasennummer der Grenze, an der die neuen Teilnehmer zuerst teilnehmen.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Barrier.AddParticipant">
          <source>If the barrier is currently executing a post phase action, this call is blocked until the post phase action completes and the barrier has moved on to the next phase.</source>
          <target state="translated">Wenn die Grenze gerade eine Aktion nach dem Phase ausgeführt wird, ist dieser Aufruf blockiert, bis die Aktion der Post-Phase abgeschlossen ist und die Grenze auf zur nächsten Phase verschoben wurde.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Threading.Barrier.AddParticipant">
          <source>The current instance has already been disposed.</source>
          <target state="translated">Die aktuelle Instanz wurde bereits verworfen.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Threading.Barrier.AddParticipant">
          <source>Adding a participant would cause the barrier's participant count to exceed 32,767.</source>
          <target state="translated">Einen Teilnehmer hinzuzufügen würde verursachen, dass die Teilnehmeranzahl der Barriere 32.767 überschreitet.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Threading.Barrier.AddParticipant">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Threading.Barrier.AddParticipant">
          <source>The method was invoked from within a post-phase action.</source>
          <target state="translated">Die Methode wurde aus einer Postphasenaktion aufgerufen.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Threading.Barrier.AddParticipants(System.Int32)">
          <source>The number of additional participants to add to the barrier.</source>
          <target state="translated">Die Anzahl zusätzlicher Teilnehmer, die der Grenze hinzugefügt werden soll.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Threading.Barrier.AddParticipants(System.Int32)">
          <source>Notifies the <ph id="ph1">&lt;see cref="T:System.Threading.Barrier" /&gt;</ph> that there will be additional participants.</source>
          <target state="translated">Benachrichtigt <ph id="ph1">&lt;see cref="T:System.Threading.Barrier" /&gt;</ph> über das Vorhandensein weiterer Teilnehmer.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Threading.Barrier.AddParticipants(System.Int32)">
          <source>The phase number of the barrier in which the new participants will first participate.</source>
          <target state="translated">Die Phasennummer der Grenze, an der die neuen Teilnehmer zuerst teilnehmen.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Barrier.AddParticipants(System.Int32)">
          <source>If the barrier is currently executing a post phase action, this call is blocked until the post phase action completes and the barrier has moved on to the next phase.</source>
          <target state="translated">Wenn die Grenze gerade eine Aktion nach dem Phase ausgeführt wird, ist dieser Aufruf blockiert, bis die Aktion der Post-Phase abgeschlossen ist und die Grenze auf zur nächsten Phase verschoben wurde.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Threading.Barrier.AddParticipants(System.Int32)">
          <source>The current instance has already been disposed.</source>
          <target state="translated">Die aktuelle Instanz wurde bereits verworfen.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Threading.Barrier.AddParticipants(System.Int32)">
          <source><ph id="ph1">&lt;paramref name="participantCount" /&gt;</ph> is less than 0.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="participantCount" /&gt;</ph> ist kleiner als 0.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Threading.Barrier.AddParticipants(System.Int32)">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Threading.Barrier.AddParticipants(System.Int32)">
          <source>Adding <ph id="ph1">&lt;paramref name="participantCount" /&gt;</ph> participants would cause the barrier's participant count to exceed 32,767.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="participantCount" /&gt;</ph>-Teilnehmer hinzuzufügen würde verursachen, dass die Teilnehmeranzahl der Barriere 32.767 überschreitet.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Threading.Barrier.AddParticipants(System.Int32)">
          <source>The method was invoked from within a post-phase action.</source>
          <target state="translated">Die Methode wurde aus einer Postphasenaktion aufgerufen.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="P:System.Threading.Barrier.CurrentPhaseNumber">
          <source>Gets the number of the barrier's current phase.</source>
          <target state="translated">Ruft die Nummer der aktuellen Phase der Grenze ab.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Threading.Barrier.CurrentPhaseNumber">
          <source>Returns the number of the barrier's current phase.</source>
          <target state="translated">Gibt die Nummer der aktuellen Phase der Grenze zurück.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="T:System.Threading.Barrier">
          <source>Releases resources used by the current instance of the <ph id="ph1">&lt;see cref="T:System.Threading.Barrier" /&gt;</ph> class.</source>
          <target state="translated">Gibt die von der aktuellen Instanz der <ph id="ph1">&lt;see cref="T:System.Threading.Barrier" /&gt;</ph>-Klasse verwendeten Ressourcen frei.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Threading.Barrier.Dispose">
          <source>Releases all resources used by the current instance of the <ph id="ph1">&lt;see cref="T:System.Threading.Barrier" /&gt;</ph> class.</source>
          <target state="translated">Gibt alle von der aktuellen Instanz der <ph id="ph1">&lt;see cref="T:System.Threading.Barrier" /&gt;</ph>-Klasse verwendeten Ressourcen frei.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Barrier.Dispose">
          <source>Call <ph id="ph1">`Dispose`</ph> when you are finished using the <ph id="ph2">&lt;xref:System.Threading.Barrier&gt;</ph>.</source>
          <target state="translated">Rufen Sie <ph id="ph1">`Dispose`</ph> auf, wenn Sie <ph id="ph2">&lt;xref:System.Threading.Barrier&gt;</ph> nicht mehr benötigen.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Barrier.Dispose">
          <source>The <ph id="ph1">`Dispose`</ph> method leaves the <ph id="ph2">&lt;xref:System.Threading.Barrier&gt;</ph> in an unusable state.</source>
          <target state="translated">Die <ph id="ph1">`Dispose`</ph>-Methode bewirkt, dass <ph id="ph2">&lt;xref:System.Threading.Barrier&gt;</ph> nicht mehr verwendet werden kann.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Barrier.Dispose">
          <source>After calling <ph id="ph1">`Dispose`</ph>, you must release all references to the <ph id="ph2">&lt;xref:System.Threading.Barrier&gt;</ph> so the garbage collector can reclaim the memory that the <ph id="ph3">&lt;xref:System.Threading.Barrier&gt;</ph> was occupying.</source>
          <target state="translated">Nach dem Aufruf <ph id="ph1">`Dispose`</ph>, müssen Sie alle Verweise auf Freigeben der <ph id="ph2">&lt;xref:System.Threading.Barrier&gt;</ph> , damit der Garbage Collector den Arbeitsspeicher freigeben kann, die die <ph id="ph3">&lt;xref:System.Threading.Barrier&gt;</ph> belegt wurde.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Barrier.Dispose">
          <source>For more information, see <bpt id="p1">[</bpt>Cleaning Up Unmanaged Resources<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept> and <bpt id="p2">[</bpt>Implementing a Dispose Method<ept id="p2">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</source>
          <target state="translated">Weitere Informationen finden Sie unter <bpt id="p1">[</bpt>Bereinigen von nicht verwalteten Ressourcen<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept> und <bpt id="p2">[</bpt>Implementieren einer Dispose-Methode<ept id="p2">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Barrier.Dispose">
          <source>Always call <ph id="ph1">`Dispose`</ph> before you release your last reference to the <ph id="ph2">&lt;xref:System.Threading.Barrier&gt;</ph>.</source>
          <target state="translated">Rufen Sie immer <ph id="ph1">`Dispose`</ph> auf, bevor Sie den letzten Verweis auf das <ph id="ph2">&lt;xref:System.Threading.Barrier&gt;</ph> freigeben.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Barrier.Dispose">
          <source>Otherwise, the resources it is using will not be freed until the garbage collector calls the <ph id="ph1">&lt;xref:System.Threading.Barrier&gt;</ph> object's <ph id="ph2">`Finalize`</ph> method.</source>
          <target state="translated">Andernfalls bleiben die verwendeten Ressourcen reserviert, bis die Garbage Collection die <ph id="ph1">&lt;xref:System.Threading.Barrier&gt;</ph>-Methode des <ph id="ph2">`Finalize`</ph>-Objekts aufruft.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Threading.Barrier.Dispose">
          <source>The method was invoked from within a post-phase action.</source>
          <target state="translated">Die Methode wurde aus einer Postphasenaktion aufgerufen.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Threading.Barrier.Dispose(System.Boolean)">
          <source>true to release both managed and unmanaged resources; false to release only unmanaged resources.</source>
          <target state="translated">true, um sowohl verwaltete als auch nicht verwaltete Ressourcen freizugeben, false, um nur nicht verwaltete Ressourcen freizugeben.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Threading.Barrier.Dispose(System.Boolean)">
          <source>Releases the unmanaged resources used by the <ph id="ph1">&lt;see cref="T:System.Threading.Barrier" /&gt;</ph>, and optionally releases the managed resources.</source>
          <target state="translated">Gibt die von <ph id="ph1">&lt;see cref="T:System.Threading.Barrier" /&gt;</ph> verwendeten nicht verwalteten Ressourcen und optional die verwalteten Ressourcen frei.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Barrier.Dispose(System.Boolean)">
          <source>Unlike most of the members of <ph id="ph1">&lt;xref:System.Threading.Barrier&gt;</ph>, Dispose is not thread-safe and may not be used concurrently with other members of this instance.</source>
          <target state="translated">Im Gegensatz zu den Großteil der Mitglieder <ph id="ph1">&lt;xref:System.Threading.Barrier&gt;</ph>, Dispose ist nicht threadsicher und können nicht gleichzeitig mit anderen Mitgliedern dieser Instanz verwendet werden.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="P:System.Threading.Barrier.ParticipantCount">
          <source>Gets the total number of participants in the barrier.</source>
          <target state="translated">Ruft die Gesamtanzahl von Teilnehmern für die Grenze ab.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Threading.Barrier.ParticipantCount">
          <source>Returns the total number of participants in the barrier.</source>
          <target state="translated">Gibt die Gesamtanzahl von Teilnehmern für die Grenze zurück.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="P:System.Threading.Barrier.ParticipantsRemaining">
          <source>Gets the number of participants in the barrier that haven’t yet signaled in the current phase.</source>
          <target state="translated">Ruft die Anzahl von Teilnehmern für die Grenze ab, die in der aktuellen Phase noch nicht signalisiert haben.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Threading.Barrier.ParticipantsRemaining">
          <source>Returns the number of participants in the barrier that haven’t yet signaled in the current phase.</source>
          <target state="translated">Gibt die Anzahl von Teilnehmern für die Grenze zurück, die in der aktuellen Phase noch nicht signalisiert haben.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Threading.Barrier.ParticipantsRemaining">
          <source>This could be 0 during a post-phase action delegate execution or if the ParticipantCount is 0.</source>
          <target state="translated">Dies kann eine Nachphasenaktion Delegaten Ausführung 0 sein, oder wenn der ParticipantCount 0 ist.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Threading.Barrier.RemoveParticipant">
          <source>Notifies the <ph id="ph1">&lt;see cref="T:System.Threading.Barrier" /&gt;</ph> that there will be one less participant.</source>
          <target state="translated">Benachrichtigt <ph id="ph1">&lt;see cref="T:System.Threading.Barrier" /&gt;</ph>, dass ein Teilnehmer nicht mehr vorhanden ist.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Threading.Barrier.RemoveParticipant">
          <source>The current instance has already been disposed.</source>
          <target state="translated">Die aktuelle Instanz wurde bereits verworfen.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Threading.Barrier.RemoveParticipant">
          <source>The barrier already has 0 participants.</source>
          <target state="translated">Die Barriere hat bereits 0 Teilnehmer.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Threading.Barrier.RemoveParticipant">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Threading.Barrier.RemoveParticipant">
          <source>The method was invoked from within a post-phase action.</source>
          <target state="translated">Die Methode wurde aus einer Postphasenaktion aufgerufen.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Threading.Barrier.RemoveParticipants(System.Int32)">
          <source>The number of additional participants to remove from the barrier.</source>
          <target state="translated">Die Anzahl zusätzlicher Teilnehmer, die aus der Grenze entfernt werden sollen.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Threading.Barrier.RemoveParticipants(System.Int32)">
          <source>Notifies the <ph id="ph1">&lt;see cref="T:System.Threading.Barrier" /&gt;</ph> that there will be fewer participants.</source>
          <target state="translated">Benachrichtigt <ph id="ph1">&lt;see cref="T:System.Threading.Barrier" /&gt;</ph> über die geringere Anzahl von Teilnehmern.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Barrier.RemoveParticipants(System.Int32)">
          <source>If <ph id="ph1">`participantCount`</ph> participants are already waiting on the barrier, this removal fulfills the barrier, the post phase action is executed and all of the participants are woken as if this participant being removed had successfully reached the barrier.</source>
          <target state="translated">Wenn <ph id="ph1">`participantCount`</ph> Teilnehmer sind bereits in der Grenze warten, erfüllt diese Löschung die Grenze, die Aktion die Post-Phase ausgeführt wird und alle Teilnehmer reaktiviert werden, als ob dieser Teilnehmer entfernten erfolgreich die Barriere erreicht hatte.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.Threading.Barrier.RemoveParticipants(System.Int32)">
          <source>The current instance has already been disposed.</source>
          <target state="translated">Die aktuelle Instanz wurde bereits verworfen.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.Threading.Barrier.RemoveParticipants(System.Int32)">
          <source>The total participant count is less than the specified <ph id="ph1">&lt;paramref name="participantCount" /&gt;</ph></source>
          <target state="translated">Die gesamte Teilnehmeranzahl ist kleiner als der angegebene <ph id="ph1">&lt;paramref name="participantCount" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.Threading.Barrier.RemoveParticipants(System.Int32)">
          <source>The barrier already has 0 participants.</source>
          <target state="translated">Die Barriere hat bereits 0 Teilnehmer.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Threading.Barrier.RemoveParticipants(System.Int32)">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Threading.Barrier.RemoveParticipants(System.Int32)">
          <source>The method was invoked from within a post-phase action.</source>
          <target state="translated">Die Methode wurde aus einer Postphasenaktion aufgerufen.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Threading.Barrier.RemoveParticipants(System.Int32)">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.Threading.Barrier.RemoveParticipants(System.Int32)">
          <source>current participant count is less than the specified participantCount</source>
          <target state="translated">aktuelle Teilnehmeranzahl ist kleiner als der angegebene participantCount</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="T:System.Threading.Barrier">
          <source>Signals that a participant has reached the barrier and waits for all other participants to reach the barrier as well.</source>
          <target state="translated">Signalisiert, dass ein Teilnehmer die Barriere erreicht hat und darauf wartet, dass alle anderen Teilnehmer die Barriere ebenfalls erreichen.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.Threading.Barrier.SignalAndWait">
          <source>Signals that a participant has reached the barrier and waits for all other participants to reach the barrier as well.</source>
          <target state="translated">Signalisiert, dass ein Teilnehmer die Barriere erreicht hat und darauf wartet, dass alle anderen Teilnehmer die Barriere ebenfalls erreichen.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.Threading.Barrier.SignalAndWait">
          <source>The current instance has already been disposed.</source>
          <target state="translated">Die aktuelle Instanz wurde bereits verworfen.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.Threading.Barrier.SignalAndWait">
          <source>The method was invoked from within a post-phase action, the barrier currently has 0 participants, or the barrier is signaled by more threads than are registered as participants.</source>
          <target state="translated">Die Methode wurde innerhalb einer Postphasenaktion aufgerufen, die Barriere hat derzeit 0 Teilnehmer, oder die Barriere wird von mehr Threads gemeldet als Teilnehmer registriert sind.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.Threading.Barrier.SignalAndWait">
          <source>If an exception is thrown from the post phase action of a Barrier after all participating threads have called SignalAndWait, the exception will be wrapped in a BarrierPostPhaseException and be thrown on all participating threads.</source>
          <target state="translated">Wenn eine Ausnahme aus der Post-Phasenaktion einer Grenze ausgelöst wird, nachdem alle teilnehmenden Threads SignalAndWait aufgerufen haben, wird die Ausnahme in einer BarrierPostPhaseException umbrochen und für alle teilnehmenden Threads ausgelöst.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.Threading.Barrier.SignalAndWait(System.Int32)">
          <source>The number of milliseconds to wait, or <ph id="ph1">&lt;see cref="F:System.Threading.Timeout.Infinite" /&gt;</ph>(-1) to wait indefinitely.</source>
          <target state="translated">Die Anzahl von Millisekunden, die gewartet wird, oder <ph id="ph1">&lt;see cref="F:System.Threading.Timeout.Infinite" /&gt;</ph> (-1) für Warten ohne Timeout.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.Threading.Barrier.SignalAndWait(System.Int32)">
          <source>Signals that a participant has reached the barrier and waits for all other participants to reach the barrier as well, using a 32-bit signed integer to measure the timeout.</source>
          <target state="translated">Signalisiert, dass ein Teilnehmer die Barriere erreicht hat und darauf wartet, dass alle anderen Teilnehmer die Barriere ebenfalls erreichen. Dabei wird eine 32-Bit-Ganzzahl mit Vorzeichen zum Messen des Timeouts verwendet.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.Threading.Barrier.SignalAndWait(System.Int32)">
          <source>if all participants reached the barrier within the specified time; otherwise false.</source>
          <target state="translated">wenn alle Teilnehmer die Grenze innerhalb der angegebenen Zeit erreicht haben, andernfalls false.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.Threading.Barrier.SignalAndWait(System.Int32)">
          <source>The current instance has already been disposed.</source>
          <target state="translated">Die aktuelle Instanz wurde bereits verworfen.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.Threading.Barrier.SignalAndWait(System.Int32)">
          <source><ph id="ph1">&lt;paramref name="millisecondsTimeout" /&gt;</ph> is a negative number other than -1, which represents an infinite time-out.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="millisecondsTimeout" /&gt;</ph> ist eine negative Zahl, jedoch nicht -1, was einen unbeschränkten Timeout darstellt.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.Threading.Barrier.SignalAndWait(System.Int32)">
          <source>The method was invoked from within a post-phase action, the barrier currently has 0 participants, or the barrier is signaled by more threads than are registered as participants.</source>
          <target state="translated">Die Methode wurde innerhalb einer Postphasenaktion aufgerufen, die Barriere hat derzeit 0 Teilnehmer, oder die Barriere wird von mehr Threads gemeldet als Teilnehmer registriert sind.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.Threading.Barrier.SignalAndWait(System.Int32)">
          <source>If an exception is thrown from the post phase action of a Barrier after all participating threads have called SignalAndWait, the exception will be wrapped in a BarrierPostPhaseException and be thrown on all participating threads.</source>
          <target state="translated">Wenn eine Ausnahme aus der Post-Phasenaktion einer Grenze ausgelöst wird, nachdem alle teilnehmenden Threads SignalAndWait aufgerufen haben, wird die Ausnahme in einer BarrierPostPhaseException umbrochen und für alle teilnehmenden Threads ausgelöst.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.Threading.Barrier.SignalAndWait(System.Threading.CancellationToken)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Threading.CancellationToken" /&gt;</ph> to observe.</source>
          <target state="translated">Das zu überwachende <ph id="ph1">&lt;see cref="T:System.Threading.CancellationToken" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.Threading.Barrier.SignalAndWait(System.Threading.CancellationToken)">
          <source>Signals that a participant has reached the barrier and waits for all other participants to reach the barrier, while observing a cancellation token.</source>
          <target state="translated">Signalisiert, dass ein Teilnehmer die Barriere erreicht hat und darauf wartet, dass alle anderen Teilnehmer die Barriere erreichen. Dabei wird ein Abbruchtoken überwacht.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.Threading.Barrier.SignalAndWait(System.Threading.CancellationToken)">
          <source><ph id="ph1">&lt;paramref name="cancellationToken" /&gt;</ph> has been canceled.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="cancellationToken" /&gt;</ph> wurde abgebrochen.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.Threading.Barrier.SignalAndWait(System.Threading.CancellationToken)">
          <source>The current instance has already been disposed.</source>
          <target state="translated">Die aktuelle Instanz wurde bereits verworfen.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:System.Threading.Barrier.SignalAndWait(System.Threading.CancellationToken)">
          <source>The method was invoked from within a post-phase action, the barrier currently has 0 participants, or the barrier is signaled by more threads than are registered as participants.</source>
          <target state="translated">Die Methode wurde innerhalb einer Postphasenaktion aufgerufen, die Barriere hat derzeit 0 Teilnehmer, oder die Barriere wird von mehr Threads gemeldet als Teilnehmer registriert sind.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:System.Threading.Barrier.SignalAndWait(System.TimeSpan)">
          <source>A <ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph> that represents the number of milliseconds to wait, or a <ph id="ph2">&lt;see cref="T:System.TimeSpan" /&gt;</ph> that represents -1 milliseconds to wait indefinitely.</source>
          <target state="translated">Eine <ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph>-Struktur, die die Anzahl der zu wartenden Millisekunden angibt, oder eine <ph id="ph2">&lt;see cref="T:System.TimeSpan" /&gt;</ph>-Struktur, die -1 Millisekunden zum unendlichen Warten angibt.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.Threading.Barrier.SignalAndWait(System.TimeSpan)">
          <source>Signals that a participant has reached the barrier and waits for all other participants to reach the barrier as well, using a <ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph> object to measure the time interval.</source>
          <target state="translated">Signalisiert, dass ein Teilnehmer die Barriere erreicht hat und darauf wartet, dass alle anderen Teilnehmer die Barriere ebenfalls erreichen. Dabei wird das Zeitintervall mit einem <ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph>-Objekt gemessen.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="M:System.Threading.Barrier.SignalAndWait(System.TimeSpan)">
          <source>true if all other participants reached the barrier; otherwise, false.</source>
          <target state="translated">True, wenn alle anderen Teilnehmer die Grenze erreicht haben, andernfalls false.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="M:System.Threading.Barrier.SignalAndWait(System.TimeSpan)">
          <source>The current instance has already been disposed.</source>
          <target state="translated">Die aktuelle Instanz wurde bereits verworfen.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:System.Threading.Barrier.SignalAndWait(System.TimeSpan)">
          <source><ph id="ph1">&lt;paramref name="timeout" /&gt;</ph> is a negative number other than -1 milliseconds, which represents an infinite time-out, or it is greater than 32,767.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="timeout" /&gt;</ph> ist eine negative Zahl ungleich -1 Millisekunden, die ein unendliches Timeout darstellt, oder ist größer als 32.767.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="M:System.Threading.Barrier.SignalAndWait(System.TimeSpan)">
          <source>The method was invoked from within a post-phase action, the barrier currently has 0 participants, or the barrier is signaled by more threads than are registered as participants.</source>
          <target state="translated">Die Methode wurde innerhalb einer Postphasenaktion aufgerufen, die Barriere hat derzeit 0 Teilnehmer, oder die Barriere wird von mehr Threads gemeldet als Teilnehmer registriert sind.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="M:System.Threading.Barrier.SignalAndWait(System.Int32,System.Threading.CancellationToken)">
          <source>The number of milliseconds to wait, or <ph id="ph1">&lt;see cref="F:System.Threading.Timeout.Infinite" /&gt;</ph>(-1) to wait indefinitely.</source>
          <target state="translated">Die Anzahl von Millisekunden, die gewartet wird, oder <ph id="ph1">&lt;see cref="F:System.Threading.Timeout.Infinite" /&gt;</ph> (-1) für Warten ohne Timeout.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.Threading.Barrier.SignalAndWait(System.Int32,System.Threading.CancellationToken)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Threading.CancellationToken" /&gt;</ph> to observe.</source>
          <target state="translated">Das zu überwachende <ph id="ph1">&lt;see cref="T:System.Threading.CancellationToken" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.Threading.Barrier.SignalAndWait(System.Int32,System.Threading.CancellationToken)">
          <source>Signals that a participant has reached the barrier and waits for all other participants to reach the barrier as well, using a 32-bit signed integer to measure the timeout, while observing a cancellation token.</source>
          <target state="translated">Signalisiert, dass ein Teilnehmer die Barriere erreicht hat und darauf wartet, dass alle anderen Teilnehmer die Barriere ebenfalls erreichen. Dabei wird eine 32-Bit-Ganzzahl mit Vorzeichen zum Messen des Timeouts verwendet und ein Abbruchtoken berücksichtigt.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.Threading.Barrier.SignalAndWait(System.Int32,System.Threading.CancellationToken)">
          <source>if all participants reached the barrier within the specified time; otherwise false</source>
          <target state="translated">wenn alle Teilnehmer die Grenze innerhalb der angegebenen Zeit erreicht haben, andernfalls false.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Barrier.SignalAndWait(System.Int32,System.Threading.CancellationToken)">
          <source>If the <ph id="ph1">`cancellationToken`</ph> was canceled before the signal took effect, then an <ph id="ph2">&lt;xref:System.OperationCanceledException&gt;</ph> is thrown and the <ph id="ph3">&lt;xref:System.Threading.Barrier.ParticipantsRemaining%2A&gt;</ph> value is not decreased.</source>
          <target state="translated">Wenn die <ph id="ph1">`cancellationToken`</ph> wurde abgebrochen, bevor das Signal wirksam geworden ein <ph id="ph2">&lt;xref:System.OperationCanceledException&gt;</ph> wird ausgelöst, und die <ph id="ph3">&lt;xref:System.Threading.Barrier.ParticipantsRemaining%2A&gt;</ph> Wert ist nicht verringert.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Barrier.SignalAndWait(System.Int32,System.Threading.CancellationToken)">
          <source>If the <ph id="ph1">`cancellationToken`</ph> is not canceled or is canceled after the signal takes effect then <ph id="ph2">&lt;xref:System.Threading.Barrier.ParticipantsRemaining%2A&gt;</ph> is decreased and no <ph id="ph3">&lt;xref:System.OperationCanceledException&gt;</ph> is thrown.</source>
          <target state="translated">Wenn die <ph id="ph1">`cancellationToken`</ph> nicht abgebrochen wird oder abgebrochen wird, nachdem das Signal klicken Sie dann in Kraft <ph id="ph2">&lt;xref:System.Threading.Barrier.ParticipantsRemaining%2A&gt;</ph> wird verringert und es wird kein <ph id="ph3">&lt;xref:System.OperationCanceledException&gt;</ph> ausgelöst wird.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.Threading.Barrier.SignalAndWait(System.Int32,System.Threading.CancellationToken)">
          <source><ph id="ph1">&lt;paramref name="cancellationToken" /&gt;</ph> has been canceled.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="cancellationToken" /&gt;</ph> wurde abgebrochen.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.Threading.Barrier.SignalAndWait(System.Int32,System.Threading.CancellationToken)">
          <source>The current instance has already been disposed.</source>
          <target state="translated">Die aktuelle Instanz wurde bereits verworfen.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="M:System.Threading.Barrier.SignalAndWait(System.Int32,System.Threading.CancellationToken)">
          <source><ph id="ph1">&lt;paramref name="millisecondsTimeout" /&gt;</ph> is a negative number other than -1, which represents an infinite time-out.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="millisecondsTimeout" /&gt;</ph> ist eine negative Zahl, jedoch nicht -1, was einen unbeschränkten Timeout darstellt.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="M:System.Threading.Barrier.SignalAndWait(System.Int32,System.Threading.CancellationToken)">
          <source>The method was invoked from within a post-phase action, the barrier currently has 0 participants, or the barrier is signaled by more threads than are registered as participants.</source>
          <target state="translated">Die Methode wurde innerhalb einer Postphasenaktion aufgerufen, die Barriere hat derzeit 0 Teilnehmer, oder die Barriere wird von mehr Threads gemeldet als Teilnehmer registriert sind.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="M:System.Threading.Barrier.SignalAndWait(System.TimeSpan,System.Threading.CancellationToken)">
          <source>A <ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph> that represents the number of milliseconds to wait, or a <ph id="ph2">&lt;see cref="T:System.TimeSpan" /&gt;</ph> that represents -1 milliseconds to wait indefinitely.</source>
          <target state="translated">Eine <ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph>-Struktur, die die Anzahl der zu wartenden Millisekunden angibt, oder eine <ph id="ph2">&lt;see cref="T:System.TimeSpan" /&gt;</ph>-Struktur, die -1 Millisekunden zum unendlichen Warten angibt.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="M:System.Threading.Barrier.SignalAndWait(System.TimeSpan,System.Threading.CancellationToken)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Threading.CancellationToken" /&gt;</ph> to observe.</source>
          <target state="translated">Das zu überwachende <ph id="ph1">&lt;see cref="T:System.Threading.CancellationToken" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="M:System.Threading.Barrier.SignalAndWait(System.TimeSpan,System.Threading.CancellationToken)">
          <source>Signals that a participant has reached the barrier and waits for all other participants to reach the barrier as well, using a <ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph> object to measure the time interval, while observing a cancellation token.</source>
          <target state="translated">Signalisiert, dass ein Teilnehmer die Barriere erreicht hat und darauf wartet, dass alle anderen Teilnehmer die Barriere ebenfalls erreichen. Dabei wird das Zeitintervall mit einem <ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph>-Objekt gemessen und ein Abbruchtoken berücksichtigt.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="M:System.Threading.Barrier.SignalAndWait(System.TimeSpan,System.Threading.CancellationToken)">
          <source>true if all other participants reached the barrier; otherwise, false.</source>
          <target state="translated">True, wenn alle anderen Teilnehmer die Grenze erreicht haben, andernfalls false.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="M:System.Threading.Barrier.SignalAndWait(System.TimeSpan,System.Threading.CancellationToken)">
          <source><ph id="ph1">&lt;paramref name="cancellationToken" /&gt;</ph> has been canceled.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="cancellationToken" /&gt;</ph> wurde abgebrochen.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:System.Threading.Barrier.SignalAndWait(System.TimeSpan,System.Threading.CancellationToken)">
          <source>The current instance has already been disposed.</source>
          <target state="translated">Die aktuelle Instanz wurde bereits verworfen.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="M:System.Threading.Barrier.SignalAndWait(System.TimeSpan,System.Threading.CancellationToken)">
          <source><ph id="ph1">&lt;paramref name="timeout" /&gt;</ph> is a negative number other than -1 milliseconds, which represents an infinite time-out.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="timeout" /&gt;</ph> ist eine negative Zahl ungleich -1 Millisekunden, die ein unendliches Timeout darstellt.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:System.Threading.Barrier.SignalAndWait(System.TimeSpan,System.Threading.CancellationToken)">
          <source>The method was invoked from within a post-phase action, the barrier currently has 0 participants, or the barrier is signaled by more threads than are registered as participants.</source>
          <target state="translated">Die Methode wurde innerhalb einer Postphasenaktion aufgerufen, die Barriere hat derzeit 0 Teilnehmer, oder die Barriere wird von mehr Threads gemeldet als Teilnehmer registriert sind.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>